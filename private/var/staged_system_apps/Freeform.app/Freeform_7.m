double sub_100721AD8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  void *Strong;
  id v13;
  id v14;
  double result;
  _BYTE *v16;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100F07E18);
  v5 = sub_10073138C();
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                               + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
    v10 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v9, v9, v9);
    v11 = (char *)*(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
    swift_retain(KeyPath);
    v16 = (_BYTE *)sub_100738CDC(v11, v7, v8, KeyPath, a1);

    swift_release(KeyPath);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    v13 = objc_msgSend(Strong, "commandController");

    if (v13)
    {
      v14 = v10;
      sub_1006A5F54(v16, 0, v10, 4, 0);

    }
    sub_10073259C(KeyPath, &qword_1013EFC20);
    swift_release(KeyPath);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2939, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2939, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

void sub_100721DF8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;

  v1 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
    v3 = v1;
    if (v2)
    {
      sub_1007D484C();

    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_100721EC0()
{
  uint64_t v0;
  void *result;
  void *v2;
  id v3;
  uint64_t v4;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (result)
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
      __break(1u);
      return result;
    }
    v2 = result;
    v3 = objc_msgSend(result, "layoutForInfo:");

    if (v3)
    {
      v4 = type metadata accessor for CRLWPLayout();
      result = (void *)swift_dynamicCastClass(v3, v4);
      if (result)
        return result;

    }
    return 0;
  }
  return result;
}

char *sub_100721FC0(void *a1, char *a2, void *a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  __n128 v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  _QWORD *Strong;
  void *v25;
  uint64_t (*v26)(void);
  char *v27;
  void *v28;
  uint64_t v29;
  char *result;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  id v37;
  objc_class *v38;
  char *v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  _QWORD *v43;
  _OWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat *v50;
  CGFloat *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  id v55;
  char *v56;
  void *v57;
  char *v58;
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  char *v81;
  objc_super v82;
  objc_super v83;

  v4 = v3;
  v7 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle] = 0;
  v8 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_autocorrectionKeys;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_autocorrectionKeys] = &_swiftEmptySetSingleton;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_disableSmartQuotes] = 0;
  v9 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_wantsVisibleKeyboard] = 1;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides] = 1;
  v76 = OBJC_IVAR____TtC8Freeform11CRLWPEditor__textSelectionDelegate;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor__textSelectionDelegate] = 0;
  v78 = OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___textEditingInputAccessoryStateManager;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___textEditingInputAccessoryStateManager] = 1;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_selectionBeingSetFromGestures] = 0;
  v75 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastCursor;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastCursor] = 0;
  v77 = OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___editMenu;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___editMenu] = 1;
  v10 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_baseWritingDirectionForInsertion];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v74 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_autoscroll;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_autoscroll] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastKeyDownTime] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isUserTypingAhead] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_suppressBreaks] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_suppressTabs] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editableTextSelectionForceGestureInProgress] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_initialPressTextSelectionGranularity] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_selectionSetFromSingleTap] = 0;
  v73 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_listDragAnimator;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_listDragAnimator] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isBecomingActive] = 0;
  v72 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_collabIsSuspendedByThisEditor] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_shouldPreventQuickSelect] = 1;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_gestureBeganWhenEditingBegan] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_readyToEnd] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_shouldQueueBeginScribbleMode] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_suppressEditMenuForIndirectGesture] = 0;
  v70 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_mostRecentGestureKind;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_mostRecentGestureKind] = 0;
  v71 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_fidgetResolver;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_fidgetResolver] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_shouldShowEditMenuForInsertionPoint] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_coalescingText] = 0;
  v69 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_dictationInterpretations;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_dictationInterpretations] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_ignoreFutureImmediatePresses] = 0;
  v68 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_tapInfo;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_tapInfo] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_shouldUseModernTextGestures] = 1;
  v67 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_magnifier;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_magnifier] = 0;
  v11 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobTrackingDragPoint];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_firstTapUnscaledPoint];
  *v12 = 0;
  v12[1] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobTracking] = 0;
  v66 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobTracker;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobTracker] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobTag] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobTrackingTapCount] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_wantsParagraphMode] = 0;
  v13 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_originalSelectionRange];
  *v13 = 0x7FFFFFFFFFFFFFFFLL;
  v13[1] = 0;
  v14 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_knobToTouchOffset];
  *v14 = 0;
  v14[1] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_twoFingerPanGestureInProgress] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_canIgnoreEvent] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isSelectingCaret] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_gestureIsSuppressingKnobs] = 0;
  v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_pinchAndHalfDidStart] = 0;
  v15 = &v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastSingleImmediateTapTime];
  v16 = v4;
  v65 = v15;
  static Date.now.getter(v17);
  *((_BYTE *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_selectionRangeDidChange) = 0;
  *((_BYTE *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_preventSelectionChanges) = 0;
  *((_BYTE *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_disallowEditingOfTextString) = 0;
  *((_BYTE *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_isDragAndDropBeginning) = 0;
  v64 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_dragRep;
  *(_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_dragRep) = 0;
  v18 = objc_msgSend(a3, "editorController");
  if (!v18)
  {
    v19 = a2;
    v23 = a3;
    goto LABEL_9;
  }
  v19 = v18;
  v20 = v7;
  v21 = v8;
  v22 = v9;
  v23 = a1;
  v63 = a3;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);
  if (!Strong
    || (v25 = Strong,
        v26 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2E8),
        v27 = a2,
        v28 = (void *)v26(),
        v27,
        v25,
        !v28))
  {

    a1 = v63;
    v9 = v22;
    v8 = v21;
    v7 = v20;
LABEL_9:

    swift_bridgeObjectRelease(*(_QWORD *)&v4[v8]);
    swift_unknownObjectWeakDestroy(v9);
    swift_unknownObjectRelease(*(_QWORD *)&v4[v76]);
    sub_1004CB49C(*(id *)&v4[v78]);

    sub_1004CB49C(*(id *)&v4[v77]);
    swift_release(*(_QWORD *)&v4[v72]);

    swift_unknownObjectRelease(*(_QWORD *)&v4[v67]);
    v60 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v65, v60);
    v61 = *(void **)((char *)v16 + v64);

    v62 = type metadata accessor for CRLWPEditor(0);
    swift_deallocPartialClassInstance(v16, v62, *(unsigned int *)((swift_isaMask & *v16) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v16) + 0x34));
    return 0;
  }
  *(_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator) = v23;
  v29 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  *(_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape) = v27;
  result = (char *)swift_unknownObjectWeakAssign(v22, v63);
  *(_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController) = v19;
  v31 = *(void **)&v27[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
  if (v31)
  {
    v32 = type metadata accessor for CRLWPDictationAndAutocorrectionCoordinator();
    v33 = swift_allocObject(v32, 41, 7);
    v81 = v27;
    v34 = v23;
    v79 = v19;
    v35 = v28;
    v36 = v31;
    *(_QWORD *)(v33 + 24) = sub_1008D6F64((uint64_t)_swiftEmptyArrayStorage);
    *(_BYTE *)(v33 + 40) = 0;
    v37 = objc_msgSend(objc_allocWithZone((Class)CRLSelectionModelTranslator), "init");
    v38 = (objc_class *)type metadata accessor for CRLSelectionPathValidator();
    v39 = (char *)objc_allocWithZone(v38);
    v40 = swift_unknownObjectWeakInit(&v39[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board]);
    swift_unknownObjectWeakAssign(v40, v35);
    *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v37;
    v83.receiver = v39;
    v83.super_class = v38;
    v41 = objc_msgSendSuper2(&v83, "init");

    *(_QWORD *)(v33 + 16) = v41;
    *(_QWORD *)(v33 + 32) = v36;
    *(_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_dictationAndAutocorrectionCoordinator) = v33;
    result = (char *)objc_msgSend(*(id *)(*(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_selectionDispatcher]+ OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_receivers), "addObject:", v33);
    v42 = (_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_adjustedDragPoint);
    *v42 = 0;
    v42[1] = 0;
    v43 = (_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_adjustedDragToNaturalPointOffset);
    *v43 = 0;
    v43[1] = 0;
    v44 = (_OWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_textFieldBounds);
    *v44 = 0u;
    v44[1] = 0u;
    v45 = (_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_selectionTargetToAdjustedDragOffset);
    *v45 = 0;
    v45[1] = 0;
    v46 = (_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_currentKnobPoint);
    *v46 = 0;
    v46[1] = 0;
    y = CGRectNull.origin.y;
    width = CGRectNull.size.width;
    height = CGRectNull.size.height;
    v50 = (CGFloat *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_currentTargetPinRect);
    *v50 = CGRectNull.origin.x;
    v50[1] = y;
    v50[2] = width;
    v50[3] = height;
    v51 = (CGFloat *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_currentStationaryPinRect);
    *v51 = CGRectNull.origin.x;
    v51[1] = y;
    v51[2] = width;
    v51[3] = height;
    v52 = (_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_selectedRangeAtPinchAndHalfStart);
    *v52 = 0x7FFFFFFFFFFFFFFFLL;
    v52[1] = 0;
    v53 = (_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_expectedWordSelectionAtPoint);
    *v53 = 0x7FFFFFFFFFFFFFFFLL;
    v53[1] = 0;
    v54 = *(_QWORD *)(*(_QWORD *)((char *)v16 + v29) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v54)
    {
      v55 = objc_msgSend(objc_allocWithZone((Class)CRLWPEditorHelper), "initWithTextSource:icc:layout:", v54, v63, 0);
      *(_QWORD *)((char *)v16 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper) = v55;

      v82.receiver = v16;
      v82.super_class = (Class)type metadata accessor for CRLWPEditor(0);
      v56 = (char *)objc_msgSendSuper2(&v82, "init");
      v57 = *(void **)&v56[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper];
      v58 = v56;
      v59 = v57;
      objc_msgSend(v59, "setEditor:", v58);

      return v56;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10072284C()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  _BYTE *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "textInputResponder");

    if (v3)
    {
      v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
      v9 = v4;
      if (*(uint64_t *)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress] < 1)
      {
        v6 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
        v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
        v7 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
        v8 = v4;
        if (v7)
          objc_msgSend(v7, "selectionWillChange:", v3);
        v3[v6] = 0;
      }
      else
      {
        v5 = v4;
      }

    }
  }
}

void sub_10072297C()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  _BYTE *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "textInputResponder");

    if (v3)
    {
      v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
      v9 = v4;
      if (*(uint64_t *)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress] < 1)
      {
        v6 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
        v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
        v7 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
        v8 = v4;
        if (v7)
          objc_msgSend(v7, "selectionDidChange:", v3);
        v3[v6] = 0;
      }
      else
      {
        v5 = v4;
      }

    }
  }
}

void sub_100722AAC()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "textInputResponder");

    if (v3)
    {
      v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
      v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
      v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
      v6 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
      v8 = v4;
      v7 = v4;
      if (v6)
        objc_msgSend(v6, "textWillChange:", v3);
      v3[v5] = 0;

    }
  }
}

void sub_100722BBC()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "textInputResponder");

    if (v3)
    {
      v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
      v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
      v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
      v6 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
      v8 = v4;
      v7 = v4;
      if (v6)
        objc_msgSend(v6, "textDidChange:", v3);
      v3[v5] = 0;

    }
  }
}

void sub_100722CCC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  sub_100722AAC();
  v2 = objc_msgSend((id)objc_opt_self(UIKeyboard), "activeKeyboard");
  objc_msgSend(v2, "removeAutocorrectPrompt");
  sub_10072F19C();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      sub_10072EB3C();
    else
      sub_10072EC44();

  }
  else
  {
    __break(1u);
  }
}

void sub_100722DCC()
{
  char *v0;
  void *Strong;
  char *v2;
  id v3;
  _QWORD v4[4];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  if (Strong)
  {
    v3 = Strong;
    if (objc_msgSend(Strong, "documentIsSharedReadOnly"))
    {
      v4[3] = type metadata accessor for CRLWPEditor(0);
      v4[0] = v0;
      v2 = v0;
      sub_1007233CC();

      sub_1004CB800((uint64_t)v4, &qword_1013E0230);
    }
    else
    {

    }
  }
}

void sub_100722FB4(void *a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    goto LABEL_11;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "editorController");

  if (!v4)
    goto LABEL_11;
  v5 = type metadata accessor for CRLWPEditor(0);
  v7 = objc_msgSend(v4, "currentEditorsOfClass:", swift_getObjCClassFromMetadata(v5, v6));

  v8 = sub_1004B804C((uint64_t *)&unk_1013EFDD0);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    v18 = v9 < 0 ? v9 : v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v9).n128_u64[0];
  if (v10 <= 0)
    goto LABEL_11;
  v12 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController;
  if ((objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "isChangingSelection", v11) & 1) != 0)goto LABEL_11;
  v13 = objc_msgSend(*(id *)(v1 + v12), "selectionForEditor:", v1);
  if (!v13)
    goto LABEL_11;
  v14 = v13;
  v15 = objc_opt_self(CRLWPSelection);
  v16 = swift_dynamicCastObjCClass(v14, v15);

  if (!v16)
    goto LABEL_11;
  if (a1)
  {
    v17 = *(id *)(v1 + v12);
    objc_msgSend(v17, "setSelection:forEditor:", a1, v1);

LABEL_11:
    return;
  }
  __break(1u);
}

id sub_10072317C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id result;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
  v4 = objc_msgSend(*(id *)(v1 + v2), "selectionForEditor:", v1);
  if (!v4)
    goto LABEL_10;
  v5 = v4;
  v6 = objc_opt_self(CRLWPSelection);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  v8 = v7;
  if (!v7)
    goto LABEL_8;
  result = objc_msgSend(v7, "isValid");
  if (!(_DWORD)result)
  {

LABEL_10:
    return 0;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v10)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)CRLWPSearchReference), "initWithStorage:selection:selectionPath:", v10, v8, v3);
    if (!v8)
    {

      return v8;
    }
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (Strong)
    {
      v12 = (void *)Strong;
      v13 = swift_allocObject(&unk_10127AFE0, 24, 7);
      *(_QWORD *)(v13 + 16) = v8;
      v17[4] = sub_10073DC54;
      v18 = v13;
      v17[0] = _NSConcreteStackBlock;
      v17[1] = *(_QWORD *)"";
      v17[2] = sub_1007233C8;
      v17[3] = &unk_10127AFF8;
      v14 = _Block_copy(v17);
      v15 = v18;
      v16 = v8;
      objc_msgSend(v12, "withLayoutForSelectionPath:performBlock:", v3, v14, swift_release(v15).n128_f64[0]);

      _Block_release(v14);
      return v8;
    }
LABEL_8:

    return v8;
  }
  __break(1u);
  return result;
}

id sub_100723358(void *a1, id a2)
{
  id result;
  uint64_t v5;

  objc_msgSend(a2, "setRootIndex:", 0);
  result = objc_msgSend(a1, "calculatePointFromSearchReference:", a2);
  if ((~v5 & 0x7FF0000000000000) != 0)
    return objc_msgSend(a2, "setSearchReferencePoint:");
  return result;
}

void sub_1007233CC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  NSSet v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;

  v12 = objc_msgSend(objc_allocWithZone((Class)NSMutableSet), "init");
  objc_msgSend(v12, "addObject:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape));
  v1 = v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "selectionModelTranslator");

    if (v4)
    {
      v13 = 0;
      v5 = v12;
      static Set._conditionallyBridgeFromObjectiveC(_:result:)();

      v6 = v13;
      if (v13)
      {
        v7.super.isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v6);
      }
      else
      {
        v7.super.isa = 0;
      }
      v8 = objc_msgSend(v4, "selectionPathForInfos:", v7.super.isa);

      if (v8)
      {
        v9 = (void *)swift_unknownObjectWeakLoadStrong(v1);
        if (v9)
        {
          v10 = v9;
          v11 = objc_msgSend(v9, "editorController");

          if (v11)
          {
            objc_msgSend(v11, "setSelectionPath:withFlags:", v8, 0x2000);

          }
        }

      }
    }
  }

}

double sub_100723670(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  char *v7;
  int v8;
  void *Strong;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = a1 & 1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&result = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_wantsVisibleKeyboard);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_wantsVisibleKeyboard) = a1;
  if (v8 != v3)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (Strong)
    {
      v10 = Strong;
      v11 = (char *)objc_msgSend(Strong, "textInputResponder");

      if (v11)
      {
        v12 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
        v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask];
        if (v13)
        {
          swift_retain(*(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask]);
          sub_1004B804C(&qword_1013E0210);
          Task.cancel()();
          swift_release(v13);
        }
        v14 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
        type metadata accessor for MainActor(0);
        v15 = v11;
        v16 = static MainActor.shared.getter(v15);
        v17 = (_QWORD *)swift_allocObject(&unk_10127AFB8, 40, 7);
        v17[2] = v16;
        v17[3] = &protocol witness table for MainActor;
        v17[4] = v15;
        v18 = sub_100618948((uint64_t)v7, (uint64_t)&unk_1013EFDC0, (uint64_t)v17);
        v19 = *(_QWORD *)&v11[v12];
        *(_QWORD *)&v11[v12] = v18;

        *(_QWORD *)&result = swift_release(v19).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_100723998()
{
  return sub_100723A2C((uint64_t (*)(void))sub_100C5819C);
}

Class sub_1007239B0(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  NSArray v6;

  v4 = a1;
  v5 = a3();

  if (v5)
  {
    sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6.super.isa = 0;
  }
  return v6.super.isa;
}

uint64_t sub_100723A20()
{
  return sub_100723A2C((uint64_t (*)(void))sub_100C58330);
}

uint64_t sub_100723A2C(uint64_t (*a1)(void))
{
  char *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  if (!objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
    return 0;
  v2 = (char *)sub_100723AB4();
  if (!v2)
    return 0;
  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController];
  v5 = v4;

  if (!v4)
    return 0;
  v6 = a1();
  swift_bridgeObjectRetain(v6);

  return v6;
}

void *sub_100723AB4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *Strong;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___textEditingInputAccessoryStateManager;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___textEditingInputAccessoryStateManager];
  v4 = v3;
  if (v3 == (void *)1)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
    v4 = Strong;
    if (Strong)
    {
      v6 = objc_msgSend(Strong, "editorController");
      if (v6)
      {
        v7 = v6;
        objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryStateManager());
        sub_1009B2348(v4, v1, v7);
        v4 = v8;
      }
      else
      {

        v4 = 0;
      }
    }
    v9 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v4;
    v10 = v4;
    sub_1004CB49C(v9);
  }
  sub_1004CB968(v3);
  return v4;
}

id sub_100723BF8(id result)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[2];
  _OWORD v14[2];

  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v2)
  {
    v3 = result;
    v4 = v2;
    v5 = objc_msgSend(v3, "range");
    v7 = objc_msgSend(v4, "textRangeForParagraphsInCharRange:", v5, v6);
    v9 = v8;

    result = objc_msgSend(v3, "copyWithNewRange:", v7, v9);
    if (result)
    {
      v10 = result;
      _bridgeAnyObjectToAny(_:)(v13, result);
      swift_unknownObjectRelease(v10);
      sub_10050CB14(v13, v14);
      v11 = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
      swift_dynamicCast(&v12, v14, (char *)&type metadata for Any + 8, v11, 7);
      return (id)v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100723D7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *Strong;
  void *v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  double v59;
  int64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v72;
  void *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  id v82;
  char v83;
  void *v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD v98[5];
  _QWORD v99[6];

  v4 = v3;
  v8 = objc_opt_self(CRLWPSelection);
  v9 = swift_dynamicCastObjCClass(a2, v8);
  if (!v9)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (Strong)
    {
      v15 = Strong;
      v16 = objc_msgSend(Strong, "textInputResponder");

      if (v16)
      {
        v17 = *(void **)&v16[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
        v18 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
        v16[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
        v19 = *(void **)&v16[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
        v95 = v17;
        v20 = v17;
        if (v19)
          objc_msgSend(v19, "textDidChange:", v16);
        v16[v18] = 0;

      }
    }
    return;
  }
  v10 = (void *)v9;
  v94 = a1;
  if (!a1)
  {
    v21 = a2;
    goto LABEL_11;
  }
  v11 = objc_opt_self(CRLWPSelection);
  v12 = (void *)swift_dynamicCastObjCClass(a1, v11);
  v13 = a2;
  if (!v12 || objc_msgSend(v12, "isValid"))
  {
LABEL_11:
    if (!objc_msgSend(v10, "isInsertionPoint"))
      goto LABEL_13;
  }
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "setAnchorSelection:", 0);
LABEL_13:
  sub_100736D9C();
  if (v22)
  {
    v23 = v22;
    v24 = a2;
    v25 = objc_msgSend(v10, "range", swift_unknownObjectRetain(v23).n128_f64[0]);
    v27 = v26;
    v28 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
    v29 = (char *)sub_10060EDE4((uint64_t)v25, v27);
    v30 = objc_msgSend(v10, "caretAffinity");

    *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v30;
    objc_msgSend(v23, "setSelectedTextRange:", v29);
    swift_unknownObjectRelease(v23);

  }
  v31 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "notifySelectionChangedWithFlags:", a3);
  v32 = v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  v33 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!v33)
  {
LABEL_53:
    if (v94 && (v63 = objc_opt_self(CRLWPSelection), (v64 = swift_dynamicCastObjCClass(v94, v63)) != 0))
    {
      v65 = (void *)v64;
      v66 = v94;
      v67 = objc_msgSend(v65, "superRange");
      v69 = v68;
      if (v67 == objc_msgSend(v10, "superRange") && v69 == v70)
      {
LABEL_74:
        if (!v65)
        {
          v98[3] = &type metadata for CRLUIKitFeatureFlags;
          v98[4] = sub_1005E9710();
          v83 = isFeatureEnabled(_:)(v98);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v98);
          if ((v83 & 1) != 0)
          {
            sub_100736D9C();
            if (v84)
            {
              v85 = objc_msgSend(v84, "selectionViewController");
              if (v85)
              {
                v86 = v85;
                if (!*(_QWORD *)((char *)v85 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView))
                {
                  v87 = (*(uint64_t (**)(void))((swift_isaMask & *v85) + 0x170))();
                  (*(void (**)(uint64_t))((swift_isaMask & *v86) + 0x178))(v87);
                  objc_msgSend(*(id *)((char *)v86 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "addDecorator:", v86);
                }

              }
            }
          }
        }
        sub_10072297C();

        return;
      }
    }
    else
    {
      objc_msgSend(v10, "superRange", v88);
      v65 = 0;
    }
    v72 = (void *)swift_unknownObjectWeakLoadStrong(v32);
    if (v72)
    {
      if (!*(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
        goto LABEL_85;
      v73 = v72;
      v74 = objc_msgSend(v72, "repsForInfo:");
      v75 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v76 = sub_1004F619C();
      v77 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v74, v75, v76);

    }
    else
    {
      v77 = &_swiftEmptySetSingleton;
    }
    v78 = (void *)sub_100857EA4((uint64_t)v77);
    swift_bridgeObjectRelease(v77);
    if (v78)
    {
      v79 = objc_opt_self(CRLWPRep);
      v80 = (void *)swift_dynamicCastObjCClass(v78, v79);
      if (v80)
      {
        if ((a3 & 0x10) != 0)
          objc_msgSend(v80, "refreshEditMenu");
        else
          objc_msgSend(v80, "setShouldIgnoreFirstRequestToShowEditMenu:", 1);
      }

    }
    v81 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle) = 0;

    objc_msgSend(v10, "range");
    if ((a3 & 0x20) == 0)
    {
      v82 = *(id *)(v4 + v31);
      objc_msgSend(v82, "setSelectionAnchor:", NSNotFound.getter(v82));

    }
    goto LABEL_74;
  }
  v34 = (void *)v33;
  v35 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v32);
  v93 = v10;
  if (v35)
  {
    if (!*(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
      goto LABEL_86;
    v36 = v35;
    v37 = objc_msgSend(v35, "repsForInfo:");
    v38 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v39 = sub_1004F619C();
    v40 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v37, v38, v39);

  }
  else
  {
    v40 = (uint64_t)&_swiftEmptySetSingleton;
  }
  v89 = v32;
  v90 = v31;
  v91 = a2;
  v92 = v4;
  if ((v40 & 0xC000000000000001) != 0)
  {
    if (v40 < 0)
      v41 = v40;
    else
      v41 = v40 & 0xFFFFFFFFFFFFFF8;
    v42 = __CocoaSet.makeIterator()(v41);
    v43 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v44 = sub_1004F619C();
    v35 = Set.Iterator.init(_cocoa:)(v99, v42, v43, v44);
    v40 = v99[0];
    v96 = (_QWORD *)v99[1];
    v45 = v99[2];
    v46 = v99[3];
    v47 = v99[4];
  }
  else
  {
    v46 = 0;
    v48 = -1 << *(_BYTE *)(v40 + 32);
    v96 = (_QWORD *)(v40 + 56);
    v45 = ~v48;
    v49 = -v48;
    if (v49 < 64)
      v50 = ~(-1 << v49);
    else
      v50 = -1;
    v47 = v50 & *(_QWORD *)(v40 + 56);
  }
  v88 = v45;
  v51 = (unint64_t)(v45 + 64) >> 6;
  if (v40 < 0)
    goto LABEL_32;
  while (1)
  {
    if (v47)
    {
      v52 = (v47 - 1) & v47;
      v53 = __clz(__rbit64(v47)) | (v46 << 6);
      v54 = v46;
      goto LABEL_49;
    }
    v60 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v60 >= v51)
      goto LABEL_52;
    v61 = v96[v60];
    v54 = v46 + 1;
    if (!v61)
    {
      v54 = v46 + 2;
      if (v46 + 2 >= v51)
        goto LABEL_52;
      v61 = v96[v54];
      if (!v61)
      {
        v54 = v46 + 3;
        if (v46 + 3 >= v51)
          goto LABEL_52;
        v61 = v96[v54];
        if (!v61)
        {
          v54 = v46 + 4;
          if (v46 + 4 >= v51)
            goto LABEL_52;
          v61 = v96[v54];
          if (!v61)
          {
            v62 = v46 + 5;
            while (v51 != v62)
            {
              v61 = v96[v62++];
              if (v61)
              {
                v54 = v62 - 1;
                goto LABEL_48;
              }
            }
LABEL_52:
            sub_1004D284C(v40);

            a2 = v91;
            v4 = v92;
            v31 = v90;
            v10 = v93;
            v32 = v89;
            goto LABEL_53;
          }
        }
      }
    }
LABEL_48:
    v52 = (v61 - 1) & v61;
    v53 = __clz(__rbit64(v61)) + (v54 << 6);
LABEL_49:
    v58 = *(id *)(*(_QWORD *)(v40 + 48) + 8 * v53);
    if (!v58)
      goto LABEL_52;
    while (1)
    {
      objc_msgSend(v34, "invalidateContentLayersForRep:", v58, v59, v88);

      v46 = v54;
      v47 = v52;
      if ((v40 & 0x8000000000000000) == 0)
        break;
LABEL_32:
      v55 = __CocoaSet.Iterator.next()(v35);
      if (v55)
      {
        v56 = v55;
        v97 = v55;
        v57 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
        swift_unknownObjectRetain(v56);
        swift_dynamicCast(v98, &v97, (char *)&type metadata for Swift.AnyObject + 8, v57, 7);
        v58 = (id)v98[0];
        *(_QWORD *)&v59 = swift_unknownObjectRelease(v56).n128_u64[0];
        v54 = v46;
        v52 = v47;
        if (v58)
          continue;
      }
      goto LABEL_52;
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
}

void sub_100724658()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;

  v1 = v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v3 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
    if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
      v4 = Strong;
      v13 = objc_msgSend(Strong, "layoutForInfo:");

      if (v13)
      {
        v5 = type metadata accessor for CRLWPLayout();
        v6 = (void *)swift_dynamicCastClass(v13, v5);
        if (v6)
        {
          v7 = v6;
          if (objc_msgSend(v6, "parentAutosizes"))
            objc_msgSend(v7, "invalidateSize");
          *((_BYTE *)v7 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
          objc_msgSend(v7, "invalidate");
          objc_msgSend(v7, "setNeedsDisplay");
          v8 = (void *)swift_unknownObjectWeakLoadStrong(v1);
          if (v8)
          {
            v9 = v8;
            v10 = objc_msgSend(v8, "repForInfo:", *(_QWORD *)(v0 + v3));

            if (v10)
            {
              v11 = objc_opt_self(CRLWPShapeRep);
              v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
              if (v12)
                objc_msgSend(v12, "invalidateKnobs");

            }
          }
        }

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100724804(uint64_t a1, char a2)
{
  uint64_t v2;
  void *Strong;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unsigned int v26;
  id v27;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v27 = Strong;
    v6 = objc_msgSend(Strong, "canvasEditor");
    if (!v6)
    {
      v24 = v27;
LABEL_18:

      return;
    }
    v7 = v6;
    v8 = objc_msgSend(v6, "pasteboardController");
    swift_unknownObjectRelease(v7);
    v9 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController;
    v10 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionForEditor:", v2);
    if (!v10)
    {
      v25 = v27;
LABEL_17:

      v24 = v8;
      goto LABEL_18;
    }
    v11 = v10;
    v12 = objc_opt_self(CRLWPSelection);
    v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
    if (!v13 || (v14 = v13, !objc_msgSend(v13, "isRange")))
    {
      v15 = v27;
      v18 = v8;
LABEL_16:

      v25 = v18;
      v8 = v11;
      goto LABEL_17;
    }
    v15 = objc_msgSend(v8, "newCopyAssistantWithPasteboard:", a1);
    v26 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "hasWhitespaceBoundedWordAtSelection:", v14);
    v16 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v16)
    {
      v17 = *(void **)(v2 + v9);
      v18 = v16;
      v19 = objc_msgSend(v17, "selectionForEditor:", v2);
      if (v19)
      {
        v20 = v19;
        v21 = objc_opt_self(CRLWPSelection);
        v22 = swift_dynamicCastObjCClass(v20, v21);
        v23 = v26;
        if (!v22)

      }
      else
      {
        v22 = 0;
        v23 = v26;
      }
      objc_msgSend(v8, "copyTextStorage:selection:toPasteboard:smartCopy:writeAssistant:nativeOnly:", v18, v22, a1, v23, v15, a2 & 1);

      v11 = (void *)v22;
      goto LABEL_16;
    }
    __break(1u);
  }
}

void sub_100724AF4(uint64_t a1)
{
  sub_100724B10(a1, 0);
}

void sub_100724B08(uint64_t a1)
{
  sub_100724B10(a1, 1);
}

void sub_100724B10(uint64_t a1, char a2)
{
  uint64_t v2;
  void *Strong;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v10 = Strong;
    v5 = objc_msgSend(Strong, "canvasEditor");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "pasteboardController");
      swift_unknownObjectRelease(v6);
      v8 = objc_msgSend((id)objc_opt_self(CRLPasteboard), "generalPasteboard");
      v9 = objc_msgSend(v7, "ingestibleItemSourceForPasteboard:", v8);

      sub_100724C3C(v9, a2 & 1);
      swift_unknownObjectRelease(v9);
    }
    else
    {

    }
  }
}

void sub_100724C3C(void *a1, char a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  _OWORD v11[2];

  sub_100736D9C();
  if (v5)
  {
    v6 = objc_msgSend(v5, "selectedTextRangeWithoutMarkedText");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionForEditor:", v2);
      if (v8)
      {
        v9 = v8;
        v10 = objc_opt_self(CRLWPSelection);
        if (swift_dynamicCastObjCClass(v9, v10))
        {
          memset(v11, 0, sizeof(v11));
          sub_100739E3C(a1, (uint64_t)v11, v7, 1, a2 & 1);

          sub_1004CB800((uint64_t)v11, &qword_1013E0230);
          return;
        }

      }
      else
      {
        v9 = v7;
      }

    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"pasteFrom(itemSource:forceMatchStyle:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 626, "Failed to paste text. Preconditions unmet.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pasteFrom(itemSource:forceMatchStyle:)", 38, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 626, (uint64_t)"Failed to paste text. Preconditions unmet.", 42, 2u);
}

void sub_100724F48(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, void *a9)
{
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void (**v24)(_QWORD);
  id v25;
  id v26;
  _QWORD v27[5];
  uint64_t v28;

  v17 = swift_allocObject(&unk_10127AEC8, 88, 7);
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v17 + 32) = a5;
  *(_QWORD *)(v17 + 40) = a1;
  *(_BYTE *)(v17 + 48) = a6;
  *(_QWORD *)(v17 + 56) = a7;
  *(_BYTE *)(v17 + 64) = a2;
  *(_QWORD *)(v17 + 72) = a8;
  *(_QWORD *)(v17 + 80) = a9;
  v27[4] = sub_10073DB50;
  v28 = v17;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = *(_QWORD *)"";
  v27[2] = sub_1005D2FC0;
  v27[3] = &unk_10127AEE0;
  v18 = _Block_copy(v27);
  v19 = v28;
  v20 = a1;
  v21 = a7;
  v22 = a9;
  v23 = a3;
  swift_bridgeObjectRetain(a5);
  swift_release(v19);
  v24 = v18;
  if (+[NSThread isMainThread](NSThread, "isMainThread"))
  {
    v24[2](v24);
  }
  else
  {
    v25 = &_dispatch_main_q;
    v26 = &_dispatch_main_q;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v24);

  }
  _Block_release(v24);
}

void sub_10072509C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, char a5, char *a6, int a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  _BYTE *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;

  v57 = a8;
  v58 = a7;
  v59 = a6;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v56 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a1;
  if (!*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_10066B1AC(a2, a3);
  if (!a4)
    return;
  v22 = a4;
  if ((a5 & 1) != 0)
  {
    v23 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v23)
    {
LABEL_17:
      __break(1u);
      return;
    }
    v24 = v59;
    v25 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v55 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v26 = *(void **)(v60 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
    (*(void (**)(void))(*(_QWORD *)v23 + 760))();
    sub_1004D29BC((uint64_t)&v18[*(int *)(v16 + 20)], (uint64_t)v21);
    v27 = v22;
    v28 = v26;
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
    v29 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v15, v21, v13);
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
    v30 = (void *)CRAttributedString.attributedString.getter(v13);
    v31 = v13;
    v32 = v24;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v31);
    v33 = objc_msgSend(v30, "string");

    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v37 = objc_allocWithZone((Class)type metadata accessor for CRLWPPasteTextCommand());
    v38 = sub_1005598F4(v28, v55, v25, v34, v36, 0, v58 & 1);

  }
  else
  {
    v32 = v59;
    v39 = *(void **)(v60 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
    v40 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v41 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    objc_allocWithZone((Class)type metadata accessor for CRLWPPasteTextCommand());
    v42 = v22;
    v43 = v39;
    v44 = (uint64_t)v22;
    v45 = v43;
    v38 = sub_1005598F4(v43, v40, v41, v44, 0, 2, v58 & 1);

    v22 = (void *)v44;
  }
  v46 = v38;
  v47 = (char *)objc_msgSend(v32, "start");
  v48 = *(_QWORD *)&v47[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v48 != NSNotFound.getter(v49))
  {
    v50 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v52 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v51 = v52 - v50;
    if (!__OFSUB__(v52, v50))
      goto LABEL_10;
    __break(1u);
    goto LABEL_16;
  }
  v50 = 0x7FFFFFFFFFFFFFFFLL;
  v51 = 0;
LABEL_10:
  v53 = sub_100725BB4(v50, v51, v57);
  if (v53)
  {
    v54 = v53;
    sub_1006A5F54(v46, 0, v53, 4, 0);

    v46 = v54;
  }
  else
  {

  }
}

void sub_100725464(void *a1, char a2, char a3, void *a4, void *a5, uint64_t a6, void *a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void (**v21)(_QWORD);
  id v22;
  id v23;
  _QWORD v24[5];
  uint64_t v25;

  if (a1)
  {
    v14 = swift_allocObject(&unk_10127AF18, 72, 7);
    *(_BYTE *)(v14 + 16) = a3 & 1;
    *(_QWORD *)(v14 + 24) = a1;
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = a2 & 1;
    *(_QWORD *)(v14 + 56) = a6;
    *(_QWORD *)(v14 + 64) = a7;
    v24[4] = sub_10073DBC4;
    v25 = v14;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = *(_QWORD *)"";
    v24[2] = sub_1005D2FC0;
    v24[3] = &unk_10127AF30;
    v15 = _Block_copy(v24);
    v16 = v25;
    v17 = a1;
    v18 = a4;
    v19 = a5;
    v20 = a7;
    swift_release(v16);
    v21 = v15;
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      v21[2](v21);
    }
    else
    {
      v22 = &_dispatch_main_q;
      v23 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v21);

    }
    _Block_release(v21);

  }
}

void sub_1007255B4(char a1, id a2, uint64_t a3, char *a4, char a5, uint64_t a6)
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _BYTE *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  if ((a1 & 1) != 0)
  {
    v11 = objc_msgSend(a2, "string");
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v14 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
    v15 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v16 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v17 = objc_allocWithZone((Class)type metadata accessor for CRLWPPasteTextCommand());
    v18 = v14;
    v19 = sub_1005598F4(v18, v15, v16, v37, v13, 0, a5 & 1);

  }
  else
  {
    v20 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v21 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v22 = *(id *)(a3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
    v23 = a2;
    v24 = objc_msgSend(v23, "mutableCopy");
    _bridgeAnyObjectToAny(_:)(v39, v24);
    swift_unknownObjectRelease(v24);
    v25 = sub_1004B8930(0, (unint64_t *)&unk_1013EFDB0, NSMutableAttributedString_ptr);
    swift_dynamicCast(&v38, v39, (char *)&type metadata for Any + 8, v25, 7);
    v26 = v38;
    v27 = objc_allocWithZone((Class)type metadata accessor for CRLWPPasteTextCommand());
    v19 = sub_1005598F4(v22, v20, v21, v26, 0, 1, a5 & 1);

  }
  v28 = v19;
  v29 = (char *)objc_msgSend(a4, "start");
  v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v30 == NSNotFound.getter(v31))
  {
    v32 = 0x7FFFFFFFFFFFFFFFLL;
    v33 = 0;
  }
  else
  {
    v32 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v34 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v33 = v34 - v32;
    if (__OFSUB__(v34, v32))
    {
      __break(1u);
      return;
    }
  }
  v35 = sub_100725BB4(v32, v33, a6);
  if (v35)
  {
    v36 = v35;
    sub_1006A5F54(v28, 0, v35, 4, 0);

    v28 = v36;
  }
  else
  {

  }
}

void sub_10072583C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(void *, uint64_t);
  id v7;

  v6 = *(void (**)(void *, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v6(a2, a3);
  swift_release(v5);

}

void sub_10072589C(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, void *a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void (**v20)(_QWORD);
  id v21;
  id v22;
  _QWORD v23[5];
  uint64_t v24;

  if (a2)
  {
    v14 = swift_allocObject(&unk_10127AF68, 72, 7);
    *(_QWORD *)(v14 + 16) = a4;
    *(_QWORD *)(v14 + 24) = a5;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    *(_BYTE *)(v14 + 48) = a3 & 1;
    *(_QWORD *)(v14 + 56) = a6;
    *(_QWORD *)(v14 + 64) = a7;
    v23[4] = sub_10073DC18;
    v24 = v14;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = *(_QWORD *)"";
    v23[2] = sub_1005D2FC0;
    v23[3] = &unk_10127AF80;
    v15 = _Block_copy(v23);
    v16 = v24;
    swift_bridgeObjectRetain(a2);
    v17 = a4;
    v18 = a5;
    v19 = a7;
    swift_release(v16);
    v20 = v15;
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      v20[2](v20);
    }
    else
    {
      v21 = &_dispatch_main_q;
      v22 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v20);

    }
    _Block_release(v20);
  }
}

void sub_1007259DC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  _BYTE *v25;

  v10 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v11 = (uint64_t *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v12 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v13 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  objc_allocWithZone((Class)type metadata accessor for CRLWPPasteTextCommand());
  v14 = v10;
  swift_bridgeObjectRetain(a4);
  v25 = sub_1005598F4(v14, v12, v13, a3, a4, 0, a5);

  v15 = (char *)objc_msgSend(a2, "start");
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v16 == NSNotFound.getter(v17))
  {
    v18 = 0x7FFFFFFFFFFFFFFFLL;
    v19 = 0;
  }
  else
  {
    v18 = *v11;
    v20 = v11[1];
    v19 = v20 - *v11;
    if (__OFSUB__(v20, *v11))
    {
      __break(1u);
      return;
    }
  }
  v21 = sub_100725BB4(v18, v19, a6);
  v22 = v25;
  if (v21)
  {
    v23 = v21;
    sub_1006A5F54(v25, 0, v21, 4, 0);

    v22 = v25;
  }

}

uint64_t sub_100725B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  swift_retain(v4);
  v5(v6, v8, a3);
  swift_release(v4);
  return swift_bridgeObjectRelease(v8);
}

id sub_100725BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  void *v8;
  id result;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    goto LABEL_8;
  v8 = Strong;
  result = objc_msgSend(Strong, "selectionModelTranslator");
  if (!result)
  {

LABEL_8:
    sub_100757E04(&_mh_execute_header, (uint64_t)"pasteSelectionBehavior(forSelectedRange:selectRange:)", 53, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 717, "Selection model translator is nil", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pasteSelectionBehavior(forSelectedRange:selectRange:)", 53, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 717, (uint64_t)"Selection model translator is nil", 33, 2u);
    return 0;
  }
  v10 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v11 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v11)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = result;
  v13 = objc_msgSend(result, "selectionPathForRange:onStorage:headCursorAffinity:tailCursorAffinity:", a1, a2, v11, 1, 2);
  if (!v13)
  {
LABEL_15:
    sub_100757E04(&_mh_execute_header, (uint64_t)"pasteSelectionBehavior(forSelectedRange:selectRange:)", 53, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 723, "Couldn't create seletion behavior for paste command", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pasteSelectionBehavior(forSelectedRange:selectRange:)", 53, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 723, (uint64_t)"Couldn't create seletion behavior for paste command", 51, 2u);

    return 0;
  }
  v14 = v13;
  if (a3 == 2)
  {
    v15 = v13;
LABEL_13:
    v18 = objc_allocWithZone((Class)CRLCommandSelectionBehavior);
    v19 = v15;
    v20 = objc_msgSend(v18, "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:usePersistableCommitSelectionPath:", v19, v14, v14, 1);

    return v20;
  }
  result = objc_msgSend(v8, "selectionModelTranslator");
  if (!result)
  {
LABEL_14:

    goto LABEL_15;
  }
  if (__OFADD__(a1, a2))
  {
    __break(1u);
    goto LABEL_19;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v3 + v10) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v16)
  {
    v17 = result;
    v15 = objc_msgSend(result, "selectionPathForRange:onStorage:headCursorAffinity:tailCursorAffinity:", a1 + a2, 0, v16, 2, 2);

    if (v15)
      goto LABEL_13;
    goto LABEL_14;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_100725E8C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, _QWORD, uint64_t, uint64_t))
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v14, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    v9 = a1;
  }
  v10 = objc_msgSend((id)objc_opt_self(CRLPasteboard), "generalPasteboard");
  a4(v10, 0, v11, v12);

  return sub_1004CB800((uint64_t)v14, &qword_1013E0230);
}

void sub_100725F34(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  char *v18;
  char *v19;
  void *Strong;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  _BYTE *v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_1004B804C((uint64_t *)&unk_1013F3DC0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013EFCF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - v15;
  sub_100736D9C();
  if (v17)
  {
    v18 = (char *)objc_msgSend(v17, "selectedTextRange");
    if (v18)
    {
      v19 = v18;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      v21 = objc_msgSend(Strong, "commandController");

      if (v21)
      {
        sub_100724804(a1, a2 & 1);
        v22 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                    + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
        v23 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:usePersistableCommitSelectionPath:", v22, v22, v22, 1);
        v32 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
        v24 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        v33 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
        v34 = v24;
        v25 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v16, 1, 1, v25);
        v26 = sub_1004B804C(&qword_1013F3D40);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
        sub_1004CB7BC((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1013EFCF0);
        sub_1004CB7BC((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1013F3DC0);
        v27 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
        v28 = v32;
        v29 = sub_1006BEFE0((uint64_t)v28, v34, v33, 0, 0xE000000000000000, 0, (uint64_t)v13, (uint64_t)v7);
        sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F3DC0);
        sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013EFCF0);
        v30 = v23;
        sub_1006A5F54(v29, 0, v23, 4, 0);

        return;
      }

    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"cut(to:nativeOnly:sender:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 738, "No text selection range to cut().", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cut(to:nativeOnly:sender:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 738, (uint64_t)"No text selection range to cut().", 33, 2u);
}

uint64_t sub_100726340(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  unsigned int v24;
  BOOL v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v30;
  void *Strong;
  void *v32;
  id v33;
  id v34;
  double v35;
  id v36;
  id v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  void *v56;
  uint64_t v57;
  char v58;
  void *v59;
  id v60;
  void *v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[32];
  uint64_t v72;
  uint64_t v73;

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v5 = *(char **)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v69);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10);
  v70 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013EFDA8);
  inited = swift_initStackObject(v12, &v72);
  *(_OWORD *)(inited + 16) = xmmword_100F07C70;
  *(_QWORD *)(inited + 32) = "deleteBackward:";
  *(_QWORD *)(inited + 40) = "replace:with:";
  *(_QWORD *)(inited + 48) = "keyInputReceiver";
  *(_QWORD *)(inited + 56) = "textInputReceiver";
  *(_QWORD *)(inited + 64) = "moveRightAndModifySelection:";
  *(_QWORD *)(inited + 72) = "moveLeftAndModifySelection:";
  *(_QWORD *)(inited + 80) = "deleteToBeginningOfLine:";
  *(_QWORD *)(inited + 88) = "complete:";
  *(_QWORD *)(inited + 96) = "capitalizeWord:";
  *(_QWORD *)(inited + 104) = "uppercaseWord:";
  *(_QWORD *)(inited + 112) = "lowercaseWord:";
  *(_QWORD *)(inited + 120) = "moveToBeginningOfDocument:";
  *(_QWORD *)(inited + 128) = "moveToBeginningOfDocumentAndModifySelection:";
  *(_QWORD *)(inited + 136) = "moveToEndOfDocument:";
  *(_QWORD *)(inited + 144) = "moveToEndOfDocumentAndModifySelection:";
  *(_QWORD *)(inited + 152) = "moveToBeginningOfParagraph:";
  *(_QWORD *)(inited + 160) = "moveToEndOfParagraph:";
  *(_QWORD *)(inited + 168) = "moveToBeginningOfParagraphAndModifySelection:";
  *(_QWORD *)(inited + 176) = "moveToEndOfParagraphAndModifySelection:";
  *(_QWORD *)(inited + 184) = "moveParagraphForward:";
  *(_QWORD *)(inited + 192) = "moveParagraphBackward:";
  *(_QWORD *)(inited + 200) = "moveParagraphForwardAndModifySelection:";
  *(_QWORD *)(inited + 208) = "moveParagraphBackwardAndModifySelection:";
  *(_QWORD *)(inited + 216) = "moveWordForward:";
  *(_QWORD *)(inited + 224) = "moveWordBackward:";
  *(_QWORD *)(inited + 232) = "moveWordForwardAndModifySelection:";
  *(_QWORD *)(inited + 240) = "moveWordBackwardAndModifySelection:";
  *(_QWORD *)(inited + 248) = "moveWordLeft:";
  *(_QWORD *)(inited + 256) = "moveWordRight:";
  *(_QWORD *)(inited + 264) = "moveWordLeftAndModifySelection:";
  *(_QWORD *)(inited + 272) = "moveWordRightAndModifySelection:";
  *(_QWORD *)(inited + 280) = "moveToBeginningOfLine:";
  *(_QWORD *)(inited + 288) = "moveToEndOfLine:";
  *(_QWORD *)(inited + 296) = "moveToBeginningOfLineAndModifySelection:";
  *(_QWORD *)(inited + 304) = "moveToEndOfLineAndModifySelection:";
  *(_QWORD *)(inited + 312) = "moveToLeftEndOfLine:";
  *(_QWORD *)(inited + 320) = "moveToLeftEndOfLineAndModifySelection:";
  *(_QWORD *)(inited + 328) = "moveToRightEndOfLine:";
  *(_QWORD *)(inited + 336) = "moveToRightEndOfLineAndModifySelection:";
  *(_QWORD *)(inited + 344) = "selectLine:";
  *(_QWORD *)(inited + 352) = "selectWord:";
  *(_QWORD *)(inited + 360) = "selectParagraph:";
  *(_QWORD *)(inited + 368) = "setMark:";
  *(_QWORD *)(inited + 376) = "selectToMark:";
  *(_QWORD *)(inited + 384) = "deleteToMark:";
  *(_QWORD *)(inited + 392) = "swapWithMark:";
  v73 = inited;
  sub_10073A2C0();
  sub_100620C28(v14);
  v15 = v73;
  v16 = *(char **)(v73 + 16);
  if (v16)
  {
    v17 = *(_QWORD *)(v73 + 32);
    swift_bridgeObjectRetain(v73);
    if ((static Selector.== infix(_:_:)(v17, a1) & 1) != 0)
    {
LABEL_3:
      swift_bridgeObjectRelease_n(v15, 2);
      return 1;
    }
    v68 = v9;
    v9 = v7;
    v7 = v5;
    v5 = (char *)v4;
    v4 = (uint64_t)v2;
    if (v16 != (char *)1)
    {
      v19 = 5;
      while (1)
      {
        v2 = (char *)(v19 - 3);
        if (__OFADD__(v19 - 4, 1))
          break;
        if ((static Selector.== infix(_:_:)(*(_QWORD *)(v15 + 8 * v19), a1) & 1) != 0)
          goto LABEL_3;
        ++v19;
        if (v2 == v16)
          goto LABEL_10;
      }
      __break(1u);
      goto LABEL_68;
    }
LABEL_10:
    swift_bridgeObjectRelease(v15);
    v2 = (char *)v4;
    v4 = (uint64_t)v5;
    v5 = v7;
    v7 = v9;
    v9 = v68;
  }
  swift_bridgeObjectRelease(v15);
  if ((static Selector.== infix(_:_:)(a1, "duplicate:") & 1) != 0
    || (static Selector.== infix(_:_:)(a1, "lock:") & 1) != 0)
  {
    return -1;
  }
  if ((static Selector.== infix(_:_:)(a1, "copy:") & 1) != 0)
  {
    v20 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController], "selectionForEditor:", v2);
    if (v20)
    {
      v21 = v20;
      v22 = objc_opt_self(CRLWPSelection);
      v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
      if (v23)
      {
        v24 = objc_msgSend(v23, "isInsertionPoint");

        v25 = v24 == 0;
        v26 = -1;
        goto LABEL_37;
      }

    }
  }
  if ((static Selector.== infix(_:_:)(a1, "paste:") & 1) != 0)
  {
    v27 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController], "selectionForEditor:", v2);
    if (v27)
    {
      v28 = v27;
      v29 = objc_opt_self(CRLWPSelection);
      if (swift_dynamicCastObjCClass(v28, v29))
      {
        v30 = (char *)objc_msgSend((id)objc_opt_self(CRLPasteboard), "generalPasteboard");
        Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
        if (Strong)
        {
          v32 = Strong;
          v68 = v30;
          v33 = objc_msgSend(Strong, "canvasEditor");

          if (v33)
          {
            v34 = objc_msgSend(v33, "pasteboardController");
            v67 = v34;
            *(_QWORD *)&v35 = swift_unknownObjectRelease(v33).n128_u64[0];
            v36 = objc_msgSend(v34, "ingestibleItemSourceForPasteboard:", v68, v35);
            memset(v71, 0, sizeof(v71));
            v37 = v36;
            LOBYTE(v34) = sub_100739D18(v36);
            swift_unknownObjectRelease(v37);

            sub_1004CB800((uint64_t)v71, &qword_1013E0230);
            v38 = (v34 & 1) == 0;
            v39 = 1;
LABEL_63:
            if (v38)
              v50 = -v39;
            else
              v50 = v39;

            goto LABEL_40;
          }

        }
        else
        {

        }
        goto LABEL_61;
      }

    }
  }
  if ((static Selector.== infix(_:_:)(a1, "cut:") & 1) != 0)
  {
    v40 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController], "selectionForEditor:", v2);
    if (v40)
    {
      v28 = v40;
      v41 = objc_opt_self(CRLWPSelection);
      v42 = swift_dynamicCastObjCClass(v28, v41);
      if (v42)
      {
        v43 = (void *)v42;
        v44 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator]
                                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                        + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
        v45 = *(void **)(v44 + 16);
        if (!v45)
          goto LABEL_62;
        v68 = *(char **)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator]
                                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                       + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
        swift_retain(v44);
        v67 = v45;
        v46 = objc_msgSend(v67, "currentUserParticipant");
        if (v46)
        {
          v47 = v46;
          v66 = objc_msgSend(v46, "permission");
          swift_release(v68);

        }
        else
        {
          v47 = v67;
          v66 = objc_msgSend(v67, "publicPermission");
          swift_release(v68);
        }

        if (v66 != (id)2)
        {
LABEL_62:
          v38 = objc_msgSend(v43, "isInsertionPoint") == 0;
          v39 = -1;
          goto LABEL_63;
        }
LABEL_61:
        v50 = -1;

        goto LABEL_40;
      }

    }
  }
  if ((static Selector.== infix(_:_:)(a1, "makeTextWritingDirectionLeftToRight:") & 1) != 0
    || (static Selector.== infix(_:_:)(a1, "makeBaseWritingDirectionLeftToRight:") & 1) != 0)
  {
    v48 = 0;
LABEL_35:
    sub_10072DBB8(v48);
LABEL_36:
    v25 = (v49 & 1) == 0;
    v26 = 1;
LABEL_37:
    if (v25)
      v50 = -v26;
    else
      v50 = v26;
    goto LABEL_40;
  }
  if ((static Selector.== infix(_:_:)(a1, "makeTextWritingDirectionRightToLeft:") & 1) != 0
    || (static Selector.== infix(_:_:)(a1, "makeBaseWritingDirectionRightToLeft:") & 1) != 0)
  {
    sub_10072DBB8(1);
    if ((v58 & 1) != 0)
      v50 = 1;
    else
      v50 = -1;
    goto LABEL_40;
  }
  if ((static Selector.== infix(_:_:)(a1, "makeTextWritingDirectionNatural:") & 1) != 0
    || (static Selector.== infix(_:_:)(a1, "makeBaseWritingDirectionNatural:") & 1) != 0)
  {
    v48 = -1;
    goto LABEL_35;
  }
LABEL_68:
  if ((static Selector.== infix(_:_:)(a1, "copyStyle:") & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)(a1, "pasteStyle:") & 1) == 0)
    {
      if ((static Selector.== infix(_:_:)(a1, "outdentParagraphLevel:") & 1) != 0)
      {
        sub_100721108();
        if (v63 < 1)
          v50 = -1;
        else
          v50 = 1;
      }
      else if ((static Selector.== infix(_:_:)(a1, "indentParagraphLevel:") & 1) != 0)
      {
        sub_100721108();
        if (v64 < 10)
          v50 = 1;
        else
          v50 = -1;
      }
      else if ((static Selector.== infix(_:_:)(a1, "increaseSize:") & 1) != 0
             || (static Selector.== infix(_:_:)(a1, "decreaseSize:") & 1) != 0)
      {
        v50 = sub_100726E24();
      }
      else if ((static Selector.== infix(_:_:)(a1, "translate:") & 1) != 0)
      {
        if (objc_msgSend((id)objc_opt_self(LTUITranslationViewController), "isAvailable"))
          v50 = 1;
        else
          v50 = -1;
      }
      else
      {
        v50 = 1;
      }
      goto LABEL_40;
    }
    v49 = sub_100729C2C();
    goto LABEL_36;
  }
  sub_100736D9C();
  if (v59)
  {
    v60 = objc_msgSend(v59, "selectedTextRange");
    v50 = -1;
    if (v60)
    {
      v61 = v60;
      v62 = objc_msgSend(v60, "isEmpty");

      if (!v62)
        v50 = 1;
    }
  }
  else
  {
    v50 = -1;
  }
LABEL_40:
  result = static Selector.== infix(_:_:)(a1, "selectAllMenuAction:");
  if ((result & 1) == 0)
  {
    result = static Selector.== infix(_:_:)(a1, "selectMenuAction:");
    if ((result & 1) == 0)
    {
      if (v50 != 1)
        return -1;
LABEL_47:
      if ((objc_msgSend(v2, "respondsToSelector:", a1) & 1) != 0)
        return 1;
      return -1;
    }
  }
  v51 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v51)
  {
    v52 = *(_QWORD *)&v51[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v52)
    {
      v53 = v2;
      (*(void (**)(void))(*(_QWORD *)v52 + 760))();
      v54 = v70;
      sub_1004D29BC((uint64_t)&v9[*(int *)(v69 + 20)], v70);
      v55 = v51;
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
      (*((void (**)(char *, uint64_t, uint64_t))v5 + 2))(v7, v54, v4);
      sub_1004B84A4(v54, type metadata accessor for CRLWPStorageCRDTData);
      v56 = (void *)CRAttributedString.attributedString.getter(v4);
      (*((void (**)(char *, uint64_t))v5 + 1))(v7, v4);
      v57 = (uint64_t)objc_msgSend(v56, "length");

      v2 = v53;
      if (v57 < 1)
        return -1;
      goto LABEL_47;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100726E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 v13;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v3 = *(void **)(v2 + 16);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
    v4 = v3;
    v5 = objc_msgSend(v4, "currentUserParticipant");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "permission");
      swift_release(v2);

      if (v7 == (id)2)
        return -1;
    }
    else
    {
      v8 = objc_msgSend(v4, "publicPermission");
      swift_release(v2);

      if (v8 == (id)2)
        return -1;
    }
  }
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionForEditor:", v0));
  if (v9)
  {
    v10 = v9;
    v11 = objc_opt_self(CRLWPSelection);
    v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
    if (v12)
    {
      v13 = objc_msgSend(v12, "isRange");

      if ((v13 & 1) != 0)
        return 1;
    }
    else
    {

    }
  }
  return -1;
}

uint64_t sub_100726F90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, __n128))
{
  id v9;
  uint64_t v10;
  __n128 v11;
  id v12;
  _OWORD v14[2];

  if (a3)
  {
    v9 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v14, v10);
    v11 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    v12 = a1;
  }
  a5(a4, v11);

  return sub_1004CB800((uint64_t)v14, &qword_1013E0230);
}

void sub_100727054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;

  v2 = v1;
  sub_100736D9C();
  if (v4)
  {
    v5 = objc_msgSend(v4, "selectedTextRange");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v6, "isEmpty");
      v8 = (uint64_t)v6;
      if (!v7)
      {
LABEL_7:
        v20 = (char *)v8;

        sub_10072DF70(a1, v20);
        return;
      }
      v9 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
      v10 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                     + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v10)
      {
        v11 = v10;
        v12 = (char *)objc_msgSend(v6, "start");

        v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        v14 = objc_msgSend(v11, "paragraphIndexAtCharIndex:", v13);

        v15 = *(void **)(*(_QWORD *)(v2 + v9) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (v15)
        {
          v16 = objc_msgSend(v15, "textRangeForParagraphAtIndex:", v14);
          v18 = v17;
          v19 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
          v8 = sub_10060EDE4((uint64_t)v16, v18);
          goto LABEL_7;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

void sub_1007272A0(uint64_t a1)
{
  sub_1007272C4(a1, (SEL *)&selRef_moveDownAndModifySelection_);
}

void sub_1007272B8(uint64_t a1)
{
  sub_1007272C4(a1, (SEL *)&selRef_moveUpAndModifySelection_);
}

void sub_1007272C4(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v15[3];
  uint64_t v16;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v3)
  {
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
      sub_1004CB7BC(a1, (uint64_t)v15, &qword_1013E0230);
      v6 = v16;
      if (v16)
      {
        v7 = sub_1004BB5A4(v15, v16);
        v8 = *(_QWORD *)(v6 - 8);
        v9 = __chkstk_darwin(v7);
        v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
        v12 = v5;
        v13 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
      }
      else
      {
        v14 = v5;
        v13 = 0;
      }
      objc_msgSend(v5, *a2, v13);

      swift_unknownObjectRelease(v13);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100727410(uint64_t a1)
{
  sub_1007272C4(a1, (SEL *)&selRef_moveRightAndModifySelection_);
}

void sub_100727428(uint64_t a1)
{
  sub_1007272C4(a1, (SEL *)&selRef_moveLeftAndModifySelection_);
}

void sub_100727440(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  char **v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v21 = (id)Strong;
    sub_100736D9C();
    if (!v6)
      goto LABEL_16;
    v7 = objc_msgSend(v6, "selectedTextRange");
    if (!v7)
      goto LABEL_16;
    v8 = v7;
    v9 = objc_msgSend(v21, "selectionModelTranslator");
    v10 = v9;
    if ((a2 & 1) != 0)
    {
      if (!v9)
        goto LABEL_15;
      if (*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                     + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
      {
        v11 = &selRef_visualSelectionPathForTextRange_onStorage_;
        goto LABEL_11;
      }
      __break(1u);
    }
    else
    {
      if (!v9)
        goto LABEL_15;
      if (*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                     + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
      {
        v11 = &selRef_selectionPathForTextRange_onStorage_;
LABEL_11:
        v12 = objc_msgSend(v9, *v11, v8);

        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v21, "editorController");
          if (v14)
          {
            v15 = v14;
            v16 = (_QWORD *)swift_allocObject(&unk_10127AD88, 40, 7);
            v16[2] = v21;
            v16[3] = v13;
            v16[4] = a1;
            aBlock[4] = sub_10073DA0C;
            v23 = v16;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = *(_QWORD *)"";
            aBlock[2] = sub_1005D2FC0;
            aBlock[3] = &unk_10127ADA0;
            v17 = _Block_copy(aBlock);
            v18 = v23;
            v19 = v13;
            v20 = v21;
            objc_msgSend(v15, "performBlockAfterSettingSelection:", v17, swift_release(v18).n128_f64[0]);

            _Block_release(v17);
            return;
          }

LABEL_16:
          return;
        }
LABEL_15:

        goto LABEL_16;
      }
    }
    __break(1u);
  }
}

void sub_100727668(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(a1, "editorController");
  objc_msgSend(v5, "setSelectionPath:withFlags:", a2, a3);

}

id sub_1007276C0(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  unsigned int v28;
  id v29;
  id v30;

  v4 = v3;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v9 = Strong;
    v10 = objc_msgSend(Strong, "hitRep:", a2, a3);
    if (v10)
    {
      v11 = v10;
      v12 = objc_opt_self(CRLWPRep);
      v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
      if (!v13)

    }
    else
    {
      v13 = 0;
    }
    v15 = objc_msgSend(v9, "layerHost");
    if (v15)
    {
      v16 = v15;
      if ((objc_msgSend(v15, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v17 = objc_msgSend(v16, "asiOSCVC");
        *(_QWORD *)&v18 = swift_unknownObjectRelease(v16).n128_u64[0];
        if (!v13)
        {
          v28 = objc_msgSend(v17, "currentlyTrackingIndirectPointerTouch", v18);

          if (v28)
          {
            v14 = *(id *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastCursor);
            if (v14)
              v29 = v14;
            goto LABEL_23;
          }
          goto LABEL_17;
        }

LABEL_13:
        v19 = v13;
        if (objc_msgSend(v19, "canEditWithEditor:", v4))
        {
          objc_msgSend(v19, "convertNaturalPointFromUnscaledCanvas:", a2, a3);
          v21 = v20;
          v23 = v22;
          v24 = v9;
          v25 = sub_100C58BB0(0);
          v27 = v26;

          if (v25)
          {
            sub_10066E2A4(v25, v27);
            v14 = 0;
          }
          else
          {
            v14 = objc_msgSend(v19, "cursorForPoint:withCursorPlatformObject:", a1, v21, v23);
          }
          v9 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastCursor);
          *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_lastCursor) = v14;
          v30 = v14;

          goto LABEL_23;
        }

LABEL_17:
        v14 = 0;
LABEL_23:

        return v14;
      }
      swift_unknownObjectRelease(v16);
    }
    if (!v13)
      goto LABEL_17;
    goto LABEL_13;
  }
  return 0;
}

void sub_1007279B0()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  unint64_t v43;
  unint64_t i;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSString *v51;
  SEL v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _OWORD v62[2];
  _BYTE v63[160];
  unint64_t v64;

  v64 = (unint64_t)_swiftEmptyArrayStorage;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "textInputResponder");

    if (v3)
    {
      v4 = sub_1004B804C(&qword_1013EFDA0);
      inited = swift_initStackObject(v4, v63);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E30;
      *(_QWORD *)(inited + 32) = 0xD000000000000014;
      *(_QWORD *)(inited + 40) = 0x8000000100FCCA40;
      v6 = (void *)objc_opt_self(NSBundle);
      v7 = objc_msgSend(v6, "mainBundle");
      v8 = String._bridgeToObjectiveC()();
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      *(_QWORD *)(inited + 48) = v11;
      *(_QWORD *)(inited + 56) = v13;
      *(_QWORD *)(inited + 64) = 0xD00000000000001CLL;
      *(_QWORD *)(inited + 72) = 0x8000000100FCCA60;
      v14 = objc_msgSend(v6, "mainBundle");
      v15 = String._bridgeToObjectiveC()();
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      *(_QWORD *)(inited + 80) = v18;
      *(_QWORD *)(inited + 88) = v20;
      *(_QWORD *)(inited + 96) = 0xD00000000000001CLL;
      *(_QWORD *)(inited + 104) = 0x8000000100FCCA80;
      v21 = objc_msgSend(v6, "mainBundle");
      v22 = String._bridgeToObjectiveC()();
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      *(_QWORD *)(inited + 112) = v25;
      *(_QWORD *)(inited + 120) = v27;
      *(_QWORD *)(inited + 128) = 0xD00000000000001CLL;
      *(_QWORD *)(inited + 136) = 0x8000000100FCCAA0;
      v28 = objc_msgSend(v6, "mainBundle");
      v29 = String._bridgeToObjectiveC()();
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v28, "localizedStringForKey:value:table:", v29, v30, 0);

      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      *(_QWORD *)(inited + 144) = v32;
      *(_QWORD *)(inited + 152) = v34;
      v35 = sub_1008D6BFC(inited);
      v36 = (_QWORD *)v35;
      v37 = v35 + 64;
      v38 = 1 << *(_BYTE *)(v35 + 32);
      v39 = -1;
      if (v38 < 64)
        v39 = ~(-1 << v38);
      v40 = v39 & *(_QWORD *)(v35 + 64);
      v41 = (unint64_t)(v38 + 63) >> 6;
      swift_bridgeObjectRetain(v35);
      v42 = 0;
      if (v40)
        goto LABEL_8;
LABEL_9:
      v45 = v42 + 1;
      if (__OFADD__(v42, 1))
      {
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      if (v45 >= v41)
        goto LABEL_35;
      v46 = *(_QWORD *)(v37 + 8 * v45);
      ++v42;
      if (!v46)
      {
        v42 = v45 + 1;
        if (v45 + 1 >= v41)
          goto LABEL_35;
        v46 = *(_QWORD *)(v37 + 8 * v42);
        if (v46)
          goto LABEL_26;
        v42 = v45 + 2;
        if (v45 + 2 >= v41)
          goto LABEL_35;
        v46 = *(_QWORD *)(v37 + 8 * v42);
        if (v46)
          goto LABEL_26;
        v42 = v45 + 3;
        if (v45 + 3 >= v41)
          goto LABEL_35;
        v46 = *(_QWORD *)(v37 + 8 * v42);
        if (v46)
          goto LABEL_26;
        v42 = v45 + 4;
        if (v45 + 4 >= v41)
        {
LABEL_35:
          swift_release(v36);
          swift_bridgeObjectRelease(v36);

          return;
        }
        v46 = *(_QWORD *)(v37 + 8 * v42);
        if (!v46)
        {
          v47 = v45 + 5;
          if (v47 < v41)
          {
            v46 = *(_QWORD *)(v37 + 8 * v47);
            if (v46)
            {
              v42 = v47;
              goto LABEL_26;
            }
            while (1)
            {
              v42 = v47 + 1;
              if (__OFADD__(v47, 1))
                goto LABEL_38;
              if (v42 >= v41)
                goto LABEL_35;
              v46 = *(_QWORD *)(v37 + 8 * v42);
              ++v47;
              if (v46)
                goto LABEL_26;
            }
          }
          goto LABEL_35;
        }
      }
LABEL_26:
      v40 = (v46 - 1) & v46;
      for (i = __clz(__rbit64(v46)) + (v42 << 6); ; i = v43 | (v42 << 6))
      {
        v48 = (uint64_t *)(v36[6] + 16 * i);
        v49 = *v48;
        v50 = v48[1];
        swift_bridgeObjectRetain(v50);
        v51 = (NSString *)String._bridgeToObjectiveC()();
        v52 = NSSelectorFromString(v51);

        if (objc_msgSend(v3, "respondsToSelector:", v52)
          && (objc_msgSend(v3, "canPerformAction:withSender:", v52, 0) & 1) != 0
          && v36[2]
          && (v53 = sub_100842E98(v49, v50), (v54 & 1) != 0))
        {
          v55 = (uint64_t *)(v36[7] + 16 * v53);
          v56 = *v55;
          v57 = v55[1];
          swift_bridgeObjectRetain(v57);
          swift_bridgeObjectRelease(v50);
          sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
          memset(v62, 0, sizeof(v62));
          v58 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v56, v57, 0, 0, 0, 0, v52, v62, _swiftEmptyArrayStorage, 0, 0, 0, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
          v60 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v59 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v60 >= v59 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
          v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
          specialized Array._endMutation()(v61);

          if (!v40)
            goto LABEL_9;
        }
        else
        {
          swift_bridgeObjectRelease(v50);
          if (!v40)
            goto LABEL_9;
        }
LABEL_8:
        v43 = __clz(__rbit64(v40));
        v40 &= v40 - 1;
      }
    }
  }
}

void sub_100727FC8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  _QWORD v39[4];
  unint64_t v40;

  v40 = (unint64_t)_swiftEmptyArrayStorage;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
LABEL_33:
      __break(1u);
      return;
    }
    v4 = Strong;
    v5 = objc_msgSend(Strong, "repsForInfo:");
    v6 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v7 = sub_1004F619C();
    v8 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

  }
  else
  {
    v8 = &_swiftEmptySetSingleton;
  }
  v9 = (void *)sub_100857EA4((uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  if (!v9)
    return;
  v10 = objc_opt_self(CRLWPRep);
  v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
  if (!v11)
  {
LABEL_24:

    return;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "spellChecker");
  v14 = objc_msgSend(v13, "rangeOfMisspelledWordAtCharIndex:", a1);
  v16 = v15;

  if (v14 == (id)0x7FFFFFFFFFFFFFFFLL && v16 == 0)
  {
    sub_100736D9C();
    if (!v31)
      goto LABEL_24;
    v32 = (char *)objc_msgSend(v31, "selectedTextRange");
    if (!v32)
      goto LABEL_24;
    v33 = v32;
    if ((objc_msgSend(v32, "isEmpty") & 1) != 0)
    {

      goto LABEL_24;
    }
    v34 = (char *)objc_msgSend(v33, "start");
    v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v35 == NSNotFound.getter(v36))
    {

      goto LABEL_11;
    }
    v14 = *(id *)&v33[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v37 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    v38 = __OFSUB__(v37, v14);
    v16 = v37 - (_QWORD)v14;
    if (v38)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
LABEL_11:
  v18 = objc_msgSend(v12, "spellChecker");
  v19 = objc_msgSend(v18, "suggestionsForRange:", v14, v16);

  if (!v19)
    goto LABEL_24;
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String);

  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = (_QWORD *)(v20 + 40);
    sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
    for (i = 1; ; ++i)
    {
      v25 = *(v22 - 1);
      v24 = *v22;
      swift_bridgeObjectRetain(*v22);
      v39[3] = &type metadata for String;
      v39[0] = v25;
      v39[1] = v24;
      swift_bridgeObjectRetain(v26);
      v27 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v25, v24, 0, 0, 0, 0, "replaceAction:", v39, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
      v29 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v28 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v29 >= v28 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
      v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
      specialized Array._endMutation()(v30);

      if (v21 == i)
        break;
      if (i >= *(_QWORD *)(v20 + 16))
        goto LABEL_32;
      if (i == 5)
        break;
      v22 += 2;
    }
  }

  swift_bridgeObjectRelease(v20);
}

void sub_1007283E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;

  sub_10072284C();
  sub_100736D9C();
  if (!v1)
    goto LABEL_4;
  v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v2)
  {
    v3 = v1;
    swift_unknownObjectRetain(v1);
    v4 = v2;
    v5 = (void *)sub_100A1EDA0(v4);

    objc_msgSend(v3, "setSelectedTextRange:", v5);
    swift_unknownObjectRelease(v3);

LABEL_4:
    sub_100727440(16, 1);
    sub_10072297C();
    return;
  }
  __break(1u);
}

void sub_1007284C0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  sub_100736D9C();
  if (v0)
  {
    v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v0, "selectedRange"), 0);
    sub_10072DD84((uint64_t)v1);
    v3 = v2;

    sub_100727054(v3 == 0);
  }
}

void sub_10072854C(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  id v12[2];
  id v13[2];
  __int128 v14;
  _BYTE v15[24];
  uint64_t v16;

  sub_100736D9C();
  if (v3)
  {
    v4 = objc_msgSend(v3, "selectedTextRange");
    if (v4)
    {
      v5 = v4;
      sub_1004CB7BC(a1, (uint64_t)v15, &qword_1013E0230);
      if (v16)
      {
        v6 = sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
        if ((swift_dynamicCast(v13, v15, (char *)&type metadata for Any + 8, v6, 6) & 1) == 0)
        {

          return;
        }
        v7 = v13[0];
        v8 = objc_msgSend(v13[0], "propertyList");
        if (v8)
        {
          v9 = v8;
          _bridgeAnyObjectToAny(_:)(v13, v8);
          swift_unknownObjectRelease(v9);
        }
        else
        {
          *(_OWORD *)v13 = 0u;
          v14 = 0u;
        }
        sub_1004C4938((uint64_t)v13, (uint64_t)v15, &qword_1013E0230);
        if (v16)
        {
          if ((swift_dynamicCast(v12, v15, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v10 = v12[1];
            v11 = String._bridgeToObjectiveC()();
            objc_msgSend(v1, "replace:with:", v5, v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

          }
          else
          {

          }
          return;
        }

      }
      sub_1004CB800((uint64_t)v15, &qword_1013E0230);
    }
  }
}

void sub_10072877C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *Strong;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  char *v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  void *v49;
  double x;
  double y;
  double width;
  double height;
  id v54;
  uint64_t v55;
  uint64_t v56;
  objc_class *v57;
  char *v58;
  id v59;
  NSString v60;
  double v61;
  id v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  objc_super v69;
  double v70[4];
  CGRect v71;
  CGRect v72;
  CGRect v73;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v68 = Strong;
    v8 = objc_msgSend(Strong, "layerHost");
    if (!v8)
      goto LABEL_28;
    v9 = v8;
    v67 = objc_msgSend(v8, "canvasView");
    swift_unknownObjectRelease(v9);
    if (!v67)
      goto LABEL_28;
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v6);
    if (v10)
    {
      if (!*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
      {
        __break(1u);
        goto LABEL_34;
      }
      v11 = v10;
      v12 = objc_msgSend(v10, "repsForInfo:");
      v13 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v14 = sub_1004F619C();
      v15 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

    }
    else
    {
      v15 = &_swiftEmptySetSingleton;
    }
    v66 = (id)sub_100857EA4((uint64_t)v15);
    swift_bridgeObjectRelease(v15);
    if (v66)
    {
      v16 = objc_opt_self(CRLWPRep);
      if (swift_dynamicCastObjCClass(v66, v16))
      {
        v17 = objc_msgSend(v68, "layerHost");
        if (!v17)
        {

          v64 = v67;
LABEL_25:

          v63 = v66;
          goto LABEL_29;
        }
        v18 = v17;
        if ((objc_msgSend(v17, "respondsToSelector:", "asiOSCVC") & 1) == 0)
        {

          swift_unknownObjectRelease(v18);
          return;
        }
        v19 = objc_msgSend(v18, "asiOSCVC");
        v20 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionForEditor:", v3, swift_unknownObjectRelease(v18).n128_f64[0]);
        if (v20)
        {
          v65 = v20;
          v21 = objc_opt_self(CRLWPSelection);
          v22 = swift_dynamicCastObjCClass(v65, v21);
          if (!v22)
          {

            v63 = v65;
            goto LABEL_29;
          }
          v23 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
          if (*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                         + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
          {
            v24 = (void *)v22;
            v25 = objc_msgSend(v68, "layoutForInfo:");
            if (v25)
            {
              v26 = v25;
              v27 = type metadata accessor for CRLWPLayout();
              v28 = swift_dynamicCastClass(v26, v27);
              if (v28)
              {
                v29 = (char *)v28;
                v30 = objc_msgSend(v24, "superRange");
                v32 = v31;
                v33 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
                v34 = (void *)sub_10060EDE4((uint64_t)v30, v32);
                if (qword_1013DCB58 != -1)
                  swift_once(&qword_1013DCB58, sub_1006185A4);
                v35 = (id)qword_10147ECB0;
                v36 = v34;
                sub_1006255CC(v29, v36, v70);

                objc_msgSend(v29, "rectInRoot:", v70[0], v70[1], v70[2], v70[3]);
                objc_msgSend(v68, "convertUnscaledToBoundsRect:");
                v38 = v37;
                v40 = v39;
                v42 = v41;
                v44 = v43;
                objc_msgSend(v68, "visibleBoundsRect");
                v73.origin.x = v45;
                v73.origin.y = v46;
                v73.size.width = v47;
                v73.size.height = v48;
                v71.origin.x = v38;
                v71.origin.y = v40;
                v71.size.width = v42;
                v71.size.height = v44;
                v72 = CGRectIntersection(v71, v73);
                v49 = *(void **)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
                if (v49)
                {
                  x = v72.origin.x;
                  y = v72.origin.y;
                  width = v72.size.width;
                  height = v72.size.height;
                  v54 = objc_msgSend(v49, "substringWithRange:", a1, a2);
                  static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
                  v56 = v55;

                  v57 = (objc_class *)type metadata accessor for ReferenceLibraryViewControllerWithDismiss();
                  v58 = (char *)objc_allocWithZone(v57);
                  *(_QWORD *)&v58[OBJC_IVAR____TtC8Freeform41ReferenceLibraryViewControllerWithDismiss_interactiveCanvasController] = v68;
                  v59 = v68;
                  v60 = String._bridgeToObjectiveC()();
                  *(_QWORD *)&v61 = swift_bridgeObjectRelease(v56).n128_u64[0];
                  v69.receiver = v58;
                  v69.super_class = v57;
                  v62 = objc_msgSendSuper2(&v69, "initWithTerm:", v60, v61);

                  sub_100728D08(v62, v19, (uint64_t)v67, x, y, width, height);
                  return;
                }
LABEL_35:
                __break(1u);
                return;
              }

            }
            v64 = v65;
            goto LABEL_25;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }

LABEL_28:
        v63 = v68;
        goto LABEL_29;
      }

    }
    v63 = v67;
LABEL_29:

  }
}

void sub_100728D08(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  void *v7;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v15 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "setModalPresentationStyle:", 7, v16);
  v19 = objc_msgSend(a1, "popoverPresentationController");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "setDelegate:", v7);

  }
  v21 = objc_msgSend(a1, "popoverPresentationController");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "setSourceView:", a3);

  }
  v23 = objc_msgSend(a1, "popoverPresentationController");
  objc_msgSend(v23, "setSourceRect:", a4, a5, a6, a7);

  v24 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
  type metadata accessor for MainActor(0);
  v25 = v7;
  v26 = a2;
  v27 = a1;
  v28 = static MainActor.shared.getter(v27);
  v29 = (_QWORD *)swift_allocObject(&unk_10127AD60, 56, 7);
  v29[2] = v28;
  v29[3] = &protocol witness table for MainActor;
  v29[4] = v25;
  v29[5] = v26;
  v29[6] = v27;
  v30 = sub_100521B98((uint64_t)v18, (uint64_t)&unk_1013EFD88, (uint64_t)v29);
  swift_release(v30);
}

void sub_100728F2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  char v14;
  char *v15;
  id v16;
  id v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(__n128);
  char *v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  char *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  void **aBlock;
  double v51;
  void (*v52)(uint64_t, void *);
  void *v53;
  void (*v54)(void *);
  uint64_t v55;

  v1 = v0;
  sub_100736D9C();
  if (v2)
  {
    v3 = objc_msgSend(v2, "selectedRange");
    v5 = v4;
    if (objc_msgSend((id)objc_opt_self(LTUITranslationViewController), "isAvailable"))
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      if (Strong)
      {
        v49 = Strong;
        v7 = objc_msgSend(Strong, "layerHost");
        if (!v7)
        {

          return;
        }
        v8 = v7;
        if ((objc_msgSend(v7, "respondsToSelector:", "asiOSCVC") & 1) == 0)
        {

          swift_unknownObjectRelease(v8);
          return;
        }
        v9 = objc_msgSend(v8, "asiOSCVC");
        swift_unknownObjectRelease(v8);
        v10 = objc_msgSend(objc_allocWithZone((Class)LTUITranslationViewController), "init");
        v11 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
        v12 = *(_BYTE **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (v12)
        {
          v13 = v10;
          v14 = v12[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties];
          v15 = v12;
          if ((v14 & 1) == 0)
            sub_1007D5878();
          v16 = *(id *)&v15[OBJC_IVAR____TtC8Freeform12CRLWPStorage__coreTextAttributedString];

          v17 = objc_msgSend(v16, "attributedSubstringFromRange:", v3, v5);
          objc_msgSend(v13, "setText:", v17);
          if ((objc_msgSend(v49, "documentIsSharedReadOnly") & 1) != 0)
          {
            v18 = 0;
          }
          else
          {
            v19 = *(char **)(v1 + v11);
            v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
            v21 = *(uint64_t (**)(__n128))(*(_QWORD *)v20 + 312);
            v22 = v19;
            v23 = swift_retain(v20);
            LOBYTE(v21) = v21(v23);

            swift_release(v20);
            v18 = v21 ^ 1;
          }
          objc_msgSend(v13, "setIsSourceEditable:", v18 & 1);
          v24 = swift_allocObject(&unk_10127AC98, 24, 7);
          swift_unknownObjectWeakInit(v24 + 16);
          v54 = sub_10073D91C;
          v55 = v24;
          aBlock = _NSConcreteStackBlock;
          v51 = *(double *)"";
          v52 = sub_1007233C8;
          v53 = &unk_10127AD28;
          v25 = _Block_copy(&aBlock);
          objc_msgSend(v13, "setReplacementHandler:", v25, swift_release(v55).n128_f64[0]);
          _Block_release(v25);
          v26 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionForEditor:", v1);
          if (!v26)
            goto LABEL_27;
          v27 = v26;
          v28 = objc_opt_self(CRLWPSelection);
          v29 = swift_dynamicCastObjCClass(v27, v28);
          if (!v29)
          {

            return;
          }
          if (*(_QWORD *)(*(_QWORD *)(v1 + v11) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
          {
            v30 = (void *)v29;
            v31 = objc_msgSend(v49, "layoutForInfo:");
            if (v31)
            {
              v32 = v31;
              v33 = type metadata accessor for CRLWPLayout();
              v34 = swift_dynamicCastClass(v32, v33);
              if (v34)
              {
                v35 = (char *)v34;
                v36 = objc_msgSend(v9, "canvasView");
                if (v36)
                {
                  v37 = v36;
                  v38 = objc_msgSend(v30, "superRange");
                  v40 = v39;
                  v41 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
                  v42 = (void *)sub_10060EDE4((uint64_t)v38, v40);
                  if (qword_1013DCB58 != -1)
                    swift_once(&qword_1013DCB58, sub_1006185A4);
                  v43 = (id)qword_10147ECB0;
                  v44 = v42;
                  sub_1006255CC(v35, v44, (double *)&aBlock);

                  objc_msgSend(v35, "convertNaturalRectToUnscaledCanvas:", *(double *)&aBlock, v51, *(double *)&v52, *(double *)&v53);
                  objc_msgSend(v49, "convertUnscaledToBoundsRect:");
                  sub_100728D08(v13, v9, (uint64_t)v37, v45, v46, v47, v48);

                }
                else
                {

                }
LABEL_27:

                goto LABEL_28;
              }

            }
LABEL_28:

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
    }
  }
}

void sub_1007293FC(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  NSString v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100736D9C();
    if (v6)
    {
      v7 = objc_msgSend(v6, "selectedRange");
      v9 = v8;
      v10 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
      v11 = (void *)sub_10060EDE4((uint64_t)v7, v9);
      v12 = objc_msgSend(a1, "string");
      if (!v12)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v15 = v14;
        v12 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
      }
      objc_msgSend(v5, "replace:with:", v11, v12, v13);

      v5 = v12;
    }

  }
}

void sub_100729500()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  void *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  BOOL v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  id v30;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "canvasEditor");

    if (v3)
    {
      v30 = objc_msgSend(v3, "pasteboardController");
      swift_unknownObjectRelease(v3);
      sub_100736D9C();
      if (!v4 || (v5 = (char *)objc_msgSend(v4, "selectedTextRange")) == 0)
      {
        v12 = v30;
LABEL_15:

        return;
      }
      v6 = v5;
      v7 = (char *)objc_msgSend(v5, "start");
      v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      if (v8 == NSNotFound.getter(v9))
      {
        v10 = 0x7FFFFFFFFFFFFFFFLL;
        v11 = 0;

      }
      else
      {
        v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

        v14 = __OFSUB__(v13, v10);
        v11 = v13 - v10;
        if (v14)
        {
          __break(1u);
LABEL_17:
          __break(1u);
          return;
        }
      }
      v15 = objc_msgSend((id)objc_opt_self(CRLPasteboard), "stylePasteboard");
      v16 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                     + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v16)
      {
        v17 = v15;
        v18 = objc_allocWithZone((Class)type metadata accessor for CRLWPStorage());
        sub_1007D7624((char *)v16, v10, v11);
        v20 = v19;
        v21 = objc_msgSend(v30, "newCopyAssistantWithPasteboard:", v17);
        v22 = objc_msgSend(v21, "pasteboardObject");
        if (v22)
        {
          v23 = v22;
          sub_100736AD8(v20, (uint64_t)v22);
          v24 = objc_msgSend(objc_allocWithZone((Class)CRLContentDescriptionTranslator), "init");
          v25 = sub_100736C28(v20, v24);
          v26 = v21;
          sub_100C9BC14((uint64_t)v25);
          v28 = v27;
          swift_bridgeObjectRelease(v25);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v26, "setContentDescription:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

          objc_msgSend(v26, "copyToPasteboard");
          v17 = v20;
          v30 = v20;
          v21 = v24;
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"copyStyleFrom(styledItem:to:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 20, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copyStyleFrom(styledItem:to:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 20, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          v26 = v20;
          v23 = v20;
        }

        v12 = v21;
        goto LABEL_15;
      }
      goto LABEL_17;
    }
  }
}

void sub_100729880()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  double *v25;
  double *v26;
  _BYTE *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  char v34[24];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v33 = Strong;
    v2 = objc_msgSend(Strong, "canvasEditor");
    if (v2)
    {
      v3 = v2;
      v32 = objc_msgSend(v2, "pasteboardController");
      v4 = objc_msgSend(v33, "commandController", swift_unknownObjectRelease(v3).n128_f64[0]);
      if (v4)
      {
        v5 = v4;
        sub_100736D9C();
        if (v6)
        {
          v7 = (char *)objc_msgSend(v6, "selectedTextRange");
          if (v7)
          {
            v8 = v7;
            v9 = (char *)objc_msgSend(v7, "start");
            v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

            if (v10 == NSNotFound.getter(v11))
            {
              v12 = 0x7FFFFFFFFFFFFFFFLL;
              v13 = 0;

            }
            else
            {
              v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
              v14 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

              v15 = __OFSUB__(v14, v12);
              v13 = v14 - v12;
              if (v15)
              {
                __break(1u);
                return;
              }
            }
            v16 = objc_msgSend((id)objc_opt_self(CRLPasteboard), "stylePasteboard");
            v17 = objc_msgSend(v32, "commandsToPasteTextStyleTo:in:from:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape), v12, v13, v16);
            v18 = type metadata accessor for CRLCommand();
            v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

            if ((unint64_t)v19 >> 62)
            {
              if (v19 < 0)
                v30 = v19;
              else
                v30 = v19 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v19);
              v31 = _CocoaArrayWrapper.endIndex.getter(v30);
              swift_bridgeObjectRelease(v19);
              if (v31 >= 1)
                goto LABEL_13;
            }
            else if (*(uint64_t *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
            {
LABEL_13:
              sub_1006A9664(0);
              v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v21 = String._bridgeToObjectiveC()();
              v22 = String._bridgeToObjectiveC()();
              v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

              v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
              v26 = v25;

              sub_1006A92B4(v24, v26);
              v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup()), "init");
              v28 = (uint64_t *)&v27[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
              swift_beginAccess(&v27[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v34, 1, 0);
              v29 = *v28;
              *v28 = v19;
              swift_bridgeObjectRelease(v29);
              sub_1006A5F54(v27, 0, 0, 4, 0);

              sub_1006A984C(0);
              return;
            }

            swift_bridgeObjectRelease(v19);
            goto LABEL_20;
          }
        }

      }
      return;
    }
LABEL_20:

  }
}

uint64_t sub_100729C2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::Int v18;
  Class isa;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  _BYTE v24[72];

  sub_100736D9C();
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "selectedTextRange");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, "isEmpty");

  if ((v4 & 1) != 0)
    return 0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    return 0;
  v6 = Strong;
  v7 = objc_msgSend(Strong, "canvasEditor");

  if (!v7)
    return 0;
  v8 = objc_msgSend(v7, "pasteboardController");
  swift_unknownObjectRelease(v7);
  v9 = sub_1004B804C(&qword_1013E7788);
  result = swift_initStackObject(v9, v24);
  *(_OWORD *)(result + 16) = xmmword_100EF5E40;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v12 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v12)
  {
    v13 = result;
    v14 = result + 32;
    v23 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    v15 = type metadata accessor for CRLWPStorage();
    v16 = sub_1004B7878((unint64_t *)&unk_1013E8590, (uint64_t (*)(uint64_t))type metadata accessor for CRLWPStorage, (uint64_t)&protocol conformance descriptor for NSObject);
    v17 = v12;
    AnyHashable.init<A>(_:)(&v23, v15, v16);
    v18 = sub_1004B8524(v13);
    swift_setDeallocating(v13);
    swift_arrayDestroy(v14, 1, &type metadata for AnyHashable);
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v18);
    v20 = (void *)objc_opt_self(CRLPasteboard);
    v21 = objc_msgSend(v20, "stylePasteboard", v23);
    v22 = objc_msgSend(v8, "containsStylesRelevantTo:on:", isa, v21);

    return (uint64_t)v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_100729E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v13 = 0;
  v14 = 0;
  v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v5)
LABEL_23:
    __break(1u);
  result = (uint64_t)objc_msgSend(v5, "hyperlinkFieldAtCharIndex:effectiveRange:", a1, &v13);
  if (result)
  {

    if (v13 == a1 && v14 == a2)
      return 1;
    result = 0;
    if (!a2 && v14 >= 2)
    {
      v8 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
      }
      else
      {
        v9 = v13 + v14;
        if (!__OFADD__(v13, v14))
        {
          v10 = __OFSUB__(v9, 1);
          v11 = v9 - 1;
          if (!v10)
          {
            if (v11 >= v8)
              return v8 <= a1 && v11 >= a1;
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      __break(1u);
      goto LABEL_21;
    }
  }
  return result;
}

void sub_100729F3C(char *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  char *v30;
  void *Strong;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _BYTE *v55;
  id v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;

  v64 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F3DC0);
  __chkstk_darwin(v2);
  v61 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - v5;
  v7 = sub_1004B804C((uint64_t *)&unk_1013EFCF0);
  __chkstk_darwin(v7);
  v60 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - v10;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v63 = v1;
  v23 = *(char **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v23)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v58 = v11;
  v59 = v6;
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v24)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v25 = (uint64_t *)&v64[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v26 = *(_QWORD *)&v64[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  (*(void (**)(__n128))(*(_QWORD *)v24 + 760))(v20);
  sub_1004D29BC((uint64_t)&v18[*(int *)(v16 + 20)], (uint64_t)v22);
  v27 = v23;
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v22, v12);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLWPStorageCRDTData);
  v28 = (void *)CRAttributedString.attributedString.getter(v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v29 = objc_msgSend(v28, "length");

  if ((uint64_t)v29 >= v26 && (*v25 & 0x8000000000000000) == 0)
  {
    if (objc_msgSend(v63, "hasText"))
    {
      v30 = &v63[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc];
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v63[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
      if (Strong)
      {
        v32 = Strong;
        v33 = objc_msgSend(Strong, "commandController");

        if (v33)
        {
          v34 = (void *)swift_unknownObjectWeakLoadStrong(v30);
          if (!v34
            || (v35 = v34,
                v36 = objc_msgSend(v34, "selectionModelTranslator"),
                v35,
                !v36))
          {
            v36 = v33;
LABEL_18:

            return;
          }
          v37 = (char *)objc_msgSend(v64, "start");
          v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

          if (v38 == NSNotFound.getter(v39))
          {
            v40 = 0x7FFFFFFFFFFFFFFFLL;
            v41 = 0;
            v42 = v62;
            goto LABEL_14;
          }
          v40 = *v25;
          v43 = v25[1];
          v41 = v43 - *v25;
          v42 = v62;
          if (!__OFSUB__(v43, *v25))
          {
LABEL_14:
            if (*(_QWORD *)(*(_QWORD *)&v63[v42] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
            {
              v44 = objc_msgSend(v36, "selectionPathForRange:onStorage:", v40, v41);
              if (v44)
              {
                v45 = v44;
                v46 = objc_msgSend(objc_allocWithZone((Class)CRLWPReplaceTextCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:usePersistableCommitSelectionPath:", v45, v45, v45, 1);
                v64 = (char *)*v25;
                v62 = v25[1];
                v47 = *(void **)&v63[v42];
                v48 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
                v49 = (uint64_t)v58;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v58, 1, 1, v48);
                v50 = sub_1004B804C(&qword_1013F3D40);
                v51 = (uint64_t)v59;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v59, 1, 1, v50);
                v52 = v60;
                sub_1004CB7BC(v49, v60, (uint64_t *)&unk_1013EFCF0);
                v53 = v61;
                sub_1004CB7BC(v51, v61, (uint64_t *)&unk_1013F3DC0);
                objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
                v54 = v47;
                v55 = sub_1006BEFE0((uint64_t)v54, (uint64_t)v64, v62, 0, 0xE000000000000000, 0, v52, v53);
                sub_1004CB800(v51, (uint64_t *)&unk_1013F3DC0);
                sub_1004CB800(v49, (uint64_t *)&unk_1013EFCF0);
                v56 = v46;
                sub_1006A5F54(v55, 0, v46, 4, 0);

              }
              goto LABEL_18;
            }
LABEL_23:
            __break(1u);
            return;
          }
          __break(1u);
          goto LABEL_21;
        }
      }
    }
  }
}

void sub_10072A46C(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  char v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_BYTE **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
    goto LABEL_30;
  v4 = v2[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties];
  v5 = v2;
  if ((v4 & 1) == 0)
    sub_1007D5878();
  v6 = *(_QWORD **)&v5[OBJC_IVAR____TtC8Freeform12CRLWPStorage__listRuns];
  swift_bridgeObjectRetain(v6);

  v7 = v6[2];
  if (!v7)
  {
LABEL_17:
    v13 = v6;
    goto LABEL_26;
  }
  v8 = 0;
  while (1)
  {
    v9 = (_QWORD *)v6[6 * v8 + 9];
    v10 = v9[2];
    if (v10)
    {
      if (v9[4] == a1)
        goto LABEL_18;
      if (v10 != 1)
        break;
    }
LABEL_6:
    if (++v8 == v7)
      goto LABEL_17;
  }
  if (v9[5] == a1)
  {
LABEL_18:
    swift_bridgeObjectRetain(v6[6 * v8 + 9]);
    swift_bridgeObjectRelease(v6);
    if (v9[4] == a1)
    {
LABEL_19:
      swift_bridgeObjectRelease(v9);
      return;
    }
    if (v10 != 1)
    {
      v14 = 5;
      while (v9[v14] != a1)
      {
        v15 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
          goto LABEL_29;
        ++v14;
        if (v15 == v10)
          goto LABEL_25;
      }
      goto LABEL_19;
    }
LABEL_25:
    v13 = v9;
LABEL_26:
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v10 == 2)
    goto LABEL_6;
  v11 = 6;
  while (1)
  {
    v12 = v11 - 3;
    if (__OFADD__(v11 - 4, 1))
      break;
    if (v9[v11] == a1)
      goto LABEL_18;
    ++v11;
    if (v12 == v10)
      goto LABEL_6;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_10072A67C()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void *v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  objc_super v15;

  sub_100736D9C();
  if (!v1 || (v2 = (char *)objc_msgSend(v1, "selectedTextRange")) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deleteForward(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 1685, "Failed to delete text. No selection.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteForward(_:)", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 1685, (uint64_t)"Failed to delete text. No selection.", 36, 2u);
    return;
  }
  v3 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v3)
    goto LABEL_12;
  v4 = v2;
  v5 = v3;
  if (!objc_msgSend(v4, "isEmpty"))
  {
    v13 = v4;
    goto LABEL_9;
  }
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v7 = objc_msgSend(v5, "nextCharacterIndex:", v6);
  if ((uint64_t)v7 < v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  v8 = v7;
  v9 = (objc_class *)type metadata accessor for CRLTextRange();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v12 = v6;
  *((_QWORD *)v12 + 1) = v8;
  *(_QWORD *)&v10[v11] = 0;
  v15.receiver = v10;
  v15.super_class = v9;
  v13 = (char *)objc_msgSendSuper2(&v15, "init");
LABEL_9:
  v14 = v13;

  sub_100729F3C(v14);
}

void sub_10072A860(uint64_t a1, uint64_t a2)
{
  sub_10072A898(a1, a2, (uint64_t)&unk_100F07FC8, (uint64_t (*)(uint64_t, id, id, id))sub_100DC7B80, (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_100DC0D24);
}

void sub_10072A87C(uint64_t a1, uint64_t a2)
{
  sub_10072A898(a1, a2, (uint64_t)&unk_100F07FA8, (uint64_t (*)(uint64_t, id, id, id))sub_100DC7B38, (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_100DC0D40);
}

void sub_10072A898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, id, id, id), void (*a5)(uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  void *v6;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t KeyPath;
  uint64_t v17;
  char v18;
  int v19;
  uint64_t v20;
  id v21[6];

  v6 = *(void **)(*(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v6)
  {
    v12 = v6;
    sub_1007D7CB8(a1, a2, v21);

    v13 = v21[4];
    v14 = v21[5];
    v15 = v21[3];

    KeyPath = swift_getKeyPath(a3);
    v17 = a4(KeyPath, v15, v13, v14);
    LOBYTE(a4) = v18;
    swift_release(KeyPath);
    if ((a4 & 1) == 0)
    {
      v19 = v17 & 1;
LABEL_6:
      v20 = swift_getKeyPath(a3);
      a5(v20, v19 ^ 1u, a1, a2);

      swift_release(v20);
      return;
    }
    if (*(_QWORD *)(v17 + 16))
    {
      v19 = *(unsigned __int8 *)(v17 + 32);
      sub_10062E238(v17, 1);
      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10072A9BC(uint64_t a1, uint64_t a2)
{
  sub_10072AA04(a1, a2, (uint64_t)&unk_100F07F88, (uint64_t (*)(uint64_t, id, id, id))sub_100DC71FC, (void (*)(uint64_t, uint64_t, __n128))sub_10073DD84, (void (*)(uint64_t, BOOL, uint64_t, uint64_t, __n128))sub_100DC10E0);
}

void sub_10072A9E0(uint64_t a1, uint64_t a2)
{
  sub_10072AA04(a1, a2, (uint64_t)&unk_100F07F68, (uint64_t (*)(uint64_t, id, id, id))sub_100DC68C0, (void (*)(uint64_t, uint64_t, __n128))sub_10073DD84, (void (*)(uint64_t, BOOL, uint64_t, uint64_t, __n128))sub_100DC1440);
}

void sub_10072AA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, id, id, id), void (*a5)(uint64_t, uint64_t, __n128), void (*a6)(uint64_t, BOOL, uint64_t, uint64_t, __n128))
{
  uint64_t v6;
  void *v7;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  id v24[6];

  v7 = *(void **)(*(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v7)
  {
    v13 = v7;
    sub_1007D7CB8(a1, a2, v24);

    v14 = v24[4];
    v15 = v24[5];
    v16 = v24[3];

    KeyPath = swift_getKeyPath(a3);
    v18 = swift_getKeyPath(a3);
    v19 = a4(v18, v16, v14, v15);
    LOBYTE(v15) = v20;
    v21 = swift_release(v18);
    if ((v15 & 1) == 0)
    {
LABEL_5:
      a6(KeyPath, v19 == 0, a1, a2, v21);

      swift_release(KeyPath);
      return;
    }
    if (*(_QWORD *)(v19 + 16))
    {
      v22 = *(_QWORD *)(v19 + 32);
      a5(v19, 1, v21);
      v19 = v22;
      goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10072AB4C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  swift_unknownObjectRetain(a3);
  v7 = a1;
  _bridgeAnyObjectToAny(_:)(v13, a3);
  swift_unknownObjectRelease(a3);
  sub_100736D9C();
  if (v8)
  {
    v9 = (char *)objc_msgSend(v8, "selectedTextRange");
    if (v9)
    {
      v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      a4(v10, v11);
    }
  }

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
}

void sub_10072ABF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  char *v7;
  char *v8;
  char *v9;
  char *KeyPath;
  uint64_t v11;
  char v12;
  float v13;
  uint64_t v14;
  id v15[6];

  v3 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v3)
  {
    v6 = v3;
    sub_1007D7CB8(a1, a2, v15);

    v7 = (char *)v15[4];
    v8 = (char *)v15[5];
    v9 = (char *)v15[3];

    KeyPath = (char *)swift_getKeyPath(&unk_100F08008);
    v11 = sub_100DC8518(KeyPath, v9, v7, v8);
    LOBYTE(v8) = v12;
    swift_release(KeyPath);
    if ((v8 & 1) == 0)
    {
      v13 = *(float *)&v11;
LABEL_6:
      v14 = swift_getKeyPath(&unk_100F08008);
      sub_100DC17A4(v14, a1, a2, v13 + 1.0);

      swift_release(v14);
      return;
    }
    if (*(_QWORD *)(v11 + 16))
    {
      v13 = *(float *)(v11 + 32);
      sub_10062E238(v11, 1);
      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10072AD18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  char *v7;
  char *v8;
  char *v9;
  char *KeyPath;
  uint64_t v11;
  char v12;
  float v13;
  uint64_t v14;
  id v15[6];

  v3 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v3)
  {
    v6 = v3;
    sub_1007D7CB8(a1, a2, v15);

    v7 = (char *)v15[4];
    v8 = (char *)v15[5];
    v9 = (char *)v15[3];

    KeyPath = (char *)swift_getKeyPath(&unk_100F08008);
    v11 = sub_100DC8518(KeyPath, v9, v7, v8);
    LOBYTE(v8) = v12;
    swift_release(KeyPath);
    if ((v8 & 1) == 0)
    {
      v13 = *(float *)&v11;
LABEL_6:
      v14 = swift_getKeyPath(&unk_100F08008);
      sub_100DC17A4(v14, a1, a2, v13 + -1.0);

      swift_release(v14);
      return;
    }
    if (*(_QWORD *)(v11 + 16))
    {
      v13 = *(float *)(v11 + 32);
      sub_10062E238(v11, 1);
      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10072AE54(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(&v15, v8);
    swift_unknownObjectRelease(a3);
    sub_100736D9C();
    if (!v9)
      goto LABEL_7;
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
    v10 = a1;
    sub_100736D9C();
    if (!v9)
      goto LABEL_7;
  }
  v11 = (char *)objc_msgSend(v9, "selectedTextRange", v15, v16);
  if (v11)
  {
    v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    a4(v12, v13);
  }
LABEL_7:

  return sub_1004CB800((uint64_t)&v15, &qword_1013E0230);
}

void sub_10072AF30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _BYTE *v36;
  id v37;
  char *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(__n128);
  char *v57;
  __n128 v58;
  void *v59;
  uint64_t v60;
  uint64_t (*v61)(__n128);
  __n128 v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)(__n128);
  char *v67;
  __n128 v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t (*v72)(__n128);
  char *v73;
  __n128 v74;
  void *v75;
  id v76;
  char *v77;
  id v78;
  uint64_t v79;
  void (*v80)(__n128);
  char *v81;
  id v82;
  __n128 v83;
  Class isa;
  _BYTE *v85;
  uint64_t v86;
  id v87;
  _BYTE *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  _QWORD v98[4];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    return;
  v96 = Strong;
  sub_100736D9C();
  if (!v10 || (v11 = objc_msgSend(v10, "selectedTextRange")) == 0)
  {

    return;
  }
  v95 = v11;
  v12 = objc_msgSend(v96, "commandController");
  if (!v12)
  {

    return;
  }
  v94 = v12;
  v13 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (!v13
    || (v14 = v13,
        v15 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape,
        v93 = objc_msgSend(v13, "layoutForInfo:", *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)), v14, !v93))
  {

    return;
  }
  v16 = objc_opt_self(CRLWPShapeLayout);
  v17 = swift_dynamicCastObjCClass(v93, v16);
  if (!v17)
  {

    return;
  }
  v18 = v17;
  v92 = v15;
  v19 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (!v19
    || (v20 = v19,
        v91 = v18,
        v21 = objc_msgSend(v19, "layoutForInfo:", *(_QWORD *)(v2 + v92)),
        v20,
        !v21))
  {
    v21 = v96;
LABEL_23:

    v42 = v95;
LABEL_24:

    return;
  }
  v22 = objc_opt_self(CRLWPShapeLayout);
  v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
  if (!v23)
  {

    goto LABEL_23;
  }
  v24 = objc_msgSend(v23, "layoutInfoGeometry");

  v25 = objc_msgSend(v24, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v98, v25);
  swift_unknownObjectRelease(v25);
  v26 = sub_1004B8930(0, (unint64_t *)&qword_1013E4C50, off_101229818);
  if ((swift_dynamicCast(&v97, v98, (char *)&type metadata for Any + 8, v26, 6) & 1) == 0)
  {

    v42 = v96;
    goto LABEL_24;
  }
  v90 = v97;
  sub_1006A9664(0);
  KeyPath = swift_getKeyPath(&unk_100F07EF0);
  sub_10072E544(KeyPath);
  v29 = v28;
  v31 = v30;
  swift_release(KeyPath);
  v32 = 2;
  if (v31 != 2)
    v32 = v29;
  v86 = v32;
  v33 = swift_getKeyPath(&unk_100F07EF0);
  v34 = sub_10073138C();
  if (v34)
  {
    v35 = v34;
    v36 = *(_BYTE **)&v34[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v87 = *(id *)&v34[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v88 = v36;
    v37 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
    v89 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v37, v37, v37);
    v38 = (char *)*(id *)(v2 + v92);
    swift_retain(v33);
    v88 = (_BYTE *)sub_100738B04(v38, (uint64_t)v88, (uint64_t)v87, v33, a1);

    swift_release(v33);
    v39 = (void *)swift_unknownObjectWeakLoadStrong(v8);
    v40 = objc_msgSend(v39, "commandController");

    if (v40)
    {
      v41 = v89;
      v87 = v89;
      sub_1006A5F54(v88, 0, v41, 4, 0);

    }
    sub_10073259C(v33, (uint64_t *)&unk_1013EFD60);
    swift_release(v33);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2939, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2939, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_release(v33);
  }
  v43 = *(char **)(*(_QWORD *)(v2 + v92) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v43)
  {
    v44 = *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
    v45 = v43;
    if (v44)
    {
      sub_1007D484C();
      v47 = v46;

      v45 = v47;
    }
    v48 = (char *)objc_msgSend(v95, "start");
    v49 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v50 = sub_1005034E0(v49);
    v52 = v51;

    if ((v52 & 1) != 0 || v50)
      goto LABEL_42;
    v53 = *(char **)(v2 + v92);
    v54 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v55 = *(_QWORD *)&v53[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v56 = *(uint64_t (**)(__n128))(*(_QWORD *)v55 + 288);
    v57 = v53;
    v58 = swift_retain(v55);
    v59 = (void *)v56(v58);
    LODWORD(v55) = objc_msgSend(v59, "widthValid", swift_release(v55).n128_f64[0]);

    if ((_DWORD)v55)
    {
      v60 = *(_QWORD *)&v53[v54];
      v61 = *(uint64_t (**)(__n128))(*(_QWORD *)v60 + 288);
      v62 = swift_retain(v60);
      v63 = (void *)v61(v62);
      LOBYTE(v60) = objc_msgSend(v63, "heightValid", swift_release(v60).n128_f64[0]);

      if ((v60 & 1) != 0)
      {
LABEL_42:
        sub_1006A984C(0);

        return;
      }
    }
    else
    {

    }
    v64 = *(char **)(v2 + v92);
    v65 = *(_QWORD *)&v64[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v66 = *(uint64_t (**)(__n128))(*(_QWORD *)v65 + 288);
    v67 = v64;
    v68 = swift_retain(v65);
    v69 = (void *)v66(v68);

    LOBYTE(v65) = objc_msgSend(v69, "widthValid", swift_release(v65).n128_f64[0]);
    if ((v65 & 1) == 0)
    {
      v70 = *(char **)(v2 + v92);
      v71 = *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v72 = *(uint64_t (**)(__n128))(*(_QWORD *)v71 + 288);
      v73 = v70;
      v74 = swift_retain(v71);
      v75 = (void *)v72(v74);

      LOBYTE(v71) = objc_msgSend(v75, "heightValid", swift_release(v71).n128_f64[0]);
      if ((v71 & 1) == 0)
      {
        sub_100758AD8(v86, a1);
        v76 = v90;
        objc_msgSend(v90, "setPosition:");
        v77 = *(char **)(v2 + v92);
        v78 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetInfoGeometry(0));
        v79 = *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v80 = *(void (**)(__n128))(*(_QWORD *)v79 + 256);
        v81 = v77;
        v82 = v76;
        v83 = swift_retain(v79);
        v80(v83);
        swift_release(v79);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v85 = objc_msgSend(v78, "initWithId:geometry:", isa, v82);

        sub_1006A5F54(v85, 0, 0, 4, 0);
      }
    }
    goto LABEL_42;
  }
  __break(1u);
}

void sub_10072B798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(__n128);
  char *v37;
  __n128 v38;
  __n128 v39;
  id v40;
  id v41;
  NSString v42;
  NSString v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Class v49;
  uint64_t *v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(__n128);
  char *v65;
  __n128 v66;
  void *v67;
  uint64_t v68;
  uint64_t (*v69)(__n128);
  __n128 v70;
  void *v71;
  id v72;
  id v73;
  char *v74;
  id v75;
  uint64_t v76;
  void (*v77)(__n128);
  char *v78;
  id v79;
  __n128 v80;
  Class isa;
  _BYTE *v82;
  uint64_t v83;
  char *v84;
  id KeyPath;
  id v86;
  Class v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id v93;
  objc_super v94;
  void *v95;
  _QWORD v96[4];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    return;
  v93 = Strong;
  sub_100736D9C();
  if (!v10 || (v11 = objc_msgSend(v10, "selectedTextRange")) == 0)
  {

    return;
  }
  v92 = v11;
  v12 = objc_msgSend(v93, "commandController");
  if (!v12)
  {

    return;
  }
  v91 = v12;
  v13 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (!v13
    || (v14 = v13,
        v15 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape,
        v90 = objc_msgSend(v13, "layoutForInfo:", *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)), v14, !v90))
  {

    return;
  }
  v16 = objc_opt_self(CRLWPShapeLayout);
  v17 = swift_dynamicCastObjCClass(v90, v16);
  if (!v17)
  {

    return;
  }
  v18 = v17;
  v89 = v15;
  v19 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (!v19
    || (v20 = v19,
        v88 = v18,
        v21 = objc_msgSend(v19, "layoutForInfo:", *(_QWORD *)(v2 + v89)),
        v20,
        !v21))
  {
    v21 = v93;
LABEL_25:

    v72 = v92;
LABEL_26:

    return;
  }
  v22 = objc_opt_self(CRLWPShapeLayout);
  v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
  if (!v23)
  {

    goto LABEL_25;
  }
  v24 = objc_msgSend(v23, "layoutInfoGeometry");

  v25 = objc_msgSend(v24, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v96, v25);
  swift_unknownObjectRelease(v25);
  v26 = sub_1004B8930(0, (unint64_t *)&qword_1013E4C50, off_101229818);
  if ((swift_dynamicCast(&v95, v96, (char *)&type metadata for Any + 8, v26, 6) & 1) == 0)
  {

    v72 = v93;
    goto LABEL_26;
  }
  v86 = v95;
  sub_1006A9664(0);
  v27 = v89;
  v28 = *(char **)(v2 + v89);
  v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v30 = type metadata accessor for CRLWPShapeItemData(0);
  swift_dynamicCastClassUnconditional(v29, v30, 0, 0, 0);
  v31 = v28;
  swift_retain(v29);
  v83 = sub_1005603D8();

  swift_release(v29);
  v32 = *(char **)(v2 + v27);
  KeyPath = (id)swift_getKeyPath(&unk_100F07EC8);
  v87 = (Class)sub_1004B804C((uint64_t *)&unk_1013EFC40);
  v33 = objc_allocWithZone(v87);
  v34 = (_QWORD *)((char *)v33 + *(_QWORD *)((swift_isaMask & *v33) + 0xF0));
  *v34 = 0;
  v34[1] = 0xE000000000000000;
  v35 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v36 = *(void (**)(__n128))(*(_QWORD *)v35 + 256);
  v84 = v32;
  v37 = v33;
  v38 = swift_retain(v35);
  v36(v38);
  v39 = swift_release(v35);
  (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 32))(&v37[*(_QWORD *)((swift_isaMask & *(_QWORD *)v37) + 0xD8)], v7, v4, v39);
  *(_QWORD *)&v37[*(_QWORD *)((swift_isaMask & *(_QWORD *)v37) + 0xE0)] = a1;
  v40 = KeyPath;
  *(_QWORD *)&v37[*(_QWORD *)((swift_isaMask & *(_QWORD *)v37) + 0xE8)] = KeyPath;
  swift_retain(v40);

  v94.receiver = v37;
  v94.super_class = v87;
  v87 = (Class)objc_msgSendSuper2(&v94, "init");

  swift_release(v40);
  v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  KeyPath = v41;
  v42 = String._bridgeToObjectiveC()();
  v43 = String._bridgeToObjectiveC()();
  v44 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, v43, v44);

  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v48 = v47;

  v49 = v87;
  v50 = (uint64_t *)((char *)v87 + *(_QWORD *)((swift_isaMask & *(_QWORD *)v87) + 0xF0));
  v51 = v50[1];
  *v50 = v46;
  v50[1] = v48;
  swift_bridgeObjectRelease(v51);
  v52 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  v53 = objc_msgSend(v52, "commandController");

  if (v53)
  {
    sub_1006A5F54(v49, 0, 0, 4, 0);

  }
  v54 = *(void **)(*(_QWORD *)(v2 + v89) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v54)
  {
    v55 = v54;
    v56 = (char *)objc_msgSend(v92, "start");
    v57 = *(_QWORD *)&v56[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v58 = sub_1005034E0(v57);
    v60 = v59;

    if ((v60 & 1) != 0 || v58)
      goto LABEL_33;
    v61 = *(char **)(v2 + v89);
    v62 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v63 = *(_QWORD *)&v61[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v64 = *(uint64_t (**)(__n128))(*(_QWORD *)v63 + 288);
    v65 = v61;
    v66 = swift_retain(v63);
    v67 = (void *)v64(v66);
    LODWORD(v63) = objc_msgSend(v67, "widthValid", swift_release(v63).n128_f64[0]);

    if ((_DWORD)v63)
    {
      v68 = *(_QWORD *)&v61[v62];
      v69 = *(uint64_t (**)(__n128))(*(_QWORD *)v68 + 288);
      v70 = swift_retain(v68);
      v71 = (void *)v69(v70);
      LOBYTE(v68) = objc_msgSend(v71, "heightValid", swift_release(v68).n128_f64[0]);

      v49 = v87;
      if ((v68 & 1) != 0)
        goto LABEL_33;
    }
    else
    {

      v49 = v87;
    }
    sub_100758CAC(v83, a1);
    v73 = v86;
    objc_msgSend(v86, "setPosition:");
    v74 = *(char **)(v2 + v89);
    v75 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetInfoGeometry(0));
    v76 = *(_QWORD *)&v74[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v77 = *(void (**)(__n128))(*(_QWORD *)v76 + 256);
    v78 = v74;
    v79 = v73;
    v80 = swift_retain(v76);
    v77(v80);
    swift_release(v76);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v82 = objc_msgSend(v75, "initWithId:geometry:", isa, v79);

    sub_1006A5F54(v82, 0, 0, 4, 0);
LABEL_33:
    sub_1006A984C(0);

    return;
  }
  __break(1u);
}

char *sub_10072BFCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  char *v10;
  objc_super v12;

  v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___editMenu;
  v2 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor____lazy_storage___editMenu);
  v3 = v2;
  if (v2 == (char *)1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (Strong)
    {
      v5 = Strong;
      v6 = (objc_class *)type metadata accessor for CRLWPEditMenuController();
      v7 = objc_allocWithZone(v6);
      v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_canCenter] = 1;
      v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_isVertical] = 0;
      *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = 0;
      *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc] = 0;
      *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_hudHeight] = 0x404B800000000000;
      v12.receiver = v7;
      v12.super_class = v6;
      v3 = (char *)objc_msgSendSuper2(&v12, "init");
      v8 = *(void **)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc];
      *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc] = v5;

    }
    else
    {
      v3 = 0;
    }
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v10 = v3;
    sub_1004CB49C(v9);
  }
  sub_1004CB968(v2);
  return v3;
}

void sub_10072C0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  id v44;
  id v45;
  _QWORD *v46;
  double *v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = (_QWORD *)type metadata accessor for DispatchQoS(0);
  v6 = *(v46 - 1);
  __chkstk_darwin(v46);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v40 - v15;
  v17 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v17)
  {
    __break(1u);
    return;
  }
  if (!*(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
  {
    v44 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath", v14));
    v45 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "sharedKeyboardMonitor");
    if (objc_msgSend(v45, "keyboardIsAnimating"))
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v43 = v3;
      v41 = static OS_dispatch_queue.main.getter(v18);
      static DispatchTime.now()(v19);
      objc_msgSend(v45, "keyboardAnimationDuration");
      + infix(_:_:)(v12, v20);
      v42 = *(void (**)(char *, uint64_t))(v10 + 8);
      v42(v12, v9);
      v21 = swift_allocObject(&unk_10127AC98, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      v22 = swift_allocObject(&unk_10127ACC0, 32, 7);
      v23 = v44;
      *(_QWORD *)(v22 + 16) = v21;
      *(_QWORD *)(v22 + 24) = v23;
      aBlock[4] = sub_10073D84C;
      v49 = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10127ACD8;
      v24 = _Block_copy(aBlock);
      swift_retain(v21);
      v44 = v23;
      static DispatchQoS.unspecified.getter(v25);
      v47 = _swiftEmptyArrayStorage;
      v26 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v27 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v28 = sub_100503E88();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v47, v27, v28, v2, v26);
      v29 = (void *)v41;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v8, v5, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v2);
      (*(void (**)(char *, _QWORD *))(v6 + 8))(v8, v46);
      v42(v16, v9);
      v30 = v49;
      swift_release(v21);
      swift_release(v30);
      return;
    }
    v31 = v44;
    v32 = sub_10072BFCC();
    if (!v32)
    {

      return;
    }
    v33 = *(void **)&v32[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath];
    *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = v31;
    v46 = v32;
    v34 = v31;

    v35 = *(void **)((char *)v46 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
    if (v35)
    {
      v36 = objc_msgSend(v35, "layerHost");
      if (v36)
      {
        v37 = v36;
        if ((objc_msgSend(v36, "respondsToSelector:", "asUIKitHost") & 1) == 0)
        {

          swift_unknownObjectRelease(v37);
          goto LABEL_15;
        }
        v38 = objc_msgSend(v37, "asUIKitHost");
        *(_QWORD *)&v39 = swift_unknownObjectRelease(v37).n128_u64[0];
        if (v38)
        {
          objc_msgSend(v38, "showEditUIForSelectionPath:", v34, v39);

          swift_unknownObjectRelease(v38);
          return;
        }
      }
    }

LABEL_15:
  }
}

double sub_10072C59C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  id v15;
  _BYTE v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = sub_10072BFCC();

    if (v7)
    {
      v8 = *(void **)&v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath];
      *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = a2;
      v9 = a2;

      v10 = *(void **)&v7[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc];
      if (v10)
      {
        v11 = objc_msgSend(v10, "layerHost");
        if (v11)
        {
          v12 = v11;
          if ((objc_msgSend(v11, "respondsToSelector:", "asUIKitHost") & 1) == 0)
          {

            v15 = v12;
            goto LABEL_10;
          }
          v13 = objc_msgSend(v12, "asUIKitHost");
          *(_QWORD *)&v14 = swift_unknownObjectRelease(v12).n128_u64[0];
          if (v13)
          {
            objc_msgSend(v13, "showEditUIForSelectionPath:", v9, v14);

            v15 = v13;
LABEL_10:
            *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
            return result;
          }
        }
      }

    }
  }
  return result;
}

double sub_10072C6F4()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;
  char *v5;
  char *v6;
  double v7;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    return CGRectNull.origin.x;
  v2 = Strong;
  v3 = objc_msgSend(Strong, "editorController");

  if (!v3)
    return CGRectNull.origin.x;
  v4 = objc_msgSend(v3, "selectionPath");

  if (!v4)
    return CGRectNull.origin.x;
  v5 = sub_10072BFCC();
  if (!v5)
  {

    return CGRectNull.origin.x;
  }
  v6 = v5;
  v7 = sub_100D65D64(v4);

  return v7;
}

double sub_10072C82C()
{
  char *v0;
  double result;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  id v8;
  char *v9;

  v0 = sub_10072BFCC();
  if (v0)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath];
    *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = 0;
    v9 = v0;

    v3 = *(void **)&v9[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc];
    if (v3)
    {
      v4 = objc_msgSend(v3, "layerHost");
      if (v4)
      {
        v5 = v4;
        if ((objc_msgSend(v4, "respondsToSelector:", "asUIKitHost") & 1) == 0)
        {

          v8 = v5;
          goto LABEL_11;
        }
        v6 = objc_msgSend(v5, "asUIKitHost");
        *(_QWORD *)&v7 = swift_unknownObjectRelease(v5).n128_u64[0];
        if (v6)
        {
          objc_msgSend(v6, "hideEditMenu", v7);

          v8 = v6;
LABEL_11:
          *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
          return result;
        }
      }
    }

  }
  return result;
}

void sub_10072CA2C(NSUInteger a1, NSUInteger a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  NSUInteger v13;
  NSUInteger v14;
  BOOL v15;
  NSUInteger location;
  NSUInteger length;
  NSRange v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  id v24;
  NSUInteger v25;
  NSUInteger v26;
  NSRange v28;
  NSRange v29;
  NSRange v30;
  NSRange v31;

  v3 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v4 = *(char **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v4)
    goto LABEL_20;
  v5 = v2;
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
  v9 = v4;
  if (v8)
  {
    sub_1007D484C();
    v11 = v10;

    v9 = v11;
  }
  v12 = objc_msgSend(v9, "findRangeOfWordBackwardFromCharIndex:expandingRangeToEndOfWord:", a1, 1);
  v14 = v13;

  v15 = v12 == (id)0x7FFFFFFFFFFFFFFFLL && v14 == 0;
  location = a1;
  length = a2;
  if (!v15)
  {
    v28.location = a1;
    v28.length = a2;
    v30.location = (NSUInteger)v12;
    v30.length = v14;
    v18 = NSUnionRange(v28, v30);
    location = v18.location;
    length = v18.length;
  }
  v19 = *(char **)(*(_QWORD *)(v5 + v3) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v19)
    goto LABEL_21;
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
  v21 = v19;
  if (v20)
  {
    sub_1007D484C();
    v23 = v22;

    v21 = v23;
  }
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  v24 = objc_msgSend(v21, "wordAtCharIndex:includePreviousWord:", a1 + a2, 0);
  v26 = v25;

  if (v24 != (id)0x7FFFFFFFFFFFFFFFLL || v26 != 0)
  {
    v29.location = location;
    v29.length = length;
    v31.location = (NSUInteger)v24;
    v31.length = v26;
    NSUnionRange(v29, v31);
  }
}

id sub_10072CBD4(unint64_t a1, int64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id result;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSUInteger v31;
  NSUInteger v32;
  NSUInteger v33;
  NSUInteger v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  void (*v46)(uint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  void (*v52)(id, unint64_t, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  void *v69;
  id v70;
  NSUInteger v71;
  BOOL v72;
  NSUInteger v73;
  NSUInteger v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  NSUInteger v79;
  NSUInteger v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int64_t v93;
  char v94[24];
  _BYTE v95[24];
  char v96[24];
  void *v97;
  NSRange v98;
  NSRange v99;

  v93 = a2;
  v82 = a1;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v84 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v85 = (char *)&v77 - v7;
  __chkstk_darwin(v8);
  v92 = (char *)&v77 - v9;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v91 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)CRLWPMutableRangeArray), "init");
  v83 = result;
  v86 = v2;
  v23 = *(char **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v23)
  {
    __break(1u);
    goto LABEL_52;
  }
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v24)
  {
LABEL_52:
    __break(1u);
    return result;
  }
  (*(void (**)(void))(*(_QWORD *)v24 + 760))();
  sub_1004D29BC((uint64_t)&v18[*(int *)(v16 + 20)], (uint64_t)v21);
  v25 = v23;
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v21, v12);
  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
  v26 = (void *)CRAttributedString.attributedString.getter(v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v27 = (uint64_t)objc_msgSend(v26, "length");

  v28 = v86;
  if (v27 < 1)
    return v83;
  sub_100736D9C();
  if (!v29)
    return v83;
  v30 = objc_msgSend(v29, "selectedRange");
  v32 = v31;
  if (qword_1013DDF20 != -1)
LABEL_50:
    swift_once(&qword_1013DDF20, sub_100D42CC0);
  sub_10072CA2C((NSUInteger)v30, v32);
  v80 = v33;
  v79 = v34;
  v97 = &_swiftEmptySetSingleton;
  v35 = (uint64_t *)(v28 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_autocorrectionKeys);
  swift_beginAccess(v28 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_autocorrectionKeys, v96, 0, 0);
  v78 = v35;
  v36 = *v35;
  v37 = *(_QWORD *)(*v35 + 56);
  v87 = *v35 + 56;
  v38 = 1 << *(_BYTE *)(v36 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & v37;
  v88 = (unint64_t)(v38 + 63) >> 6;
  v89 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_dictationAndAutocorrectionCoordinator;
  v81 = v93 + v82;
  v90 = v36;
  v41 = swift_bridgeObjectRetain(v36);
  v42 = 0;
  v43 = (uint64_t)v84;
  v44 = (uint64_t)v85;
  v30 = v91;
  v32 = (NSUInteger)v92;
  while (1)
  {
    if (v40)
    {
      v47 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v48 = v47 | (v42 << 6);
      goto LABEL_29;
    }
    v49 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v49 >= v88)
      goto LABEL_45;
    v50 = *(_QWORD *)(v87 + 8 * v49);
    ++v42;
    if (!v50)
    {
      v42 = v49 + 1;
      if (v49 + 1 >= v88)
        goto LABEL_45;
      v50 = *(_QWORD *)(v87 + 8 * v42);
      if (!v50)
      {
        v42 = v49 + 2;
        if (v49 + 2 >= v88)
          goto LABEL_45;
        v50 = *(_QWORD *)(v87 + 8 * v42);
        if (!v50)
          break;
      }
    }
LABEL_28:
    v40 = (v50 - 1) & v50;
    v48 = __clz(__rbit64(v50)) + (v42 << 6);
LABEL_29:
    v52 = *(void (**)(id, unint64_t, uint64_t, __n128))(v4 + 16);
    v52(v30, *(_QWORD *)(v90 + 48) + *(_QWORD *)(v4 + 72) * v48, v3, v41);
    (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v4 + 56))(v30, 0, 1, v3);
    if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v4 + 48))(v30, 1, v3) == 1)
      goto LABEL_46;
    v93 = v42;
    (*(void (**)(NSUInteger, id, uint64_t))(v4 + 32))(v32, v30, v3);
    v53 = *(_QWORD *)(v28 + v89);
    v45 = swift_beginAccess(v53 + 24, v94, 0, 0);
    v54 = *(_QWORD *)(v53 + 24);
    if (!*(_QWORD *)(v54 + 16))
      goto LABEL_11;
    swift_retain(v53);
    swift_bridgeObjectRetain(v54);
    v55 = sub_100842EFC(v32);
    if ((v56 & 1) == 0)
    {
      swift_release(v53);
      v45 = swift_bridgeObjectRelease(v54);
LABEL_10:
      v32 = (NSUInteger)v92;
LABEL_11:
      v52((id)v43, v32, v3, v45);
      sub_100AD569C(v44, v43);
      v32 = (NSUInteger)v92;
      v46 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v46(v44, v3);
      v46(v32, v3);
      goto LABEL_12;
    }
    v57 = *(_QWORD *)(v54 + 56) + 48 * v55;
    v58 = *(void **)v57;
    v59 = *(void **)(v57 + 8);
    v60 = *(_QWORD *)(v57 + 24);
    v61 = *(_QWORD *)(v57 + 40);
    swift_bridgeObjectRetain(v60);
    v62 = v58;
    swift_bridgeObjectRetain(v61);
    v63 = v59;
    swift_bridgeObjectRelease(v61);
    swift_release(v53);
    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v60);

    v64 = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
    v66 = objc_msgSend(v62, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v64, v65));
    if (!v66)
    {

      v44 = (uint64_t)v85;
      v28 = v86;
      v43 = (uint64_t)v84;
      goto LABEL_10;
    }
    v67 = v66;
    v68 = objc_opt_self(CRLWPSelection);
    v69 = (void *)swift_dynamicCastObjCClass(v67, v68);
    v44 = (uint64_t)v85;
    if (!v69)
    {

      v28 = v86;
      v43 = (uint64_t)v84;
      goto LABEL_10;
    }
    v70 = objc_msgSend(v69, "range");
    v72 = (unint64_t)v70 >= v82 && v81 >= (unint64_t)v70 + v71;
    if (v72
      && (v73 = (NSUInteger)v70,
          v74 = v71,
          v98.location = v80,
          v98.length = v79,
          v99.location = v73,
          v99.length = v74,
          NSIntersectionRange(v98, v99).length))
    {
      objc_msgSend(v83, "addRange:", v73, v74);

      v32 = (NSUInteger)v92;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v92, v3);
    }
    else
    {
      v75 = v92;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v92, v3);

      v32 = (NSUInteger)v75;
    }
    v28 = v86;
    v43 = (uint64_t)v84;
LABEL_12:
    v30 = v91;
    v42 = v93;
  }
  v51 = v49 + 3;
  if (v51 < v88)
  {
    v50 = *(_QWORD *)(v87 + 8 * v51);
    if (!v50)
    {
      while (1)
      {
        v42 = v51 + 1;
        if (__OFADD__(v51, 1))
          goto LABEL_49;
        if (v42 >= v88)
          goto LABEL_45;
        v50 = *(_QWORD *)(v87 + 8 * v42);
        ++v51;
        if (v50)
          goto LABEL_28;
      }
    }
    v42 = v51;
    goto LABEL_28;
  }
LABEL_45:
  (*(void (**)(id, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v30, 1, 1, v3, v41);
LABEL_46:
  swift_release(v90);
  v76 = (uint64_t)v97;
  swift_beginAccess(v78, v95, 33, 0);
  sub_100DB6134(v76);
  swift_endAccess(v95);
  swift_bridgeObjectRelease(v76);
  return v83;
}

void sub_10072D3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *Strong;
  id v10;
  char *v11;
  uint64_t v12;
  void (*v13)(__n128);
  char *v14;
  __n128 v15;
  objc_class *v16;
  char *v17;
  char *v18;
  _BYTE *v19;
  objc_super v20;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100736D9C();
  if (v5)
  {
    v6 = (char *)objc_msgSend(v5, "selectedTextRange");
    if (v6)
    {
      v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      v10 = objc_msgSend(Strong, "commandController");

      if (v10)
      {
        v11 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
        v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v13 = *(void (**)(__n128))(*(_QWORD *)v12 + 256);
        v14 = v11;
        v15 = swift_retain(v12);
        v13(v15);

        swift_release(v12);
        v16 = (objc_class *)type metadata accessor for CRLWPRemoveHyperlinkCommand(0);
        v17 = (char *)objc_allocWithZone(v16);
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v17[OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_boardItemID], v4, v1);
        v18 = &v17[OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_range];
        *(_QWORD *)v18 = v7;
        *((_QWORD *)v18 + 1) = v8;
        v20.receiver = v17;
        v20.super_class = v16;
        v19 = objc_msgSendSuper2(&v20, "init");
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        sub_1006A5F54(v19, 0, 0, 4, 0);

      }
    }
  }
}

double sub_10072D588(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  void *Strong;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  double result;
  _BYTE *v20;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100F07E18);
  v5 = sub_10073138C();
  v6 = v5;
  if ((a1 & 1) == 0)
  {
    if (v5)
    {
      v14 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
      v10 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v9, v9, v9);
      v16 = (char *)*(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
      swift_retain(KeyPath);
      v20 = (_BYTE *)sub_100738CDC(v16, v14, v15, KeyPath, 0);

      swift_release(KeyPath);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      v13 = objc_msgSend(Strong, "commandController");
      goto LABEL_6;
    }
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2939, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2939, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
    return result;
  }
  if (!v5)
    goto LABEL_9;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
  v10 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v9, v9, v9);
  v11 = (char *)*(id *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  swift_retain(KeyPath);
  v20 = (_BYTE *)sub_100738CDC(v11, v7, v8, KeyPath, 1u);

  swift_release(KeyPath);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  v13 = objc_msgSend(Strong, "commandController");
LABEL_6:
  v17 = v13;

  if (v17)
  {
    v18 = v10;
    sub_1006A5F54(v20, 0, v10, 4, 0);

  }
  sub_10073259C(KeyPath, &qword_1013EFC20);
  swift_release(KeyPath);

  return result;
}

void sub_10072D938()
{
  char *v0;
  void *Strong;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id i;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  if (Strong)
  {
    v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
    if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
      v3 = Strong;
      v4 = objc_msgSend(Strong, "repsForInfo:");
      v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v6 = sub_1004F619C();
      v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

      if ((v7 & 0xC000000000000001) != 0)
      {
        if (v7 < 0)
          v8 = v7;
        else
          v8 = v7 & 0xFFFFFFFFFFFFFF8;
        if (__CocoaSet.count.getter(v8) >= 1)
          goto LABEL_8;
      }
      else if (*(uint64_t *)(v7 + 16) >= 1)
      {
LABEL_8:
        v16 = v0;
        sub_1007378A4(v7, (uint64_t)v16, (SEL *)&selRef_willBeginEditingContainedInfo_);
        swift_bridgeObjectRelease(v7);

LABEL_27:
        return;
      }
      swift_bridgeObjectRelease(v7);
      v9 = *(_QWORD *)(*(_QWORD *)&v0[v2] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v9)
      {
        v10 = (void *)swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
        if (v10)
        {
          for (i = v10; ; i = v15)
          {
            v12 = objc_msgSend(v3, "repsForInfo:", i);
            v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v5, v6);

            if ((v13 & 0xC000000000000001) != 0)
            {
              if (v13 < 0)
                v14 = v13;
              else
                v14 = v13 & 0xFFFFFFFFFFFFFF8;
              if (__CocoaSet.count.getter(v14) >= 1)
              {
LABEL_24:
                swift_unknownObjectRelease(i);
                goto LABEL_26;
              }
            }
            else if (*(uint64_t *)(v13 + 16) >= 1)
            {
              goto LABEL_24;
            }
            v15 = objc_msgSend(i, "parentInfo");
            swift_unknownObjectRelease_n(i, 2);
            if (!v15)
              break;
            swift_unknownObjectRetain(v15);
            swift_bridgeObjectRelease(v13);
          }
          i = 0;
        }
        else
        {
          i = 0;
          v13 = (uint64_t)&_swiftEmptySetSingleton;
        }
LABEL_26:
        v16 = v0;
        sub_1007378A4(v13, (uint64_t)v16, (SEL *)&selRef_willBeginEditingContainedInfo_);

        swift_bridgeObjectRelease(v13);
        swift_unknownObjectRelease(i);
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10072DBB8(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  sub_100736D9C();
  if (v2)
  {
    v3 = objc_msgSend(v2, "selectedTextRange");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "start");
      sub_10072DD84((uint64_t)v5);
      v7 = v6;

      if (v7 == -1 && a1 != -1)
        sub_10073A358();

    }
  }
}

void sub_10072DC88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  char *v6;
  char *KeyPath;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13[6];

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v1)
    goto LABEL_9;
  v2 = v0;
  v3 = v1;
  sub_1007D7CB8(0, 0, v13);

  v4 = (char *)v13[4];
  v5 = (char *)v13[5];
  v6 = (char *)v13[3];

  KeyPath = (char *)swift_getKeyPath(&unk_100F08028);
  v8 = sub_100DC42D4(KeyPath, v6, v4, v5);
  LOBYTE(v5) = v9;
  swift_release(KeyPath);

  if ((v5 & 1) == 0)
    goto LABEL_5;
  if (!*(_QWORD *)(v8 + 16))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  v10 = *(_QWORD *)(v8 + 32);
  sub_10062E238(v8, 1);
  v8 = v10;
LABEL_5:
  v11 = sub_10073A358();
  if (v8 != v11)
  {
    v12 = v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_baseWritingDirectionForInsertion;
    *(_QWORD *)v12 = v11;
    *(_BYTE *)(v12 + 8) = 0;
  }
}

void sub_10072DD84(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  char *KeyPath;
  uint64_t v15;
  char v16;
  id v17[6];

  v2 = v1;
  v4 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController], "selectionForEditor:", v2);
  if (v4)
  {
    v5 = v4;
    v6 = objc_opt_self(CRLWPSelection);
    v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
    if (v7)
      objc_msgSend(v7, "isInsertionPoint");

  }
  v8 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
    v10 = v8;
    sub_1007D7CB8(v9, v9, v17);

    v11 = (char *)v17[4];
    v12 = (char *)v17[5];
    v13 = (char *)v17[3];

    KeyPath = (char *)swift_getKeyPath(&unk_100F08028);
    v15 = sub_100DC42D4(KeyPath, v13, v11, v12);
    LOBYTE(v12) = v16;
    swift_release(KeyPath);

    if ((v12 & 1) == 0)
    {
LABEL_10:
      objc_msgSend(v2, "hasText");
      return;
    }
    if (*(_QWORD *)(v15 + 16))
    {
      sub_10062E238(v15, 1);
      goto LABEL_10;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10072DF70(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  id v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  double *v15;
  double *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  _BYTE *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void (*v46)(void);
  uint64_t v47;
  id v48;
  uint64_t v49;
  _BYTE *v50;
  id v51;
  _QWORD *v52;

  v3 = v2;
  if (objc_msgSend(a2, "isEmpty"))
  {
    v6 = v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_baseWritingDirectionForInsertion;
    *(_QWORD *)v6 = a1;
    *(_BYTE *)(v6 + 8) = 0;
  }
  else
  {
    v7 = v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    v9 = objc_msgSend(Strong, "commandController");

    if (!v9)
      return;
    sub_1006A9664(0);
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    sub_1006A92B4(v14, v16);
    KeyPath = swift_getKeyPath(&unk_100F07EF0);
    sub_10072E544(KeyPath);
    v19 = v18;
    LODWORD(v11) = v20;
    swift_release(KeyPath);
    v21 = &unk_1013EF000;
    if ((_DWORD)v11 != 2 && v19 != 2)
    {
      v22 = swift_getKeyPath(&unk_100F07EF0);
      v23 = sub_10073138C();
      if (v23)
      {
        v24 = v23;
        if (a1 == 1)
          v25 = 1;
        else
          v25 = 4 * (a1 != 0);
        v26 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        v47 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
        v49 = v25;
        v27 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                                    + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
        v51 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v27, v27, v27);
        v28 = (char *)*(id *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
        swift_retain(v22);
        v50 = (_BYTE *)sub_100738B04(v28, v26, v47, v22, v49);

        swift_release(v22);
        v29 = (void *)swift_unknownObjectWeakLoadStrong(v7);
        v30 = objc_msgSend(v29, "commandController");

        if (v30)
        {
          v48 = v51;
          sub_1006A5F54(v50, 0, v51, 4, 0);

        }
        sub_10073259C(v22, (uint64_t *)&unk_1013EFD60);
        swift_release(v22);

        v21 = (_QWORD *)&unk_1013EF000;
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2939, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        v21 = &unk_1013EF000;
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2939, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        swift_release(v22);
      }
    }
    v31 = swift_getKeyPath(&unk_100F08028);
    v32 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v33 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                                + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
    v35 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v34, v34, v34);
    v36 = (char *)*(id *)(v3 + v21[308]);
    swift_retain(v31);
    v37 = (_BYTE *)sub_100739090(v36, v32, v33, v31, a1);

    swift_release(v31);
    v38 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    v39 = objc_msgSend(v38, "commandController");

    if (v39)
    {
      v40 = v35;
      sub_1006A5F54(v37, 0, v35, 4, 0);

    }
    sub_10073259C(v31, (uint64_t *)&unk_1013EFD18);
    swift_release(v31);

    sub_1006A984C(0);
  }
  sub_100736D9C();
  if (v41)
  {
    v42 = v41;
    v43 = type metadata accessor for CRLWPTextSelectionManager();
    v44 = swift_dynamicCastClass(v42, v43);
    if (v44)
    {
      v45 = *(_QWORD **)(v44 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController);
      if (v45)
      {
        if (!*(_QWORD *)((char *)v45 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView))
        {
          v46 = *(void (**)(void))((swift_isaMask & *v45) + 0x170);
          v52 = v45;
          v46();
          (*(void (**)(void))((swift_isaMask & *v52) + 0x178))();
          objc_msgSend(*(id *)((char *)v52 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "addDecorator:");

        }
      }
    }
  }
}

void sub_10072E544(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *KeyPath;
  uint64_t v14;
  char v15;
  char v16;
  id v17[6];

  v3 = sub_10073138C();
  if (v3)
  {
    v4 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v4)
    {
      v5 = v3;
      v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      v8 = v4;
      sub_1007D7CB8(v7, v6, v17);

      v9 = (char *)v17[4];
      v10 = (char *)v17[5];
      v11 = (char *)v17[3];

      __chkstk_darwin(v12);
      sub_100573144();
      KeyPath = (char *)swift_getKeyPath(&unk_100F07E70);
      swift_retain(a1);
      v14 = sub_100DC4B5C(KeyPath, v11, v9, v10);
      v16 = v15;
      swift_release(KeyPath);

      if ((v16 & 1) == 0 || *(_QWORD *)(v14 + 16))
      {

        sub_10062E238(v14, v16 & 1);
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2919, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2919, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_10072E744(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *KeyPath;
  uint64_t v14;
  char v15;
  char v16;
  id v17[6];

  v3 = sub_10073138C();
  if (!v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2919, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2919, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v4 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v4)
  {
    v5 = v3;
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v8 = v4;
    sub_1007D7CB8(v7, v6, v17);

    v9 = (char *)v17[4];
    v10 = (char *)v17[5];
    v11 = (char *)v17[3];

    __chkstk_darwin(v12);
    sub_100739274();
    KeyPath = (char *)swift_getKeyPath(&unk_100F07E70);
    swift_retain(a1);
    v14 = sub_100DC3A48(KeyPath, v11, v9, v10);
    v16 = v15;
    swift_release(KeyPath);

    if ((v16 & 1) == 0 || *(_QWORD *)(v14 + 16))
    {

      sub_10062E238(v14, v16 & 1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10072EB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  char *v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_collabIsSuspendedByThisEditor;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_collabIsSuspendedByThisEditor) & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask;
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask);
    if (v4)
    {
      swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask));
      Task.cancel()();
      swift_release(v4);
      v5 = *(_QWORD *)(v1 + v3);
      *(_QWORD *)(v1 + v3) = 0;
      swift_release(v5);
    }
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (Strong)
    {
      v7 = Strong;
      v8 = (char *)objc_msgSend(Strong, "editingCoordinator");

      if (v8)
      {
        if (!*(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
        {
          __break(1u);
          return;
        }
        sub_10066AAE4(0x6964452074786554, 0xEC000000676E6974);

      }
    }
    *(_BYTE *)(v1 + v2) = 1;
  }
}

double sub_10072EC44()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  char isCancelled;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char v12;
  double result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask;
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask];
  if (!v6)
    goto LABEL_7;
  v7 = swift_retain(v6);
  isCancelled = swift_task_isCancelled(v7);
  swift_release(v6);
  if ((isCancelled & 1) != 0)
  {
    v9 = *(_QWORD *)&v1[v5];
    if (!v9)
    {
LABEL_7:
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = v1;
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_10127AC70, 40, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      v18 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013EFD58, (uint64_t)v17);
      v19 = *(_QWORD *)&v1[v5];
      *(_QWORD *)&v1[v5] = v18;
      *(_QWORD *)&result = swift_release(v19).n128_u64[0];
      return result;
    }
    swift_retain(*(_QWORD *)&v1[v5]);
    Task.cancel()();
    swift_release(v9);
  }
  v10 = *(_QWORD *)&v1[v5];
  if (!v10)
    goto LABEL_7;
  v11 = swift_retain(*(_QWORD *)&v1[v5]);
  v12 = swift_task_isCancelled(v11);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  if ((v12 & 1) != 0)
    goto LABEL_7;
  return result;
}

uint64_t sub_10072EDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10072EE28, v6, v7);
}

void sub_10072EE28()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  char isCancelled;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  char v11;
  void *Strong;
  void *v13;
  char *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 24));
  v3 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask);
  if (!v4)
    goto LABEL_12;
  v5 = swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_resumeCollaborationTask));
  isCancelled = swift_task_isCancelled(v5);
  v2 = swift_release(v4);
  if ((isCancelled & 1) != 0)
    goto LABEL_12;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_collabIsSuspendedByThisEditor;
  if (*(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_collabIsSuspendedByThisEditor) != 1
    || (v9 = *(_QWORD *)(v1 + v3)) == 0
    || (v10 = swift_retain(*(_QWORD *)(v1 + v3)), v11 = swift_task_isCancelled(v10), swift_release(v9), (v11 & 1) != 0))
  {
LABEL_11:
    v15 = *(_QWORD *)(v1 + v3);
    *(_QWORD *)(v1 + v3) = 0;
    v2 = swift_release(v15);
LABEL_12:
    (*(void (**)(__n128))(v0 + 8))(v2);
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong
    || (v13 = Strong,
        v14 = (char *)objc_msgSend(Strong, "editingCoordinator"),
        v13,
        !v14))
  {
LABEL_10:
    *(_BYTE *)(v7 + v8) = 0;
    goto LABEL_11;
  }
  if (*(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
  {
    sub_10066B1AC(0x6964452074786554, 0xEC000000676E6974);

    goto LABEL_10;
  }
  __break(1u);
}

void sub_10072EF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    return;
  v3 = objc_msgSend((id)objc_opt_self(UIKeyboard), "activeKeyboard");
  if (!v3)
    goto LABEL_10;
  v4 = v3;
  objc_msgSend(v3, "acceptAutocorrection");

  v5 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v5)
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (*(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    sub_10072EB3C();
  else
    sub_10072EC44();
}

void sub_10072F070()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v2 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
  {
    v3 = *(void **)((char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText + v2);
    if (v3)
    {
      v4 = objc_msgSend(v3, "string");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v6 = v5;

      sub_10072EF58();
      sub_10072F19C();
      v7 = String._bridgeToObjectiveC()();
      objc_msgSend(v0, "insertText:", v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

      v8 = *(_QWORD *)(*(_QWORD *)&v0[v1] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v8)
      {
        if (*(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
          sub_10072EB3C();
        else
          sub_10072EC44();
        return;
      }
LABEL_10:
      __break(1u);
    }
  }
}

void sub_10072F19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *Strong;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
  {
    __break(1u);
    goto LABEL_18;
  }
  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange) = 0;

  v4 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = *(void **)((char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText + v4);
  *(_QWORD *)((char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText + v4) = 0;

  v6 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v7 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange) = 0;

  v8 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v8)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS) = 0;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
LABEL_22:
      __break(1u);
      return;
    }
    v11 = Strong;
    v12 = objc_msgSend(Strong, "layoutForInfo:");

    if (v12)
    {
      v13 = type metadata accessor for CRLWPLayout();
      v14 = (void *)swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v15 = v14;
        if (objc_msgSend(v14, "parentAutosizes"))
          objc_msgSend(v15, "invalidateSize");
        *((_BYTE *)v15 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
        objc_msgSend(v15, "invalidate");
        objc_msgSend(v15, "setNeedsDisplay");
      }

    }
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v16)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    sub_10072EB3C();
  else
    sub_10072EC44();
}

void sub_10072F3A4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(UIKeyboard), "activeKeyboard");
  objc_msgSend(v2, "removeAutocorrectPrompt");
  sub_10072F19C();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      sub_10072EB3C();
    else
      sub_10072EC44();

  }
  else
  {
    __break(1u);
  }
}

void sub_10072F46C()
{
  _BYTE *v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  _BYTE *v7;

  v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning] = 1;
  sub_100722AAC();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  if (!Strong)
  {
    v6 = &_swiftEmptySetSingleton;
    goto LABEL_5;
  }
  if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "repsForInfo:");
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v5 = sub_1004F619C();
    v6 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

LABEL_5:
    v7 = v0;
    sub_1007378A4((uint64_t)v6, (uint64_t)v7, (SEL *)&selRef_willEndEditingContainedInfo_);
    swift_bridgeObjectRelease(v6);

    sub_10072EC44();
    return;
  }
  __break(1u);
}

void sub_10072F5A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  void *Strong;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning) = 0;
  sub_100722BBC();
  v2 = sub_10072BFCC();
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath];
    *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = 0;

    v5 = *(void **)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc];
    if (v5)
    {
      v6 = objc_msgSend(v5, "layerHost");
      if (v6)
      {
        v7 = v6;
        if ((objc_msgSend(v6, "respondsToSelector:", "asUIKitHost") & 1) == 0)
        {

          v10 = v7;
          goto LABEL_9;
        }
        v8 = objc_msgSend(v7, "asUIKitHost");
        *(_QWORD *)&v9 = swift_unknownObjectRelease(v7).n128_u64[0];
        if (v8)
        {
          objc_msgSend(v8, "hideEditMenu", v9);

          v10 = v8;
LABEL_9:
          swift_unknownObjectRelease(v10);
          goto LABEL_10;
        }
      }
    }

  }
LABEL_10:
  v11 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v12 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v12)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (*(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
  {
    v13 = objc_msgSend((id)objc_opt_self(UIKeyboard), "activeKeyboard");
    objc_msgSend(v13, "removeAutocorrectPrompt");
    sub_10072F19C();
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + v11) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v14)
    {
      if (*(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
        sub_10072EB3C();
      else
        sub_10072EC44();

      goto LABEL_17;
    }
LABEL_27:
    __break(1u);
    return;
  }
LABEL_17:
  sub_100736D9C();
  if (v15)
  {
    v16 = objc_msgSend(v15, "selectionViewController");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(*(id *)((char *)v16 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "removeDecorator:", v16);
      (*(void (**)(id))((swift_isaMask & *v17) + 0x180))(v18);
      sub_1007053B4();

    }
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v20 = Strong;
    v21 = objc_msgSend(Strong, "layerHost");

    if (v21)
    {
      if ((objc_msgSend(v21, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v22 = objc_msgSend(v21, "asiOSCVC");
        objc_msgSend(v22, "updateToolbarButtons", swift_unknownObjectRelease(v21).n128_f64[0]);
        v23 = (void *)objc_opt_self(NSNotificationCenter);
        v24 = objc_msgSend(v23, "defaultCenter");
        v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator);
        v26 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager;
        objc_msgSend(v24, "removeObserver:name:object:", v1, NSUndoManagerWillUndoChangeNotification, *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager));

        v27 = objc_msgSend(v23, "defaultCenter");
        objc_msgSend(v27, "removeObserver:name:object:", v1, NSUndoManagerDidUndoChangeNotification, *(_QWORD *)(v25 + v26));

      }
      else
      {
        swift_unknownObjectRelease(v21);
      }
    }
  }
}

void sub_10072F958()
{
  char *v0;
  char *v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  void *Strong;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v1 = v0;
  sub_100736D9C();
  if (v2)
  {
    v3 = objc_msgSend(v2, "selectionViewController");
    if (v3)
    {
      v4 = v3;
      if (!*(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView))
      {
        v5 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x170))();
        (*(void (**)(uint64_t))((swift_isaMask & *v4) + 0x178))(v5);
        objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "addDecorator:", v4);
      }

    }
  }
  sub_10072D938();
  v6 = &v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  if (Strong)
  {
    if (!*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
      __break(1u);
      return;
    }
    v8 = Strong;
    v9 = objc_msgSend(Strong, "repForInfo:");

    if (v9)
    {
      v10 = objc_opt_self(CRLWPRep);
      v11 = swift_dynamicCastObjCClass(v9, v10);

      if (v11)
      {
        if ((objc_msgSend(v1, "hasText") & 1) == 0)
          sub_10072DC88();
      }
    }
  }
  v12 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "layerHost");

    if (v14)
    {
      if ((objc_msgSend(v14, "respondsToSelector:", "asiOSCVC") & 1) != 0)
        v15 = objc_msgSend(v14, "asiOSCVC");
      else
        v15 = 0;
      objc_msgSend(v15, "updateToolbarButtons", swift_unknownObjectRelease(v14).n128_f64[0]);

    }
  }
  v16 = (void *)objc_opt_self(NSNotificationCenter);
  v17 = objc_msgSend(v16, "defaultCenter");
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator];
  v19 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager;
  objc_msgSend(v17, "addObserver:selector:name:object:", v1, "willUndo", NSUndoManagerWillUndoChangeNotification, *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager));

  v20 = objc_msgSend(v16, "defaultCenter");
  objc_msgSend(v20, "addObserver:selector:name:object:", v1, "didUndo", NSUndoManagerDidUndoChangeNotification, *(_QWORD *)(v18 + v19));

}

void *sub_100730160()
{
  uint64_t v0;
  void *result;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!result)
    return &_swiftEmptySetSingleton;
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    v2 = result;
    v3 = objc_msgSend(result, "repsForInfo:");
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v5 = sub_1004F619C();
    v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

    return (void *)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10073055C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return *(double *)(a1 + *a3);
}

uint64_t sub_10073057C(uint64_t result, double a2, double a3, double a4, double a5, uint64_t a6, _QWORD *a7)
{
  double *v7;

  v7 = (double *)(result + *a7);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  return result;
}

void *sub_1007305E8()
{
  uint64_t v0;
  void *result;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!result)
    return result;
  if (!*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = objc_msgSend(result, "repsForInfo:");
  v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v5 = sub_1004F619C();
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  if ((v6 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = v6;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    if (__CocoaSet.count.getter(v7) < 2)
      goto LABEL_9;
  }
  else if (*(uint64_t *)(v6 + 16) < 2)
  {
    goto LABEL_9;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"editingRep", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2777, "Should only ever be at most one editing text rep.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"editingRep", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2777, (uint64_t)"Should only ever be at most one editing text rep.", 49, 2u);
LABEL_9:
  v8 = (void *)sub_100857EA4(v6);
  swift_bridgeObjectRelease(v6);

  if (v8)
  {
    v9 = objc_opt_self(CRLWPRep);
    result = (void *)swift_dynamicCastObjCClass(v8, v9);
    if (result)
      return result;

  }
  return 0;
}

double sub_1007307C4(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  double v6;
  void *v7;
  CGRect *v8;
  double v9;
  double v10;
  double v11;

  v5 = sub_1007305E8();
  v6 = 0.0;
  if (v5)
  {
    v7 = v5;
    v8 = (CGRect *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_textFieldBounds);
    if (CGRectIsNull(*v8))
    {

    }
    else
    {
      objc_msgSend(v7, "convertNaturalPointFromUnscaledCanvas:", a1, a2);
      objc_msgSend(v7, "convertNaturalPointToUnscaledCanvas:", sub_1000613A8(v9, v10, v8->origin.x, v8->origin.y, v8->size.width, v8->size.height));
      v6 = v11;

    }
  }
  return v6;
}

double sub_1007308C4(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  void *v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  _BYTE v20[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v2 = (void *)qword_10147ECB0;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v4 + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
  *(_QWORD *)(v4 + 32) = a1;
  inited = swift_initStackObject(v3, v20);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v4;
  v6 = v2;
  v7 = a1;
  swift_bridgeObjectRetain(v4);
  v8 = sub_1007305E8();
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "rectForSelection:includeRuby:includePaginatedAttachments:", v7, 0, 0);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    swift_release(inited);

    v18 = sub_100061400(v11, v13, v15, v17);
  }
  else
  {
    swift_release(inited);
    v18 = 0.0;
  }

  swift_bridgeObjectRelease(v4);
  return v18;
}

id sub_100730B5C()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))type metadata accessor for CRLWPEditor);
}

uint64_t sub_100730D0C()
{
  return type metadata accessor for CRLWPEditor(0);
}

uint64_t type metadata accessor for CRLWPEditor(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EFB88;
  if (!qword_1013EFB88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLWPEditor);
  return result;
}

uint64_t sub_100730D50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[73];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_100F07CC0;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = &unk_100F07CD8;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_100F07CC0;
  v4[8] = &unk_100F07CC0;
  v4[9] = "\b";
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = &unk_100F07CF0;
  v4[12] = &unk_100F07CC0;
  v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = "\b";
  v4[15] = &unk_100F07CF0;
  v4[16] = &unk_100F07D08;
  v4[17] = "\b";
  v4[18] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[19] = &unk_100F07CC0;
  v4[20] = &unk_100F07CC0;
  v4[21] = &unk_100F07CC0;
  v4[22] = &unk_100F07CC0;
  v4[23] = &unk_100F07CC0;
  v4[24] = &unk_100F07CC0;
  v4[25] = "\b";
  v4[26] = &unk_100F07CC0;
  v4[27] = "\b";
  v4[28] = &unk_100F07CC0;
  v4[29] = &unk_100F07CC0;
  v4[30] = &unk_100F07CC0;
  v4[31] = &unk_100F07CC0;
  v4[32] = &unk_100F07CC0;
  v4[33] = &unk_100F07CC0;
  v4[34] = &unk_100F07CC0;
  v4[35] = "\b";
  v4[36] = "\b";
  v4[37] = &unk_100F07CC0;
  v4[38] = &unk_100F07CC0;
  v4[39] = "\b";
  v4[40] = &unk_100F07CC0;
  v4[41] = "\b";
  v4[42] = &unk_100F07CC0;
  v4[43] = "\b";
  v4[44] = &unk_100F07D20;
  v4[45] = &unk_100F07D20;
  v4[46] = &unk_100F07CC0;
  v4[47] = "\b";
  v4[48] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[49] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[50] = &unk_100F07CC0;
  v4[51] = &unk_100F07D20;
  v4[52] = &unk_100F07D20;
  v4[53] = &unk_100F07CC0;
  v4[54] = &unk_100F07CC0;
  v4[55] = &unk_100F07CC0;
  v4[56] = &unk_100F07D20;
  v4[57] = &unk_100F07D20;
  v4[58] = &unk_100F07CC0;
  v4[59] = &unk_100F07CC0;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[60] = *(_QWORD *)(result - 8) + 64;
    v4[61] = &unk_100F07D20;
    v4[62] = &unk_100F07D20;
    v4[63] = &unk_100F07D38;
    v4[64] = &unk_100F07CC0;
    v4[65] = &unk_100F07D20;
    v4[66] = &unk_100F07D38;
    v4[67] = &unk_100F07D38;
    v4[68] = &unk_100F07D20;
    v4[69] = &unk_100F07CC0;
    v4[70] = &unk_100F07CC0;
    v4[71] = &unk_100F07CC0;
    v4[72] = "\b";
    return swift_updateClassMetadata2(a1, 256, 73, v4, a1 + 80);
  }
  return result;
}

void sub_100730ED0(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD v16[3];
  uint64_t v17;

  v4 = objc_msgSend((id)objc_opt_self(UIKeyboard), "activeKeyboard");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "acceptAutocorrection");

    v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
    sub_1004CB7BC(a2, (uint64_t)v16, &qword_1013E0230);
    v7 = v17;
    if (v17)
    {
      v8 = sub_1004BB5A4(v16, v17);
      v9 = *(_QWORD *)(v7 - 8);
      v10 = __chkstk_darwin(v8);
      v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
      v13 = v6;
      v14 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v7);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
    }
    else
    {
      v15 = v6;
      v14 = 0;
    }
    objc_msgSend(v6, "moveRight:", v14);

    swift_unknownObjectRelease(v14);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1007310EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;
  __int128 v11;
  __int128 v12;

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(&v11, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
    v9 = a1;
  }
  if (qword_1013DD468 != -1)
    swift_once(&qword_1013DD468, sub_1008ED684);
  objc_msgSend(a1, "arrowKeyReceivedInDirection:withModifierKeys:", a4, qword_10147FE40, v11, v12);

  return sub_1004CB800((uint64_t)&v11, &qword_1013E0230);
}

double sub_1007311A8(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  double result;
  _QWORD v15[3];
  uint64_t v16;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
  sub_1004CB7BC(a1, (uint64_t)v15, &qword_1013E0230);
  v5 = v16;
  if (v16)
  {
    v6 = sub_1004BB5A4(v15, v16);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = v4;
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
  }
  else
  {
    v13 = v4;
    v12 = 0;
  }
  objc_msgSend(v4, *a2, v12);

  *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  return result;
}

uint64_t sub_1007312C8(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v11, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  sub_1007311A8((uint64_t)v11, a4);

  return sub_1004CB800((uint64_t)v11, &qword_1013E0230);
}

char *sub_10073138C()
{
  uint64_t v0;
  char *result;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  objc_super v15;

  result = (char *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!result)
    goto LABEL_8;
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    v2 = result;
    v3 = objc_msgSend(result, "layoutForInfo:");

    if (v3)
    {
      v4 = type metadata accessor for CRLWPLayout();
      v5 = swift_dynamicCastClass(v3, v4);

      if (v5)
      {
        sub_100736D9C();
        if (!v6 || (v7 = (char *)objc_msgSend(v6, "selectedTextRange")) == 0)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"textRangeForTextInspecting()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2897, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"textRangeForTextInspecting()", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2897, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          return 0;
        }
        return v7;
      }
    }
LABEL_8:
    v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
    NSNotFound.getter(v8);
    v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v11 = (objc_class *)type metadata accessor for CRLTextRange();
    v12 = (char *)objc_allocWithZone(v11);
    v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v14 = v9;
    *((_QWORD *)v14 + 1) = v9;
    *(_QWORD *)&v12[v13] = v10;
    v15.receiver = v12;
    v15.super_class = v11;
    v7 = (char *)objc_msgSendSuper2(&v15, "init");

    *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v10;
    return v7;
  }
  __break(1u);
  return result;
}

void sub_1007315AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  id v25[6];

  v2 = v1;
  v4 = sub_10073138C();
  if (!v4)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2906, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2906, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v5 = v4;
  if ((objc_msgSend(v4, "isEmpty") & 1) != 0)
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v6)
    {
      v7 = v6;
      sub_100737174();
      v9 = v8;

      if (v9)
      {

        return;
      }
    }
  }
  v10 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v10)
  {
    v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v13 = v10;
    sub_1007D7CB8(v11, v12, v25);

    v14 = (char *)v25[4];
    v15 = (char *)v25[5];
    v16 = (char *)v25[3];

    __chkstk_darwin(v17);
    sub_100739574();
    KeyPath = swift_getKeyPath(&unk_100F07F30);
    swift_retain(a1);
    v19 = sub_100DC8E48(KeyPath, v16, v14, v15);
    v21 = v20;
    v23 = v22;
    swift_release(KeyPath);

    if ((v23 & 1) == 0)
    {
      v24 = v21;
      goto LABEL_12;
    }
    if (*(_QWORD *)(v19 + 16))
    {
      v24 = *(_QWORD *)(v19 + 40);
LABEL_12:
      swift_bridgeObjectRetain(v24);

      sub_1007395B8(v19, v21, v23 & 1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100731820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *KeyPath;
  uint64_t v18;
  char v19;
  char v20;
  id v21[6];

  v2 = v1;
  v4 = sub_10073138C();
  if (!v4)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2906, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2906, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v5 = v4;
  if ((objc_msgSend(v4, "isEmpty") & 1) != 0)
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v6)
    {
      v7 = v6;
      v8 = sub_100737298();

      if ((v8 & 0x100000000) == 0)
      {

        return;
      }
    }
  }
  v9 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v9)
  {
    v10 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v12 = v9;
    sub_1007D7CB8(v10, v11, v21);

    v13 = (char *)v21[4];
    v14 = (char *)v21[5];
    v15 = (char *)v21[3];

    __chkstk_darwin(v16);
    sub_100739530();
    KeyPath = (char *)swift_getKeyPath(&unk_100F07F30);
    swift_retain(a1);
    v18 = sub_100DC8518(KeyPath, v15, v13, v14);
    v20 = v19;
    swift_release(KeyPath);

    if ((v20 & 1) == 0 || *(_QWORD *)(v18 + 16))
    {

      sub_10062E238(v18, v20 & 1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100731A78(uint64_t a1)
{
  sub_100731AC0(a1, (unsigned __int8 (*)(void))sub_100737398, (uint64_t)&type metadata for CRLWPFontItalicAttribute, (void (*)(__n128))sub_1007394A8, (uint64_t (*)(uint64_t, id, id, id, __n128))sub_100DC7B38);
}

void sub_100731A9C(uint64_t a1)
{
  sub_100731AC0(a1, (unsigned __int8 (*)(void))sub_1007375A4, (uint64_t)&type metadata for CRLWPFontBoldAttribute, (void (*)(__n128))sub_1007394EC, (uint64_t (*)(uint64_t, id, id, id, __n128))sub_100DC7B80);
}

void sub_100731AC0(uint64_t a1, unsigned __int8 (*a2)(void), uint64_t a3, void (*a4)(__n128), uint64_t (*a5)(uint64_t, id, id, id, __n128))
{
  uint64_t v5;
  char *v10;
  char *v11;
  void *v12;
  id v13;
  int v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  __n128 v23;
  uint64_t KeyPath;
  __n128 v25;
  uint64_t v26;
  char v27;
  char v28;
  id v29[6];

  v10 = sub_10073138C();
  if (!v10)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2906, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2906, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v11 = v10;
  if ((objc_msgSend(v10, "isEmpty") & 1) != 0
    && (v12 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle)) != 0
    && (v13 = v12, v14 = a2(), v13, v14 != 2))
  {

  }
  else
  {
    v15 = *(void **)(*(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v15)
    {
      v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      v18 = v15;
      sub_1007D7CB8(v16, v17, v29);

      v19 = v29[4];
      v20 = v29[5];
      v21 = v29[3];

      v23 = __chkstk_darwin(v22);
      a4(v23);
      KeyPath = swift_getKeyPath(&unk_100F07F30);
      v25 = swift_retain(a1);
      v26 = a5(KeyPath, v21, v19, v20, v25);
      v28 = v27;
      swift_release(KeyPath);

      if ((v28 & 1) == 0 || *(_QWORD *)(v26 + 16))
      {

        sub_10062E238(v26, v28 & 1);
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100731D30(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  id *v14;
  unint64_t v15;
  char v16;
  char v17;
  id v18;
  id *v19;
  id v20[6];

  v3 = sub_10073138C();
  if (!v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2906, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2906, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v4 = v3;
  if ((objc_msgSend(v3, "isEmpty") & 1) != 0
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle)
    && sub_10073773C())
  {

    return;
  }
  v5 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v5)
  {
    v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v8 = v5;
    sub_1007D7CB8(v6, v7, v20);

    v9 = (char *)v20[4];
    v10 = (char *)v20[5];
    v11 = (char *)v20[3];

    __chkstk_darwin(v12);
    sub_1007393D0();
    KeyPath = swift_getKeyPath(&unk_100F07F30);
    swift_retain(a1);
    sub_100DC53E4(KeyPath, v11, v9, v10);
    v15 = (unint64_t)v14;
    v17 = v16;
    swift_release(KeyPath);

    if ((v17 & 1) == 0)
    {
      v19 = (id *)(id)v15;
      goto LABEL_13;
    }
    if ((v15 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(v15);
      specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
      sub_100739414((void *)v15, 1);
      goto LABEL_13;
    }
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(id *)(v15 + 32);
LABEL_13:

      sub_100739414((void *)v15, v17 & 1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100731FB0(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  _BYTE *v5;
  char v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  id v25;
  char v26;
  char *v27;
  char *v28;
  char *v29;

  v3 = sub_10073138C();
  if (!v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2906, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2906, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v4 = v3;
  if ((objc_msgSend(v3, "isEmpty") & 1) != 0)
  {
    v5 = *(_BYTE **)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v5)
    {
      v6 = v5[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8];
      v23 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
      v24 = v6;
      v7 = v5;
      v8 = sub_1004B804C(&qword_1013EFC90);
      type metadata accessor for CRLWPUnderline(0);
      v10 = swift_dynamicCast(&v25, &v23, v8, v9, 6);
      if ((v10 & 1) != 0)
      {
        v26 = v10 ^ 1;

        return;
      }
      v25 = 0;
      v26 = v10 ^ 1;

    }
  }
  v11 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v11)
  {
    v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v13 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v14 = v11;
    sub_1007D7CB8(v12, v13, &v25);

    v15 = v28;
    v16 = v29;
    v17 = v27;

    __chkstk_darwin(v18);
    sub_100739464();
    KeyPath = swift_getKeyPath(&unk_100F07F30);
    swift_retain(a1);
    v20 = sub_100DC71FC(KeyPath, v17, v15, v16);
    v22 = v21;
    swift_release(KeyPath);

    if ((v22 & 1) == 0 || *(_QWORD *)(v20 + 16))
    {

      sub_10062E238(v20, v22 & 1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100732254(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  _BYTE *v5;
  char v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  id v25;
  char v26;
  char *v27;
  char *v28;
  char *v29;

  v3 = sub_10073138C();
  if (!v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attributeValue(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2906, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attributeValue(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2906, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v4 = v3;
  if ((objc_msgSend(v3, "isEmpty") & 1) != 0)
  {
    v5 = *(_BYTE **)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v5)
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, 0x6874656B69727473, 0xED00006867756F72, 0) & 1) == 0)
      {
        v6 = v5[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8];
        v23 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
        v24 = v6;
        v7 = v5;
        v8 = sub_1004B804C((uint64_t *)&unk_1013EFC80);
        type metadata accessor for CRLWPStrikethru(0);
        v10 = swift_dynamicCast(&v25, &v23, v8, v9, 6);
        if ((v10 & 1) != 0)
        {
          v26 = v10 ^ 1;

          return;
        }
        v25 = 0;
        v26 = v10 ^ 1;

      }
    }
  }
  v11 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v11)
  {
    v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v13 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v14 = v11;
    sub_1007D7CB8(v12, v13, &v25);

    v15 = v28;
    v16 = v29;
    v17 = v27;

    __chkstk_darwin(v18);
    sub_100739420();
    KeyPath = swift_getKeyPath(&unk_100F07F30);
    swift_retain(a1);
    v20 = sub_100DC68C0(KeyPath, v17, v15, v16);
    v22 = v21;
    swift_release(KeyPath);

    if ((v22 & 1) == 0 || *(_QWORD *)(v20 + 16))
    {

      sub_10062E238(v20, v22 & 1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10073253C(uint64_t a1)
{
  sub_10073259C(a1, &qword_1013EFE30);
}

void sub_100732548(uint64_t a1)
{
  sub_10073259C(a1, (uint64_t *)&unk_1013EFE20);
}

void sub_100732554(uint64_t a1)
{
  sub_10073259C(a1, &qword_1013EFE10);
}

void sub_100732560(uint64_t a1)
{
  sub_10073259C(a1, (uint64_t *)&unk_1013EFE00);
}

void sub_10073256C(uint64_t a1)
{
  sub_10073259C(a1, &qword_1013EFDF8);
}

void sub_100732578(uint64_t a1)
{
  sub_10073259C(a1, &qword_1013EFC20);
}

void sub_100732584(uint64_t a1)
{
  sub_10073259C(a1, (uint64_t *)&unk_1013F3D80);
}

void sub_100732590(uint64_t a1)
{
  sub_10073259C(a1, &qword_1013EFC50);
}

void sub_10073259C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  Class isa;
  _QWORD v11[2];
  _BYTE v12[104];

  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD908 != -1)
    swift_once(&qword_1013DD908, sub_100A16088);
  v6 = qword_101480600;
  v7 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v7, v12);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v11[0] = 0xD000000000000021;
  v11[1] = 0x8000000100FB8210;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = sub_1004B804C(a2);
  *(_QWORD *)(inited + 72) = a1;
  swift_retain(a1);
  v9 = sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "postNotificationName:object:userInfo:", v6, v2, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

}

uint64_t sub_1007326F8()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;

  KeyPath = swift_getKeyPath(&unk_100F08008);
  sub_100731820(KeyPath);
  v2 = v1;
  swift_release(KeyPath);
  return v2 & 0xFFFFFFFFFFLL;
}

double sub_100732734(float a1)
{
  uint64_t KeyPath;
  char *v3;
  double result;
  char *v5;

  KeyPath = swift_getKeyPath(&unk_100F08008);
  v3 = sub_10073138C();
  if (v3)
  {
    v5 = v3;
    sub_100DC17A4(KeyPath, *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8], a1);
    swift_release(KeyPath);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

id sub_10073286C()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;

  KeyPath = swift_getKeyPath(&unk_100F07FE8);
  sub_1007315AC(KeyPath);
  v2 = v1;
  swift_release(KeyPath);
  if (v2)
  {
    v3 = swift_getKeyPath(&unk_100F08008);
    sub_100731820(v3);
    v5 = v4;
    swift_release(v3);
    if ((v5 & 0xFF00000000) != 0x200000000)
    {
      swift_bridgeObjectRetain(v2);
      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend((id)objc_opt_self(CRLWPFont), "fontWithDesiredPostScriptName:atSize:", v7, *(float *)&v5);
      swift_bridgeObjectRelease();

      return v6;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_100732980(void *a1)
{
  uint64_t v1;
  void *Strong;
  double v4;
  float v5;
  float v6;
  uint64_t KeyPath;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  char *v23;
  char *v24;
  id v25;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  v25 = objc_msgSend(Strong, "commandController");

  if (v25)
  {
    objc_msgSend(a1, "size", sub_1006A9664(0));
    v5 = v4;
    if (v5 < 999.0)
      v6 = v5;
    else
      v6 = 999.0;
    KeyPath = swift_getKeyPath(&unk_100F07FE8);
    v8 = objc_msgSend(a1, "desiredPostScriptName");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = sub_10073138C();
    if (v12)
    {
      v13 = v12;
      sub_100DC1B18(KeyPath, v9, v11, *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
      swift_bridgeObjectRelease();
      swift_release(KeyPath);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_bridgeObjectRelease();
      swift_release(KeyPath);
    }
    v14 = swift_getKeyPath(&unk_100F08008);
    v15 = sub_10073138C();
    if (v15)
    {
      v16 = v15;
      sub_100DC17A4(v14, *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8], v6);
      swift_release(v14);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_release(v14);
    }
    v17 = swift_getKeyPath(&unk_100F07FC8);
    v18 = objc_msgSend(a1, "bold");
    v19 = sub_10073138C();
    if (v19)
    {
      v20 = v19;
      sub_100DC0D24(v17, v18, *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
      swift_release(v17);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_release(v17);
    }
    v21 = swift_getKeyPath(&unk_100F07FA8);
    v22 = objc_msgSend(a1, "italic");
    v23 = sub_10073138C();
    if (v23)
    {
      v24 = v23;
      sub_100DC0D40(v21, v22, *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
      swift_release(v21);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_release(v21);
    }
    sub_1006A984C(0);

  }
}

uint64_t sub_100732E5C()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;

  KeyPath = swift_getKeyPath(&unk_100F07FC8);
  sub_100731AC0(KeyPath, (unsigned __int8 (*)(void))sub_1007375A4, (uint64_t)&type metadata for CRLWPFontBoldAttribute, (void (*)(__n128))sub_1007394EC, (uint64_t (*)(uint64_t, id, id, id, __n128))sub_100DC7B80);
  v2 = v1;
  swift_release(KeyPath);
  return v2;
}

uint64_t sub_100732EB8()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;

  KeyPath = swift_getKeyPath(&unk_100F07FA8);
  sub_100731AC0(KeyPath, (unsigned __int8 (*)(void))sub_100737398, (uint64_t)&type metadata for CRLWPFontItalicAttribute, (void (*)(__n128))sub_1007394A8, (uint64_t (*)(uint64_t, id, id, id, __n128))sub_100DC7B38);
  v2 = v1;
  swift_release(KeyPath);
  return v2;
}

double sub_100732F14(char a1, uint64_t a2, void (*a3)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t KeyPath;
  char *v6;
  double result;
  char *v8;

  KeyPath = swift_getKeyPath(a2);
  v6 = sub_10073138C();
  if (v6)
  {
    v8 = v6;
    a3(KeyPath, a1 & 1, *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
    swift_release(KeyPath);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

uint64_t sub_100733040()
{
  return sub_100733068((uint64_t)&unk_100F07F88, (uint64_t (*)(void))sub_100731FB0);
}

uint64_t sub_100733054()
{
  return sub_100733068((uint64_t)&unk_100F07F68, (uint64_t (*)(void))sub_100732254);
}

uint64_t sub_100733068(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t KeyPath;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  int v7;

  KeyPath = swift_getKeyPath(a1);
  v4 = a2();
  v6 = v5;
  v7 = v5;
  swift_release(KeyPath);
  if (v7 == 2)
    return 2;
  else
    return (v4 != 0) | ((v6 & 1) << 8);
}

double sub_1007330C4(char a1, uint64_t a2, void (*a3)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t KeyPath;
  char *v6;
  double result;
  char *v8;

  KeyPath = swift_getKeyPath(a2);
  v6 = sub_10073138C();
  if (v6)
  {
    v8 = v6;
    a3(KeyPath, a1 & 1, *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
    swift_release(KeyPath);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

uint64_t sub_1007331F0()
{
  return sub_100733204((uint64_t)&unk_100F07F10, (uint64_t (*)(void))sub_100731D30);
}

uint64_t sub_100733204(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(a1);
  v4 = a2();
  swift_release(KeyPath);
  return v4;
}

double sub_10073324C(void *a1)
{
  uint64_t KeyPath;
  char *v3;
  double result;
  char *v5;

  KeyPath = swift_getKeyPath(&unk_100F07F10);
  v3 = sub_10073138C();
  if (v3)
  {
    v5 = v3;
    sub_100DC1D9C(KeyPath, a1, *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
    swift_release(KeyPath);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

uint64_t sub_100733378()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;

  KeyPath = swift_getKeyPath(&unk_100F07E18);
  sub_10072E744(KeyPath);
  v2 = v1;
  swift_release(KeyPath);
  return v2;
}

void sub_1007333B4(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = type metadata accessor for CRLWPShapeItemData(0);
  swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  swift_retain(v3);
  v5 = sub_1005603D8();
  swift_release(v3);
  *a2 = v5;
}

void sub_10073342C(uint64_t *a1)
{
  sub_10084C27C(*a1);
}

double sub_10073345C(char a1)
{
  return sub_100732F14(a1, (uint64_t)&unk_100F07FC8, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_100DC0D24);
}

double sub_100733480(char a1)
{
  return sub_100732F14(a1, (uint64_t)&unk_100F07FA8, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_100DC0D40);
}

uint64_t sub_1007334A4(uint64_t a1, uint64_t a2)
{
  return sub_1007334F0(a1, a2, (uint64_t)&unk_100F07F88, (uint64_t (*)(void))sub_100731FB0);
}

double sub_1007334B8(char a1)
{
  return sub_1007330C4(a1, (uint64_t)&unk_100F07F88, sub_100DC10E0);
}

uint64_t sub_1007334DC(uint64_t a1, uint64_t a2)
{
  return sub_1007334F0(a1, a2, (uint64_t)&unk_100F07F68, (uint64_t (*)(void))sub_100732254);
}

uint64_t sub_1007334F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t KeyPath;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  int v9;

  KeyPath = swift_getKeyPath(a3);
  v6 = a4();
  v8 = v7;
  v9 = v7;
  swift_release(KeyPath);
  if (v9 == 2)
    return 2;
  else
    return (v6 != 0) | ((v8 & 1) << 8);
}

double sub_100733550(char a1)
{
  return sub_1007330C4(a1, (uint64_t)&unk_100F07F68, sub_100DC1440);
}

uint64_t sub_100733574(uint64_t a1, uint64_t a2)
{
  return sub_1007335A0(a1, a2, (uint64_t)&unk_100F07F10, (uint64_t (*)(void))sub_100731D30);
}

uint64_t sub_10073358C(uint64_t a1, uint64_t a2)
{
  return sub_1007335A0(a1, a2, (uint64_t)&unk_100F07EF0, (uint64_t (*)(void))sub_10072E544);
}

uint64_t sub_1007335A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t KeyPath;
  uint64_t v6;

  KeyPath = swift_getKeyPath(a3);
  v6 = a4();
  swift_release(KeyPath);
  return v6;
}

uint64_t sub_1007335F0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v3 = type metadata accessor for CRLWPShapeItemData(0);
  swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  v4 = v1;
  swift_retain(v2);
  v5 = sub_1005603D8();

  swift_release(v2);
  return v5;
}

void sub_1007336B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v12)
  {
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v13)
    {
      (*(void (**)(__n128))(*(_QWORD *)v13 + 760))(v9);
      sub_1004D29BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v11);
      v14 = v12;
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v11, v1);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
      v15 = (void *)CRAttributedString.attributedString.getter(v1);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      objc_msgSend(v15, "length");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1007338B4(uint64_t a1, char *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  NSString v13;
  _QWORD v14[2];
  _BYTE v15[32];

  sub_1004CB6E8(a1, (uint64_t)v15);
  if ((swift_dynamicCast(v14, v15, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_11;
  v3 = v14[1];
  sub_100736D9C();
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease(v3);
LABEL_11:
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertText(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 3281, "Failed to insert text. Preconditions unmet.", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertText(_:)", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 3281, (uint64_t)"Failed to insert text. Preconditions unmet.", 43, 2u);
    return;
  }
  v5 = v4;
  *(_QWORD *)&v6 = swift_unknownObjectRetain(v4).n128_u64[0];
  v8 = objc_msgSend(v7, "selectedTextRange", v6);
  if (!v8)
  {
    swift_unknownObjectRelease(v5);
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v9)
  {
    v10 = v8;
    if (!*(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
LABEL_8:
      sub_10072C82C();
      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(a2, "replace:with:", v10, v13, swift_bridgeObjectRelease(v3).n128_f64[0]);
      swift_unknownObjectRelease(v5);

      return;
    }
    v11 = objc_msgSend(v5, "selectedTextRangeWithoutMarkedText");
    if (v11)
    {
      v12 = v11;

      v10 = v12;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100733B30()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  sub_100736D9C();
  if (v1 && (v2 = objc_msgSend(v1, "selectedTextRange")) != 0)
  {
    v3 = v2;
    v4 = v0;
    sub_10073C5A4((uint64_t)v4, (uint64_t)v3, (uint64_t)v4);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deleteCurrentSelection()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 3342, "Failed to delete text. No selection.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteCurrentSelection()", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 3342, (uint64_t)"Failed to delete text. No selection.", 36, 2u);
  }
}

void sub_100733C7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(uint64_t, void *, uint64_t, id);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;

  v4 = v3;
  v8 = (char *)objc_msgSend(a1, "start");
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v9 != NSNotFound.getter(v10))
  {
    v24 = a1;
    goto LABEL_13;
  }
  v11 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v12 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v12)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (*(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    sub_10072F19C();
  sub_100736D9C();
  if (v13)
  {
    v14 = objc_msgSend(v13, "selectedTextRange");
    if (v14)
    {

      sub_100736D9C();
      if (v15)
      {
        v16 = objc_msgSend(v15, "selectedTextRange");
        if (v16)
        {
          v17 = v16;
          v18 = (char *)objc_msgSend(v16, "start");
          v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

          v21 = NSNotFound.getter(v20);
          if (v19 != v21)
          {
            sub_100736D9C();
            if (!v37)
            {
LABEL_32:
              __break(1u);
              return;
            }
            v24 = objc_msgSend(v37, "selectedTextRange");
            if (v24)
              goto LABEL_13;
            __break(1u);
            goto LABEL_30;
          }
        }
      }
    }
  }
  v22 = *(void **)(*(_QWORD *)(v4 + v11) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v22)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v23 = v22;
  v24 = (id)sub_100A1EDA0(v23);

LABEL_13:
  v25 = sub_10073D5C4();
  v26 = v25;
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    v28 = v25 + 32;
    swift_bridgeObjectRetain(v25);
    while (1)
    {
      sub_1004E90B0(v28, (uint64_t)&v38);
      v29 = v39;
      v30 = sub_1004BB5A4(&v38, v39);
      swift_getDynamicType(v30, v29, 1);
      v31 = (uint64_t (*)(uint64_t, void *, uint64_t, id))(*(uint64_t (**)(void))(v40 + 8))();
      v33 = v32;
      v34 = v31(v4, a2, a3, v24);
      swift_release(v33);
      if ((v34 & 1) != 0)
        break;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v38);
      v28 += 40;
      if (!--v27)
      {
        swift_bridgeObjectRelease(v26);
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease(v26);
    sub_1004DB728(&v38, (uint64_t)&v41);
  }
  else
  {
LABEL_18:
    v43 = 0;
    v41 = 0u;
    v42 = 0u;
  }
  swift_bridgeObjectRelease(v26);
  if (*((_QWORD *)&v42 + 1))
  {
    sub_1004DB728(&v41, (uint64_t)v44);
    v35 = v45;
    v36 = v46;
    sub_1004BB5A4(v44, v45);
    if (((*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v36 + 16))(v4, v24, v35, v36) & 1) != 0)
    {

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v44);
      return;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v44);
  }
  else
  {
    sub_1004CB800((uint64_t)&v41, (uint64_t *)&unk_1013EFD00);
  }
  sub_100721004(v24, a2, a3, 1);

}

void sub_100733FD4(uint64_t a1, char *a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *Strong;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  _BYTE *v88;
  id v89;
  char *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  LODWORD(v104) = a5;
  v105 = a2;
  v8 = sub_1004B804C((uint64_t *)&unk_1013F3DC0);
  __chkstk_darwin(v8);
  v103 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v93 - v11);
  __chkstk_darwin(v13);
  v106 = (uint64_t)&v93 - v14;
  v15 = sub_1004B804C((uint64_t *)&unk_1013EFCF0);
  __chkstk_darwin(v15);
  v101 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v102 = (uint64_t)&v93 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v93 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v93 - v23;
  v25 = a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v27 = Strong;
    v28 = objc_msgSend(Strong, "selectionModelTranslator");

    if (v28)
    {
      v29 = v28;
      v30 = (void *)swift_unknownObjectWeakLoadStrong(v25);
      if (v30)
      {
        v31 = v30;
        v32 = objc_msgSend(v30, "commandController");

        v100 = v32;
        if (v32)
        {
          v33 = a3;
          v99 = (uint64_t *)&v105[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          v34 = *(_QWORD *)&v105[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          v35 = swift_bridgeObjectRetain(a4);
          v98 = v33;
          v36 = String.UTF16View.count.getter(v33, a4, v35);
          swift_bridgeObjectRelease(a4);
          v37 = __OFADD__(v34, v36);
          v38 = v34 + v36;
          if (v37)
          {
            __break(1u);
          }
          else
          {
            v97 = a4;
            v39 = v106;
            if (v38 >= v34)
            {
              v40 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
              v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
              v41(v24, 1, 1, v40);
              v42 = sub_1004B804C(&qword_1013F3D40);
              v96 = *(_QWORD *)(v42 - 8);
              v43 = v39;
              v44 = v42;
              v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 56);
              v95(v43, 1, 1);
              v45 = v38 - v34;
              if (!__OFSUB__(v38, v34))
              {
                v46 = v29;
                if (v45 >= 1)
                {
                  v47 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
                  if (v47)
                  {
                    v48 = v47;
                    sub_100A1487C(v21);

                    v49 = 0;
                  }
                  else
                  {
                    v49 = 1;
                  }
                  v41(v21, v49, 1, v40);
                  sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013EFCF0);
                  sub_1004C4938((uint64_t)v21, (uint64_t)v24, (uint64_t *)&unk_1013EFCF0);
                  v50 = a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_baseWritingDirectionForInsertion;
                  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_baseWritingDirectionForInsertion + 8) & 1) == 0)
                  {
                    v94 = *(_QWORD *)v50;
                    *v12 = &_swiftEmptySetSingleton;
                    v51 = v44;
                    v52 = sub_100559A64();
                    CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v52);
                    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v95)(v12, 0, 1, v44);
                    v53 = v106;
                    sub_100582338((uint64_t)v12, v106, (uint64_t *)&unk_1013F3DC0);
                    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v53, 1, v51))
                    {
                      swift_getKeyPath(&unk_100F08028);
                      v96 = v51;
                      sub_100AD8690(&v107, 0xD000000000000014, 0x8000000100FCC800);
                      swift_bridgeObjectRelease(v108);
                      __chkstk_darwin(v54);
                      sub_10073D6C0();
                      v46 = v29;
                      KeyPath = swift_getKeyPath(&unk_100F07DC0);
                      v107 = v94;
                      LOBYTE(v108) = 0;
                      v56 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
                      v57 = sub_10073D704();
                      CRAttributedString.Attributes.subscript.setter(&v107, KeyPath, v56, v57);
                    }
                    v58 = swift_getKeyPath(&unk_100F08028);
                    sub_10073259C(v58, (uint64_t *)&unk_1013EFD18);
                    swift_release(v58);
                    *(_QWORD *)v50 = 0;
                    *(_BYTE *)(v50 + 8) = 1;
                  }
                }
                if ((v104 & 1) != 0)
                {
                  v59 = (char *)objc_msgSend(v105, "start");
                  v60 = *(_QWORD *)&v59[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

                  if (v60 == NSNotFound.getter(v61))
                    goto LABEL_26;
                  v62 = *v99;
                  v63 = v99[1];
                  v64 = v63 - *v99;
                  if (!__OFSUB__(v63, *v99))
                    goto LABEL_27;
                  __break(1u);
                }
                sub_100736D9C();
                if (v65)
                {
                  v62 = (uint64_t)objc_msgSend(v65, "selectedRange");
                  v64 = v66;
LABEL_27:
                  v67 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
                  v68 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
                  if (!v68)
                  {
LABEL_43:
                    __break(1u);
LABEL_44:
                    __break(1u);
                    return;
                  }
                  v69 = objc_msgSend(v46, "selectionPathForRange:onStorage:headCursorAffinity:tailCursorAffinity:", v62, v64, v68, 2, 2);
                  if (!v69)
                  {
                    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013EFCF0);

                    goto LABEL_37;
                  }
                  v70 = v69;
                  v71 = (char *)objc_msgSend(v105, "start");
                  v72 = *(_QWORD *)&v71[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

                  if (v72 == NSNotFound.getter(v73))
                  {
                    v74 = 0x7FFFFFFFFFFFFFFFLL;
                    v75 = 0;
                    goto LABEL_33;
                  }
                  v74 = *v99;
                  v76 = v99[1];
                  v75 = v76 - *v99;
                  if (!__OFSUB__(v76, *v99))
                  {
LABEL_33:
                    v77 = *(_QWORD *)(*(_QWORD *)(a1 + v67) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
                    if (v77)
                    {
                      v78 = objc_msgSend(v46, "selectionPathForRange:onStorage:headCursorAffinity:tailCursorAffinity:", v74, v75, v77, 1, 2);
                      if (v78)
                      {
                        v79 = v78;
                        v105 = (char *)objc_msgSend(objc_allocWithZone((Class)CRLWPReplaceTextCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:usePersistableCommitSelectionPath:", v70, v79, v79, 1);
                        v81 = *v99;
                        v80 = (uint64_t *)v99[1];
                        v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + v67);
                        v96 = v81;
                        v99 = v80;
                        v82 = v102;
                        sub_1004CB7BC((uint64_t)v24, v102, (uint64_t *)&unk_1013EFCF0);
                        sub_1004CB7BC(v106, (uint64_t)v12, (uint64_t *)&unk_1013F3DC0);
                        v83 = v101;
                        sub_1004CB7BC(v82, v101, (uint64_t *)&unk_1013EFCF0);
                        v84 = v103;
                        sub_1004CB7BC((uint64_t)v12, v103, (uint64_t *)&unk_1013F3DC0);
                        v85 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
                        v104 = v46;
                        v86 = v97;
                        swift_bridgeObjectRetain(v97);
                        v87 = v95;
                        v88 = sub_1006BEFE0((uint64_t)v87, v96, (uint64_t)v99, v98, v86, 0, v83, v84);
                        sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013F3DC0);
                        sub_1004CB800(v82, (uint64_t *)&unk_1013EFCF0);
                        v89 = v105;
                        v90 = v105;
                        v91 = v100;
                        sub_1006A5F54(v88, 0, v89, 4, 0);

                        v92 = v106;
                        sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013EFCF0);
LABEL_38:
                        sub_1004CB800(v92, (uint64_t *)&unk_1013F3DC0);
                        return;
                      }
                      sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013EFCF0);

LABEL_37:
                      v92 = v106;
                      goto LABEL_38;
                    }
                    goto LABEL_44;
                  }
LABEL_42:
                  __break(1u);
                  goto LABEL_43;
                }
LABEL_26:
                v62 = 0x7FFFFFFFFFFFFFFFLL;
                v64 = 0;
                goto LABEL_27;
              }
LABEL_41:
              __break(1u);
              goto LABEL_42;
            }
          }
          __break(1u);
          goto LABEL_41;
        }
      }

    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"replace(_:with:updatingCommitSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 3410, "Failed to insert text. Preconditions unmet.", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"replace(_:with:updatingCommitSelectionPath:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 3410, (uint64_t)"Failed to insert text. Preconditions unmet.", 43, 2u);
}

uint64_t sub_10073486C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v11, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  sub_1007348EC((uint64_t)v9, a4);

  return sub_1004CB800((uint64_t)v11, &qword_1013E0230);
}

void sub_1007348EC(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  void *v2;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v8 = v2;
  sub_100736D9C();
  if (v4)
  {
    v5 = (char *)objc_msgSend(v4, "selectedTextRange");
    if (v5)
    {
      v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      a2(v6, v7);
    }
  }

}

void sub_100734A48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v1 = (void *)qword_10147ECB0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v14[3] = v2;
  v14[0] = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v4)
    goto LABEL_12;
  v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  if (!v5)
  {
    v11 = v1;
    goto LABEL_8;
  }
  v6 = v1;
  v7 = v5;
  v8 = (char *)objc_msgSend(v7, "start");
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v9 == NSNotFound.getter(v10))
  {

LABEL_8:
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);

    return;
  }
  v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

  swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
  if (__OFSUB__(v13, v12))
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

void sub_100734BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange) = 0;

  v4 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v4)
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    sub_10072EB3C();
  else
    sub_10072EC44();
}

uint64_t sub_100734CEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v1 = (void *)qword_10147ECB0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v2, &v14);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  result = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 56) = result;
  *(_QWORD *)(inited + 32) = _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v5)
  {
    v6 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
    if (v6)
    {
      v7 = v1;
      v8 = v6;
      v9 = (char *)objc_msgSend(v8, "start");
      v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      v12 = NSNotFound.getter(v11);
      swift_release(inited);
      if (v10 == v12)
      {

        v6 = 0;
      }
    }
    else
    {
      v13 = v1;
      swift_release(inited);
    }

    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100734E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[12];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v11 = (void *)qword_10147ECB0;
  v14[3] = sub_1004B804C(&qword_1013E0230);
  v14[0] = swift_allocObject(&unk_10127AC48, 48, 7);
  sub_1004CB7BC(a1, v14[0] + 16, &qword_1013E0230);
  type metadata accessor for _NSRange(0);
  v14[4] = a2;
  v14[5] = a3;
  v14[7] = v12;
  v14[8] = a4;
  v14[11] = v12;
  v14[9] = a5;
  v13 = v11;
  sub_100734F4C(a1, v5, a2, a3);
  swift_arrayDestroy(v14, 3, (char *)&type metadata for Any + 8);

}

void sub_100734F4C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  double v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  sub_1004CB7BC(a1, (uint64_t)v18, &qword_1013E0230);
  if (v19)
  {
    v8 = sub_1004B8930(0, (unint64_t *)&qword_1013F95A0, NSAttributedString_ptr);
    if ((swift_dynamicCast(&v16, v18, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {

      sub_1004CB7BC(a1, (uint64_t)v18, &qword_1013E0230);
      if (v19)
      {
        if (swift_dynamicCast(&v16, v18, (char *)&type metadata for Any + 8, v8, 6))
          v10 = v16;
        else
          v10 = 0;
      }
      else
      {
        sub_1004CB800((uint64_t)v18, &qword_1013E0230);
        v10 = 0;
      }
      objc_msgSend(a2, "setAttributedMarkedText:selectedRange:", v10, a3, a4, v9);
      goto LABEL_18;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v18, &qword_1013E0230);
  }
  sub_1004CB7BC(a1, (uint64_t)v18, &qword_1013E0230);
  v11 = sub_1004B804C(&qword_1013E0230);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  if (!swift_dynamicCast(&v16, v18, v11, v12, 6))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setMarkedText(_:selectedRange:replacementRange:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 3527, "Unknown marked text type.", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setMarkedText(_:selectedRange:replacementRange:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 3527, (uint64_t)"Unknown marked text type.", 25, 2u);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease(v17);
  sub_1004CB7BC(a1, (uint64_t)v18, &qword_1013E0230);
  if (!v19)
  {
    sub_1004CB800((uint64_t)v18, &qword_1013E0230);
    goto LABEL_14;
  }
  if ((swift_dynamicCast(&v16, v18, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_14:
    v10 = 0;
    goto LABEL_15;
  }
  v14 = v17;
  v10 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
LABEL_15:
  objc_msgSend(a2, "setMarkedText:selectedRange:", v10, a3, a4, v13);
LABEL_18:

LABEL_19:
  v15 = *(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v15)
  {
    if (*(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      sub_10072EB3C();
    else
      sub_10072EC44();
  }
  else
  {
    __break(1u);
  }
}

void sub_1007352C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  id v18;
  _QWORD v19[4];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v9 = (void *)qword_10147ECB0;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v11 = swift_allocObject(v10, 96, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v11 + 56) = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  type metadata accessor for _NSRange(0);
  *(_QWORD *)(v11 + 88) = v12;
  *(_QWORD *)(v11 + 64) = a3;
  *(_QWORD *)(v11 + 72) = a4;
  v19[3] = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  v19[0] = v11;
  if (!a2)
  {
    v18 = v9;
    objc_msgSend(v4, "unmarkText", swift_bridgeObjectRetain(v11).n128_f64[0]);
LABEL_10:
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);

    swift_bridgeObjectRelease(v11);
    return;
  }
  v13 = objc_allocWithZone((Class)NSAttributedString);
  v14 = v9;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(a2);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "initWithString:", v15);

  objc_msgSend(v4, "setAttributedMarkedText:selectedRange:", v16, a3, a4);
  v17 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v17)
  {
    if (*(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      sub_10072EB3C();
    else
      sub_10072EC44();

    goto LABEL_10;
  }
  __break(1u);
}

void sub_100735524(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[8];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v7 = (void *)qword_10147ECB0;
  v11[3] = sub_1004B804C((uint64_t *)&unk_1013E9208);
  v11[0] = a1;
  type metadata accessor for _NSRange(0);
  v11[7] = v8;
  v11[4] = a2;
  v11[5] = a3;
  v9 = a1;
  v10 = v7;
  sub_1007355FC(a1, v3, a2, a3);
  swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);

}

void sub_1007355FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  void *v25;
  objc_class *v26;
  id v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *Strong;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;

  if (a1)
  {
    v53 = a1;
    sub_100736D9C();
    if (!v8)
    {
      v20 = v53;
LABEL_43:

      return;
    }
    v9 = v8;
    *(_QWORD *)&v10 = swift_unknownObjectRetain(v8).n128_u64[0];
    v12 = objc_msgSend(v11, "selectedTextRangeWithoutMarkedText", v10);
    if (!v12)
    {

      swift_unknownObjectRelease(v9);
      return;
    }
    v52 = v12;
    if (objc_msgSend(v53, "length") || a3 || a4)
    {
      v21 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
      v22 = *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v22)
      {
        v23 = v52;
        v51 = *(id *)(v22 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
        if (v51)
          v23 = v51;
        v24 = (char *)objc_msgSend(v23, "start");
        v50 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        v49 = objc_msgSend(v53, "length");
        v25 = *(void **)(*(_QWORD *)(a2 + v21) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (v25)
        {
          v26 = (objc_class *)type metadata accessor for CRLTextRange();
          v27 = objc_allocWithZone(v26);
          v28 = v25;
          v29 = sub_10060EDE4(a3, a4);
          v30 = *(void **)&v28[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS];
          *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS] = v29;

          v31 = *(_QWORD *)(*(_QWORD *)(a2 + v21) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
          if (v31)
          {
            v32 = *(void **)(v31 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange);
            *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange) = v52;
            v33 = v52;

            v34 = *(_QWORD *)(*(_QWORD *)(a2 + v21) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
            if (v34)
            {
              v35 = *(void **)((char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText + v34);
              *(_QWORD *)((char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText + v34) = a1;
              v36 = v53;

              v37 = *(void **)(*(_QWORD *)(a2 + v21) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
              if (v37)
              {
                v38 = objc_allocWithZone(v26);
                v39 = v37;
                v40 = sub_10060EDE4(v50, (uint64_t)v49);
                v41 = *(void **)&v39[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
                *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange] = v40;

                Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
                if (Strong)
                {
                  if (!*(_QWORD *)(*(_QWORD *)(a2 + v21) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
                  {
LABEL_52:
                    __break(1u);
                    return;
                  }
                  v43 = Strong;
                  v44 = objc_msgSend(Strong, "layoutForInfo:");

                  if (v44)
                  {
                    v45 = type metadata accessor for CRLWPLayout();
                    v46 = (void *)swift_dynamicCastClass(v44, v45);
                    if (v46)
                    {
                      v47 = v46;
                      if (objc_msgSend(v46, "parentAutosizes"))
                        objc_msgSend(v47, "invalidateSize");
                      *((_BYTE *)v47 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
                      objc_msgSend(v47, "invalidate");
                      objc_msgSend(v47, "setNeedsDisplay");
                    }

                  }
                }
                v48 = *(_QWORD *)(*(_QWORD *)(a2 + v21) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
                if (v48)
                {
                  if (*(_QWORD *)(v48 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
                    sub_10072EB3C();
                  else
                    sub_10072EC44();

                  swift_unknownObjectRelease(v9);
                  v20 = v51;
                  goto LABEL_43;
                }
                goto LABEL_50;
              }
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    else
    {
      sub_10072F19C();
      v13 = (void *)swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      if (v13)
      {
        if (!*(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
        {
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        v14 = v13;
        v15 = objc_msgSend(v13, "layoutForInfo:");

        if (v15)
        {
          v16 = type metadata accessor for CRLWPLayout();
          v17 = (void *)swift_dynamicCastClass(v15, v16);
          if (v17)
          {
            v18 = v17;
            if (objc_msgSend(v17, "parentAutosizes"))
              objc_msgSend(v18, "invalidateSize");
            *((_BYTE *)v18 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
            objc_msgSend(v18, "invalidate");
            objc_msgSend(v18, "setNeedsDisplay");
          }

        }
      }
      v19 = *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v19)
      {
        if (*(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
          sub_10072EB3C();
        else
          sub_10072EC44();

        swift_unknownObjectRelease(v9);
        v20 = v52;
        goto LABEL_43;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_46;
  }
}

void sub_100735B38(NSUInteger a1@<X0>, NSUInteger a2@<X1>, uint64_t a3@<X2>, NSRange *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  void *v7;
  id v12;
  void *v13;
  void *v14;
  id v15;
  NSUInteger v16;
  NSUInteger v17;
  NSRange v18;
  void *v19;
  id v20;
  _BYTE *v21;
  _BYTE *v22;
  id v23;
  id v24;
  NSRange v25;
  NSRange v26;

  v6 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v7 = *(void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v7)
  {
    v12 = v7;
    sub_1007D484C();
    v14 = v13;

    v15 = objc_msgSend(v14, "range");
    v17 = v16;

    v25.location = a1;
    v25.length = a2;
    v26.location = (NSUInteger)v15;
    v26.length = v17;
    v18 = NSIntersectionRange(v25, v26);
    if ((uint64_t)v18.length < 1)
      goto LABEL_11;
    v19 = *(void **)(*(_QWORD *)(a3 + v6) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v19)
    {
      v20 = v19;
      sub_1007D484C();
      v22 = v21;

      if ((v22[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] & 1) == 0)
        sub_1007D5878();
      v23 = *(id *)&v22[OBJC_IVAR____TtC8Freeform12CRLWPStorage__coreTextAttributedString];

      v24 = objc_msgSend(v23, "attributedSubstringFromRange:", v18.location, v18.length);
      if (!v24)
        goto LABEL_12;
      if (objc_msgSend(v24, "length"))
      {
        if (a4)
          *a4 = v18;
        goto LABEL_12;
      }

LABEL_11:
      v24 = 0;
LABEL_12:
      *a5 = v24;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100735D4C()
{
  char *v0;
  id v1;
  uint64_t v2;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v1 = (id)qword_10147ECB0;
  sub_100735DFC(v0);

  v2 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v2)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      sub_10072EB3C();
    else
      sub_10072EC44();
  }
  else
  {
    __break(1u);
  }
}

void sub_100735DFC(char *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  NSString v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;

  v1 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    v3 = *(void **)((char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText + v1);
    v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange);
    v5 = v4;
    v18 = v3;
    sub_10072F19C();
    if (v3)
    {
      v6 = objc_msgSend(v18, "string");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v8 = v7;

      if (v4)
      {
        v9 = v5;
        sub_100736D9C();
        if (v10
          && (v11 = objc_msgSend(v10, "selectedTextRange")) != 0
          && (v12 = v11, v13 = (void *)sub_10060F8A8((char *)v9), v12, v13))
        {
          v14 = String._bridgeToObjectiveC()();
          objc_msgSend(a1, "replace:with:", v13, v14, swift_bridgeObjectRelease(v8).n128_f64[0]);

        }
        else
        {
          v16 = v9;
          v17 = String._bridgeToObjectiveC()();
          objc_msgSend(a1, "replace:with:", v16, v17, swift_bridgeObjectRelease(v8).n128_f64[0]);

        }
      }
      else
      {
        swift_bridgeObjectRelease(v8);
      }
      v15 = v18;
    }
    else
    {
      v15 = v5;
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_100736134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextStyle);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextStyle) = a1;
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    __break(1u);
  }
}

id sub_100736280(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for ReferenceLibraryViewControllerWithDismiss);
}

uint64_t type metadata accessor for ReferenceLibraryViewControllerWithDismiss()
{
  return objc_opt_self(_TtC8Freeform41ReferenceLibraryViewControllerWithDismiss);
}

uint64_t sub_1007362C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[19] = a5;
  v6[20] = a6;
  v6[18] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[21] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[22] = v8;
  v6[23] = v9;
  return swift_task_switch(sub_100736330, v8, v9);
}

uint64_t sub_100736330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[18];
  v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides;
  v0[24] = OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides;
  *(_BYTE *)(v1 + v2) = 0;
  v3 = (_QWORD *)swift_task_alloc(dword_10140053C);
  v0[25] = v3;
  *v3 = v0;
  v3[1] = sub_100736394;
  return sub_1009DAE24(v0[20], 1);
}

uint64_t sub_100736394()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100736434;
  else
    v4 = sub_1007363F4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_1007363F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = swift_release(*(_QWORD *)(v0 + 168));
  *(_BYTE *)(v2 + v1) = 1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_100736434()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 168));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 208);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.crlError;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Caught error trying to present canvas view controller: %@", 57, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1007365A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v32;
  _QWORD *v33;

  v4 = v3;
  v8 = sub_1004B804C(&qword_1013EC7E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v33 = (uint64_t *)((char *)&v32 + *(int *)(v14 + 64) - v12);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  v17 = v15;
  v18 = a2;
  *((_QWORD *)v13 + 2) = a2;
  *((_QWORD *)v13 + 3) = a3;
  v13[32] = 0;
  v19 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
  if (v19)
  {
    swift_bridgeObjectRetain(a3);
    v20 = v19;
    v21 = v33;
    sub_100A1487C(v33);

    v22 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
  }
  else
  {
    v23 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v33, 1, 1, v23);
    swift_bridgeObjectRetain(a3);
  }
  v24 = (uint64_t)&v13[*(int *)(v8 + 80)];
  v25 = sub_1004B804C(&qword_1013F3D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v27 = (uint64_t)&v10[*(int *)(v8 + 64)];
  v28 = (uint64_t)&v10[*(int *)(v8 + 80)];
  *(_QWORD *)v10 = v16;
  *((_QWORD *)v10 + 1) = v17;
  *((_QWORD *)v10 + 2) = v18;
  *((_QWORD *)v10 + 3) = a3;
  v10[32] = 0;
  sub_1004CB7BC((uint64_t)v33, v27, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC(v24, v28, (uint64_t *)&unk_1013F3DC0);
  v29 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
  swift_bridgeObjectRetain(a3);
  v30 = sub_1006BEFE0((uint64_t)v26, v16, v17, v18, a3, 0, v27, v28);
  sub_1004CB800((uint64_t)v13, &qword_1013EC7E8);
  return v30;
}

id sub_100736858(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013EC7E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - v10;
  v13 = (uint64_t *)((char *)&v31 + *(int *)(v12 + 64) - v10);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
  *(_QWORD *)v11 = v14;
  *((_QWORD *)v11 + 1) = v15;
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = 0;
  v11[32] = 1;
  v16 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
  if (v16)
  {
    v17 = a2;
    v18 = v16;
    sub_100A1487C(v13);

    v19 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 0, 1, v19);
  }
  else
  {
    v20 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    v21 = a2;
  }
  v22 = (uint64_t)&v11[*(int *)(v6 + 80)];
  v23 = sub_1004B804C(&qword_1013F3D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v25 = (uint64_t)&v8[*(int *)(v6 + 64)];
  v26 = (uint64_t)&v8[*(int *)(v6 + 80)];
  *(_QWORD *)v8 = v14;
  *((_QWORD *)v8 + 1) = v15;
  *((_QWORD *)v8 + 2) = a2;
  *((_QWORD *)v8 + 3) = 0;
  v8[32] = 1;
  sub_1004CB7BC((uint64_t)v13, v25, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC(v22, v26, (uint64_t *)&unk_1013F3DC0);
  v27 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
  v28 = a2;
  v29 = sub_1006BEFE0((uint64_t)v24, v14, v15, a2, 0, 1, v25, v26);
  sub_1004CB800((uint64_t)v11, &qword_1013EC7E8);
  return v29;
}

void sub_100736AD8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  _QWORD v16[5];
  _OWORD v17[15];
  uint64_t v18;

  v3 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  v5 = a1;
  swift_retain(v4);
  sub_1007C8368(v5, (uint64_t)v17);
  v16[3] = &type metadata for CRLWPTextPresetData;
  v16[4] = sub_10073D86C();
  v6 = swift_allocObject(&unk_10127AD10, 264, 7);
  v16[0] = v6;
  v7 = v17[13];
  *(_OWORD *)(v6 + 208) = v17[12];
  *(_OWORD *)(v6 + 224) = v7;
  *(_OWORD *)(v6 + 240) = v17[14];
  *(_QWORD *)(v6 + 256) = v18;
  v8 = v17[9];
  *(_OWORD *)(v6 + 144) = v17[8];
  *(_OWORD *)(v6 + 160) = v8;
  v9 = v17[11];
  *(_OWORD *)(v6 + 176) = v17[10];
  *(_OWORD *)(v6 + 192) = v9;
  v10 = v17[5];
  *(_OWORD *)(v6 + 80) = v17[4];
  *(_OWORD *)(v6 + 96) = v10;
  v11 = v17[7];
  *(_OWORD *)(v6 + 112) = v17[6];
  *(_OWORD *)(v6 + 128) = v11;
  v12 = v17[1];
  *(_OWORD *)(v6 + 16) = v17[0];
  *(_OWORD *)(v6 + 32) = v12;
  v13 = v17[3];
  v14 = v4 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
  *(_OWORD *)(v6 + 48) = v17[2];
  *(_OWORD *)(v6 + 64) = v13;
  swift_beginAccess(v14, &v15, 33, 0);
  sub_100582338((uint64_t)v16, v14, &qword_1013EB9A0);
  swift_endAccess(&v15);
  swift_release(v4);
  *(_BYTE *)(*(_QWORD *)(a2 + v3) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind) = 4;
}

_QWORD *sub_100736C28(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _OWORD v16[2];
  __int128 v17;
  ValueMetadata *v18;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("appData"));
  v6 = v5;
  v7 = a1;
  v8 = objc_msgSend(a2, "appDescriptionData");
  v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v18 = (ValueMetadata *)sub_1004B804C(&qword_1013FA4C0);
  *(_QWORD *)&v17 = v9;
  sub_10050CB14(&v17, v16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  sub_1008284A4(v16, v4, v6, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(0x8000000000000000);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("styles"));
  v13 = v12;
  v18 = &type metadata for CRLStyleCopyingType;
  LOBYTE(v17) = 4;
  sub_10050CB14(&v17, v16);
  v14 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  sub_1008284A4(v16, v11, v13, v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(0x8000000000000000);

  return _swiftEmptyDictionarySingleton;
}

void sub_100736D9C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *Strong;
  id v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  void *v18;
  void *v19;
  id v20;
  char *v21;
  void *v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor__textSelectionDelegate;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor__textSelectionDelegate];
  if (!v3)
  {
    v9 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v9)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
      v11 = v9;
      v12 = sub_1005E9458(v11, Strong, v1);

      v13 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v12;
LABEL_21:
      swift_unknownObjectRelease(v13);
      return;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v4 = &v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc];
  v5 = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  if (!v5)
  {
    swift_unknownObjectRetain(v3);
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v6)
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_unknownObjectRetain(v3);
  v7 = objc_msgSend(v5, "layoutForInfo:", v6);

  if (v7)
  {
    v8 = type metadata accessor for CRLWPLayout();
    v5 = (void *)swift_dynamicCastClass(v7, v8);
    if (!v5)

  }
  else
  {
    v5 = 0;
  }
LABEL_11:
  v14 = objc_msgSend(v3, "layout");
  v15 = v14;
  if (!v5)
  {
    if (!v14)
      goto LABEL_16;
LABEL_18:

    goto LABEL_19;
  }
  if (!v14)
  {
    v15 = v5;
    goto LABEL_18;
  }
  type metadata accessor for CRLWPLayout();
  v16 = v5;
  v17 = static NSObject.== infix(_:_:)(v16, v15);

  if ((v17 & 1) != 0)
  {
LABEL_16:
    v13 = v3;
    goto LABEL_21;
  }
LABEL_19:
  v18 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v18)
  {
    v19 = (void *)swift_unknownObjectWeakLoadStrong(v4);
    v20 = v18;
    v21 = sub_1005E9458(v20, v19, v1);

    v22 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v21;
    swift_unknownObjectRelease(v3);
    v13 = v22;
    goto LABEL_21;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_100736FC0(uint64_t a1, uint64_t *a2)
{
  return sub_1007CB2CC(*a2);
}

double sub_100736FC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  double result;

  v4 = *a3;
  swift_retain(*a3);
  sub_1007EB6B8(a1, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_10073700C()
{
  return 32;
}

double sub_100737018(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

uint64_t sub_100737020(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;

  v2 = *a1;
  *(_QWORD *)a2 = *a1;
  v3 = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a2 + 24) = a1[3];
  *(_OWORD *)(a2 + 8) = v3;
  return swift_retain(v2);
}

__n128 sub_100737048(__n128 *a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = a1[1].n128_u64[1];
  result = *a1;
  *(_QWORD *)(a2 + 24) = a1[1].n128_u64[0];
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unint64_t sub_100737064()
{
  unint64_t result;

  result = qword_1013EFBD8;
  if (!qword_1013EFBD8)
  {
    result = swift_getWitnessTable(&unk_100F0D7B8, &type metadata for CRLWPParagraphLevelAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFBD8);
  }
  return result;
}

unint64_t sub_1007370A8()
{
  unint64_t result;

  result = qword_1013F3A80;
  if (!qword_1013F3A80)
  {
    result = swift_getWitnessTable(&unk_100F0D770, &type metadata for CRLWPParagraphLevelAttribute);
    atomic_store(result, (unint64_t *)&qword_1013F3A80);
  }
  return result;
}

unint64_t sub_1007370EC()
{
  unint64_t result;

  result = qword_1013EFBF0;
  if (!qword_1013EFBF0)
  {
    result = swift_getWitnessTable(&unk_100F0D72C, &type metadata for CRLWPListStartAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFBF0);
  }
  return result;
}

unint64_t sub_100737130()
{
  unint64_t result;

  result = qword_1013EFBF8;
  if (!qword_1013EFBF8)
  {
    result = swift_getWitnessTable(&unk_100F0D6E4, &type metadata for CRLWPListStartAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFBF8);
  }
  return result;
}

uint64_t sub_100737174()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];
  uint64_t v5;

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, 0x656D614E746E6F66, 0xE800000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x6874656B69727473, 0xED00006867756F72, 0x656D614E746E6F66, 0xE800000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x657A6953746E6F66, 0xE800000000000000, 0x656D614E746E6F66, 0xE800000000000000, 0) & 1) != 0)
  {
    return 0;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  v4[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
  v4[1] = v2;
  swift_bridgeObjectRetain(v2);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  if (swift_dynamicCast(&v5, v4, v3, &type metadata for String, 6))
    return v5;
  else
    return 0;
}

unint64_t sub_100737298()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  uint64_t v4;
  int v5;
  int v7;
  char v8;
  unsigned int v9;

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, 0x657A6953746E6F66, 0xE800000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x6874656B69727473, 0xED00006867756F72, 0x657A6953746E6F66, 0xE800000000000000, 0) & 1) != 0)
  {
    v1 = 0;
    v2 = 1;
  }
  else
  {
    v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4);
    v7 = *(_DWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize);
    v8 = v3;
    v4 = sub_1004B804C(&qword_1013E0B30);
    v5 = swift_dynamicCast(&v9, &v7, v4, &type metadata for Float, 6);
    v1 = v9;
    v2 = v5 ^ 1;
    if (!v5)
      v1 = 0;
  }
  return v1 | ((unint64_t)v2 << 32);
}

uint64_t sub_100737398()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id *v3;
  id v5;
  char v6;
  char v7;
  unsigned __int8 v8;

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, 0x63696C617469, 0xE600000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x6874656B69727473, 0xED00006867756F72, 0x63696C617469, 0xE600000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x657A6953746E6F66, 0xE800000000000000, 0x63696C617469, 0xE600000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x656D614E746E6F66,
          0xE800000000000000,
          0x63696C617469,
          0xE600000000000000,
          0) & 1) != 0)
  {
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574636172616863, 0xED00006C6C694672, 0x63696C617469, 0xE600000000000000, 0) & 1) != 0)
  {
    v5 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
    v1 = v5;
    v2 = sub_1004B804C(&qword_1013EFCA8);
    v3 = &v5;
  }
  else if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684828002, 0xE400000000000000, 0x63696C617469, 0xE600000000000000, 0) & 1) != 0)
  {
    v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
    v2 = sub_1004B804C(&qword_1013EFCA0);
    v3 = (id *)&v6;
  }
  else
  {
    v7 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
    v2 = sub_1004B804C(&qword_1013EFCA0);
    v3 = (id *)&v7;
  }
  if ((swift_dynamicCast(&v8, v3, v2, &type metadata for Bool, 6) & 1) == 0)
    return 2;
  return v8;
}

uint64_t sub_1007375A4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id *v3;
  id v5;
  char v6;
  unsigned __int8 v7;

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, 1684828002, 0xE400000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x6874656B69727473, 0xED00006867756F72, 1684828002, 0xE400000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x657A6953746E6F66, 0xE800000000000000, 1684828002, 0xE400000000000000, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x656D614E746E6F66,
          0xE800000000000000,
          1684828002,
          0xE400000000000000,
          0) & 1) != 0)
  {
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574636172616863, 0xED00006C6C694672, 1684828002, 0xE400000000000000, 0) & 1) != 0)
  {
    v5 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
    v1 = v5;
    v2 = sub_1004B804C(&qword_1013EFCA8);
    v3 = &v5;
  }
  else
  {
    v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
    v2 = sub_1004B804C(&qword_1013EFCA0);
    v3 = (id *)&v6;
  }
  if ((swift_dynamicCast(&v7, v3, v2, &type metadata for Bool, 6) & 1) == 0)
    return 2;
  return v7;
}

uint64_t sub_10073773C()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, 0x6574636172616863, 0xED00006C6C694672, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x6874656B69727473, 0xED00006867756F72, 0x6574636172616863, 0xED00006C6C694672, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x657A6953746E6F66, 0xE800000000000000, 0x6574636172616863, 0xED00006C6C694672, 0) & 1) != 0|| (_stringCompareWithSmolCheck(_:_:expecting:)(0x656D614E746E6F66,
          0xE800000000000000,
          0x6574636172616863,
          0xED00006C6C694672,
          0) & 1) != 0)
  {
    return 0;
  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  v4 = objc_opt_self(CRLFill);
  v1 = swift_dynamicCastObjCClass(v3, v4);
  if (v1)
    v5 = v3;
  return v1;
}

void sub_1007378A4(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD v34[5];
  __objc2_prot *v35;

  v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = __CocoaSet.makeIterator()(v5);
    v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v8 = sub_1004F619C();
    v9 = Set.Iterator.init(_cocoa:)(v34, v6, v7, v8);
    v4 = v34[0];
    v31 = v34[1];
    v10 = v34[2];
    v11 = v34[3];
    v12 = v34[4];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v14 = ~v13;
    v15 = -v13;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v12 = v16 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v10 = v14;
    v11 = 0;
  }
  v30 = (unint64_t)(v10 + 64) >> 6;
  while (v4 < 0)
  {
    v20 = __CocoaSet.Iterator.next()(v9);
    if (!v20)
      goto LABEL_39;
    v21 = v20;
    v32 = v20;
    v22 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    swift_unknownObjectRetain(v21);
    swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
    v23 = v33;
    swift_unknownObjectRelease(v21);
    v19 = v11;
    v17 = v12;
    if (!v23)
      goto LABEL_39;
LABEL_35:
    v35 = &OBJC_PROTOCOL___CRLWPContainerTextEditingRep;
    v27 = (void *)swift_dynamicCastObjCProtocolConditional(v23, 1, &v35);
    if (v27)
    {
      v28 = v27;
      if ((objc_msgSend(v27, "respondsToSelector:", *a3) & 1) != 0)
      {
        if (!*(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
          goto LABEL_41;
        objc_msgSend(v28, *a3);
      }
    }

    v11 = v19;
    v12 = v17;
  }
  if (v12)
  {
    v17 = (v12 - 1) & v12;
    v18 = __clz(__rbit64(v12)) | (v11 << 6);
    v19 = v11;
LABEL_34:
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    if (!v23)
      goto LABEL_39;
    goto LABEL_35;
  }
  v24 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v24 >= v30)
      goto LABEL_39;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    v19 = v11 + 1;
    if (!v25)
    {
      v19 = v11 + 2;
      if (v11 + 2 >= v30)
        goto LABEL_39;
      v25 = *(_QWORD *)(v31 + 8 * v19);
      if (!v25)
      {
        v19 = v11 + 3;
        if (v11 + 3 >= v30)
          goto LABEL_39;
        v25 = *(_QWORD *)(v31 + 8 * v19);
        if (!v25)
        {
          v19 = v11 + 4;
          if (v11 + 4 >= v30)
            goto LABEL_39;
          v25 = *(_QWORD *)(v31 + 8 * v19);
          if (!v25)
          {
            v19 = v11 + 5;
            if (v11 + 5 >= v30)
              goto LABEL_39;
            v25 = *(_QWORD *)(v31 + 8 * v19);
            if (!v25)
            {
              v26 = v11 + 6;
              while (v30 != v26)
              {
                v25 = *(_QWORD *)(v31 + 8 * v26++);
                if (v25)
                {
                  v19 = v26 - 1;
                  goto LABEL_33;
                }
              }
LABEL_39:
              sub_1004D284C(v4);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v17 = (v25 - 1) & v25;
    v18 = __clz(__rbit64(v25)) + (v19 << 6);
    goto LABEL_34;
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_100737BD4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  Swift::Int v17;
  char *v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  objc_super v38;

  v32 = a4;
  v35 = a2;
  v36 = a3;
  v37 = a1;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v34 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v33);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0xD8);
  v14 = sub_1004B804C(&qword_1013EFC58);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = *(_QWORD *)((swift_isaMask & *v4) + 0xE0);
  v16 = v4;
  v17 = sub_1004B5E10((uint64_t)&off_101263900);
  v18 = v37;
  result = swift_arrayDestroy(&unk_101263920, 1, &type metadata for String);
  *(_QWORD *)((char *)v4 + v15) = v17;
  v20 = *(char **)&v18[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xE8)) = v18;
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v21)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 760))(result);
    sub_1004D29BC((uint64_t)&v9[*(int *)(v33 + 20)], (uint64_t)v12);
    v22 = v20;
    v23 = v18;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    v24 = v34;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v7, v12, v5);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPStorageCRDTData);
    v25 = CRAttributedString.count.getter(v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    v26 = v35 & ~(v35 >> 63);
    if (v25 < v26)
      v26 = v25;
    v27 = v36 & ~(v36 >> 63);
    if (v25 < v27)
      v27 = v25;
    if (v27 >= v26)
    {
      v28 = (_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xF0));
      *v28 = v26;
      v28[1] = v27;
      v29 = v32;
      sub_1004CB7BC(v32, (uint64_t)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xF8), (uint64_t *)&unk_1013EFC60);

      v30 = (objc_class *)sub_1004B804C((uint64_t *)&unk_1013F3EA0);
      v38.receiver = v16;
      v38.super_class = v30;
      v31 = objc_msgSendSuper2(&v38, "init");

      sub_1004CB800(v29, (uint64_t *)&unk_1013EFC60);
      return (uint64_t)v31;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100737ED4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33[2];

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPCharacterScope;
  v30 = &type metadata for CRLWPFontBoldAttribute;
  v15 = sub_1007394EC();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(v33, 1684828002, 0xE400000000000000);
  swift_bridgeObjectRelease(v33[1]);
  v25 = &type metadata for CRLWPCharacterScope;
  v26 = &type metadata for CRLWPFontBoldAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  LOBYTE(v33[0]) = a5;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_10073DD28();
  CRAttributedString.Attributes.subscript.setter(v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1013EFC60);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013F3EA0));
  v21 = sub_100737BD4(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013EFC60);
  return v21;
}

uint64_t sub_10073809C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33[2];

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPCharacterScope;
  v30 = &type metadata for CRLWPFontItalicAttribute;
  v15 = sub_1007394A8();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(v33, 0x63696C617469, 0xE600000000000000);
  swift_bridgeObjectRelease(v33[1]);
  v25 = &type metadata for CRLWPCharacterScope;
  v26 = &type metadata for CRLWPFontItalicAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  LOBYTE(v33[0]) = a5;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_10073DCE4();
  CRAttributedString.Attributes.subscript.setter(v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1013EFC60);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013F3EA0));
  v21 = sub_100737BD4(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013EFC60);
  return v21;
}

uint64_t sub_100738268(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPCharacterScope;
  v30 = &type metadata for CRLWPUnderlineAttribute;
  v15 = sub_100739464();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(&v33, 0x6E696C7265646E75, 0xE900000000000065);
  swift_bridgeObjectRelease(v34);
  v25 = &type metadata for CRLWPCharacterScope;
  v26 = &type metadata for CRLWPUnderlineAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  v33 = a5;
  LOBYTE(v34) = 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_10073DCA0();
  CRAttributedString.Attributes.subscript.setter(&v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1013EFC60);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013F3EA0));
  v21 = sub_100737BD4(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013EFC60);
  return v21;
}

uint64_t sub_100738440(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPCharacterScope;
  v30 = &type metadata for CRLWPStrikethroughAttribute;
  v15 = sub_100739420();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(&v33, 0x6874656B69727473, 0xED00006867756F72);
  swift_bridgeObjectRelease(v34);
  v25 = &type metadata for CRLWPCharacterScope;
  v26 = &type metadata for CRLWPStrikethroughAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  v33 = a5;
  LOBYTE(v34) = 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_10073DC5C();
  CRAttributedString.Attributes.subscript.setter(&v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1013EFC60);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013F3EA0));
  v21 = sub_100737BD4(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013EFC60);
  return v21;
}

uint64_t sub_100738620(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  ValueMetadata *v26;
  ValueMetadata *v27;
  unint64_t v28;
  uint64_t v29;
  ValueMetadata *v30;
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v25 = a3;
  v9 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v24 - v13;
  *(uint64_t *)((char *)&v24 - v13) = (uint64_t)&_swiftEmptySetSingleton;
  v15 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v15);
  v30 = &type metadata for CRLWPCharacterScope;
  v31 = &type metadata for CRLWPFontSizeAttribute;
  v16 = sub_100739530();
  v32 = v16;
  v33 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(v34, 0x657A6953746E6F66, 0xE800000000000000);
  swift_bridgeObjectRelease(v34[1]);
  v26 = &type metadata for CRLWPCharacterScope;
  v27 = &type metadata for CRLWPFontSizeAttribute;
  v28 = v16;
  v29 = KeyPath;
  v18 = swift_getKeyPath(&unk_100F07DC0);
  *(float *)v34 = a5;
  BYTE4(v34[0]) = 0;
  v19 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v20 = sub_1007395C4();
  CRAttributedString.Attributes.subscript.setter(v34, v18, v19, v20);
  sub_1004CB7BC((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_1013EFC60);
  v21 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013F3EA0));
  v22 = sub_100737BD4(a1, a2, v25, (uint64_t)v12);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013EFC60);
  return v22;
}

uint64_t sub_100738804(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  Swift::Int v17;
  char *v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  objc_super v38;

  v32 = a4;
  v35 = a2;
  v36 = a3;
  v37 = a1;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v34 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v33);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0xD8);
  v14 = sub_1004B804C((uint64_t *)&unk_1013EFC10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = *(_QWORD *)((swift_isaMask & *v4) + 0xE0);
  v16 = v4;
  v17 = sub_1004B5E10((uint64_t)&off_101263930);
  v18 = v37;
  result = swift_arrayDestroy(&unk_101263950, 1, &type metadata for String);
  *(_QWORD *)((char *)v4 + v15) = v17;
  v20 = *(char **)&v18[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xE8)) = v18;
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v21)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 760))(result);
    sub_1004D29BC((uint64_t)&v9[*(int *)(v33 + 20)], (uint64_t)v12);
    v22 = v20;
    v23 = v18;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    v24 = v34;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v7, v12, v5);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPStorageCRDTData);
    v25 = CRAttributedString.count.getter(v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    v26 = v35 & ~(v35 >> 63);
    if (v25 < v26)
      v26 = v25;
    v27 = v36 & ~(v36 >> 63);
    if (v25 < v27)
      v27 = v25;
    if (v27 >= v26)
    {
      v28 = (_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xF0));
      *v28 = v26;
      v28[1] = v27;
      v29 = v32;
      sub_1004CB7BC(v32, (uint64_t)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xF8), &qword_1013F3D40);

      v30 = (objc_class *)sub_1004B804C((uint64_t *)&unk_1013EFC00);
      v38.receiver = v16;
      v38.super_class = v30;
      v31 = objc_msgSendSuper2(&v38, "init");

      sub_1004CB800(v29, &qword_1013F3D40);
      return (uint64_t)v31;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100738B04(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C(&qword_1013F3D40);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPParagraphScope;
  v30 = &type metadata for CRLWPParagraphAlignmentAttribute;
  v15 = sub_100573144();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(&v33, 0xD000000000000012, 0x8000000100FAA3D0);
  swift_bridgeObjectRelease(v34);
  v25 = &type metadata for CRLWPParagraphScope;
  v26 = &type metadata for CRLWPParagraphAlignmentAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  v33 = a5;
  LOBYTE(v34) = 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_10073D7B8();
  CRAttributedString.Attributes.subscript.setter(&v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, &qword_1013F3D40);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
  v21 = sub_100738804(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, &qword_1013F3D40);
  return v21;
}

uint64_t sub_100738CDC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C(&qword_1013F3D40);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPParagraphScope;
  v30 = &type metadata for CRLWPListStyleTypeAttribute;
  v15 = sub_100739274();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(&v33, 0x6C7974537473696CLL, 0xE900000000000065);
  swift_bridgeObjectRelease(v34);
  v25 = &type metadata for CRLWPParagraphScope;
  v26 = &type metadata for CRLWPListStyleTypeAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  v33 = a5;
  LOBYTE(v34) = 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_1007392B8();
  CRAttributedString.Attributes.subscript.setter(&v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, &qword_1013F3D40);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
  v21 = sub_100738804(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, &qword_1013F3D40);
  return v21;
}

uint64_t sub_100738EB8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C(&qword_1013F3D40);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPParagraphScope;
  v30 = &type metadata for CRLWPListStartAttribute;
  v15 = sub_1007370EC();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(&v33, 0x726174537473696CLL, 0xE900000000000074);
  swift_bridgeObjectRelease(v34);
  v25 = &type metadata for CRLWPParagraphScope;
  v26 = &type metadata for CRLWPListStartAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  v33 = a5;
  LOBYTE(v34) = 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_100737130();
  CRAttributedString.Attributes.subscript.setter(&v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, &qword_1013F3D40);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
  v21 = sub_100738804(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, &qword_1013F3D40);
  return v21;
}

uint64_t sub_100739090(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  ValueMetadata *v25;
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a2;
  v24 = a3;
  v8 = sub_1004B804C(&qword_1013F3D40);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  *(uint64_t *)((char *)&v23 - v12) = (uint64_t)&_swiftEmptySetSingleton;
  v14 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v14);
  v29 = &type metadata for CRLWPParagraphScope;
  v30 = &type metadata for CRLWPWritingDirectionAttribute;
  v15 = sub_10073D6C0();
  v31 = v15;
  v32 = a4;
  KeyPath = swift_getKeyPath(&unk_100F07E38);
  swift_retain(a4);
  sub_100AD8690(&v33, 0xD000000000000014, 0x8000000100FCC800);
  swift_bridgeObjectRelease(v34);
  v25 = &type metadata for CRLWPParagraphScope;
  v26 = &type metadata for CRLWPWritingDirectionAttribute;
  v27 = v15;
  v28 = KeyPath;
  v17 = swift_getKeyPath(&unk_100F07DC0);
  v33 = a5;
  LOBYTE(v34) = 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v19 = sub_10073D704();
  CRAttributedString.Attributes.subscript.setter(&v33, v17, v18, v19);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, &qword_1013F3D40);
  v20 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
  v21 = sub_100738804(a1, v23, v24, (uint64_t)v10);
  sub_1004CB800((uint64_t)v13, &qword_1013F3D40);
  return v21;
}

uint64_t sub_100739268()
{
  return 32;
}

unint64_t sub_100739274()
{
  unint64_t result;

  result = qword_1013EFC28;
  if (!qword_1013EFC28)
  {
    result = swift_getWitnessTable(&unk_100F0D6A0, &type metadata for CRLWPListStyleTypeAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFC28);
  }
  return result;
}

unint64_t sub_1007392B8()
{
  unint64_t result;

  result = qword_1013EFC30;
  if (!qword_1013EFC30)
  {
    result = swift_getWitnessTable(&unk_100F0D658, &type metadata for CRLWPListStyleTypeAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFC30);
  }
  return result;
}

uint64_t sub_1007392FC(uint64_t a1, uint64_t *a2)
{
  return sub_1007CB2CC(*a2);
}

uint64_t sub_100739308()
{
  return 24;
}

uint64_t sub_100739314(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)a2 = *a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 1);
  return swift_retain(v2);
}

uint64_t sub_10073932C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100720EF0(a1, a2, a3) & 1;
}

uint64_t sub_100739344(uint64_t a1, uint64_t a2)
{
  return sub_100720F54(a1, a2);
}

__n128 sub_100739358(__n128 *a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = a1[1].n128_u64[0];
  result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

void sub_100739370(uint64_t *a1)
{
  sub_10084C27C(*a1);
}

uint64_t sub_100739398()
{
  return 24;
}

uint64_t sub_1007393A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100720EF0(a1, a2, a3) & 1;
}

uint64_t sub_1007393BC(uint64_t a1, uint64_t a2)
{
  return sub_100720F54(a1, a2);
}

unint64_t sub_1007393D0()
{
  unint64_t result;

  result = qword_1013EFC70;
  if (!qword_1013EFC70)
  {
    result = swift_getWitnessTable(&unk_100F0D614, &type metadata for CRLWPCharacterFillAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFC70);
  }
  return result;
}

void sub_100739414(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_bridgeObjectRelease(a1);
  else

}

unint64_t sub_100739420()
{
  unint64_t result;

  result = qword_1013EFC78;
  if (!qword_1013EFC78)
  {
    result = swift_getWitnessTable(&unk_100F0D35C, &type metadata for CRLWPStrikethroughAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFC78);
  }
  return result;
}

unint64_t sub_100739464()
{
  unint64_t result;

  result = qword_1013F3D70;
  if (!qword_1013F3D70)
  {
    result = swift_getWitnessTable(&unk_100F0D2D0, &type metadata for CRLWPUnderlineAttribute);
    atomic_store(result, (unint64_t *)&qword_1013F3D70);
  }
  return result;
}

unint64_t sub_1007394A8()
{
  unint64_t result;

  result = qword_1013EFC98;
  if (!qword_1013EFC98)
  {
    result = swift_getWitnessTable(&unk_100F0D244, &type metadata for CRLWPFontItalicAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFC98);
  }
  return result;
}

unint64_t sub_1007394EC()
{
  unint64_t result;

  result = qword_1013EFCB0;
  if (!qword_1013EFCB0)
  {
    result = swift_getWitnessTable(&unk_100F0D1B8, &type metadata for CRLWPFontBoldAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFCB0);
  }
  return result;
}

unint64_t sub_100739530()
{
  unint64_t result;

  result = qword_1013EFCC0;
  if (!qword_1013EFCC0)
  {
    result = swift_getWitnessTable(&unk_100F0CDB8, &type metadata for CRLWPFontSizeAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFCC0);
  }
  return result;
}

unint64_t sub_100739574()
{
  unint64_t result;

  result = qword_1013EFCD0;
  if (!qword_1013EFCD0)
  {
    result = swift_getWitnessTable(&unk_100F0D588, &type metadata for CRLWPFontNameAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFCD0);
  }
  return result;
}

uint64_t sub_1007395B8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    a1 = a2;
  return swift_bridgeObjectRelease(a1);
}

unint64_t sub_1007395C4()
{
  unint64_t result;

  result = qword_1013EFCE0;
  if (!qword_1013EFCE0)
  {
    result = swift_getWitnessTable(&unk_100F0CD70, &type metadata for CRLWPFontSizeAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFCE0);
  }
  return result;
}

uint64_t sub_100739608()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100739634(uint64_t a1, void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(_QWORD **)(a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *v3;
  result = swift_conformsToProtocol2(*v3, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v6 = *(uint64_t (**)(uint64_t))(v4 + 704);
    v7 = swift_retain(v3);
    v8 = v6(v7);
    v9 = objc_msgSend((id)v8, "bezierPath", swift_release(v3).n128_f64[0]);

    LOBYTE(v8) = objc_msgSend(v9, "isLineSegment");
    if ((v8 & 1) != 0)
      return 0;
    else
      return objc_msgSend(a2, "documentIsSharedReadOnly") ^ 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1007396F8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  char *result;
  void *v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;

  v5 = objc_opt_self(CRLWPSelection);
  v6 = swift_dynamicCastObjCClass(a1, v5);
  if (!v6)
    return 0;
  v7 = (void *)v6;
  v8 = a1;
  result = (char *)objc_msgSend(a2, "selectionPathPoppingToSelection:", v7);
  v10 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v10)
  {
    v11 = result;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (Strong)
    {
      v13 = (void *)Strong;
      v14 = v10;
      v15 = objc_msgSend(v13, "infoForSelectionPath:", v11);

      if (v15)
      {

        swift_unknownObjectRelease(v15);
        if (v15 != v14)
          goto LABEL_6;
        sub_100736D9C();
        if (!v18)
        {
          v16 = 1;
          goto LABEL_12;
        }
        v19 = v18;
        v17 = v8;
        v20 = objc_msgSend(v7, "range", swift_unknownObjectRetain(v19).n128_f64[0]);
        v22 = v21;
        v23 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
        v8 = (char *)sub_10060EDE4((uint64_t)v20, v22);
        v24 = objc_msgSend(v7, "caretAffinity");

        *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v24;
        objc_msgSend(v19, "setSelectedTextRange:", v8);
        swift_unknownObjectRelease(v19);
        v16 = 1;
      }
      else
      {
        v16 = 0;
        v17 = v11;
        v11 = (char *)v14;
      }

      v8 = v17;
      goto LABEL_12;
    }
LABEL_6:
    v16 = 0;
LABEL_12:

    return (char *)v16;
  }
  __break(1u);
  return result;
}

id sub_1007398D4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;

  v3 = v2;
  v6 = objc_opt_self(CRLWPSelection);
  v7 = swift_dynamicCastObjCClass(a2, v6);
  if (v7 && (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_preventSelectionChanges) & 1) == 0)
  {
    v15 = (id)v7;
    v16 = a2;
    if (objc_msgSend(v15, "isVisual"))
    {
      if (objc_msgSend(v15, "isVisual")
        && (objc_msgSend(v15, "validVisualRanges") & 1) == 0)
      {
        v15 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "calculateVisualRunsFromSelection:updateControllerSelection:", v15, 0);
      }
      else
      {
        v17 = v16;
      }
      if (objc_msgSend(v15, "isValid")
        && *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_wantsParagraphMode) == 1)
      {
        v18 = sub_100723BF8(v15);

        v16 = v15;
        v15 = v18;
      }
    }
    else
    {
      if (!objc_msgSend(v15, "isValid")
        || *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_wantsParagraphMode) != 1)
      {
LABEL_21:
        if (!a1
          || (sub_1004B8930(0, (unint64_t *)&qword_1013E4F38, off_101229A00),
              v19 = v15,
              v20 = a1,
              v21 = static NSObject.== infix(_:_:)(v19, v20),
              v19,
              v20,
              (v21 & 1) == 0))
        {
          v22 = sub_10072BFCC();
          if (v22)
          {
            v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath];

            if (v23)
              sub_10072C82C();
          }
          if (!a1)
            goto LABEL_29;
          v20 = a1;
        }
        sub_1004B8930(0, (unint64_t *)&qword_1013E4F38, off_101229A00);
        v24 = v15;
        v25 = v20;
        v26 = static NSObject.== infix(_:_:)(v24, v25);

        if ((v26 & 1) != 0)
          return v15;
LABEL_29:
        sub_10072284C();
        return v15;
      }
      v15 = sub_100723BF8(v15);
    }

    goto LABEL_21;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v9 = Strong;
    v10 = objc_msgSend(Strong, "textInputResponder");

    if (v10)
    {
      v11 = *(void **)&v10[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
      v12 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
      v10[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
      v13 = *(void **)&v10[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
      v14 = v11;
      if (v13)
        objc_msgSend(v13, "textWillChange:", v10);
      v10[v12] = 0;

    }
  }
  return 0;
}

void sub_100739BA8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v1 = v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (Strong)
  {
    v3 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
    if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {
      v4 = Strong;
      v12 = objc_msgSend(Strong, "layoutForInfo:");

      if (v12)
      {
        v5 = type metadata accessor for CRLWPLayout();
        v6 = swift_dynamicCastClass(v12, v5);
        if (v6 && (v7 = (void *)v6, (v8 = (void *)swift_unknownObjectWeakLoadStrong(v1)) != 0))
        {
          v9 = v8;
          v10 = objc_msgSend(v8, "repForInfo:", *(_QWORD *)(v0 + v3));
          objc_msgSend(v10, "invalidateKnobs");
          if (objc_msgSend(v7, "parentAutosizes"))
            objc_msgSend(v7, "invalidateSize");
          *((_BYTE *)v7 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
          objc_msgSend(v7, "invalidate");
          objc_msgSend(v7, "setNeedsDisplay");
          objc_msgSend(v9, "canvasInvalidatedForLayout:", v7);

          v11 = v10;
        }
        else
        {
          v11 = v12;
        }

      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100739D18(id a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t result;
  id v11;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v5 = *(void **)(v4 + 16);
  if (v5)
  {
    swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
    v6 = v5;
    v7 = objc_msgSend(v6, "currentUserParticipant");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "permission");
      swift_release(v4);

      if (v9 == (id)2)
        return 0;
    }
    else
    {
      v11 = objc_msgSend(v6, "publicPermission");
      swift_release(v4);

      if (v11 == (id)2)
        return 0;
    }
  }
  if ((objc_msgSend(a1, "hasNativeText") & 1) != 0)
    return 1;
  if ((objc_msgSend(a1, "hasImportableText") & 1) != 0)
    return 1;
  result = (uint64_t)objc_msgSend(a1, "hasImportableRichText");
  if ((_DWORD)result)
    return 1;
  return result;
}

void sub_100739E3C(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  char *v5;
  char *v6;
  void *Strong;
  id v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  _QWORD *v40;
  _QWORD *v41;
  char *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  objc_super v47;
  void **aBlock;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  _QWORD *v53;

  v6 = v5;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc]);
  if (!Strong)
    return;
  v46 = Strong;
  v12 = objc_msgSend(Strong, "commandController");
  if (!v12)
    goto LABEL_17;
  v45 = v12;
  if ((sub_100739D18(a1) & 1) == 0)
  {

    return;
  }
  if ((objc_msgSend(a1, "hasNativeText") & 1) == 0
    && !objc_msgSend(a1, "hasNativeTextStorages"))
  {
    if (objc_msgSend(a1, "hasImportableRichText"))
    {
      v33 = swift_allocObject(&unk_10127AE28, 56, 7);
      *(_BYTE *)(v33 + 16) = a5 & 1;
      *(_QWORD *)(v33 + 24) = v5;
      *(_QWORD *)(v33 + 32) = a3;
      *(_QWORD *)(v33 + 40) = a4;
      *(_QWORD *)(v33 + 48) = v45;
      v52 = sub_10073DA8C;
      v53 = (_QWORD *)v33;
      aBlock = _NSConcreteStackBlock;
      v49 = *(_QWORD *)"";
      v50 = sub_100725460;
      v51 = &unk_10127AE40;
      v34 = _Block_copy(&aBlock);
      v35 = v53;
      v36 = v6;
      v37 = a3;
      v38 = v45;
      v39 = objc_msgSend(a1, "loadImportedRichTextStringWithHandler:", v34, swift_release(v35).n128_f64[0]);
LABEL_14:
      v44 = v39;

      _Block_release(v34);
      return;
    }
    if (objc_msgSend(a1, "hasImportableText"))
    {
      v40 = (_QWORD *)swift_allocObject(&unk_10127ADD8, 48, 7);
      v40[2] = v5;
      v40[3] = a3;
      v40[4] = a4;
      v40[5] = v45;
      v52 = sub_10073DA4C;
      v53 = v40;
      aBlock = _NSConcreteStackBlock;
      v49 = *(_QWORD *)"";
      v50 = sub_100725B40;
      v51 = &unk_10127ADF0;
      v34 = _Block_copy(&aBlock);
      v41 = v53;
      v42 = v6;
      v43 = a3;
      v38 = v45;
      v39 = objc_msgSend(a1, "loadImportedTextStringWithHandler:", v34, swift_release(v41).n128_f64[0]);
      goto LABEL_14;
    }

LABEL_17:
    return;
  }
  v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editingCoordinator];
  if (*(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator))
  {
    sub_10066AAE4(0xD000000000000036, 0x8000000100FCCC60);
    v14 = *(char **)(*(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                   + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    v15 = (objc_class *)type metadata accessor for CRLPasteboardSourceContext();
    v16 = (char *)objc_allocWithZone(v15);
    *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform26CRLPasteboardSourceContext__store] = v14;
    v17 = *(void **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
    *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform26CRLPasteboardSourceContext__sourceContext] = v17;
    v47.receiver = v16;
    v47.super_class = v15;
    v18 = v14;
    v19 = v17;
    v20 = objc_msgSendSuper2(&v47, "init");
    v21 = *(void **)(*(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v21)
    {
      v22 = v20;
      v23 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
      v24 = swift_allocObject(&unk_10127AE78, 72, 7);
      *(_QWORD *)(v24 + 16) = v6;
      *(_QWORD *)(v24 + 24) = 0xD000000000000036;
      *(_QWORD *)(v24 + 32) = 0x8000000100FCCC60;
      *(_BYTE *)(v24 + 40) = a5 & 1;
      *(_QWORD *)(v24 + 48) = a3;
      *(_QWORD *)(v24 + 56) = a4;
      *(_QWORD *)(v24 + 64) = v45;
      v52 = sub_10073DAD8;
      v53 = (_QWORD *)v24;
      aBlock = _NSConcreteStackBlock;
      v49 = *(_QWORD *)"";
      v50 = sub_100725460;
      v51 = &unk_10127AE90;
      v25 = _Block_copy(&aBlock);
      v26 = v53;
      v27 = v21;
      v28 = v6;
      v29 = a3;
      v30 = v45;
      v31 = v23;
      v32 = objc_msgSend(a1, "loadTextStorageUsingBoardItemFactory:forTargetContext:targetStorage:loadHandler:", v31, v22, v27, v25, swift_release(v26).n128_f64[0]);

      _Block_release(v25);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_10073A2C0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = sub_1004B804C(&qword_1013EFDA8);
  v1 = swift_allocObject(v0, 112, 7);
  *(_QWORD *)&result = 10;
  *(_OWORD *)(v1 + 16) = xmmword_100F07C80;
  *(_QWORD *)(v1 + 32) = "insertText:";
  *(_QWORD *)(v1 + 40) = "insertNewline:";
  *(_QWORD *)(v1 + 48) = "insertTab:";
  *(_QWORD *)(v1 + 56) = "insertBacktab:";
  *(_QWORD *)(v1 + 64) = "moveLeft:";
  *(_QWORD *)(v1 + 72) = "moveRight:";
  *(_QWORD *)(v1 + 80) = "moveForward:";
  *(_QWORD *)(v1 + 88) = "moveBackward:";
  *(_QWORD *)(v1 + 96) = "deleteBackward:";
  *(_QWORD *)(v1 + 104) = "deleteForward:";
  return result;
}

uint64_t sub_10073A358()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;

  v0 = -[CRLWPEditorHelper editorKeyboardLanguage]_0();
  if (!v0)
    return -1;
  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSLocale), "characterDirectionForLanguage:", v0);

  result = 1;
  switch((unint64_t)v2)
  {
    case 1uLL:
      result = 0;
      break;
    case 2uLL:
      return result;
    case 3uLL:
      sub_100757E04(&_mh_execute_header, (uint64_t)"keyboardWritingDirection()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2344, "Vertical text is not supported.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyboardWritingDirection()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2344, (uint64_t)"Vertical text is not supported.", 31, 2u);
      return -1;
    case 4uLL:
      sub_100757E04(&_mh_execute_header, (uint64_t)"keyboardWritingDirection()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2347, "Vertical text is not supported.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyboardWritingDirection()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2347, (uint64_t)"Vertical text is not supported.", 31, 2u);
      return -1;
    default:
      sub_100757E04(&_mh_execute_header, (uint64_t)"keyboardWritingDirection()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2350, "Unknown keyboard writing direction.", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyboardWritingDirection()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2350, (uint64_t)"Unknown keyboard writing direction.", 35, 2u);
      return -1;
  }
  return result;
}

void sub_10073A59C(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  id v29;
  UIMenuElementSize v30;
  UIMenuElementSize v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char v44;
  double v45;
  id v46;
  Class v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  double v54;
  char *v55;
  id v56;
  NSString v57;
  NSString v58;
  char **v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  objc_class *v64;
  unint64_t v65;
  unint64_t v66;
  SEL *v67;
  uint64_t v68;
  id v69;
  NSString v70;
  NSString v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Class v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  Class v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  SEL *v86;
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  NSString v94;
  NSString v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  UIMenuElementSize v103;
  Swift::String v104;
  uint64_t v105;
  id v106;
  NSString v107;
  NSString v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSString v113;
  void *v114;
  id v115;
  SEL *v116;
  id v117;
  NSString v118;
  NSString v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSString v124;
  id v125;
  void *v126;
  id v127;
  NSString v128;
  NSString v129;
  id v130;
  uint64_t v131;
  void *v132;
  void *v133;
  NSString v134;
  objc_class *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  UIMenuElementSize v139;
  id v140;
  id v141;
  Swift::String v142;
  Class v143;
  uint64_t v144;
  UIMenuElementSize v145;
  objc_class *v146;
  Swift::String v147;
  UIMenu v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  SEL *v152;
  uint64_t v153;
  char **v154;
  unint64_t v155;
  id v156;
  NSString v157;
  NSString v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  UIMenuElementSize v166;
  Swift::String v167;
  uint64_t v168;
  void *v169;
  id v170;
  NSString v171;
  NSString v172;
  id v173;
  uint64_t v174;
  void *v175;
  void *v176;
  NSString v177;
  void *v178;
  objc_class *v179;
  SEL *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  UIMenuElementSize v188;
  Swift::String v189;
  id v190;
  NSString v191;
  NSString v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  NSString v197;
  id v198;
  id v199;
  NSString v200;
  NSString v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  NSString v206;
  id v207;
  unsigned __int8 *v208;
  uint64_t v209;
  uint64_t v210;
  Class v211;
  id v212;
  UIMenuElementSize v213;
  objc_class *v214;
  id v215;
  id v216;
  Swift::String v217;
  UIMenu v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  char **v222;
  uint64_t v223;
  Class v224;
  UIMenuElementSize v225;
  objc_class *v226;
  id v227;
  Swift::String v228;
  UIMenu v229;
  unint64_t v230;
  unint64_t v231;
  id v232;
  NSString v233;
  NSString v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  NSString v239;
  id v240;
  void *v241;
  uint64_t v242;
  uint64_t v243;
  UIMenuElementSize v244;
  Swift::String v245;
  UIMenu v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  id v250;
  id v251;
  NSString v252;
  NSString v253;
  id v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  NSString v258;
  id v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  __n128 v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  NSIndexSet *v271;
  void *v272;
  void *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  UIMenuElementSize v277;
  Swift::OpaquePointer v278;
  Swift::OpaquePointer v279;
  UIMenu v280;
  UIMenu v281;
  char *v282;
  uint64_t v283;
  objc_class *v284;
  uint64_t v285;
  id v286;
  uint64_t v287;
  char **v288;
  char *v289;
  SEL *v290;
  void (**v291)(_QWORD, _QWORD);
  Class isa;
  id v293;
  _OWORD v294[2];
  char **v295;
  unint64_t v296;
  __int128 v297;
  __int128 v298;
  UIImage_optional v299;
  UIImage_optional v300;
  UIImage_optional v301;
  UIImage_optional v302;
  UIImage_optional v303;
  UIImage_optional v304;
  UIImage_optional v305;
  UIImage_optional v306;
  UIImage_optional v307;

  v293 = a1;
  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (objc_class *)((char *)&v282 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v282 - v7;
  v9 = (_QWORD *)type metadata accessor for NSFastEnumerationIterator(0);
  v291 = (void (**)(_QWORD, _QWORD))*(v9 - 1);
  __chkstk_darwin(v9);
  v11 = (char *)&v282 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100736D9C();
  if (!v12)
    goto LABEL_12;
  v13 = (char *)objc_msgSend(v12, "selectedTextRange");
  if (!v13)
    goto LABEL_12;
  v14 = v13;
  sub_100736D9C();
  if (!v15 || (v16 = objc_msgSend(v15, "selectedTextRange")) == 0)
  {

LABEL_12:
    sub_100757E04(&_mh_execute_header, (uint64_t)"addContextualMenuElements(to:at:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 1059, "No text selection", 17, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addContextualMenuElements(to:at:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 1059, (uint64_t)"No text selection", 17, 2u);
    return;
  }
  v17 = v16;
  LODWORD(v287) = objc_msgSend(v16, "isEmpty");

  v18 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController], "selectionForEditor:", v1);
  if (v18)
  {
    v19 = v18;
    v20 = objc_opt_self(CRLWPSelection);
    v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
    if (v21)
    {
      v22 = objc_msgSend(v21, "type");

      if (v22 == (id)3)
      {
        v23 = (char *)objc_msgSend(v14, "start");
        v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        v26 = NSNotFound.getter(v25);
        v27 = (uint64_t *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        if (v24 == v26)
          v27 = (uint64_t *)&xmmword_100EEE418;
        v28 = *v27;
        v29 = v293;
        objc_msgSend(v293, "removeAllObjects");
        sub_100727FC8(v28);
        v31 = v30;
        sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
        v32._countAndFlagsBits = 0;
        v32._object = (void *)0xE000000000000000;
        v299.value.super.isa = 0;
        v299.is_nil = 0;
        isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v299, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v31, v278).super.super.isa;
        objc_msgSend(v29, "addObject:", isa);

        return;
      }
    }
    else
    {

    }
  }
  v286 = v9;
  v289 = v1;
  v284 = v5;
  v282 = v8;
  v283 = v3;
  v285 = v2;
  v290 = (SEL *)v14;
  v33 = NSArray.makeIterator()();
  v288 = 0;
  isa = (Class)CFSTR("CRLZOrderMenuIdentifier");
  while (1)
  {
    NSFastEnumerationIterator.next()(&v297, v33);
    if (!*((_QWORD *)&v298 + 1))
      break;
    sub_10050CB14(&v297, v294);
    v34 = sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v33 = swift_dynamicCast(&v296, v294, (char *)&type metadata for Any + 8, v34, 6);
    if ((v33 & 1) != 0)
    {
      v35 = (id)v296;
      v36 = objc_msgSend((id)v296, "identifier");
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(isa);
      if (v37 == v40 && v39 == v41)
      {

        swift_bridgeObjectRelease_n(v39, 2);
      }
      else
      {
        v43 = v41;
        v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v40, v41, 0);

        swift_bridgeObjectRelease(v39);
        *(_QWORD *)&v45 = swift_bridgeObjectRelease(v43).n128_u64[0];
        if ((v44 & 1) == 0)
          goto LABEL_25;
      }
      v46 = v293;
      objc_msgSend(v293, "indexOfObject:", v35, v45);
      v47 = Int._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v46, "removeObject:", v47);

LABEL_25:
      v48 = objc_msgSend(v35, "identifier", v45);
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      v14 = v50;
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLCutCopyPasteMenuIdentifier"));
      v53 = v51;
      if (v49 == v52 && v14 == v51)
      {

        swift_bridgeObjectRelease_n(v14, 2);
        goto LABEL_30;
      }
      v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v14, v52, v51, 0);

      swift_bridgeObjectRelease(v14);
      *(_QWORD *)&v54 = swift_bridgeObjectRelease(v53).n128_u64[0];
      if ((v2 & 1) != 0)
      {
LABEL_30:
        objc_msgSend(v35, "setPreferredElementSize:", 1, v54);
        v2 = (uint64_t)objc_msgSend(v293, "indexOfObject:", v35);

        v288 = (char **)(v2 + 1);
        if (__OFADD__(v2, 1))
        {
          __break(1u);
          break;
        }
      }
      else
      {

      }
    }
  }
  ((void (**)(char *, id))v291)[1](v11, v286);
  v296 = (unint64_t)_swiftEmptyArrayStorage;
  if ((_DWORD)v287)
  {
    sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
    v55 = (char *)objc_opt_self(NSBundle);
    v56 = objc_msgSend(v55, "mainBundle");
    v57 = String._bridgeToObjectiveC()();
    v58 = String._bridgeToObjectiveC()();
    v59 = &selRef_isLineSegment;
    v60 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v63 = v62;

    v297 = 0u;
    v298 = 0u;
    v64 = (objc_class *)(id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v61, v63, 0, 0, 0, 0, "selectMenuAction:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
    v66 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v65 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v67 = v290;
    if (v66 >= v65 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
    v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
    specialized Array._endMutation()(v68);
    v69 = objc_msgSend(v55, "mainBundle");
    v70 = String._bridgeToObjectiveC()();
    v71 = String._bridgeToObjectiveC()();
    v72 = (char *)objc_msgSend(v69, "localizedStringForKey:value:table:", v70, v71, 0);

    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
    v75 = v74;

    v297 = 0u;
    v298 = 0u;
    v76 = (Class)(id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v73, v75, 0, 0, 0, 0, "selectAllMenuAction:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76);
    v78 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v77 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v78 >= v77 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
    v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v76);
    specialized Array._endMutation()(v79);
    v80 = (char *)-[SEL start](v67, "start");
    v81 = *(Class *)&v80[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v83 = NSNotFound.getter(v82);
    v291 = (void (**)(_QWORD, _QWORD))v76;
    if (v81 == (Class)v83)
    {
      v84 = 0x7FFFFFFFFFFFFFFFLL;
      v85 = 0;
    }
    else
    {
      v84 = *(uint64_t *)((char *)v67 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
      v92 = *(unint64_t *)((char *)v67 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
      v85 = v92 - v84;
      if (__OFSUB__(v92, v84))
        goto LABEL_90;
    }
    v67 = (SEL *)&selRef_isLineSegment;
    if ((sub_100729E2C(v84, v85) & 1) == 0)
      goto LABEL_46;
    v93 = objc_msgSend(v55, "mainBundle");
    v94 = String._bridgeToObjectiveC()();
    v95 = String._bridgeToObjectiveC()();
    v96 = objc_msgSend(v93, "localizedStringForKey:value:table:", v94, v95, 0);

    v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
    v99 = v98;

    v297 = 0u;
    v298 = 0u;
    v100 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v97, v99, 0, 0, 0, 0, "removeHyperlink:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v101 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v102 = swift_allocObject(v101, 40, 7);
    *(_OWORD *)(v102 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v102 + 32) = v100;
    *(_QWORD *)&v297 = v102;
    specialized Array._endMutation()(v102);
    v103 = (uint64_t)v297;
    v81 = v100;
    v104._countAndFlagsBits = 0;
    v104._object = (void *)0xE000000000000000;
    v300.value.super.isa = 0;
    v300.is_nil = 0;
    v76 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v104, (Swift::String_optional)0, v300, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v103, v278).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76);
    v72 = *(char **)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v92 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v72 < v92 >> 1)
      goto LABEL_45;
    goto LABEL_91;
  }
  v86 = v290;
  v87 = (char *)-[SEL start](v290, "start");
  v88 = *(id *)&v87[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v88 == (id)NSNotFound.getter(v89))
  {
    v90 = 0x7FFFFFFFFFFFFFFFLL;
    v91 = 0;
    goto LABEL_50;
  }
  v90 = *(uint64_t *)((char *)v86 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  v155 = *(unint64_t *)((char *)v86 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
  v91 = v155 - v90;
  if (__OFSUB__(v155, v90))
  {
    __break(1u);
LABEL_93:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v155 > 1, v14 + 1, 1);
LABEL_52:
    v168 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v2);
    specialized Array._endMutation()(v168);

  }
  else
  {
LABEL_50:
    if ((sub_100729E2C(v90, v91) & 1) != 0)
    {
      sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
      v156 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v157 = String._bridgeToObjectiveC()();
      v158 = String._bridgeToObjectiveC()();
      v159 = objc_msgSend(v156, "localizedStringForKey:value:table:", v157, v158, 0);

      v160 = static String._unconditionallyBridgeFromObjectiveC(_:)(v159);
      v162 = v161;

      v297 = 0u;
      v298 = 0u;
      v163 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v160, v162, 0, 0, 0, 0, "removeHyperlink:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
      v164 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v165 = swift_allocObject(v164, 40, 7);
      *(_OWORD *)(v165 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v165 + 32) = v163;
      *(_QWORD *)&v297 = v165;
      specialized Array._endMutation()(v165);
      v166 = (uint64_t)v297;
      v88 = v163;
      v167._countAndFlagsBits = 0;
      v167._object = (void *)0xE000000000000000;
      v303.value.super.isa = 0;
      v303.is_nil = 0;
      v2 = (uint64_t)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v167, (Swift::String_optional)0, v303, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v166, v278).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v2);
      v14 = *(char **)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v155 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v14 < v155 >> 1)
        goto LABEL_52;
      goto LABEL_93;
    }
  }
  v169 = (void *)objc_opt_self(NSBundle);
  v170 = objc_msgSend(v169, "mainBundle");
  v171 = String._bridgeToObjectiveC()();
  v172 = String._bridgeToObjectiveC()();
  v173 = objc_msgSend(v170, "localizedStringForKey:value:table:", v171, v172, 0);

  v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(v173);
  v176 = v175;

  v177 = String._bridgeToObjectiveC()();
  v178 = (void *)objc_opt_self(UIImage);
  v179 = (objc_class *)objc_msgSend(v178, "systemImageNamed:", v177);

  v180 = v290;
  v181 = (char *)-[SEL start](v290, "start");
  v182 = *(_QWORD *)&v181[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v184 = NSNotFound.getter(v183);
  v185 = (uint64_t *)((char *)v180 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  if (v182 == v184)
    v185 = (uint64_t *)&xmmword_100EEE418;
  v186 = *v185;
  v187 = sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  sub_100727FC8(v186);
  v277 = v188;
  v189._countAndFlagsBits = v174;
  v189._object = v176;
  v304.value.super.isa = v179;
  v304.is_nil = 0;
  v287 = v187;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v189, (Swift::String_optional)0, v304, 0, 0xFFFFFFFFFFFFFFFFLL, v277, v278).super.super.isa;
  sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
  v190 = objc_msgSend(v169, "mainBundle");
  v191 = String._bridgeToObjectiveC()();
  v192 = String._bridgeToObjectiveC()();
  v193 = objc_msgSend(v190, "localizedStringForKey:value:table:", v191, v192, 0);

  v194 = static String._unconditionallyBridgeFromObjectiveC(_:)(v193);
  v196 = v195;

  v154 = &selRef_isLineSegment;
  v197 = String._bridgeToObjectiveC()();
  v198 = objc_msgSend(v178, "systemImageNamed:", v197);

  v297 = 0u;
  v298 = 0u;
  v291 = (void (**)(_QWORD, _QWORD))UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v194, v196, 0, 0, v198, 0, "lookUp:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v286 = v169;
  v199 = objc_msgSend(v169, "mainBundle");
  v200 = String._bridgeToObjectiveC()();
  v201 = String._bridgeToObjectiveC()();
  v202 = objc_msgSend(v199, "localizedStringForKey:value:table:", v200, v201, 0);

  v203 = static String._unconditionallyBridgeFromObjectiveC(_:)(v202);
  v205 = v204;

  v206 = String._bridgeToObjectiveC()();
  v207 = objc_msgSend(v178, "crl_internalSystemImageNamed:", v206);

  v297 = 0u;
  v298 = 0u;
  v140 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v203, v205, 0, 0, v207, 0, "translate:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  if (qword_1013DD618 != -1)
    swift_once(&qword_1013DD618, sub_1009A4410);
  v208 = (unsigned __int8 *)(qword_1013FF120
                           + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed, v294, 0, 0);
  LODWORD(v208) = *v208;
  v209 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  if ((_DWORD)v208 == 1)
  {
    v210 = swift_allocObject(v209, 56, 7);
    *(_OWORD *)(v210 + 16) = xmmword_100EF7300;
    v212 = v291;
    v211 = isa;
    *(_QWORD *)(v210 + 32) = isa;
    *(_QWORD *)(v210 + 40) = v212;
    *(_QWORD *)(v210 + 48) = v140;
    *(_QWORD *)&v297 = v210;
    specialized Array._endMutation()(v210);
    v213 = (uint64_t)v297;
    v214 = v211;
    v215 = v212;
    v216 = v140;
    v217._countAndFlagsBits = 0;
    v217._object = (void *)0xE000000000000000;
    v305.value.super.isa = 0;
    v305.is_nil = 0;
    v218.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v217, (Swift::String_optional)0, v305, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v213, (Swift::OpaquePointer)v280.super.super.isa).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v218.super.super.isa);
    v220 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v219 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v220 >= v219 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v219 > 1, v220 + 1, 1);
    v221 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v220, v218.super.super.isa);
    v222 = &selRef_isLineSegment;
  }
  else
  {
    v223 = swift_allocObject(v209, 48, 7);
    *(_OWORD *)(v223 + 16) = xmmword_100EF5560;
    v224 = isa;
    *(_QWORD *)(v223 + 32) = isa;
    *(_QWORD *)(v223 + 40) = v140;
    *(_QWORD *)&v297 = v223;
    specialized Array._endMutation()(v223);
    v225 = (uint64_t)v297;
    v226 = v224;
    v227 = v140;
    v228._countAndFlagsBits = 0;
    v228._object = (void *)0xE000000000000000;
    v306.value.super.isa = 0;
    v306.is_nil = 0;
    v229.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v228, (Swift::String_optional)0, v306, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v225, (Swift::OpaquePointer)v280.super.super.isa).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v229.super.super.isa);
    v231 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v230 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v222 = &selRef_isLineSegment;
    if (v231 >= v230 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v230 > 1, v231 + 1, 1);
    v221 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v231, v229.super.super.isa);
  }
  specialized Array._endMutation()(v221);
  v232 = objc_msgSend(v286, "mainBundle");
  v233 = String._bridgeToObjectiveC()();
  v234 = String._bridgeToObjectiveC()();
  v235 = objc_msgSend(v232, v222[388], v233, v234, 0);

  v236 = static String._unconditionallyBridgeFromObjectiveC(_:)(v235);
  v238 = v237;

  v239 = String._bridgeToObjectiveC()();
  v240 = objc_msgSend(v178, "systemImageNamed:", v239);

  v297 = 0u;
  v298 = 0u;
  v241 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v236, v238, 0, 0, v240, 0, "insertTab:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v242 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v243 = swift_allocObject(v242, 40, 7);
  *(_OWORD *)(v243 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v243 + 32) = v241;
  *(_QWORD *)&v297 = v243;
  specialized Array._endMutation()(v243);
  v244 = (uint64_t)v297;
  v141 = v241;
  v245._countAndFlagsBits = 0;
  v245._object = (void *)0xE000000000000000;
  v307.value.super.isa = 0;
  v307.is_nil = 0;
  v246.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v245, (Swift::String_optional)0, v307, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v244, (Swift::OpaquePointer)v281.super.super.isa).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v246.super.super.isa);
  v248 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v247 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v248 >= v247 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v247 > 1, v248 + 1, 1);
  v249 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v248, v246.super.super.isa);
  specialized Array._endMutation()(v249);
  v55 = v289;
  v152 = v290;
  v64 = v284;
  v153 = v285;
  while (2)
  {

    v250 = -[SEL start](v152, "start");
    sub_10072DD84((uint64_t)v250);

    sub_1004B8930(0, &qword_1013EFD98, UICommand_ptr);
    v251 = objc_msgSend((id)objc_opt_self(NSBundle), v154[428]);
    v252 = String._bridgeToObjectiveC()();
    v253 = String._bridgeToObjectiveC()();
    v254 = objc_msgSend(v251, "localizedStringForKey:value:table:", v252, v253, 0);

    v255 = static String._unconditionallyBridgeFromObjectiveC(_:)(v254);
    v257 = v256;

    v258 = String._bridgeToObjectiveC()();
    v259 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v258);

    v297 = 0u;
    v298 = 0u;
    v81 = (Class)(id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v255, v257, 0, 0, v259, 0, "toggleBaseWritingDirection:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
    v76 = *(Class *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v260 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v76 >= v260 >> 1)
      goto LABEL_89;
    while (1)
    {
      v261 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v81);
      specialized Array._endMutation()(v261);

      sub_1007279B0();
      v263 = v262;
      if ((unint64_t)v262 >> 62)
      {
        if (v262 < 0)
          v274 = v262;
        else
          v274 = v262 & 0xFFFFFFFFFFFFFF8;
        v275 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
        v265 = _bridgeCocoaArray<A>(_:)(v274, v275);
      }
      else
      {
        v264 = swift_bridgeObjectRetain(v262);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v264);
        sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
        v265 = v263;
      }
      v59 = v288;
      swift_bridgeObjectRelease(v263);
      sub_100620D70(v265);
      v266 = v296;
      swift_bridgeObjectRetain(v296);
      v268 = sub_100521070(v267);
      swift_bridgeObjectRelease(v266);
      v81 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v268);
      if ((unint64_t)v266 >> 62)
      {
        if (v266 < 0)
          v276 = v266;
        else
          v276 = v266 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v266);
        v76 = (Class)_CocoaArrayWrapper.endIndex.getter(v276);
        swift_bridgeObjectRelease(v266);
      }
      else
      {
        v76 = *(Class *)((v266 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v266);
      v67 = (SEL *)((char *)v76 + (_QWORD)v59);
      if (__OFADD__(v59, v76))
      {
        __break(1u);
        goto LABEL_88;
      }
      if ((uint64_t)v67 >= (uint64_t)v59)
        break;
LABEL_88:
      __break(1u);
LABEL_89:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v260 > 1, (char *)v76 + 1, 1);
    }
    v72 = (char *)sub_1004B7878((unint64_t *)&qword_1013EFDE0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of SetAlgebra.init()(v153, v72);
    if (v59 == (char **)v67)
      goto LABEL_78;
    if ((uint64_t)v59 >= (uint64_t)v67)
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v72 + 1, 1);
LABEL_45:
      v105 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v76);
      specialized Array._endMutation()(v105);

LABEL_46:
      isa = v64;
      v106 = objc_msgSend(v55, v67[428]);
      v107 = String._bridgeToObjectiveC()();
      v108 = String._bridgeToObjectiveC()();
      v109 = objc_msgSend(v106, v59[388], v107, v108, 0);

      v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
      v112 = v111;

      v113 = String._bridgeToObjectiveC()();
      v114 = (void *)objc_opt_self(UIImage);
      v286 = v114;
      v115 = objc_msgSend(v114, "systemImageNamed:", v113);

      v297 = 0u;
      v298 = 0u;
      v287 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v110, v112, 0, 0, v115, 0, "insertTab:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      v116 = v67;
      v117 = objc_msgSend(v55, v67[428]);
      v118 = String._bridgeToObjectiveC()();
      v119 = String._bridgeToObjectiveC()();
      v120 = objc_msgSend(v117, v59[388], v118, v119, 0);

      v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
      v123 = v122;

      v124 = String._bridgeToObjectiveC()();
      v125 = objc_msgSend(v114, "systemImageNamed:", v124);

      v297 = 0u;
      v298 = 0u;
      v126 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v121, v123, 0, 0, v125, 0, "insertLineBreak:", &v297, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
      v127 = objc_msgSend(v55, v116[428]);
      v128 = String._bridgeToObjectiveC()();
      v129 = String._bridgeToObjectiveC()();
      v130 = objc_msgSend(v127, v59[388], v128, v129, 0);

      v131 = static String._unconditionallyBridgeFromObjectiveC(_:)(v130);
      v133 = v132;

      v134 = String._bridgeToObjectiveC()();
      v135 = (objc_class *)objc_msgSend(v286, "systemImageNamed:", v134);

      v136 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v137 = swift_allocObject(v136, 48, 7);
      *(_OWORD *)(v137 + 16) = xmmword_100EF5560;
      v138 = (void *)v287;
      *(_QWORD *)(v137 + 32) = v287;
      *(_QWORD *)(v137 + 40) = v126;
      *(_QWORD *)&v297 = v137;
      specialized Array._endMutation()(v137);
      v139 = (uint64_t)v297;
      v140 = v138;
      v141 = v126;
      v142._countAndFlagsBits = v131;
      v142._object = v133;
      v301.value.super.isa = v135;
      v301.is_nil = 0;
      v143 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v142, (Swift::String_optional)0, v301, 0, 0xFFFFFFFFFFFFFFFFLL, v139, v278).super.super.isa;
      v144 = swift_allocObject(v136, 40, 7);
      *(_OWORD *)(v144 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v144 + 32) = v143;
      *(_QWORD *)&v297 = v144;
      specialized Array._endMutation()(v144);
      v145 = (uint64_t)v297;
      v146 = v143;
      v147._countAndFlagsBits = 0;
      v147._object = (void *)0xE000000000000000;
      v302.value.super.isa = 0;
      v302.is_nil = 0;
      v148.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v147, (Swift::String_optional)0, v302, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v145, v279).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v148.super.super.isa);
      v150 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v149 = *(_QWORD *)((v296 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v150 >= v149 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v149 > 1, v150 + 1, 1);
      v151 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v150, v148.super.super.isa);
      specialized Array._endMutation()(v151);

      v55 = v289;
      v152 = v290;
      v64 = v284;
      v153 = v285;
      v154 = &selRef_isLineSegment;
      continue;
    }
    break;
  }
  do
  {
    v295 = v59;
    dispatch thunk of SetAlgebra.insert(_:)(&v297, &v295, v153, v72);
    v59 = (char **)((char *)v59 + 1);
    v76 = (Class)((char *)v76 - 1);
  }
  while (v76);
LABEL_78:
  v269 = v283;
  v270 = v282;
  (*(void (**)(char *, objc_class *, uint64_t))(v283 + 32))(v282, v64, v153);
  IndexSet._bridgeToObjectiveC()(v271);
  v273 = v272;
  (*(void (**)(char *, uint64_t))(v269 + 8))(v270, v153);
  objc_msgSend(v293, "insertObjects:atIndexes:", v81, v273);

}

void sub_10073C424()
{
  uint64_t v0;
  void *v1;
  id v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  v3 = (char *)sub_100A1EDA0(v2);

  v4 = (char *)objc_msgSend(v3, "start");
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v5 == NSNotFound.getter(v6))
  {

    return;
  }
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

  if (__OFSUB__(v8, v7))
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
}

uint64_t sub_10073C4F4()
{
  uint64_t v0;
  uint64_t v1;
  NSString *v2;
  NSString *v3;
  NSString *v4;
  NSString *v5;
  NSString *v6;

  v0 = sub_1004B804C(&qword_1013EFD38);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100F05060;
  *(_QWORD *)(v1 + 32) = NSBackgroundColorAttributeName;
  *(_QWORD *)(v1 + 40) = NSUnderlineStyleAttributeName;
  *(_QWORD *)(v1 + 48) = NSUnderlineColorAttributeName;
  *(_QWORD *)(v1 + 56) = NSForegroundColorAttributeName;
  *(_QWORD *)(v1 + 64) = NSFontAttributeName;
  v2 = NSBackgroundColorAttributeName;
  v3 = NSUnderlineStyleAttributeName;
  v4 = NSUnderlineColorAttributeName;
  v5 = NSForegroundColorAttributeName;
  v6 = NSFontAttributeName;
  return v1;
}

void sub_10073C5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t KeyPath;
  __int16 v33;
  __int16 v34;
  BOOL v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *Strong;
  id v41;
  void *v42;
  id v43;
  char *v44;
  void *v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  char **v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  objc_class *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  void *v97;
  uint64_t v98;
  id v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  objc_class *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  void *v139;
  uint64_t v140;
  id v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  objc_class *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  void *v158;
  id v159;
  _QWORD *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  id v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  objc_class *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  char *v193;
  uint64_t v194;
  id v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  char *v200;
  objc_super v201;
  objc_super v202;
  objc_super v203;
  objc_super v204;
  uint64_t v205;
  uint64_t v206;

  v5 = sub_1004B804C(&qword_1013F3D40);
  __chkstk_darwin(v5);
  v7 = (char *)&v190 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v190 - v9;
  __chkstk_darwin(v11);
  v199 = (char *)&v190 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v190 - v14;
  __chkstk_darwin(v16);
  v200 = (char *)&v190 - v17;
  sub_100736D9C();
  if (!v18 || (v19 = objc_msgSend(v18, "selectedTextRange")) == 0)
  {
    v84 = *(void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v84)
    {
      v85 = v84;
      v200 = sub_10060F348(v85);

      sub_100729F3C(v200);
      return;
    }
    goto LABEL_53;
  }
  v191 = v7;
  v192 = v10;
  v20 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v21 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v21)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v22 = v19;
  v23 = v21;
  v196 = sub_10060F348(v23);

  v24 = *(void **)(*(_QWORD *)(a1 + v20) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v24)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v193 = v15;
  v25 = v24;
  v195 = v22;
  v26 = (char *)objc_msgSend(v22, "start");
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v28 = objc_msgSend(v25, "paragraphIndexAtCharIndex:", v27);
  v29 = *(void **)(*(_QWORD *)(a1 + v20) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v29)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v30 = (char *)objc_msgSend(v29, "rangeForParagraphAt:", v28);
  v31 = (uint64_t)v28 - 1;
  if (__OFSUB__(v28, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  v194 = v20;
  v198 = v30;
  KeyPath = swift_getKeyPath(&unk_100F07E18);
  sub_10072E744(KeyPath);
  v34 = v33;
  swift_release(KeyPath);
  if ((_BYTE)v34)
    v35 = (v34 & 0xFF00) == 512;
  else
    v35 = 1;
  v36 = a1;
  v37 = !v35;
  v197 = v36;
  sub_100721108();
  v39 = v38;
  if (v37 == 1)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v197 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    v41 = objc_msgSend(Strong, "commandController");

    if (v41)
    {
      sub_1006A9664(0);

    }
  }
  v42 = *(void **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v42)
    goto LABEL_57;
  v43 = v42;
  v44 = sub_10060F348(v43);

  sub_100729F3C(v44);
  if (!v37)
  {

    return;
  }
  v45 = *(void **)(*(_QWORD *)(v197 + v194) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v45)
  {
LABEL_58:
    __break(1u);
    return;
  }
  v46 = objc_msgSend(v45, "paragraphLevelAtParIndex:", v31 & ~(v31 >> 63));
  v47 = v195;
  v48 = (char *)objc_msgSend(v195, "start");
  v49 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v50 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
  if (!v49)
  {
    v54 = v200;
    *(_QWORD *)v200 = &_swiftEmptySetSingleton;
    v86 = sub_100559A64();
    CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v86);
    v87 = swift_getKeyPath(&unk_100F07E18);
    sub_100AD8690(&v205, 0x6C7974537473696CLL, 0xE900000000000065);
    swift_bridgeObjectRelease(v206);
    __chkstk_darwin(v88);
    *(&v190 - 4) = (uint64_t)&type metadata for CRLWPParagraphScope;
    *(&v190 - 3) = (uint64_t)&type metadata for CRLWPListStyleTypeAttribute;
    *(&v190 - 2) = sub_100739274();
    *(&v190 - 1) = v87;
    v89 = swift_getKeyPath(&unk_100F07DC0);
    v205 = 0;
    LOBYTE(v206) = 0;
    v90 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v91 = sub_1007392B8();
    CRAttributedString.Attributes.subscript.setter(&v205, v89, v90, v91);
    v92 = swift_getKeyPath(&unk_100F07DA0);
    sub_100AD8690(&v205, 0x7061726761726170, 0xEE006C6576654C68);
    swift_bridgeObjectRelease(v206);
    __chkstk_darwin(v93);
    *(&v190 - 4) = (uint64_t)&type metadata for CRLWPParagraphScope;
    *(&v190 - 3) = (uint64_t)&type metadata for CRLWPParagraphLevelAttribute;
    *(&v190 - 2) = sub_100737064();
    *(&v190 - 1) = v92;
    v94 = v197;
    v95 = swift_getKeyPath(&unk_100F07DC0);
    v205 = 0;
    LOBYTE(v206) = 0;
    v96 = sub_1007370A8();
    CRAttributedString.Attributes.subscript.setter(&v205, v95, v90, v96);
    v97 = *(void **)(v94 + v194);
    v98 = *(_QWORD *)&v196[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v99 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
    v100 = v97;
    v101 = (char *)objc_msgSend(v99, "init:caretAffinity:", v98, 0);
    NSNotFound.getter(v101);
    v102 = *(_QWORD *)&v101[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    v103 = *(_QWORD *)&v101[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v104 = (objc_class *)type metadata accessor for CRLTextRange();
    v105 = (char *)objc_allocWithZone(v104);
    v106 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v105[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v105[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v107 = &v105[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v107 = v102;
    *((_QWORD *)v107 + 1) = v102;
    *(_QWORD *)&v105[v106] = v103;
    v201.receiver = v105;
    v201.super_class = v104;
    v108 = (char *)objc_msgSendSuper2(&v201, "init");

    v109 = *(_QWORD *)&v108[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v110 = *(_QWORD *)&v108[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    v111 = (uint64_t)v193;
    sub_1004CB7BC((uint64_t)v54, (uint64_t)v193, &qword_1013F3D40);
    v112 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
    v113 = v110;
    v50 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
    v114 = v111;
    v80 = v94;
    v81 = (_BYTE *)sub_100738804(v100, v109, v113, v114);

    v82 = (void *)swift_unknownObjectWeakLoadStrong(v94 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    v83 = objc_msgSend(v82, "commandController");
    goto LABEL_27;
  }
  v51 = v39;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v52 = v196;
  if ((static NSObject.== infix(_:_:)(v196, v198) & 1) != 0)
  {
    v53 = v52;
    v54 = v199;
    *(_QWORD *)v199 = &_swiftEmptySetSingleton;
    v55 = sub_100559A64();
    CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v55);
    v56 = swift_getKeyPath(&unk_100F07DA0);
    sub_100AD8690(&v205, 0x7061726761726170, 0xEE006C6576654C68);
    swift_bridgeObjectRelease(v206);
    __chkstk_darwin(v57);
    *(&v190 - 4) = (uint64_t)&type metadata for CRLWPParagraphScope;
    *(&v190 - 3) = (uint64_t)&type metadata for CRLWPParagraphLevelAttribute;
    *(&v190 - 2) = sub_100737064();
    *(&v190 - 1) = v56;
    v58 = swift_getKeyPath(&unk_100F07DC0);
    v205 = v51;
    LOBYTE(v206) = 0;
    v59 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v60 = sub_1007370A8();
    CRAttributedString.Attributes.subscript.setter(&v205, v58, v59, v60);
    v61 = v197;
    v62 = *(void **)(v197 + v194);
    v63 = *(_QWORD *)&v53[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v64 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
    v65 = v62;
    v66 = (char *)objc_msgSend(v64, "init:caretAffinity:", v63, 0);
    NSNotFound.getter(v66);
    v67 = *(_QWORD *)&v66[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    v68 = *(_QWORD *)&v66[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v69 = (objc_class *)type metadata accessor for CRLTextRange();
    v70 = (char *)objc_allocWithZone(v69);
    v71 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v72 = &v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v72 = v67;
    *((_QWORD *)v72 + 1) = v67;
    *(_QWORD *)&v70[v71] = v68;
    v202.receiver = v70;
    v202.super_class = v69;
    v73 = (char *)objc_msgSendSuper2(&v202, "init");

    v74 = *(_QWORD *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v75 = *(_QWORD *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    v76 = (uint64_t)v193;
    sub_1004CB7BC((uint64_t)v54, (uint64_t)v193, &qword_1013F3D40);
    v77 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
    v78 = v75;
    v50 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
    v79 = v76;
    v80 = v61;
    v81 = (_BYTE *)sub_100738804(v65, v74, v78, v79);

    v82 = (void *)swift_unknownObjectWeakLoadStrong(v61 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    v83 = objc_msgSend(v82, "commandController");
LABEL_27:
    v115 = v83;

    if (v115)
    {
      sub_1006A5F54(v81, 0, 0, 4, 0);

      sub_1004CB800((uint64_t)v54, &qword_1013F3D40);
    }
    else
    {
      sub_1004CB800((uint64_t)v54, &qword_1013F3D40);

    }
    v47 = v195;
    v52 = v196;
    goto LABEL_34;
  }
  v116 = v198;
  if (v46 != (id)v51)
  {
    v117 = (char *)objc_msgSend(v198, "start");
    v118 = *(_QWORD *)&v117[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v118 == NSNotFound.getter(v119))
    {
      v120 = 0;
      v116 = v198;
    }
    else
    {
      v116 = v198;
      v124 = *(_QWORD *)&v198[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v123 = *(_QWORD *)&v198[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      v125 = __OFSUB__(v123, v124);
      v120 = v123 - v124;
      if (v125)
      {
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
    }
    if (!v120)
    {
      v160 = v191;
      *v191 = &_swiftEmptySetSingleton;
      v161 = (uint64_t)v160;
      v162 = sub_100559A64();
      CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v162);
      v163 = swift_getKeyPath(&unk_100F07DA0);
      sub_100AD8690(&v205, 0x7061726761726170, 0xEE006C6576654C68);
      swift_bridgeObjectRelease(v206);
      __chkstk_darwin(v164);
      *(&v190 - 4) = (uint64_t)&type metadata for CRLWPParagraphScope;
      *(&v190 - 3) = (uint64_t)&type metadata for CRLWPParagraphLevelAttribute;
      *(&v190 - 2) = sub_100737064();
      *(&v190 - 1) = v163;
      v165 = swift_getKeyPath(&unk_100F07DC0);
      v205 = (uint64_t)v46;
      LOBYTE(v206) = 0;
      v166 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
      v167 = sub_1007370A8();
      CRAttributedString.Attributes.subscript.setter(&v205, v165, v166, v167);
      v168 = v197;
      v169 = *(void **)(v197 + v194);
      v170 = *(_QWORD *)&v52[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v171 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
      v172 = v169;
      v173 = (char *)objc_msgSend(v171, "init:caretAffinity:", v170, 0);
      NSNotFound.getter(v173);
      v174 = *(_QWORD *)&v173[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
      v175 = *(_QWORD *)&v173[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
      v176 = (objc_class *)type metadata accessor for CRLTextRange();
      v177 = (char *)objc_allocWithZone(v176);
      v178 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
      *(_QWORD *)&v177[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
      *(_QWORD *)&v177[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
      v179 = &v177[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      *(_QWORD *)v179 = v174;
      *((_QWORD *)v179 + 1) = v174;
      *(_QWORD *)&v177[v178] = v175;
      v203.receiver = v177;
      v203.super_class = v176;
      v180 = (char *)objc_msgSendSuper2(&v203, "init");

      v181 = *(_QWORD *)&v180[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v182 = *(_QWORD *)&v180[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      v183 = (uint64_t)v193;
      sub_1004CB7BC(v161, (uint64_t)v193, &qword_1013F3D40);
      v184 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
      v185 = v182;
      v50 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
      v186 = v183;
      v80 = v168;
      v157 = (_BYTE *)sub_100738804(v172, v181, v185, v186);

      v187 = (void *)swift_unknownObjectWeakLoadStrong(v168 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      v188 = objc_msgSend(v187, "commandController");

      if (v188)
      {
        sub_1006A5F54(v157, 0, 0, 4, 0);

        sub_1004CB800(v161, &qword_1013F3D40);
        goto LABEL_34;
      }
      v189 = v161;
      goto LABEL_49;
    }
  }
  v126 = (char *)objc_msgSend(v116, "start");
  v127 = *(_QWORD *)&v126[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v127 == NSNotFound.getter(v128))
  {
    v129 = 0;
    v80 = v197;
    goto LABEL_42;
  }
  v80 = v197;
  v131 = *(_QWORD *)&v198[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v130 = *(_QWORD *)&v198[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v125 = __OFSUB__(v130, v131);
  v129 = v130 - v131;
  if (v125)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_42:
  if (!v129)
  {
    v132 = (uint64_t)v192;
    *v192 = &_swiftEmptySetSingleton;
    v133 = sub_100559A64();
    CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v133);
    v134 = swift_getKeyPath(&unk_100F07DA0);
    sub_100AD8690(&v205, 0x7061726761726170, 0xEE006C6576654C68);
    swift_bridgeObjectRelease(v206);
    __chkstk_darwin(v135);
    *(&v190 - 4) = (uint64_t)&type metadata for CRLWPParagraphScope;
    *(&v190 - 3) = (uint64_t)&type metadata for CRLWPParagraphLevelAttribute;
    *(&v190 - 2) = sub_100737064();
    *(&v190 - 1) = v134;
    v136 = swift_getKeyPath(&unk_100F07DC0);
    v205 = v51;
    LOBYTE(v206) = 0;
    v137 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v138 = sub_1007370A8();
    CRAttributedString.Attributes.subscript.setter(&v205, v136, v137, v138);
    v139 = *(void **)(v197 + v194);
    v140 = *(_QWORD *)&v52[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v141 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
    v142 = v139;
    v143 = (char *)objc_msgSend(v141, "init:caretAffinity:", v140, 0);
    NSNotFound.getter(v143);
    v144 = *(_QWORD *)&v143[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    v145 = *(_QWORD *)&v143[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v146 = (objc_class *)type metadata accessor for CRLTextRange();
    v147 = (char *)objc_allocWithZone(v146);
    v148 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v147[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v147[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v149 = &v147[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v149 = v144;
    *((_QWORD *)v149 + 1) = v144;
    *(_QWORD *)&v147[v148] = v145;
    v204.receiver = v147;
    v204.super_class = v146;
    v150 = (char *)objc_msgSendSuper2(&v204, "init");

    v151 = *(_QWORD *)&v150[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v152 = *(_QWORD *)&v150[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    v153 = (uint64_t)v193;
    sub_1004CB7BC(v132, (uint64_t)v193, &qword_1013F3D40);
    v154 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
    v155 = v152;
    v50 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
    v156 = v153;
    v80 = v197;
    v157 = (_BYTE *)sub_100738804(v142, v151, v155, v156);

    v158 = (void *)swift_unknownObjectWeakLoadStrong(v80 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    v159 = objc_msgSend(v158, "commandController");

    if (v159)
    {
      sub_1006A5F54(v157, 0, 0, 4, 0);

      sub_1004CB800(v132, &qword_1013F3D40);
      goto LABEL_34;
    }
    v189 = v132;
LABEL_49:
    sub_1004CB800(v189, &qword_1013F3D40);

  }
LABEL_34:
  v121 = (void *)swift_unknownObjectWeakLoadStrong(v80 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  v122 = objc_msgSend(v121, v50[427]);

  if (v122)
  {
    sub_1006A984C(0);

  }
}

uint64_t sub_10073D5C4()
{
  char v0;
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  _QWORD v4[5];

  v4[3] = &type metadata for CRLFeatureFlags;
  v4[4] = sub_1004DB6DC();
  LOBYTE(v4[0]) = 15;
  v0 = isFeatureEnabled(_:)(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
  v1 = sub_1004B804C((uint64_t *)&unk_1013EFD28);
  if ((v0 & 1) != 0)
  {
    result = swift_allocObject(v1, 192, 7);
    *(_QWORD *)(result + 56) = &_s23InsertSmartListBehaviorVN;
    *(_QWORD *)(result + 64) = &off_10126E828;
    *(_QWORD *)(result + 96) = &_s23ExtendSmartListBehaviorVN;
    *(_QWORD *)(result + 104) = &off_10126E810;
    *(_QWORD *)(result + 136) = &_s23RemoveSmartListBehaviorVN;
    *(_QWORD *)(result + 144) = &off_10126E7F8;
    *(_QWORD *)(result + 176) = &_s30IncreaseParagraphLevelBehaviorVN;
    v3 = (_QWORD *)(result + 184);
    *(_OWORD *)(result + 16) = xmmword_100EF5E30;
  }
  else
  {
    result = swift_allocObject(v1, 72, 7);
    *(_OWORD *)(result + 16) = xmmword_100EF5E40;
    *(_QWORD *)(result + 56) = &_s30IncreaseParagraphLevelBehaviorVN;
    v3 = (_QWORD *)(result + 64);
  }
  *v3 = &off_10126E840;
  return result;
}

unint64_t sub_10073D6C0()
{
  unint64_t result;

  result = qword_1013F3D50;
  if (!qword_1013F3D50)
  {
    result = swift_getWitnessTable(&unk_100F0D95C, &type metadata for CRLWPWritingDirectionAttribute);
    atomic_store(result, (unint64_t *)&qword_1013F3D50);
  }
  return result;
}

unint64_t sub_10073D704()
{
  unint64_t result;

  result = qword_1013EFD10;
  if (!qword_1013EFD10)
  {
    result = swift_getWitnessTable(&unk_100F0D914, &type metadata for CRLWPWritingDirectionAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFD10);
  }
  return result;
}

uint64_t sub_10073D74C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EFD54);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_10072EDBC(a1, v4, v5, v6);
}

unint64_t sub_10073D7B8()
{
  unint64_t result;

  result = qword_1013F3B70;
  if (!qword_1013F3B70)
  {
    result = swift_getWitnessTable(&unk_100F0D888, &type metadata for CRLWPParagraphAlignmentAttribute);
    atomic_store(result, (unint64_t *)&qword_1013F3B70);
  }
  return result;
}

uint64_t sub_10073D7FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10073D820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_10073D84C()
{
  uint64_t v0;

  return sub_10072C59C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10073D854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10073D864(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_10073D86C()
{
  unint64_t result;

  result = qword_1013EFD70;
  if (!qword_1013EFD70)
  {
    result = swift_getWitnessTable(&unk_100F0C20C, &type metadata for CRLWPTextPresetData);
    atomic_store(result, (unint64_t *)&qword_1013EFD70);
  }
  return result;
}

uint64_t sub_10073D8B0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_1004C4230(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1 & 1);
  if (*(_QWORD *)(v0 + 176))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
  return swift_deallocObject(v0, 264, 7);
}

void sub_10073D91C(void *a1)
{
  uint64_t v1;

  sub_1007293FC(a1, v1);
}

uint64_t sub_10073D924()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10073D960(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013EFD84);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1007362C0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10073D9E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10073DA0C()
{
  uint64_t v0;

  sub_100727668(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10073DA18()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10073DA4C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_10072589C(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_10073DA58()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_10073DA8C(void *a1, char a2)
{
  uint64_t v2;

  sub_100725464(a1, a2, *(_BYTE *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_10073DA9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10073DAD8(void *a1, char a2)
{
  uint64_t v2;

  sub_100724F48(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_10073DB0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 88, 7);
}

void sub_10073DB50()
{
  uint64_t v0;

  sub_10072509C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40), *(_BYTE *)(v0 + 48), *(char **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_10073DB88()
{
  id *v0;

  return swift_deallocObject(v0, 72, 7);
}

void sub_10073DBC4()
{
  uint64_t v0;

  sub_1007255B4(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10073DBDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10073DC18()
{
  uint64_t v0;

  sub_1007259DC(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10073DC30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10073DC54(void *a1)
{
  uint64_t v1;

  return sub_100723358(a1, *(id *)(v1 + 16));
}

unint64_t sub_10073DC5C()
{
  unint64_t result;

  result = qword_1013F3860;
  if (!qword_1013F3860)
  {
    result = swift_getWitnessTable(&unk_100F0D314, &type metadata for CRLWPStrikethroughAttribute);
    atomic_store(result, (unint64_t *)&qword_1013F3860);
  }
  return result;
}

unint64_t sub_10073DCA0()
{
  unint64_t result;

  result = qword_1013EFE18;
  if (!qword_1013EFE18)
  {
    result = swift_getWitnessTable(&unk_100F0D288, &type metadata for CRLWPUnderlineAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFE18);
  }
  return result;
}

unint64_t sub_10073DCE4()
{
  unint64_t result;

  result = qword_1013F3770;
  if (!qword_1013F3770)
  {
    result = swift_getWitnessTable(&unk_100F0D1FC, &type metadata for CRLWPFontItalicAttribute);
    atomic_store(result, (unint64_t *)&qword_1013F3770);
  }
  return result;
}

unint64_t sub_10073DD28()
{
  unint64_t result;

  result = qword_1013EFE38;
  if (!qword_1013EFE38)
  {
    result = swift_getWitnessTable(&unk_100F0D170, &type metadata for CRLWPFontBoldAttribute);
    atomic_store(result, (unint64_t *)&qword_1013EFE38);
  }
  return result;
}

uint64_t sub_10073DDDC(uint64_t a1, uint64_t a2, unint64_t a3, int a4, int a5, uint64_t a6, unint64_t a7, unint64_t a8, unsigned __int8 a9, unint64_t a10, uint64_t a11, unint64_t a12, unsigned __int8 a13, unsigned __int8 a14, char a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  _BYTE v73[12];
  int v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  char v86;

  v83 = a8;
  LODWORD(v80) = a5;
  LODWORD(v78) = a4;
  *(_DWORD *)&v73[8] = 0;
  v74 = a14;
  *(_QWORD *)v73 = a13;
  v77 = a16;
  v81 = a10;
  LODWORD(v79) = a9;
  v22 = sub_1004B804C(&qword_101406500);
  v23 = __chkstk_darwin(v22);
  v72 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v75 = (char *)&v68 - v26;
  __chkstk_darwin(v25);
  v71 = (char *)&v68 - v27;
  v28 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v76 = *(_QWORD *)(v28 - 8);
  v29 = __chkstk_darwin(v28);
  v70 = (uint64_t)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v69 = (uint64_t)&v68 - v32;
  __chkstk_darwin(v31);
  v68 = (uint64_t)&v68 - v33;
  v34 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_syncData);
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_syncData) = xmmword_100F062D0;
  v82 = a1;
  sub_1004E1B3C(a1, v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier);
  v35 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData);
  *v35 = a2;
  v35[1] = a3;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isFavorite) = v78;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_enableCollaboratorCursors) = v80;
  v36 = a3;
  v37 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_viewStateData);
  *v37 = a6;
  v37[1] = a7;
  v38 = v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_lastOpenCrashedVersion;
  *(_QWORD *)v38 = v83;
  *(_BYTE *)(v38 + 8) = v79 & 1;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_unsyncedChanges) = v81;
  v40 = *v34;
  v39 = v34[1];
  *v34 = a11;
  v34[1] = a12;
  v83 = v36;
  sub_1004BE310(a2, v36);
  v80 = a6;
  v81 = a7;
  sub_1004BE310(a6, a7);
  v78 = a11;
  v79 = a12;
  v41 = v16;
  sub_10057939C(a11, a12);
  sub_1004BE2FC(v40, v39);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_minRequiredVersionForFullFidelity) = v77;
  v77 = v28;
  if (*(_DWORD *)v73 == 2)
  {
    v42 = v83;
    sub_1004BE310(a2, v83);
    v43 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
    v44 = (uint64_t)v71;
    v45 = *(_QWORD *)&v73[4];
    CRDT.init(serializedData:)(a2, v42, v28, v43);
    if (v45)
    {
      swift_errorRelease(v45);
      v46 = v76;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v44, 1, 1, v28);
      sub_10073E89C(v44);
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardIdentifier:crdtData:isFavorite:enableCollaboratorCursors:viewStateData:lastOpenCrashedVersion:unsyncedChanges:syncData:isCanvasDotGridEnabled:isConnectorModeEnabled:isScenesNavigatorOpen:minRequiredVersionForFullFidelity:)", 232, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLUserBoardMetadataDatabaseRow.swift", 103, 2, 92, "Unable to deserialize user board metadata.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifier:crdtData:isFavorite:enableCollaboratorCursors:viewStateData:lastOpenCrashedVersion:unsyncedChanges:syncData:isCanvasDotGridEnabled:isConnectorModeEnabled:isScenesNavigatorOpen:minRequiredVersionForFullFidelity:)", 232, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLUserBoardMetadataDatabaseRow.swift", 103, 2u, 92, (uint64_t)"Unable to deserialize user board metadata.", 42, 2u);
      v45 = 0;
      *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isCanvasDotGridEnabled) = 1;
    }
    else
    {
      v46 = v76;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v28);
      v47 = v44;
      v48 = v68;
      sub_10073ED04(v47, v68);
      v49 = sub_1004B804C((uint64_t *)&unk_1013F5590);
      CRRegister.wrappedValue.getter(v49);
      v50 = v84;
      sub_1004B84A4(v48, type metadata accessor for CRLUserBoardMetadataCRDTData);
      *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isCanvasDotGridEnabled) = v50;
    }
  }
  else
  {
    *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isCanvasDotGridEnabled) = v73[0] & 1;
    v46 = v76;
    v45 = *(_QWORD *)&v73[4];
  }
  v51 = (uint64_t)v75;
  if (v74 == 2)
  {
    v52 = v83;
    sub_1004BE310(a2, v83);
    v53 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
    v54 = v77;
    CRDT.init(serializedData:)(a2, v52, v77, v53);
    if (v45)
    {
      swift_errorRelease(v45);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v51, 1, 1, v54);
      sub_10073E89C(v51);
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardIdentifier:crdtData:isFavorite:enableCollaboratorCursors:viewStateData:lastOpenCrashedVersion:unsyncedChanges:syncData:isCanvasDotGridEnabled:isConnectorModeEnabled:isScenesNavigatorOpen:minRequiredVersionForFullFidelity:)", 232, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLUserBoardMetadataDatabaseRow.swift", 103, 2, 100, "Unable to deserialize user board metadata.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifier:crdtData:isFavorite:enableCollaboratorCursors:viewStateData:lastOpenCrashedVersion:unsyncedChanges:syncData:isCanvasDotGridEnabled:isConnectorModeEnabled:isScenesNavigatorOpen:minRequiredVersionForFullFidelity:)", 232, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLUserBoardMetadataDatabaseRow.swift", 103, 2u, 100, (uint64_t)"Unable to deserialize user board metadata.", 42, 2u);
      v45 = 0;
      *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isConnectorModeEnabled) = 0;
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v54);
      v55 = v69;
      sub_10073ED04(v51, v69);
      v56 = sub_1004B804C((uint64_t *)&unk_1013F5590);
      CRRegister.wrappedValue.getter(v56);
      v57 = v85;
      sub_1004B84A4(v55, type metadata accessor for CRLUserBoardMetadataCRDTData);
      *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isConnectorModeEnabled) = v57;
    }
  }
  else
  {
    *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isConnectorModeEnabled) = v74 & 1;
  }
  if (a15 != 2)
  {
    v62 = a15 & 1;
    sub_1004BE2FC(v78, v79);
    sub_1004BBBC8(v80, v81);
    sub_1004BBBC8(a2, v83);
    v63 = type metadata accessor for CRLBoardIdentifier;
    v64 = v82;
LABEL_16:
    sub_1004B84A4(v64, v63);
    *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isScenesNavigatorOpen) = v62;
    return v41;
  }
  v58 = v83;
  sub_1004BE310(a2, v83);
  v59 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
  v60 = (uint64_t)v72;
  v61 = v77;
  CRDT.init(serializedData:)(a2, v58, v77, v59);
  if (!v45)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v60, 0, 1, v61);
    v65 = v70;
    sub_10073ED04(v60, v70);
    v66 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    CRRegister.wrappedValue.getter(v66);
    sub_1004BE2FC(v78, v79);
    sub_1004BBBC8(v80, v81);
    sub_1004BBBC8(a2, v83);
    v62 = v86;
    sub_1004B84A4(v82, type metadata accessor for CRLBoardIdentifier);
    v63 = type metadata accessor for CRLUserBoardMetadataCRDTData;
    v64 = v65;
    goto LABEL_16;
  }
  swift_errorRelease(v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v60, 1, 1, v61);
  sub_10073E89C(v60);
  sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardIdentifier:crdtData:isFavorite:enableCollaboratorCursors:viewStateData:lastOpenCrashedVersion:unsyncedChanges:syncData:isCanvasDotGridEnabled:isConnectorModeEnabled:isScenesNavigatorOpen:minRequiredVersionForFullFidelity:)", 232, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLUserBoardMetadataDatabaseRow.swift", 103, 2, 108, "Unable to deserialize user board metadata.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifier:crdtData:isFavorite:enableCollaboratorCursors:viewStateData:lastOpenCrashedVersion:unsyncedChanges:syncData:isCanvasDotGridEnabled:isConnectorModeEnabled:isScenesNavigatorOpen:minRequiredVersionForFullFidelity:)", 232, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLUserBoardMetadataDatabaseRow.swift", 103, 2u, 108, (uint64_t)"Unable to deserialize user board metadata.", 42, 2u);
  sub_1004BE2FC(v78, v79);
  sub_1004BBBC8(v80, v81);
  sub_1004BBBC8(a2, v83);
  sub_1004B84A4(v82, type metadata accessor for CRLBoardIdentifier);
  *(_BYTE *)(v41 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isScenesNavigatorOpen) = 0;
  return v41;
}

uint64_t sub_10073E608()
{
  uint64_t v0;

  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  sub_1004BBBC8(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData + 8));
  sub_1004BBBC8(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_viewStateData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_viewStateData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_syncData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10073E67C()
{
  return type metadata accessor for CRLUserBoardMetadataDatabaseRow(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataDatabaseRow(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EFF88;
  if (!qword_1013EFF88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUserBoardMetadataDatabaseRow);
  return result;
}

uint64_t sub_10073E6C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F08070;
    v4[2] = &unk_100F08088;
    v4[3] = &unk_100F08088;
    v4[4] = &unk_100F080A0;
    v4[5] = &unk_100F08070;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = &unk_100F080B8;
    v4[8] = &unk_100F08088;
    v4[9] = &unk_100F08088;
    v4[10] = &unk_100F08088;
    v4[11] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUserBoardMetadataUnsyncedChanges()
{
  return &type metadata for CRLUserBoardMetadataUnsyncedChanges;
}

unint64_t sub_10073E780()
{
  unint64_t result;

  result = qword_1013F0098;
  if (!qword_1013F0098)
  {
    result = swift_getWitnessTable(&unk_100F08124, &type metadata for CRLUserBoardMetadataUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F0098);
  }
  return result;
}

unint64_t sub_10073E7C8()
{
  unint64_t result;

  result = qword_1013F00A0;
  if (!qword_1013F00A0)
  {
    result = swift_getWitnessTable("e/7", &type metadata for CRLUserBoardMetadataUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F00A0);
  }
  return result;
}

unint64_t sub_10073E810()
{
  unint64_t result;

  result = qword_1013F00A8;
  if (!qword_1013F00A8)
  {
    result = swift_getWitnessTable(&unk_100F0814C, &type metadata for CRLUserBoardMetadataUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F00A8);
  }
  return result;
}

unint64_t sub_10073E858()
{
  unint64_t result;

  result = qword_1013F00B0;
  if (!qword_1013F00B0)
  {
    result = swift_getWitnessTable(&unk_100F08184, &type metadata for CRLUserBoardMetadataUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F00B0);
  }
  return result;
}

uint64_t sub_10073E89C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_101406500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10073E8DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *object;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v23;
  unint64_t v24;

  v3 = v1;
  v5 = sub_1004B804C(&qword_101406500);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData + 8);
  sub_1004BE310(v9, v10);
  v11 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
  CRDT.init(serializedData:)(v9, v10, v8, v11);
  if (v2)
  {
    swift_errorRelease(v2);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    sub_10073E89C((uint64_t)v7);
    v23 = 0;
    v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease(v24);
    v23 = 0xD000000000000027;
    v24 = 0x8000000100FCD2B0;
    v12 = type metadata accessor for UUID(0);
    v13 = sub_1004B7878(&qword_1013E49E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v12, v13);
    object = v14._object;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(object);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    v17 = v23;
    v18 = v24;
    v19 = sub_1006B79EC();
    swift_allocError(&type metadata for SQLiteError, v19, 0, 0);
    *(_DWORD *)v20 = 1;
    *(_QWORD *)(v20 + 8) = v17;
    *(_QWORD *)(v20 + 16) = v18;
    return swift_willThrow(v21);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
    return sub_10073ED04((uint64_t)v7, a1);
  }
}

uint64_t sub_10073EAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v18;
  char v19;
  char v20;
  uint64_t v22;

  v3 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - v7;
  v9 = v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier;
  v10 = a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier;
  v11 = static UUID.== infix(_:_:)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier);
  sub_1004E1B3C(v9, (uint64_t)v8);
  sub_1004E1B3C(v10, (uint64_t)v5);
  if ((v11 & 1) != 0)
  {
    v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v13 = *(_QWORD *)&v8[v12];
    v14 = *(_QWORD *)&v8[v12 + 8];
    v15 = &v5[v12];
    v16 = *((_QWORD *)v15 + 1);
    if (v13 == *(_QWORD *)v15 && v14 == v16)
    {
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, *(_QWORD *)v15, v16, 0);
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      v19 = 0;
      if ((v18 & 1) == 0)
        return v19 & 1;
    }
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isFavorite) == *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isFavorite)
      && *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_enableCollaboratorCursors) == *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_enableCollaboratorCursors)
      && (sub_1007B38CC(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_viewStateData), *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_viewStateData + 8)), (v20 & 1) != 0)&& *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isCanvasDotGridEnabled) == *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isCanvasDotGridEnabled)&& *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isConnectorModeEnabled) == *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isConnectorModeEnabled))
    {
      v19 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isScenesNavigatorOpen) ^ *(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isScenesNavigatorOpen);
    }
    else
    {
      v19 = 1;
    }
  }
  else
  {
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_10073ED04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10073ED48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, char a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;

  v39 = a8;
  v40 = a6;
  v41 = a4;
  v42 = a5;
  v43 = a1;
  v15 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v18 = type metadata accessor for CRCodableVersion(0);
  v19 = sub_1004F2A1C(v18, (uint64_t)qword_10147EB08);
  v20 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v21 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
  v22 = a3;
  v23 = a2;
  v24 = CRDT.serializedData(_:version:)(v22, v19, v20, v21);
  if (v11)
  {
    sub_1004BE2FC(a9, a10);
    sub_1004BBBC8(v41, v42);
    sub_1004B84A4(a2, type metadata accessor for CRLUserBoardMetadataCRDTData);
    sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v38 = a7 & 1;
    v35 = a11;
    v36 = v25;
    v37 = v24;
    v26 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    CRRegister.wrappedValue.getter(v26);
    v34 = v48;
    CRRegister.wrappedValue.getter(v26);
    v33 = v47;
    CRRegister.wrappedValue.getter(v26);
    v32 = v46;
    CRRegister.wrappedValue.getter(v26);
    v27 = v45;
    CRRegister.wrappedValue.getter(v26);
    LOBYTE(v26) = v44;
    v28 = v43;
    sub_1004E1B3C(v43, (uint64_t)v17);
    v29 = type metadata accessor for CRLUserBoardMetadataDatabaseRow(0);
    v23 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    sub_10073DDDC((uint64_t)v17, v37, v36, v34, v33, v41, v42, v40, v38, v39, a9, a10, v32, v27, v26, v35);
    sub_1004B84A4(a2, type metadata accessor for CRLUserBoardMetadataCRDTData);
    sub_1004B84A4(v28, type metadata accessor for CRLBoardIdentifier);
  }
  return v23;
}

id sub_10073EFDC()
{
  id result;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __objc2_prot *v5;

  result = MTLCreateSystemDefaultDevice();
  if (!result)
    goto LABEL_7;
  v1 = result;
  v5 = &OBJC_PROTOCOL___MTLDeviceSPI;
  v2 = (void *)swift_dynamicCastObjCProtocolConditional(result, 1, &v5);
  if (!v2)
  {
    result = (id)swift_unknownObjectRelease(v1);
LABEL_7:
    v4 = 4096;
    goto LABEL_8;
  }
  v3 = (uint64_t)objc_msgSend(v2, "maxTextureWidth2D");
  result = (id)swift_unknownObjectRelease(v1);
  v4 = 4096;
  if (v3 < 4096)
    v4 = v3;
LABEL_8:
  qword_10147F538 = v4;
  return result;
}

id sub_10073F060(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = sub_10073F974();
  v6 = v2;
  v7 = NSCoder.decodeObject<A>(of:forKey:)(v5, 0x656C646E6168, 0xE600000000000000, v5);
  if (v7)
  {
    *(_QWORD *)&v6[OBJC_IVAR___CRLUSDRenderingCoreRESharedTextureHandle_handle] = v7;

    v10.receiver = v6;
    v10.super_class = ObjectType;
    v8 = objc_msgSendSuper2(&v10, "init");

  }
  else
  {

    swift_deallocPartialClassInstance(v6, ObjectType, 16, 7);
    return 0;
  }
  return v8;
}

uint64_t _s19SharedTextureHandleCMa()
{
  return objc_opt_self(CRLUSDRenderingCoreRESharedTextureHandle);
}

void _s11TextureDataVwxx(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)a1);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));

}

uint64_t *_s11TextureDataVwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = (void *)a2[3];
  a1[2] = v5;
  a1[3] = (uint64_t)v6;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRetain(v5);
  v7 = v6;
  return a1;
}

uint64_t *_s11TextureDataVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v9);
  v10 = (void *)a2[3];
  v11 = (void *)a1[3];
  a1[3] = (uint64_t)v10;
  v12 = v10;

  return a1;
}

_QWORD *_s11TextureDataVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  void *v5;

  swift_unknownObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease(v4);
  swift_unknownObjectRelease(a1[2]);
  v5 = (void *)a1[3];
  *((_OWORD *)a1 + 1) = a2[1];

  return a1;
}

ValueMetadata *_s11TextureDataVMa()
{
  return &_s11TextureDataVN;
}

uint64_t sub_10073F3A4(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;
  uint64_t result;
  float v11;
  float v12;
  float v13;

  v3 = a1[8];
  v4 = a1[4];
  v5 = v3 * v4;
  if (v5 <= -9.2234e18)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v6 = a1[5];
  v7 = v3 * v6;
  if ((LODWORD(v5) & 0x7F800000) == 0x7F800000 || (LODWORD(v7) & 0x7F800000) == 2139095040)
    goto LABEL_27;
  if (v7 <= -9.2234e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v7 < 9.2234e18)
  {
    v2 = (uint64_t)v5;
    v1 = (uint64_t)v7;
    if (qword_1013DCFE0 == -1)
      goto LABEL_10;
    goto LABEL_30;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  swift_once(&qword_1013DCFE0, sub_10073EFDC);
LABEL_10:
  result = qword_10147F538;
  if (qword_10147F538 >= v2 && qword_10147F538 >= v1)
    return v2;
  if (v2 != v1)
  {
    v11 = (float)qword_10147F538;
    if (v1 >= v2)
    {
      v13 = (float)((float)v2 / (float)v1) * v11;
      if ((~LODWORD(v13) & 0x7F800000) != 0)
      {
        if (v13 > -9.2234e18)
        {
          if (v13 < 9.2234e18)
            return (uint64_t)v13;
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return result;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v12 = (float)((float)v1 / (float)v2) * v11;
    if ((~LODWORD(v12) & 0x7F800000) != 0)
    {
      if (v12 > -9.2234e18)
      {
        if (v12 < 9.2234e18)
          return result;
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  return result;
}

id sub_10073F564(uint64_t a1, id a2)
{
  id v2;
  objc_class *v3;
  char *v4;
  id v5;
  objc_super v7;

  v2 = objc_msgSend(a2, "newSharedTextureWithDescriptor:", a1);
  if (v2)
  {
    v3 = (objc_class *)_s19SharedTextureHandleCMa();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = objc_msgSend((id)swift_unknownObjectRetain(v2), "newSharedTextureHandle");
    if (v5)
    {
      *(_QWORD *)&v4[OBJC_IVAR___CRLUSDRenderingCoreRESharedTextureHandle_handle] = v5;

      v7.receiver = v4;
      v7.super_class = v3;
      objc_msgSendSuper2(&v7, "init");
      swift_unknownObjectRelease(v2);
    }
    else
    {
      swift_unknownObjectRelease(v2);

      swift_deallocPartialClassInstance(v4, v3, 16, 7);
      swift_unknownObjectRelease(v2);
      return 0;
    }
  }
  return v2;
}

void *sub_10073F644(void *a1, id a2, void *a3, void *a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  char **v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  unint64_t v24;
  NSString v25;
  double v26;
  Swift::String v27;
  unint64_t v28;
  NSString v29;
  double v30;
  NSString v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  id v42;

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10073F564((uint64_t)a2, a1);
  if (!v14)
    goto LABEL_15;
  v5 = v14;
  v42 = v15;
  if (!a3)
  {
    v38 = objc_msgSend(a1, "newSharedEvent");
    if (!v38)
    {
      swift_unknownObjectRelease(v5);

      goto LABEL_15;
    }
    v39 = a2;
    if (a4)
    {
      v37 = v4;
      swift_unknownObjectRetain(0);
      v36 = a4;
LABEL_11:
      v18 = swift_unknownObjectRetain(a4);
      v19 = UUID.init()(v18);
      v20 = UUID.uuidString.getter(v19);
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v40 = 0x72657265646E6572;
      v41 = 0xE90000000000003ALL;
      v23._countAndFlagsBits = v20;
      v23._object = v22;
      String.append(_:)(v23);
      v24 = v41;
      v25 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v24).n128_u64[0];
      objc_msgSend(v38, "setLabel:", v25, v26);

      v16 = &selRef_setAnchorPointForTexture_;
      v40 = 0x6579616C70736964;
      v41 = 0xEA00000000003A72;
      v27._countAndFlagsBits = v20;
      v27._object = v22;
      String.append(_:)(v27);
      swift_bridgeObjectRelease(v22);
      v28 = v41;
      v29 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v30 = swift_bridgeObjectRelease(v28).n128_u64[0];
      objc_msgSend(v36, "setLabel:", v29, v30);

      goto LABEL_12;
    }
LABEL_9:
    swift_unknownObjectRetain(a3);
    v17 = objc_msgSend(a1, "newSharedEvent");
    if (v17)
    {
      v36 = v17;
      v37 = v4;
      goto LABEL_11;
    }
    swift_unknownObjectRelease(v5);

    swift_unknownObjectRelease(v38);
    a2 = v39;
LABEL_15:
    v32 = sub_100694FA8();
    swift_allocError(&type metadata for CRLUSDRendering.RendererError, v32, 0, 0);
    *(_QWORD *)v33 = 0xD00000000000001ELL;
    *(_QWORD *)(v33 + 8) = 0x8000000100FCD340;
    *(_BYTE *)(v33 + 16) = 5;
    swift_willThrow(v34);
    swift_unknownObjectRelease(a1);

    swift_unknownObjectRelease(a4);
    swift_unknownObjectRelease(a3);
    return v5;
  }
  v39 = a2;
  if (!a4)
  {
    v38 = a3;
    goto LABEL_9;
  }
  swift_unknownObjectRetain(a4);
  swift_unknownObjectRetain(a3);
  v16 = &selRef_setAnchorPointForTexture_;
LABEL_12:
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, v16[489], v31);

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a4);
  return v5;
}

unint64_t sub_10073F974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F0158;
  if (!qword_1013F0158)
  {
    v1 = objc_opt_self(MTLSharedTextureHandle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F0158);
  }
  return result;
}

id sub_10073F9B0(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  id v4;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;

  v9 = objc_msgSend(a1, "newSharedTextureWithHandle:", *(_QWORD *)&a2[OBJC_IVAR___CRLUSDRenderingCoreRESharedTextureHandle_handle]);
  if (v9)
  {
    v4 = v9;
    v10 = objc_msgSend(a1, "newSharedEventWithHandle:", a3);
    if (v10)
    {
      v11 = v10;
      if (objc_msgSend(a1, "newSharedEventWithHandle:", a4))
        return v4;
      swift_unknownObjectRelease(v4);
    }
    else
    {
      v11 = v4;
    }
    swift_unknownObjectRelease(v11);
  }
  v12 = sub_100694FA8();
  swift_allocError(&type metadata for CRLUSDRendering.RendererError, v12, 0, 0);
  *(_QWORD *)v13 = 0xD00000000000001ELL;
  *(_QWORD *)(v13 + 8) = 0x8000000100FCD3A0;
  *(_BYTE *)(v13 + 16) = 5;
  swift_willThrow(v14);

  return v4;
}

void sub_10073FAC4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v4 = sub_1004B804C(&qword_1013EB680);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10127B260, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10073FDCC;
  v13 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_10053C98C;
  aBlock[3] = &unk_10127B278;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "deleteSearchableItemsWithIdentifiers:completionHandler:", isa, v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);

}

void sub_10073FC14(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v4 = sub_1004B804C(&qword_1013EB680);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_1006BB300();
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10127B210, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10073FDCC;
  v13 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_10053C98C;
  aBlock[3] = &unk_10127B228;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "indexSearchableItems:completionHandler:", isa, v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);

}

uint64_t sub_10073FD68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    v4 = a1;
    swift_errorRetain(a1);
    v1 = sub_1004B804C(&qword_1013EB680);
    return CheckedContinuation.resume(throwing:)(&v4, v1);
  }
  else
  {
    v3 = sub_1004B804C(&qword_1013EB680);
    return CheckedContinuation.resume(returning:)(v3, v3);
  }
}

uint64_t sub_10073FDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10073FDE0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10073FDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10073FE50(uint64_t a1)
{
  sub_1004B804C(&qword_1013EB680);
  return sub_10073FD68(a1);
}

void *sub_10073FE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  void *v8;
  uint64_t v9;
  double *v10;
  double *v11;
  id v12;

  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v4) + 0x598))(a2, a4);
  if (!v5)
  {
    v9 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v10 = *(double **)((char *)v4 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
    if (!v10)
    {
      sub_100740DA4();
      v10 = *(double **)((char *)v4 + v9);
    }
    if (v10)
      v11 = v10;
    else
      v11 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v10);
    sub_10074643C((uint64_t)v11, a3, a4);
    swift_bridgeObjectRelease(v11);
    if (a3)
    {
      v12 = v8;
      sub_100C86CC0((uint64_t)v12, 2, a3);

    }
  }
  return v8;
}

uint64_t sub_10073FF84(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType(a1);
  return sub_10074A78C(a1, v1);
}

void sub_10073FFC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, __n128);
  __n128 v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F0360);
  __chkstk_darwin(v5);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v33[-v9 - 8];
  v11 = sub_1004B804C((uint64_t *)&unk_1013F0368);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v33, 0, 0);
    v16 = *v15;
    if (*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRetain(v16);
      v17 = sub_1008431EC(1);
      if ((v18 & 1) != 0)
      {
        sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v34, &qword_1013E0230);
      }
      else
      {
        v34 = 0;
        v35 = 0;
        v36 = 0;
        v37 = 1;
      }
      swift_bridgeObjectRelease();
      if (v37 != 1)
      {
        sub_1004C4938((uint64_t)&v34, (uint64_t)v38, &qword_1013E0230);
        if (v39)
        {
          v21 = swift_dynamicCast(v10, v38, (char *)&type metadata for Any + 8, v11, 6);
          v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
          v22(v10, v21 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
            v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            v24 = type metadata accessor for CRLContainerItemData(0);
            v25 = swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0);
            (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
            v22(v7, 0, 1, v11);
            v26 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v25 + 696);
            v27 = swift_retain(v23);
            v28 = (void (*)(_BYTE *, _QWORD))v26(v38, v27);
            v29 = type metadata accessor for CRLContainerItemCRDTData(0);
            v30 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
            CRStruct_1.apply(_:)(v7, v29, v30);
            sub_1004CB800((uint64_t)v7, &qword_1013F0360);
            v28(v38, 0);
            v31 = swift_release(v23);
            (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v31);
            return;
          }
          goto LABEL_10;
        }
        v19 = &qword_1013E0230;
        v20 = (uint64_t *)v38;
LABEL_9:
        sub_1004CB800((uint64_t)v20, v19);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_10:
        sub_1004CB800((uint64_t)v10, &qword_1013F0360);
        return;
      }
    }
    else
    {
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v37 = 1;
    }
    v19 = (uint64_t *)&unk_1013DFC00;
    v20 = &v34;
    goto LABEL_9;
  }
}

void sub_100740308(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_100740374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *i;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  double *v14;
  double *v15;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _BYTE v53[32];
  _BYTE v54[24];
  _QWORD v55[3];
  void *v56;

  swift_bridgeObjectRelease(0xED00006174614472);
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    v50 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v6 = v2;
    v7 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
    v8 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs;
    swift_bridgeObjectRetain(v6);
    v49 = v9;
    for (i = (_QWORD *)(v9 + 40); ; i += 2)
    {
      v12 = *(i - 1);
      v11 = *i;
      v13 = v12 == 0x736D657469 && v11 == 0xE500000000000000;
      if (v13
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, *(i - 1), *i, 0) & 1) != 0)
      {
        v14 = *(double **)(v0 + v7);
        if (!v14)
        {
          sub_100740DA4();
          v14 = *(double **)(v0 + v7);
        }
        if (v14)
          v15 = v14;
        else
          v15 = _swiftEmptyArrayStorage;
        v56 = (void *)sub_1004B804C(&qword_1013F0310);
        v55[0] = v15;
        swift_beginAccess(v5, v54, 33, 0);
        sub_1004CB7BC((uint64_t)v55, (uint64_t)v53, &qword_1013E0230);
        swift_bridgeObjectRetain(v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
        v17 = *v5;
        v51 = (_QWORD *)*v5;
        *v5 = 0x8000000000000000;
        v19 = sub_100843260(4);
        v20 = *(_QWORD *)(v17 + 16);
        v21 = (v18 & 1) == 0;
        v22 = v20 + v21;
        if (__OFADD__(v20, v21))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          type metadata accessor for CRLChangeProperty(0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v48);
          __break(1u);
          JUMPOUT(0x1007409B8);
        }
        v23 = v18;
        if (*(_QWORD *)(v17 + 24) >= v22)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_10082C8D0();
        }
        else
        {
          sub_100814B68(v22, isUniquelyReferenced_nonNull_native);
          v24 = sub_100843260(4);
          if ((v23 & 1) != (v25 & 1))
            goto LABEL_47;
          v19 = v24;
        }
        v26 = v51;
        if ((v23 & 1) == 0)
        {
          v51[(v19 >> 6) + 8] |= 1 << v19;
          *(_QWORD *)(v51[6] + 8 * v19) = 4;
          sub_1004C4938((uint64_t)v53, v51[7] + 32 * v19, &qword_1013E0230);
          v27 = v51[2];
          v28 = __OFADD__(v27, 1);
          v29 = v27 + 1;
          if (v28)
            goto LABEL_44;
LABEL_22:
          v26[2] = v29;
          goto LABEL_23;
        }
      }
      else
      {
        v34 = v12 == 0x6564724F6D657469 && v11 == 0xE900000000000072;
        if (!v34
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6564724F6D657469, 0xE900000000000072, v12, v11, 0) & 1) == 0)
        {
          v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v45, v3 - 160);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v12;
          *(_QWORD *)(inited + 40) = v11;
          swift_bridgeObjectRetain(v11);
          swift_setDeallocating(inited);
          v47 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v47);
          goto LABEL_24;
        }
        v56 = &type metadata for Bool;
        LOBYTE(v55[0]) = 1;
        swift_beginAccess(v5, v54, 33, 0);
        sub_1004CB7BC((uint64_t)v55, (uint64_t)v53, &qword_1013E0230);
        v35 = swift_isUniquelyReferenced_nonNull_native(*v5);
        v36 = *v5;
        v52 = (_QWORD *)*v5;
        *v5 = 0x8000000000000000;
        v19 = sub_100843260(5);
        v38 = *(_QWORD *)(v36 + 16);
        v39 = (v37 & 1) == 0;
        v40 = v38 + v39;
        if (__OFADD__(v38, v39))
          goto LABEL_45;
        v41 = v37;
        if (*(_QWORD *)(v36 + 24) >= v40)
        {
          if ((v35 & 1) == 0)
            sub_10082C8D0();
        }
        else
        {
          sub_100814B68(v40, v35);
          v42 = sub_100843260(5);
          if ((v41 & 1) != (v43 & 1))
            goto LABEL_47;
          v19 = v42;
        }
        v26 = v52;
        if ((v41 & 1) == 0)
        {
          v52[(v19 >> 6) + 8] |= 1 << v19;
          *(_QWORD *)(v52[6] + 8 * v19) = 5;
          sub_1004C4938((uint64_t)v53, v52[7] + 32 * v19, &qword_1013E0230);
          v44 = v52[2];
          v28 = __OFADD__(v44, 1);
          v29 = v44 + 1;
          if (v28)
            goto LABEL_46;
          goto LABEL_22;
        }
      }
      sub_100582338((uint64_t)v53, v26[7] + 32 * v19, &qword_1013E0230);
LABEL_23:
      v30 = *v5;
      *v5 = v26;
      swift_bridgeObjectRelease(v30);
      swift_endAccess(v54);
      sub_1004CB800((uint64_t)v55, &qword_1013E0230);
      v31 = *(_QWORD *)(v0 + v50);
      *(_QWORD *)(v0 + v50) = 0;
      swift_bridgeObjectRelease(v31);
      v32 = *(_QWORD *)(v0 + v7);
      *(_QWORD *)(v0 + v7) = 0;
      swift_bridgeObjectRelease(v32);
      v33 = *(_QWORD *)(v0 + v8);
      *(_QWORD *)(v0 + v8) = 0;
      swift_bridgeObjectRelease(v33);
LABEL_24:
      if (!--v4)
      {
        swift_bridgeObjectRelease(v49);
        return;
      }
    }
  }
}

void sub_1007409E0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v5 = *(uint64_t (**)(__n128))(*(_QWORD *)v4 + 568);
  v6 = swift_retain(v4);
  v7 = v5(v6);
  v8 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 576))();
  sub_100A634F4(v7);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  v11 = sub_100AF7994(v10);
  swift_bridgeObjectRelease(v10);
  sub_100A634F4(v8);
  v13 = v12;
  swift_bridgeObjectRelease(v8);
  v14 = sub_100AF7994(v13);
  swift_bridgeObjectRelease(v13);
  sub_100CA03B4(v14, v11);
  swift_release(v4);
  if ((a1 & 1) == 0)
    return;
  v15 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v16)
  {
    sub_100740DA4();
    v16 = *(_QWORD *)(v2 + v15);
  }
  if (v16)
    v17 = v16;
  else
    v17 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
    if (v18)
      goto LABEL_9;
LABEL_20:
    swift_bridgeObjectRelease(v17);
    return;
  }
  if (v17 < 0)
    v23 = v17;
  else
    v23 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  v18 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v17);
  if (!v18)
    goto LABEL_20;
LABEL_9:
  if (v18 < 1)
  {
    __break(1u);
  }
  else
  {
    v19 = 0;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v20 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
      else
        v20 = *(id *)(v17 + 8 * v19 + 32);
      v21 = v20;
      ++v19;
      v22 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v20) + 0x340))(1);
      sub_10051257C(v22);

    }
    while (v18 != v19);
    swift_bridgeObjectRelease(v17);
  }
}

void sub_100740BD4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_10077749C(a1, a2, (uint64_t)v17);
  if (!v4)
  {
    v6 = v17[0];
    v7 = v17[1];
    v8 = v17[2];
    v20 = v17[3];
    v9 = v18;
    v16 = v17[4];
    v10 = v19;
    v11 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v12 = *(double **)(v3 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v10);
    if (!v12)
    {
      sub_100740DA4();
      v12 = *(double **)(v3 + v11);
    }
    if (v12)
      v13 = v12;
    else
      v13 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v12);
    v14 = sub_100520ADC((uint64_t)v13);
    swift_bridgeObjectRelease(v13);
    sub_10051FAD0(v17);
    *a3 = v6;
    a3[1] = v7;
    v15 = v20;
    a3[2] = v8;
    a3[3] = v15;
    a3[4] = v16;
    a3[5] = v9;
    a3[6] = v10;
    a3[7] = v14;
  }
}

uint64_t sub_100740CB8(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType(a1);
  return sub_10074AAF8(a1, v1);
}

uint64_t sub_100740CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems) = 0;
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs) = 0;
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs) = 0;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items) = a1;
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_100740D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems) = 0;
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs) = 0;
  swift_bridgeObjectRelease(v2);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs) = 0;
  return swift_bridgeObjectRelease(v3);
}

void sub_100740DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t (*)(_QWORD, _QWORD, _QWORD));
  uint64_t (*v34)(_QWORD, _QWORD, _QWORD);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t, __n128);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __n128 v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, unint64_t, uint64_t);
  char v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  id v84;
  __n128 v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  id v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t (*v110)(_QWORD, _QWORD, _QWORD);
  char *v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  _QWORD *v115;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v112 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v99 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v111 = (char *)&v98 - v6;
  v7 = __chkstk_darwin(v5);
  v101 = (char *)&v98 - v8;
  v9 = __chkstk_darwin(v7);
  v100 = (char *)&v98 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v98 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v98 - v14;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v17 = __chkstk_darwin(v16);
  v103 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v98 - v19;
  v21 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v109 = *(_QWORD *)(v21 - 8);
  v22 = v109;
  v110 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v21;
  __chkstk_darwin(v21);
  v24 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1004B804C(&qword_1013F0320);
  v98 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v29 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = &_swiftEmptySetSingleton;
  v108 = (char *)_swiftEmptyArrayStorage;
  v114 = (unint64_t)_swiftEmptyArrayStorage;
  v30 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v31 = type metadata accessor for CRLContainerItemData(0);
  v32 = swift_dynamicCastClassUnconditional(v30, v31, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v32 + 680))();
  v33 = *(void (**)(char *, char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v22 + 16);
  v34 = v110;
  v33(v24, v27, v110);
  v35 = (uint64_t)v27;
  v36 = v20;
  v37 = v112;
  sub_1004B84A4(v35, type metadata accessor for CRLContainerItemCRDTData);
  CROrderedSet.makeIterator()(v34);
  (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v109 + 8))(v24, v34);
  v109 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
  v104 = v29;
  CROrderedSet.Iterator.next()(v105);
  v110 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v37 + 48);
  v38 = v110(v36, 1, v2);
  v106 = v1;
  if (v38 != 1)
  {
    v107 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v108 = (char *)_swiftEmptyArrayStorage;
    v102 = v36;
    v107(v15, v36, v2);
    while (1)
    {
      v71 = v115;
      if (!v115[2])
        goto LABEL_36;
      v72 = v115[5];
      v73 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      swift_bridgeObjectRetain(v71);
      v74 = dispatch thunk of Hashable._rawHashValue(seed:)(v72, v2, v73);
      v75 = -1 << *((_BYTE *)v71 + 32);
      v76 = v74 & ~v75;
      if (((*(_QWORD *)((char *)v71 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v76) & 1) == 0)
        break;
      v77 = ~v75;
      v78 = *(_QWORD *)(v112 + 72);
      v79 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
      while (1)
      {
        v79(v13, v71[6] + v78 * v76, v2);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v80 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v15);
        (*(void (**)(char *, uint64_t))(v112 + 8))(v13, v2);
        if ((v80 & 1) != 0)
          break;
        v76 = (v76 + 1) & v77;
        if (((*(_QWORD *)((char *)v71 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v76) & 1) == 0)
          goto LABEL_35;
      }
      v70 = swift_bridgeObjectRelease(v71);
      v1 = v106;
      v37 = v112;
      v36 = v102;
LABEL_28:
      (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v15, v2, v70);
      CROrderedSet.Iterator.next()(v105);
      if (v110(v36, 1, v2) == 1)
        goto LABEL_2;
      v107(v15, v36, v2);
    }
LABEL_35:
    v70 = swift_bridgeObjectRelease(v71);
    v1 = v106;
    v37 = v112;
    v36 = v102;
LABEL_36:
    v81 = *(_QWORD *)(v1 + v109);
    if (*(_QWORD *)(v81 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + v109));
      v82 = sub_100842EFC((uint64_t)v15);
      if ((v83 & 1) != 0)
      {
        v84 = *(id *)(*(_QWORD *)(v81 + 56) + 8 * v82);
        v85 = swift_bridgeObjectRelease(v81);
        v86 = *(void (**)(char *, char *, uint64_t, __n128))(v37 + 16);
        v87 = (uint64_t)v100;
        v86(v100, v15, v2, v85);
        sub_100AD569C((uint64_t)v13, v87);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v2);
        ((void (*)(char *, char *, uint64_t))v86)(v101, v15, v2);
        if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
          v108 = (char *)sub_100D0EC28(0, *((_QWORD *)v108 + 2) + 1, 1, (unint64_t)v108);
        v89 = *((_QWORD *)v108 + 2);
        v88 = *((_QWORD *)v108 + 3);
        if (v89 >= v88 >> 1)
          v108 = (char *)sub_100D0EC28(v88 > 1, v89 + 1, 1, (unint64_t)v108);
        v90 = v108;
        *((_QWORD *)v108 + 2) = v89 + 1;
        v107(&v90[((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v89], v101, v2);
        v91 = v84;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
        v93 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v92 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v93 >= v92 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v93 + 1, 1);
        v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v91);
        specialized Array._endMutation()(v94);

      }
      else
      {
        v70 = swift_bridgeObjectRelease(v81);
      }
    }
    goto LABEL_28;
  }
LABEL_2:
  (*(void (**)(char *, uint64_t))(v98 + 8))(v104, v105);
  v39 = *(_QWORD *)(v1 + v109);
  swift_bridgeObjectRetain_n(v39, 2);
  v40 = (char *)sub_1005FEE48(v39);
  swift_bridgeObjectRelease(v39);
  v113 = v40;
  sub_100748B6C(&v113);
  v41 = swift_bridgeObjectRelease(v39);
  v42 = v113;
  v105 = *((_QWORD *)v113 + 2);
  if (v105)
  {
    v43 = 0;
    v98 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v104 = &v113[v98];
    v44 = (uint64_t)v111;
    v45 = v103;
    v101 = v113;
    while (1)
    {
      if (v43 >= *((_QWORD *)v42 + 2))
      {
        __break(1u);
        swift_release(v113);
        __break(1u);
        return;
      }
      v47 = *(_QWORD *)(v37 + 72);
      v48 = *(void (**)(char *, char *, uint64_t, __n128))(v37 + 16);
      v48(v45, &v104[v47 * v43], v2, v41);
      v102 = *(char **)(v37 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v102)(v45, 0, 1, v2);
      if (v110(v45, 1, v2) == 1)
      {
        swift_release(v42);
        v1 = v106;
        goto LABEL_50;
      }
      v107 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v107((char *)v44, v45, v2);
      v49 = v115;
      if (v115[2])
      {
        v50 = v115[5];
        v51 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        swift_bridgeObjectRetain(v49);
        v52 = dispatch thunk of Hashable._rawHashValue(seed:)(v50, v2, v51);
        v53 = -1 << *((_BYTE *)v49 + 32);
        v54 = v52 & ~v53;
        if (((*(_QWORD *)((char *)v49 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v54) & 1) != 0)
        {
          v55 = ~v53;
          while (1)
          {
            ((void (*)(char *, unint64_t, uint64_t))v48)(v13, v49[6] + v54 * v47, v2);
            sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v56 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v111);
            (*(void (**)(char *, uint64_t))(v112 + 8))(v13, v2);
            if ((v56 & 1) != 0)
              break;
            v54 = (v54 + 1) & v55;
            if (((*(_QWORD *)((char *)v49 + ((v54 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v54) & 1) == 0)
              goto LABEL_14;
          }
          v46 = swift_bridgeObjectRelease(v49);
          v44 = (uint64_t)v111;
          v37 = v112;
          goto LABEL_25;
        }
LABEL_14:
        v46 = swift_bridgeObjectRelease(v49);
        v44 = (uint64_t)v111;
        v45 = v103;
        v42 = v101;
      }
      v57 = *(_QWORD *)(v106 + v109);
      if (*(_QWORD *)(v57 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v106 + v109));
        v58 = sub_100842EFC(v44);
        if ((v59 & 1) != 0)
        {
          v60 = *(id *)(*(_QWORD *)(v57 + 56) + 8 * v58);
          v61 = swift_bridgeObjectRelease(v57);
          v62 = (uint64_t)v100;
          v48(v100, (char *)v44, v2, v61);
          sub_100AD569C((uint64_t)v13, v62);
          (*(void (**)(char *, uint64_t))(v112 + 8))(v13, v2);
          ((void (*)(char *, uint64_t, uint64_t))v48)(v99, v44, v2);
          if ((swift_isUniquelyReferenced_nonNull_native(v108) & 1) == 0)
            v108 = (char *)sub_100D0EC28(0, *((_QWORD *)v108 + 2) + 1, 1, (unint64_t)v108);
          v64 = *((_QWORD *)v108 + 2);
          v63 = *((_QWORD *)v108 + 3);
          if (v64 >= v63 >> 1)
            v108 = (char *)sub_100D0EC28(v63 > 1, v64 + 1, 1, (unint64_t)v108);
          v65 = v108;
          *((_QWORD *)v108 + 2) = v64 + 1;
          v107(&v65[v98 + v64 * v47], v99, v2);
          v66 = v60;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
          v68 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v67 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v68 >= v67 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
          v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66);
          specialized Array._endMutation()(v69);

          v37 = v112;
LABEL_25:
          v45 = v103;
          v42 = v101;
          goto LABEL_6;
        }
        v46 = swift_bridgeObjectRelease(v57);
      }
      v37 = v112;
LABEL_6:
      ++v43;
      (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v44, v2, v46);
      if (v43 == v105)
      {
        v1 = v106;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v102)(v45, 1, 1, v2, v41);
        goto LABEL_49;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v37 + 56))(v103, 1, 1, v2, v41);
LABEL_49:
  swift_release(v42);
LABEL_50:
  v95 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs) = v115;
  swift_bridgeObjectRelease(v95);
  v96 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs) = v108;
  swift_bridgeObjectRelease(v96);
  v97 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems) = v114;
  swift_bridgeObjectRelease(v97);
}

double sub_100741818(void *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  double result;
  char v15[48];
  uint64_t v16;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v7 + 32) = a1;
  v16 = v7;
  specialized Array._endMutation()(v7);
  v8 = v16;
  v9 = a1;
  if ((a3 & 1) != 0)
    a2 = NSNotFound.getter(v9);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
  inited = swift_initStackObject(v10, v15);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = v8;
  v12 = sub_1008E00A0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_bridgeObjectRetain(v8);
  v13 = sub_1004B804C((uint64_t *)&unk_101406AF0);
  swift_arrayDestroy(inited + 32, 1, v13);
  sub_100741920(v12);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

uint64_t sub_100741920(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t *, __n128);
  __n128 v64;
  void (*v65)(uint64_t *, _QWORD);
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  int64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  BOOL v76;
  unint64_t v77;
  int64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v102;
  unint64_t v103;
  uint64_t v104;
  _BOOL8 v105;
  uint64_t v106;
  char v107;
  unint64_t v108;
  char v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  void (*v115)(char *, uint64_t, __n128);
  uint64_t v116;
  uint64_t result;
  CKRecordID v118;
  Swift::String v119;
  _QWORD v120[3];
  uint64_t v121;
  int64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  int64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139[6];

  v3 = type metadata accessor for UUID(0);
  v135 = *(_QWORD *)(v3 - 8);
  v136 = v3;
  v4 = __chkstk_darwin(v3);
  v137 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v121 - v6;
  v8 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v8);
  v133 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v121 = *(_QWORD *)(v126 - 8);
  v10 = __chkstk_darwin(v126);
  v125 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v123 = (char *)&v121 - v13;
  v138 = v1;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext]
    && ((*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v138) + 0x2F0))(v12) & 1) != 0)
  {
    goto LABEL_137;
  }
  v14 = *(_QWORD *)(a1 + 64);
  v129 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v134 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  v130 = a1;
  while (v17)
  {
    v19 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v20 = v19 | (v18 << 6);
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_123;
LABEL_28:
    v24 = sub_100842E60(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v20));
    if ((v25 & 1) == 0)
      goto LABEL_124;
    v26 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v24);
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v32 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v24);
      else
        v32 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v24));
      v27 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (!v27)
        goto LABEL_6;
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v26);
      if (!v27)
        goto LABEL_6;
    }
    if (v27 < 1)
      goto LABEL_125;
    v28 = 0;
    v29 = *(void (**)(void))((swift_isaMask & *(_QWORD *)v138) + 0x4F0);
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v26);
      else
        v30 = *(id *)(v26 + 8 * v28 + 32);
      v31 = v30;
      ++v28;
      v29();

    }
    while (v27 != v28);
LABEL_6:
    swift_bridgeObjectRelease(v26);
    a1 = v130;
  }
  v21 = v18 + 1;
  if (__OFADD__(v18, 1))
    goto LABEL_128;
  if (v21 >= v134)
    goto LABEL_42;
  v22 = *(_QWORD *)(v129 + 8 * v21);
  ++v18;
  if (v22)
    goto LABEL_27;
  v18 = v21 + 1;
  if (v21 + 1 >= v134)
    goto LABEL_42;
  v22 = *(_QWORD *)(v129 + 8 * v18);
  if (v22)
    goto LABEL_27;
  v18 = v21 + 2;
  if (v21 + 2 >= v134)
    goto LABEL_42;
  v22 = *(_QWORD *)(v129 + 8 * v18);
  if (v22)
    goto LABEL_27;
  v18 = v21 + 3;
  if (v21 + 3 >= v134)
    goto LABEL_42;
  v22 = *(_QWORD *)(v129 + 8 * v18);
  if (v22)
    goto LABEL_27;
  v18 = v21 + 4;
  if (v21 + 4 >= v134)
    goto LABEL_42;
  v22 = *(_QWORD *)(v129 + 8 * v18);
  if (v22)
  {
LABEL_27:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_123;
    goto LABEL_28;
  }
  v23 = v21 + 5;
  if (v23 >= v134)
    goto LABEL_42;
  v22 = *(_QWORD *)(v129 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      goto LABEL_134;
    if (v18 >= v134)
      break;
    v22 = *(_QWORD *)(v129 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_42:
  swift_release(a1);
  v128 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v33 = *(_QWORD *)&v138[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v127 = type metadata accessor for CRLContainerItemData(0);
  v34 = swift_dynamicCastClassUnconditional(v33, v127, 0, 0, 0);
  v35 = (uint64_t)v133;
  (*(void (**)(void))(*(_QWORD *)v34 + 680))();
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
  v37 = v123;
  v38 = v126;
  v36(v123, v35, v126);
  sub_1004B84A4(v35, type metadata accessor for CRLContainerItemCRDTData);
  v36(v125, (uint64_t)v37, v38);
  swift_bridgeObjectRetain(a1);
  v139[0] = (uint64_t)sub_1005FF0EC(v39);
  v40 = 0;
  sub_100748BEC(v139);
  v41 = a1;
  swift_bridgeObjectRelease(a1);
  v42 = v139[0];
  v133 = *(char **)(v139[0] + 16);
  if (v133)
  {
    v43 = 0;
    v131 = v139[0];
    v132 = v139[0] + 32;
    do
    {
      if (v43 >= *(_QWORD *)(v42 + 16))
        goto LABEL_129;
      if (!*(_QWORD *)(v41 + 16))
      {
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
        goto LABEL_135;
      }
      v46 = *(_QWORD *)(v132 + 8 * v43);
      v47 = sub_100842E60(v46);
      if ((v48 & 1) == 0)
        goto LABEL_131;
      v49 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v47);
      __chkstk_darwin(v47);
      v120[2] = v123;
      swift_bridgeObjectRetain(v49);
      v50 = (uint64_t)sub_100767A40((uint64_t (*)(id *))sub_10074BAC4, v120, v49);
      v51 = v50;
      if ((unint64_t)v50 >> 62)
      {
        if (v50 >= 0)
          v50 &= 0xFFFFFFFFFFFFFF8uLL;
        v52 = _CocoaArrayWrapper.endIndex.getter(v50);
        if (v52)
        {
LABEL_51:
          v139[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_100600724(0, v52 & ~(v52 >> 63), 0);
          if (v52 < 0)
            goto LABEL_132;
          v134 = v43;
          v124 = v40;
          v53 = 0;
          v54 = (_QWORD *)v139[0];
          do
          {
            if ((v51 & 0xC000000000000001) != 0)
              v55 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v53, v51);
            else
              v55 = *(id *)(v51 + 8 * v53 + 32);
            v56 = v55;
            (*(void (**)(void))((swift_isaMask & *v55) + 0x88))();

            v139[0] = (uint64_t)v54;
            v58 = v54[2];
            v57 = v54[3];
            if (v58 >= v57 >> 1)
            {
              sub_100600724(v57 > 1, v58 + 1, 1);
              v54 = (_QWORD *)v139[0];
            }
            ++v53;
            v54[2] = v58 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v135 + 32))((unint64_t)v54+ ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(_QWORD *)(v135 + 72) * v58, v7, v136);
          }
          while (v52 != v53);
          swift_bridgeObjectRelease(v51);
          v40 = v124;
          v42 = v131;
          v43 = v134;
          goto LABEL_64;
        }
      }
      else
      {
        v52 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v52)
          goto LABEL_51;
      }
      swift_bridgeObjectRelease(v51);
      v54 = _swiftEmptyArrayStorage;
LABEL_64:
      if (v46 == NSNotFound.getter(v59) || CROrderedSet.count.getter(v126) < v46)
      {
        v139[0] = (uint64_t)v54;
        v44 = sub_1004B804C(&qword_1013F0310);
        v45 = sub_1004CBA30(&qword_1013F0318, &qword_1013F0310, (uint64_t)&protocol conformance descriptor for [A]);
        CROrderedSet.append<A>(contentsOf:)(v139, v126, v44, v45);
      }
      else
      {
        v139[0] = (uint64_t)v54;
        v60 = sub_1004B804C(&qword_1013F0310);
        v61 = sub_1004CBA30(&qword_1013F0318, &qword_1013F0310, (uint64_t)&protocol conformance descriptor for [A]);
        CROrderedSet.insert<A>(contentsOf:at:)(v139, v46, v126, v60, v61);
      }
      swift_bridgeObjectRelease(v54);
      ++v43;
      v41 = v130;
    }
    while ((char *)v43 != v133);
  }
  v124 = v40;
  swift_release(v42);
  v62 = *(_QWORD *)&v138[v128];
  v63 = *(uint64_t (**)(uint64_t *, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v62, v127, 0, 0, 0)+ 696);
  v64 = swift_retain(v62);
  v65 = (void (*)(uint64_t *, _QWORD))v63(v139, v64);
  (*(void (**)(uint64_t, char *, uint64_t))(v121 + 24))(v66, v125, v126);
  v65(v139, 0);
  swift_release(v62);
  v67 = (_QWORD *)v130;
  v68 = 1 << *(_BYTE *)(v130 + 32);
  v69 = -1;
  if (v68 < 64)
    v69 = ~(-1 << v68);
  v70 = v69 & *(_QWORD *)(v130 + 64);
  v71 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
  v132 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
  v133 = (char *)OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v131 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs;
  v122 = (unint64_t)(v68 + 63) >> 6;
  swift_bridgeObjectRetain(v130);
  v72 = 0;
  while (v70)
  {
    v73 = __clz(__rbit64(v70));
    v74 = (v70 - 1) & v70;
    v75 = v73 | (v72 << 6);
    if (!v67[2])
      goto LABEL_126;
LABEL_89:
    v79 = sub_100842E60(*(_QWORD *)(v67[6] + 8 * v75));
    if ((v80 & 1) == 0)
      goto LABEL_127;
    v127 = v74;
    v128 = v72;
    v81 = *(_QWORD *)(v67[7] + 8 * v79);
    if ((unint64_t)v81 >> 62)
    {
      if (v81 < 0)
        v113 = *(_QWORD *)(v67[7] + 8 * v79);
      else
        v113 = v81 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(v67[7] + 8 * v79), 2);
      v82 = _CocoaArrayWrapper.endIndex.getter(v113);
      swift_bridgeObjectRelease(v81);
      if (!v82)
        goto LABEL_70;
LABEL_92:
      v134 = v81 & 0xC000000000000001;
      v83 = 4;
      while (1)
      {
        if (v134)
          v92 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v83 - 4, v81);
        else
          v92 = *(id *)(v81 + 8 * v83);
        v93 = v92;
        v94 = v83 - 3;
        if (__OFADD__(v83 - 4, 1))
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
          goto LABEL_130;
        }
        v95 = v82;
        v96 = v137;
        (*(void (**)(void))((swift_isaMask & *v92) + 0x88))();
        v97 = v71;
        v98 = *(_QWORD *)&v138[v71];
        v99 = v93;
        swift_bridgeObjectRetain(v98);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v100);
        v139[0] = v98;
        v103 = sub_100842EFC(v96);
        v104 = *(_QWORD *)(v98 + 16);
        v105 = (v102 & 1) == 0;
        v106 = v104 + v105;
        if (__OFADD__(v104, v105))
          goto LABEL_121;
        v107 = v102;
        if (*(_QWORD *)(v98 + 24) >= v106)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v110 = (_QWORD *)v139[0];
            if ((v102 & 1) != 0)
              goto LABEL_93;
          }
          else
          {
            sub_10082CAB4();
            v110 = (_QWORD *)v139[0];
            if ((v107 & 1) != 0)
              goto LABEL_93;
          }
        }
        else
        {
          sub_100814E54(v106, isUniquelyReferenced_nonNull_native);
          v108 = sub_100842EFC(v137);
          if ((v107 & 1) != (v109 & 1))
            goto LABEL_136;
          v103 = v108;
          v110 = (_QWORD *)v139[0];
          if ((v107 & 1) != 0)
          {
LABEL_93:
            v84 = v110[7];
            v85 = 8 * v103;

            *(_QWORD *)(v84 + v85) = v99;
            goto LABEL_94;
          }
        }
        v110[(v103 >> 6) + 8] |= 1 << v103;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v135 + 16))(v110[6] + *(_QWORD *)(v135 + 72) * v103, v137, v136);
        *(_QWORD *)(v110[7] + 8 * v103) = v99;
        v111 = v110[2];
        v76 = __OFADD__(v111, 1);
        v112 = v111 + 1;
        if (v76)
          goto LABEL_122;
        v110[2] = v112;
LABEL_94:
        v86 = swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(uint64_t, uint64_t, __n128))(v135 + 8))(v137, v136, v86);
        v87 = v138;
        v88 = *(_QWORD *)&v133[(_QWORD)v138];
        *(_QWORD *)&v133[(_QWORD)v138] = 0;
        swift_bridgeObjectRelease(v88);
        v89 = *(_QWORD *)&v87[v132];
        *(_QWORD *)&v87[v132] = 0;
        swift_bridgeObjectRelease(v89);
        v90 = *(_QWORD *)&v87[v131];
        *(_QWORD *)&v87[v131] = 0;
        swift_bridgeObjectRelease(v90);
        v71 = v97;
        v91 = *(_QWORD *)&v87[v97];
        *(_QWORD *)&v87[v97] = v110;
        objc_msgSend(v87, "_setParentItemReferenceWithItem:parent:", v99, v87, swift_bridgeObjectRelease(v91).n128_f64[0]);
        objc_msgSend(v87, "_setParentItemUUIDWithItem:parent:", v99, v87);

        ++v83;
        v82 = v95;
        if (v94 == v95)
          goto LABEL_70;
      }
    }
    v82 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v81);
    if (v82)
      goto LABEL_92;
LABEL_70:
    swift_bridgeObjectRelease(v81);
    v67 = (_QWORD *)v130;
    v70 = v127;
    v72 = v128;
  }
  v76 = __OFADD__(v72++, 1);
  if (v76)
    goto LABEL_133;
  if (v72 >= v122)
  {
LABEL_119:
    v114 = swift_release(v67);
    v115 = *(void (**)(char *, uint64_t, __n128))(v121 + 8);
    v116 = v126;
    v115(v125, v126, v114);
    return ((uint64_t (*)(char *, uint64_t))v115)(v123, v116);
  }
  v77 = *(_QWORD *)(v129 + 8 * v72);
  if (v77)
  {
LABEL_88:
    v74 = (v77 - 1) & v77;
    v75 = __clz(__rbit64(v77)) + (v72 << 6);
    if (!v67[2])
      goto LABEL_126;
    goto LABEL_89;
  }
  v78 = v72 + 1;
  if (v72 + 1 >= v122)
    goto LABEL_119;
  v77 = *(_QWORD *)(v129 + 8 * v78);
  if (v77)
    goto LABEL_87;
  v78 = v72 + 2;
  if (v72 + 2 >= v122)
    goto LABEL_119;
  v77 = *(_QWORD *)(v129 + 8 * v78);
  if (v77)
    goto LABEL_87;
  v78 = v72 + 3;
  if (v72 + 3 >= v122)
    goto LABEL_119;
  v77 = *(_QWORD *)(v129 + 8 * v78);
  if (v77)
    goto LABEL_87;
  v78 = v72 + 4;
  if (v72 + 4 >= v122)
    goto LABEL_119;
  v77 = *(_QWORD *)(v129 + 8 * v78);
  if (v77)
    goto LABEL_87;
  v78 = v72 + 5;
  if (v72 + 5 >= v122)
    goto LABEL_119;
  v77 = *(_QWORD *)(v129 + 8 * v78);
  if (v77)
  {
LABEL_87:
    v72 = v78;
    goto LABEL_88;
  }
  while (1)
  {
    v72 = v78 + 1;
    if (__OFADD__(v78, 1))
      break;
    if (v72 >= v122)
      goto LABEL_119;
    v77 = *(_QWORD *)(v129 + 8 * v72);
    ++v78;
    if (v77)
      goto LABEL_88;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v136);
  __break(1u);
  swift_release(v139[0]);
  __break(1u);
LABEL_137:
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v118, v119);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

id sub_100742678(_QWORD *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(__n128);
  uint64_t v34;
  void (*v35)(__n128);
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_BYTE *, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  _QWORD *v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  void *v58;
  uint64_t v59;
  uint64_t inited;
  uint64_t v61;
  void (*v62)(__n128);
  __n128 v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id result;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(__n128);
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(_BYTE *, uint64_t);
  uint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CKRecordID v135;
  Swift::String v136;
  _BYTE v137[12];
  int v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  char *v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v3 = v2;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v140 = &v137[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v145 = *(_QWORD *)(v8 - 8);
  v146 = v8;
  __chkstk_darwin(v8);
  v144 = &v137[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v10);
  v143 = &v137[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v152 = type metadata accessor for UUID(0);
  v150 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v139 = &v137[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v137[-v14];
  __chkstk_darwin(v16);
  v142 = &v137[-v17];
  __chkstk_darwin(v18);
  v147 = &v137[-v19];
  v20 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v20);
  v22 = &v137[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v23);
  v25 = &v137[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v28 = &v137[-v27];
  v30 = __chkstk_darwin(v29);
  v32 = &v137[-v31];
  if ((a2 & 1) != 0 && *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    __break(1u);
    goto LABEL_18;
  }
  v33 = *(void (**)(__n128))((swift_isaMask & *a1) + 0xB8);
  v151 = a1;
  v33(v30);
  v148 = (char *)OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v149 = v3;
  v34 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v35 = *(void (**)(__n128))(*(_QWORD *)v34 + 256);
  v36 = swift_retain(v34);
  v35(v36);
  v37 = swift_release(v34);
  v38 = v150;
  v39 = v152;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))(v150 + 56))(v28, 0, 1, v152, v37);
  v40 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_1004CB7BC((uint64_t)v32, (uint64_t)v22, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC((uint64_t)v28, v40, (uint64_t *)&unk_1013E1A50);
  v41 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48);
  v42 = v41(v22, 1, v39);
  v141 = v15;
  if (v42 == 1)
  {
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v32, (uint64_t *)&unk_1013E1A50);
    if (v41((_BYTE *)v40, 1, v39) == 1)
    {
      sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E1A50);
      v43 = v150;
      v44 = v151;
      a1 = v149;
      v45 = v147;
      goto LABEL_8;
    }
    goto LABEL_20;
  }
  sub_1004CB7BC((uint64_t)v22, (uint64_t)v25, (uint64_t *)&unk_1013E1A50);
  if (v41((_BYTE *)v40, 1, v39) == 1)
  {
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v32, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v25, v39);
LABEL_20:
    sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013F62D0);
    v43 = v150;
    v44 = v151;
    a1 = v149;
    v45 = v147;
    goto LABEL_21;
  }
  v45 = v147;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v38 + 32))(v147, v40, v39);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v138 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v45);
  v46 = v25;
  v47 = v38;
  v48 = *(void (**)(_BYTE *, uint64_t))(v38 + 8);
  v48(v45, v39);
  sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800((uint64_t)v32, (uint64_t *)&unk_1013E1A50);
  v48(v46, v39);
  sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E1A50);
  v44 = v151;
  a1 = v149;
  v43 = v47;
  if ((v138 & 1) != 0)
  {
LABEL_8:
    v49 = *(_QWORD *)&v148[(_QWORD)a1];
    v50 = type metadata accessor for CRLContainerItemData(0);
    v51 = swift_dynamicCastClassUnconditional(v49, v50, 0, 0, 0);
    v52 = (uint64_t)v143;
    (*(void (**)(void))(*(_QWORD *)v51 + 680))();
    v54 = v144;
    v53 = v145;
    v55 = v146;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v145 + 16))(v144, v52, v146);
    v56 = sub_1004B84A4(v52, type metadata accessor for CRLContainerItemCRDTData);
    v150 = *(_QWORD *)((swift_isaMask & *v44) + 0x88);
    ((void (*)(uint64_t))v150)(v56);
    LOBYTE(v52) = CROrderedSet.contains(_:)(v45, v55);
    v57 = *(_BYTE **)(v43 + 8);
    ((void (*)(_BYTE *, uint64_t))v57)(v45, v152);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v54, v55);
    if ((v52 & 1) != 0)
      return sub_100743450(v44);
    v32 = v57;
    if (qword_1013DD8B8 == -1)
    {
LABEL_10:
      swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v155, 0, 0);
      v58 = (void *)static OS_os_log.boardItemLifecycle;
      v59 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v59, &v154);
      *(_OWORD *)(inited + 16) = xmmword_100F05060;
      v61 = *(_QWORD *)&v148[(_QWORD)a1];
      v62 = *(void (**)(__n128))(*(_QWORD *)v61 + 256);
      v148 = v58;
      v63 = swift_retain(v61);
      v64 = v142;
      v62(v63);
      swift_release(v61);
      v66 = UUID.uuidString.getter(v65);
      v68 = v67;
      v69 = v152;
      ((void (*)(_BYTE *, uint64_t))v32)(v64, v152);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v70 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v66;
      v146 = inited + 32;
      *(_QWORD *)(inited + 64) = v70;
      *(_QWORD *)(inited + 40) = v68;
      v71 = a1;
      v72 = objc_msgSend(v71, "description");
      v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v75 = v74;

      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v70;
      *(_QWORD *)(inited + 72) = v73;
      *(_QWORD *)(inited + 80) = v75;
      v76 = v141;
      v77 = v151;
      v78 = ((uint64_t (*)(void))v150)();
      v79 = UUID.uuidString.getter(v78);
      v81 = v80;
      ((void (*)(_BYTE *, uint64_t))v32)(v76, v69);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v70;
      *(_QWORD *)(inited + 112) = v79;
      *(_QWORD *)(inited + 120) = v81;
      v82 = v77;
      v83 = objc_msgSend(v82, "description");
      v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
      v86 = v85;

      *(_QWORD *)(inited + 176) = &type metadata for String;
      *(_QWORD *)(inited + 184) = v70;
      *(_QWORD *)(inited + 152) = v84;
      *(_QWORD *)(inited + 160) = v86;
      v87 = (*(uint64_t (**)(void))((swift_isaMask & *v82) + 0x2E8))();
      if (v87)
      {
        v89 = (void *)v87;
        v90 = *(_QWORD *)(v87 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
        v91 = v90 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v90 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v153, 0, 0);
        v92 = v91;
        v93 = v140;
        sub_1004B8460(v92, (uint64_t)v140, type metadata accessor for CRLBoardCRDTData);
        swift_retain(v90);
        v94 = sub_1004B804C(&qword_1013E1A80);
        v95 = v147;
        CRRegister.wrappedValue.getter(v94);
        sub_1004B84A4((uint64_t)v93, type metadata accessor for CRLBoardCRDTData);

        swift_release(v90);
        v97 = UUID.uuidString.getter(v96);
        v99 = v98;
        ((void (*)(_BYTE *, uint64_t))v32)(v95, v152);
        v100 = (uint64_t *)(inited + 192);
        *(_QWORD *)(inited + 216) = &type metadata for String;
        *(_QWORD *)(inited + 224) = v70;
        if (v99)
        {
          *v100 = v97;
          v44 = v151;
          v101 = v148;
          v102 = v146;
LABEL_15:
          *(_QWORD *)(inited + 200) = v99;
          v103 = static os_log_type_t.default.getter(v88);
          sub_100A06EBC((uint64_t)v101, &_mh_execute_header, v103, "Parent %{public}@%{public}@ tried to fixup insert a child %{public}@%{public}@ we don't think we have. Board: %{public}@", 120, 2, inited);
          swift_setDeallocating(inited);
          v104 = *(_QWORD *)(inited + 16);
          v105 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v102, v104, v105);

          return sub_100743450(v44);
        }
      }
      else
      {
        v100 = (uint64_t *)(inited + 192);
        *(_QWORD *)(inited + 216) = &type metadata for String;
        *(_QWORD *)(inited + 224) = v70;
      }
      v44 = v151;
      v101 = v148;
      v102 = v146;
      *v100 = 7104878;
      v99 = 0xE300000000000000;
      goto LABEL_15;
    }
LABEL_18:
    swift_once(&qword_1013DD8B8, sub_100A06704);
    goto LABEL_10;
  }
LABEL_21:
  v107 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v108 = swift_initStackObject(v107, &v156);
  *(_OWORD *)(v108 + 16) = xmmword_100EF5E30;
  v109 = *(_QWORD *)&v148[(_QWORD)a1];
  v110 = *(void (**)(__n128))(*(_QWORD *)v109 + 256);
  v111 = swift_retain(v109);
  v110(v111);
  swift_release(v109);
  v113 = UUID.uuidString.getter(v112);
  v115 = v114;
  v116 = *(void (**)(_BYTE *, uint64_t))(v43 + 8);
  v117 = v152;
  v116(v45, v152);
  *(_QWORD *)(v108 + 56) = &type metadata for String;
  v118 = sub_1004CFC2C();
  *(_QWORD *)(v108 + 64) = v118;
  *(_QWORD *)(v108 + 32) = v113;
  *(_QWORD *)(v108 + 40) = v115;
  v119 = a1;
  v120 = v44;
  v121 = objc_msgSend(v119, "description");
  v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
  v124 = v123;

  *(_QWORD *)(v108 + 96) = &type metadata for String;
  *(_QWORD *)(v108 + 104) = v118;
  *(_QWORD *)(v108 + 72) = v122;
  *(_QWORD *)(v108 + 80) = v124;
  v125 = v139;
  v126 = (*(uint64_t (**)(void))((swift_isaMask & *v120) + 0x88))();
  v127 = UUID.uuidString.getter(v126);
  v129 = v128;
  v116(v125, v117);
  *(_QWORD *)(v108 + 136) = &type metadata for String;
  *(_QWORD *)(v108 + 144) = v118;
  *(_QWORD *)(v108 + 112) = v127;
  *(_QWORD *)(v108 + 120) = v129;
  v130 = v120;
  v131 = objc_msgSend(v130, "description");
  v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
  v134 = v133;

  *(_QWORD *)(v108 + 176) = &type metadata for String;
  *(_QWORD *)(v108 + 184) = v118;
  *(_QWORD *)(v108 + 152) = v132;
  *(_QWORD *)(v108 + 160) = v134;
  sub_100757E04(&_mh_execute_header, (uint64_t)"fixUp(insertedChild:expectTransactionContext:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 235, "Parent %@%@ tried to fixup insert a child %@%@ that doesn't think we're its parent", 82, 2u, v108);
  sub_100518FC0(v108, (uint64_t)"Parent %@%@ tried to fixup insert a child %@%@ that doesn't think we're its parent");
  sub_100519194(v108, (uint64_t)"fixUp(insertedChild:expectTransactionContext:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 235, (uint64_t)"Parent %@%@ tried to fixup insert a child %@%@ that doesn't think we're its parent", 82, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v135, v136);
  result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

double sub_10074315C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  void (*v24)(__n128);
  id v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  _BYTE v40[112];
  _BYTE v41[24];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v14);
  v16 = &v40[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a2 & 1) != 0 && *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    __break(1u);
    goto LABEL_8;
  }
  v39 = v6;
  v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v18 = type metadata accessor for CRLContainerItemData(0);
  v19 = swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v19 + 680))();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLContainerItemCRDTData);
  LOBYTE(v17) = CROrderedSet.contains(_:)(a1, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v17 & 1) != 0)
  {
    if (qword_1013DD8B8 == -1)
    {
LABEL_5:
      swift_beginAccess(&static OS_os_log.boardItemLifecycle, v41, 0, 0);
      v20 = (void *)static OS_os_log.boardItemLifecycle;
      v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v21, v40);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v23 = *(_QWORD *)(v3 + v6);
      v24 = *(void (**)(__n128))(*(_QWORD *)v23 + 256);
      v25 = v20;
      v26 = swift_retain(v23);
      v24(v26);
      swift_release(v23);
      v28 = UUID.uuidString.getter(v27);
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v39);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v31 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v31;
      *(_QWORD *)(inited + 32) = v28;
      *(_QWORD *)(inited + 40) = v30;
      v32 = UUID.uuidString.getter(v31);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v31;
      *(_QWORD *)(inited + 72) = v32;
      *(_QWORD *)(inited + 80) = v33;
      v35 = static os_log_type_t.default.getter(v34);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v35, "Parent %{public}@ tried to fixup remove a child %{public}@ we still think we have.", 82, 2, inited);
      swift_setDeallocating(inited);
      v36 = *(_QWORD *)(inited + 16);
      v37 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v36, v37);

      return sub_100746320(a1);
    }
LABEL_8:
    swift_once(&qword_1013DD8B8, sub_100A06704);
    goto LABEL_5;
  }
  return sub_100746320(a1);
}

id sub_100743450(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))((swift_isaMask & *a1) + 0x88))(v6);
  v9 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items];
  v11 = a1;
  swift_bridgeObjectRetain(v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
  v22 = v10;
  sub_100825A14((uint64_t)v11, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  v14 = v22;
  v15 = swift_bridgeObjectRelease(0x8000000000000000);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v15);
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  swift_bridgeObjectRelease(v18);
  v19 = *(_QWORD *)&v2[v9];
  *(_QWORD *)&v2[v9] = v14;
  return objc_msgSend(v2, "_setParentItemReferenceWithItem:parent:", v11, v2, swift_bridgeObjectRelease(v19).n128_f64[0]);
}

void sub_10074359C(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t (*v47)(_BYTE *, __n128);
  __n128 v48;
  void (*v49)(_BYTE *, _QWORD);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  double v53;
  CKRecordID v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::Int v59;
  void (*v60)(uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[32];
  char v72[112];
  uint64_t v73;

  v73 = a5;
  LODWORD(v60) = a4;
  v65 = a3;
  v69 = a2;
  v67 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v9);
  v59 = (Swift::Int)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v11, v72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v13 = a1;
  v14 = objc_msgSend(v13, "description");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;
  v68 = v13;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v18 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 64) = v18;
  *(_QWORD *)(inited + 40) = v17;
  v19 = v5;
  v20 = objc_msgSend(v19, "description");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v18;
  v24 = v69;
  *(_QWORD *)(inited + 72) = v21;
  *(_QWORD *)(inited + 80) = v23;
  type metadata accessor for CRLContainerItem(0);
  if ((static NSObject.== infix(_:_:)(v24, v19) & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"reparentItem(item:fromOldParent:toDestinationIndex:withTransaction:)", 68, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 284, "Should not try to reparent an item (%{public}@) to its current parent (%{public}@).", 83, 2u, inited);
    sub_100518FC0(inited, (uint64_t)"Should not try to reparent an item (%{public}@) to its current parent (%{public}@).");
    sub_100519194(inited, (uint64_t)"reparentItem(item:fromOldParent:toDestinationIndex:withTransaction:)", 68, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 284, (uint64_t)"Should not try to reparent an item (%{public}@) to its current parent (%{public}@).", 83, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v54, v55);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    swift_setDeallocating(inited);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v25);
    v26 = v70;
    sub_100DBEE64((uint64_t)v19, (uint64_t)&off_10127C5E0);
    if (!v26)
    {
      sub_100DBEE64(v24, (uint64_t)&off_10127C5E0);
      sub_100DBEE64((uint64_t)v68, (uint64_t)&off_10127C5E0);
      LODWORD(v70) = v60 & 1;
      v27 = v24;
      v58 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v28 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v57 = type metadata accessor for CRLContainerItemData(0);
      v29 = swift_dynamicCastClassUnconditional(v28, v57, 0, 0, 0);
      v30 = v59;
      (*(void (**)(void))(*(_QWORD *)v29 + 680))();
      v31 = v62;
      v32 = v61;
      v33 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v30, v64);
      v34 = sub_1004B84A4(v30, type metadata accessor for CRLContainerItemCRDTData);
      v35 = (uint64_t)v66;
      v60 = *(void (**)(uint64_t))((swift_isaMask & *v68) + 0x88);
      v60(v34);
      v59 = sub_100C1A168(v35);
      v37 = v36;
      v38 = v35;
      v39 = v33;
      v40 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v40(v38, v67);
      v41 = v32;
      v42 = v27;
      v43 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v41, v39);
      if ((v37 & 1) == 0)
      {
        v45 = v40;
        v46 = *(_QWORD *)(v42 + v58);
        v47 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v46, v57, 0, 0, 0)+ 696);
        v48 = swift_retain(v46);
        v49 = (void (*)(_BYTE *, _QWORD))v47(v71, v48);
        CROrderedSet.remove(at:)(v59);
        v49(v71, 0);
        v50 = v46;
        v40 = v45;
        v44 = swift_release(v50);
      }
      v51 = (uint64_t)v66;
      v52 = v68;
      ((void (*)(uint64_t, __n128))v60)(v43, v44);
      v53 = sub_100746320(v51);
      ((void (*)(uint64_t, uint64_t, double))v40)(v51, v67, v53);
      sub_100741818(v52, v65, v70);
      sub_100DB0D78((uint64_t)v19, (uint64_t)&off_10127C5E0, 2u);
      sub_100DB0D78(v42, (uint64_t)&off_10127C5E0, 2u);
      sub_100DB0D78((uint64_t)v68, (uint64_t)&off_10127C5E0, 2u);
    }
  }
}

void sub_100743B84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::Int v13;
  char v14;
  id v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__n128);
  __n128 v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t (*v36)(_BYTE *, __n128);
  __n128 v37;
  void (*v38)(_BYTE *, _QWORD);
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void);
  id v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[32];
  _BYTE v65[80];
  uint64_t v66;

  v5 = v3;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DBEE64(v5, (uint64_t)&off_10127C5E0);
  if (!v4)
  {
    v66 = a3;
    sub_10074410C(a2, a1);
    v61 = v15;
    if (v14)
    {
      if (v14 == 1)
      {
        v16 = *(uint64_t (**)(void))(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        v17 = type metadata accessor for CRLContainerItemData(0);
        v60 = v16;
        v18 = swift_dynamicCastClassUnconditional(v16, v17, 0, 0, 0);
        v19 = *(void (**)(__n128))((swift_isaMask & *a1) + 0x88);
        v20 = swift_retain(v16);
        v19(v20);
        v21 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v18 + 696))(v64);
        v22 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
        v23 = v61;
        CROrderedSet.insert(_:at:)(v12, v61, v22);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        v21(v64, 0);
        swift_release(v60);
        if (qword_1013DD8B8 != -1)
          swift_once(&qword_1013DD8B8, sub_100A06704);
        swift_beginAccess(&static OS_os_log.boardItemLifecycle, v64, 0, 0);
        v24 = (void *)static OS_os_log.boardItemLifecycle;
        v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v25, &v63);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 56) = &type metadata for Int;
        *(_QWORD *)(inited + 64) = &protocol witness table for Int;
        *(_QWORD *)(inited + 32) = v23;
        v27 = v24;
        v29 = static os_log_type_t.default.getter(v28);
        sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "CRLContainerItem reorder resulted in inserting the child into index %{public}d", 78, 2, inited);
        swift_setDeallocating(inited);
        v30 = sub_1004B804C(&qword_1013E0190);
        v31 = inited + 32;
        v32 = 1;
      }
      else
      {
        if (qword_1013DD8B8 != -1)
          swift_once(&qword_1013DD8B8, sub_100A06704);
        swift_beginAccess(&static OS_os_log.boardItemLifecycle, v64, 0, 0);
        v45 = (void *)static OS_os_log.boardItemLifecycle;
        v46 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v47 = swift_initStackObject(v46, v65);
        *(_OWORD *)(v47 + 16) = xmmword_100EF5E40;
        v60 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x88);
        v61 = v45;
        v48 = v60();
        v49 = UUID.uuidString.getter(v48);
        v51 = v50;
        v52 = *(void (**)(char *, uint64_t))(v10 + 8);
        v27 = v61;
        v52(v12, v9);
        *(_QWORD *)(v47 + 56) = &type metadata for String;
        v53 = sub_1004CFC2C();
        *(_QWORD *)(v47 + 64) = v53;
        *(_QWORD *)(v47 + 32) = v49;
        *(_QWORD *)(v47 + 40) = v51;
        v54 = static os_log_type_t.error.getter(v53);
        sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v54, "Aborting CRLContainerItem reorder operation for item: %{public}@", 64, 2, v47);
        swift_setDeallocating(v47);
        v55 = *(_QWORD *)(v47 + 16);
        v30 = sub_1004B804C(&qword_1013E0190);
        v31 = v47 + 32;
        v32 = v55;
      }
    }
    else
    {
      v33 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v34 = v13;
      v35 = type metadata accessor for CRLContainerItemData(0);
      v36 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v33, v35, 0, 0, 0)+ 696);
      v37 = swift_retain(v33);
      v38 = (void (*)(_BYTE *, _QWORD))v36(v64, v37);
      sub_1004B804C((uint64_t *)&unk_1013F02F0);
      v39 = v61;
      CROrderedSet.move(from:to:)((Swift::Int)v61, v34);
      v38(v64, 0);
      swift_release(v33);
      if (qword_1013DD8B8 != -1)
        swift_once(&qword_1013DD8B8, sub_100A06704);
      swift_beginAccess(&static OS_os_log.boardItemLifecycle, v64, 0, 0);
      v40 = (void *)static OS_os_log.boardItemLifecycle;
      v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v42 = swift_initStackObject(v41, &v62);
      *(_OWORD *)(v42 + 16) = xmmword_100EF5A10;
      *(_QWORD *)(v42 + 56) = &type metadata for Int;
      *(_QWORD *)(v42 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v42 + 32) = v39;
      *(_QWORD *)(v42 + 96) = &type metadata for Int;
      *(_QWORD *)(v42 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v42 + 72) = v34;
      v27 = v40;
      v44 = static os_log_type_t.default.getter(v43);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v44, "CRLContainerItem reorder child from %{public}d to %{public}d", 60, 2, v42);
      swift_setDeallocating(v42);
      v30 = sub_1004B804C(&qword_1013E0190);
      v31 = v42 + 32;
      v32 = 2;
    }
    swift_arrayDestroy(v31, v32, v30);

    v56 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems) = 0;
    swift_bridgeObjectRelease(v56);
    v57 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs) = 0;
    swift_bridgeObjectRelease(v57);
    v58 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs) = 0;
    swift_bridgeObjectRelease(v58);
    sub_100DB0D78(v5, (uint64_t)&off_10127C5E0, 2u);
  }
}

void sub_10074410C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void (*v30)(_BYTE *, uint64_t);
  uint64_t v31;
  double *v32;
  uint64_t v33;
  double *v34;
  void (*v35)(__n128);
  __n128 v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t);
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  id v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t);
  uint64_t v58;
  double *v59;
  uint64_t v60;
  double *v61;
  void (*v62)(__n128);
  __n128 v63;
  uint64_t v64;
  char v65;
  char v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t inited;
  id v104;
  uint64_t v105;
  uint64_t v106;
  double *v107;
  unint64_t v108;
  double v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t (*v120)(void);
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  double (*v126)(_BYTE *, unint64_t);
  unint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(__n128);
  id v150;
  __n128 v151;
  _BYTE *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(__n128);
  id v167;
  __n128 v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE v181[12];
  int v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v191;
  _QWORD *v192;
  void (*v193)(_BYTE *, uint64_t);
  uint64_t v194;
  id v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214[72];
  _BYTE v215[40];

  v3 = v2;
  v196 = a1;
  v5 = type metadata accessor for UUID(0);
  v197 = *(_QWORD **)(v5 - 8);
  __chkstk_darwin(v5);
  v187 = &v181[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v199 = &v181[-v8];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v181[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v13);
  v15 = &v181[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v198 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v195 = (id)type metadata accessor for CRLContainerItemData(0);
  v17 = swift_dynamicCastClassUnconditional(v16, v195, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v17 + 680))();
  v190 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16);
  v190(v12, v15, v9);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLContainerItemCRDTData);
  v18 = CROrderedSet.count.getter(v9);
  v19 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v189 = v9;
  v19(v12, v9);
  v194 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v20)
  {
    sub_100740DA4();
    v20 = *(_QWORD *)(v3 + v194);
  }
  if (v20)
    v21 = v20;
  else
    v21 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v21 >> 62)
  {
    v193 = v19;
    v178 = v18;
    if (v21 < 0)
      v179 = v21;
    else
      v179 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    v180 = v179;
    v18 = v178;
    v19 = v193;
    v22 = _CocoaArrayWrapper.endIndex.getter(v180);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v20);
  }
  swift_bridgeObjectRelease(v21);
  if (v22)
  {
    if (!v18)
      return;
    v184 = v22;
    v186 = v18;
    v23 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v3 + v198), v195, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v23 + 680))();
    v24 = a2;
    v191 = sub_10074B174((uint64_t)v15, v24);
    v192 = v24;
    v26 = v25;
    v183 = 0;

    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLContainerItemCRDTData);
    v27 = v3;
    v188 = v3;
    v28 = v5;
    v29 = v197;
    if ((v26 & 1) == 0)
    {
      v30 = v19;
      v185 = v28;
      v31 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
      v32 = *(double **)(v3 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
      if (!v32)
      {
        v33 = v188;
        sub_100740DA4();
        v32 = *(double **)(v33 + v31);
      }
      v34 = v32 ? v32 : _swiftEmptyArrayStorage;
      v35 = *(void (**)(__n128))((swift_isaMask & *v192) + 0x88);
      v36 = swift_bridgeObjectRetain(v32);
      v37 = (uint64_t)v199;
      v35(v36);
      sub_100C1A350(v37, (uint64_t)v34);
      v39 = v38;
      v28 = v185;
      v193 = (void (*)(_BYTE *, uint64_t))v29[1];
      v193((_BYTE *)v37, v185);
      swift_bridgeObjectRelease(v34);
      v27 = v188;
      v19 = v30;
      if ((v39 & 1) == 0)
      {
        v40 = v186;
        if (v186 == v184)
        {
          v41 = v196;
          v42 = v193;
          if (v191 > v196)
          {
            v15 = (_BYTE *)v198;
            if (v196 < 0)
              goto LABEL_73;
LABEL_79:
            if (v40 >= v41)
              return;
            goto LABEL_82;
          }
          v15 = (_BYTE *)v198;
LABEL_77:
          if (__OFADD__(v41++, 1))
          {
            __break(1u);
            return;
          }
          if (v41 < 0)
            goto LABEL_73;
          goto LABEL_79;
        }
        v41 = v188;
        if ((v196 & 0x8000000000000000) == 0)
        {
          v182 = 0;
          v28 = v196;
          v93 = v194;
          if (v184 > v196)
            goto LABEL_54;
LABEL_50:
          if (qword_1013DD8B8 != -1)
            swift_once(&qword_1013DD8B8, sub_100A06704);
          swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v212, 0, 0);
          v101 = (void *)static OS_os_log.boardItemLifecycle;
          v102 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v102, &v211);
          *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
          *(_QWORD *)(inited + 56) = &type metadata for Int;
          *(_QWORD *)(inited + 64) = &protocol witness table for Int;
          *(_QWORD *)(inited + 32) = v191;
          *(_QWORD *)(inited + 96) = &type metadata for Int;
          *(_QWORD *)(inited + 104) = &protocol witness table for Int;
          *(_QWORD *)(inited + 72) = v196;
          v104 = v101;
          v105 = static os_log_type_t.error.getter(v104);
          sub_100A06EBC((uint64_t)v104, &_mh_execute_header, v105, "Coherence list divergence. Trying to reorder a child to an index that is out of bounds of the current known child items list. From %{public}d to %{public}d. Setting to max count.", 178, 2, inited);
          swift_setDeallocating(inited);
          v106 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 2, v106);

          v28 = v184 - 1;
          if (__OFSUB__(v184, 1))
          {
            __break(1u);
            goto LABEL_95;
          }
          v41 = v188;
LABEL_54:
          v107 = *(double **)(v41 + v93);
          if (!v107)
          {
            sub_100740DA4();
            v107 = *(double **)(v41 + v93);
          }
          if (v107)
            v108 = (unint64_t)v107;
          else
            v108 = (unint64_t)_swiftEmptyArrayStorage;
          if ((v108 & 0xC000000000000001) == 0)
          {
            if ((v28 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v28 < *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v109 = *(double *)(v108 + 8 * v28 + 32);
              swift_bridgeObjectRetain(v107);
              v110 = *(id *)&v109;
              goto LABEL_63;
            }
            __break(1u);
LABEL_93:
            swift_once(&qword_1013DD8B8, sub_100A06704);
LABEL_67:
            swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v208, 0, 0);
            v138 = (void *)static OS_os_log.boardItemLifecycle;
            v139 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v140 = swift_initStackObject(v139, &v207);
            *(_OWORD *)(v140 + 16) = xmmword_100EF5A10;
            *(_QWORD *)(v140 + 56) = &type metadata for Int;
            *(_QWORD *)(v140 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v140 + 32) = v196;
            *(_QWORD *)(v140 + 96) = &type metadata for Int;
            *(_QWORD *)(v140 + 104) = &protocol witness table for Int;
            *(_QWORD *)(v140 + 72) = v41;
            v141 = v138;
            v143 = static os_log_type_t.default.getter(v142);
            sub_100A06EBC((uint64_t)v141, &_mh_execute_header, v143, "Coherence list divergence. Translated initial toIndex %{public}d into %{public}d", 80, 2, v140);

            swift_setDeallocating(v140);
            v144 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v140 + 32, 2, v144);

            if ((v182 & 1) != 0)
            {
              v42 = v193;
              if ((v41 & 0x8000000000000000) == 0)
              {
                if (v186 >= v41)
                  return;
                goto LABEL_82;
              }
            }
            else
            {
              v40 = v186;
              v42 = v193;
              if (v41 >= v191)
                goto LABEL_77;
              if ((v41 & 0x8000000000000000) == 0)
                goto LABEL_79;
            }
LABEL_73:
            v193 = v42;
            if (qword_1013DD8B8 != -1)
              swift_once(&qword_1013DD8B8, sub_100A06704);
            swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v204, 0, 0);
            v145 = (void *)static OS_os_log.boardItemLifecycle;
            v146 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v147 = swift_initStackObject(v146, &v203);
            *(_OWORD *)(v147 + 16) = xmmword_100EF5A10;
            *(_QWORD *)(v147 + 56) = &type metadata for Int;
            *(_QWORD *)(v147 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v147 + 32) = v41;
            v148 = *(_QWORD *)&v15[v188];
            v149 = *(void (**)(__n128))(*(_QWORD *)v148 + 256);
            v150 = v145;
            v151 = swift_retain(v148);
            v152 = v199;
            v149(v151);
            swift_release(v148);
            v154 = UUID.uuidString.getter(v153);
            v156 = v155;
            v42 = v193;
            v193(v152, v28);
            *(_QWORD *)(v147 + 96) = &type metadata for String;
            v157 = sub_1004CFC2C();
            *(_QWORD *)(v147 + 104) = v157;
            *(_QWORD *)(v147 + 72) = v154;
            *(_QWORD *)(v147 + 80) = v156;
            v158 = static os_log_type_t.error.getter(v157);
            sub_100A06EBC((uint64_t)v150, &_mh_execute_header, v158, "Avoid crashing due to out of bounds error: %{public}d < 0 for %{public}@", 72, 2, v147);
            swift_setDeallocating(v147);
            v159 = *(_QWORD *)(v147 + 16);
            v160 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v147 + 32, v159, v160);

            if ((v186 & 0x8000000000000000) == 0)
              return;
            v41 = 0;
            v15 = (_BYTE *)v198;
LABEL_82:
            v193 = v42;
            if (qword_1013DD8B8 != -1)
              swift_once(&qword_1013DD8B8, sub_100A06704);
            swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v206, 0, 0);
            v162 = (void *)static OS_os_log.boardItemLifecycle;
            v163 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v164 = swift_initStackObject(v163, &v205);
            *(_OWORD *)(v164 + 16) = xmmword_100EF5550;
            *(_QWORD *)(v164 + 56) = &type metadata for Int;
            *(_QWORD *)(v164 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v164 + 32) = v41;
            *(_QWORD *)(v164 + 96) = &type metadata for Int;
            *(_QWORD *)(v164 + 104) = &protocol witness table for Int;
            *(_QWORD *)(v164 + 72) = v186;
            v165 = *(_QWORD *)&v15[v188];
            v166 = *(void (**)(__n128))(*(_QWORD *)v165 + 256);
            v167 = v162;
            v168 = swift_retain(v165);
            v169 = v199;
            v166(v168);
            swift_release(v165);
            v171 = UUID.uuidString.getter(v170);
            v173 = v172;
            v193(v169, v28);
            *(_QWORD *)(v164 + 136) = &type metadata for String;
            v174 = sub_1004CFC2C();
            *(_QWORD *)(v164 + 144) = v174;
            *(_QWORD *)(v164 + 112) = v171;
            *(_QWORD *)(v164 + 120) = v173;
            v175 = static os_log_type_t.error.getter(v174);
            sub_100A06EBC((uint64_t)v167, &_mh_execute_header, v175, "Avoid crashing due to out of bounds error: %{public}d > %{public}d for %{public}@", 81, 2, v164);
            swift_setDeallocating(v164);
            v176 = *(_QWORD *)(v164 + 16);
            v177 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v164 + 32, v176, v177);

            return;
          }
          swift_bridgeObjectRetain(v107);
          v110 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v108);
LABEL_63:
          v111 = v110;
          swift_bridgeObjectRelease(v108);
          v112 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v41 + v198), v195, 0, 0, 0);
          (*(void (**)(void))(*(_QWORD *)v112 + 680))();
          v113 = v189;
          v114 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v190)(v12, v15, v189);
          __chkstk_darwin(v114);
          v197 = v111;
          *(_QWORD *)&v181[-16] = v111;
          v41 = CROrderedSet.index(where:)(sub_10074BAA8, &v181[-32], v113);
          LOBYTE(v111) = v115;
          v19(v12, v113);
          sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLContainerItemCRDTData);
          v28 = v185;
          if ((v111 & 1) == 0)
            goto LABEL_66;
          if (qword_1013DD8B8 == -1)
          {
LABEL_65:
            swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v210, 0, 0);
            v116 = (void *)static OS_os_log.boardItemLifecycle;
            v117 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v118 = swift_initStackObject(v117, &v209);
            *(_OWORD *)(v118 + 16) = xmmword_100EF5E30;
            *(_QWORD *)(v118 + 56) = &type metadata for Int;
            *(_QWORD *)(v118 + 64) = &protocol witness table for Int;
            v119 = v192;
            *(_QWORD *)(v118 + 32) = v191;
            *(_QWORD *)(v118 + 96) = &type metadata for Int;
            *(_QWORD *)(v118 + 104) = &protocol witness table for Int;
            *(_QWORD *)(v118 + 72) = v196;
            v120 = *(uint64_t (**)(void))((swift_isaMask & *v119) + 0x88);
            v195 = v116;
            v121 = v199;
            v122 = v120();
            v123 = UUID.uuidString.getter(v122);
            v125 = v124;
            v126 = (double (*)(_BYTE *, unint64_t))v193;
            v193(v121, v28);
            *(_QWORD *)(v118 + 136) = &type metadata for String;
            v127 = sub_1004CFC2C();
            *(_QWORD *)(v118 + 144) = v127;
            *(_QWORD *)(v118 + 112) = v123;
            *(_QWORD *)(v118 + 120) = v125;
            v128 = v187;
            v129 = (*(uint64_t (**)(void))((swift_isaMask & *v197) + 0x88))();
            v130 = UUID.uuidString.getter(v129);
            v132 = v131;
            v133.n128_f64[0] = v126(v128, v28);
            *(_QWORD *)(v118 + 176) = &type metadata for String;
            *(_QWORD *)(v118 + 184) = v127;
            *(_QWORD *)(v118 + 152) = v130;
            *(_QWORD *)(v118 + 160) = v132;
            v134 = static os_log_type_t.default.getter(v133);
            v135 = v195;
            sub_100A06EBC((uint64_t)v195, &_mh_execute_header, v134, "Coherence list divergence. Trying to reorder a child to an index that contains a child that is not present in the Coherence list. Sending to back. From %{public}d to %{public}d for child item %{public}@ where the missing child item is %{public}@", 245, 2, v118);
            swift_setDeallocating(v118);
            v136 = *(_QWORD *)(v118 + 16);
            v137 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v118 + 32, v136, v137);

            v41 = v186;
LABEL_66:
            v15 = (_BYTE *)v198;
            if (qword_1013DD8B8 == -1)
              goto LABEL_67;
            goto LABEL_93;
          }
LABEL_95:
          swift_once(&qword_1013DD8B8, sub_100A06704);
          goto LABEL_65;
        }
        v182 = 0;
        goto LABEL_45;
      }
    }
    v57 = v19;
    v58 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
    v59 = *(double **)(v27 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
    if (!v59)
    {
      v60 = v27;
      sub_100740DA4();
      v59 = *(double **)(v60 + v58);
    }
    if (v59)
      v61 = v59;
    else
      v61 = _swiftEmptyArrayStorage;
    v62 = *(void (**)(__n128))((swift_isaMask & *v192) + 0x88);
    v63 = swift_bridgeObjectRetain(v59);
    v64 = (uint64_t)v199;
    v62(v63);
    v191 = sub_100C1A350(v64, (uint64_t)v61);
    v66 = v65;
    v193 = (void (*)(_BYTE *, uint64_t))v29[1];
    v193((_BYTE *)v64, v28);
    swift_bridgeObjectRelease(v61);
    if ((v66 & 1) == 0)
    {
      v185 = v28;
      if (qword_1013DD8B8 != -1)
        swift_once(&qword_1013DD8B8, sub_100A06704);
      swift_beginAccess(&static OS_os_log.boardItemLifecycle, v215, 0, 0);
      v67 = (void *)static OS_os_log.boardItemLifecycle;
      v68 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v69 = swift_initStackObject(v68, &v213);
      *(_OWORD *)(v69 + 16) = xmmword_100EF5E40;
      v70 = v67;
      v71 = ((uint64_t (*)(void))v62)();
      v72 = UUID.uuidString.getter(v71);
      v73 = v64;
      v75 = v74;
      v193((_BYTE *)v73, v185);
      *(_QWORD *)(v69 + 56) = &type metadata for String;
      *(_QWORD *)(v69 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v69 + 32) = v72;
      *(_QWORD *)(v69 + 40) = v75;
      v77 = static os_log_type_t.default.getter(v76);
      sub_100A06EBC((uint64_t)v70, &_mh_execute_header, v77, "Trying to reorder a child that we don't have a z-order for yet: %{public}@. Will add into z-order list.", 103, 2, v69);
      swift_setDeallocating(v69);
      v78 = *(_QWORD *)(v69 + 16);
      v79 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v69 + 32, v78, v79);

      if ((v196 & 0x8000000000000000) == 0)
      {
        v182 = 1;
        v28 = v196;
        v80 = v184 <= v196;
        goto LABEL_48;
      }
      v182 = 1;
      v19 = v57;
LABEL_45:
      v57 = v19;
      if (qword_1013DD8B8 != -1)
        swift_once(&qword_1013DD8B8, sub_100A06704);
      swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v202, 0, 0);
      v94 = (void *)static OS_os_log.boardItemLifecycle;
      v95 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v96 = swift_initStackObject(v95, &v201);
      *(_OWORD *)(v96 + 16) = xmmword_100EF5A10;
      *(_QWORD *)(v96 + 56) = &type metadata for Int;
      *(_QWORD *)(v96 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v96 + 32) = v191;
      *(_QWORD *)(v96 + 96) = &type metadata for Int;
      *(_QWORD *)(v96 + 104) = &protocol witness table for Int;
      v97 = v196;
      *(_QWORD *)(v96 + 72) = v196;
      v98 = v94;
      v99 = static os_log_type_t.error.getter(v98);
      sub_100A06EBC((uint64_t)v98, &_mh_execute_header, v99, "Coherence list divergence. Trying to reorder a child to an index that is out of bounds of the current known child items list. From %{public}d to %{public}d. Setting to 0.", 170, 2, v96);
      swift_setDeallocating(v96);
      v100 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v96 + 32, 2, v100);

      v28 = 0;
      v80 = v184 <= v97;
LABEL_48:
      v41 = v188;
      v19 = v57;
      v93 = v194;
      if (!v80)
        goto LABEL_54;
      goto LABEL_50;
    }
    if (qword_1013DD8B8 != -1)
      swift_once(&qword_1013DD8B8, sub_100A06704);
    swift_beginAccess(&static OS_os_log.boardItemLifecycle, v215, 0, 0);
    v81 = (void *)static OS_os_log.boardItemLifecycle;
    v82 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v83 = swift_initStackObject(v82, v214);
    *(_OWORD *)(v83 + 16) = xmmword_100EF5E40;
    v84 = v81;
    v85 = ((uint64_t (*)(void))v62)();
    v86 = UUID.uuidString.getter(v85);
    v88 = v87;
    v193((_BYTE *)v64, v28);
    *(_QWORD *)(v83 + 56) = &type metadata for String;
    v89 = sub_1004CFC2C();
    *(_QWORD *)(v83 + 64) = v89;
    *(_QWORD *)(v83 + 32) = v86;
    *(_QWORD *)(v83 + 40) = v88;
    v90 = static os_log_type_t.error.getter(v89);
    sub_100A06EBC((uint64_t)v84, &_mh_execute_header, v90, "Trying to reorder a board item that we don't know of as a child: %{public}@.", 76, 2, v83);
    swift_setDeallocating(v83);
    v91 = *(_QWORD *)(v83 + 16);
    v92 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v83 + 32, v91, v92);

  }
  else
  {
    if (qword_1013DD8B8 != -1)
      swift_once(&qword_1013DD8B8, sub_100A06704);
    swift_beginAccess(&static OS_os_log.boardItemLifecycle, v215, 0, 0);
    v43 = (void *)static OS_os_log.boardItemLifecycle;
    v44 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v45 = swift_initStackObject(v44, &v200);
    *(_OWORD *)(v45 + 16) = xmmword_100EF5E40;
    v46 = *(uint64_t (**)(void))((swift_isaMask & *a2) + 0x88);
    v47 = v43;
    v48 = v199;
    v49 = v46();
    v50 = UUID.uuidString.getter(v49);
    v52 = v51;
    ((void (*)(_BYTE *, uint64_t))v197[1])(v48, v5);
    *(_QWORD *)(v45 + 56) = &type metadata for String;
    v53 = sub_1004CFC2C();
    *(_QWORD *)(v45 + 64) = v53;
    *(_QWORD *)(v45 + 32) = v50;
    *(_QWORD *)(v45 + 40) = v52;
    v54 = static os_log_type_t.error.getter(v53);
    sub_100A06EBC((uint64_t)v47, &_mh_execute_header, v54, "Trying to reorder a board item on a parent that has no children.", 64, 2, v45);
    swift_setDeallocating(v45);
    v55 = *(_QWORD *)(v45 + 16);
    v56 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v45 + 32, v55, v56);

  }
}

double sub_100745268(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  uint64_t v15;
  double result;
  char v17[48];
  uint64_t v18;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v9 + 32) = a1;
  v18 = v9;
  specialized Array._endMutation()(v9);
  v10 = v18;
  v11 = a1;
  if ((a3 & 1) != 0)
    a2 = NSNotFound.getter(v11);
  v12 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
  inited = swift_initStackObject(v12, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = v10;
  v14 = sub_1008E00A0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_bridgeObjectRetain(v10);
  v15 = sub_1004B804C((uint64_t *)&unk_101406AF0);
  swift_arrayDestroy(inited + 32, 1, v15);
  sub_100745390(v14, a4);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

void sub_100745390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t j;
  id v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  int64_t v65;
  int64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;

  v4 = v2;
  sub_100DBEE64(v2, (uint64_t)&off_10127C5E0);
  if (v3)
    return;
  v62 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v61 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v10 = 0;
  v69 = a1;
  v67 = v2;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v12 = (v9 - 1) & v9;
      v13 = v11 | (v10 << 6);
      if (!*(_QWORD *)(a1 + 16))
      {
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
        goto LABEL_140;
      }
      goto LABEL_24;
    }
    v14 = __OFADD__(v10++, 1);
    if (v14)
      goto LABEL_133;
    if (v10 >= v61)
      break;
    v15 = *(_QWORD *)(v62 + 8 * v10);
    if (!v15)
    {
      v16 = v10 + 1;
      if (v10 + 1 >= v61)
        break;
      v15 = *(_QWORD *)(v62 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v61)
          break;
        v15 = *(_QWORD *)(v62 + 8 * v16);
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v61)
            break;
          v15 = *(_QWORD *)(v62 + 8 * v16);
          if (!v15)
          {
            v16 = v10 + 4;
            if (v10 + 4 >= v61)
              break;
            v15 = *(_QWORD *)(v62 + 8 * v16);
            if (!v15)
            {
              v16 = v10 + 5;
              if (v10 + 5 >= v61)
                break;
              v15 = *(_QWORD *)(v62 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_139;
                  if (v10 >= v61)
                    goto LABEL_45;
                  v15 = *(_QWORD *)(v62 + 8 * v10);
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
            }
          }
        }
      }
      v10 = v16;
    }
LABEL_23:
    v12 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_128;
LABEL_24:
    v17 = sub_100842E60(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13));
    if ((v18 & 1) == 0)
      goto LABEL_129;
    v63 = v12;
    v64 = v10;
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17);
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v26 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17);
      else
        v26 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17), 2);
      v20 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v19);
      if (v20)
      {
LABEL_27:
        v21 = 4;
        do
        {
          v22 = v21 - 4;
          if ((v19 & 0xC000000000000001) != 0)
          {
            v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 4, v19);
            v24 = v21 - 3;
            if (__OFADD__(v22, 1))
              goto LABEL_127;
          }
          else
          {
            v23 = *(id *)(v19 + 8 * v21);
            v24 = v21 - 3;
            if (__OFADD__(v22, 1))
            {
LABEL_127:
              __break(1u);
              goto LABEL_128;
            }
          }
          v25 = v23;
          sub_100DBEE64((uint64_t)v25, (uint64_t)&off_10127C5E0);

          ++v21;
        }
        while (v24 != v20);
      }
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17));
      if (v20)
        goto LABEL_27;
    }
    swift_bridgeObjectRelease(v19);
    a1 = v69;
    v10 = v64;
    v4 = v67;
    v9 = v63;
  }
LABEL_45:
  swift_release(a1);
  sub_100741920(a1);
  v27 = 1 << *(_BYTE *)(a1 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & *(_QWORD *)(a1 + 64);
  v65 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v30 = 0;
  while (2)
  {
    if (v29)
    {
      v31 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      v32 = v31 | (v30 << 6);
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_130;
      goto LABEL_67;
    }
    v14 = __OFADD__(v30++, 1);
    if (v14)
      goto LABEL_134;
    if (v30 < v65)
    {
      v33 = *(_QWORD *)(v62 + 8 * v30);
      if (!v33)
      {
        v34 = v30 + 1;
        if (v30 + 1 >= v65)
          break;
        v33 = *(_QWORD *)(v62 + 8 * v34);
        if (!v33)
        {
          v34 = v30 + 2;
          if (v30 + 2 >= v65)
            break;
          v33 = *(_QWORD *)(v62 + 8 * v34);
          if (!v33)
          {
            v34 = v30 + 3;
            if (v30 + 3 >= v65)
              break;
            v33 = *(_QWORD *)(v62 + 8 * v34);
            if (!v33)
            {
              v34 = v30 + 4;
              if (v30 + 4 >= v65)
                break;
              v33 = *(_QWORD *)(v62 + 8 * v34);
              if (!v33)
              {
                v34 = v30 + 5;
                if (v30 + 5 >= v65)
                  break;
                v33 = *(_QWORD *)(v62 + 8 * v34);
                if (!v33)
                {
                  while (1)
                  {
                    v30 = v34 + 1;
                    if (__OFADD__(v34, 1))
                      break;
                    if (v30 >= v65)
                      goto LABEL_85;
                    v33 = *(_QWORD *)(v62 + 8 * v30);
                    ++v34;
                    if (v33)
                      goto LABEL_66;
                  }
LABEL_140:
                  __break(1u);
                  goto LABEL_141;
                }
              }
            }
          }
        }
        v30 = v34;
      }
LABEL_66:
      v29 = (v33 - 1) & v33;
      v32 = __clz(__rbit64(v33)) + (v30 << 6);
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_130;
LABEL_67:
      v35 = sub_100842E60(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v32));
      if ((v36 & 1) == 0)
        goto LABEL_131;
      v37 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v35);
      if ((unint64_t)v37 >> 62)
      {
        if (v37 < 0)
          v42 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v35);
        else
          v42 = v37 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v35));
        v38 = _CocoaArrayWrapper.endIndex.getter(v42);
        if (v38)
        {
LABEL_70:
          if (v38 < 1)
            goto LABEL_132;
          for (i = 0; i != v38; ++i)
          {
            if ((v37 & 0xC000000000000001) != 0)
              v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v37);
            else
              v40 = *(id *)(v37 + 8 * i + 32);
            v41 = v40;
            sub_100C8677C((uint64_t)v40, 2, a2);

          }
        }
      }
      else
      {
        v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v35));
        if (v38)
          goto LABEL_70;
      }
      swift_bridgeObjectRelease(v37);
      a1 = v69;
      v4 = v67;
      continue;
    }
    break;
  }
LABEL_85:
  swift_release(a1);
  sub_100DB0D78(v4, (uint64_t)&off_10127C5E0, 2u);
  v43 = 1 << *(_BYTE *)(a1 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & *(_QWORD *)(a1 + 64);
  v46 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable;
  v47 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate;
  v66 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v48 = 0;
  while (2)
  {
    if (v45)
    {
      v49 = __clz(__rbit64(v45));
      v45 &= v45 - 1;
      v50 = v49 | (v48 << 6);
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_135;
      goto LABEL_110;
    }
    v51 = v48 + 1;
    if (__OFADD__(v48, 1))
      goto LABEL_138;
    if (v51 >= v66)
    {
LABEL_126:
      swift_release(a1);
      return;
    }
    v52 = *(_QWORD *)(v62 + 8 * v51);
    ++v48;
    if (v52)
      goto LABEL_109;
    v48 = v51 + 1;
    if (v51 + 1 >= v66)
      goto LABEL_126;
    v52 = *(_QWORD *)(v62 + 8 * v48);
    if (v52)
      goto LABEL_109;
    v48 = v51 + 2;
    if (v51 + 2 >= v66)
      goto LABEL_126;
    v52 = *(_QWORD *)(v62 + 8 * v48);
    if (v52)
      goto LABEL_109;
    v48 = v51 + 3;
    if (v51 + 3 >= v66)
      goto LABEL_126;
    v52 = *(_QWORD *)(v62 + 8 * v48);
    if (v52)
      goto LABEL_109;
    v48 = v51 + 4;
    if (v51 + 4 >= v66)
      goto LABEL_126;
    v52 = *(_QWORD *)(v62 + 8 * v48);
    if (v52)
    {
LABEL_109:
      v45 = (v52 - 1) & v52;
      v50 = __clz(__rbit64(v52)) + (v48 << 6);
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_135;
LABEL_110:
      v54 = sub_100842E60(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v50));
      if ((v55 & 1) == 0)
        goto LABEL_136;
      v68 = v48;
      v56 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v54);
      if ((unint64_t)v56 >> 62)
      {
        if (v56 < 0)
          v60 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v54);
        else
          v60 = v56 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v54));
        v57 = _CocoaArrayWrapper.endIndex.getter(v60);
        if (v57)
          goto LABEL_113;
      }
      else
      {
        v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v56);
        if (v57)
        {
LABEL_113:
          if (v57 < 1)
            goto LABEL_137;
          for (j = 0; j != v57; ++j)
          {
            if ((v56 & 0xC000000000000001) != 0)
              v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v56);
            else
              v59 = *(id *)(v56 + 8 * j + 32);
            if (*(_BYTE *)(a2 + v46) == 1)
              *(_BYTE *)(a2 + v47) = 1;

          }
        }
      }
      swift_bridgeObjectRelease(v56);
      a1 = v69;
      v48 = v68;
      continue;
    }
    break;
  }
  v53 = v51 + 5;
  if (v53 >= v66)
    goto LABEL_126;
  v52 = *(_QWORD *)(v62 + 8 * v53);
  if (v52)
  {
    v48 = v53;
    goto LABEL_109;
  }
  while (1)
  {
    v48 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (v48 >= v66)
      goto LABEL_126;
    v52 = *(_QWORD *)(v62 + 8 * v48);
    ++v53;
    if (v52)
      goto LABEL_109;
  }
LABEL_141:
  __break(1u);
}

uint64_t sub_100745B54(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  void (*v34)(_QWORD *, _QWORD);
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD *, __n128);
  __n128 v42;
  char *v43;
  void (*v44)(_QWORD *, _QWORD);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  char *v49;
  __n128 v50;
  char *v51;
  char *v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  id v60;
  double v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  int isUniquelyReferenced_nonNull_native;
  void *v67;
  void *v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t result;
  CKRecordID v75;
  Swift::String v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  id v90;
  void (*v91)(char *, unint64_t, uint64_t, __n128);
  char *v92;
  _QWORD v93[4];
  uint64_t v94;

  v83 = a1;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v87 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v89 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v92 = (char *)&v79 - v8;
  __chkstk_darwin(v9);
  v91 = (void (*)(char *, unint64_t, uint64_t, __n128))((char *)&v79 - v10);
  v11 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext]
    && ((*(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v1) + 0x2F0))(v16) & 1) != 0)
  {
    goto LABEL_26;
  }
  v19 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v88 = v1;
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v21 = type metadata accessor for CRLContainerItemData(0);
  v22 = swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v22 + 680))();
  v80 = v15;
  v81 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v13, v14);
  v23 = sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLContainerItemCRDTData);
  __chkstk_darwin(v23);
  v78 = v18;
  v24 = v83;
  swift_bridgeObjectRetain(v83);
  v25 = v94;
  sub_100767774((uint64_t (*)(char *))sub_10074BA30, (uint64_t)&v77, v24);
  v27 = v26;
  v28 = *(_QWORD *)(v26 + 16);
  v29 = v18;
  v82 = v25;
  if (!v28)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v28 != 1)
  {
    v37 = sub_100AF7994(v26);
    swift_bridgeObjectRelease();
    v38 = *(_QWORD *)&v88[v19];
    v39 = swift_dynamicCastClassUnconditional(v38, v21, 0, 0, 0);
    __chkstk_darwin(v39);
    v78 = (char *)v37;
    v41 = *(uint64_t (**)(_QWORD *, __n128))(*(_QWORD *)v40 + 696);
    v42 = swift_retain(v38);
    v43 = v29;
    v44 = (void (*)(_QWORD *, _QWORD))v41(v93, v42);
    v45 = v82;
    CROrderedSet.removeAll(where:)(sub_10074BA7C, &v77, v81);
    v82 = v45;
    v44(v93, 0);
    v29 = v43;
    swift_bridgeObjectRelease();
    swift_release(v38);
    goto LABEL_9;
  }
  v30 = *(_QWORD *)&v88[v19];
  v31 = swift_dynamicCastClassUnconditional(v30, v21, 0, 0, 0);
  v32 = v92;
  (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v92, v27 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v32, 0, 1, v2);
  swift_retain(v30);
  v33 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v3 + 48))(v32, 1, v2, v33) == 1)
  {
    __break(1u);
LABEL_26:
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v75, v76);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return result;
  }
  v34 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v31 + 696))(v93);
  v35 = (uint64_t)v91;
  CROrderedSet.remove(_:)(v32, v81);
  sub_1004CB800(v35, (uint64_t *)&unk_1013E1A50);
  v34(v93, 0);
  v36 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v32, v2, v36);
LABEL_9:
  v46 = *(_QWORD *)(v83 + 16);
  v47 = v87;
  if (v46)
  {
    v79 = v29;
    v94 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
    v85 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
    v86 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v84 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs;
    v48 = v83 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v49 = *(char **)(v3 + 72);
    v91 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16);
    v92 = v49;
    v50 = swift_bridgeObjectRetain(v83);
    v52 = v88;
    v51 = v89;
    do
    {
      v91(v51, v48, v2, v50);
      v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v54)(v51, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v51, 1, v2) == 1)
      {
        v72 = v80;
        v71 = v81;
        v29 = v79;
        goto LABEL_24;
      }
      v55 = v3;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v47, v51, v2);
      v56 = (uint64_t)v47;
      v57 = *(_QWORD *)&v52[v94];
      if (*(_QWORD *)(v57 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v52[v94]);
        v58 = sub_100842EFC(v56);
        if ((v59 & 1) != 0)
        {
          v60 = *(id *)(*(_QWORD *)(v57 + 56) + 8 * v58);
          *(_QWORD *)&v61 = swift_bridgeObjectRelease().n128_u64[0];
          v90 = v60;
          objc_msgSend(v52, "_setParentItemReferenceWithItem:parent:", v60, 0, v61);
          v62 = *(_QWORD *)&v52[v94];
          swift_bridgeObjectRetain_n(v62, 2);
          v63 = sub_100842EFC(v56);
          v65 = v64;
          swift_bridgeObjectRelease();
          if ((v65 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v62);
            v93[0] = v62;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_10082CAB4();
              v62 = v93[0];
            }
            (*(void (**)(unint64_t, uint64_t))(v55 + 8))(*(_QWORD *)(v62 + 48) + v63 * (_QWORD)v92, v2);
            v62 = v93[0];
            v67 = *(void **)(*(_QWORD *)(v93[0] + 56) + 8 * v63);
            sub_10051A11C(v63, v93[0]);

            swift_bridgeObjectRelease();
          }
          v68 = v90;
          v52 = v88;
          *(_QWORD *)&v88[v86] = 0;
          swift_bridgeObjectRelease();
          *(_QWORD *)&v52[v85] = 0;
          swift_bridgeObjectRelease();
          *(_QWORD *)&v52[v84] = 0;
          swift_bridgeObjectRelease();
          *(_QWORD *)&v52[v94] = v62;

          v53 = swift_bridgeObjectRelease();
          v51 = v89;
          v56 = (uint64_t)v87;
        }
        else
        {
          v53 = swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(uint64_t, uint64_t, __n128))(v55 + 8))(v56, v2, v53);
      v48 += (unint64_t)v92;
      --v46;
      v47 = (char *)v56;
      v3 = v55;
    }
    while (v46);
    v72 = v80;
    v71 = v81;
    v29 = v79;
    v54(v89, 1, 1, v2, v50);
  }
  else
  {
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
    v70 = swift_bridgeObjectRetain(v83);
    v72 = v80;
    v71 = v81;
    v69(v89, 1, 1, v2, v70);
  }
LABEL_24:
  v73 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v72 + 8))(v29, v71, v73);
}

double sub_100746320(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v2 = v1;
  v3 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items];
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain(v4);
    v6 = sub_100842EFC(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      objc_msgSend(v2, "_setParentItemReferenceWithItem:parent:", v8, 0, swift_bridgeObjectRelease(v4).n128_f64[0]);
      v14 = *(_QWORD *)&v2[v3];
      swift_bridgeObjectRetain(v14);

      v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
      swift_bridgeObjectRelease(v9);
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs];
      *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
      swift_bridgeObjectRelease(v10);
      v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs];
      *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
      swift_bridgeObjectRelease(v11);
      v12 = *(_QWORD *)&v2[v3];
      *(_QWORD *)&v2[v3] = v14;

      *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
    }
  }
  return result;
}

void sub_10074643C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;

  v5 = v4;
  v6 = v3;
  if (!a2 || (sub_100DBEE64(v6, (uint64_t)&off_10127C5E0), !v4))
  {
    if ((unint64_t)a1 >> 62)
      goto LABEL_17;
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    for (; v9; v9 = _CocoaArrayWrapper.endIndex.getter(v14))
    {
      v10 = 4;
      while (1)
      {
        v11 = (a1 & 0xC000000000000001) != 0
            ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, a1)
            : *(id *)(a1 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        v16 = v11;
        sub_1007475F4(&v16, v6, a2, a3);
        if (v5)
        {
          swift_bridgeObjectRelease(a1);

          return;
        }

        ++v10;
        if (v13 == v9)
          goto LABEL_12;
      }
      __break(1u);
LABEL_17:
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
    }
LABEL_12:
    swift_bridgeObjectRelease(a1);
    if (a2)
      sub_100DB0D78(v6, (uint64_t)&off_10127C5E0, 2u);
  }
}

uint64_t sub_100746598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_BYTE *, _QWORD);
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[32];
  _BYTE v82[24];
  char v83[24];
  char v84[32];
  uint64_t v85;

  v79 = a2;
  v68 = a1;
  ObjectType = swift_getObjectType(v2);
  v3 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v3);
  v78 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v71 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v67 = (char *)&v65 - v8;
  __chkstk_darwin(v9);
  v72 = (uint64_t)&v65 - v10;
  __chkstk_darwin(v11);
  v73 = (uint64_t)&v65 - v12;
  __chkstk_darwin(v13);
  v66 = (uint64_t)&v65 - v14;
  __chkstk_darwin(v15);
  v77 = (char *)&v65 - v16;
  v17 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v17);
  v76 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v65 - v20;
  v22 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v22);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v65 - v26;
  v28 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v30 = type metadata accessor for CRLContainerItemData(0);
  v31 = swift_dynamicCastClassUnconditional(v29, v30, 0, 0, 0);
  v32 = v31 + *(_QWORD *)(*(_QWORD *)v31 + 632);
  swift_beginAccess(v32, v84, 0, 0);
  sub_1004CB7BC(v32, (uint64_t)v24, (uint64_t *)&unk_1013F02C0);
  v33 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
  CRStruct_6.copy(renamingReferences:)(0, v22, v33);
  sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013F02C0);
  *(_QWORD *)&v21[*(int *)(v17 + 20)] = _swiftEmptyDictionarySingleton;
  v34 = type metadata accessor for UUID(0);
  v35 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v70 = v34;
  CROrderedSet.init()(v34, &protocol witness table for UUID, v35);
  v74 = v27;
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1013F02C0);
  v75 = v21;
  v36 = (uint64_t)v21;
  v37 = v76;
  sub_1004B8460(v36, v76, type metadata accessor for CRLContainerItemCRDTData);
  v38 = (_QWORD *)swift_dynamicCastClassUnconditional(*(_QWORD *)(v85 + v28), v30, 0, 0, 0);
  v39 = v38[4];
  v40 = v38[5];
  v42 = v38[2];
  v41 = v38[3];
  v43 = swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  sub_1004B84E0(v37, v43 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938((uint64_t)v24, v43 + *(_QWORD *)(*(_QWORD *)v43 + 632), (uint64_t *)&unk_1013F02C0);
  v44 = v42;
  v45 = (uint64_t)v77;
  v46 = sub_1005E1000(v41, v39, v40, v44);
  v47 = (uint64_t)v46 + *(_QWORD *)(*v46 + 632);
  swift_beginAccess(v47, v83, 0, 0);
  sub_1004CB7BC(v47, (uint64_t)v24, (uint64_t *)&unk_1013F02C0);
  swift_retain(v46);
  v48 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  v49 = (uint64_t)v78;
  CRRegister.wrappedValue.getter(v48);
  sub_1004CB7BC(v49, v45, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4(v49, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013F02C0);
  swift_release(v46);
  v50 = v80;
  v51 = (uint64_t)v46;
  sub_100A10D98(v79);
  if (v50)
  {
    swift_release(v46);
    sub_1004CB800(v45, (uint64_t *)&unk_1013E1A50);
    sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLContainerItemCRDTData);
    sub_1004CB800((uint64_t)v74, (uint64_t *)&unk_1013F02C0);
  }
  else
  {
    v80 = v22;
    v52 = v73;
    sub_1004CB7BC(v68, v73, (uint64_t *)&unk_1013E1A50);
    sub_1004CB7BC(v45, v72, (uint64_t *)&unk_1013E1A50);
    v53 = *(_QWORD *)(v70 - 8);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 48))(v52, 1);
    v55 = (uint64_t)v67;
    v56 = (uint64_t)v71;
    v57 = v66;
    if (v54 == 1)
    {
      sub_1004C4938(v72, v66, (uint64_t *)&unk_1013E1A50);
      swift_retain(v46);
      sub_1004CB800(v73, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v46);
      sub_1004CB800(v72, (uint64_t *)&unk_1013E1A50);
      v58 = v70;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v57, v73, v70);
      v59 = v58;
      v56 = (uint64_t)v71;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v59);
    }
    sub_1004CB7BC(v57, v55, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v47, v82, 33, 0);
    sub_1004CB7BC(v55, v56, (uint64_t *)&unk_1013E1A50);
    v60 = v57;
    v61 = v55;
    v62 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v81, v48);
    sub_100582338(v56, v63, (uint64_t *)&unk_1013E1A50);
    v62(v81, 0);
    sub_1004CB800(v61, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v82);
    sub_1004CB800(v60, (uint64_t *)&unk_1013E1A50);
    swift_release(v46);
    v51 = (*(uint64_t (**)(id, _QWORD *))(ObjectType + 1224))(*(id *)(v85 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store), v46);
    sub_1004CB800(v45, (uint64_t *)&unk_1013E1A50);
    sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLContainerItemCRDTData);
    sub_1004CB800((uint64_t)v74, (uint64_t *)&unk_1013F02C0);
  }
  return v51;
}

Class sub_100746E00(char *a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  double *v7;
  char *v8;
  double *v9;
  Class isa;

  v6 = *a3;
  v7 = *(double **)&a1[*a3];
  v8 = a1;
  if (!v7)
  {
    sub_100740DA4();
    v7 = *(double **)&a1[v6];
  }
  if (v7)
    v9 = v7;
  else
    v9 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v7);

  a4(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  return isa;
}

id sub_10074700C(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = _swiftEmptyDictionarySingleton;
  *(_DWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return objc_msgSendSuper2(&v7, "init");
}

BOOL sub_1007470C8(_QWORD **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **a1) + 0x88))(v4);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  LOBYTE(a1) = CROrderedSet.contains(_:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (a1 & 1) == 0;
}

uint64_t sub_1007473BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *a2) + 0x88))(v6);
  LOBYTE(a2) = static UUID.== infix(_:_:)(a1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return a2 & 1;
}

void sub_1007475F4(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(__n128);
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char v34[55];
  char v35;
  uint64_t v36;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *(void **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store)
                 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
  v12 = *a1;
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v14 = *(void (**)(__n128))(*(_QWORD *)v13 + 256);
  v15 = v11;
  v16 = swift_retain(v13);
  v14(v16);
  swift_release(v13);
  v17 = type metadata accessor for UUID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 0, 1, v17);
  v18 = v33;
  v19 = (*(uint64_t (**)(void *, char *, uint64_t, uint64_t))((swift_isaMask & *v12) + 0x1F0))(v11, v10, a3, a4);
  if (v18)
  {
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);

    v36 = v18;
    swift_errorRetain(v18);
    v20 = sub_1004B804C(&qword_1013E0210);
    if (swift_dynamicCast(&v35, &v36, v20, &type metadata for CRLSerializationError, 0) && v35 == 14)
    {
      swift_errorRelease(v18);
      swift_errorRelease(v36);
    }
    else
    {
      swift_errorRelease(v36);
    }
  }
  else
  {
    v21 = (void *)v19;
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);

    if (a3)
    {
      v22 = v21;
      sub_100DBEE64((uint64_t)v22, (uint64_t)&off_10127C5E0);

    }
    v23 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v24 = swift_allocObject(v23, 40, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v24 + 32) = v21;
    v36 = v24;
    specialized Array._endMutation()(v24);
    v25 = v36;
    v26 = v21;
    v27 = NSNotFound.getter(v26);
    v28 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
    inited = swift_initStackObject(v28, v34);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v25;
    v30 = sub_1008E00A0((_QWORD *)inited);
    swift_setDeallocating(inited);
    swift_bridgeObjectRetain(v25);
    v31 = sub_1004B804C((uint64_t *)&unk_101406AF0);
    swift_arrayDestroy(inited + 32, 1, v31);
    sub_100741920(v30);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v30);
    if (a3)
    {
      v32 = v26;
      sub_100C8677C((uint64_t)v32, 2, a3);

      v26 = v32;
      sub_100DB0D78((uint64_t)v26, (uint64_t)&off_10127C5E0, 2u);

    }
  }
}

id sub_100747944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, __n128);
  __n128 v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  objc_super v11;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = type metadata accessor for CRLContainerItemData(0);
  v4 = *(uint64_t (**)(_QWORD, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                                                + 440);
  v5 = swift_retain(v2);
  v6 = v4(0, v5);
  swift_release(v2);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLContainerItem(0));
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = _swiftEmptyDictionarySingleton;
  *(_DWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v7;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v6;
  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v9 = v7;
  return objc_msgSendSuper2(&v11, "init");
}

uint64_t sub_100747CB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs));
}

id sub_100747D00()
{
  return sub_10067865C(type metadata accessor for CRLContainerItem);
}

uint64_t sub_100747D64()
{
  return type metadata accessor for CRLContainerItem(0);
}

uint64_t type metadata accessor for CRLContainerItem(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F0260, (uint64_t)&nominal type descriptor for CRLContainerItem);
}

uint64_t sub_100747D80(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v2[2] = "\b";
  v2[3] = "\b";
  v2[4] = "\b";
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 1000);
}

uint64_t sub_100747DE0(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  id v27;
  _QWORD *v28;
  id v29;
  double v30;
  float v31;
  double v32;
  float v33;
  double v34;
  float v35;
  double v36;
  float v37;
  double v38;
  float v39;
  unsigned int v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t ObjectType;
  uint64_t v61;
  unsigned int v63;
  unsigned int v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _OWORD v81[8];
  _BYTE v82[136];

  v78 = a1;
  v73 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v73);
  v75 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v77 = (char *)&v63 - v8;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v72 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v12);
  v74 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v76 = (uint64_t)&v63 - v15;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v16);
  v68 = (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - v19;
  v67 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v67);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v79 = v3;
  v80 = (uint64_t)&v63 - v24;
  if (a3)
  {
    v25 = v3;
    v26 = a3;
  }
  else
  {
    v27 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    v28 = v3;
    v26 = objc_msgSend(v27, "init");
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v20, a2, v9);
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v66(v20, 0, 1, v9);
  v71 = a3;
  v29 = v26;
  objc_msgSend(v29, "position");
  v31 = v30;
  v33 = v32;
  objc_msgSend(v29, "size");
  v35 = v34;
  v37 = v36;
  objc_msgSend(v29, "angle");
  v39 = v38;
  v64 = objc_msgSend(v29, "widthValid");
  v40 = objc_msgSend(v29, "heightValid");
  v65 = v9;
  v63 = v40;
  v41 = objc_msgSend(v29, "horizontalFlip");
  v42 = objc_msgSend(v29, "verticalFlip");
  v70 = v10;
  v43 = v42;

  v69 = a2;
  v44 = v68;
  sub_1004CB7BC((uint64_t)v20, v68, (uint64_t *)&unk_1013E1A50);
  v66(v22, 1, 1, v9);
  v45 = v67;
  *(_QWORD *)&v22[*(int *)(v67 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338(v44, (uint64_t)v22, (uint64_t *)&unk_1013E1A50);
  v46 = &v22[*(int *)(v45 + 20)];
  *(float *)v46 = v31;
  *((float *)v46 + 1) = v33;
  *((float *)v46 + 2) = v35;
  *((float *)v46 + 3) = v37;
  *((float *)v46 + 4) = v39;
  v46[20] = v64;
  v46[21] = v63;
  v46[22] = v41;
  v46[23] = v43;
  *((_QWORD *)v46 + 3) = _swiftEmptyDictionarySingleton;
  v47 = v80;
  sub_1004B84E0((uint64_t)v22, v80, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(v47, (uint64_t)v22, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v81);
  v48 = sub_1004C4938((uint64_t)v81, (uint64_t)v82, (uint64_t *)&unk_1013F02D0);
  v49 = (uint64_t)v72;
  UUID.init()(v48);
  v50 = v76;
  sub_100D5EF54(v49, (uint64_t)v22, 0, 0, 0, 0xE000000000000000, (uint64_t)v82, v76);
  v51 = (uint64_t)v77;
  *(_QWORD *)&v77[*(int *)(v73 + 20)] = _swiftEmptyDictionarySingleton;
  v52 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v53 = v65;
  CROrderedSet.init()(v65, &protocol witness table for UUID, v52);
  v54 = v74;
  sub_1004CB7BC(v50, v74, (uint64_t *)&unk_1013F02C0);
  v55 = v75;
  sub_1004B8460(v51, v75, type metadata accessor for CRLContainerItemCRDTData);
  v56 = type metadata accessor for CRLContainerItemData(0);
  v57 = swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  sub_1004B84E0(v55, v57 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938(v54, v57 + *(_QWORD *)(*(_QWORD *)v57 + 632), (uint64_t *)&unk_1013F02C0);
  v58 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);
  v59 = v79;
  ObjectType = swift_getObjectType(v79);

  v61 = (*(uint64_t (**)(uint64_t, _QWORD *))(ObjectType + 1224))(v78, v58);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v53);
  sub_1004B84A4(v51, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004CB800(v50, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v80, type metadata accessor for CRLBoardItemParentAffinity);
  swift_deallocPartialClassInstance(v59, ObjectType, *(unsigned int *)((swift_isaMask & *v59) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v59) + 0x34));
  return v61;
}

uint64_t sub_1007485EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 288);
  v3 = swift_retain(v1);
  v4 = v2(v3);
  swift_release(v1);
  return v4;
}

void sub_100748730()
{
  CKRecordID v0;
  Swift::String v1;

  sub_100757E04(&_mh_execute_header, (uint64_t)"geometry", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 810, "Root container items should never asked to change their geometry!", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Root container items should never asked to change their geometry!");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"geometry", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 810, (uint64_t)"Root container items should never asked to change their geometry!", 65, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v0, v1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

void sub_10074881C()
{
  CKRecordID v0;
  Swift::String v1;

  sub_100757E04(&_mh_execute_header, (uint64_t)"duplicate(newContext:newParentContainerUUID:withTransaction:uuidRemapHelper:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 826, "Root container items should never be duplicated!", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Root container items should never be duplicated!");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"duplicate(newContext:newParentContainerUUID:withTransaction:uuidRemapHelper:)", 77, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 826, (uint64_t)"Root container items should never be duplicated!", 48, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v0, v1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

void sub_100748908()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ELL, 0x8000000100FCD5F0, "Freeform/CRLContainerItem.swift", 31, 2, 832, 0);
  __break(1u);
}

uint64_t sub_100748980()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform20CRLRootContainerItem_board);
}

id sub_100748990(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_1007489D0(a1, a2);
}

id sub_1007489D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v6;

  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform20CRLRootContainerItem_board], 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = _swiftEmptyDictionarySingleton;
  *(_DWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return objc_msgSendSuper2(&v6, "init");
}

uint64_t sub_100748A94()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC8Freeform20CRLRootContainerItem_board);
}

id sub_100748AA4()
{
  return sub_10067865C(type metadata accessor for CRLRootContainerItem);
}

uint64_t sub_100748AC0()
{
  return type metadata accessor for CRLRootContainerItem(0);
}

uint64_t type metadata accessor for CRLRootContainerItem(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F0298, (uint64_t)&nominal type descriptor for CRLRootContainerItem);
}

uint64_t sub_100748ADC(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1456);
}

void sub_100748B6C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5[2];

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100D16660(v3);
  v4 = (char *)v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100748C54(v5);
  *a1 = v3;
}

void sub_100748BEC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100D16694(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1007496CC(v4);
  *a1 = v2;
}

void sub_100748C54(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  Swift::Int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  Swift::Int v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  char *v141;
  char *v142;
  uint64_t v143;
  char **v144;
  char *v145;
  Swift::Int v146;
  uint64_t v147;
  uint64_t v148;

  v3 = type metadata accessor for UUID(0);
  v148 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v134 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v145 = (char *)&v130 - v7;
  v8 = __chkstk_darwin(v6);
  v142 = (char *)&v130 - v9;
  __chkstk_darwin(v8);
  v141 = (char *)&v130 - v10;
  v11 = (Swift::Int)a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      sub_100749D54(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v144 = a1;
  v131 = v12;
  v137 = v1;
  if (v11 < 2)
  {
    v17 = (char *)_swiftEmptyArrayStorage;
    v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
    v130 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v19 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v19 >= 2)
      {
        v122 = *v144;
        do
        {
          v123 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v122)
            goto LABEL_148;
          v124 = *(_QWORD *)&v17[16 * v123 + 32];
          v125 = *(_QWORD *)&v17[16 * v19 + 24];
          v126 = v137;
          sub_100749FCC((unint64_t)&v122[*(_QWORD *)(v148 + 72) * v124], (unint64_t)&v122[*(_QWORD *)(v148 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v122[*(_QWORD *)(v148 + 72) * v125], v136);
          v137 = v126;
          if (v126)
            break;
          if (v125 < v124)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = sub_100D1664C((uint64_t)v17);
          if (v123 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v127 = &v17[16 * v123 + 32];
          *(_QWORD *)v127 = v124;
          *((_QWORD *)v127 + 1) = v125;
          v128 = *((_QWORD *)v17 + 2);
          if (v19 > v128)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v128 - v19));
          *((_QWORD *)v17 + 2) = v128 - 1;
          v19 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease(v17);
      v129 = v130;
      v130[2] = 0;
      swift_bridgeObjectRelease(v129);
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v148 + 80);
    v130 = (_QWORD *)v15;
    v136 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v135 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v137;
      goto LABEL_58;
    }
    v22 = *v144;
    v146 = v11;
    v23 = v148;
    v24 = *(_QWORD *)(v148 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v148 + 16);
    v26 = v141;
    v25(v141, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v142;
    v25(v142, v27, v3);
    v143 = sub_1004B7878(&qword_1013F0328, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    LODWORD(v140) = dispatch thunk of static Comparable.< infix(_:_:)(v26, v28, v3, v143);
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v135;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v138 = v31;
    v147 = v24;
    if (v20 + 2 >= v146)
    {
      v41 = v137;
      v40 = v146;
      v39 = v24;
      if ((v140 & 1) == 0)
        break;
    }
    else
    {
      v132 = v17;
      v139 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v141;
        v25(v141, &v33[v34], v3);
        v37 = v142;
        v25(v142, &v33[v139], v3);
        v38 = dispatch thunk of static Comparable.< infix(_:_:)(v36, v37, v3, v143);
        v29(v37, v3);
        v29(v36, v3);
        if (((v140 ^ v38) & 1) != 0)
        {
          v41 = v137;
          v17 = v132;
          v32 = v35;
          v20 = v135;
          v40 = v146;
          v39 = v147;
          if ((v140 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v147;
        v33 += v147;
      }
      while (v146 != v35 + 1);
      v40 = v146;
      v32 = v146;
      v41 = v137;
      v17 = v132;
      v20 = v135;
      if ((v140 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v132 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v144;
    v143 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v138)
          goto LABEL_147;
        v48 = v41;
        v49 = &v138[v46];
        v50 = &v138[v43];
        v140 = *(char **)(v148 + 32);
        ((void (*)(char *, char *, uint64_t))v140)(v134, &v138[v46], v3);
        if (v46 < v43 || v49 >= &v138[v44])
        {
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1, v3);
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront(v49);
        }
        ((void (*)(char *, char *, uint64_t))v140)(v50, v134, v3);
        v41 = v48;
        v32 = v143;
        v47 = v144;
        v39 = v147;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v132;
    v20 = v135;
    v40 = v146;
    if (v32 < v146)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    v137 = v41;
    v143 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_100D15FCC(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v71 = *((_QWORD *)v17 + 2);
    v70 = *((_QWORD *)v17 + 3);
    v19 = v71 + 1;
    if (v71 >= v70 >> 1)
      v17 = sub_100D15FCC((char *)(v70 > 1), v71 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v72 = v17 + 32;
    v73 = &v17[16 * v71 + 32];
    v74 = v143;
    *(_QWORD *)v73 = v20;
    *((_QWORD *)v73 + 1) = v74;
    if (v71)
    {
      while (1)
      {
        v75 = v19 - 1;
        if (v19 >= 4)
        {
          v80 = &v72[16 * v19];
          v81 = *((_QWORD *)v80 - 8);
          v82 = *((_QWORD *)v80 - 7);
          v86 = __OFSUB__(v82, v81);
          v83 = v82 - v81;
          if (v86)
            goto LABEL_124;
          v85 = *((_QWORD *)v80 - 6);
          v84 = *((_QWORD *)v80 - 5);
          v86 = __OFSUB__(v84, v85);
          v78 = v84 - v85;
          v79 = v86;
          if (v86)
            goto LABEL_125;
          v87 = v19 - 2;
          v88 = &v72[16 * v19 - 32];
          v90 = *(_QWORD *)v88;
          v89 = *((_QWORD *)v88 + 1);
          v86 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v86)
            goto LABEL_127;
          v86 = __OFADD__(v78, v91);
          v92 = v78 + v91;
          if (v86)
            goto LABEL_130;
          if (v92 >= v83)
          {
            v110 = &v72[16 * v75];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v86 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v86)
              goto LABEL_134;
            v103 = v78 < v113;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v104 = *((_QWORD *)v17 + 4);
            v105 = *((_QWORD *)v17 + 5);
            v86 = __OFSUB__(v105, v104);
            v97 = v105 - v104;
            v98 = v86;
            goto LABEL_89;
          }
          v77 = *((_QWORD *)v17 + 4);
          v76 = *((_QWORD *)v17 + 5);
          v86 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          v79 = v86;
        }
        if ((v79 & 1) != 0)
          goto LABEL_126;
        v87 = v19 - 2;
        v93 = &v72[16 * v19 - 32];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v96 = __OFSUB__(v94, v95);
        v97 = v94 - v95;
        v98 = v96;
        if (v96)
          goto LABEL_129;
        v99 = &v72[16 * v75];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v86 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v86)
          goto LABEL_132;
        if (__OFADD__(v97, v102))
          goto LABEL_133;
        if (v97 + v102 >= v78)
        {
          v103 = v78 < v102;
LABEL_95:
          if (v103)
            v75 = v87;
          goto LABEL_97;
        }
LABEL_89:
        if ((v98 & 1) != 0)
          goto LABEL_128;
        v106 = &v72[16 * v75];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v86 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v86)
          goto LABEL_131;
        if (v109 < v97)
          goto LABEL_14;
LABEL_97:
        v114 = v75 - 1;
        if (v75 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v144)
          goto LABEL_146;
        v115 = v17;
        v116 = &v72[16 * v114];
        v117 = *(_QWORD *)v116;
        v118 = &v72[16 * v75];
        v119 = *((_QWORD *)v118 + 1);
        v120 = v137;
        sub_100749FCC((unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * *(_QWORD *)v116], (unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * *(_QWORD *)v118], (unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * v119], v136);
        v137 = v120;
        if (v120)
        {
          v17 = v115;
          goto LABEL_118;
        }
        if (v119 < v117)
          goto LABEL_121;
        if (v75 > *((_QWORD *)v115 + 2))
          goto LABEL_122;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v72[16 * v114 + 8] = v119;
        v121 = *((_QWORD *)v115 + 2);
        if (v75 >= v121)
          goto LABEL_123;
        v17 = v115;
        v19 = v121 - 1;
        memmove(&v72[16 * v75], v118 + 16, 16 * (v121 - 1 - v75));
        *((_QWORD *)v115 + 2) = v121 - 1;
        if (v121 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (Swift::Int)v144[1];
    v18 = v143;
    if (v143 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v144;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v131)
    goto LABEL_58;
  if (__OFADD__(v20, v131))
    goto LABEL_143;
  if (v20 + v131 >= v40)
    v51 = v40;
  else
    v51 = v20 + v131;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v132 = v17;
      v133 = v51;
      v52 = *(_QWORD *)(v148 + 72);
      v53 = *(char **)(v148 + 16);
      v137 = v41;
      v138 = v53;
      v54 = v52 * (v32 - 1);
      v139 = v52;
      v147 = v32 * v52;
      do
      {
        v56 = 0;
        v143 = v32;
        v140 = (char *)v54;
        while (1)
        {
          v146 = v20;
          v57 = *v47;
          v58 = v141;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v138;
          ((void (*)(char *, char *, uint64_t))v138)(v141, &(*v47)[v147 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v142;
          v60(v142, v61, v3);
          v63 = sub_1004B7878(&qword_1013F0328, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          LOBYTE(v57) = dispatch thunk of static Comparable.< infix(_:_:)(v58, v62, v3, v63);
          v64 = *(void (**)(_QWORD, _QWORD))(v148 + 8);
          v64(v62, v3);
          v64(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v65 = *v59;
          if (!*v59)
            goto LABEL_145;
          v66 = &v65[v147 + v56];
          v54 = (uint64_t)v140;
          v67 = &v140[(_QWORD)v65 + v56];
          v68 = *(void (**)(_QWORD, _QWORD, _QWORD))(v148 + 32);
          v68(v145, v66, v3);
          swift_arrayInitWithTakeFrontToBack(v66, v67, 1, v3);
          v68(v67, v145, v3);
          v56 -= v139;
          v20 = v146 + 1;
          v55 = v143;
          v47 = v144;
          if (v143 == v146 + 1)
            goto LABEL_51;
        }
        v55 = v143;
        v47 = v59;
        v54 = (uint64_t)v140;
LABEL_51:
        v32 = v55 + 1;
        v54 += v139;
        v147 += v139;
        v20 = v135;
      }
      while (v32 != v133);
      v32 = v133;
      v41 = v137;
      v17 = v132;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1007496CC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t *v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  Swift::Int v96;
  Swift::Int v97;
  uint64_t v98;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v80 = 0;
      v81 = *v2;
      v82 = 1;
      while (1)
      {
        v83 = *(_QWORD *)(v81 + 8 * v82);
        v84 = v80;
        do
        {
          v85 = *(_QWORD *)(v81 + v84);
          if (v85 >= v83)
            break;
          if (!v81)
            goto LABEL_143;
          *(_QWORD *)(v81 + v84 + 8) = v85;
          *(_QWORD *)(v81 + v84) = v83;
          v84 -= 8;
        }
        while (v84 != -8);
        ++v82;
        v80 += 8;
        if (v82 == v3)
          return;
      }
    }
    goto LABEL_139;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_148:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v96 = v4;
  v97 = v3;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v95 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Int);
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v97;
    v95 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v93 = v2;
  v94 = *v2 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v98 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_140;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_146;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_138;
      if (v9 - v13 < v96)
      {
        v21 = v13 + v96;
        if (__OFADD__(v13, v96))
          goto LABEL_141;
        if (v21 >= v3)
          v21 = v3;
        if (v21 < v13)
          goto LABEL_142;
        if (v9 != v21)
        {
          v22 = (uint64_t *)(v94 + 8 * v9);
          do
          {
            v23 = *(_QWORD *)(v10 + 8 * v9);
            v24 = v13;
            v25 = v22;
            do
            {
              v26 = *v25;
              if (*v25 >= v23)
                break;
              if (!v10)
                goto LABEL_144;
              *v25 = v23;
              v25[1] = v26;
              --v25;
              ++v24;
            }
            while (v9 != v24);
            ++v9;
            ++v22;
          }
          while (v9 != v21);
          v9 = v21;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100D15FCC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v98;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_100D15FCC((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v98;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
      break;
    v12 = 1;
LABEL_15:
    v3 = v97;
    if (v9 >= v97)
    {
      v8 = v95;
      v2 = v93;
LABEL_104:
      v95 = v8;
      if (v12 < 2)
      {
LABEL_115:
        v79 = v11;
        goto LABEL_116;
      }
      v86 = *v2;
      while (1)
      {
        v87 = v12 - 2;
        if (v12 < 2)
          break;
        if (!v86)
          goto LABEL_147;
        v78 = v11;
        v88 = v11 + 32;
        v89 = *(_QWORD *)&v11[16 * v87 + 32];
        v90 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_10074A520((char *)(v86 + 8 * v89), (char *)(v86 + 8 * *(_QWORD *)&v88[16 * v12 - 16]), v86 + 8 * v90, __dst);
        if (v1)
          goto LABEL_95;
        if (v90 < v89)
          goto LABEL_135;
        if ((swift_isUniquelyReferenced_nonNull_native(v78) & 1) == 0)
          v78 = sub_100D1664C((uint64_t)v78);
        if (v87 >= *((_QWORD *)v78 + 2))
          goto LABEL_136;
        v91 = &v78[16 * v87 + 32];
        *(_QWORD *)v91 = v89;
        *((_QWORD *)v91 + 1) = v90;
        v92 = *((_QWORD *)v78 + 2);
        if (v12 > v92)
          goto LABEL_137;
        memmove(&v78[16 * v12 + 16], &v78[16 * v12 + 32], 16 * (v92 - v12));
        v11 = v78;
        *((_QWORD *)v78 + 2) = v92 - 1;
        v12 = v92 - 1;
        if (v92 <= 2)
          goto LABEL_115;
      }
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
  }
  while (1)
  {
    v31 = v12 - 1;
    if (v12 >= 4)
    {
      v36 = &v29[16 * v12];
      v37 = *((_QWORD *)v36 - 8);
      v38 = *((_QWORD *)v36 - 7);
      v42 = __OFSUB__(v38, v37);
      v39 = v38 - v37;
      if (v42)
        goto LABEL_122;
      v41 = *((_QWORD *)v36 - 6);
      v40 = *((_QWORD *)v36 - 5);
      v42 = __OFSUB__(v40, v41);
      v34 = v40 - v41;
      v35 = v42;
      if (v42)
        goto LABEL_123;
      v43 = v12 - 2;
      v44 = &v29[16 * v12 - 32];
      v46 = *(_QWORD *)v44;
      v45 = *((_QWORD *)v44 + 1);
      v42 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      if (v42)
        goto LABEL_125;
      v42 = __OFADD__(v34, v47);
      v48 = v34 + v47;
      if (v42)
        goto LABEL_128;
      if (v48 >= v39)
      {
        v66 = &v29[16 * v31];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v42 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v42)
          goto LABEL_132;
        v59 = v34 < v69;
        goto LABEL_84;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v60 = *((_QWORD *)v11 + 4);
        v61 = *((_QWORD *)v11 + 5);
        v42 = __OFSUB__(v61, v60);
        v53 = v61 - v60;
        v54 = v42;
        goto LABEL_78;
      }
      v33 = *((_QWORD *)v11 + 4);
      v32 = *((_QWORD *)v11 + 5);
      v42 = __OFSUB__(v32, v33);
      v34 = v32 - v33;
      v35 = v42;
    }
    if ((v35 & 1) != 0)
      goto LABEL_124;
    v43 = v12 - 2;
    v49 = &v29[16 * v12 - 32];
    v51 = *(_QWORD *)v49;
    v50 = *((_QWORD *)v49 + 1);
    v52 = __OFSUB__(v50, v51);
    v53 = v50 - v51;
    v54 = v52;
    if (v52)
      goto LABEL_127;
    v55 = &v29[16 * v31];
    v57 = *(_QWORD *)v55;
    v56 = *((_QWORD *)v55 + 1);
    v42 = __OFSUB__(v56, v57);
    v58 = v56 - v57;
    if (v42)
      goto LABEL_130;
    if (__OFADD__(v53, v58))
      goto LABEL_131;
    if (v53 + v58 >= v34)
    {
      v59 = v34 < v58;
LABEL_84:
      if (v59)
        v31 = v43;
      goto LABEL_86;
    }
LABEL_78:
    if ((v54 & 1) != 0)
      goto LABEL_126;
    v62 = &v29[16 * v31];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v42 = __OFSUB__(v63, v64);
    v65 = v63 - v64;
    if (v42)
      goto LABEL_129;
    if (v65 < v53)
      goto LABEL_15;
LABEL_86:
    v70 = v31 - 1;
    if (v31 - 1 >= v12)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!v10)
      goto LABEL_145;
    v71 = &v29[16 * v70];
    v72 = *(_QWORD *)v71;
    v73 = v29;
    v74 = &v29[16 * v31];
    v75 = *((_QWORD *)v74 + 1);
    sub_10074A520((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
    if (v1)
      break;
    if (v75 < v72)
      goto LABEL_119;
    if (v31 > *((_QWORD *)v11 + 2))
      goto LABEL_120;
    *(_QWORD *)v71 = v72;
    *(_QWORD *)&v73[16 * v70 + 8] = v75;
    v76 = *((_QWORD *)v11 + 2);
    if (v31 >= v76)
      goto LABEL_121;
    v12 = v76 - 1;
    memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
    v29 = v73;
    *((_QWORD *)v11 + 2) = v76 - 1;
    v10 = v98;
    if (v76 <= 2)
      goto LABEL_15;
  }
  v78 = v11;
LABEL_95:
  v79 = v78;
LABEL_116:
  swift_bridgeObjectRelease(v79);
  v95[2] = 0;
  swift_bridgeObjectRelease(v95);
}

uint64_t sub_100749D54(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a1;
  v7 = type metadata accessor for UUID(0);
  v38 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v37 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v34 = (char *)&v28 - v11;
  result = __chkstk_darwin(v10);
  v33 = (char *)&v28 - v13;
  v36 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v14 = v38[9];
    v31 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v32 = a4;
    v40 = v14 * (v36 - 1);
    v35 = v14;
    v39 = v14 * v36;
LABEL_5:
    v15 = 0;
    v16 = v30;
    while (1)
    {
      v17 = *a4;
      v18 = v33;
      v19 = v31;
      v31(v33, v39 + v15 + *a4, v7);
      v20 = v34;
      v19(v34, v40 + v15 + v17, v7);
      v21 = sub_1004B7878(&qword_1013F0328, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v20, v7, v21);
      v22 = (void (*)(char *, uint64_t))v38[1];
      v23 = v20;
      a4 = v32;
      v22(v23, v7);
      result = ((uint64_t (*)(char *, uint64_t))v22)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v40 += v35;
        v39 += v35;
        if (++v36 == v29)
          return result;
        goto LABEL_5;
      }
      v24 = *a4;
      if (!*a4)
        break;
      v25 = v24 + v39 + v15;
      v26 = v24 + v40 + v15;
      v27 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v27(v37, v25, v7);
      swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v7);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v26, v37, v7);
      v15 -= v35;
      if (v36 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100749FCC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD **)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v50 = (char *)&v45 - v12;
  v52 = v9[9];
  if (!v52)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v15 = v13 / v52;
  if (v14 >= v13 / v52)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v52;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v15, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v29 = a4 + v17;
      v53 = a4 + v17;
      v55 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v31 = -v52;
        v46 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v47 = v9;
        v48 = a4;
        v49 = a1;
        do
        {
          v52 = a3 + v31;
          v32 = v50;
          v33 = v46;
          v46(v50, v29 + v31, v8);
          v34 = a2 + v31;
          v35 = v31;
          v36 = v51;
          v33(v51, v34, v8);
          v37 = sub_1004B7878(&qword_1013F0328, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          LOBYTE(v33) = dispatch thunk of static Comparable.< infix(_:_:)(v32, v36, v8, v37);
          v38 = (void (*)(char *, uint64_t))v9[1];
          v38(v36, v8);
          v38(v32, v8);
          if ((v33 & 1) != 0)
          {
            v31 = v35;
            v39 = v52;
            if (a3 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v52, v34, 1, v8);
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v52);
            }
            v55 += v31;
          }
          else
          {
            v42 = v53;
            v43 = v53 + v35;
            v53 += v35;
            v31 = v35;
            v39 = v52;
            if (a3 < v42 || v52 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v52, v43, 1, v8);
              v34 = a2;
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v52);
              v34 = a2;
            }
          }
          v29 = v53;
          if (v53 <= v40)
            break;
          a2 = v34;
          a3 = v39;
        }
        while (v34 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v52;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v14, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v49 = a4 + v16;
    v53 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v50;
        v19(v50, a2, v8);
        v22 = v51;
        v19(v51, a4, v8);
        v23 = sub_1004B7878(&qword_1013F0328, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v24 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v8, v23);
        v25 = (void (*)(char *, uint64_t))v9[1];
        v25(v22, v8);
        v25(v21, v8);
        v26 = v55;
        if ((v24 & 1) != 0)
        {
          v27 = a2 + v52;
          if (v55 < a2 || v55 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2, 1, v8);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 == a2)
              v26 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v55);
          }
        }
        else
        {
          v28 = v54 + v52;
          if (v55 < v54 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54, 1, v8);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 != v54)
              swift_arrayInitWithTakeBackToFront(v55);
          }
          v54 = v28;
          v27 = a2;
        }
        v55 = v26 + v52;
        a4 = v54;
        if (v54 >= v49)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_60:
    sub_100D160C4(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10074A520(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (v20 >= *((_QWORD *)v16 - 1))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v4 >= *(_QWORD *)v6)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_100D160D0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10074A78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t result;
  CKRecordID v26;
  Swift::String v27;
  _BYTE v29[24];
  _QWORD v30[3];
  uint64_t v31;

  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v29[-v8 - 8];
  v10 = sub_1004B804C(&qword_1013F0360);
  __chkstk_darwin(v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for CRLContainerItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    swift_unknownObjectRetain(a1);
    v16 = sub_100B0C360(v15, a2);
    v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v18 = type metadata accessor for CRLContainerItemData(0);
    v19 = swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v19 + 680))();
    v20 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v18, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v20 + 680))();
    v21 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    CRStruct_1.actionUndoingDifference(from:)(v6, v4, v21);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLContainerItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLContainerItemCRDTData);
    v22 = sub_1004B804C((uint64_t *)&unk_1013F0368);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_1013F0360);
      memset(v30, 0, sizeof(v30));
      v31 = 1;
    }
    else
    {
      v31 = v22;
      v24 = sub_10050D1B0(v30);
      (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v23 + 32))(v24, v12, v22);
    }
    swift_beginAccess(v16 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v29, 33, 0);
    sub_10083DA20((uint64_t)v30, 1);
    swift_endAccess(v29);
    swift_unknownObjectRelease(a1);
    return v16;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 629, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 629, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10074AAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double *v40;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  double *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t result;
  CKRecordID v54;
  uint64_t v55;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v4 = sub_1004B804C(&qword_1013F0330);
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  __chkstk_darwin(v4);
  v57 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F0338);
  v62 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v58 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v57 - v9;
  v10 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = sub_1004B804C(&qword_1013F0340);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v57 - v20;
  v22 = type metadata accessor for CRLContainerItem(0);
  v23 = swift_dynamicCastClass(a1, v22);
  if (v23)
  {
    v24 = v23;
    v63 = v6;
    v25 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v24, v25))
    {
      v26 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v27 = type metadata accessor for CRLContainerItemData(0);
      v28 = swift_dynamicCastClassUnconditional(v26, v27, 0, 0, 0);
      (*(void (**)(void))(*(_QWORD *)v28 + 680))();
      v29 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v27, 0, 0, 0);
      (*(void (**)(void))(*(_QWORD *)v29 + 680))();
      v30 = sub_1004B7878(&qword_1013F0348, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F2227C);
      v31 = a1;
      swift_unknownObjectRetain(a1);
      v32 = (uint64_t)v21;
      CRType.observableDifference(from:)(v12, v10, v30);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLContainerItemCRDTData);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLContainerItemCRDTData);
      sub_1004CB7BC((uint64_t)v21, (uint64_t)v18, &qword_1013F0340);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v18, 1, v63) == 1)
      {
        v33 = &qword_1013F0340;
        v34 = (uint64_t)v18;
      }
      else
      {
        v35 = (uint64_t)v18;
        v36 = v59;
        sub_1004C4938(v35, v59, (uint64_t *)&unk_1013F0350);
        v37 = v58;
        sub_1004CB7BC(v36, v58, (uint64_t *)&unk_1013F0350);
        v39 = v60;
        v38 = v61;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v37, 1, v61) != 1)
        {
          v43 = v57;
          (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v57, v37, v38);
          v40 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v45 = *((_QWORD *)v40 + 2);
          v44 = *((_QWORD *)v40 + 3);
          if (v45 >= v44 >> 1)
            v40 = (double *)sub_100D0EF94((_QWORD *)(v44 > 1), v45 + 1, 1, v40);
          *((_QWORD *)v40 + 2) = v45 + 1;
          v46 = &v40[2 * v45];
          *((_QWORD *)v46 + 4) = 0x736D657469;
          v46[5] = -3.24180904e178;
          v47 = CROrderedSet.ObservableDifference.moved.getter(v38);
          v48 = *(_QWORD *)(v47 + 16);
          v49 = swift_bridgeObjectRelease(v47);
          if (v48)
          {
            v51 = *((_QWORD *)v40 + 2);
            v50 = *((_QWORD *)v40 + 3);
            if (v51 >= v50 >> 1)
              v40 = (double *)sub_100D0EF94((_QWORD *)(v50 > 1), v51 + 1, 1, v40);
            *((_QWORD *)v40 + 2) = v51 + 1;
            v52 = &v40[2 * v51];
            v52[4] = 2.65134911e180;
            v52[5] = -5.98008217e197;
          }
          (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v43, v38, v49);
          sub_1004CB800(v36, &qword_1013F0338);
          if (*((_QWORD *)v40 + 2))
            goto LABEL_8;
          goto LABEL_16;
        }
        sub_1004CB800(v36, &qword_1013F0338);
        v33 = (uint64_t *)&unk_1013F0350;
        v34 = v37;
      }
      sub_1004CB800(v34, v33);
      v40 = _swiftEmptyArrayStorage;
      if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      {
LABEL_8:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v64 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v40, 1, isUniquelyReferenced_nonNull_native);
        v42 = v64;
        swift_unknownObjectRelease(v31);
        swift_bridgeObjectRelease(0x8000000000000000);
LABEL_17:
        sub_1004CB800(v32, &qword_1013F0340);
        return (uint64_t)v42;
      }
LABEL_16:
      swift_bridgeObjectRelease(v40);
      swift_unknownObjectRelease(v31);
      v42 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 641, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 641, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v54, *(Swift::String *)&v55);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

uint64_t sub_10074B174(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[4];
  uint64_t v19;

  v17 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  v10 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v11 = sub_1004CBA30((unint64_t *)&unk_1013F0300, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
  dispatch thunk of Collection.startIndex.getter(v10, v11);
  dispatch thunk of Collection.endIndex.getter(v10, v11);
  if (v19 == v18[0])
    return 0;
  v16 = v2;
  while (1)
  {
    v13 = dispatch thunk of Collection.subscript.read(v18, &v19, v10, v11);
    (*(void (**)(char *))(v4 + 16))(v9);
    v14 = ((uint64_t (*)(_QWORD *, _QWORD))v13)(v18, 0);
    (*(void (**)(uint64_t))((swift_isaMask & *v17) + 0x88))(v14);
    LOBYTE(v13) = static UUID.== infix(_:_:)(v9);
    v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v6, v3);
    v15(v9, v3);
    if ((v13 & 1) != 0)
      break;
    dispatch thunk of Collection.formIndex(after:)(&v19, v10, v11);
    dispatch thunk of Collection.endIndex.getter(v10, v11);
    if (v19 == v18[0])
      return 0;
  }
  return v19;
}

void sub_10074B364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  char v42[48];
  uint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner();
  v8 = swift_allocObject(v7, 40, 7);
  *(_QWORD *)(v8 + 16) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v8 + 24), "Partial Tree");
  *(_BYTE *)(v8 + 37) = 0;
  *(_WORD *)(v8 + 38) = -5120;
  swift_retain(v8);
  UUID.init()(v9);
  v10 = type metadata accessor for CRLTransactionContext(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v35 = v8;
  v40 = sub_1006AD88C(v8, 0, 1, (uint64_t)v6, 1, v11);
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v12; v12 = _CocoaArrayWrapper.endIndex.getter(v34))
  {
    v39 = a1 & 0xC000000000000001;
    v13 = 4;
    v38 = xmmword_100EEF400;
    v37 = xmmword_100EF5E40;
    v36 = a1;
    while (1)
    {
      v14 = v39 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1) : *(id *)(a1 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      v17 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v18 = swift_allocObject(v17, 40, 7);
      *(_OWORD *)(v18 + 16) = v38;
      *(_QWORD *)(v18 + 32) = v15;
      v43 = v18;
      specialized Array._endMutation()(v18);
      v19 = v43;
      v41 = v15;
      v20 = NSNotFound.getter(v41);
      v21 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
      inited = swift_initStackObject(v21, v42);
      *(_OWORD *)(inited + 16) = v37;
      *(_QWORD *)(inited + 32) = v20;
      *(_QWORD *)(inited + 40) = v19;
      v23 = sub_1008E00A0((_QWORD *)inited);
      swift_setDeallocating(inited);
      swift_bridgeObjectRetain(v19);
      v24 = sub_1004B804C((uint64_t *)&unk_101406AF0);
      swift_arrayDestroy(inited + 32, 1, v24);
      v25 = v40;
      sub_100745390(v23, v40);

      if (v2)
      {
        swift_release(v25);
        swift_release(v35);
        swift_bridgeObjectRelease(v36);
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v23);
        return;
      }
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v23);
      ++v13;
      a1 = v36;
      if (v16 == v12)
        goto LABEL_10;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_10:
  v26 = swift_bridgeObjectRelease(a1);
  v27 = v40;
  v28 = (*(uint64_t (**)(__n128))(*(_QWORD *)v40 + 720))(v26);
  if (v2)
  {
    swift_release(v35);
    swift_release(v27);
  }
  else
  {
    swift_release(v28);
    v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
    v30 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
    ObjectType = swift_getObjectType(v29);
    v32 = *(void (**)(uint64_t, uint64_t, __n128))(v30 + 48);
    v33 = swift_unknownObjectRetain(v29);
    v32(ObjectType, v30, v33);
    swift_release(v35);
    swift_release(v27);
    swift_unknownObjectRelease(v29);
  }
}

void sub_10074B6B8(int64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[48];
  uint64_t v44;

  v3 = v2;
  v40 = a2;
  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner();
  v9 = swift_allocObject(v8, 40, 7);
  *(_QWORD *)(v9 + 16) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v9 + 24), "Partial Tree");
  *(_BYTE *)(v9 + 37) = 0;
  *(_WORD *)(v9 + 38) = -5120;
  swift_retain(v9);
  UUID.init()(v10);
  v11 = type metadata accessor for CRLTransactionContext(0);
  v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v35 = v9;
  v41 = sub_1006AD88C(v9, 0, 1, (uint64_t)v7, 1, v12);
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v13; v13 = _CocoaArrayWrapper.endIndex.getter(v34))
  {
    v14 = 0;
    v39 = a1 & 0xC000000000000001;
    v38 = xmmword_100EEF400;
    v37 = xmmword_100EF5E40;
    v36 = a1;
    while (1)
    {
      v15 = v39
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a1)
          : *(id *)(a1 + 8 * v14 + 32);
      v16 = v15;
      if (__OFADD__(v14, 1))
        break;
      v42 = v14 + 1;
      v17 = v40 + v14;
      v18 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v19 = swift_allocObject(v18, 40, 7);
      *(_OWORD *)(v19 + 16) = v38;
      *(_QWORD *)(v19 + 32) = v16;
      v44 = v19;
      specialized Array._endMutation()(v19);
      v20 = v44;
      v21 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
      inited = swift_initStackObject(v21, v43);
      *(_OWORD *)(inited + 16) = v37;
      *(_QWORD *)(inited + 32) = v17;
      *(_QWORD *)(inited + 40) = v20;
      a1 = sub_1008E00A0((_QWORD *)inited);
      swift_setDeallocating(inited);
      v23 = v16;
      swift_bridgeObjectRetain(v20);
      v24 = sub_1004B804C((uint64_t *)&unk_101406AF0);
      swift_arrayDestroy(inited + 32, 1, v24);
      sub_100745390(a1, v41);

      if (v3)
      {
        swift_release(v41);
        swift_release(v35);
        swift_bridgeObjectRelease(v36);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(a1);
        return;
      }
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(a1);
      if (__OFADD__(v17, 1))
        goto LABEL_17;
      ++v14;
      a1 = v36;
      if (v42 == v13)
        goto LABEL_11;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_11:
  v25 = swift_bridgeObjectRelease(a1);
  v26 = v41;
  v27 = (*(uint64_t (**)(__n128))(*(_QWORD *)v41 + 720))(v25);
  if (v3)
  {
    swift_release(v35);
    v28 = v26;
  }
  else
  {
    swift_release(v27);
    v29 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
    v30 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
    ObjectType = swift_getObjectType(v29);
    v32 = *(void (**)(uint64_t, uint64_t, __n128))(v30 + 48);
    v33 = swift_unknownObjectRetain(v29);
    v32(ObjectType, v30, v33);
    swift_unknownObjectRelease(v29);
    swift_release(v26);
    v28 = v35;
  }
  swift_release(v28);
}

uint64_t sub_10074BA14(uint64_t a1)
{
  uint64_t v1;

  return sub_100DB604C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_10074BA30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  return CROrderedSet.contains(_:)(a1, v2) & 1;
}

uint64_t sub_10074BA7C(uint64_t a1)
{
  uint64_t v1;

  return sub_10062158C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_10074BAA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1007473BC(a1, *(_QWORD **)(v1 + 16)) & 1;
}

BOOL sub_10074BAC4(_QWORD **a1)
{
  return sub_1007470C8(a1);
}

void sub_10074BAE0(uint64_t a1)
{
  sub_10074BAF0(a1, 1);
}

void sub_10074BAE8(uint64_t a1)
{
  sub_10074BAF0(a1, 0);
}

void sub_10074BAF0(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;

  v11 = objc_msgSend((id)objc_opt_self(CRLLineEnd), "lineEndWithType:", a1);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
  if (v5)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5, v6);
  else
    ObjCClassFromMetadata = 0;
  v8 = objc_msgSend(v4, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v9 = objc_opt_self(CRLShapeEditor);
  v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
  if (v10)
  {
    objc_msgSend(v10, "setLineEnd:isLeftLineEnd:", v11, a2 & 1);
    swift_unknownObjectRelease(v8);

  }
  else
  {

    swift_unknownObjectRelease(v8);
  }
}

uint64_t sub_10074BBFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, (unint64_t *)&unk_101401450, off_101229858);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLConnectionLineEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "connectionLines");
    swift_unknownObjectRelease(v5);
    v9 = sub_1004B8930(0, (unint64_t *)&qword_1013EC6C0, off_101229850);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    sub_10094A008(&v12, v10);
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
}

id sub_10074BD2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterLineDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterLineDataProvider()
{
  return objc_opt_self(_TtC8Freeform32CRLMiniFormatterLineDataProvider);
}

ValueMetadata *type metadata accessor for CRLRenameBoardIntentPerformer()
{
  return &type metadata for CRLRenameBoardIntentPerformer;
}

void sub_10074BD8C(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_10074BDE0()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x4F746E65746E6F63, 0xED00007465736666);
  swift_bridgeObjectRelease(0xED00007465736666);
  return Hasher._finalize()();
}

void sub_10074BE80(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_10074BECC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1701734764, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

void sub_10074BF58(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_10074BFAC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x52436E6F6D6D6F63, 0xEE00617461445444);
  swift_bridgeObjectRelease(0xEE00617461445444);
  return Hasher._finalize()();
}

void sub_10074C050()
{
  qword_10147F558 = (uint64_t)&off_101264B60;
}

uint64_t sub_10074C064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_10147F560);
  sub_1004F2A1C(v17, (uint64_t)qword_10147F560);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x6570616853, 0xE500000000000000);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

unint64_t sub_10074C290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _BYTE *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  char *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  _BYTE *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, _QWORD, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  char *v75;
  _BYTE *v76;
  uint64_t v77;
  char *v78;
  unint64_t result;
  uint64_t v80;
  char *v81;
  char *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void (*v88)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  void (*v91)(char *, uint64_t, uint64_t, uint64_t);
  void (*v92)(char *, _QWORD, uint64_t);
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v96 = (char *)&v80 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v90 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013F03F8);
  v17 = sub_1004B804C(&qword_1013F0400);
  v18 = *(_QWORD *)(v17 - 8);
  v89 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 6 * v89, v19 | 7);
  v85 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100EFD140;
  v99 = (_BYTE *)(v21 + v20);
  v93 = v17;
  *(_BYTE *)(v21 + v20) = 0;
  v22 = String.LocalizationValue.init(stringLiteral:)(0x656C63726943, 0xE600000000000000);
  v86 = v9;
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v92 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v95 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v92(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v98);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Circle shape display representation", 35, 2);
  v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v24 = v90;
  v88(v90, 1, 1, v97);
  v94 = type metadata accessor for DisplayRepresentation.Image(0);
  v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56);
  v25 = v96;
  v91(v96, 1, 1, v94);
  v26 = v15;
  v81 = v15;
  v27 = v24;
  DisplayRepresentation.init(title:subtitle:image:)(v26, v24, v25);
  v28 = v89;
  v29 = v99;
  v84 = (uint64_t)&v99[v89 + *(int *)(v17 + 48)];
  v99[v89] = 1;
  v30 = v12;
  v31 = String.LocalizationValue.init(stringLiteral:)(1701734732, 0xE400000000000000);
  v32 = v86;
  static Locale.current.getter(v31);
  v87 = v6;
  v33 = v23;
  v34 = v98;
  v35 = v92;
  v92(v6, v33, v98);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v32, v6, "Line display representation", 27, 2);
  v36 = v27;
  v88(v27, 1, 1, v97);
  v37 = v25;
  v38 = v25;
  v39 = v91;
  v91(v38, 1, 1, v94);
  v40 = v81;
  DisplayRepresentation.init(title:subtitle:image:)(v81, v36, v37);
  v84 = 2 * v28;
  v41 = &v29[2 * v28];
  v42 = v93;
  v83 = &v41[*(int *)(v93 + 48)];
  *v41 = 2;
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100FCDFB0);
  v44 = v32;
  static Locale.current.getter(v43);
  v45 = v87;
  v35(v87, v95, v34);
  v46 = v40;
  v47 = v30;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0x6E497070414C5243, 0xED000073746E6574, v44, v45, "Rounded Rectangle shape display representation", 46, 2);
  v48 = v90;
  v49 = v97;
  v50 = v88;
  v88(v90, 1, 1, v97);
  v51 = v96;
  v52 = v94;
  v39(v96, 1, 1, v94);
  v53 = v46;
  DisplayRepresentation.init(title:subtitle:image:)(v46, v48, v51);
  v54 = v89;
  v55 = &v99[v84 + v89];
  v84 = (uint64_t)&v55[*(int *)(v42 + 48)];
  *v55 = 3;
  v82 = v47;
  v56 = String.LocalizationValue.init(stringLiteral:)(0x657261757153, 0xE600000000000000);
  static Locale.current.getter(v56);
  v57 = v87;
  v58 = v95;
  v59 = v98;
  v92(v87, v95, v98);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v47, 0x6E497070414C5243, 0xED000073746E6574, v44, v57, "Square shape display representation", 35, 2);
  v60 = v90;
  v50(v90, 1, 1, v49);
  v61 = v96;
  v62 = v52;
  v91(v96, 1, 1, v52);
  v63 = v60;
  DisplayRepresentation.init(title:subtitle:image:)(v53, v60, v61);
  v84 = 4 * v54;
  v64 = &v99[4 * v54];
  v83 = &v64[*(int *)(v93 + 48)];
  *v64 = 4;
  v65 = v82;
  v66 = String.LocalizationValue.init(stringLiteral:)(1918989395, 0xE400000000000000);
  v67 = v44;
  static Locale.current.getter(v66);
  v68 = v87;
  v69 = v92;
  v92(v87, v58, v59);
  v70 = v67;
  v71 = v68;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v65, 0x6E497070414C5243, 0xED000073746E6574, v70, v68, "Star shape display representation", 33, 2);
  v72 = v97;
  v73 = v88;
  v88(v63, 1, 1, v97);
  v74 = v91;
  v91(v61, 1, 1, v62);
  v75 = v63;
  DisplayRepresentation.init(title:subtitle:image:)(v53, v63, v61);
  v76 = &v99[v84 + v89];
  v99 = &v76[*(int *)(v93 + 48)];
  *v76 = 5;
  v77 = String.LocalizationValue.init(stringLiteral:)(0x656C676E61697254, 0xE800000000000000);
  v78 = v86;
  static Locale.current.getter(v77);
  v69(v71, v95, v98);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v65, 0x6E497070414C5243, 0xED000073746E6574, v78, v71, "Triangle shape display representation", 37, 2);
  v73(v75, 1, 1, v72);
  v74(v61, 1, 1, v94);
  DisplayRepresentation.init(title:subtitle:image:)(v53, v75, v61);
  result = sub_1008D7138(v85);
  qword_10147F578 = result;
  return result;
}

void sub_10074CA88(char *a1)
{
  sub_10083C414(*a1);
}

void sub_10074CA98()
{
  char *v0;

  sub_10074BE80(*v0);
}

void sub_10074CAA0(uint64_t a1)
{
  char *v1;

  sub_10083D0A0(a1, *v1);
}

void sub_10074CAA8(uint64_t a1)
{
  char *v1;

  sub_10083D624(a1, *v1);
}

unint64_t sub_10074CAB0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10074D0A0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10074CADC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10074CB08 + 4 * byte_100F083A0[*v0]))();
}

void sub_10074CB08(_QWORD *a1@<X8>)
{
  *a1 = 1701734764;
  a1[1] = 0xE400000000000000;
}

void sub_10074CB1C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000100FAA500;
}

void sub_10074CB3C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x657261757173;
  a1[1] = v1;
}

void sub_10074CB50(_QWORD *a1@<X8>)
{
  *a1 = 1918989427;
  a1[1] = 0xE400000000000000;
}

void sub_10074CB64(_QWORD *a1@<X8>)
{
  *a1 = 0x656C676E61697274;
  a1[1] = 0xE800000000000000;
}

unint64_t sub_10074CB84()
{
  unint64_t result;

  result = qword_1013F03A8;
  if (!qword_1013F03A8)
  {
    result = swift_getWitnessTable(&unk_100F08490, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03A8);
  }
  return result;
}

unint64_t sub_10074CBCC()
{
  unint64_t result;

  result = qword_1013F03B0;
  if (!qword_1013F03B0)
  {
    result = swift_getWitnessTable(&unk_100F084C8, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03B0);
  }
  return result;
}

unint64_t sub_10074CC14()
{
  unint64_t result;

  result = qword_1013F03B8;
  if (!qword_1013F03B8)
  {
    result = swift_getWitnessTable(&unk_100F08418, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03B8);
  }
  return result;
}

void *sub_10074CC58()
{
  return &protocol witness table for String;
}

unint64_t sub_10074CC68()
{
  unint64_t result;

  result = qword_1013F03C0;
  if (!qword_1013F03C0)
  {
    result = swift_getWitnessTable(&unk_100F084F8, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03C0);
  }
  return result;
}

unint64_t sub_10074CCB0()
{
  unint64_t result;

  result = qword_1013F03C8;
  if (!qword_1013F03C8)
  {
    result = swift_getWitnessTable(&unk_100F08520, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03C8);
  }
  return result;
}

unint64_t sub_10074CCF8()
{
  unint64_t result;

  result = qword_1013F03D0;
  if (!qword_1013F03D0)
  {
    result = swift_getWitnessTable(&unk_100F085A0, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03D0);
  }
  return result;
}

uint64_t sub_10074CD3C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DCFF0 != -1)
    swift_once(&qword_1013DCFF0, sub_10074C064);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_10147F560);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_10074CDAC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100618404();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_10074CDEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100618404();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10074CE28()
{
  unint64_t result;

  result = qword_1013F03D8;
  if (!qword_1013F03D8)
  {
    result = swift_getWitnessTable(&unk_100F085E0, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03D8);
  }
  return result;
}

unint64_t sub_10074CE70()
{
  unint64_t result;

  result = qword_1013F03E0;
  if (!qword_1013F03E0)
  {
    result = swift_getWitnessTable(&unk_100F08608, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03E0);
  }
  return result;
}

unint64_t sub_10074CEB8()
{
  unint64_t result;

  result = qword_1013F03E8;
  if (!qword_1013F03E8)
  {
    result = swift_getWitnessTable(&unk_100F083D8, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013F03E8);
  }
  return result;
}

double sub_10074CEFC()
{
  double result;

  if (qword_1013DCFF8 != -1)
    swift_once(&qword_1013DCFF8, sub_10074C290);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_10147F578).n128_u64[0];
  return result;
}

uint64_t sub_10074CF3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10074CCF8();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10074CF78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F03F0;
  if (!qword_1013F03F0)
  {
    v1 = sub_1004CB6A4(qword_1013E8218);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F03F0);
  }
  return result;
}

void sub_10074CFC4(_QWORD *a1@<X8>)
{
  *a1 = &off_101263E78;
}

uint64_t storeEnumTagSinglePayload for CRLShapeTypeEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10074D020 + 4 * byte_100F083AB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10074D054 + 4 * byte_100F083A6[v4]))();
}

uint64_t sub_10074D054(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10074D05C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10074D064);
  return result;
}

uint64_t sub_10074D070(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10074D078);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10074D07C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10074D084(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLShapeTypeEntity()
{
  return &type metadata for CRLShapeTypeEntity;
}

unint64_t sub_10074D0A0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101264D98, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

void sub_10074D0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13[24];
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup__actionString + 8);
  if (v1)
    goto LABEL_17;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
  swift_beginAccess(v2, v13, 0, 0);
  v3 = *v2;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease(v3);
    goto LABEL_15;
  }
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  if (!_CocoaArrayWrapper.endIndex.getter(v11))
    goto LABEL_14;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
LABEL_7:
    v6 = v5;
    swift_bridgeObjectRelease(v3);
    v12 = v6;
    v7 = type metadata accessor for CRLCommand();
    v8 = sub_1004B804C(&qword_1013EBC68);
    if ((swift_dynamicCast(&v14, &v12, v7, v8, 6) & 1) != 0)
    {
      v9 = *((_QWORD *)&v15 + 1);
      if (*((_QWORD *)&v15 + 1))
      {
        v10 = v16;
        sub_1004BB5A4(&v14, *((uint64_t *)&v15 + 1));
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v14);
LABEL_17:
        swift_bridgeObjectRetain(v1);
        return;
      }
LABEL_16:
      sub_10074E040((uint64_t)&v14);
      goto LABEL_17;
    }
LABEL_15:
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    goto LABEL_16;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_10074D27C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands, v9, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v2);
  v3 = sub_10074D90C();
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v8 = v2;
    else
      v8 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    v5 = v3 ^ 1;
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease_n(v2, 2);
    return;
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  v5 = v3 ^ 1;
  if (!v4)
    goto LABEL_16;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v7 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2);
        if ((v5 & 1) == 0)
          goto LABEL_11;
      }
      else
      {
        v7 = *(id *)(v2 + 8 * v6 + 32);
        if ((v5 & 1) == 0)
        {
LABEL_11:
          v5 = 0;
          goto LABEL_6;
        }
      }
      v5 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x60))();
LABEL_6:

      if (v4 == ++v6)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_10074D3C4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];
  unsigned int v22;

  v5 = v4;
  v22 = a3;
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
  swift_beginAccess(v6, v21, 0, 0);
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
    goto LABEL_20;
  if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
    do
    {
      v7 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        if (v7 < 0)
          v18 = *v6;
        else
          v18 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v6);
        v8 = _CocoaArrayWrapper.endIndex.getter(v18);
        if (!v8)
        {
LABEL_18:
          swift_bridgeObjectRelease(v7);
          return;
        }
      }
      else
      {
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*v6);
        if (!v8)
          goto LABEL_18;
      }
      v9 = 4;
      while (1)
      {
        v6 = (uint64_t *)(v9 - 4);
        v11 = (v7 & 0xC000000000000001) != 0
            ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7)
            : *(id *)(v7 + 8 * v9);
        v10 = v11;
        v12 = v9 - 3;
        if (__OFADD__(v6, 1))
          break;
        v13 = type metadata accessor for CRLCommandGroup();
        if (swift_dynamicCastClass(v10, v13)
          && (v14 = v10, v15 = sub_10074D90C(), v14, (v15 & 1) != 0))
        {
          v10 = v14;
        }
        else if (((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x60))() & 1) == 0)
        {
          (*(void (**)(uint64_t, uint64_t, _QWORD))((swift_isaMask & *v10) + 0x80))(a1, a2, v22);
          if (v5)
          {

            goto LABEL_18;
          }
          *((_BYTE *)v10 + OBJC_IVAR____TtC8Freeform10CRLCommand_committed) = 1;
        }

        ++v9;
        if (v12 == v8)
          goto LABEL_18;
      }
      __break(1u);
LABEL_20:
      if (v7 < 0)
        v16 = v7;
      else
        v16 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v7);
    }
    while (v17 >= 1);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandGroup.swift", 87, 2, 42, "Trying to commit command group with zero commands.", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandGroup.swift", 87, 2u, 42, (uint64_t)"Trying to commit command group with zero commands.", 50, 2u);
}

void sub_10074D648()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t i;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _BYTE v12[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands, v12, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v3)
    goto LABEL_19;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      v8 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x88))();
      if (v8)
      {
        if (v4)
          v9 = v4;
        else
          v9 = &_swiftEmptySetSingleton;
        v11 = v9;
        sub_100512150(v8);

        v4 = v11;
      }
      else
      {

      }
    }
    goto LABEL_19;
  }
  __break(1u);
}

BOOL sub_10074D798()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  void *v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  _BYTE v12[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands, v12, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(v2);
    return 1;
  }
LABEL_19:
  if (v2 < 0)
    v11 = v2;
  else
    v11 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v3)
    goto LABEL_23;
LABEL_3:
  v4 = 0;
  v5 = 0;
  do
  {
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else
      {
        if (v5 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_18;
        v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      v7 = v6;
      v8 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      v9 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0xB8))();

      if ((v9 & 1) != 0)
        break;
      v4 = 1;
      if (v8 == v3)
      {
        swift_bridgeObjectRelease(v2);
        return 0;
      }
      ++v5;
    }
    ++v5;
  }
  while (v8 != v3);
  swift_bridgeObjectRelease(v2);
  return (v4 & 1) == 0;
}

uint64_t sub_10074D90C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands, v12, 0, 0);
  v2 = *v1;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v11 = v2;
    else
      v11 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
    result = _CocoaArrayWrapper.endIndex.getter(v11);
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_18:
    v6 = 1;
LABEL_19:
    swift_bridgeObjectRelease_n(v2, 2);
    return v6 & 1;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n(v2, 2);
  if (!v3)
    goto LABEL_18;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = 1;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = type metadata accessor for CRLCommandGroup();
      if (swift_dynamicCastClass(v8, v9))
      {
        v10 = sub_10074D90C();

        if ((v6 & 1) != 0)
        {
          v6 = v10;
          goto LABEL_7;
        }
      }
      else
      {

      }
      v6 = 0;
LABEL_7:
      if (v3 == ++v5)
        goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10074DC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup__actionString);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup__actionString + 8);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_10074DF4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup__actionString + 8));
}

id sub_10074DF7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandGroup();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandGroup()
{
  return objc_opt_self(_TtC8Freeform15CRLCommandGroup);
}

uint64_t sub_10074E008()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x108))();
}

uint64_t sub_10074E040(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013EBC70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10074E080(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;

  sub_100757504(a1, a2, a3, a4, (uint64_t)a5, a6);
  v11 = v10;

  return v11;
}

double sub_10074E0DC(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  double v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  ValueMetadata *v20;
  _UNKNOWN **v21;
  uint64_t v22;
  void *v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t i;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  int v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  __int128 v85;
  __int128 v86;
  _UNKNOWN **v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[3];
  ValueMetadata *v92;
  _UNKNOWN **v93;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F04C0);
  __chkstk_darwin(v4);
  v69 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for CRLTweenLayerAnimation(0);
  v65 = *(_QWORD *)(v67 - 8);
  v6 = __chkstk_darwin(v67);
  v64 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v63 - v8;
  *((_QWORD *)&v86 + 1) = &type metadata for CRLLayerAnimationFlatGroup;
  v87 = &off_10128D670;
  *(_QWORD *)&v85 = a1;
  *((double *)&v85 + 1) = a2;
  v9 = sub_1004BB5A4(&v85, (uint64_t)&type metadata for CRLLayerAnimationFlatGroup);
  v92 = &type metadata for CRLLayerAnimationFlatGroup;
  v93 = &off_10128D670;
  v10 = sub_10050D1B0(v91);
  v11 = *v9;
  v12 = *((double *)v9 + 1);
  v66 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = sub_1009A3760(v11);
  swift_bridgeObjectRetain(v11);
  v14 = 0;
  v15 = sub_100756F5C((uint64_t)v13, v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v11);
  *v10 = v15;
  v10[1] = 0;
  sub_1009A3BB4();
  v17 = v16;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v85);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v91);
  v72 = *(_QWORD *)(v17 + 16);
  if (v72)
  {
    v18 = v17 + 32;
    swift_bridgeObjectRetain(v17);
    v19 = 0;
    v68 = _swiftEmptyArrayStorage;
    v73 = v17;
    v70 = v17 + 32;
    do
    {
      if (v19 >= *(_QWORD *)(v17 + 16))
      {
        __break(1u);
LABEL_35:
        swift_release(v81[0]);
        __break(1u);
        JUMPOUT(0x10074EF10);
      }
      sub_1004E90B0(v18 + 40 * v19, (uint64_t)v91);
      v20 = v92;
      v21 = v93;
      sub_1004BB5A4(v91, (uint64_t)v92);
      v22 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v21[8])(v20, v21);
      if (v22)
      {
        v23 = (void *)v22;
        v74 = v19;
        v24 = v92;
        v25 = v93;
        sub_1004BB5A4(v91, (uint64_t)v92);
        ((void (*)(__int128 *__return_ptr, ValueMetadata *, _UNKNOWN **))v25[11])(&v88, v24, v25);
        v26 = v89;
        v27 = v90;
        sub_1004BB5A4(&v88, v89);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v27 + 56))(&v85, v26, v27);
        sub_1008A51D4();
        sub_1004EA730(&v85);
        v84 = _swiftEmptyArrayStorage;
        v28 = *(_QWORD *)(v17 + 16);
        swift_bridgeObjectRetain(v17);
        v29 = v23;
        for (i = v18; v28; --v28)
        {
          sub_1004E90B0(i, (uint64_t)v81);
          v41 = v82;
          v40 = v83;
          sub_1004BB5A4(v81, v82);
          v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 64))(v41, v40);
          if (v42)
          {
            v43 = (void *)v42;
            sub_1004EB280();
            v44 = v29;
            v45 = static NSObject.== infix(_:_:)(v43, v44);

            sub_1004E90B0((uint64_t)v81, (uint64_t)v78);
            if ((v45 & 1) != 0)
            {
              v46 = v79;
              v47 = v80;
              sub_1004BB5A4(v78, v79);
              (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v47 + 88))(v75, v46, v47);
              v48 = v76;
              v49 = v77;
              sub_1004BB5A4(v75, v76);
              v50 = (char *)&loc_10074E554
                  + *((int *)qword_10074EF10 + (*(unsigned __int8 (**)(uint64_t, uint64_t))(v49 + 80))(v48, v49));
              __asm { BR              X9 }
            }
          }
          else
          {
            sub_1004E90B0((uint64_t)v81, (uint64_t)v78);
          }
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v78);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v81);
          i += 40;
        }
        v17 = v73;
        swift_bridgeObjectRelease(v73);

        v31 = v84;
        v81[0] = v84;
        swift_retain(v84);
        sub_100D151BC(v81);
        if (v14)
          goto LABEL_35;
        swift_release(v31);
        v32 = v81[0];
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v88);
        v33 = *(_QWORD *)(v32 + 16);
        if (v33)
        {
          v71 = 0;
          v34 = (uint64_t)v69;
          v35 = 0;
          v36 = v32 + 72;
          while (1)
          {
            sub_1004E90B0(v36 - 40, (uint64_t)&v85);
            v37 = *((_QWORD *)&v86 + 1);
            v38 = v87;
            sub_1004BB5A4(&v85, *((uint64_t *)&v86 + 1));
            v39 = ((uint64_t (*)(_QWORD *, uint64_t, _UNKNOWN **))v38[16])(v91, v37, v38);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v85);
            if ((v39 & 1) != 0)
              break;
            ++v35;
            v36 += 40;
            if (v33 == v35)
            {
              swift_release(v32);

              v14 = v71;
              v17 = v73;
              goto LABEL_4;
            }
          }
          if (v35 >= v33 - 1)
          {
            swift_release(v32);
            v87 = 0;
            v85 = 0u;
            v86 = 0u;
          }
          else
          {
            sub_1004E90B0(v36, (uint64_t)&v85);
            swift_release(v32);
          }
          v51 = v34;
          v17 = v73;
          v19 = v74;
          v18 = v70;
          v52 = sub_1009A3A40(v66) + a2;
          sub_1004E90B0((uint64_t)v91, (uint64_t)&v88);
          sub_1004CB7BC((uint64_t)&v85, (uint64_t)v81, &qword_1013EA650);
          sub_1004E7FD8(&v88, (uint64_t)v81, v34, v52);
          v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v34, 1, v67);
          v14 = v71;
          if (v53 == 1)
          {
            sub_1004CB800((uint64_t)&v85, &qword_1013EA650);

            sub_1004CB800(v51, (uint64_t *)&unk_1013F04C0);
          }
          else
          {
            v54 = v63;
            sub_1004B84E0(v51, v63, type metadata accessor for CRLTweenLayerAnimation);
            sub_1004B8460(v54, v64, type metadata accessor for CRLTweenLayerAnimation);
            v55 = v68;
            if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
              v55 = sub_100D101C4(0, v55[2] + 1, 1, v55);
            v57 = v55[2];
            v56 = v55[3];
            if (v57 >= v56 >> 1)
              v68 = sub_100D101C4((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
            else
              v68 = v55;
            v89 = v67;
            v90 = sub_1004B7878(&qword_1013EF978, type metadata accessor for CRLTweenLayerAnimation, (uint64_t)&unk_100EF6680);
            v58 = sub_10050D1B0(&v88);
            v59 = v64;
            sub_1004B8460(v64, (uint64_t)v58, type metadata accessor for CRLTweenLayerAnimation);
            v60 = v68;
            v68[2] = v57 + 1;
            sub_1004DB728(&v88, (uint64_t)&v60[5 * v57 + 4]);
            sub_1004B84A4(v59, type metadata accessor for CRLTweenLayerAnimation);

            sub_1004B84A4(v63, type metadata accessor for CRLTweenLayerAnimation);
            sub_1004CB800((uint64_t)&v85, &qword_1013EA650);
            v14 = v71;
            v17 = v73;
          }
        }
        else
        {
          swift_release(v32);

LABEL_4:
          v18 = v70;
          v19 = v74;
        }
      }
      ++v19;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v91);
    }
    while (v19 != v72);
    swift_bridgeObjectRelease(v17);
    v61 = v68;
  }
  else
  {
    v61 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)&v85 = v17;
  sub_10061FCD8((uint64_t)v61);
  return 0.0;
}

void sub_10074EFF8(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id j;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD v140[3];
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  _QWORD *v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;

  v130 = a6;
  v131 = a7;
  v129 = a5;
  v127 = a4;
  v125 = a2;
  v124 = a1;
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v128 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100D06188(a8, a9);
  sub_10074E0DC((uint64_t)v14, v15);
  v17 = v16;
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&v146 = _swiftEmptyArrayStorage;
  v18 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain(v17);
  if (v18)
  {
    v19 = 0;
    v20 = v17 + 32;
    do
    {
      if (v19 >= *(_QWORD *)(v17 + 16))
      {
        __break(1u);
LABEL_60:
        __break(1u);
        swift_release(v146);
        __break(1u);
        JUMPOUT(0x1007502B4);
      }
      sub_1004E90B0(v20, (uint64_t)&v136);
      v22 = *((_QWORD *)&v137 + 1);
      v21 = v138;
      sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v21 + 16) + 8))(v22) & 1) != 0)
      {
        sub_1004DB728(&v136, (uint64_t)&v150);
        v23 = v146;
        if ((swift_isUniquelyReferenced_nonNull_native(v146) & 1) == 0)
        {
          sub_10060091C(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v146;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_10060091C(v24 > 1, v25 + 1, 1);
          v23 = v146;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        sub_1004DB728(&v150, v23 + 40 * v25 + 32);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
      }
      ++v19;
      v20 += 40;
    }
    while (v18 != v19);
  }
  swift_bridgeObjectRelease(v17);
  v126 = v146;
  *(_QWORD *)&v146 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v17);
  if (v18)
  {
    v135 = v18;
    v26 = v17 + 32;
    v132 = v17 + 32;
    for (i = 0; i != v135; ++i)
    {
      if (i >= *(_QWORD *)(v17 + 16))
        goto LABEL_60;
      sub_1004E90B0(v26, (uint64_t)&v136);
      v28 = *((_QWORD *)&v137 + 1);
      v29 = v138;
      sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v29 + 88))(&v150, v28, v29);
      v30 = v151;
      v31 = v152;
      sub_1004BB5A4(&v150, v151);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 184))(v30, v31);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v150);
      if ((v32 & 1) != 0)
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
      }
      else
      {
        sub_1004DB728(&v136, (uint64_t)&v150);
        v33 = v146;
        if ((swift_isUniquelyReferenced_nonNull_native(v146) & 1) == 0)
        {
          sub_10060091C(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v146;
        }
        v35 = *(_QWORD *)(v33 + 16);
        v34 = *(_QWORD *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_10060091C(v34 > 1, v35 + 1, 1);
          v33 = v146;
        }
        *(_QWORD *)(v33 + 16) = v35 + 1;
        sub_1004DB728(&v150, v33 + 40 * v35 + 32);
      }
      v26 += 40;
    }
    swift_bridgeObjectRelease(v17);
    v36 = v146;
    if ((a3 & 1) != 0)
    {
      v123 = v146;
      swift_bridgeObjectRetain(v17);
      v37 = 0;
      v38 = v135;
      v39 = v132;
      v133 = v17;
      do
      {
        sub_1004E90B0(v39 + 40 * v37, (uint64_t)&v150);
        v55 = v151;
        v56 = v152;
        sub_1004BB5A4(&v150, v151);
        v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 64))(v55, v56);
        if (v57)
        {
          v58 = (void *)v57;
          v134 = v37;
          v59 = v151;
          v60 = v152;
          sub_1004BB5A4(&v150, v151);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v60 + 88))(&v136, v59, v60);
          v61 = *((_QWORD *)&v137 + 1);
          v62 = v138;
          sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
          (*(void (**)(uint64_t, uint64_t))(v62 + 80))(v61, v62);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
          v149 = _swiftEmptyArrayStorage;
          v63 = *(_QWORD *)(v17 + 16);
          swift_bridgeObjectRetain(v17);
          for (j = v58; v63; --v63)
          {
            sub_1004E90B0(v39, (uint64_t)&v146);
            v69 = *((_QWORD *)&v147 + 1);
            v70 = v148;
            sub_1004BB5A4(&v146, *((uint64_t *)&v147 + 1));
            v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 64))(v69, v70);
            if (v71)
            {
              v72 = (void *)v71;
              sub_1004EB280();
              v73 = j;
              v74 = static NSObject.== infix(_:_:)(v72, v73);

              sub_1004E90B0((uint64_t)&v146, (uint64_t)&v143);
              if ((v74 & 1) != 0)
              {
                v75 = v144;
                v76 = v145;
                sub_1004BB5A4(&v143, v144);
                (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v76 + 88))(v140, v75, v76);
                v77 = v141;
                v78 = v142;
                sub_1004BB5A4(v140, v141);
                v79 = (char *)&loc_10074F6E4
                    + dword_1007502B4[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v78 + 80))(v77, v78)];
                __asm { BR              X9 }
              }
            }
            else
            {
              sub_1004E90B0((uint64_t)&v146, (uint64_t)&v143);
            }
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v143);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v146);
            v39 += 40;
          }
          v17 = v133;
          swift_bridgeObjectRelease(v133);

          v65 = v149;
          *(_QWORD *)&v146 = v149;
          swift_retain(v149);
          sub_100D151BC(&v146);
          swift_release(v65);
          v66 = v146;
          v67 = *(_QWORD *)(v146 + 16);
          if (v67)
          {
            sub_1004E90B0(v146 + 32, (uint64_t)&v146);
            swift_bridgeObjectRetain(v66);
            v68 = v67 - 1;
            if (v67 != 1)
            {
              v97 = v66 + 72;
              do
              {
                sub_1004E90B0(v97, (uint64_t)&v143);
                v99 = v144;
                v98 = v145;
                sub_1004BB5A4(&v143, v144);
                v100 = (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v98 + 24) + 8) + 8))(v99);
                v102 = *((_QWORD *)&v147 + 1);
                v101 = v148;
                sub_1004BB5A4(&v146, *((uint64_t *)&v147 + 1));
                if (v100 >= (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v101 + 24) + 8) + 8))(v102))
                {
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v143);
                }
                else
                {
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v146);
                  sub_1004DB728(&v143, (uint64_t)&v146);
                }
                v97 += 40;
                --v68;
              }
              while (v68);
            }
            swift_release(v66);
            sub_1004DB728(&v146, (uint64_t)&v136);
          }
          else
          {
            v136 = 0u;
            v137 = 0u;
            v138 = 0;
          }
          swift_release(v66);
          v80 = *((_QWORD *)&v137 + 1);
          if (*((_QWORD *)&v137 + 1))
          {
            v81 = v138;
            sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
            (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v81 + 112))(&v146, v80, v81);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
          }
          else
          {
            sub_1004CB800((uint64_t)&v136, &qword_1013EA650);
            v146 = 0u;
            v147 = 0u;
          }
          v82 = (void *)objc_opt_self(CATransaction);
          objc_msgSend(v82, "begin");
          objc_msgSend(v82, "setDisableActions:", 1);
          v83 = v151;
          v84 = v152;
          sub_1004BB5A4(&v150, v151);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v84 + 80))(&v136, v83, v84);
          v85 = v139;
          sub_1004CB800((uint64_t)&v136, (uint64_t *)&unk_1013F04B0);
          if (v85)
          {
            v86 = v151;
            v87 = v152;
            sub_1004BB5A4(&v150, v151);
            v89 = v151;
            v88 = v152;
            sub_1004BB5A4(&v150, v151);
            (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v88 + 80))(&v136, v89, v88);
            v90 = (void *)(*(uint64_t (**)(__int128 *, uint64_t))(*(_QWORD *)(v87 + 8) + 16))(&v136, v86);
            sub_1004CB800((uint64_t)&v136, (uint64_t *)&unk_1013F04B0);
            sub_1004CB7BC((uint64_t)&v146, (uint64_t)&v136, &qword_1013E0230);
            v91 = *((_QWORD *)&v137 + 1);
            if (*((_QWORD *)&v137 + 1))
            {
              v92 = sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
              v93 = *(_QWORD *)(v91 - 8);
              __chkstk_darwin(v92);
              v95 = (char *)&v122 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v93 + 16))(v95);
              v96 = _bridgeAnythingToObjectiveC<A>(_:)(v95, v91);
              (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v91);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
            }
            else
            {
              v96 = 0;
            }
            objc_msgSend(v90, "setFromValue:", v96);
            swift_unknownObjectRelease(v96);
            sub_1004CB7BC((uint64_t)&v146, (uint64_t)&v136, &qword_1013E0230);
            v103 = *((_QWORD *)&v137 + 1);
            if (*((_QWORD *)&v137 + 1))
            {
              v40 = sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
              v41 = *(_QWORD *)(v103 - 8);
              __chkstk_darwin(v40);
              v43 = (char *)&v122 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v41 + 16))(v43);
              v44 = _bridgeAnythingToObjectiveC<A>(_:)(v43, v103);
              (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v103);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
            }
            else
            {
              v44 = 0;
            }
            v17 = v133;
            v38 = v135;
            objc_msgSend(v90, "setToValue:", v44);
            swift_unknownObjectRelease(v44);
            objc_msgSend(v90, "setRemovedOnCompletion:", 0);
            v45 = v151;
            v46 = v152;
            sub_1004BB5A4(&v150, v151);
            (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v46 + 88))(&v136, v45, v46);
            v47 = *((_QWORD *)&v137 + 1);
            v48 = v138;
            sub_1004BB5A4(&v136, *((uint64_t *)&v137 + 1));
            v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 48))(v47, v48);
            v51 = v50;
            sub_100D0DCB0(v49, v50);
            v53 = v52;
            swift_bridgeObjectRelease(v51);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v136);
            v54 = String._bridgeToObjectiveC()();
            objc_msgSend(j, "addAnimation:forKey:", v90, v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

          }
          objc_msgSend(v82, "commit");

          sub_1004CB800((uint64_t)&v146, &qword_1013E0230);
          v39 = v132;
          v37 = v134;
        }
        ++v37;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v150);
      }
      while (v37 != v38);
      swift_bridgeObjectRelease(v17);
      v36 = v123;
      goto LABEL_57;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v17);
    v36 = v146;
    if ((a3 & 1) != 0)
    {
LABEL_57:
      v114 = type metadata accessor for TaskPriority(0);
      v105 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v128, 1, 1, v114);
      type metadata accessor for MainActor(0);
      v115 = v127;
      v116 = v129;
      sub_1004C0F54(v127, v129);
      v118 = v130;
      v117 = v131;
      v119 = sub_1004C0F54(v130, v131);
      v120 = static MainActor.shared.getter(v119);
      v112 = swift_allocObject(&unk_10127B630, 104, 7);
      *(_QWORD *)(v112 + 16) = v120;
      *(_QWORD *)(v112 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v112 + 32) = v115;
      *(_QWORD *)(v112 + 40) = v116;
      *(_QWORD *)(v112 + 48) = v126;
      *(_QWORD *)(v112 + 56) = v36;
      *(_QWORD *)(v112 + 64) = v124;
      *(_BYTE *)(v112 + 72) = v125 & 1;
      *(_QWORD *)(v112 + 80) = v118;
      *(_QWORD *)(v112 + 88) = v117;
      *(_QWORD *)(v112 + 96) = v17;
      v113 = &unk_1013F04A8;
      goto LABEL_58;
    }
  }
  swift_release(v126);
  v104 = type metadata accessor for TaskPriority(0);
  v105 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v128, 1, 1, v104);
  type metadata accessor for MainActor(0);
  v106 = v127;
  v107 = v129;
  sub_1004C0F54(v127, v129);
  v109 = v130;
  v108 = v131;
  v110 = sub_1004C0F54(v130, v131);
  v111 = static MainActor.shared.getter(v110);
  v112 = swift_allocObject(&unk_10127B608, 80, 7);
  *(_QWORD *)(v112 + 16) = v111;
  *(_QWORD *)(v112 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v112 + 32) = v106;
  *(_QWORD *)(v112 + 40) = v107;
  *(_QWORD *)(v112 + 48) = v36;
  *(_QWORD *)(v112 + 56) = v17;
  *(_QWORD *)(v112 + 64) = v109;
  *(_QWORD *)(v112 + 72) = v108;
  v113 = &unk_1013F04A0;
LABEL_58:
  v121 = sub_100521B98(v105, (uint64_t)v113, v112);
  swift_release(v121);
}

void sub_10075039C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v7 + 32) = a1;
  v14[0] = v7;
  specialized Array._endMutation()(v7);
  v8 = v14[0];
  v9 = objc_msgSend(a2, "canvas", swift_unknownObjectRetain(a1).n128_f64[0]);
  v10 = (_QWORD *)swift_allocObject(&unk_10127B6D0, 48, 7);
  v10[2] = v14[0];
  v10[3] = a2;
  v10[4] = 0;
  v10[5] = v3;
  v14[4] = sub_10054CE68;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(_QWORD *)"";
  v14[2] = sub_1005D2FC0;
  v14[3] = &unk_10127B6E8;
  v11 = _Block_copy(v14);
  v12 = v15;
  swift_bridgeObjectRetain(v8);
  v13 = a2;
  objc_msgSend(v9, "afterLayoutIncludingLayers:performBlock:", 1, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  swift_bridgeObjectRelease(v8);

}

void sub_1007506F8(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  const void *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  _QWORD *v55;
  void *v56;
  _QWORD *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  char *v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  char *v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  __int128 v102[19];
  _BYTE v103[40];
  __int128 v104;
  __int128 v105[19];
  __int128 v106;
  _QWORD *v107;
  _UNKNOWN **v108;
  _BYTE v109[24];
  uint64_t v110[3];

  v86 = a3;
  v87 = a4;
  v6 = (_QWORD *)type metadata accessor for CRLRepAnimation(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v83 - v11;
  __chkstk_darwin(v10);
  v97 = (uint64_t)&v83 - v13;
  v101 = a1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_41;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v15 = a2;
  swift_bridgeObjectRetain(a1);
LABEL_3:
  v95 = v6;
  v96 = v9;
  v98 = a2;
  if (v14)
  {
    v100 = a1 & 0xC000000000000001;
    a2 = (char *)v102 + 8;
    v6 = _swiftEmptyArrayStorage;
    v16 = 4;
    while (1)
    {
      v17 = v16 - 4;
      if (v100)
      {
        v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a1);
        v9 = (char *)(v16 - 3);
        if (__OFADD__(v17, 1))
          goto LABEL_40;
      }
      else
      {
        v18 = *(_QWORD *)(a1 + 8 * v16);
        swift_unknownObjectRetain(v18);
        v9 = (char *)(v16 - 3);
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          if (a1 < 0)
            v80 = v101;
          else
            v80 = a1 & 0xFFFFFFFFFFFFFF8;
          v81 = a2;
          swift_bridgeObjectRetain(v101);
          v82 = v80;
          a1 = v101;
          v14 = _CocoaArrayWrapper.endIndex.getter(v82);
          goto LABEL_3;
        }
      }
      v19 = v6;
      v20 = v98;
      v21 = objc_msgSend(v98, "repForInfo:", v18);
      if (v21)
      {
        swift_unknownObjectWeakInit(v102, 0);
        swift_unknownObjectWeakInit((char *)v102 + 8, 0);
        swift_unknownObjectWeakAssign(v102, v21);
        swift_unknownObjectWeakAssign((char *)v102 + 8, v20);
        *(_QWORD *)&v102[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
        sub_1007574C8((uint64_t)v102, (uint64_t)v105);

      }
      else
      {
        memset(v105, 0, 24);
      }
      v6 = v19;
      BYTE8(v105[1]) = v21 == 0;
      swift_unknownObjectRelease(v18);
      a1 = v101;
      if ((BYTE8(v105[1]) & 1) != 0)
      {
        sub_1004CB800((uint64_t)v105, &qword_1013DF448);
      }
      else
      {
        sub_1007574C8((uint64_t)v105, (uint64_t)v102);
        sub_1007574C8((uint64_t)v102, (uint64_t)v105);
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_100D0EC3C(0, v6[2] + 1, 1, (unint64_t)v6);
        v23 = v6[2];
        v22 = v6[3];
        if (v23 >= v22 >> 1)
          v6 = sub_100D0EC3C((_QWORD *)(v22 > 1), v23 + 1, 1, (unint64_t)v6);
        v6[2] = v23 + 1;
        sub_1007574C8((uint64_t)v105, (uint64_t)&v6[3 * v23 + 4]);
      }
      ++v16;
      if (v9 == (char *)v14)
      {

        swift_bridgeObjectRelease(a1);
        v9 = v96;
        goto LABEL_23;
      }
    }
  }

  swift_bridgeObjectRelease(a1);
  v6 = _swiftEmptyArrayStorage;
LABEL_23:
  v24 = _swiftEmptyArrayStorage;
  v25 = sub_1004B804C((uint64_t *)&unk_1013F0470);
  v85 = swift_allocObject(v25, 112, 7);
  *(_OWORD *)(v85 + 16) = xmmword_100EF5A10;
  v110[0] = (uint64_t)_swiftEmptyArrayStorage;
  v26 = v6[2];
  if (v26)
  {
    v27 = v6;
    v28 = (uint64_t)(v6 + 4);
    v29 = (char *)&v105[1] + 8;
    v92 = v9 + 24;
    v93 = v12 + 24;
    v91 = v97 + 24;
    v84 = (uint64_t)v27;
    swift_bridgeObjectRetain(v27);
    *((_QWORD *)&v30 + 1) = 0x3FC999999999999ALL;
    v90 = xmmword_100EF6400;
    *(_QWORD *)&v30 = 131586;
    v89 = v30;
    v31 = &unk_10127B5E0;
    v94 = (char *)&v105[1] + 8;
    v88 = v12;
    while (1)
    {
      v100 = v26;
      sub_100756CD8(v28, (uint64_t)v109);
      *(_QWORD *)&v102[0] = 0x3F80000000000000;
      LOBYTE(v102[16]) = 6;
      if (qword_1013DD408 != -1)
        swift_once(&qword_1013DD408, sub_1008D3CF4);
      v99 = v28;
      v34 = (void *)qword_10147FD68;
      sub_10057E090((uint64_t *)v102, (uint64_t)v29);
      *(__int128 *)((char *)v105 + 8) = v90;
      *(_QWORD *)&v105[0] = v34;
      *(_QWORD *)&v105[18] = 0;
      DWORD2(v105[18]) = v89;
      sub_100756CD8((uint64_t)v109, (uint64_t)v12);
      *((_QWORD *)v12 + 6) = &type metadata for CRLBasicLayerAnimation.Def;
      v101 = sub_1004EB138();
      *((_QWORD *)v12 + 7) = v101;
      v35 = swift_allocObject(v31, 316, 7);
      *((_QWORD *)v12 + 3) = v35;
      sub_1004E91D4((uint64_t)v105, v35 + 16);
      v12[64] = 0;
      v36 = v95;
      v37 = v31;
      v38 = v29;
      v39 = &v12[*((int *)v95 + 7)];
      v40 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
      v41(v39, 1, 1, v40);
      v41(&v12[*((int *)v36 + 8)], 1, 1, v40);
      v42 = v34;
      sub_1004E9210((uint64_t)v105);
      sub_1004EA730(v102);
      sub_1004E90B0((uint64_t)v93, (uint64_t)v103);
      v43 = sub_1004B804C((uint64_t *)&unk_1013F0480);
      if (!swift_dynamicCast(v105, v103, v43, &type metadata for CRLBasicLayerAnimation.Def, 6))
      {
        memset(v105, 0, 300);
        sub_1004CB800((uint64_t)v105, (uint64_t *)&unk_101406CB0);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 88, 0);
        goto LABEL_47;
      }
      v104 = v105[0];
      memcpy(v102, v38, 0x114uLL);
      v44 = (uint64_t)v96;
      sub_1004B8460((uint64_t)v12, (uint64_t)v96, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v105[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v105[2] = v101;
      v45 = swift_allocObject(v37, 316, 7);
      *(_QWORD *)&v105[0] = v45;
      *(_OWORD *)(v45 + 16) = v104;
      *(_QWORD *)(v45 + 32) = 0x3F847AE147AE147BLL;
      memcpy((void *)(v45 + 40), v102, 0x114uLL);
      v46 = v92;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v92);
      sub_1004DB728(v105, (uint64_t)v46);
      v47 = (uint64_t)v12;
      v48 = v97;
      sub_1004B84E0(v44, v97, type metadata accessor for CRLRepAnimation);
      sub_1004B84A4(v47, type metadata accessor for CRLRepAnimation);
      v49 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v50) = 1045220557;
      LODWORD(v51) = 0;
      LODWORD(v52) = 0.25;
      LODWORD(v53) = 1.0;
      v54 = objc_msgSend(v49, "initWithControlPoints::::", v50, v51, v52, v53);
      v107 = v36;
      v108 = &off_101290348;
      v55 = sub_10050D1B0(&v106);
      sub_1004E90B0(v91, (uint64_t)v103);
      if ((swift_dynamicCast(v102, v103, v43, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
        break;
      memcpy(v105, v102, 0x12CuLL);
      objc_storeStrong((id *)v105, v54);
      sub_1004B8460(v48, v44, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v102[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v102[2] = v101;
      v56 = v37;
      *(_QWORD *)&v102[0] = swift_allocObject(v37, 316, 7);
      sub_1004E91D4((uint64_t)v105, *(_QWORD *)&v102[0] + 16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v46);
      sub_1004DB728(v102, (uint64_t)v46);
      sub_1004B84E0(v44, (uint64_t)v55, type metadata accessor for CRLRepAnimation);
      sub_1004E9210((uint64_t)v105);

      sub_1004B84A4(v48, type metadata accessor for CRLRepAnimation);
      sub_1004BAB64((uint64_t)v109);
      if (v107)
      {
        sub_1004DB728(&v106, (uint64_t)v105);
        sub_1004DB728(v105, (uint64_t)v102);
        v57 = (_QWORD *)v110[0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v110[0]);
        v12 = v88;
        v32 = v99;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v57 = sub_100D0FAB4(0, v57[2] + 1, 1, v57);
          v110[0] = (uint64_t)v57;
        }
        v31 = v56;
        v60 = v57[2];
        v59 = v57[3];
        if (v60 >= v59 >> 1)
          v110[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v59 > 1), v60 + 1, 1, v57);
        v61 = *((_QWORD *)&v102[1] + 1);
        v62 = *(_QWORD *)&v102[2];
        v63 = sub_1004CB9AC((uint64_t)v102, *((uint64_t *)&v102[1] + 1));
        __chkstk_darwin(v63);
        v65 = (char *)&v83 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v66 + 16))(v65);
        sub_1005C46A8(v60, (uint64_t)v65, v110, v61, v62);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v102);
        v33 = v100;
        v29 = v94;
      }
      else
      {
        sub_1004CB800((uint64_t)&v106, (uint64_t *)&unk_1013F0490);
        v12 = v88;
        v32 = v99;
        v33 = v100;
        v29 = v94;
        v31 = v37;
      }
      v28 = v32 + 24;
      v26 = v33 - 1;
      if (!v26)
      {
        v67 = v84;
        swift_bridgeObjectRelease(v84);
        v24 = (_QWORD *)v110[0];
        goto LABEL_39;
      }
    }
    memset(v102, 0, 300);
    sub_1004CB800((uint64_t)v102, (uint64_t *)&unk_101406CB0);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 97, 0);
LABEL_47:
    __break(1u);
  }
  else
  {
    v67 = (uint64_t)v6;
LABEL_39:
    v68 = (_QWORD *)v85;
    *(_QWORD *)(v85 + 56) = &type metadata for CRLLayerAnimationGroup;
    v68[8] = &off_101271D70;
    v68[4] = v24;
    v68[5] = 0;
    v69 = v86;
    v70 = v86;
    v71 = v98;
    sub_1007572F4(v67, v69, v71, v87);
    v73 = v72;
    swift_bridgeObjectRelease(v67);

    v68[12] = &type metadata for CRLLayerAnimationGroup;
    v68[13] = &off_101271D70;
    v68[9] = v73;
    v68[10] = 0;
    v74 = sub_10060CD0C((uint64_t)v68, 0.0);
    v76 = v75;
    v77 = v74;
    swift_setDeallocating(v68);
    v78 = v68[2];
    v79 = sub_1004B804C((uint64_t *)&unk_1013F0490);
    swift_arrayDestroy(v68 + 4, v78, v79);
    swift_deallocClassInstance(v68, 32, 7);
    sub_10074EFF8(0, 1, 1, 0, 0, 0, 0, v76, v77);
    swift_bridgeObjectRelease(v76);
  }
}

uint64_t sub_100751114@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t Strong;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD v43[5];
  _QWORD v44[34];
  int v45;
  __int128 v46;
  double v47;
  double v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;

  v42 = a4;
  v7 = type metadata accessor for CRLRepAnimation(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v39 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v39 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v39 - v17;
  v19 = 0.5;
  if (a2)
  {
    v41 = a1;
    Strong = swift_unknownObjectWeakLoadStrong(a1);
    if (Strong)
    {
      v21 = (void *)Strong;
      v40 = v7;
      v22 = a2;
      v23 = objc_msgSend(a3, "renderableForRep:", v21);
      if (v23
        && (v24 = v23, v25 = objc_msgSend(v23, "layer"), v24, v25))
      {
        objc_msgSend(v22, "headLineEndPoint");
        v19 = sub_100757194(v21, v25, v22);
        v27 = v26;

      }
      else
      {

        v27 = 0.5;
      }
      v7 = v40;
      a1 = v41;
    }
    else
    {
      v27 = 0.5;
      a1 = v41;
    }
  }
  else
  {
    v27 = 0.5;
  }
  v46 = xmmword_100F08680;
  v47 = v19;
  v48 = v27;
  v49 = 0;
  v50 = 0;
  v51 = 2;
  v52 = 58;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v28 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v29 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v30 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v31 = qword_10147FD88;
  sub_10057E090((uint64_t *)&v46, (uint64_t)v44);
  v43[0] = v28;
  v43[1] = v29;
  v43[2] = v30;
  v43[3] = v31;
  v43[4] = 0;
  v44[33] = 0;
  v45 = 131586;
  sub_100756CD8(a1, (uint64_t)v10);
  *((_QWORD *)v10 + 6) = &type metadata for CRLSpringLayerAnimation.Def;
  *((_QWORD *)v10 + 7) = sub_100553914();
  v32 = swift_allocObject(&unk_10127B658, 332, 7);
  *((_QWORD *)v10 + 3) = v32;
  sub_100720EB4((uint64_t)v43, v32 + 16);
  v10[64] = 0;
  v33 = &v10[*(int *)(v7 + 28)];
  v34 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v35(v33, 1, 1, v34);
  v35(&v10[*(int *)(v7 + 32)], 1, 1, v34);
  sub_100635C68((uint64_t)v43);
  sub_1004EA730(&v46);
  sub_100A164A8((uint64_t)v13, 38.0);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLRepAnimation);
  sub_100A16610((uint64_t)v16, 0.0);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLRepAnimation);
  sub_100A1677C((uint64_t)v18, 1.0);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLRepAnimation);
  v36 = v42;
  v42[3] = v7;
  v36[4] = &off_101290348;
  v37 = sub_10050D1B0(v36);
  sub_100A168F4((uint64_t)v37, 400.0);
  return sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLRepAnimation);
}

void sub_100751518(uint64_t a1, void *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  double *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  double *v60;
  uint64_t v61;
  double *v62;
  uint64_t v63;
  __int128 *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  __int128 v68;
  uint64_t v69;
  __int128 *v70;
  char *v71;
  __int128 *v72;
  __int128 *v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  double v87;
  double v88;
  double v89;
  double v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  double *v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  const void *v119;
  uint64_t v120;
  __int128 *v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  __int128 *v126;
  id v127;
  double v128;
  double v129;
  double v130;
  double v131;
  id v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  __int128 v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  const void *v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  double v169;
  double v170;
  double v171;
  double v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  char v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  double *v190;
  uint64_t v191;
  _QWORD *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  char *v199;
  __int128 *v200;
  void *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  const void *v205;
  char *v206;
  _QWORD *v207;
  void (*v208)(char *, uint64_t, uint64_t, _QWORD *);
  uint64_t v209;
  id v210;
  uint64_t v211;
  int v212;
  _QWORD *v213;
  uint64_t v214;
  __int128 *v215;
  id v216;
  double v217;
  double v218;
  double v219;
  double v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  char v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __n128 v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  double *v237;
  uint64_t v238;
  _QWORD *v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  __int128 *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  _QWORD *v253;
  void (*v254)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  _QWORD *v267;
  char v268;
  unint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  __n128 v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  double *v278;
  double *v279;
  uint64_t v280;
  double v281;
  uint64_t v282;
  uint64_t v283;
  double v284;
  uint64_t v285;
  uint64_t v286;
  double v287;
  uint64_t v288;
  uint64_t v289;
  double v290;
  uint64_t v291;
  id v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  double *v298;
  _QWORD *v299;
  __int128 v300;
  uint64_t v301;
  char *v302;
  __int128 *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t *v312;
  double *v313;
  __int128 v314;
  __int128 *v315;
  __int128 v316;
  __int128 v317;
  double *v318;
  char *v319;
  __int128 *v320;
  __int128 *v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  _QWORD *v326;
  __int128 v327;
  uint64_t v328;
  __int128 *v329;
  char *v330;
  char *v331;
  double *v332;
  uint64_t v333;
  __int128 v334;
  uint64_t v335;
  __int128 v336[20];
  __int128 v337[19];
  uint64_t v338;
  int v339;
  _BYTE v340[40];
  __int128 v341;
  uint64_t v342;
  _UNKNOWN **v343;
  _BYTE v344[24];
  uint64_t v345[3];

  v296 = a4;
  v297 = a5;
  v328 = (uint64_t)a3;
  v333 = type metadata accessor for CRLRepAnimation(0);
  __chkstk_darwin(v333);
  v8 = (double *)((char *)&v294 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v294 - v10);
  __chkstk_darwin(v12);
  v14 = (uint64_t)&v294 - v13;
  __chkstk_darwin(v15);
  v310 = (uint64_t)&v294 - v16;
  __chkstk_darwin(v17);
  v305 = (uint64_t)&v294 - v18;
  __chkstk_darwin(v19);
  v329 = (__int128 *)((char *)&v294 - v20);
  __chkstk_darwin(v21);
  v315 = (__int128 *)((char *)&v294 - v22);
  __chkstk_darwin(v23);
  v304 = (uint64_t)&v294 - v24;
  __chkstk_darwin(v25);
  *(_QWORD *)&v317 = (char *)&v294 - v26;
  __chkstk_darwin(v27);
  *(_QWORD *)&v316 = (char *)&v294 - v28;
  __chkstk_darwin(v29);
  v309 = (uint64_t *)((char *)&v294 - v30);
  __chkstk_darwin(v31);
  v331 = (char *)&v294 - v32;
  __chkstk_darwin(v33);
  v308 = (char *)&v294 - v34;
  __chkstk_darwin(v35);
  v307 = (uint64_t)&v294 - v36;
  __chkstk_darwin(v37);
  v39 = (double *)((char *)&v294 - v38);
  __chkstk_darwin(v40);
  v42 = (double *)((char *)&v294 - v41);
  __chkstk_darwin(v43);
  *(_QWORD *)&v314 = (char *)&v294 - v44;
  __chkstk_darwin(v45);
  v306 = (uint64_t)&v294 - v46;
  if ((unint64_t)a1 >> 62)
    goto LABEL_129;
  v47 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v48 = a2;
  swift_bridgeObjectRetain(a1);
LABEL_3:
  v330 = (char *)v42;
  v312 = v11;
  v313 = v8;
  v311 = v14;
  v332 = v39;
  if (v47)
  {
    *(_QWORD *)&v327 = a1 & 0xC000000000000001;
    v11 = (uint64_t *)v336 + 1;
    v42 = _swiftEmptyArrayStorage;
    v14 = 4;
    v49 = a1;
    while (1)
    {
      v39 = (double *)v47;
      v50 = v14 - 4;
      if ((_QWORD)v327)
      {
        a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, a1);
        v8 = (double *)(v14 - 3);
        if (__OFADD__(v50, 1))
          goto LABEL_127;
      }
      else
      {
        a1 = *(_QWORD *)(a1 + 8 * v14);
        swift_unknownObjectRetain(a1);
        v8 = (double *)(v14 - 3);
        if (__OFADD__(v50, 1))
        {
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          if (a1 < 0)
            v291 = a1;
          else
            v291 = a1 & 0xFFFFFFFFFFFFFF8;
          v292 = a2;
          swift_bridgeObjectRetain(a1);
          v47 = _CocoaArrayWrapper.endIndex.getter(v291);
          goto LABEL_3;
        }
      }
      v51 = objc_msgSend(a2, "repForInfo:", a1);
      if (v51)
      {
        swift_unknownObjectWeakInit(v336);
        swift_unknownObjectWeakInit((char *)v336 + 8);
        swift_unknownObjectWeakAssign(v336, v51);
        swift_unknownObjectWeakAssign((char *)v336 + 8, a2);
        *(_QWORD *)&v336[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
        sub_1007574C8((uint64_t)v336, (uint64_t)v337);

      }
      else
      {
        memset(v337, 0, 24);
      }
      BYTE8(v337[1]) = v51 == 0;
      swift_unknownObjectRelease(a1);
      if ((BYTE8(v337[1]) & 1) != 0)
      {
        sub_1004CB800((uint64_t)v337, &qword_1013DF448);
      }
      else
      {
        sub_1007574C8((uint64_t)v337, (uint64_t)v336);
        sub_1007574C8((uint64_t)v336, (uint64_t)v337);
        if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          v42 = (double *)sub_100D0EC3C(0, *((_QWORD *)v42 + 2) + 1, 1, (unint64_t)v42);
        v53 = *((_QWORD *)v42 + 2);
        v52 = *((_QWORD *)v42 + 3);
        if (v53 >= v52 >> 1)
          v42 = (double *)sub_100D0EC3C((_QWORD *)(v52 > 1), v53 + 1, 1, (unint64_t)v42);
        *((_QWORD *)v42 + 2) = v53 + 1;
        sub_1007574C8((uint64_t)v337, (uint64_t)&v42[3 * v53 + 4]);
      }
      a1 = v49;
      v47 = (uint64_t)v39;
      ++v14;
      if (v8 == v39)
      {
        swift_bridgeObjectRelease(v49);
        v54 = v42;
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRelease(a1);
  v54 = _swiftEmptyArrayStorage;
LABEL_23:
  v55 = v328;
  if ((unint64_t)v328 >> 62)
  {
    if (v328 < 0)
      v293 = v328;
    else
      v293 = v328 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v328);
    v42 = (double *)_CocoaArrayWrapper.endIndex.getter(v293);
  }
  else
  {
    v42 = *(double **)((v328 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v328);
  }
  v298 = v54;
  if (v42)
  {
    v39 = (double *)(v55 & 0xC000000000000001);
    v318 = _swiftEmptyArrayStorage;
    v56 = 4;
    v11 = &qword_1013DF448;
    do
    {
      a1 = v56 - 4;
      if (v39)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v56 - 4, v55);
        v8 = (double *)(v56 - 3);
        if (__OFADD__(a1, 1))
          goto LABEL_128;
      }
      else
      {
        v14 = *(_QWORD *)(v55 + 8 * v56);
        swift_unknownObjectRetain(v14);
        v8 = (double *)(v56 - 3);
        if (__OFADD__(a1, 1))
          goto LABEL_128;
      }
      v57 = objc_msgSend(a2, "repForInfo:", v14);
      if (v57)
      {
        swift_unknownObjectWeakInit(v336);
        swift_unknownObjectWeakInit((char *)v336 + 8);
        swift_unknownObjectWeakAssign(v336, v57);
        swift_unknownObjectWeakAssign((char *)v336 + 8, a2);
        *(_QWORD *)&v336[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
        sub_1007574C8((uint64_t)v336, (uint64_t)v337);

      }
      else
      {
        memset(v337, 0, 24);
      }
      BYTE8(v337[1]) = v57 == 0;
      swift_unknownObjectRelease(v14);
      if ((BYTE8(v337[1]) & 1) != 0)
      {
        sub_1004CB800((uint64_t)v337, &qword_1013DF448);
      }
      else
      {
        sub_1007574C8((uint64_t)v337, (uint64_t)v336);
        sub_1007574C8((uint64_t)v336, (uint64_t)v337);
        if ((swift_isUniquelyReferenced_nonNull_native(v318) & 1) == 0)
          v318 = (double *)sub_100D0EC3C(0, *((_QWORD *)v318 + 2) + 1, 1, (unint64_t)v318);
        v59 = *((_QWORD *)v318 + 2);
        v58 = *((_QWORD *)v318 + 3);
        if (v59 >= v58 >> 1)
          v318 = (double *)sub_100D0EC3C((_QWORD *)(v58 > 1), v59 + 1, 1, (unint64_t)v318);
        v60 = v318;
        *((_QWORD *)v318 + 2) = v59 + 1;
        sub_1007574C8((uint64_t)v337, (uint64_t)&v60[3 * v59 + 4]);
      }
      v55 = v328;
      ++v56;
    }
    while (v8 != v42);
  }
  else
  {
    v318 = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(v55);
  v295 = sub_1004B804C((uint64_t *)&unk_1013F0470);
  v61 = swift_allocObject(v295, 192, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100EF5E30;
  v345[0] = (uint64_t)_swiftEmptyArrayStorage;
  v62 = v298;
  v63 = *((_QWORD *)v298 + 2);
  v299 = (_QWORD *)v61;
  if (v63)
  {
    v64 = (__int128 *)(v298 + 4);
    v65 = (uint64_t)v330;
    v302 = v330 + 24;
    v303 = &v336[1];
    v66 = (uint64_t)v332;
    v67 = v332 + 3;
    v301 = v314 + 24;
    swift_bridgeObjectRetain(v298);
    v300 = xmmword_100F08690;
    *((_QWORD *)&v68 + 1) = 0x3FC999999999999ALL;
    v325 = xmmword_100EF6400;
    *(_QWORD *)&v68 = 131586;
    v324 = v68;
    v69 = v65;
    v328 = (uint64_t)v64;
    v70 = v64;
    v326 = (_QWORD *)(v66 + 24);
    *(_QWORD *)&v327 = v63;
    while (1)
    {
      v319 = (char *)v63;
      v320 = v70;
      sub_100756CD8((uint64_t)v70, (uint64_t)v344);
      v336[0] = v300;
      v73 = v303;
      *(_QWORD *)v303 = 0;
      *((_QWORD *)v73 + 1) = 0;
      LOBYTE(v336[2]) = 1;
      *((_QWORD *)&v336[2] + 1) = 0;
      LOBYTE(v336[3]) = 2;
      LOBYTE(v336[16]) = 58;
      if (qword_1013DD408 != -1)
        swift_once(&qword_1013DD408, sub_1008D3CF4);
      v74 = (void *)qword_10147FD68;
      sub_10057E090((uint64_t *)v336, (uint64_t)&v337[1] + 8);
      *(__int128 *)((char *)v337 + 8) = v325;
      *(_QWORD *)&v337[0] = v74;
      *(_QWORD *)&v337[18] = 0;
      DWORD2(v337[18]) = v324;
      sub_100756CD8((uint64_t)v344, v69);
      *(_QWORD *)(v69 + 48) = &type metadata for CRLBasicLayerAnimation.Def;
      v75 = sub_1004EB138();
      *(_QWORD *)(v69 + 56) = v75;
      v76 = swift_allocObject(&unk_10127B5E0, 316, 7);
      *(_QWORD *)(v69 + 24) = v76;
      sub_1004E91D4((uint64_t)v337, v76 + 16);
      *(_BYTE *)(v69 + 64) = 0;
      v77 = v333;
      v78 = &v330[*(int *)(v333 + 28)];
      v79 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v80 = *(__int128 **)(*(_QWORD *)(v79 - 8) + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v80)(v78, 1, 1, v79);
      v81 = *(int *)(v77 + 32);
      v69 = (uint64_t)v330;
      v321 = v80;
      *(_QWORD *)&v322 = v79;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v80)(&v330[v81], 1, 1, v79);
      v82 = v74;
      sub_1004E9210((uint64_t)v337);
      sub_1004EA730(v336);
      sub_1004E90B0((uint64_t)v302, (uint64_t)v340);
      v83 = sub_1004B804C((uint64_t *)&unk_1013F0480);
      if (!swift_dynamicCast(v337, v340, v83, &type metadata for CRLBasicLayerAnimation.Def, 6))
        break;
      v334 = v337[0];
      memcpy(v336, (char *)&v337[1] + 8, 0x114uLL);
      sub_1004B8460(v69, v66, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v337[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v337[2] = v75;
      v84 = swift_allocObject(&unk_10127B5E0, 316, 7);
      *(_QWORD *)&v337[0] = v84;
      *(_OWORD *)(v84 + 16) = v334;
      *(_QWORD *)(v84 + 32) = 0x3FB47AE147AE147BLL;
      memcpy((void *)(v84 + 40), v336, 0x114uLL);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v67);
      sub_1004DB728(v337, (uint64_t)v67);
      v85 = v314;
      sub_1004B84E0(v66, v314, type metadata accessor for CRLRepAnimation);
      sub_1004B84A4(v69, type metadata accessor for CRLRepAnimation);
      v86 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v87) = 0.5;
      LODWORD(v88) = 0;
      LODWORD(v89) = 0;
      LODWORD(v90) = 1.0;
      v91 = objc_msgSend(v86, "initWithControlPoints::::", v87, v88, v89, v90);
      sub_1004E90B0(v301, (uint64_t)v340);
      if ((swift_dynamicCast(v336, v340, v83, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
      {
LABEL_138:
        memset(v336, 0, 300);
        sub_1004CB800((uint64_t)v336, (uint64_t *)&unk_101406CB0);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 97, 0);
        goto LABEL_143;
      }
      memcpy(v337, v336, 0x12CuLL);
      objc_storeStrong((id *)v337, v91);
      sub_1004B8460(v85, v66, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v336[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v336[2] = v75;
      *(_QWORD *)&v323 = v75;
      *(_QWORD *)&v336[0] = swift_allocObject(&unk_10127B5E0, 316, 7);
      sub_1004E91D4((uint64_t)v337, *(_QWORD *)&v336[0] + 16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v67);
      sub_1004DB728(v336, (uint64_t)v67);
      v92 = v66;
      v93 = v306;
      sub_1004B84E0(v92, v306, type metadata accessor for CRLRepAnimation);
      sub_1004E9210((uint64_t)v337);

      sub_1004B84A4(v85, type metadata accessor for CRLRepAnimation);
      v342 = v333;
      v343 = &off_101290348;
      v94 = sub_10050D1B0(&v341);
      sub_1004B8460(v93, (uint64_t)v94, type metadata accessor for CRLRepAnimation);
      v94[2] = 3;
      sub_1004B84A4(v93, type metadata accessor for CRLRepAnimation);
      sub_1004BAB64((uint64_t)v344);
      if (v342)
      {
        sub_1004DB728(&v341, (uint64_t)v337);
        sub_1004DB728(v337, (uint64_t)v336);
        v95 = (_QWORD *)v345[0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v345[0]);
        v71 = v308;
        v72 = v320;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v95 = sub_100D0FAB4(0, v95[2] + 1, 1, v95);
          v345[0] = (uint64_t)v95;
        }
        v98 = v95[2];
        v97 = v95[3];
        if (v98 >= v97 >> 1)
          v345[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v97 > 1), v98 + 1, 1, v95);
        v100 = *((_QWORD *)&v336[1] + 1);
        v99 = *(_QWORD *)&v336[2];
        v101 = sub_1004CB9AC((uint64_t)v336, *((uint64_t *)&v336[1] + 1));
        v102 = __chkstk_darwin(v101);
        v104 = (char *)&v294 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v105 + 16))(v104, v102);
        sub_1005C46A8(v98, (uint64_t)v104, v345, v100, v99);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v336);
        v69 = (uint64_t)v330;
      }
      else
      {
        sub_1004CB800((uint64_t)&v341, (uint64_t *)&unk_1013F0490);
        v71 = v308;
        v72 = v320;
      }
      v70 = (__int128 *)((char *)v72 + 24);
      v63 = (uint64_t)(v319 - 1);
      v66 = (uint64_t)v332;
      v67 = v326;
      if (v319 == (char *)1)
      {
        v106 = v298;
        swift_bridgeObjectRelease(v298);
        v107 = v345[0];
        v108 = v299;
        v299[7] = &type metadata for CRLLayerAnimationGroup;
        v108[8] = &off_101271D70;
        v108[4] = v107;
        v108[5] = 0;
        v345[0] = (uint64_t)_swiftEmptyArrayStorage;
        v109 = (char *)&v337[1] + 8;
        v110 = (uint64_t)v331;
        v330 = v331 + 24;
        v111 = (uint64_t)v71;
        v320 = (__int128 *)(v71 + 24);
        swift_bridgeObjectRetain(v106);
        v112 = (_QWORD *)v328;
        v319 = (char *)&v337[1] + 8;
        v113 = v323;
        while (1)
        {
          v115 = v111;
          v328 = (uint64_t)v112;
          sub_100756CD8((uint64_t)v112, (uint64_t)v344);
          *(_QWORD *)&v336[0] = 1065353216;
          LOBYTE(v336[16]) = 6;
          if (qword_1013DD408 != -1)
            swift_once(&qword_1013DD408, sub_1008D3CF4);
          v116 = (void *)qword_10147FD68;
          sub_10057E090((uint64_t *)v336, (uint64_t)v109);
          *(__int128 *)((char *)v337 + 8) = v325;
          *(_QWORD *)&v337[0] = v116;
          *(_QWORD *)&v337[18] = 0;
          DWORD2(v337[18]) = v324;
          sub_100756CD8((uint64_t)v344, v110);
          *(_QWORD *)(v110 + 48) = &type metadata for CRLBasicLayerAnimation.Def;
          *(_QWORD *)(v110 + 56) = v113;
          v117 = swift_allocObject(&unk_10127B5E0, 316, 7);
          *(_QWORD *)(v110 + 24) = v117;
          sub_1004E91D4((uint64_t)v337, v117 + 16);
          *(_BYTE *)(v110 + 64) = 0;
          v118 = v333;
          v119 = v109;
          v121 = v321;
          v120 = v322;
          ((void (*)(char *, uint64_t, uint64_t, _QWORD))v321)(&v331[*(int *)(v333 + 28)], 1, 1, v322);
          v122 = *(int *)(v118 + 32);
          v110 = (uint64_t)v331;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v121)(&v331[v122], 1, 1, v120);
          v123 = v116;
          sub_1004E9210((uint64_t)v337);
          sub_1004EA730(v336);
          sub_1004E90B0((uint64_t)v330, (uint64_t)v340);
          v124 = sub_1004B804C((uint64_t *)&unk_1013F0480);
          if (!swift_dynamicCast(v337, v340, v124, &type metadata for CRLBasicLayerAnimation.Def, 6))
            goto LABEL_137;
          v334 = v337[0];
          memcpy(v336, v119, 0x114uLL);
          v111 = v115;
          sub_1004B8460(v110, v115, type metadata accessor for CRLRepAnimation);
          *((_QWORD *)&v337[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
          *(_QWORD *)&v337[2] = v113;
          v125 = swift_allocObject(&unk_10127B5E0, 316, 7);
          *(_QWORD *)&v337[0] = v125;
          *(_OWORD *)(v125 + 16) = v334;
          *(_QWORD *)(v125 + 32) = 0x3FB47AE147AE147BLL;
          memcpy((void *)(v125 + 40), v336, 0x114uLL);
          v126 = v320;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v320);
          sub_1004DB728(v337, (uint64_t)v126);
          sub_1004B84A4(v110, type metadata accessor for CRLRepAnimation);
          v127 = objc_allocWithZone((Class)CAMediaTimingFunction);
          LODWORD(v128) = 0.5;
          LODWORD(v129) = 0;
          LODWORD(v130) = 0;
          LODWORD(v131) = 1.0;
          v132 = objc_msgSend(v127, "initWithControlPoints::::", v128, v129, v130, v131);
          sub_1004E90B0((uint64_t)v126, (uint64_t)v340);
          if ((swift_dynamicCast(v336, v340, v124, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
            goto LABEL_138;
          memcpy(v337, v336, 0x12CuLL);
          objc_storeStrong((id *)v337, v132);
          v133 = (uint64_t)v332;
          sub_1004B8460(v115, (uint64_t)v332, type metadata accessor for CRLRepAnimation);
          *((_QWORD *)&v336[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
          *(_QWORD *)&v336[2] = v113;
          *(_QWORD *)&v336[0] = swift_allocObject(&unk_10127B5E0, 316, 7);
          sub_1004E91D4((uint64_t)v337, *(_QWORD *)&v336[0] + 16);
          v134 = v326;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v326);
          sub_1004DB728(v336, (uint64_t)v134);
          v135 = v307;
          sub_1004B84E0(v133, v307, type metadata accessor for CRLRepAnimation);
          sub_1004E9210((uint64_t)v337);

          sub_1004B84A4(v111, type metadata accessor for CRLRepAnimation);
          v342 = v333;
          v343 = &off_101290348;
          v136 = sub_10050D1B0(&v341);
          sub_1004B8460(v135, (uint64_t)v136, type metadata accessor for CRLRepAnimation);
          v136[2] = 1;
          sub_1004B84A4(v135, type metadata accessor for CRLRepAnimation);
          sub_1004BAB64((uint64_t)v344);
          if (v342)
          {
            sub_1004DB728(&v341, (uint64_t)v337);
            sub_1004DB728(v337, (uint64_t)v336);
            v137 = (_QWORD *)v345[0];
            if ((swift_isUniquelyReferenced_nonNull_native(v345[0]) & 1) == 0)
            {
              v137 = sub_100D0FAB4(0, v137[2] + 1, 1, v137);
              v345[0] = (uint64_t)v137;
            }
            v139 = v137[2];
            v138 = v137[3];
            if (v139 >= v138 >> 1)
              v345[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v138 > 1), v139 + 1, 1, v137);
            v140 = *((_QWORD *)&v336[1] + 1);
            v141 = *(_QWORD *)&v336[2];
            v142 = sub_1004CB9AC((uint64_t)v336, *((uint64_t *)&v336[1] + 1));
            v143 = __chkstk_darwin(v142);
            v145 = (char *)&v294 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, __n128))(v146 + 16))(v145, v143);
            sub_1005C46A8(v139, (uint64_t)v145, v345, v140, v141);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v336);
            v110 = (uint64_t)v331;
          }
          else
          {
            sub_1004CB800((uint64_t)&v341, (uint64_t *)&unk_1013F0490);
          }
          v109 = v319;
          v112 = (_QWORD *)(v328 + 24);
          *(_QWORD *)&v327 = v327 - 1;
          v114 = (uint64_t)v332;
          if (!(_QWORD)v327)
          {
            swift_bridgeObjectRelease_n(v298, 2);
            v147 = v299;
            goto LABEL_73;
          }
        }
      }
    }
  }
  else
  {
    *(_QWORD *)(v61 + 56) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v61 + 64) = &off_101271D70;
    *(_QWORD *)(v61 + 32) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v61 + 40) = 0;
    v345[0] = (uint64_t)_swiftEmptyArrayStorage;
    v147 = (_QWORD *)v61;
    swift_bridgeObjectRelease(v62);
    v114 = (uint64_t)v332;
LABEL_73:
    v148 = v345[0];
    v147[12] = &type metadata for CRLLayerAnimationGroup;
    v147[13] = &off_101271D70;
    v147[9] = v148;
    v147[10] = 0;
    v345[0] = (uint64_t)_swiftEmptyArrayStorage;
    v149 = (char *)*((_QWORD *)v318 + 2);
    v331 = v149;
    if (v149)
    {
      v150 = (uint64_t)(v318 + 4);
      v151 = (char *)&v337[1] + 8;
      v326 = (_QWORD *)(v317 + 24);
      *(_QWORD *)&v325 = v316 + 24;
      *(_QWORD *)&v324 = v114 + 24;
      swift_bridgeObjectRetain(v318);
      *((_QWORD *)&v152 + 1) = 0x3FC999999999999ALL;
      v323 = xmmword_100EF6400;
      *(_QWORD *)&v152 = 131586;
      v322 = v152;
      *(_QWORD *)&v327 = (char *)&v337[1] + 8;
      while (1)
      {
        v328 = (uint64_t)v149;
        v330 = (char *)v150;
        sub_100756CD8(v150, (uint64_t)v344);
        *(_QWORD *)&v336[0] = 0x3F80000000000000;
        LOBYTE(v336[16]) = 6;
        if (qword_1013DD408 != -1)
          swift_once(&qword_1013DD408, sub_1008D3CF4);
        v154 = (void *)qword_10147FD68;
        sub_10057E090((uint64_t *)v336, (uint64_t)v151);
        *(__int128 *)((char *)v337 + 8) = v323;
        *(_QWORD *)&v337[0] = v154;
        *(_QWORD *)&v337[18] = 0;
        DWORD2(v337[18]) = v322;
        v155 = v317;
        sub_100756CD8((uint64_t)v344, v317);
        *(_QWORD *)(v155 + 48) = &type metadata for CRLBasicLayerAnimation.Def;
        v156 = sub_1004EB138();
        *(_QWORD *)(v155 + 56) = v156;
        v157 = swift_allocObject(&unk_10127B5E0, 316, 7);
        *(_QWORD *)(v155 + 24) = v157;
        sub_1004E91D4((uint64_t)v337, v157 + 16);
        *(_BYTE *)(v155 + 64) = 0;
        v158 = v333;
        v159 = v151;
        v160 = v155 + *(int *)(v333 + 28);
        v161 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
        v162 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56);
        v162(v160, 1, 1, v161);
        v162(v155 + *(int *)(v158 + 32), 1, 1, v161);
        v163 = v154;
        sub_1004E9210((uint64_t)v337);
        sub_1004EA730(v336);
        sub_1004E90B0((uint64_t)v326, (uint64_t)v340);
        v164 = sub_1004B804C((uint64_t *)&unk_1013F0480);
        if (!swift_dynamicCast(v337, v340, v164, &type metadata for CRLBasicLayerAnimation.Def, 6))
          break;
        v334 = v337[0];
        memcpy(v336, v159, 0x114uLL);
        v165 = v316;
        sub_1004B8460(v155, v316, type metadata accessor for CRLRepAnimation);
        *((_QWORD *)&v337[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
        *(_QWORD *)&v337[2] = v156;
        v166 = swift_allocObject(&unk_10127B5E0, 316, 7);
        *(_QWORD *)&v337[0] = v166;
        *(_OWORD *)(v166 + 16) = v334;
        *(_QWORD *)(v166 + 32) = 0x3FC999999999999ALL;
        memcpy((void *)(v166 + 40), v336, 0x114uLL);
        v167 = v325;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)v325);
        sub_1004DB728(v337, v167);
        sub_1004B84A4(v155, type metadata accessor for CRLRepAnimation);
        v168 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v169) = 0.5;
        LODWORD(v170) = 0;
        LODWORD(v171) = 0;
        LODWORD(v172) = 1.0;
        v173 = objc_msgSend(v168, "initWithControlPoints::::", v169, v170, v171, v172);
        sub_1004E90B0(v167, (uint64_t)v340);
        if ((swift_dynamicCast(v336, v340, v164, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
          goto LABEL_138;
        memcpy(v337, v336, 0x12CuLL);
        objc_storeStrong((id *)v337, v173);
        v174 = (uint64_t)v332;
        sub_1004B8460(v165, (uint64_t)v332, type metadata accessor for CRLRepAnimation);
        *((_QWORD *)&v336[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
        *(_QWORD *)&v336[2] = v156;
        *(_QWORD *)&v336[0] = swift_allocObject(&unk_10127B5E0, 316, 7);
        sub_1004E91D4((uint64_t)v337, *(_QWORD *)&v336[0] + 16);
        v175 = v324;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)v324);
        sub_1004DB728(v336, v175);
        v176 = v174;
        v177 = (uint64_t)v309;
        sub_1004B84E0(v176, (uint64_t)v309, type metadata accessor for CRLRepAnimation);
        sub_1004E9210((uint64_t)v337);

        sub_1004B84A4(v165, type metadata accessor for CRLRepAnimation);
        v342 = v333;
        v343 = &off_101290348;
        v178 = sub_10050D1B0(&v341);
        sub_1004B8460(v177, (uint64_t)v178, type metadata accessor for CRLRepAnimation);
        v178[2] = 1;
        sub_1004B84A4(v177, type metadata accessor for CRLRepAnimation);
        sub_1004BAB64((uint64_t)v344);
        if (v342)
        {
          sub_1004DB728(&v341, (uint64_t)v337);
          sub_1004DB728(v337, (uint64_t)v336);
          v179 = (_QWORD *)v345[0];
          v180 = swift_isUniquelyReferenced_nonNull_native(v345[0]);
          v153 = (uint64_t)v330;
          if ((v180 & 1) == 0)
          {
            v179 = sub_100D0FAB4(0, v179[2] + 1, 1, v179);
            v345[0] = (uint64_t)v179;
          }
          v182 = v179[2];
          v181 = v179[3];
          if (v182 >= v181 >> 1)
            v345[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v181 > 1), v182 + 1, 1, v179);
          v183 = *((_QWORD *)&v336[1] + 1);
          v184 = *(_QWORD *)&v336[2];
          v185 = sub_1004CB9AC((uint64_t)v336, *((uint64_t *)&v336[1] + 1));
          v186 = __chkstk_darwin(v185);
          v188 = (char *)&v294 - ((v187 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v189 + 16))(v188, v186);
          sub_1005C46A8(v182, (uint64_t)v188, v345, v183, v184);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v336);
          v151 = (char *)v327;
        }
        else
        {
          sub_1004CB800((uint64_t)&v341, (uint64_t *)&unk_1013F0490);
          v151 = (char *)v327;
          v153 = (uint64_t)v330;
        }
        v150 = v153 + 24;
        v149 = (char *)(v328 - 1);
        v114 = (uint64_t)v332;
        if (v328 == 1)
        {
          swift_bridgeObjectRelease(v318);
          v190 = (double *)v345[0];
          v147 = v299;
          goto LABEL_89;
        }
      }
    }
    else
    {
      v190 = _swiftEmptyArrayStorage;
LABEL_89:
      v147[17] = &type metadata for CRLLayerAnimationGroup;
      v147[18] = &off_101271D70;
      v147[14] = v190;
      v147[15] = 0;
      v191 = swift_allocObject(v295, 112, 7);
      v192 = (_QWORD *)v191;
      *(_OWORD *)(v191 + 16) = xmmword_100EF5A10;
      v345[0] = (uint64_t)_swiftEmptyArrayStorage;
      v193 = v331;
      if (!v331)
      {
        *(_QWORD *)(v191 + 56) = &type metadata for CRLLayerAnimationGroup;
        *(_QWORD *)(v191 + 64) = &off_101271D70;
        *(_QWORD *)(v191 + 32) = _swiftEmptyArrayStorage;
        *(_QWORD *)(v191 + 40) = 0;
        v345[0] = (uint64_t)_swiftEmptyArrayStorage;
        v278 = v318;
LABEL_126:
        v279 = (double *)v299;
        swift_bridgeObjectRelease(v278);
        v280 = v345[0];
        v192[12] = &type metadata for CRLLayerAnimationGroup;
        v192[13] = &off_101271D70;
        v192[9] = v280;
        v192[10] = 0;
        v281 = sub_10060CD0C((uint64_t)v192, 0.0);
        v283 = v282;
        v284 = v281;
        swift_setDeallocating(v192);
        v285 = v192[2];
        v286 = sub_1004B804C((uint64_t *)&unk_1013F0490);
        swift_arrayDestroy(v192 + 4, v285, v286);
        swift_deallocClassInstance(v192, 32, 7);
        *((_QWORD *)v279 + 22) = &type metadata for CRLLayerAnimationSequence;
        *((_QWORD *)v279 + 23) = &off_101276628;
        *((_QWORD *)v279 + 19) = v283;
        v279[20] = v284;
        v287 = sub_10060CD0C((uint64_t)v279, 0.0);
        v289 = v288;
        v290 = v287;
        swift_setDeallocating(v279);
        swift_arrayDestroy(v279 + 4, *((_QWORD *)v279 + 2), v286);
        swift_deallocClassInstance(v279, 32, 7);
        sub_10074EFF8(0, 1, 1, 0, 0, v296, v297, v289, v290);
        swift_bridgeObjectRelease(v289);
        return;
      }
      v309 = (_QWORD *)v191;
      v194 = (uint64_t)(v318 + 4);
      v195 = (char *)&v337[1] + 8;
      v196 = (uint64_t)v329;
      v320 = (__int128 *)((char *)v329 + 24);
      v321 = &v336[1];
      v328 = v114 + 24;
      v319 = (char *)v315 + 24;
      swift_bridgeObjectRetain(v318);
      v317 = xmmword_100F08690;
      *((_QWORD *)&v197 + 1) = 0x3FC999999999999ALL;
      v316 = xmmword_100EF6400;
      *(_QWORD *)&v197 = 131586;
      v327 = v197;
      v330 = (char *)v194;
      v198 = v194;
      *(_QWORD *)&v322 = (char *)&v337[1] + 8;
      while (1)
      {
        *(_QWORD *)&v323 = v193;
        *(_QWORD *)&v324 = v198;
        sub_100756CD8(v198, (uint64_t)v344);
        v336[0] = v317;
        v200 = v321;
        *(_QWORD *)v321 = 0;
        *((_QWORD *)v200 + 1) = 0;
        LOBYTE(v336[2]) = 1;
        *((_QWORD *)&v336[2] + 1) = 0;
        LOBYTE(v336[3]) = 2;
        LOBYTE(v336[16]) = 58;
        if (qword_1013DD408 != -1)
          swift_once(&qword_1013DD408, sub_1008D3CF4);
        v201 = (void *)qword_10147FD68;
        sub_10057E090((uint64_t *)v336, (uint64_t)v195);
        *(__int128 *)((char *)v337 + 8) = v316;
        *(_QWORD *)&v337[0] = v201;
        *(_QWORD *)&v337[18] = 0;
        DWORD2(v337[18]) = v327;
        sub_100756CD8((uint64_t)v344, v196);
        *(_QWORD *)(v196 + 48) = &type metadata for CRLBasicLayerAnimation.Def;
        v202 = sub_1004EB138();
        *(_QWORD *)(v196 + 56) = v202;
        v203 = swift_allocObject(&unk_10127B5E0, 316, 7);
        *(_QWORD *)(v196 + 24) = v203;
        sub_1004E91D4((uint64_t)v337, v203 + 16);
        *(_BYTE *)(v196 + 64) = 0;
        v204 = v333;
        v205 = v195;
        v206 = (char *)v329 + *(int *)(v333 + 28);
        v207 = (_QWORD *)type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
        v208 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(*(v207 - 1) + 56);
        v208(v206, 1, 1, v207);
        v209 = *(int *)(v204 + 32);
        v196 = (uint64_t)v329;
        v326 = v207;
        *(_QWORD *)&v325 = v208;
        v208((char *)v329 + v209, 1, 1, v207);
        v210 = v201;
        sub_1004E9210((uint64_t)v337);
        sub_1004EA730(v336);
        sub_1004E90B0((uint64_t)v320, (uint64_t)v340);
        v211 = sub_1004B804C((uint64_t *)&unk_1013F0480);
        v212 = swift_dynamicCast(v337, v340, v211, &type metadata for CRLBasicLayerAnimation.Def, 6);
        v213 = (_QWORD *)v328;
        if (!v212)
          break;
        v334 = v337[0];
        memcpy(v336, v205, 0x114uLL);
        sub_1004B8460(v196, v114, type metadata accessor for CRLRepAnimation);
        *((_QWORD *)&v337[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
        *(_QWORD *)&v337[2] = v202;
        v214 = swift_allocObject(&unk_10127B5E0, 316, 7);
        *(_QWORD *)&v337[0] = v214;
        *(_OWORD *)(v214 + 16) = v334;
        *(_QWORD *)(v214 + 32) = 0x3FB47AE147AE147BLL;
        memcpy((void *)(v214 + 40), v336, 0x114uLL);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v213);
        sub_1004DB728(v337, (uint64_t)v213);
        v215 = v315;
        sub_1004B84E0(v114, (uint64_t)v315, type metadata accessor for CRLRepAnimation);
        sub_1004B84A4(v196, type metadata accessor for CRLRepAnimation);
        v216 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v217) = 0.5;
        LODWORD(v218) = 0;
        LODWORD(v219) = 0;
        LODWORD(v220) = 1.0;
        v221 = v114;
        v222 = objc_msgSend(v216, "initWithControlPoints::::", v217, v218, v219, v220);
        sub_1004E90B0((uint64_t)v319, (uint64_t)v340);
        if ((swift_dynamicCast(v336, v340, v211, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
          goto LABEL_138;
        memcpy(v337, v336, 0x12CuLL);
        objc_storeStrong((id *)v337, v222);
        sub_1004B8460((uint64_t)v215, v221, type metadata accessor for CRLRepAnimation);
        *((_QWORD *)&v336[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
        *(_QWORD *)&v336[2] = v202;
        *(_QWORD *)&v336[0] = swift_allocObject(&unk_10127B5E0, 316, 7);
        sub_1004E91D4((uint64_t)v337, *(_QWORD *)&v336[0] + 16);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v213);
        sub_1004DB728(v336, (uint64_t)v213);
        v223 = v221;
        v224 = v304;
        sub_1004B84E0(v223, v304, type metadata accessor for CRLRepAnimation);
        sub_1004E9210((uint64_t)v337);

        sub_1004B84A4((uint64_t)v215, type metadata accessor for CRLRepAnimation);
        v342 = v333;
        v343 = &off_101290348;
        v225 = sub_10050D1B0(&v341);
        sub_1004B8460(v224, (uint64_t)v225, type metadata accessor for CRLRepAnimation);
        v225[2] = 3;
        sub_1004B84A4(v224, type metadata accessor for CRLRepAnimation);
        sub_1004BAB64((uint64_t)v344);
        if (v342)
        {
          sub_1004DB728(&v341, (uint64_t)v337);
          sub_1004DB728(v337, (uint64_t)v336);
          v226 = (_QWORD *)v345[0];
          v227 = swift_isUniquelyReferenced_nonNull_native(v345[0]);
          v199 = v331;
          if ((v227 & 1) == 0)
          {
            v226 = sub_100D0FAB4(0, v226[2] + 1, 1, v226);
            v345[0] = (uint64_t)v226;
          }
          v229 = v226[2];
          v228 = v226[3];
          if (v229 >= v228 >> 1)
            v345[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v228 > 1), v229 + 1, 1, v226);
          v230 = *((_QWORD *)&v336[1] + 1);
          v231 = *(_QWORD *)&v336[2];
          v232 = sub_1004CB9AC((uint64_t)v336, *((uint64_t *)&v336[1] + 1));
          v233 = __chkstk_darwin(v232);
          v235 = (char *)&v294 - ((v234 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v236 + 16))(v235, v233);
          sub_1005C46A8(v229, (uint64_t)v235, v345, v230, v231);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v336);
          v196 = (uint64_t)v329;
        }
        else
        {
          sub_1004CB800((uint64_t)&v341, (uint64_t *)&unk_1013F0490);
          v199 = v331;
        }
        v195 = (char *)v322;
        v198 = v324 + 24;
        v193 = (char *)(v323 - 1);
        v114 = (uint64_t)v332;
        if ((_QWORD)v323 == 1)
        {
          v237 = v318;
          swift_bridgeObjectRelease(v318);
          v238 = v345[0];
          v329 = &v336[1];
          *(_QWORD *)&v324 = (char *)&v337[2] + 8;
          v239 = v309;
          v309[7] = &type metadata for CRLLayerAnimationGroup;
          v239[8] = &off_101271D70;
          *(_QWORD *)&v323 = v313 + 3;
          *(_QWORD *)&v322 = (char *)v337 + 8;
          v321 = (__int128 *)(v312 + 3);
          v320 = &v337[1];
          v239[4] = v238;
          v239[5] = 0;
          v345[0] = (uint64_t)_swiftEmptyArrayStorage;
          v319 = (char *)(v311 + 24);
          *(_QWORD *)&v317 = (char *)&v337[1] + 8;
          v315 = &v337[2];
          *(_QWORD *)&v316 = v310 + 24;
          swift_bridgeObjectRetain(v237);
          v314 = xmmword_100F086A0;
          v240 = &unk_10127B658;
          v241 = (uint64_t)v330;
          while (1)
          {
            sub_100756CD8(v241, (uint64_t)v344);
            v336[0] = v314;
            v243 = v329;
            *(_QWORD *)v329 = 0;
            *((_QWORD *)v243 + 1) = 0;
            LOBYTE(v336[2]) = 1;
            *((_QWORD *)&v336[2] + 1) = 0;
            LOBYTE(v336[3]) = 2;
            LOBYTE(v336[16]) = 58;
            if (qword_1013DD410 != -1)
              swift_once(&qword_1013DD410, sub_1008D3D08);
            v244 = qword_10147FD70;
            if (qword_1013DD418 != -1)
              swift_once(&qword_1013DD418, sub_1008D3D18);
            v245 = qword_10147FD78;
            if (qword_1013DD420 != -1)
              swift_once(&qword_1013DD420, sub_1008D3D24);
            v331 = v199;
            v246 = qword_10147FD80;
            if (qword_1013DD428 != -1)
              swift_once(&qword_1013DD428, sub_1008D3D34);
            v330 = (char *)v241;
            v247 = qword_10147FD88;
            sub_10057E090((uint64_t *)v336, v324);
            *(_QWORD *)&v337[0] = v244;
            *((_QWORD *)&v337[0] + 1) = v245;
            *(_QWORD *)&v337[1] = v246;
            *((_QWORD *)&v337[1] + 1) = v247;
            *(_QWORD *)&v337[2] = 0;
            v338 = 0;
            v339 = v327;
            v248 = (uint64_t)v313;
            sub_100756CD8((uint64_t)v344, (uint64_t)v313);
            *(_QWORD *)(v248 + 48) = &type metadata for CRLSpringLayerAnimation.Def;
            v249 = sub_100553914();
            *(_QWORD *)(v248 + 56) = v249;
            v250 = swift_allocObject(v240, 332, 7);
            *(_QWORD *)(v248 + 24) = v250;
            sub_100720EB4((uint64_t)v337, v250 + 16);
            *(_BYTE *)(v248 + 64) = 0;
            v251 = v333;
            v252 = v240;
            v253 = v326;
            v254 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v325;
            ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v325)(v248 + *(int *)(v333 + 28), 1, 1, v326);
            v254(v248 + *(int *)(v251 + 32), 1, 1, v253);
            sub_100635C68((uint64_t)v337);
            sub_1004EA730(v336);
            sub_1004E90B0(v323, (uint64_t)v340);
            v255 = sub_1004B804C((uint64_t *)&unk_1013F0480);
            if (!swift_dynamicCast(v337, v340, v255, &type metadata for CRLSpringLayerAnimation.Def, 6))
            {
              memset(v337, 0, sizeof(v337));
              v338 = 1;
              v339 = 0;
              sub_1004CB800((uint64_t)v337, &qword_1013E1FD0);
              _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 112, 0);
              goto LABEL_143;
            }
            memcpy(v336, (const void *)v322, 0x134uLL);
            sub_1004B8460(v248, v114, type metadata accessor for CRLRepAnimation);
            *((_QWORD *)&v337[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
            *(_QWORD *)&v337[2] = v249;
            v256 = swift_allocObject(v252, 332, 7);
            *(_QWORD *)&v337[0] = v256;
            *(_QWORD *)(v256 + 16) = 0x4038000000000000;
            memcpy((void *)(v256 + 24), v336, 0x134uLL);
            v257 = (_QWORD *)v328;
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)v328);
            sub_1004DB728(v337, (uint64_t)v257);
            v258 = (uint64_t)v312;
            sub_1004B84E0(v114, (uint64_t)v312, type metadata accessor for CRLRepAnimation);
            sub_1004B84A4(v248, type metadata accessor for CRLRepAnimation);
            sub_1004E90B0((uint64_t)v321, (uint64_t)v340);
            if ((swift_dynamicCast(v337, v340, v255, &type metadata for CRLSpringLayerAnimation.Def, 6) & 1) == 0)
            {
              memset(v337, 0, sizeof(v337));
              v338 = 1;
              v339 = 0;
              sub_1004CB800((uint64_t)v337, &qword_1013E1FD0);
              _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 124, 0);
              goto LABEL_143;
            }
            v259 = *(_QWORD *)&v337[0];
            memcpy(v336, v320, 0x12CuLL);
            sub_1004B8460(v258, v114, type metadata accessor for CRLRepAnimation);
            *((_QWORD *)&v337[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
            *(_QWORD *)&v337[2] = v249;
            v260 = (_QWORD *)swift_allocObject(v252, 332, 7);
            *(_QWORD *)&v337[0] = v260;
            v260[2] = v259;
            v260[3] = 0;
            memcpy(v260 + 4, v336, 0x12CuLL);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v257);
            sub_1004DB728(v337, (uint64_t)v257);
            v261 = v311;
            sub_1004B84E0(v114, v311, type metadata accessor for CRLRepAnimation);
            sub_1004B84A4(v258, type metadata accessor for CRLRepAnimation);
            sub_1004E90B0((uint64_t)v319, (uint64_t)v340);
            if ((swift_dynamicCast(v337, v340, v255, &type metadata for CRLSpringLayerAnimation.Def, 6) & 1) == 0)
            {
              memset(v337, 0, sizeof(v337));
              v338 = 1;
              v339 = 0;
              sub_1004CB800((uint64_t)v337, &qword_1013E1FD0);
              _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 136, 0);
              goto LABEL_143;
            }
            v334 = v337[0];
            memcpy(v336, (const void *)v317, 0x124uLL);
            sub_1004B8460(v261, v114, type metadata accessor for CRLRepAnimation);
            *((_QWORD *)&v337[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
            *(_QWORD *)&v337[2] = v249;
            v262 = swift_allocObject(v252, 332, 7);
            *(_QWORD *)&v337[0] = v262;
            *(_OWORD *)(v262 + 16) = v334;
            *(_QWORD *)(v262 + 32) = 0x3FF0000000000000;
            memcpy((void *)(v262 + 40), v336, 0x124uLL);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v257);
            sub_1004DB728(v337, (uint64_t)v257);
            v263 = v310;
            sub_1004B84E0(v114, v310, type metadata accessor for CRLRepAnimation);
            sub_1004B84A4(v261, type metadata accessor for CRLRepAnimation);
            sub_1004E90B0(v316, (uint64_t)v340);
            if ((swift_dynamicCast(v337, v340, v255, &type metadata for CRLSpringLayerAnimation.Def, 6) & 1) == 0)
              break;
            v334 = v337[0];
            v335 = *(_QWORD *)&v337[1];
            memcpy(v336, v315, 0x11CuLL);
            sub_1004B8460(v263, v114, type metadata accessor for CRLRepAnimation);
            *((_QWORD *)&v337[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
            *(_QWORD *)&v337[2] = v249;
            v264 = swift_allocObject(v252, 332, 7);
            *(_QWORD *)&v337[0] = v264;
            *(_OWORD *)(v264 + 16) = v334;
            *(_QWORD *)(v264 + 32) = v335;
            *(_QWORD *)(v264 + 40) = 0x4074000000000000;
            memcpy((void *)(v264 + 48), v336, 0x11CuLL);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v257);
            sub_1004DB728(v337, (uint64_t)v257);
            v265 = v305;
            sub_1004B84E0(v114, v305, type metadata accessor for CRLRepAnimation);
            sub_1004B84A4(v263, type metadata accessor for CRLRepAnimation);
            v342 = v333;
            v343 = &off_101290348;
            v266 = sub_10050D1B0(&v341);
            sub_1004B8460(v265, (uint64_t)v266, type metadata accessor for CRLRepAnimation);
            v266[2] = 3;
            sub_1004B84A4(v265, type metadata accessor for CRLRepAnimation);
            sub_1004BAB64((uint64_t)v344);
            if (v342)
            {
              sub_1004DB728(&v341, (uint64_t)v337);
              sub_1004DB728(v337, (uint64_t)v336);
              v267 = (_QWORD *)v345[0];
              v268 = swift_isUniquelyReferenced_nonNull_native(v345[0]);
              v242 = (uint64_t)v330;
              if ((v268 & 1) == 0)
              {
                v267 = sub_100D0FAB4(0, v267[2] + 1, 1, v267);
                v345[0] = (uint64_t)v267;
              }
              v240 = v252;
              v270 = v267[2];
              v269 = v267[3];
              if (v270 >= v269 >> 1)
                v345[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v269 > 1), v270 + 1, 1, v267);
              v271 = *((_QWORD *)&v336[1] + 1);
              v272 = *(_QWORD *)&v336[2];
              v273 = sub_1004CB9AC((uint64_t)v336, *((uint64_t *)&v336[1] + 1));
              v274 = __chkstk_darwin(v273);
              v276 = (char *)&v294 - ((v275 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *, __n128))(v277 + 16))(v276, v274);
              sub_1005C46A8(v270, (uint64_t)v276, v345, v271, v272);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v336);
              v114 = (uint64_t)v332;
            }
            else
            {
              sub_1004CB800((uint64_t)&v341, (uint64_t *)&unk_1013F0490);
              v242 = (uint64_t)v330;
              v240 = v252;
            }
            v241 = v242 + 24;
            v199 = v331 - 1;
            if (v331 == (char *)1)
            {
              v278 = v318;
              swift_bridgeObjectRelease(v318);
              v192 = v309;
              goto LABEL_126;
            }
          }
          memset(v337, 0, sizeof(v337));
          v338 = 1;
          v339 = 0;
          sub_1004CB800((uint64_t)v337, &qword_1013E1FD0);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 148, 0);
          goto LABEL_143;
        }
      }
    }
  }
LABEL_137:
  memset(v337, 0, 300);
  sub_1004CB800((uint64_t)v337, (uint64_t *)&unk_101406CB0);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 88, 0);
LABEL_143:
  __break(1u);
}

void sub_100753DB0(void *a1, void *a2, void *a3, void *a4, id a5)
{
  uint64_t v5;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  _QWORD *v21;

  v11 = objc_msgSend(a5, "canvas");
  v12 = (_QWORD *)swift_allocObject(&unk_10127B680, 64, 7);
  v12[2] = a2;
  v12[3] = a5;
  v12[4] = a1;
  v12[5] = a4;
  v12[6] = a3;
  v12[7] = v5;
  v20[4] = sub_100757CC0;
  v21 = v12;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = *(_QWORD *)"";
  v20[2] = sub_1005D2FC0;
  v20[3] = &unk_10127B698;
  v13 = _Block_copy(v20);
  v14 = v21;
  v15 = a2;
  v16 = a5;
  v17 = a1;
  v18 = a4;
  v19 = a3;
  objc_msgSend(v11, "afterLayoutIncludingLayers:performBlock:", 1, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);

}

void sub_100753EC0(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  id v23;
  id v24;
  double *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  double *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  double *v56;
  void *v57;
  double *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  double *v67;
  double *v68;
  unint64_t v69;
  unint64_t v70;
  double *v71;
  id v72;
  uint64_t v73;
  double *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  __int128 v78;
  void *v79;
  unint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void *v90;
  void (*v91)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  double *v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  __int128 v115;
  uint64_t v116;
  unint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  double v131;
  double v132;
  double v133;
  double v134;
  id v135;
  _QWORD *v136;
  _QWORD *v137;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  id v150;
  id v151;
  id v152;
  id v153;
  double *v154;
  uint64_t v155;
  double v156;
  uint64_t v157;
  uint64_t v158;
  double v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  id v164[2];
  id v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  id v170;
  __int128 v171;
  __int128 v172;
  _QWORD *v173;
  void *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  double *v182;
  double *v183;
  double *v184;
  __int128 v185[19];
  _BYTE v186[40];
  __int128 v187;
  __int128 v188[19];
  __int128 v189;
  uint64_t v190;
  _UNKNOWN **v191;
  _BYTE v192[24];
  uint64_t v193[4];

  v166 = a5;
  v167 = a6;
  v165 = a4;
  v179 = a3;
  v180 = type metadata accessor for CRLRepAnimation(0);
  __chkstk_darwin(v180);
  v177 = (uint64_t)v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v176 = (uint64_t)v164 - v10;
  __chkstk_darwin(v11);
  v181 = (uint64_t)v164 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)v164 - v14;
  v16 = type metadata accessor for CRLGroupItem(0);
  v17 = (_QWORD *)swift_dynamicCastClass(a1, v16);
  v175 = v15;
  if (!v17)
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v20 = swift_allocObject(v21, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v20 + 32) = a1;
    goto LABEL_5;
  }
  v18 = v17;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x5B8))() & 1) != 0)
  {
    v19 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v20 = swift_allocObject(v19, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v20 + 32) = v18;
LABEL_5:
    *(_QWORD *)&v188[0] = v20;
    specialized Array._endMutation()(v20);
    v22 = *(double **)&v188[0];
    v23 = a1;
    goto LABEL_7;
  }
  v24 = a1;
  sub_1004E3A60();
  v22 = v25;

LABEL_7:
  v26 = a2;
  swift_bridgeObjectRetain(v22);
  v27 = 0;
  v29 = (uint64_t)sub_1004BA950(v28, v26);
  v184 = v22;
  swift_bridgeObjectRelease(v22);

  if ((unint64_t)v29 >> 62)
    goto LABEL_24;
  v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  v31 = v26;
  swift_bridgeObjectRetain(v29);
  for (; v30; v30 = _CocoaArrayWrapper.endIndex.getter(v38))
  {
    v182 = (double *)v27;
    v183 = _swiftEmptyArrayStorage;
    v27 = 4;
    while (1)
    {
      v32 = (v29 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27 - 4, v29)
          : *(id *)(v29 + 8 * v27);
      v33 = v32;
      v34 = v27 - 3;
      if (__OFADD__(v27 - 4, 1))
        break;
      swift_unknownObjectWeakInit(v185);
      swift_unknownObjectWeakInit((char *)v185 + 8);
      swift_unknownObjectWeakAssign(v185, v33);
      swift_unknownObjectWeakAssign((char *)v185 + 8, v26);
      *(_QWORD *)&v185[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
      sub_1007574C8((uint64_t)v185, (uint64_t)v188);
      BYTE8(v188[1]) = 0;

      if ((BYTE8(v188[1]) & 1) != 0)
      {
        sub_1004CB800((uint64_t)v188, &qword_1013DF448);
      }
      else
      {
        sub_1007574C8((uint64_t)v188, (uint64_t)v185);
        sub_1007574C8((uint64_t)v185, (uint64_t)v188);
        if ((swift_isUniquelyReferenced_nonNull_native(v183) & 1) == 0)
          v183 = (double *)sub_100D0EC3C(0, *((_QWORD *)v183 + 2) + 1, 1, (unint64_t)v183);
        v36 = *((_QWORD *)v183 + 2);
        v35 = *((_QWORD *)v183 + 3);
        if (v36 >= v35 >> 1)
          v183 = (double *)sub_100D0EC3C((_QWORD *)(v35 > 1), v36 + 1, 1, (unint64_t)v183);
        v37 = v183;
        *((_QWORD *)v183 + 2) = v36 + 1;
        sub_1007574C8((uint64_t)v188, (uint64_t)&v37[3 * v36 + 4]);
      }
      ++v27;
      if (v34 == v30)
      {

        swift_bridgeObjectRelease(v29);
        v27 = (uint64_t)v182;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_24:
    if (v29 < 0)
      v38 = v29;
    else
      v38 = v29 & 0xFFFFFFFFFFFFFF8;
    v39 = v26;
    swift_bridgeObjectRetain(v29);
  }

  swift_bridgeObjectRelease(v29);
  v183 = _swiftEmptyArrayStorage;
LABEL_29:
  swift_bridgeObjectRelease(v29);
  sub_1004E3A60();
  v41 = v40;
  v42 = v26;
  v178 = v41;
  v43 = (uint64_t)sub_1004BA950(v41, v42);
  v174 = (void *)v27;

  if ((unint64_t)v43 >> 62)
    goto LABEL_45;
  v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  v45 = v42;
  swift_bridgeObjectRetain(v43);
  for (; v44; v44 = _CocoaArrayWrapper.endIndex.getter(v53))
  {
    v182 = _swiftEmptyArrayStorage;
    v46 = 4;
    while (1)
    {
      v47 = (v43 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46 - 4, v43)
          : *(id *)(v43 + 8 * v46);
      v48 = v47;
      v49 = v46 - 3;
      if (__OFADD__(v46 - 4, 1))
        break;
      swift_unknownObjectWeakInit(v185);
      swift_unknownObjectWeakInit((char *)v185 + 8);
      swift_unknownObjectWeakAssign(v185, v48);
      swift_unknownObjectWeakAssign((char *)v185 + 8, v42);
      *(_QWORD *)&v185[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
      sub_1007574C8((uint64_t)v185, (uint64_t)v188);
      BYTE8(v188[1]) = 0;

      if ((BYTE8(v188[1]) & 1) != 0)
      {
        sub_1004CB800((uint64_t)v188, &qword_1013DF448);
      }
      else
      {
        sub_1007574C8((uint64_t)v188, (uint64_t)v185);
        sub_1007574C8((uint64_t)v185, (uint64_t)v188);
        if ((swift_isUniquelyReferenced_nonNull_native(v182) & 1) == 0)
          v182 = (double *)sub_100D0EC3C(0, *((_QWORD *)v182 + 2) + 1, 1, (unint64_t)v182);
        v51 = *((_QWORD *)v182 + 2);
        v50 = *((_QWORD *)v182 + 3);
        if (v51 >= v50 >> 1)
          v182 = (double *)sub_100D0EC3C((_QWORD *)(v50 > 1), v51 + 1, 1, (unint64_t)v182);
        v52 = v182;
        *((_QWORD *)v182 + 2) = v51 + 1;
        sub_1007574C8((uint64_t)v188, (uint64_t)&v52[3 * v51 + 4]);
      }
      ++v46;
      if (v49 == v44)
        goto LABEL_50;
    }
    __break(1u);
LABEL_45:
    if (v43 < 0)
      v53 = v43;
    else
      v53 = v43 & 0xFFFFFFFFFFFFFF8;
    v54 = v42;
    swift_bridgeObjectRetain(v43);
  }
  v182 = _swiftEmptyArrayStorage;
LABEL_50:

  swift_bridgeObjectRelease_n(v43, 2);
  v55 = v178;
  v56 = v184;
  v57 = v174;
  v58 = sub_1007576E0(v178, (uint64_t)v184);
  swift_bridgeObjectRelease(v55);
  swift_bridgeObjectRelease(v56);
  v59 = v42;
  v60 = (uint64_t)sub_1004BA950((uint64_t)v58, v59);
  v164[1] = v57;
  swift_bridgeObjectRelease(v58);

  if ((unint64_t)v60 >> 62)
    goto LABEL_102;
  v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
  v62 = v59;
  swift_bridgeObjectRetain(v60);
  while (1)
  {
    v170 = v59;
    if (!v61)
      break;
    v184 = _swiftEmptyArrayStorage;
    v63 = 4;
    while (1)
    {
      v64 = (v60 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v63 - 4, v60)
          : *(id *)(v60 + 8 * v63);
      v65 = v64;
      v66 = v63 - 3;
      if (__OFADD__(v63 - 4, 1))
        break;
      swift_unknownObjectWeakInit(v185);
      swift_unknownObjectWeakInit((char *)v185 + 8);
      swift_unknownObjectWeakAssign(v185, v65);
      swift_unknownObjectWeakAssign((char *)v185 + 8, v59);
      *(_QWORD *)&v185[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
      sub_1007574C8((uint64_t)v185, (uint64_t)v188);
      BYTE8(v188[1]) = 0;

      if ((BYTE8(v188[1]) & 1) != 0)
      {
        sub_1004CB800((uint64_t)v188, &qword_1013DF448);
      }
      else
      {
        sub_1007574C8((uint64_t)v188, (uint64_t)v185);
        sub_1007574C8((uint64_t)v185, (uint64_t)v188);
        v67 = v184;
        if ((swift_isUniquelyReferenced_nonNull_native(v184) & 1) == 0)
          v67 = (double *)sub_100D0EC3C(0, *((_QWORD *)v67 + 2) + 1, 1, (unint64_t)v67);
        v68 = v67;
        v69 = *((_QWORD *)v67 + 2);
        v184 = v68;
        v70 = *((_QWORD *)v68 + 3);
        if (v69 >= v70 >> 1)
          v184 = (double *)sub_100D0EC3C((_QWORD *)(v70 > 1), v69 + 1, 1, (unint64_t)v184);
        v71 = v184;
        *((_QWORD *)v184 + 2) = v69 + 1;
        sub_1007574C8((uint64_t)v188, (uint64_t)&v71[3 * v69 + 4]);
        v59 = v170;
      }
      ++v63;
      if (v66 == v61)
        goto LABEL_67;
    }
    __break(1u);
LABEL_102:
    if (v60 < 0)
      v162 = v60;
    else
      v162 = v60 & 0xFFFFFFFFFFFFFF8;
    v163 = v59;
    swift_bridgeObjectRetain(v60);
    v61 = _CocoaArrayWrapper.endIndex.getter(v162);
  }
  v184 = _swiftEmptyArrayStorage;
LABEL_67:

  swift_bridgeObjectRelease_n(v60, 2);
  v72 = objc_msgSend(v59, "repForInfo:", v179);
  if (!v72)
  {
    swift_bridgeObjectRelease(v183);
    swift_bridgeObjectRelease(v182);
    swift_bridgeObjectRelease(v184);
    return;
  }
  v164[0] = v72;
  v73 = sub_1004B804C((uint64_t *)&unk_1013F0470);
  v168 = swift_allocObject(v73, 152, 7);
  *(_OWORD *)(v168 + 16) = xmmword_100EF5550;
  v193[0] = (uint64_t)_swiftEmptyArrayStorage;
  v74 = v184;
  v75 = *((_QWORD *)v183 + 2);
  if (v75)
  {
    v76 = (uint64_t)(v183 + 4);
    v77 = (char *)&v188[1] + 8;
    v173 = (_QWORD *)(v181 + 24);
    v174 = v175 + 24;
    swift_bridgeObjectRetain(v183);
    *((_QWORD *)&v78 + 1) = 0x3FC999999999999ALL;
    v172 = xmmword_100EF6400;
    *(_QWORD *)&v78 = 131586;
    v171 = v78;
    v79 = &unk_10127B5E0;
    while (1)
    {
      v178 = v76;
      v179 = v75;
      sub_100756CD8(v76, (uint64_t)v192);
      *(_QWORD *)&v185[0] = 0;
      LOBYTE(v185[16]) = 6;
      if (qword_1013DD408 != -1)
        swift_once(&qword_1013DD408, sub_1008D3CF4);
      v82 = (void *)qword_10147FD68;
      sub_10057E090((uint64_t *)v185, (uint64_t)v77);
      *(__int128 *)((char *)v188 + 8) = v172;
      *(_QWORD *)&v188[0] = v82;
      *(_QWORD *)&v188[18] = 0;
      DWORD2(v188[18]) = v171;
      v83 = (uint64_t)v175;
      sub_100756CD8((uint64_t)v192, (uint64_t)v175);
      *(_QWORD *)(v83 + 48) = &type metadata for CRLBasicLayerAnimation.Def;
      v84 = sub_1004EB138();
      *(_QWORD *)(v83 + 56) = v84;
      v85 = swift_allocObject(v79, 316, 7);
      *(_QWORD *)(v83 + 24) = v85;
      sub_1004E91D4((uint64_t)v188, v85 + 16);
      *(_BYTE *)(v83 + 64) = 0;
      v86 = v180;
      v87 = v83 + *(int *)(v180 + 28);
      v88 = v77;
      v89 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v90 = v79;
      v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56);
      v91(v87, 1, 1, v89);
      v91(v83 + *(int *)(v86 + 32), 1, 1, v89);
      v92 = v82;
      sub_1004E9210((uint64_t)v188);
      sub_1004EA730(v185);
      v190 = v86;
      v191 = &off_101290348;
      v93 = sub_10050D1B0(&v189);
      sub_1004E90B0((uint64_t)v174, (uint64_t)v186);
      v94 = sub_1004B804C((uint64_t *)&unk_1013F0480);
      if (!swift_dynamicCast(v188, v186, v94, &type metadata for CRLBasicLayerAnimation.Def, 6))
        break;
      v187 = v188[0];
      memcpy(v185, v88, 0x114uLL);
      v95 = v181;
      sub_1004B8460(v83, v181, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v188[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v188[2] = v84;
      v96 = swift_allocObject(v90, 316, 7);
      *(_QWORD *)&v188[0] = v96;
      *(_OWORD *)(v96 + 16) = v187;
      *(_QWORD *)(v96 + 32) = 0;
      memcpy((void *)(v96 + 40), v185, 0x114uLL);
      v97 = v173;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v173);
      sub_1004DB728(v188, (uint64_t)v97);
      sub_1004B84E0(v95, (uint64_t)v93, type metadata accessor for CRLRepAnimation);
      sub_1004B84A4(v83, type metadata accessor for CRLRepAnimation);
      sub_1004BAB64((uint64_t)v192);
      v77 = v88;
      v79 = v90;
      if (v190)
      {
        sub_1004DB728(&v189, (uint64_t)v188);
        sub_1004DB728(v188, (uint64_t)v185);
        v98 = (_QWORD *)v193[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v193[0]) & 1) == 0)
        {
          v98 = sub_100D0FAB4(0, v98[2] + 1, 1, v98);
          v193[0] = (uint64_t)v98;
        }
        v100 = v98[2];
        v99 = v98[3];
        if (v100 >= v99 >> 1)
          v193[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v99 > 1), v100 + 1, 1, v98);
        v101 = *((_QWORD *)&v185[1] + 1);
        v102 = *(_QWORD *)&v185[2];
        v103 = sub_1004CB9AC((uint64_t)v185, *((uint64_t *)&v185[1] + 1));
        v104 = __chkstk_darwin(v103);
        v106 = (char *)v164 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v107 + 16))(v106, v104);
        sub_1005C46A8(v100, (uint64_t)v106, v193, v101, v102);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v185);
        v74 = v184;
        v77 = v88;
        v80 = v178;
        v81 = v179;
        v79 = v90;
      }
      else
      {
        sub_1004CB800((uint64_t)&v189, (uint64_t *)&unk_1013F0490);
        v74 = v184;
        v80 = v178;
        v81 = v179;
      }
      v76 = v80 + 24;
      v75 = v81 - 1;
      if (!v75)
      {
        swift_bridgeObjectRelease_n(v183, 2);
        goto LABEL_84;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease(v183);
    v95 = v181;
LABEL_84:
    v108 = v193[0];
    v109 = (_QWORD *)v168;
    *(_QWORD *)(v168 + 56) = &type metadata for CRLLayerAnimationGroup;
    v109[8] = &off_101271D70;
    v109[4] = v108;
    v109[5] = 0;
    v193[0] = (uint64_t)_swiftEmptyArrayStorage;
    v110 = *((_QWORD *)v74 + 2);
    if (!v110)
    {
      swift_bridgeObjectRelease(v74);
LABEL_100:
      v148 = (_QWORD *)v168;
      v149 = v193[0];
      *(_QWORD *)(v168 + 96) = &type metadata for CRLLayerAnimationGroup;
      v148[13] = &off_101271D70;
      v148[9] = v149;
      v148[10] = 0;
      v150 = v170;
      v151 = v165;
      v152 = v164[0];
      v153 = v166;
      v154 = v182;
      v155 = sub_10074E080((uint64_t)v182, v150, v151, v152, v153, v167);
      swift_bridgeObjectRelease(v154);
      v148[17] = &type metadata for CRLLayerAnimationGroup;
      v148[18] = &off_101271D70;
      v148[14] = v155;
      v148[15] = 0;
      v156 = sub_10060CD0C((uint64_t)v148, 0.0);
      v158 = v157;
      v159 = v156;
      swift_setDeallocating(v148);
      v160 = v148[2];
      v161 = sub_1004B804C((uint64_t *)&unk_1013F0490);
      swift_arrayDestroy(v148 + 4, v160, v161);
      swift_deallocClassInstance(v148, 32, 7);
      sub_10074EFF8(0, 1, 1, 0, 0, 0, 0, v158, v159);
      swift_bridgeObjectRelease(v158);

      return;
    }
    v111 = v74;
    v112 = (uint64_t)(v74 + 4);
    v113 = (char *)&v188[1] + 8;
    v114 = (_QWORD *)(v95 + 24);
    v173 = (_QWORD *)(v176 + 24);
    v174 = (void *)(v177 + 24);
    swift_bridgeObjectRetain(v111);
    *((_QWORD *)&v115 + 1) = 0x3FC999999999999ALL;
    v172 = xmmword_100EF6400;
    *(_QWORD *)&v115 = 131586;
    v171 = v115;
    v175 = (char *)&v188[1] + 8;
    v169 = (_QWORD *)(v95 + 24);
    while (1)
    {
      v178 = v112;
      v179 = v110;
      sub_100756CD8(v112, (uint64_t)v192);
      *(_QWORD *)&v185[0] = 0x3F00000000000000;
      LOBYTE(v185[16]) = 6;
      if (qword_1013DD408 != -1)
        swift_once(&qword_1013DD408, sub_1008D3CF4);
      v118 = (void *)qword_10147FD68;
      sub_10057E090((uint64_t *)v185, (uint64_t)v113);
      *(__int128 *)((char *)v188 + 8) = v172;
      *(_QWORD *)&v188[0] = v118;
      *(_QWORD *)&v188[18] = 0;
      DWORD2(v188[18]) = v171;
      v119 = v177;
      sub_100756CD8((uint64_t)v192, v177);
      *(_QWORD *)(v119 + 48) = &type metadata for CRLBasicLayerAnimation.Def;
      v183 = (double *)sub_1004EB138();
      *(_QWORD *)(v119 + 56) = v183;
      v120 = swift_allocObject(&unk_10127B5E0, 316, 7);
      *(_QWORD *)(v119 + 24) = v120;
      sub_1004E91D4((uint64_t)v188, v120 + 16);
      *(_BYTE *)(v119 + 64) = 0;
      v121 = v180;
      v122 = v119 + *(int *)(v180 + 28);
      v123 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56);
      v124(v122, 1, 1, v123);
      v124(v119 + *(int *)(v121 + 32), 1, 1, v123);
      v125 = v118;
      sub_1004E9210((uint64_t)v188);
      sub_1004EA730(v185);
      sub_1004E90B0((uint64_t)v174, (uint64_t)v186);
      v126 = sub_1004B804C((uint64_t *)&unk_1013F0480);
      if (!swift_dynamicCast(v188, v186, v126, &type metadata for CRLBasicLayerAnimation.Def, 6))
        break;
      v187 = v188[0];
      memcpy(v185, v113, 0x114uLL);
      v127 = v181;
      sub_1004B8460(v119, v181, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v188[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v188[2] = v183;
      v128 = swift_allocObject(&unk_10127B5E0, 316, 7);
      *(_QWORD *)&v188[0] = v128;
      *(_OWORD *)(v128 + 16) = v187;
      *(_QWORD *)(v128 + 32) = 0x3FC47AE147AE147BLL;
      memcpy((void *)(v128 + 40), v185, 0x114uLL);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v114);
      sub_1004DB728(v188, (uint64_t)v114);
      v129 = v176;
      sub_1004B84E0(v127, v176, type metadata accessor for CRLRepAnimation);
      sub_1004B84A4(v119, type metadata accessor for CRLRepAnimation);
      v130 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v131) = 0;
      LODWORD(v132) = 0;
      LODWORD(v133) = 0.5;
      LODWORD(v134) = 1.0;
      v135 = objc_msgSend(v130, "initWithControlPoints::::", v131, v132, v133, v134);
      v190 = v121;
      v191 = &off_101290348;
      v136 = sub_10050D1B0(&v189);
      sub_1004E90B0((uint64_t)v173, (uint64_t)v186);
      if ((swift_dynamicCast(v185, v186, v126, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
      {
        memset(v185, 0, 300);
        sub_1004CB800((uint64_t)v185, (uint64_t *)&unk_101406CB0);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 97, 0);
        goto LABEL_108;
      }
      memcpy(v188, v185, 0x12CuLL);
      objc_storeStrong((id *)v188, v135);
      sub_1004B8460(v129, v127, type metadata accessor for CRLRepAnimation);
      *((_QWORD *)&v185[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)&v185[2] = v183;
      *(_QWORD *)&v185[0] = swift_allocObject(&unk_10127B5E0, 316, 7);
      sub_1004E91D4((uint64_t)v188, *(_QWORD *)&v185[0] + 16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v114);
      sub_1004DB728(v185, (uint64_t)v114);
      sub_1004B84E0(v127, (uint64_t)v136, type metadata accessor for CRLRepAnimation);
      sub_1004E9210((uint64_t)v188);

      sub_1004B84A4(v129, type metadata accessor for CRLRepAnimation);
      sub_1004BAB64((uint64_t)v192);
      if (v190)
      {
        sub_1004DB728(&v189, (uint64_t)v188);
        sub_1004DB728(v188, (uint64_t)v185);
        v137 = (_QWORD *)v193[0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v193[0]);
        v113 = v175;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v137 = sub_100D0FAB4(0, v137[2] + 1, 1, v137);
          v193[0] = (uint64_t)v137;
        }
        v140 = v137[2];
        v139 = v137[3];
        if (v140 >= v139 >> 1)
          v193[0] = (uint64_t)sub_100D0FAB4((_QWORD *)(v139 > 1), v140 + 1, 1, v137);
        v141 = *((_QWORD *)&v185[1] + 1);
        v142 = *(_QWORD *)&v185[2];
        v143 = sub_1004CB9AC((uint64_t)v185, *((uint64_t *)&v185[1] + 1));
        v144 = __chkstk_darwin(v143);
        v146 = (char *)v164 - ((v145 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v147 + 16))(v146, v144);
        sub_1005C46A8(v140, (uint64_t)v146, v193, v141, v142);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v185);
        v117 = v178;
        v116 = v179;
        v114 = v169;
      }
      else
      {
        sub_1004CB800((uint64_t)&v189, (uint64_t *)&unk_1013F0490);
        v117 = v178;
        v116 = v179;
        v113 = v175;
      }
      v112 = v117 + 24;
      v110 = v116 - 1;
      if (!v110)
      {
        swift_bridgeObjectRelease_n(v184, 2);
        goto LABEL_100;
      }
    }
  }
  memset(v188, 0, 300);
  sub_1004CB800((uint64_t)v188, (uint64_t *)&unk_101406CB0);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 88, 0);
LABEL_108:
  __break(1u);
}

void sub_1007551D8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  _QWORD *v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t Strong;
  void *v33;
  id v34;
  void *v35;
  id v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  CGPoint v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double Width;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double Height;
  id v64;
  void *v65;
  void *v66;
  id v67;
  double v68;
  double v69;
  double v70;
  id v71;
  uint64_t ObjectType;
  char v73;
  char v74;
  double v75;
  id v76;
  void *v77;
  CGFloat v78;
  CGFloat v79;
  id v80;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  id v84;
  CGFloat v85;
  CGFloat v86;
  id v87;
  CGFloat v88;
  CGFloat v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  void *v117;
  unint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  double v124;
  double *v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  void *v142;
  char *v143;
  void *v144;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  id v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  CATransform3D v165;
  CATransform3D v166[2];
  CATransform3D v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  char v176;
  _OWORD v177[7];
  double v178;
  double v179;
  CATransform3D v180;
  _OWORD v181[7];
  double v182;
  double v183;
  CATransform3D v184;
  __int128 v185;
  double v186;
  double v187;
  double v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  double v196;
  double v197;
  double v198;
  double v199;
  _OWORD v200[8];
  CATransform3D v201;
  CATransform3D v202;
  CATransform3D v203;
  CATransform3D v204;
  CATransform3D v205;
  CATransform3D v206;
  uint64_t v207;
  CGPoint v208;

  v141 = a5;
  v142 = a3;
  v144 = a2;
  v159 = type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v159);
  v158 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v143 = (char *)&v123 - v12;
  __chkstk_darwin(v13);
  v140 = (uint64_t *)((char *)&v123 - v14);
  __chkstk_darwin(v15);
  v139 = (uint64_t)&v123 - v16;
  __chkstk_darwin(v17);
  v138 = (uint64_t)&v123 - v18;
  __chkstk_darwin(v19);
  v157 = (uint64_t)&v123 - v20;
  v21 = sub_10060CD0C((uint64_t)_swiftEmptyArrayStorage, 0.0);
  v161 = v22;
  v23 = v21;
  v24 = (uint64_t)sub_1004B9E5C();
  v25 = v24;
  if ((unint64_t)v24 >> 62)
  {
    if (v24 >= 0)
      v24 &= 0xFFFFFFFFFFFFFF8uLL;
    v26 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (v26)
      goto LABEL_3;
LABEL_50:
    swift_bridgeObjectRelease(v25);
LABEL_51:
    *((_QWORD *)a6 + 3) = &type metadata for CRLLayerAnimationGroup;
    *((_QWORD *)a6 + 4) = &off_101271D70;
    *(_QWORD *)a6 = v161;
    a6[1] = v23;
    return;
  }
  v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v26)
    goto LABEL_50;
LABEL_3:
  if (v26 >= 1)
  {
    v124 = v23;
    v125 = a6;
    v126 = v6;
    v27 = 0;
    v164 = v25 & 0xC000000000000001;
    v28 = v142;
    v137 = v143 + 40;
    v29 = v144;
    v136 = a4;
    v162 = a1;
    v163 = v25;
    v207 = v26;
    while (1)
    {
      if (v164)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
      else
        v30 = *(id *)(v25 + 8 * v27 + 32);
      v31 = v30;
      Strong = swift_unknownObjectWeakLoadStrong(a1);
      if (Strong)
      {
        v33 = (void *)Strong;
        v34 = objc_msgSend(v29, "renderableForRep:", Strong);
        if (v34)
        {
          v35 = v34;
          v36 = objc_msgSend(v34, "layer");

          if (v36)
          {
            objc_msgSend(v28, "headLineEndPoint");
            objc_msgSend(v28, "convertNaturalPointToUnscaledCanvas:");
            objc_msgSend(v33, "convertNaturalPointFromUnscaledCanvas:");
            v38 = v37;
            v40 = v39;
            objc_msgSend(v33, "transformToConvertNaturalToLayerRelative");
            v208.x = v38;
            v208.y = v40;
            v41 = CGPointApplyAffineTransform(v208, (CGAffineTransform *)&v167);
            objc_msgSend(v36, "bounds");
            v43 = v42;
            v45 = v44;
            objc_msgSend(v36, "bounds");
            if (v46 > 0.001)
              v47 = v46;
            else
              v47 = 0.001;
            objc_msgSend(v36, "bounds");
            if (v48 <= 0.001)
              v48 = 0.001;
            v49 = v43;
            v50 = v45;
            v51 = v47;
            Width = CGRectGetWidth(*(CGRect *)(&v48 - 3));
            objc_msgSend(v36, "bounds");
            v54 = v53;
            v56 = v55;
            objc_msgSend(v36, "bounds");
            if (v57 > 0.001)
              v58 = v57;
            else
              v58 = 0.001;
            objc_msgSend(v36, "bounds");
            if (v59 <= 0.001)
              v59 = 0.001;
            v60 = v54;
            v61 = v56;
            v62 = v58;
            Height = CGRectGetHeight(*(CGRect *)(&v59 - 3));
            v64 = objc_msgSend(v29, "renderableForRep:", a4);
            if (v64)
            {
              v65 = v64;
              v160 = v31;
              v66 = a4;
              v67 = objc_msgSend(v64, "layer");

              if (v67)
              {
                objc_msgSend(v28, "tailLineEndPoint");
                v68 = sub_100757194(v66, v67, v28);
                v70 = v69;
                v71 = objc_msgSend(v33, "info");
                ObjectType = swift_getObjectType(v71);
                sub_100755FC4(v141, ObjectType);
                v74 = v73;
                swift_unknownObjectRelease(v71);
                v155 = v67;
                if ((v74 & 1) != 0)
                {
                  *(double *)&v135 = v41.x / Width;
                  v75 = v41.y / Height;
                  v76 = v36;
                  CATransform3DMakeScale(&v167, 0.95, 0.95, 1.0);
                  v204 = v167;
                  v77 = v160;
                  sub_1008FCCF0(&v204.m11, v36, v160, 0, v177, v41.x / Width, v41.y / Height);
                  v156 = v177[0];
                  v153 = v177[2];
                  v154 = v177[1];
                  v151 = v177[4];
                  v152 = v177[3];
                  v149 = v177[6];
                  v150 = v177[5];
                  v78 = v178;
                  v79 = v179;

                  v80 = v67;
                  CATransform3DMakeScale(&v167, 0.95, 0.95, 1.0);
                  v203 = v167;
                  sub_1008FCCF0(&v203.m11, v67, v77, 0, &v180, v68, v70);

                  *(_OWORD *)&v167.m11 = v156;
                  *(_OWORD *)&v167.m13 = v154;
                  *(_OWORD *)&v167.m21 = v153;
                  *(_OWORD *)&v167.m23 = v152;
                  *(_OWORD *)&v167.m31 = v151;
                  *(_OWORD *)&v167.m33 = v150;
                  *(_OWORD *)&v167.m41 = v149;
                  v167.m43 = v78;
                  v167.m44 = v79;
                  v166[0] = v180;
                  CATransform3DConcat(&v165, &v167, v166);
                  *(CGFloat *)&v134 = v165.m11;
                  m13 = v165.m13;
                  *(CGFloat *)&v133 = v165.m12;
                  m14 = v165.m14;
                  m21 = v165.m21;
                  *(CGFloat *)&v156 = v165.m22;
                  *(CGFloat *)&v154 = v165.m23;
                  *(CGFloat *)&v153 = v165.m24;
                  *(CGFloat *)&v152 = v165.m31;
                  *(CGFloat *)&v151 = v165.m32;
                  *(CGFloat *)&v150 = v165.m33;
                  m41 = v165.m41;
                  *(CGFloat *)&v149 = v165.m34;
                  m43 = v165.m43;
                  m42 = v165.m42;
                  m44 = v165.m44;
                  v84 = v76;
                  CATransform3DMakeScale(&v167, 0.95, 0.95, 1.0);
                  v202 = v167;
                  sub_1008FCCF0(&v202.m11, v36, v77, 0, v181, *(double *)&v135, v75);
                  v135 = v181[0];
                  v131 = v181[2];
                  v132 = v181[1];
                  v129 = v181[4];
                  v130 = v181[3];
                  v127 = v181[6];
                  v128 = v181[5];
                  v85 = v182;
                  v86 = v183;

                  v87 = v80;
                  CATransform3DMakeScale(&v167, 1.0, 1.0, 1.0);
                  v201 = v167;
                  sub_1008FCCF0(&v201.m11, v67, v77, 0, &v184, v68, v70);

                  *(_OWORD *)&v167.m11 = v135;
                  *(_OWORD *)&v167.m13 = v132;
                  *(_OWORD *)&v167.m21 = v131;
                  *(_OWORD *)&v167.m23 = v130;
                  *(_OWORD *)&v167.m31 = v129;
                  *(_OWORD *)&v167.m33 = v128;
                  *(_OWORD *)&v167.m41 = v127;
                  v167.m43 = v85;
                  v88 = *(double *)&v134;
                  v167.m44 = v86;
                  v89 = *(double *)&v133;
                  v166[0] = v184;
                  CATransform3DConcat(&v165, &v167, v166);
                  v90 = *(_OWORD *)&v165.m11;
                  v91 = *(_OWORD *)&v165.m13;
                  v92 = *(_OWORD *)&v165.m21;
                  v93 = *(_OWORD *)&v165.m23;
                  v94 = *(_OWORD *)&v165.m31;
                  v95 = *(_OWORD *)&v165.m33;
                  v96 = *(_OWORD *)&v165.m41;
                  v97 = *(_OWORD *)&v165.m43;
                }
                else
                {
                  v98 = v67;
                  CATransform3DMakeScale(&v167, 0.95, 0.95, 1.0);
                  v206 = v167;
                  v77 = v160;
                  sub_1008FCCF0(&v206.m11, v67, v160, 0, &v185, v68, v70);
                  v89 = *((double *)&v185 + 1);
                  v88 = *(double *)&v185;
                  m13 = v186;
                  m14 = v187;
                  m21 = v188;
                  *(_QWORD *)&v156 = v189;
                  *(_QWORD *)&v154 = v190;
                  *(_QWORD *)&v153 = v191;
                  *(_QWORD *)&v152 = v192;
                  *(_QWORD *)&v151 = v193;
                  *(_QWORD *)&v150 = v194;
                  m41 = v196;
                  *(_QWORD *)&v149 = v195;
                  m43 = v198;
                  m42 = v197;
                  m44 = v199;

                  v99 = v98;
                  CATransform3DMakeScale(&v167, 1.0, 1.0, 1.0);
                  v205 = v167;
                  sub_1008FCCF0(&v205.m11, v67, v77, 0, v200, v68, v70);
                  v134 = v200[1];
                  v135 = v200[0];
                  v132 = v200[3];
                  v133 = v200[2];
                  v130 = v200[5];
                  v131 = v200[4];
                  v128 = v200[7];
                  v129 = v200[6];

                  v97 = v128;
                  v96 = v129;
                  v95 = v130;
                  v94 = v131;
                  v93 = v132;
                  v92 = v133;
                  v91 = v134;
                  v90 = v135;
                }
                v167.m11 = v88;
                v167.m12 = v89;
                v167.m13 = m13;
                v167.m14 = m14;
                v167.m21 = m21;
                *(_QWORD *)&v167.m22 = v156;
                *(_QWORD *)&v167.m23 = v154;
                *(_QWORD *)&v167.m24 = v153;
                *(_QWORD *)&v167.m31 = v152;
                *(_QWORD *)&v167.m32 = v151;
                *(_QWORD *)&v167.m33 = v150;
                *(_QWORD *)&v167.m34 = v149;
                v167.m41 = m41;
                v167.m42 = m42;
                v167.m43 = m43;
                v167.m44 = m44;
                v168 = v90;
                v169 = v91;
                v170 = v92;
                v171 = v93;
                v172 = v94;
                v173 = v95;
                v174 = v96;
                v175 = v97;
                v176 = 52;
                if (qword_1013DD410 != -1)
                  swift_once(&qword_1013DD410, sub_1008D3D08);
                v100 = qword_10147FD70;
                if (qword_1013DD418 != -1)
                  swift_once(&qword_1013DD418, sub_1008D3D18);
                v101 = qword_10147FD78;
                if (qword_1013DD420 != -1)
                  swift_once(&qword_1013DD420, sub_1008D3D24);
                *(_QWORD *)&v156 = v36;
                v160 = v33;
                v102 = qword_10147FD80;
                if (qword_1013DD428 != -1)
                  swift_once(&qword_1013DD428, sub_1008D3D34);
                v103 = qword_10147FD88;
                sub_10057E090((uint64_t *)&v167, (uint64_t)v166);
                v104 = (int *)v159;
                v105 = (uint64_t)v143;
                v106 = v77;
                UUID.init()(v106);
                v107 = v105 + v104[6];
                swift_unknownObjectWeakInit(v107);
                v108 = v105 + v104[7];
                v109 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
                v110 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56);
                v110(v108, 1, 1, v109);
                v110(v105 + v104[8], 1, 1, v109);
                swift_unknownObjectWeakAssign(v107, v106);
                v111 = v106;

                sub_1004E9198(v166, v137);
                *(_QWORD *)(v105 + 32) = 0;
                *(_QWORD *)v105 = v100;
                *(_QWORD *)(v105 + 8) = v101;
                *(_QWORD *)(v105 + 16) = v102;
                *(_QWORD *)(v105 + 24) = v103;
                *(_QWORD *)(v105 + 304) = 0;
                *(_DWORD *)(v105 + 312) = 131586;
                sub_1004EA730(&v167);
                v112 = v140;
                sub_1004B8460(v105, (uint64_t)v140, type metadata accessor for CRLSpringLayerAnimation);
                *v112 = 0x4038000000000000;
                sub_1004B84A4(v105, type metadata accessor for CRLSpringLayerAnimation);
                v113 = v139;
                sub_1004B8460((uint64_t)v112, v139, type metadata accessor for CRLSpringLayerAnimation);
                *(_QWORD *)(v113 + 8) = 0;
                sub_1004B84A4((uint64_t)v112, type metadata accessor for CRLSpringLayerAnimation);
                v114 = v138;
                sub_1004B8460(v113, v138, type metadata accessor for CRLSpringLayerAnimation);
                *(_QWORD *)(v114 + 16) = 0x3FF0000000000000;
                sub_1004B84A4(v113, type metadata accessor for CRLSpringLayerAnimation);
                v115 = v157;
                sub_1004B8460(v114, v157, type metadata accessor for CRLSpringLayerAnimation);
                *(_QWORD *)(v115 + 24) = 0x4074000000000000;
                sub_1004B84A4(v114, type metadata accessor for CRLSpringLayerAnimation);
                sub_1004B8460(v115, v158, type metadata accessor for CRLSpringLayerAnimation);
                v116 = v161;
                if ((swift_isUniquelyReferenced_nonNull_native(v161) & 1) == 0)
                  v116 = sub_100D0FAB4(0, v116[2] + 1, 1, v116);
                v117 = v136;
                v28 = v142;
                v119 = v116[2];
                v118 = v116[3];
                if (v119 >= v118 >> 1)
                  v161 = sub_100D0FAB4((_QWORD *)(v118 > 1), v119 + 1, 1, v116);
                else
                  v161 = v116;
                *(_QWORD *)&v167.m14 = v159;
                *(_QWORD *)&v167.m21 = &off_1012A12B8;
                v120 = sub_10050D1B0(&v167);
                v121 = v158;
                sub_1004B8460(v158, (uint64_t)v120, type metadata accessor for CRLSpringLayerAnimation);
                v122 = v161;
                v161[2] = v119 + 1;
                sub_1004DB728((__int128 *)&v167, (uint64_t)&v122[5 * v119 + 4]);
                sub_1004B84A4(v121, type metadata accessor for CRLSpringLayerAnimation);

                sub_1004B84A4(v157, type metadata accessor for CRLSpringLayerAnimation);
                v29 = v144;
                a1 = v162;
                v25 = v163;
                a4 = v117;
              }
              else
              {

                a1 = v162;
                v25 = v163;
                a4 = v66;
              }
              goto LABEL_6;
            }

          }
          a1 = v162;
          v25 = v163;
        }
        else
        {

          v25 = v163;
        }
      }
      else
      {

      }
LABEL_6:
      if (v207 == ++v27)
      {
        swift_bridgeObjectRelease(v25);
        a6 = v125;
        v23 = v124;
        goto LABEL_51;
      }
    }
  }
  __break(1u);
}

void sub_100755FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  __objc2_prot *v19;

  if (v2 == a1)
    return;
  v19 = &OBJC_PROTOCOL___CRLContainerInfo;
  v4 = (void *)swift_dynamicCastObjCProtocolConditional(a1, 1, &v19);
  if (v4)
  {
    v5 = objc_msgSend(v4, "childInfos");
    v6 = sub_1004B804C(&qword_1013E0670);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if (!((unint64_t)v7 >> 62))
      goto LABEL_4;
LABEL_12:
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (v8)
      goto LABEL_5;
LABEL_26:
    swift_bridgeObjectRelease(v7);
    return;
  }
  v7 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_12;
LABEL_4:
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_26;
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_29:
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_8:
    v11 = sub_100755FC4(v9, a2, v10);
    swift_unknownObjectRelease(v9);
    if ((v11 & 1) == 0)
    {
      v13 = 0;
      v14 = v8 - 1;
      while (1)
      {
        v8 = v14 != v13;
        if (v14 == v13)
          break;
        v15 = v13 + 1;
        if ((v7 & 0xC000000000000001) != 0)
        {
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13 + 1, v7);
          if (__OFADD__(v15, 1))
            goto LABEL_27;
        }
        else
        {
          if (v15 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_28;
          v16 = *(_QWORD *)(v7 + 8 * v13 + 40);
          v17 = swift_unknownObjectRetain(v16);
          if (__OFADD__(v15, 1))
          {
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        v18 = sub_100755FC4(v16, a2, v17);
        swift_unknownObjectRelease(v16);
        ++v13;
        if ((v18 & 1) != 0)
          goto LABEL_26;
      }
    }
    goto LABEL_26;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(_QWORD *)(v7 + 32);
    v10 = swift_unknownObjectRetain(v9);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10075625C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  _QWORD *v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  _QWORD *v70;
  unint64_t v71;
  __int128 v72;
  _QWORD *v73;
  id v74;
  id v75;
  char *v76;
  __int128 v77;
  _QWORD *v78;
  id v79;
  id v80;
  uint64_t v81;
  __int128 v82;
  _QWORD v83[2];
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  __int128 v89;
  double v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  char v95;
  _BYTE v96[24];
  _BYTE v97[32];

  v6 = type metadata accessor for CRLRepAnimation(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v18 = (char *)&v70 - v17;
  v19 = objc_msgSend(a1, "connectionLineInfo", v16);
  if (!v19)
    return;
  v80 = v19;
  v20 = objc_msgSend(a2, "repForInfo:");
  if (!v20)
  {
    v69 = v80;
LABEL_22:

    return;
  }
  v79 = v20;
  v21 = objc_msgSend(a2, "repForInfo:", a3);
  if (!v21)
  {

    goto LABEL_21;
  }
  v22 = v21;
  v23 = objc_msgSend(a2, "renderableForRep:", v21);
  if (!v23
    || (v24 = v23,
        v76 = v11,
        v25 = objc_msgSend(v23, "layer"),
        v24,
        !v25))
  {

LABEL_21:
    v69 = v79;
    goto LABEL_22;
  }
  swift_unknownObjectWeakInit(&v81);
  swift_unknownObjectWeakInit(&v82);
  swift_unknownObjectWeakAssign(&v81, v79);
  swift_unknownObjectWeakAssign(&v82, a2);
  *((_QWORD *)&v82 + 1) = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
  sub_1007574C8((uint64_t)&v81, (uint64_t)v97);
  swift_unknownObjectWeakInit(&v81);
  swift_unknownObjectWeakInit(&v82);
  swift_unknownObjectWeakAssign(&v81, v22);
  swift_unknownObjectWeakAssign(&v82, a2);
  *((_QWORD *)&v82 + 1) = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
  sub_1007574C8((uint64_t)&v81, (uint64_t)v96);
  objc_msgSend(a1, "headLineEndPoint");
  v74 = v25;
  v75 = v22;
  v26 = sub_100757194(v22, v25, a1);
  v28 = v27;
  v29 = sub_1004B804C((uint64_t *)&unk_1013F0470);
  v30 = swift_allocObject(v29, 152, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5550;
  v78 = (_QWORD *)(v30 + 32);
  *(_QWORD *)&v89 = 0x3F8000003F000000;
  v95 = 6;
  if (qword_1013DD408 != -1)
    swift_once(&qword_1013DD408, sub_1008D3CF4);
  v31 = (void *)qword_10147FD68;
  v73 = v83;
  sub_10057E090((uint64_t *)&v89, (uint64_t)v83);
  *((_QWORD *)&v32 + 1) = 0x3FC999999999999ALL;
  v72 = xmmword_100EF6400;
  v82 = xmmword_100EF6400;
  v81 = (uint64_t)v31;
  v85 = 0;
  *(_QWORD *)&v32 = 131586;
  v77 = v32;
  v86 = 131586;
  sub_100756CD8((uint64_t)v96, (uint64_t)v14);
  *((_QWORD *)v14 + 6) = &type metadata for CRLBasicLayerAnimation.Def;
  v71 = sub_1004EB138();
  *((_QWORD *)v14 + 7) = v71;
  v33 = swift_allocObject(&unk_10127B5E0, 316, 7);
  *((_QWORD *)v14 + 3) = v33;
  sub_1004E91D4((uint64_t)&v81, v33 + 16);
  v14[64] = 0;
  v34 = &v14[*(int *)(v6 + 28)];
  v35 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v36(v34, 1, 1, v35);
  v36(&v14[*(int *)(v6 + 32)], 1, 1, v35);
  v37 = v31;
  sub_1004E9210((uint64_t)&v81);
  sub_1004EA730(&v89);
  sub_100A16174((uint64_t)v18, 0.05);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLRepAnimation);
  v38 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v39) = 0;
  LODWORD(v40) = 0;
  LODWORD(v41) = 0.5;
  LODWORD(v42) = 1.0;
  v43 = objc_msgSend(v38, "initWithControlPoints::::", v39, v40, v41, v42);
  *(_QWORD *)(v30 + 56) = v6;
  *(_QWORD *)(v30 + 64) = &off_101290348;
  v44 = sub_10050D1B0(v78);
  sub_100A162E4(v43, (uint64_t)v44);

  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLRepAnimation);
  v70 = (_QWORD *)(v30 + 72);
  *(_QWORD *)&v89 = 0x3F8000003F000000;
  v95 = 6;
  v45 = (void *)qword_10147FD68;
  sub_10057E090((uint64_t *)&v89, (uint64_t)v73);
  v82 = v72;
  v81 = (uint64_t)v45;
  v85 = 0;
  v86 = v77;
  sub_100756CD8((uint64_t)v97, (uint64_t)v14);
  v46 = v71;
  *((_QWORD *)v14 + 6) = &type metadata for CRLBasicLayerAnimation.Def;
  *((_QWORD *)v14 + 7) = v46;
  v47 = swift_allocObject(&unk_10127B5E0, 316, 7);
  *((_QWORD *)v14 + 3) = v47;
  sub_1004E91D4((uint64_t)&v81, v47 + 16);
  v14[64] = 0;
  v36(&v14[*(int *)(v6 + 28)], 1, 1, v35);
  v36(&v14[*(int *)(v6 + 32)], 1, 1, v35);
  v48 = v45;
  sub_1004E9210((uint64_t)&v81);
  sub_1004EA730(&v89);
  sub_100A16174((uint64_t)v18, 0.05);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLRepAnimation);
  v49 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v50) = 0;
  LODWORD(v51) = 0;
  LODWORD(v52) = 0.5;
  LODWORD(v53) = 1.0;
  v54 = objc_msgSend(v49, "initWithControlPoints::::", v50, v51, v52, v53);
  *(_QWORD *)(v30 + 96) = v6;
  *(_QWORD *)(v30 + 104) = &off_101290348;
  v55 = sub_10050D1B0(v70);
  sub_100A162E4(v54, (uint64_t)v55);

  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLRepAnimation);
  v89 = xmmword_100F08680;
  v90 = v26;
  v91 = v28;
  v92 = 0;
  v93 = 0;
  v94 = 2;
  v95 = 58;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v56 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v73 = (_QWORD *)(v30 + 112);
  v57 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v58 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v59 = qword_10147FD88;
  sub_10057E090((uint64_t *)&v89, (uint64_t)&v84);
  v81 = v56;
  *(_QWORD *)&v82 = v57;
  *((_QWORD *)&v82 + 1) = v58;
  v83[0] = v59;
  v83[1] = 0;
  v87 = 0;
  v88 = v77;
  sub_100756CD8((uint64_t)v96, (uint64_t)v8);
  *((_QWORD *)v8 + 6) = &type metadata for CRLSpringLayerAnimation.Def;
  *((_QWORD *)v8 + 7) = sub_100553914();
  v60 = swift_allocObject(&unk_10127B658, 332, 7);
  *((_QWORD *)v8 + 3) = v60;
  sub_100720EB4((uint64_t)&v81, v60 + 16);
  v8[64] = 0;
  v36(&v8[*(int *)(v6 + 28)], 1, 1, v35);
  v36(&v8[*(int *)(v6 + 32)], 1, 1, v35);
  sub_100635C68((uint64_t)&v81);
  sub_1004EA730(&v89);
  v61 = (uint64_t)v76;
  sub_100A164A8((uint64_t)v76, 24.0);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLRepAnimation);
  sub_100A16610((uint64_t)v14, 0.0);
  sub_1004B84A4(v61, type metadata accessor for CRLRepAnimation);
  sub_100A1677C((uint64_t)v18, 1.0);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLRepAnimation);
  *(_QWORD *)(v30 + 136) = v6;
  *(_QWORD *)(v30 + 144) = &off_101290348;
  v62 = sub_10050D1B0(v73);
  sub_100A168F4((uint64_t)v62, 320.0);
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLRepAnimation);
  v63 = sub_10060CD0C(v30, 0.0);
  v65 = v64;
  v66 = v63;
  swift_setDeallocating(v30);
  v67 = *(_QWORD *)(v30 + 16);
  v68 = sub_1004B804C((uint64_t *)&unk_1013F0490);
  swift_arrayDestroy(v78, v67, v68);
  swift_deallocClassInstance(v30, 32, 7);
  sub_10074EFF8(0, 1, 1, 0, 0, 0, 0, v65, v66);
  swift_bridgeObjectRelease(v65);

  sub_1004BAB64((uint64_t)v96);
  sub_1004BAB64((uint64_t)v97);
}

id sub_100756C88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLInsertionAnimationHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLInsertionAnimationHelper()
{
  return objc_opt_self(_TtC8Freeform27CRLInsertionAnimationHelper);
}

uint64_t sub_100756CD8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLRepAnimator(a2, a1, (uint64_t)&type metadata for CRLRepAnimator);
  return a2;
}

uint64_t sub_100756D14()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = (void *)*v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v1);
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

void sub_100756E18(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD v17[5];
  _QWORD *v18;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v9 + 32) = a1;
  v17[0] = v9;
  specialized Array._endMutation()(v9);
  v10 = v17[0];
  v11 = objc_msgSend(a3, "canvas", swift_unknownObjectRetain(a1).n128_f64[0]);
  v12 = (_QWORD *)swift_allocObject(&unk_10127B838, 48, 7);
  v12[2] = v17[0];
  v12[3] = a3;
  v12[4] = a2;
  v12[5] = a4;
  v17[4] = sub_100757DD8;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = *(_QWORD *)"";
  v17[2] = sub_1005D2FC0;
  v17[3] = &unk_10127B850;
  v13 = _Block_copy(v17);
  v14 = v18;
  swift_bridgeObjectRetain(v10);
  v15 = a3;
  v16 = a2;
  objc_msgSend(v11, "afterLayoutIncludingLayers:performBlock:", 1, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  swift_bridgeObjectRelease(v10);

}

_QWORD *sub_100756F5C(uint64_t a1, double a2)
{
  _QWORD *result;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, double);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;

  result = _swiftEmptyArrayStorage;
  v28 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    v6 = (_QWORD *)(a1 + 72);
    do
    {
      v7 = *v6;
      v22 = *((_OWORD *)v6 - 1);
      v8 = v22;
      sub_1004BB5A4(v6 - 5, v22);
      v9 = *(void (**)(uint64_t, uint64_t, double))(v7 + 16);
      v24 = v22;
      v25 = v7;
      sub_10050D1B0(&v23);
      v9(v8, v7, a2);
      v22 = v24;
      v10 = v24;
      v11 = sub_1004BB5A4(&v23, v24);
      v27 = v22;
      v12 = sub_10050D1B0(&v26);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v12, v11, v10);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v23);
      if ((_QWORD)v27)
      {
        sub_1004DB728(&v26, (uint64_t)&v23);
        sub_1004DB728(&v23, (uint64_t)&v26);
        v13 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        {
          v13 = sub_100D101C4(0, v13[2] + 1, 1, v13);
          v28 = v13;
        }
        v15 = v13[2];
        v14 = v13[3];
        if (v15 >= v14 >> 1)
          v28 = sub_100D101C4((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
        v16 = v27;
        v17 = sub_1004CB9AC((uint64_t)&v26, v27);
        __chkstk_darwin(v17);
        v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_1005C46A8(v15, (uint64_t)v19, (uint64_t *)&v28, v16, *((uint64_t *)&v16 + 1));
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v26);
      }
      else
      {
        sub_1004CB800((uint64_t)&v26, &qword_1013EA650);
      }
      v6 += 6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return v28;
  }
  return result;
}

double sub_100757194(void *a1, void *a2, id a3)
{
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double Width;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  CGAffineTransform v32;
  CGPoint v33;

  objc_msgSend(a3, "convertNaturalPointToUnscaledCanvas:");
  objc_msgSend(a1, "convertNaturalPointFromUnscaledCanvas:");
  v6 = v5;
  v8 = v7;
  objc_msgSend(a1, "transformToConvertNaturalToLayerRelative");
  v33.x = v6;
  v33.y = v8;
  *(_QWORD *)&v9 = *(_OWORD *)&CGPointApplyAffineTransform(v33, &v32);
  objc_msgSend(a2, "bounds");
  v11 = v10;
  v13 = v12;
  objc_msgSend(a2, "bounds");
  if (v14 > 0.001)
    v15 = v14;
  else
    v15 = 0.001;
  objc_msgSend(a2, "bounds");
  if (v16 <= 0.001)
    v16 = 0.001;
  v17 = v11;
  v18 = v13;
  v19 = v15;
  Width = CGRectGetWidth(*(CGRect *)(&v16 - 3));
  objc_msgSend(a2, "bounds");
  v22 = v21;
  v24 = v23;
  objc_msgSend(a2, "bounds");
  if (v25 > 0.001)
    v26 = v25;
  else
    v26 = 0.001;
  objc_msgSend(a2, "bounds");
  if (v27 <= 0.001)
    v27 = 0.001;
  v28 = v22;
  v29 = v24;
  v30 = v26;
  CGRectGetHeight(*(CGRect *)(&v27 - 3));
  return v9 / Width;
}

void sub_1007572F4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _QWORD *v25;

  v19 = a3;
  v20 = a4;
  v5 = *(_QWORD *)(a1 + 16);
  v25 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v7 = a1 + 32;
    v18 = a1;
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_100751114(v7, a2, v19, &v21);
      if (v4)
      {
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v25);
        return;
      }
      if (v22)
      {
        sub_1004DB728(&v21, (uint64_t)v24);
        sub_1004DB728(v24, (uint64_t)&v21);
        v8 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        {
          v8 = sub_100D0FAB4(0, v8[2] + 1, 1, v8);
          v25 = v8;
        }
        v10 = v8[2];
        v9 = v8[3];
        if (v10 >= v9 >> 1)
          v25 = sub_100D0FAB4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
        v12 = v22;
        v11 = v23;
        v13 = sub_1004CB9AC((uint64_t)&v21, v22);
        __chkstk_darwin(v13);
        v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v16 + 16))(v15);
        sub_1005C46A8(v10, (uint64_t)v15, (uint64_t *)&v25, v12, v11);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v21);
      }
      else
      {
        sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013F0490);
      }
      v7 += 24;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v18);
  }
}

uint64_t sub_1007574C8(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLRepAnimator(a2, a1, (uint64_t)&type metadata for CRLRepAnimator);
  return a2;
}

void sub_100757504(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  double *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  double *v30;

  v24 = a5;
  v25 = a6;
  v22 = a3;
  v23 = a4;
  v30 = _swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v9 = a1 + 32;
    v21 = a1;
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_1007551D8(v9, a2, v22, v23, v24, (double *)&v26);
      if (v6)
      {
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v30);
        return;
      }
      if (v27)
      {
        sub_1004DB728(&v26, (uint64_t)v29);
        sub_1004DB728(v29, (uint64_t)&v26);
        v10 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
        {
          v10 = (double *)sub_100D0FAB4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
          v30 = v10;
        }
        v12 = *((_QWORD *)v10 + 2);
        v11 = *((_QWORD *)v10 + 3);
        if (v12 >= v11 >> 1)
          v30 = (double *)sub_100D0FAB4((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v14 = v27;
        v13 = v28;
        v15 = sub_1004CB9AC((uint64_t)&v26, v27);
        v16 = __chkstk_darwin(v15);
        v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
        sub_1005C46A8(v12, (uint64_t)v18, (uint64_t *)&v30, v14, v13);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v26);
      }
      else
      {
        sub_1004CB800((uint64_t)&v26, (uint64_t *)&unk_1013F0490);
      }
      v9 += 24;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(v21);
  }
}

double *sub_1007576E0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  uint64_t j;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  double *v31;

  v3 = a1;
  v31 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_34;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v24 = v3;
      v5 = 0;
      v27 = v3 & 0xFFFFFFFFFFFFFF8;
      v28 = v3 & 0xC000000000000001;
      v6 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      v25 = v6;
      v26 = v3 + 32;
      v7 = (unint64_t)a2 >> 62;
      while (v28)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v24);
LABEL_12:
        v11 = v10;
        if (__OFADD__(v5++, 1))
          goto LABEL_32;
        if (v7)
        {
          swift_bridgeObjectRetain(a2);
          v3 = _CocoaArrayWrapper.endIndex.getter(v25);
        }
        else
        {
          v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(a2);
        }
        v13 = type metadata accessor for CRLBoardItem(0);
        v14 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
        v30 = Set.init(minimumCapacity:)(v3, v13, v14);
        if (v7)
        {
          swift_bridgeObjectRetain(a2);
          v15 = _CocoaArrayWrapper.endIndex.getter(v25);
          swift_bridgeObjectRelease(a2);
          if (!v15)
            goto LABEL_26;
        }
        else
        {
          v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v15)
            goto LABEL_26;
        }
        if (v15 < 1)
          goto LABEL_33;
        if ((a2 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v15; ++i)
          {
            v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
            sub_100AD7814((Swift::Int *)&v29, v17);

          }
        }
        else
        {
          for (j = 0; j != v15; ++j)
          {
            v19 = *(void **)(a2 + 8 * j + 32);
            sub_100AD7814((Swift::Int *)&v29, v19);

          }
        }
LABEL_26:
        swift_bridgeObjectRelease(a2);
        v3 = v30;
        v20 = sub_100622190(v11, v30);
        swift_bridgeObjectRelease(v3);
        if ((v20 & 1) != 0)
        {

        }
        else
        {
          v3 = (uint64_t)&v31;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
          v8 = *((_QWORD *)v31 + 2);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
          v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
          specialized ContiguousArray._endMutation()(v9);
        }
        if (v5 == v4)
          return v31;
      }
      if (v5 < *(_QWORD *)(v27 + 16))
        break;
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      if (v3 < 0)
        v23 = v3;
      else
        v23 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v23);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v10 = *(id *)(v26 + 8 * v5);
    goto LABEL_12;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100757970()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  if (v0[4])
    swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  if (v0[8])
    swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1007579C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_10140E5E4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CF80C;
  return sub_100D0E8B8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100757A64()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  if (v0[4])
    swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  if (v0[10])
    swift_release(v0[11]);
  swift_bridgeObjectRelease(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100757AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v12 = v9[3];
  v20 = v9[2];
  v13 = v9[4];
  v14 = v9[5];
  v15 = v9[6];
  v16 = v9[7];
  v17 = v9[8];
  v18 = (_QWORD *)swift_task_alloc(dword_10140E5D4);
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_1004CFD00;
  return sub_100D0DDF0(a1, v20, v12, v13, v14, v15, v16, v17, a9);
}

uint64_t sub_100757B80()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = (void *)*v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v1);
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100757C7C()
{
  id *v0;

  return swift_deallocObject(v0, 64, 7);
}

void sub_100757CC0()
{
  uint64_t v0;

  sub_100753EC0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100757CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100757CE0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100757CEC()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100757D20()
{
  uint64_t v0;

  sub_10075625C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100757D2C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100757D50()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100757D8C()
{
  uint64_t v0;

  sub_100751518(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100757DA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_100757E04(const mach_header_64 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unsigned int v42;
  _BYTE v45[232];
  _BYTE v46[24];
  id v47;

  v42 = objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "_atomicIncrementAssertCount");
  v47 = objc_msgSend(objc_allocWithZone((Class)NSString), "init");
  sub_1007580D4(a12, &v47, (uint64_t)a9, a10, a11);
  StaticString.description.getter(a2, a3, a4);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  StaticString.description.getter(a5, a6, a7);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v23, "lastPathComponent", swift_bridgeObjectRelease(v22).n128_f64[0]);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  if (qword_1013DD6C0 != -1)
    swift_once(&qword_1013DD6C0, sub_100A00BCC);
  swift_beginAccess(&static OS_os_log.crlAssert, v46, 0, 0);
  v28 = (void *)static OS_os_log.crlAssert;
  v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v29, v45);
  *(_OWORD *)(inited + 16) = xmmword_100F05060;
  *(_QWORD *)(inited + 56) = &type metadata for Int32;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int32;
  *(_DWORD *)(inited + 32) = v42;
  v31 = sub_10050312C();
  *(_QWORD *)(inited + 96) = v31;
  v32 = sub_1006B06EC();
  *(_QWORD *)(inited + 104) = v32;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 136) = &type metadata for String;
  v33 = sub_1004CFC2C();
  *(_QWORD *)(inited + 112) = v25;
  *(_QWORD *)(inited + 120) = v27;
  *(_QWORD *)(inited + 176) = &type metadata for UInt;
  *(_QWORD *)(inited + 184) = &protocol witness table for UInt;
  *(_QWORD *)(inited + 144) = v33;
  *(_QWORD *)(inited + 152) = a8;
  v34 = v47;
  *(_QWORD *)(inited + 216) = v31;
  *(_QWORD *)(inited + 224) = v32;
  *(_QWORD *)(inited + 192) = v34;
  v35 = v28;
  v36 = v20;
  v37 = v34;
  v38 = static os_log_type_t.error.getter();
  sub_100A06EBC((uint64_t)v35, a1, v38, "#Assert *** Assertion failure #%d: %{public}@ %{public}@:%lu %{public}@", 71, 2, inited);
  swift_setDeallocating(inited);
  v39 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 5, v39);

  v40 = (id)static OS_os_log.crlAssert;
  v41 = static os_log_type_t.error.getter();
  sub_100A06EBC((uint64_t)v40, a1, v41, a9, a10, a11, a12);

}

void sub_1007580D4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  void *v33;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v6 = type metadata accessor for __VaListBuilder(0);
  v7 = (_QWORD *)swift_allocObject(v6, 48, 7);
  v7[2] = 8;
  v7[3] = 0;
  v8 = v7 + 3;
  v7[4] = 0;
  v7[5] = 0;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_25:
    v28 = __VaListBuilder.va_list()();
    StaticString.description.getter(a3, a4, a5);
    v30 = v29;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v32 = objc_msgSend((id)objc_opt_self(NSString), "crl_redactedStringWithFormat:arguments:", v31, v28);

    v33 = *a2;
    *a2 = v32;
    swift_release(v7);

    return;
  }
  v10 = 0;
  v11 = a1 + 32;
  while (1)
  {
    sub_1004E90B0(v11 + 40 * v10, (uint64_t)v38);
    v12 = v39;
    v13 = v40;
    sub_1004BB5A4(v38, v39);
    v14 = dispatch thunk of CVarArg._cVarArgEncoding.getter(v12, v13);
    v15 = *v8;
    v16 = *(_QWORD *)(v14 + 16);
    v17 = __OFADD__(*v8, v16);
    v18 = *v8 + v16;
    if (v17)
      break;
    v19 = v14;
    v20 = v7[4];
    if (v20 >= v18)
      goto LABEL_18;
    if (v20 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v21 = (char *)v7[5];
    if (2 * v20 > v18)
      v18 = 2 * v20;
    v7[4] = v18;
    if ((unint64_t)(v18 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    v22 = (char *)swift_slowAlloc(8 * v18, 7);
    v7[5] = v22;
    if (v21)
    {
      if (v22 != v21 || v22 >= &v21[8 * v15])
        memmove(v22, v21, 8 * v15);
      __VaListBuilder.deallocStorage(wordCount:storage:)(v20, v21);
LABEL_18:
      v22 = (char *)v7[5];
    }
    if (!v22)
      goto LABEL_30;
    v24 = *(_QWORD *)(v19 + 16);
    if (v24)
    {
      v25 = (uint64_t *)(v19 + 32);
      v26 = *v8;
      while (1)
      {
        v27 = *v25++;
        *(_QWORD *)&v22[8 * v26] = v27;
        v26 = *v8 + 1;
        if (__OFADD__(*v8, 1))
          break;
        *v8 = v26;
        if (!--v24)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v10;
    swift_bridgeObjectRelease(v19);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
    if (v10 == v9)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_100758308()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  v0 = sub_1008D5434((uint64_t)_swiftEmptyArrayStorage);
  v1 = type metadata accessor for CRLUnfairLock();
  v2 = swift_allocObject(v1, 24, 7);
  v3 = (_DWORD *)swift_slowAlloc(4, -1);
  *v3 = 0;
  *(_QWORD *)(v2 + 16) = v3;
  atomic_thread_fence(memory_order_acq_rel);
  off_1013F04D8 = (_UNKNOWN *)v2;
  qword_1013F04E0 = v0;
}

void sub_100758370()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setPositiveFormat:", v1);

  qword_1013F04E8 = (uint64_t)v0;
}

void sub_1007583DC()
{
  off_1013F04F0 = &off_101264E48;
}

uint64_t sub_1007583F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  Class isa;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  os_unfair_lock_s *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  Class v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  _QWORD v34[2];
  id v35;
  _QWORD v36[2];
  _QWORD v37[3];

  v0 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v0);
  v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = Locale.identifier.getter(v3);
  v6 = v5;
  if (qword_1013DD000 != -1)
    swift_once(&qword_1013DD000, sub_100758308);
  swift_beginAccess(&off_1013F04D8, v37, 32, 0);
  v7 = (uint64_t)off_1013F04D8;
  v8 = qword_1013F04E0;
  swift_bridgeObjectRetain(v6);
  v9 = sub_100D2F3C0(v4, v6, v7, v8);
  LOBYTE(v7) = v10;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_endAccess(v37);
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_endAccess(v37);
  if (qword_1013DD008 != -1)
    goto LABEL_30;
  while (1)
  {
    v11 = (id)qword_1013F04E8;
    isa = Locale._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "setLocale:", isa);

    v35 = objc_msgSend(v11, "groupingSize");
    v13 = objc_msgSend(v11, "groupingSeparator");
    if (v13)
    {
      v14 = v13;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;
      v18 = v17;

      if (v16)
        goto LABEL_11;
    }
    else
    {
      v16 = 0;
      v18 = 0xE000000000000000;
    }
    if (v18 == 0xE000000000000000)
      goto LABEL_12;
LABEL_11:
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, 0, 0xE000000000000000, 0) & 1) != 0)
    {
LABEL_12:

      swift_bridgeObjectRelease();
      v9 = 1;
      goto LABEL_13;
    }
    if (qword_1013DD010 != -1)
      swift_once(&qword_1013DD010, sub_1007583DC);
    v23 = *((_QWORD *)off_1013F04F0 + 2);
    if (!v23)
      break;
    v24 = 0;
    v34[0] = v4;
    v34[1] = 8 * (_QWORD)v35 + 32;
    while ((unint64_t)v35 + v24 < v23)
    {
      v25 = Int._bridgeToObjectiveC()().super.super.isa;
      v26 = objc_msgSend(v11, "stringFromNumber:", v25);

      if (!v26)
      {
        swift_bridgeObjectRelease();

        v9 = 1;
LABEL_28:
        v4 = v34[0];
        goto LABEL_13;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v4 = v27;
      v29 = v28;

      v37[0] = v4;
      v37[1] = v29;
      v36[0] = v16;
      v36[1] = v18;
      v30 = type metadata accessor for Locale(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v2, 1, 1, v30);
      v31 = sub_1004D292C();
      StringProtocol.range<A>(of:options:range:locale:)(v36, 0, 0, 0, 1, v2, &type metadata for String, &type metadata for String, v31, v31);
      v33 = v32;
      sub_10075882C((uint64_t)v2);
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
        swift_bridgeObjectRelease();

        v9 = v24 + 1;
        goto LABEL_28;
      }
      ++v24;
      v23 = *((_QWORD *)off_1013F04F0 + 2);
      if (v24 >= v23)
      {
        v9 = v24 + 1;
        v4 = v34[0];
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_30:
    swift_once(&qword_1013DD008, sub_100758370);
  }
  v9 = 1;
LABEL_25:
  swift_bridgeObjectRelease();

LABEL_13:
  swift_beginAccess(&off_1013F04D8, v37, 33, 0);
  v19 = off_1013F04D8;
  v20 = (os_unfair_lock_s *)*((_QWORD *)off_1013F04D8 + 2);
  swift_retain(off_1013F04D8);
  os_unfair_lock_lock(v20);
  swift_bridgeObjectRetain(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v36[0] = qword_1013F04E0;
  qword_1013F04E0 = 0x8000000000000000;
  sub_1008278BC(v9, v4, v6, isUniquelyReferenced_nonNull_native);
  qword_1013F04E0 = v36[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v20);
  swift_endAccess(v37);
  swift_bridgeObjectRelease();
  swift_release(v19);
  return v9;
}

uint64_t sub_10075882C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E1748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100758874(void *a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  BOOL v5;
  id v6;
  CGColorRef GenericGray;
  id v8;
  id v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for CRLSceneRep();
  objc_msgSendSuper2(&v10, "willUpdateRenderable:", a1);
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = objc_msgSend(v3, "BOOLForKey:", CFSTR("CRLScenesDebugView"));

  if (v4)
    v5 = a1 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = a1;
    GenericGray = CGColorCreateGenericGray(1.0, 0.3);
    objc_msgSend(v6, "setBackgroundColor:", GenericGray);

    v8 = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
    v9 = objc_msgSend(v8, "CGColor");

    objc_msgSend(v6, "setBorderColor:", v9);
    objc_msgSend(v6, "setBorderWidth:", 1.0);
    objc_msgSend(v1, "naturalBounds");
    objc_msgSend(v6, "setBounds:");

  }
}

id sub_100758A88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSceneRep();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSceneRep()
{
  return objc_opt_self(_TtC8Freeform11CRLSceneRep);
}

void sub_100758AD8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  double v6;
  CGFloat a;
  CGFloat b;
  CGFloat d;
  CGFloat c;
  CGFloat ty;
  CGFloat tx;
  id v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGAffineTransform v26;
  CGPoint v27;
  CGPoint v28;

  v3 = v2;
  objc_msgSend(v3, "transformInRoot");
  v6 = sub_1000791EC(&v26.a);
  CGAffineTransformMakeRotation(&v26, v6);
  a = v26.a;
  b = v26.b;
  c = v26.c;
  d = v26.d;
  tx = v26.tx;
  ty = v26.ty;
  v13 = objc_msgSend(v3, "layoutInfoGeometry");
  objc_msgSend(v13, "position");
  v25 = v14;
  v16 = v15;

  v17 = objc_msgSend(v3, "geometry");
  if (!v17)
  {
    __break(1u);
    return;
  }
  v18 = v17;
  objc_msgSend(v17, "size");
  v20 = v19;

  v27.x = v20 * 0.5;
  v26.a = a;
  v26.b = b;
  v26.c = c;
  v26.d = d;
  v26.tx = tx;
  v26.ty = ty;
  v27.y = 0.0;
  *(_QWORD *)&v24 = *(_OWORD *)&CGPointApplyAffineTransform(v27, &v26);
  v26.a = a;
  v26.b = b;
  v26.c = c;
  v26.d = d;
  v26.tx = tx;
  v26.ty = ty;
  v28.y = 0.0;
  v28.x = v20;
  *(_QWORD *)&v21 = *(_OWORD *)&CGPointApplyAffineTransform(v28, &v26);
  if (!a1 && a2 == 1)
  {
    sub_1000603D0(v25, v16, v21);
    return;
  }
  if (a1 == 1 && !a2)
  {
    v22 = v25;
    v23 = v16;
LABEL_8:
    sub_1000603B8(v22, v23, v21);
    return;
  }
  if (a1 != 2)
  {
    v22 = v25;
    if (a2 != 2)
      return;
    if (a1)
    {
      if (a1 != 1)
        return;
LABEL_17:
      v23 = v16;
      v21 = v24;
      goto LABEL_8;
    }
LABEL_18:
    sub_1000603D0(v22, v16, v24);
    return;
  }
  v22 = v25;
  if (a2 == 1)
    goto LABEL_18;
  if (!a2)
    goto LABEL_17;
}

void sub_100758CAC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  double v6;
  CGFloat a;
  CGFloat b;
  CGFloat d;
  CGFloat c;
  CGFloat ty;
  CGFloat tx;
  id v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGAffineTransform v26;
  CGPoint v27;
  CGPoint v28;

  v3 = v2;
  objc_msgSend(v3, "transformInRoot");
  v6 = sub_1000791EC(&v26.a);
  CGAffineTransformMakeRotation(&v26, v6);
  a = v26.a;
  b = v26.b;
  c = v26.c;
  d = v26.d;
  tx = v26.tx;
  ty = v26.ty;
  v13 = objc_msgSend(v3, "layoutInfoGeometry");
  objc_msgSend(v13, "position");
  v25 = v14;
  v16 = v15;

  v17 = objc_msgSend(v3, "geometry");
  if (!v17)
  {
    __break(1u);
    return;
  }
  v18 = v17;
  objc_msgSend(v17, "size");
  v20 = v19;

  v27.y = v20 * 0.5;
  v26.a = a;
  v26.b = b;
  v26.c = c;
  v26.d = d;
  v26.tx = tx;
  v26.ty = ty;
  v27.x = 0.0;
  *(_QWORD *)&v24 = *(_OWORD *)&CGPointApplyAffineTransform(v27, &v26);
  v26.a = a;
  v26.b = b;
  v26.c = c;
  v26.d = d;
  v26.tx = tx;
  v26.ty = ty;
  v28.x = 0.0;
  v28.y = v20;
  *(_QWORD *)&v21 = *(_OWORD *)&CGPointApplyAffineTransform(v28, &v26);
  if (a1 == 2 && !a2)
  {
    sub_1000603B8(v25, v16, v21);
    return;
  }
  if (!a1 && a2 == 2)
  {
    v22 = v25;
    v23 = v16;
LABEL_8:
    sub_1000603D0(v22, v23, v21);
    return;
  }
  if (a1 != 1)
  {
    v22 = v25;
    if (a2 != 1)
      return;
    if (a1 != 2)
    {
      if (a1)
        return;
LABEL_18:
      v23 = v16;
      v21 = v24;
      goto LABEL_8;
    }
LABEL_16:
    sub_1000603B8(v22, v16, v24);
    return;
  }
  v22 = v25;
  if (!a2)
    goto LABEL_16;
  if (a2 == 2)
    goto LABEL_18;
}

id CRLWPShapeLayout.autosizes.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;

  result = objc_msgSend(v0, "textLayout");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(v0, "autosizeFlagsFor:", result);

    return (id)(v3 != 0);
  }
  return result;
}

double CRLWPShapeLayout.nonAutosizedFrame(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  id v22;
  unsigned int v23;
  double v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGRect v29;

  v2 = v1;
  v4 = objc_msgSend(v1, "shapeInfo");
  v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x420))();

  if (v5 && (objc_msgSend(v5, "shouldRender") & 1) == 0)
  {

    v5 = 0;
  }
  v6 = objc_msgSend(v2, "autosizeFlagsFor:", a1);
  v7 = objc_msgSend(v2, "layoutInfoGeometry");
  objc_msgSend(v7, "size");

  v8 = sub_10005FDDC();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  if (!v6 && (objc_msgSend(v2, "invalidGeometry") & 1) == 0)
  {
    objc_msgSend(v2, "boundsForStandardKnobs");
    v8 = sub_10005FDDC();
    v10 = v15;
    v12 = v16;
    v14 = v17;
  }
  objc_msgSend(v2, "pathBounds");
  v19 = sub_1000603B8(v8, v10, v18);
  v21 = v20;
  if (v5)
  {
    v22 = objc_msgSend(v2, "pathSource");
    v23 = objc_msgSend(v22, "isRectangular");

    if (v23)
    {
      objc_msgSend(v5, "width");
      v25 = ceil(v24 * 0.5);
      v26 = fmin(v25, v12 * 0.5);
      v27 = fmin(v25, v14 * 0.5);
      v29.origin.x = v19;
      v29.origin.y = v21;
      v29.size.width = v12;
      v29.size.height = v14;
      *(_QWORD *)&v19 = (unint64_t)CGRectInset(v29, v26, v27);
    }

  }
  return v19;
}

double *CRLWPShapeLayout.dependents(of:)(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v2 = v1;
  v4 = objc_msgSend(v2, "textLayout");
  if (!v4)
    return _swiftEmptyArrayStorage;
  v5 = v4;
  type metadata accessor for CRLWPLayout();
  v6 = a1;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  if ((v7 & 1) == 0 || !objc_msgSend(v2, "autosizes"))
    return _swiftEmptyArrayStorage;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v9 + 32) = v2;
  v13 = v9;
  specialized Array._endMutation()(v9);
  v10 = v13;
  v11 = v2;
  return (double *)v10;
}

uint64_t CRLWPShapeLayout.repClass(for:)()
{
  return sub_1004B8930(0, &qword_1013F0520, off_101229A28);
}

id CRLWPShapeLayout.interiorWrapSegments(for:)(void *a1)
{
  void *v1;
  void *v2;
  id result;
  void *v5;
  id v6;
  char v7;

  v2 = v1;
  result = objc_msgSend(v2, "textLayout");
  if (result)
  {
    v5 = result;
    type metadata accessor for CRLWPLayout();
    v6 = a1;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    result = 0;
    if ((v7 & 1) != 0)
      return objc_msgSend(v2, "interiorWrapSegments");
  }
  return result;
}

double CRLWPShapeLayout.maxAutoGrowLineWidth(for:)()
{
  return 500.0;
}

double CRLWPShapeLayout.maxAutoGrowBlockHeight(for:)()
{
  return 16000.0;
}

uint64_t CRLWPShapeLayout.naturalAlignment(for:)()
{
  return 4;
}

double CRLWPShapeLayout.defaultFontSize()()
{
  void *v0;
  id v1;
  double v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  float v9;

  v1 = objc_msgSend(v0, "textLayout");
  v2 = 0.0;
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v1, "storage");

    if (v4)
    {
      v5 = type metadata accessor for CRLWPStorage();
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = v6;
        swift_unknownObjectRetain(v4);
        sub_1007E7874(v7);
        v9 = v8;
        swift_unknownObjectRelease_n(v4, 2);
        return v9;
      }
      else
      {
        swift_unknownObjectRelease(v4);
      }
    }
  }
  return v2;
}

uint64_t CRLWPShapeLayout.makeStorageRangeToFontSizeDict()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t result;
  unsigned int (*v7)(_QWORD *, uint64_t, uint64_t);
  id v8;
  char *v9;
  uint64_t KeyPath;
  _QWORD *v11;
  id v12[6];

  v1 = objc_msgSend(v0, "textLayout");
  if (!v1)
    return sub_1008D7154((uint64_t)_swiftEmptyArrayStorage);
  v2 = v1;
  v3 = objc_msgSend(v1, "storage");

  if (!v3)
    return sub_1008D7154((uint64_t)_swiftEmptyArrayStorage);
  v4 = type metadata accessor for CRLWPStorage();
  v5 = (void *)swift_dynamicCastClass(v3, v4);
  if (!v5)
  {
    swift_unknownObjectRelease(v3);
    return sub_1008D7154((uint64_t)_swiftEmptyArrayStorage);
  }
  v11 = _swiftEmptyDictionarySingleton;
  result = (uint64_t)objc_msgSend(v5, "characterCount");
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1007D7CB8(0, result, v12);
    v7 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v12[4];
    v8 = v12[5];
    v9 = (char *)v12[3];

    KeyPath = swift_getKeyPath(&unk_100F08780);
    sub_1007CCB94(KeyPath, v9, v7, (uint64_t)v8, (Swift::Int *)&v11);

    swift_release(KeyPath);
    swift_unknownObjectRelease(v3);
    return (uint64_t)v11;
  }
  return result;
}

double *sub_100759928(uint64_t a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  double v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  double *result;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  Swift::UInt v59;
  _QWORD *v60;
  char *v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v5 = objc_msgSend(v2, "wpShapeInfo");
  if (!v5)
    return _swiftEmptyArrayStorage;
  v6 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    v63 = 0;
    v8 = 0;
    v9 = 0;
    v10 = __CocoaDictionary.makeIterator()(v7) | 0x8000000000000000;
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v8 = ~v12;
    v63 = a1 + 64;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v9 = v14 & *(_QWORD *)(a1 + 64);
    v10 = a1;
  }
  v15 = swift_bridgeObjectRetain(a1);
  v16 = 0;
  v62 = (unint64_t)(v8 + 64) >> 6;
  v60 = _swiftEmptyDictionarySingleton;
  v61 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    v17 = v16;
    if ((v10 & 0x8000000000000000) != 0)
    {
      v20 = __CocoaDictionary.Iterator.next()(v15);
      if (!v20)
        goto LABEL_48;
      v22 = v20;
      v23 = v21;
      v64 = v20;
      v24 = sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
      swift_unknownObjectRetain(v22);
      swift_dynamicCast(&v65, &v64, v61, v24, 7);
      v25 = v65;
      swift_unknownObjectRelease(v22);
      v64 = v23;
      v26 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
      swift_unknownObjectRetain(v23);
      swift_dynamicCast(&v65, &v64, v61, v26, 7);
      v27 = v65;
      *(_QWORD *)&v28 = swift_unknownObjectRelease(v23).n128_u64[0];
      if (!v25)
        goto LABEL_48;
      goto LABEL_34;
    }
    if (!v9)
      break;
    v18 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v19 = v18 | (v16 << 6);
LABEL_33:
    v32 = 8 * v19;
    v33 = *(void **)(*(_QWORD *)(v10 + 56) + v32);
    v25 = *(id *)(*(_QWORD *)(v10 + 48) + v32);
    v27 = v33;
    if (!v25)
      goto LABEL_48;
LABEL_34:
    v34 = objc_msgSend(v25, "rangeValue", v28);
    v36 = v35;
    if (v34 == (id)NSNotFound.getter(v34))
    {

    }
    else
    {
      if (__OFADD__(v34, v36))
        goto LABEL_51;
      v57 = v8;
      v58 = v6;
      objc_msgSend(v27, "crl_CGFloatValue");
      v38 = v37;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v60);
      v65 = v60;
      v59 = (Swift::UInt)v34 + v36;
      v41 = sub_100843AB8((Swift::UInt)v34, (Swift::UInt)v34 + v36);
      v42 = v60[2];
      v43 = (v40 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
        goto LABEL_52;
      v45 = v40;
      if (v60[3] >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_100830E9C();
      }
      else
      {
        sub_10081DF9C(v44, isUniquelyReferenced_nonNull_native);
        v46 = sub_100843AB8((Swift::UInt)v34, v59);
        if ((v45 & 1) != (v47 & 1))
          goto LABEL_54;
        v41 = v46;
      }
      v48 = v65;
      v60 = v65;
      if ((v45 & 1) != 0)
      {
        *(_QWORD *)(v65[7] + 8 * v41) = v38;
      }
      else
      {
        v65[(v41 >> 6) + 8] |= 1 << v41;
        v49 = (_QWORD *)(v48[6] + 16 * v41);
        *v49 = v34;
        v49[1] = v59;
        *(_QWORD *)(v48[7] + 8 * v41) = v38;
        v50 = v48[2];
        v51 = __OFADD__(v50, 1);
        v52 = v50 + 1;
        if (v51)
          goto LABEL_53;
        v48[2] = v52;
      }
      v8 = v57;
      v6 = v58;

      v15 = swift_bridgeObjectRelease(0x8000000000000000);
    }
  }
  v29 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v29 >= v62)
      goto LABEL_48;
    v30 = *(_QWORD *)(v63 + 8 * v29);
    ++v16;
    if (!v30)
    {
      v16 = v17 + 2;
      if (v17 + 2 >= v62)
        goto LABEL_48;
      v30 = *(_QWORD *)(v63 + 8 * v16);
      if (!v30)
      {
        v16 = v17 + 3;
        if (v17 + 3 >= v62)
          goto LABEL_48;
        v30 = *(_QWORD *)(v63 + 8 * v16);
        if (!v30)
        {
          v16 = v17 + 4;
          if (v17 + 4 >= v62)
            goto LABEL_48;
          v30 = *(_QWORD *)(v63 + 8 * v16);
          if (!v30)
          {
            v31 = v17 + 5;
            while (v62 != v31)
            {
              v30 = *(_QWORD *)(v63 + 8 * v31++);
              if (v30)
              {
                v16 = v31 - 1;
                goto LABEL_32;
              }
            }
LABEL_48:
            sub_1004D284C(v10);
            v53 = v6;
            swift_bridgeObjectRetain(v60);
            v11 = sub_10075A1B4(v54, v53, a2);
            swift_bridgeObjectRelease_n(v60, 2);

            return v11;
          }
        }
      }
    }
LABEL_32:
    v9 = (v30 - 1) & v30;
    v19 = __clz(__rbit64(v30)) + (v16 << 6);
    goto LABEL_33;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v56 = sub_1004B804C((uint64_t *)&unk_1013F0530);
  result = (double *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v56);
  __break(1u);
  return result;
}

double CRLWPShapeLayout.position(forColumnIndex:bodyWidth:target:outWidth:outGap:)(uint64_t a1, double a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  return sub_10075AA98(a1, a4, a5, a2);
}

id CRLWPShapeLayout.layoutMargins.getter()
{
  return objc_msgSend(objc_allocWithZone((Class)CRLWPPadding), "init");
}

uint64_t CRLWPShapeLayout.shrinkTextToFit.getter()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  _BYTE *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = (char *)objc_msgSend(v0, "wpShapeInfo", v2);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v8 = type metadata accessor for CRLWPShapeItemData(0);
  v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v9 + 760))();
  type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  swift_retain(v7);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v10);
  v11 = v13[15];
  sub_10075ADB4((uint64_t)v4);

  swift_release(v7);
  return v11;
}

double *sub_10075A1B4(uint64_t a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t KeyPath;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];
  double *v61;

  v54 = a2;
  v53 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  __chkstk_darwin(v53);
  v52 = (uint64_t)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v51 = (char *)v45 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v9)
  {
    v45[1] = v3;
    v61 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v9);
    result = (double *)sub_10051FA44(a1);
    v12 = (uint64_t)result;
    v13 = 0;
    v14 = a1 + 64;
    v46 = a1 + 80;
    v47 = v9;
    v49 = a1 + 64;
    v50 = a1;
    v48 = v11;
    v15 = v51;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(a1 + 32))
    {
      v17 = (unint64_t)v12 >> 6;
      if ((*(_QWORD *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v11)
        goto LABEL_23;
      v55 = v13;
      v56 = 1 << v12;
      v18 = *(_QWORD *)(a1 + 56);
      v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
      v21 = *v19;
      v20 = v19[1];
      v58 = v21;
      v59 = v20;
      v22 = *(double *)(v18 + 8 * v12) * a3;
      KeyPath = swift_getKeyPath(&unk_100F08780);
      *(float *)&v22 = v22;
      *v15 = &_swiftEmptySetSingleton;
      v24 = sub_100559A64();
      v57 = (char *)v54;
      v25 = CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v24);
      __chkstk_darwin(v25);
      v45[-4] = &type metadata for CRLWPCharacterScope;
      v45[-3] = &type metadata for CRLWPFontSizeAttribute;
      v26 = sub_100739530();
      v45[-2] = v26;
      v45[-1] = KeyPath;
      v27 = swift_getKeyPath(&unk_100F087A0);
      swift_retain(KeyPath);
      sub_100AD8690(v60, 0x657A6953746E6F66, 0xE800000000000000);
      swift_bridgeObjectRelease(v60[1]);
      __chkstk_darwin(v28);
      v45[-4] = &type metadata for CRLWPCharacterScope;
      v45[-3] = &type metadata for CRLWPFontSizeAttribute;
      v45[-2] = v26;
      v45[-1] = v27;
      v29 = swift_getKeyPath(&unk_100F087D8);
      LODWORD(v60[0]) = LODWORD(v22);
      BYTE4(v60[0]) = 0;
      v30 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
      v31 = sub_1007395C4();
      CRAttributedString.Attributes.subscript.setter(v60, v29, v30, v31);
      v32 = v52;
      sub_10075AEC4((uint64_t)v15, v52);
      v33 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013F3EA0));
      v34 = v57;
      v35 = sub_100737BD4(v57, v58, v59, v32);
      sub_10075AF0C((uint64_t)v15);

      swift_release(KeyPath);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      v37 = *((_QWORD *)v61 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
      v38 = v37;
      a1 = v50;
      v39 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v35);
      result = (double *)specialized ContiguousArray._endMutation()(v39);
      v16 = 1 << *(_BYTE *)(a1 + 32);
      if (v12 >= v16)
        goto LABEL_24;
      v14 = v49;
      v40 = *(_QWORD *)(v49 + 8 * v17);
      if ((v40 & v56) == 0)
        goto LABEL_25;
      LODWORD(v11) = v48;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v48)
        goto LABEL_26;
      v41 = v40 & (-2 << (v12 & 0x3F));
      if (v41)
      {
        v16 = __clz(__rbit64(v41)) | v12 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v42 = v17 + 1;
        v43 = (unint64_t)(v16 + 63) >> 6;
        if (v17 + 1 < v43)
        {
          v44 = *(_QWORD *)(v49 + 8 * v42);
          if (v44)
          {
LABEL_18:
            v16 = __clz(__rbit64(v44)) + (v42 << 6);
          }
          else
          {
            while (v43 - 2 != v17)
            {
              v44 = *(_QWORD *)(v46 + 8 * v17++);
              if (v44)
              {
                v42 = v17 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v13 = v55 + 1;
      v12 = v16;
      if (v55 + 1 == v47)
        return v61;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t _sSo16CRLWPShapeLayoutC8FreeformE13autosizeFlags3forSo013CRLWPAutoSizeE0VAC11CRLWPLayoutC_tF_0()
{
  void *v0;
  id v1;
  unsigned __int8 *v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  uint64_t result;

  v1 = objc_msgSend(v0, "layoutInfoGeometry");
  v2 = (unsigned __int8 *)objc_msgSend(v0, "wpShapeInfo");
  if (!v2)
  {

    return 0;
  }
  v3 = v2[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textIsVertical];

  v4 = objc_msgSend(v1, "heightValid");
  v5 = 4;
  if (!v3)
    v5 = 1;
  if (v4)
    v6 = 0;
  else
    v6 = v5;
  v7 = objc_msgSend(v1, "widthValid");

  if ((v7 & 1) != 0)
    return v6;
  if ((v3 & 1) == 0)
  {
    result = 4;
    if (v6 >= 4)
      return result;
    return result | v6;
  }
  if ((v6 & 1) == 0)
  {
    result = 1;
    return result | v6;
  }
  return 4;
}

uint64_t _sSo16CRLWPShapeLayoutC8FreeformE17verticalAlignment3forSo013CRLWPVerticalE0VAC11CRLWPLayoutC_tF_0()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (char *)objc_msgSend(v0, "wpShapeInfo");
  if (!v1)
    return 0;
  v2 = v1;
  if (objc_msgSend(v0, "autosizes"))
  {

    return 0;
  }
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v5 = type metadata accessor for CRLWPShapeItemData(0);
  swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  swift_retain(v4);
  v6 = sub_1005603D8();

  swift_release(v4);
  return v6;
}

double _sSo16CRLWPShapeLayoutC8FreeformE14autosizedFrame3for8textSizeSo6CGRectVAC11CRLWPLayoutC_So6CGSizeVtF_0()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  id v4;

  v1 = v0;
  if ((objc_msgSend(v0, "autosizes") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"autosizedFrame(for:textSize:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeLayout.swift", 87, 2, 135, "should call only when autosizing", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"autosizedFrame(for:textSize:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeLayout.swift", 87, 2u, 135, (uint64_t)"should call only when autosizing", 32, 2u);
  }
  v2 = objc_msgSend(v0, "shapeInfo");
  v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x420))();

  if (v3 && objc_msgSend(v3, "shouldRender"))
    objc_msgSend(v3, "width");
  v4 = objc_msgSend(v1, "layoutInfoGeometry");
  objc_msgSend(v4, "size");
  objc_msgSend(v4, "widthValid");
  objc_msgSend(v4, "heightValid");

  return sub_10005FDDC();
}

void _sSo16CRLWPShapeLayoutC8FreeformE5width14forColumnIndex9bodyWidth12CoreGraphics7CGFloatVSu_AItF_0()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (char *)objc_msgSend(v0, "wpShapeInfo", v2);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v8 = type metadata accessor for CRLWPShapeItemData(0);
    v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v9 + 760))();
    swift_retain(v7);
    v10 = sub_1004B804C(&qword_1013F55A0);
    CRRegister.wrappedValue.getter(v10);
    sub_10075ADB4((uint64_t)v4);

    swift_release(v7);
  }
}

double sub_10075AA98(uint64_t a1, _QWORD *a2, _QWORD *a3, double a4)
{
  void *v4;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD v24[4];

  v9 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)objc_msgSend(v4, "wpShapeInfo", v10);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v16 = type metadata accessor for CRLWPShapeItemData(0);
    v17 = swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v17 + 760))();
    swift_retain(v15);
    v18 = sub_1004B804C(&qword_1013F55A0);
    CRRegister.wrappedValue.getter(v18);
    v19 = *(float *)&v24[3];
    sub_10075ADB4((uint64_t)v12);

    swift_release(v15);
    v20 = v19;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v20 = 0.0;
  if (a2)
  {
LABEL_3:
    objc_msgSend(v4, "widthForColumnIndex:bodyWidth:", a1, a4);
    *a2 = v21;
  }
LABEL_4:
  if (a3)
  {
    objc_msgSend(v4, "gapForColumnIndex:bodyWidth:", a1, a4);
    *a3 = v22;
  }
  return v20;
}

double _sSo16CRLWPShapeLayoutC8FreeformE14adjustedInsets3forSo06UIEdgeE0VSo17CRLWPLayoutTarget_pSg_tF_0()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  double v12;
  double v13;
  double v14;
  _DWORD v16[4];

  v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (char *)objc_msgSend(v0, "wpShapeInfo", v2);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v8 = type metadata accessor for CRLWPShapeItemData(0);
    v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v9 + 760))();
    swift_retain(v7);
    v10 = sub_1004B804C(&qword_1013F55A0);
    CRRegister.wrappedValue.getter(v10);
    v11 = *(float *)&v16[3];
    sub_10075ADB4((uint64_t)v4);

    swift_release(v7);
    v12 = v11;
  }
  else
  {
    v12 = 0.0;
  }
  sub_10075AF4C();
  v14 = v13;
  if (objc_msgSend(v0, "autosizes"))
    return sub_100063854(v12 + 4.0);
  return v14;
}

uint64_t sub_10075ADB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10075ADF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F0528;
  if (!qword_1013F0528)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_10140B930, NSValue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0528);
  }
  return result;
}

uint64_t sub_10075AE50()
{
  return 32;
}

double sub_10075AE5C(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

uint64_t sub_10075AE64(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;

  v2 = *a1;
  *(_QWORD *)a2 = *a1;
  v3 = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a2 + 24) = a1[3];
  *(_OWORD *)(a2 + 8) = v3;
  return swift_retain(v2);
}

__n128 sub_10075AE8C(__n128 *a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = a1[1].n128_u64[1];
  result = *a1;
  *(_QWORD *)(a2 + 24) = a1[1].n128_u64[0];
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10075AEB0()
{
  return 32;
}

uint64_t sub_10075AEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10075AF0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10075AF68(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

void sub_10075B194()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_viewControllerToPresentFrom]);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
    type metadata accessor for MainActor(0);
    v7 = v0;
    v8 = v5;
    v9 = static MainActor.shared.getter(v8);
    v10 = (_QWORD *)swift_allocObject(&unk_10127B9E0, 48, 7);
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    v10[4] = v7;
    v10[5] = v8;
    v11 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013F05F8, (uint64_t)v10);
    swift_release(v11);

  }
}

uint64_t sub_10075B29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[17] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[18] = v7;
  v5[19] = v8;
  return swift_task_switch(sub_10075B308, v7, v8);
}

uint64_t sub_10075B308()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  double *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, double, double, double, double);

  v1 = v0[15];
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_boardActor);
  v0[20] = v2;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceView);
  v0[21] = v3;
  v4 = (double *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceRect);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = unk_1013F05E4;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double, double, double, double))((char *)&dword_1013F05E0
                                                                                          + dword_1013F05E0);
  swift_retain(v2);
  v10 = v3;
  v11 = (_QWORD *)swift_task_alloc(v9);
  v0[22] = v11;
  *v11 = v0;
  v11[1] = sub_10075B3E0;
  return v13(v2, v0[16], (uint64_t)v10, v5, v6, v7, v8);
}

uint64_t sub_10075B3E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_10075B484;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 160);

    swift_release(v7);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_10075B454;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10075B454()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10075B484()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(void **)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_release(v2);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v3 = *(_QWORD *)(v0 + 184);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 88, 0, 0);
  v4 = (void *)static OS_os_log.crlDefault;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 112) = v3;
  v7 = v4;
  swift_errorRetain(v3);
  v8 = sub_1004B804C(&qword_1013E0210);
  v9 = String.init<A>(describing:)(v0 + 112, v8);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v13, "Error presenting export as PDF activity view controller: %@", 59, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10075B664()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSExportAsPDFActivity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSExportAsPDFActivity()
{
  return objc_opt_self(_TtC8Freeform25CRLiOSExportAsPDFActivity);
}

void sub_10075B6FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v12 = sub_1004B804C(&qword_1013EF328);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v15);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(a4, v17 + v14, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v18 + v17, (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = a5;
  v21 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = a6;
  v19 = _Block_copy(aBlock);
  objc_msgSend(a2, "presentViewController:animated:completion:", a3, 1, v19, swift_release(v21).n128_f64[0]);
  _Block_release(v19);
}

double sub_10075B838(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  double result;
  _BYTE v8[24];

  if (!a1 || (a2 & 1) != 0)
  {
    swift_beginAccess(a5 + 16, v8, 1, 0);
    v6 = *(_QWORD *)(a5 + 16);
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

NSString sub_10075B884()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1013F0540 = (uint64_t)result;
  return result;
}

uint64_t sub_10075B8B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v9;

  v3 = sub_1004B804C(&qword_1013E04D0);
  v1[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[10] = v5;
  v1[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v1[12] = v6;
  v1[13] = static MainActor.shared.getter(v6);
  v1[14] = swift_allocObject(&unk_10127B8C8, 24, 7);
  v9 = (char *)&dword_1013FE740 + dword_1013FE740;
  v7 = (_QWORD *)swift_task_alloc(unk_1013FE744);
  v1[15] = v7;
  *v7 = v1;
  v7[1] = sub_10075B99C;
  return ((uint64_t (*)(uint64_t, _QWORD))v9)(a1, 0);
}

uint64_t sub_10075B99C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 96);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_10075BD28;
  }
  else
  {
    *(_QWORD *)(v4 + 136) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_10075BA40;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_10075BA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString *v26;
  NSString *v27;
  void *v28;
  uint64_t v29;
  id v30;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = swift_release(*(_QWORD *)(v0 + 104));
  *(_QWORD *)(v2 + 16) = v1;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16);
  v7(v5, v1 + OBJC_IVAR____TtC8Freeform16CRLTemporaryFile_url, v3, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    v8 = *(_QWORD *)(v0 + 112);
    sub_1005534BC(*(_QWORD *)(v0 + 64));
    v9 = sub_10075CDC8();
    swift_allocError(&type metadata for CRLiOSExportAsPDFActivityHelper.TemporaryFileError, v9, 0, 0);
    swift_willThrow(v10);
    swift_release(v8);
    v11 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v16, v17);
    v18 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v19 = swift_allocObject(v18, 64, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v19 + 56) = v17;
    v20 = sub_10050D1B0((_QWORD *)(v19 + 32));
    ((void (*)(_QWORD *, uint64_t, uint64_t))v7)(v20, v14, v17);
    v21 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    isa = Array._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v21, "initWithActivityItems:applicationActivities:", isa, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

    v24 = sub_1004B804C(&qword_1013F05B8);
    v25 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v25 + 32) = UIActivityTypePrint;
    *(_QWORD *)(v25 + 40) = UIActivityTypeSharePlay;
    v26 = UIActivityTypePrint;
    v27 = UIActivityTypeSharePlay;
    sub_100BC1EFC(v25);
    swift_bridgeObjectRelease(v25);
    *(_QWORD *)(v0 + 48) = sub_10075CE0C;
    *(_QWORD *)(v0 + 56) = v13;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = *(_QWORD *)"";
    *(_QWORD *)(v0 + 32) = sub_10075AF68;
    *(_QWORD *)(v0 + 40) = &unk_10127B908;
    v28 = _Block_copy((const void *)(v0 + 16));
    v29 = *(_QWORD *)(v0 + 56);
    v30 = v23;
    swift_retain(v13);
    objc_msgSend(v30, "setCompletionWithItemsHandler:", v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v17);
    swift_release(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(id))(v0 + 8))(v30);
  }
}

uint64_t sub_10075BD28()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = swift_release(*(_QWORD *)(v0 + 104));
  swift_deallocUninitializedObject(v1, 24, 7, v2);
  v3 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10075BD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;

  v3[2] = a2;
  v3[3] = a3;
  v5 = type metadata accessor for MainActor(0);
  v3[4] = v5;
  v3[5] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_1013F05CC);
  v3[6] = v6;
  *v6 = v3;
  v6[1] = sub_10075BDE8;
  return sub_10075B8B8(a1);
}

uint64_t sub_10075BDE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 48);
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  if (v1)
    v8 = sub_10075BF38;
  else
    v8 = sub_10075BE78;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10075BE78()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;

  swift_release(*(_QWORD *)(v0 + 40));
  if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
  {
    v1 = *(void **)(v0 + 56);
    objc_msgSend(v1, "setModalPresentationStyle:", 7);
    v2 = objc_msgSend(v1, "popoverPresentationController");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "setSourceItem:", *(_QWORD *)(v0 + 24));

    }
  }
  v4 = *(void **)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 16), "presentViewController:animated:completion:", v4, 1, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10075BF38()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10075BF6C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 784) = a2;
  *(double *)(v6 + 776) = a6;
  *(double *)(v6 + 768) = a5;
  *(double *)(v6 + 760) = a4;
  *(double *)(v6 + 752) = a3;
  *(_QWORD *)(v6 + 744) = a1;
  v8 = sub_1004B804C(&qword_1013E04D0);
  *(_QWORD *)(v6 + 792) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  *(_QWORD *)(v6 + 800) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 808) = v10;
  *(_QWORD *)(v6 + 816) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v6 + 824) = v11;
  *(_QWORD *)(v6 + 832) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 840) = v12;
  *(_QWORD *)(v6 + 848) = static MainActor.shared.getter(v12);
  return swift_task_switch(sub_10075C044, a1, 0);
}

uint64_t sub_10075C044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 744);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 856) = v4;
  *v4 = v0;
  v4[1] = sub_10075C0C8;
  return sub_100618D44(v2, v3, 1);
}

uint64_t sub_10075C0C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 856);
  v3[108] = a1;
  v3[109] = v1;
  swift_task_dealloc(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3[105], &protocol witness table for MainActor);
  v7 = v5;
  if (v1)
  {
    v8 = sub_10075C58C;
  }
  else
  {
    v3[110] = v5;
    v3[111] = v6;
    v8 = sub_10075C164;
  }
  return swift_task_switch(v8, v7, v6);
}

void sub_10075C164()
{
  uint64_t v0;
  void *v1;
  id v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  Class isa;
  id v13;
  id v14;
  id v15;
  void *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;

  v1 = *(void **)(v0 + 864);
  v2 = objc_allocWithZone((Class)CRLCanvasImager);
  v3 = v1;
  v4 = objc_msgSend(v2, "initWithBoard:", v3);
  *(_QWORD *)(v0 + 896) = v4;
  v5 = *(char **)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v6 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v8 = v5;
  if (!v7)
  {
    sub_100740DA4();
    v7 = *(_QWORD *)&v5[v6];
  }
  if (v7)
    v9 = v7;
  else
    v9 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v38 = v9;
    else
      v38 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    v39 = sub_1004B804C(&qword_1013E0670);
    v11 = _bridgeCocoaArray<A>(_:)(v38, v39);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    swift_bridgeObjectRetain(v7);
    v10 = swift_bridgeObjectRetain(v9);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
    v11 = v9;
  }

  swift_bridgeObjectRelease(v9);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setInfos:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v13 = objc_allocWithZone((Class)CRLPdfTagger);
  v14 = v4;
  v15 = objc_msgSend(v13, "init");
  *(_QWORD *)(v0 + 904) = v15;
  if (v15)
  {
    v16 = v15;
    v17 = *(char **)(v0 + 864);
    v18 = *(_QWORD *)(v0 + 832);
    v19 = *(_QWORD *)(v0 + 784);

    *(_BYTE *)(v0 + 960) = 1;
    *(_BYTE *)(v0 + 952) = 0;
    v20 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v20, v0 + 704, 0, 0);
    sub_1004D48C8(v20, v18);
    v21 = v17;
    v22 = v14;
    v23 = v16;
    swift_bridgeObjectRetain(v19);
    v24 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v24);
    v25 = *(_QWORD *)(v0 + 728);
    v26 = *(_QWORD *)(v0 + 736);
    sub_1004D490C(v18);
    if (v19 >> 62)
    {
      v40 = *(_QWORD *)(v0 + 784);
      if (v40 < 0)
        v41 = *(_QWORD *)(v0 + 784);
      else
        v41 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 784));
      v42 = _CocoaArrayWrapper.endIndex.getter(v41);
      swift_bridgeObjectRelease(v40);
      if (v42 != 1)
        goto LABEL_14;
    }
    else if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
    {
LABEL_14:
      *(_QWORD *)(v0 + 912) = v26;
      v28 = *(void **)(v0 + 864);
      v29 = *(_QWORD *)(v0 + 776);
      v44 = *(_OWORD *)(v0 + 760);
      v30 = *(_QWORD *)(v0 + 752);
      *(_QWORD *)(v0 + 920) = swift_allocObject(&unk_10127B8C8, 24, 7);
      *(_QWORD *)(v0 + 528) = 0x3FF0000000000000;
      *(_QWORD *)(v0 + 536) = v19;
      *(_OWORD *)(v0 + 544) = 0u;
      *(_OWORD *)(v0 + 560) = 0u;
      *(_BYTE *)(v0 + 576) = 1;
      *(_WORD *)(v0 + 577) = 256;
      *(_QWORD *)(v0 + 584) = v30;
      *(_OWORD *)(v0 + 592) = v44;
      *(_QWORD *)(v0 + 608) = v29;
      *(_BYTE *)(v0 + 616) = 0;
      *(_QWORD *)(v0 + 624) = 0;
      *(_QWORD *)(v0 + 632) = v22;
      *(_QWORD *)(v0 + 640) = v23;
      *(_QWORD *)(v0 + 648) = v28;
      v31 = *(_OWORD *)(v0 + 528);
      v32 = *(_OWORD *)(v0 + 544);
      v33 = *(_OWORD *)(v0 + 576);
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 560);
      *(_OWORD *)(v0 + 64) = v33;
      *(_OWORD *)(v0 + 16) = v31;
      *(_OWORD *)(v0 + 32) = v32;
      v34 = *(_OWORD *)(v0 + 592);
      v35 = *(_OWORD *)(v0 + 608);
      v36 = *(_OWORD *)(v0 + 640);
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 624);
      *(_OWORD *)(v0 + 128) = v36;
      *(_OWORD *)(v0 + 80) = v34;
      *(_OWORD *)(v0 + 96) = v35;
      sub_1006D3DDC((_QWORD *)(v0 + 528));

      v37 = (_QWORD *)swift_task_alloc(dword_1013FE704);
      *(_QWORD *)(v0 + 928) = v37;
      *v37 = v0;
      v37[1] = sub_10075C5E8;
      sub_1009883DC(v25, v26, 0, 1);
      return;
    }
    swift_bridgeObjectRelease(v26);
    if ((v19 & 0xC000000000000001) != 0)
    {
      v43 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 784));
      v25 = *(_QWORD *)(v43 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
      v26 = *(_QWORD *)(v43 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name + 8);
      swift_bridgeObjectRetain(v26);
      swift_unknownObjectRelease(v43);
      goto LABEL_14;
    }
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v27 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 784) + 32) + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
      v25 = *v27;
      v26 = v27[1];
      swift_bridgeObjectRetain(v26);
      goto LABEL_14;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10075C58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 848));
  v1 = *(_QWORD *)(v0 + 816);
  v2 = *(_QWORD *)(v0 + 792);
  swift_task_dealloc(*(_QWORD *)(v0 + 832));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10075C5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 928);
  *(_QWORD *)(*(_QWORD *)v2 + 936) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[111];
    v7 = v4[110];
    v8 = sub_10075CAFC;
  }
  else
  {
    swift_bridgeObjectRelease(v4[114]);
    v4[118] = a1;
    sub_1006D3E20((uint64_t)(v4 + 66));
    v6 = v4[111];
    v7 = v4[110];
    v8 = sub_10075C678;
  }
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10075C678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString *v33;
  NSString *v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;

  v45 = (_DWORD *)(v0 + 961);
  v46 = (_DWORD *)(v0 + 953);
  v1 = *(_QWORD *)(v0 + 944);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = *(_QWORD *)(v0 + 808);
  v4 = *(_QWORD *)(v0 + 800);
  v5 = *(_QWORD *)(v0 + 792);
  v6 = swift_release(*(_QWORD *)(v0 + 848));
  *(_QWORD *)(v2 + 16) = v1;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  v7(v5, v1 + OBJC_IVAR____TtC8Freeform16CRLTemporaryFile_url, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v4) == 1)
  {
    v8 = *(_QWORD *)(v0 + 920);
    v9 = *(void **)(v0 + 864);
    v10 = *(_QWORD *)(v0 + 784);
    v11 = *(_QWORD *)(v0 + 776);
    v12 = *(_QWORD *)(v0 + 768);
    v39 = *(_OWORD *)(v0 + 752);
    v41 = *(_OWORD *)(v0 + 896);
    sub_1005534BC(*(_QWORD *)(v0 + 792));
    v13 = sub_10075CDC8();
    swift_allocError(&type metadata for CRLiOSExportAsPDFActivityHelper.TemporaryFileError, v13, 0, 0);
    swift_willThrow(v14);

    swift_release(v8);
    *(_QWORD *)(v0 + 272) = 0x3FF0000000000000;
    *(_QWORD *)(v0 + 280) = v10;
    *(_OWORD *)(v0 + 288) = 0u;
    *(_OWORD *)(v0 + 304) = 0u;
    *(_BYTE *)(v0 + 320) = *(_BYTE *)(v0 + 960);
    *(_WORD *)(v0 + 321) = 256;
    *(_DWORD *)(v0 + 323) = *v45;
    *(_BYTE *)(v0 + 327) = *(_BYTE *)(v0 + 965);
    *(_OWORD *)(v0 + 328) = v39;
    *(_QWORD *)(v0 + 344) = v12;
    *(_QWORD *)(v0 + 352) = v11;
    *(_BYTE *)(v0 + 360) = *(_BYTE *)(v0 + 952);
    *(_DWORD *)(v0 + 364) = *(_DWORD *)(v0 + 956);
    *(_DWORD *)(v0 + 361) = *v46;
    *(_QWORD *)(v0 + 368) = 0;
    *(_OWORD *)(v0 + 376) = v41;
    *(_QWORD *)(v0 + 392) = v9;
    sub_1006D3E20(v0 + 272);
    v15 = *(_QWORD *)(v0 + 816);
    v16 = *(_QWORD *)(v0 + 792);
    swift_task_dealloc(*(_QWORD *)(v0 + 832));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 920);
    v19 = *(void **)(v0 + 864);
    v20 = *(_QWORD *)(v0 + 816);
    v21 = *(_QWORD *)(v0 + 808);
    v22 = *(_QWORD *)(v0 + 800);
    v43 = *(_QWORD *)(v0 + 792);
    v44 = *(_QWORD *)(v0 + 832);
    v38 = *(_QWORD *)(v0 + 784);
    v23 = *(_QWORD *)(v0 + 776);
    v24 = *(_QWORD *)(v0 + 768);
    v40 = *(_OWORD *)(v0 + 752);
    v42 = *(_OWORD *)(v0 + 896);
    (*(void (**)(uint64_t))(v21 + 32))(v20);
    v25 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v26 = swift_allocObject(v25, 64, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v26 + 56) = v22;
    v27 = sub_10050D1B0((_QWORD *)(v26 + 32));
    ((void (*)(_QWORD *, uint64_t, uint64_t))v7)(v27, v20, v22);
    v28 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    isa = Array._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v28, "initWithActivityItems:applicationActivities:", isa, 0, swift_bridgeObjectRelease(v26).n128_f64[0]);

    v31 = sub_1004B804C(&qword_1013F05B8);
    v32 = swift_allocObject(v31, 48, 7);
    *(_OWORD *)(v32 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v32 + 32) = UIActivityTypePrint;
    *(_QWORD *)(v32 + 40) = UIActivityTypeSharePlay;
    v33 = UIActivityTypePrint;
    v34 = UIActivityTypeSharePlay;
    sub_100BC1EFC(v32);
    swift_bridgeObjectRelease(v32);
    *(_QWORD *)(v0 + 688) = sub_10075CE0C;
    *(_QWORD *)(v0 + 696) = v18;
    *(_QWORD *)(v0 + 656) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 664) = *(_QWORD *)"";
    *(_QWORD *)(v0 + 672) = sub_10075AF68;
    *(_QWORD *)(v0 + 680) = &unk_10127B8E0;
    v35 = _Block_copy((const void *)(v0 + 656));
    v36 = *(_QWORD *)(v0 + 696);
    v37 = v30;
    swift_retain(v18);
    objc_msgSend(v37, "setCompletionWithItemsHandler:", v35, swift_release(v36).n128_f64[0]);
    _Block_release(v35);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    swift_release(v18);
    *(_QWORD *)(v0 + 144) = 0x3FF0000000000000;
    *(_QWORD *)(v0 + 152) = v38;
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_BYTE *)(v0 + 192) = *(_BYTE *)(v0 + 960);
    *(_WORD *)(v0 + 193) = 256;
    *(_DWORD *)(v0 + 195) = *v45;
    *(_BYTE *)(v0 + 199) = *(_BYTE *)(v0 + 965);
    *(_OWORD *)(v0 + 200) = v40;
    *(_QWORD *)(v0 + 216) = v24;
    *(_QWORD *)(v0 + 224) = v23;
    *(_BYTE *)(v0 + 232) = *(_BYTE *)(v0 + 952);
    *(_DWORD *)(v0 + 236) = *(_DWORD *)(v0 + 956);
    *(_DWORD *)(v0 + 233) = *v46;
    *(_QWORD *)(v0 + 240) = 0;
    *(_OWORD *)(v0 + 248) = v42;
    *(_QWORD *)(v0 + 264) = v19;
    sub_1006D3E20(v0 + 144);
    swift_task_dealloc(v44);
    swift_task_dealloc(v20);
    swift_task_dealloc(v43);
    return (*(uint64_t (**)(id))(v0 + 8))(v37);
  }
}

uint64_t sub_10075CAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 920);
  v2 = *(_QWORD *)(v0 + 912);
  v3 = *(void **)(v0 + 864);
  v4 = *(_QWORD *)(v0 + 848);
  v5 = *(_QWORD *)(v0 + 784);
  v6 = *(_QWORD *)(v0 + 776);
  v7 = *(_QWORD *)(v0 + 768);
  v12 = *(_OWORD *)(v0 + 752);
  v13 = *(_OWORD *)(v0 + 896);

  swift_release(v4);
  swift_bridgeObjectRelease(v2);
  sub_1006D3E20(v0 + 528);
  swift_deallocUninitializedObject(v1, 24, 7, v8);
  *(_QWORD *)(v0 + 400) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 408) = v5;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_BYTE *)(v0 + 448) = *(_BYTE *)(v0 + 960);
  *(_WORD *)(v0 + 449) = 256;
  *(_DWORD *)(v0 + 451) = *(_DWORD *)(v0 + 961);
  *(_BYTE *)(v0 + 455) = *(_BYTE *)(v0 + 965);
  *(_OWORD *)(v0 + 456) = v12;
  *(_QWORD *)(v0 + 472) = v7;
  *(_QWORD *)(v0 + 480) = v6;
  *(_BYTE *)(v0 + 488) = *(_BYTE *)(v0 + 952);
  *(_DWORD *)(v0 + 492) = *(_DWORD *)(v0 + 956);
  *(_DWORD *)(v0 + 489) = *(_DWORD *)(v0 + 953);
  *(_QWORD *)(v0 + 496) = 0;
  *(_OWORD *)(v0 + 504) = v13;
  *(_QWORD *)(v0 + 520) = v3;
  sub_1006D3E20(v0 + 400);
  v9 = *(_QWORD *)(v0 + 816);
  v10 = *(_QWORD *)(v0 + 792);
  swift_task_dealloc(*(_QWORD *)(v0 + 832));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10075CC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  _QWORD *v8;
  uint64_t v15;
  _QWORD *v16;

  v8[2] = a2;
  v8[3] = a3;
  v15 = type metadata accessor for MainActor(0);
  v8[4] = v15;
  v8[5] = static MainActor.shared.getter(v15);
  v16 = (_QWORD *)swift_task_alloc(dword_1013F059C);
  v8[6] = v16;
  *v16 = v8;
  v16[1] = sub_10075CD14;
  return sub_10075BF6C(a1, a4, a5, a6, a7, a8);
}

uint64_t sub_10075CD14(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 48);
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  if (v1)
    v8 = sub_10075D748;
  else
    v8 = sub_10075D768;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10075CDA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10075CDC8()
{
  unint64_t result;

  result = qword_1013F05A8;
  if (!qword_1013F05A8)
  {
    result = swift_getWitnessTable(&unk_100F088E8, &type metadata for CRLiOSExportAsPDFActivityHelper.TemporaryFileError);
    atomic_store(result, (unint64_t *)&qword_1013F05A8);
  }
  return result;
}

double sub_10075CE0C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10075B838(a1, a2, a3, a4, v4);
}

uint64_t sub_10075CE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10075CE34(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10075CE3C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;

  *(double *)(v7 + 48) = a6;
  *(double *)(v7 + 56) = a7;
  *(double *)(v7 + 32) = a4;
  *(double *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1013F05CC);
  *(_QWORD *)(v7 + 80) = v10;
  *v10 = v7;
  v10[1] = sub_10075CEAC;
  return sub_10075B8B8(a1);
}

uint64_t sub_10075CEAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 64);
  v3[11] = a1;
  v3[12] = v1;
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v3[13] = v7;
  v3[14] = v6;
  if (v1)
    v8 = sub_10075D0B0;
  else
    v8 = sub_10075CF40;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10075CF40()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI");
  if ((_DWORD)v1)
  {
    v2 = *(void **)(v0 + 88);
    objc_msgSend(v2, "setModalPresentationStyle:", 7);
    v3 = objc_msgSend(v2, "popoverPresentationController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setSourceView:", *(_QWORD *)(v0 + 24));

    }
    v6 = *(double *)(v0 + 48);
    v5 = *(double *)(v0 + 56);
    v8 = *(double *)(v0 + 32);
    v7 = *(double *)(v0 + 40);
    v9 = objc_msgSend(*(id *)(v0 + 88), "popoverPresentationController");
    objc_msgSend(v9, "setSourceRect:", v8, v7, v6, v5);

  }
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 120) = v12;
  v13 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 128) = v13;
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 136) = v14;
  *v14 = v0;
  v14[1] = sub_10075D0E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v14, v12, &protocol witness table for MainActor, 0xD000000000000067, 0x8000000100FCE5C0, sub_10075D4E0, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_10075D0B0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10075D0E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 128);
  v3 = *(_QWORD *)(*v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10075D14C, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_10075D14C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 72);

  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10075D18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  uint64_t v12;
  uint64_t v19;
  _QWORD *v20;

  *(double *)(v12 + 48) = a7;
  *(double *)(v12 + 56) = a8;
  *(double *)(v12 + 32) = a5;
  *(double *)(v12 + 40) = a6;
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v19 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v12 + 64) = v19;
  *(_QWORD *)(v12 + 72) = static MainActor.shared.getter(v19);
  v20 = (_QWORD *)swift_task_alloc(dword_1013F059C);
  *(_QWORD *)(v12 + 80) = v20;
  *v20 = v12;
  v20[1] = sub_10075D23C;
  return sub_10075BF6C(a1, a4, a9, a10, a11, a12);
}

uint64_t sub_10075D23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 64);
  v3[11] = a1;
  v3[12] = v1;
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v3[13] = v7;
  v3[14] = v6;
  if (v1)
    v8 = sub_10075D74C;
  else
    v8 = sub_10075D2D0;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10075D2D0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI");
  if ((_DWORD)v1)
  {
    v2 = *(void **)(v0 + 88);
    objc_msgSend(v2, "setModalPresentationStyle:", 7);
    v3 = objc_msgSend(v2, "popoverPresentationController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setSourceView:", *(_QWORD *)(v0 + 24));

    }
    v6 = *(double *)(v0 + 48);
    v5 = *(double *)(v0 + 56);
    v8 = *(double *)(v0 + 32);
    v7 = *(double *)(v0 + 40);
    v9 = objc_msgSend(*(id *)(v0 + 88), "popoverPresentationController");
    objc_msgSend(v9, "setSourceRect:", v8, v7, v6, v5);

  }
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 120) = v12;
  v13 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 128) = v13;
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 136) = v14;
  *v14 = v0;
  v14[1] = sub_10075D440;
  return withCheckedContinuation<A>(isolation:function:_:)(v14, v12, &protocol witness table for MainActor, 0xD000000000000094, 0x8000000100FCE520, sub_10075D4A8, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_10075D440()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 128);
  v3 = *(_QWORD *)(*v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10075D76C, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

void sub_10075D4A8(uint64_t a1)
{
  uint64_t v1;

  sub_10075B6FC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_10127B940, (uint64_t)sub_10075D4DC, (uint64_t)&unk_10127B958);
}

void sub_10075D4E0(uint64_t a1)
{
  uint64_t v1;

  sub_10075B6FC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_10127B990, (uint64_t)sub_10075D4DC, (uint64_t)&unk_10127B9A8);
}

uint64_t sub_10075D514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EF328);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10075D578()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013EF328);
  return CheckedContinuation.resume(returning:)(v0, v0);
}

uint64_t sub_10075D5B8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10075D5EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013F05F4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_10075B29C(a1, v4, v5, v7, v6);
}

uint64_t storeEnumTagSinglePayload for CRLiOSExportAsPDFActivityHelper.TemporaryFileError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10075D6A4 + 4 * byte_100F08810[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10075D6C4 + 4 * byte_100F08815[v4]))();
}

_BYTE *sub_10075D6A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10075D6C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10075D6CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10075D6D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10075D6DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10075D6E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSExportAsPDFActivityHelper.TemporaryFileError()
{
  return &type metadata for CRLiOSExportAsPDFActivityHelper.TemporaryFileError;
}

unint64_t sub_10075D704()
{
  unint64_t result;

  result = qword_1013F0600;
  if (!qword_1013F0600)
  {
    result = swift_getWitnessTable(&unk_100F088C0, &type metadata for CRLiOSExportAsPDFActivityHelper.TemporaryFileError);
    atomic_store(result, (unint64_t *)&qword_1013F0600);
  }
  return result;
}

void *sub_10075D770()
{
  void *result;

  result = (void *)sub_1008E03B4((uint64_t)_swiftEmptyArrayStorage);
  off_1013F0610 = result;
  return result;
}

char *sub_10075D794(void *a1, void *a2, id a3)
{
  uint64_t v3;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  char *result;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  BOOL v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  _QWORD v39[3];
  _QWORD v40[3];

  v6 = objc_msgSend(a3, "computeCommandEncoder");
  if (!v6)
  {
    v8 = sub_10075DCE0();
    swift_allocError(&_s16TextureResamplerC14ResamplerErrorON, v8, 0, 0);
    *(_OWORD *)v9 = xmmword_100EFA5D0;
    *(_BYTE *)(v9 + 16) = 2;
    return (char *)swift_willThrow((__n128)xmmword_100EFA5D0);
  }
  v7 = v6;
  if (*(_BYTE *)(v3 + 32) == 1)
  {
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRetain(a2);
  }
  else
  {
    v11 = objc_msgSend(a1, "newTextureViewWithPixelFormat:", 80);
    if (!v11)
    {
      v25 = objc_msgSend(a1, "description");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = sub_10075DCE0();
      swift_allocError(&_s16TextureResamplerC14ResamplerErrorON, v29, 0, 0);
      *(_QWORD *)v30 = v26;
      *(_QWORD *)(v30 + 8) = v28;
      *(_BYTE *)(v30 + 16) = 1;
      swift_willThrow(v31);
      v24 = v7;
      return (char *)swift_unknownObjectRelease(v24);
    }
    v12 = v11;
    v13 = objc_msgSend(a2, "newTextureViewWithPixelFormat:", 80);
    if (!v13)
    {
      v32 = objc_msgSend(a2, "description");
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      v36 = sub_10075DCE0();
      swift_allocError(&_s16TextureResamplerC14ResamplerErrorON, v36, 0, 0);
      *(_QWORD *)v37 = v33;
      *(_QWORD *)(v37 + 8) = v35;
      *(_BYTE *)(v37 + 16) = 1;
      swift_willThrow(v38);
      swift_unknownObjectRelease(v7);
      v24 = v12;
      return (char *)swift_unknownObjectRelease(v24);
    }
    a2 = v13;
    a1 = v12;
  }
  v14 = *(void **)(v3 + 24);
  objc_msgSend(v7, "setComputePipelineState:", v14);
  objc_msgSend(v7, "setTexture:atIndex:", a1, 0);
  objc_msgSend(v7, "setTexture:atIndex:", a2, 1);
  v15 = (uint64_t)objc_msgSend(v14, "threadExecutionWidth");
  result = (char *)objc_msgSend(v14, "maxTotalThreadsPerThreadgroup");
  if (!v15)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = (uint64_t)result;
  if (result == (char *)0x8000000000000000 && v15 == -1)
    goto LABEL_30;
  v17 = (char *)objc_msgSend(a2, "width");
  result = (char *)objc_msgSend(a2, "height");
  v18 = &v17[v15];
  if (__OFADD__(v17, v15))
    goto LABEL_25;
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v20 == (char *)0x8000000000000000 && v15 == -1)
    goto LABEL_31;
  v21 = v16 / v15;
  v22 = &result[v16 / v15];
  if (__OFADD__(result, v16 / v15))
    goto LABEL_27;
  v19 = __OFSUB__(v22, 1);
  v23 = v22 - 1;
  if (v19)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (!v21)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v23 != (char *)0x8000000000000000 || v21 != -1)
  {
    v40[0] = (uint64_t)v20 / v15;
    v40[1] = (uint64_t)v23 / v21;
    v40[2] = 1;
    v39[0] = v15;
    v39[1] = v16 / v15;
    v39[2] = 1;
    objc_msgSend(v7, "dispatchThreadgroups:threadsPerThreadgroup:", v40, v39);
    objc_msgSend(v7, "endEncoding");
    swift_unknownObjectRelease(v7);
    swift_unknownObjectRelease(a1);
    v24 = a2;
    return (char *)swift_unknownObjectRelease(v24);
  }
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_10075DAE4(uint64_t a1, uint64_t a2, char a3)
{
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  unint64_t v11;
  _QWORD v12[3];
  _BYTE v13[8];
  unint64_t v14;
  unint64_t v15;

  if (!a3)
  {
    swift_errorRetain(a1);
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease(0xE000000000000000);
    v14 = 0xD000000000000028;
    v15 = 0x8000000100FCE7E0;
    swift_getErrorValue(a1, v13, v12);
    v7._countAndFlagsBits = Error.localizedDescription.getter(v12[1], v12[2]);
    object = v7._object;
    String.append(_:)(v7);
    swift_bridgeObjectRelease(object);
    v9._countAndFlagsBits = 46;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    sub_10075E0C8(a1, a2, 0);
    return v14;
  }
  if (a3 == 1)
  {
    _StringGuts.grow(_:)(46);
    swift_bridgeObjectRelease(0xE000000000000000);
    v14 = 0xD00000000000002BLL;
    v15 = 0x8000000100FCE7B0;
    v5._countAndFlagsBits = a1;
    v5._object = (void *)a2;
    String.append(_:)(v5);
    v6._countAndFlagsBits = 46;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    return v14;
  }
  if (a1 ^ 1 | a2)
    v11 = 0xD00000000000002CLL;
  else
    v11 = 0xD000000000000029;
  if (a1 | a2)
    return v11;
  else
    return 0xD00000000000001DLL;
}

unint64_t sub_10075DC84()
{
  uint64_t v0;

  return sub_10075DAE4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_10075DC94()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t _s16TextureResamplerCMa()
{
  return objc_opt_self(_TtCOO8Freeform15CRLUSDRendering6CoreRE16TextureResampler);
}

unint64_t sub_10075DCE0()
{
  unint64_t result;

  result = qword_1013F06C8;
  if (!qword_1013F06C8)
  {
    result = swift_getWitnessTable(&unk_100F089D0, &_s16TextureResamplerC14ResamplerErrorON);
    atomic_store(result, (unint64_t *)&qword_1013F06C8);
  }
  return result;
}

uint64_t sub_10075DD24(void *a1)
{
  id v2;
  void *v3;
  char v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  id v28;
  int v29;

  v2 = objc_msgSend(a1, "newDefaultLibrary");
  if (v2)
  {
    v3 = v2;
    MTLPixelFormatGetInfoForDevice(&v28, a1, 81);
    v4 = v29;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v3, "newFunctionWithName:", v5);

    if (v6)
    {
      v28 = 0;
      v7 = objc_msgSend(a1, "newComputePipelineStateWithFunction:error:", v6, &v28);
      v8 = v28;
      if (v7)
      {
        v9 = v7;
        v10 = v28;
        swift_unknownObjectRelease(v3);
        swift_unknownObjectRelease(v6);
        v11 = _s16TextureResamplerCMa();
        v12 = swift_allocObject(v11, 33, 7);
        *(_QWORD *)(v12 + 16) = a1;
        *(_QWORD *)(v12 + 24) = v9;
        *(_BYTE *)(v12 + 32) = (v4 & 2) != 0;
        swift_unknownObjectRetain(a1);
      }
      else
      {
        v20 = v28;
        v21 = _convertNSErrorToError(_:)(v8);

        swift_willThrow(v22);
        v23 = sub_10075DCE0();
        v24 = swift_allocError(&_s16TextureResamplerC14ResamplerErrorON, v23, 0, 0);
        *(_QWORD *)v25 = v21;
        *(_QWORD *)(v25 + 8) = 0;
        *(_BYTE *)(v25 + 16) = 0;
        swift_errorRetain(v21);
        v12 = v24;
        swift_willThrow(v26);
        swift_unknownObjectRelease(v3);
        swift_unknownObjectRelease(v6);
        swift_errorRelease(v21);
      }
    }
    else
    {
      v17 = sub_10075DCE0();
      v18 = swift_allocError(&_s16TextureResamplerC14ResamplerErrorON, v17, 0, 0);
      *(_OWORD *)v19 = xmmword_100F02C20;
      *(_BYTE *)(v19 + 16) = 2;
      v12 = v18;
      swift_willThrow((__n128)xmmword_100F02C20);
      swift_unknownObjectRelease(v3);
    }
  }
  else
  {
    v13 = sub_10075DCE0();
    v14 = swift_allocError(&_s16TextureResamplerC14ResamplerErrorON, v13, 0, 0);
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_BYTE *)(v15 + 16) = 2;
    v12 = v14;
    swift_willThrow(v16);
  }
  return v12;
}

uint64_t sub_10075DF58(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  void *v9;
  _BYTE v11[24];
  void *v12;

  if (qword_1013DD020 != -1)
    swift_once(&qword_1013DD020, sub_10075D770);
  swift_beginAccess(&off_1013F0610, v11, 32, 0);
  v4 = off_1013F0610;
  if (*((_QWORD *)off_1013F0610 + 2) && (v5 = sub_100842E60((uint64_t)a1), (v6 & 1) != 0))
  {
    v2 = *(_QWORD *)(v4[7] + 8 * v5);
    swift_endAccess(v11);
    swift_retain(v2);
  }
  else
  {
    swift_endAccess(v11);
    v7 = sub_10075DD24(a1);
    if (!v1)
    {
      v2 = v7;
      swift_beginAccess(&off_1013F0610, v11, 33, 0);
      swift_retain(v2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1013F0610);
      v12 = off_1013F0610;
      off_1013F0610 = (_UNKNOWN *)0x8000000000000000;
      sub_100827F20(v2, (uint64_t)a1, isUniquelyReferenced_nonNull_native);
      v9 = off_1013F0610;
      off_1013F0610 = v12;
      swift_bridgeObjectRelease(v9);
      swift_endAccess(v11);
    }
  }
  return v2;
}

uint64_t sub_10075E098(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRetain(a2);
  if (!a3)
    return swift_errorRetain(result);
  return result;
}

uint64_t _s16TextureResamplerC14ResamplerErrorOwxx(uint64_t a1)
{
  return sub_10075E0C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_10075E0C8(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRelease(a2);
  if (!a3)
    return swift_errorRelease(result);
  return result;
}

uint64_t _s16TextureResamplerC14ResamplerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10075E098(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s16TextureResamplerC14ResamplerErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10075E098(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10075E0C8(v6, v7, v8);
  return a1;
}

uint64_t _s16TextureResamplerC14ResamplerErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10075E0C8(v4, v5, v6);
  return a1;
}

ValueMetadata *_s16TextureResamplerC14ResamplerErrorOMa()
{
  return &_s16TextureResamplerC14ResamplerErrorON;
}

char *sub_10075E360(char *a1, char *a2, char *a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  __n128 v28;
  objc_class *v29;
  char *v30;
  void *Strong;
  char *v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;
  char *v49;
  void *v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  objc_super v59;

  v4 = v3;
  v56 = a2;
  v57 = a3;
  v58 = a1;
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v4[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController] = 0;
  v20 = v4;
  v55 = v6;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v21 = v5;
    sub_1004B8688((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v21 = v5;
    v22 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions] = v22;
  v23 = OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates;
  *(_QWORD *)&v20[v23] = sub_1008D7278((uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectWeakAssign(v19, v58);
  v25 = static Date.now.getter(v24);
  v26 = Date.timeIntervalSince1970.getter(v25);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *(double *)&v20[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_lastStrokeTimestamp] = v26;
  v27 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static OS_dispatch_queue.Attributes.concurrent.getter(v27);
  static DispatchQoS.unspecified.getter(v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressionsQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000043, 0x8000000100FCED00, v11, v14, v8, 0);
  v20[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_isPresentingPopoverUI] = 0;
  v20[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_shouldCallEditMenuTapForRep] = 0;

  v29 = (objc_class *)type metadata accessor for CRLMathRecognitionItemsHandler();
  v59.receiver = v20;
  v59.super_class = v29;
  v30 = (char *)objc_msgSendSuper2(&v59, "init");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v30[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep]);
  v32 = v30;
  v33 = v56;
  if (Strong)
  {
    v34 = objc_msgSend(Strong, "pkRecognitionController");
    if (v34)
    {
      v35 = v34;
      v36 = sub_100761B4C();
      if (v36)
      {
        v37 = v36;
        objc_msgSend(v35, "setCalculateDocumentProvider:", v36);

        swift_unknownObjectRelease(v37);
      }
      else
      {

      }
    }
    else
    {

    }
  }
  v38 = (char *)objc_msgSend(v58, "pkMathRecognitionController", v55);
  if (v38)
  {
    v39 = v38;
    v40 = objc_msgSend(objc_allocWithZone((Class)PKMathRecognitionViewController), "initWithController:view:delegate:", v38, v33, v32);
    v41 = OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController;
    v42 = *(void **)&v32[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController];
    *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController] = v40;

    v43 = (void *)objc_opt_self(NSNotificationCenter);
    v44 = objc_msgSend(v43, "defaultCenter");
    v45 = qword_1013DD250;
    v46 = v32;
    if (v45 != -1)
      swift_once(&qword_1013DD250, sub_100840384);
    objc_msgSend(v44, "addObserver:selector:name:object:", v46, "mathHintsModeChanged:", static CRLMathCalculationController.mathHintsModeChangedNotificationName, 0);

    v47 = objc_msgSend(v43, "defaultCenter");
    v48 = qword_1013DD610;
    v49 = v46;
    if (v48 != -1)
      swift_once(&qword_1013DD610, sub_1009A3FC8);
    objc_msgSend(v47, "addObserver:selector:name:object:", v49, "deviceManagementRestrictionsChanged:", static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName, 0);

    sub_10075E8D8();
    v50 = *(void **)&v32[v41];
    if (v50)
    {
      v51 = v50;
      v52 = v57;
      objc_msgSend(v51, "setViewControllerForPresentingUI:", v57);

      v53 = v33;
      v33 = v58;
      v58 = v49;
    }
    else
    {
      v52 = v39;
      v39 = v49;
      v53 = v57;
    }

  }
  else
  {
    v39 = v32;
    v53 = v57;
  }

  return v32;
}

void sub_10075E8D8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  id v7;
  unint64_t v8;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "interactiveCanvasController");

    if (v3)
    {
      v7 = objc_msgSend(v3, "mathCalculationController");

      if (v7)
      {
        v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController);
        if (!v4)
        {
LABEL_7:

          return;
        }
        v5 = v4;
        v6 = -[CRLMathCalculationController mathHintsMode]_0();
        if (v6 < 3)
        {
          objc_msgSend(v5, "setSolvingStyle:", 2 - v6);

          goto LABEL_7;
        }
        v8 = v6;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLMathHintsMode, &v8, &type metadata for CRLMathHintsMode, &type metadata for Int);
        __break(1u);
      }
    }
  }
}

uint64_t sub_10075E9E8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v7 = sub_1004B804C(&qword_1013E0220);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v12 = type metadata accessor for Notification(0, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    v13 = type metadata accessor for Notification(0, v8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  v14 = a1;
  a4();

  return sub_1004CB800((uint64_t)v10, &qword_1013E0220);
}

void sub_10075EAF8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *Strong;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  void *v32;
  void *v33;
  id v34;
  unint64_t v35;
  id v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  __n128 v48;
  char *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id *v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  unsigned int v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  id v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD aBlock[5];
  uint64_t v79;
  char v80[24];
  char v81;
  uint64_t v82;

  v3 = type metadata accessor for DispatchQoS(0);
  v75 = *(_QWORD *)(v3 - 8);
  v76 = v3;
  __chkstk_darwin(v3);
  v68 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for DispatchWorkItemFlags(0);
  v73 = *(_QWORD *)(v74 - 8);
  v5 = __chkstk_darwin(v74);
  v67 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for CalculateExpression.Base(0, v5);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v69 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v1;
  v10 = &v1[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep]);
  if (!Strong
    || (v12 = Strong,
        v13 = objc_msgSend(Strong, "interactiveCanvasController"),
        v12,
        !v13)
    || (v14 = objc_msgSend(v13, "mathCalculationController"),
        v13,
        (v66 = v14) == 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertExpressionsIntoCalcDoc(pkExpressions:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2, 77, "Could not retrieve a mathCalculationController instance", 55, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertExpressionsIntoCalcDoc(pkExpressions:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2u, 77, (uint64_t)"Could not retrieve a mathCalculationController instance", 55, 2u);
    return;
  }
  v65 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", 1);
  if ((unint64_t)a1 >> 62)
  {
LABEL_21:
    if (a1 < 0)
      v56 = a1;
    else
      v56 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v56);
    if (v15)
      goto LABEL_6;
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v15)
    {
LABEL_6:
      v63 = *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressionsQueue];
      v64 = a1 & 0xC000000000000001;
      v16 = 4;
      v62 = (void *)CalculateKeyFormat;
      v61 = enum case for CalculateExpression.Base.base10(_:);
      v60 = xmmword_100EF5E40;
      v59 = a1;
      v58 = v15;
      while (1)
      {
        if (v64)
          v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a1);
        else
          v24 = *(id *)(a1 + 8 * v16);
        v25 = v24;
        a1 = v16 - 3;
        if (__OFADD__(v16 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        v26 = objc_msgSend(v24, "expression");
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        v30 = sub_1004B804C(&qword_1013F07E8);
        inited = swift_initStackObject(v30, v80);
        *(_OWORD *)(inited + 16) = v60;
        v32 = v62;
        *(_QWORD *)(inited + 32) = v62;
        *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
        v33 = v65;
        *(_QWORD *)(inited + 40) = v65;
        v34 = v32;
        v57[1] = v33;
        v35 = sub_1008D7418(inited);
        v36 = objc_msgSend(v25, "uuid");
        v37 = v10;
        v38 = v69;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v36);

        v39 = v70;
        (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, v61, v72);
        v40 = type metadata accessor for CalculateExpression(0);
        swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
        v41 = v38;
        v10 = v37;
        v42 = CalculateExpression.init(_:options:base:id:)(v27, v29, v35, v39, v41);
        v43 = v67;
        static DispatchWorkItemFlags.barrier.getter();
        v44 = swift_allocObject(&unk_10127BE68, 32, 7);
        v45 = v77;
        *(_QWORD *)(v44 + 16) = v77;
        *(_QWORD *)(v44 + 24) = v42;
        aBlock[4] = sub_10076377C;
        v79 = v44;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_10127BE80;
        v46 = _Block_copy(aBlock);
        v47 = v45;
        v48 = swift_retain(v42);
        v49 = v68;
        static DispatchQoS.unspecified.getter(v48);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v49, v43, v46);
        _Block_release(v46);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v76);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v74);
        swift_release(v79);
        v50 = (void *)swift_unknownObjectWeakLoadStrong(v10);
        if (v50)
        {
          v51 = v50;
          v52 = objc_msgSend(v50, "layout");

          v53 = objc_msgSend(v52, "pureGeometryInRoot");
          if (!v53)
          {
            __break(1u);
            return;
          }
          objc_msgSend(v53, "frame");

        }
        v54 = (void *)swift_unknownObjectWeakLoadStrong(v10);
        if (v54)
        {
          v17 = v54;
          v18 = objc_msgSend(v54, "layout");

        }
        else
        {
          v18 = 0;
        }
        objc_msgSend(v25, "sortIndex");
        v20 = v19;
        v21 = swift_allocObject(&unk_10127BDC8, 24, 7);
        swift_unknownObjectWeakInit(v21 + 16);
        v22 = swift_allocObject(&unk_10127BEB8, 32, 7);
        *(_QWORD *)(v22 + 16) = v21;
        *(_QWORD *)(v22 + 24) = v42;
        swift_retain(v42);
        swift_retain(v21);
        CRLMathCalculationController.beginTrackingResultsFor(expression:parentDrawingLayout:withSingleDrawingSortIndex:onUpdate:)(v42, (uint64_t)v18, (uint64_t)sub_1007637B0, v22, v20);

        swift_release(v42);
        swift_release(v21);
        swift_release(v22);

        ++v16;
        v23 = a1 == v58;
        a1 = v59;
        if (v23)
        {
          v55 = (id *)&v81;
          goto LABEL_26;
        }
      }
    }
  }
  v55 = (id *)&v82;
LABEL_26:

  swift_bridgeObjectRelease(a1);
}

void sub_10075F214(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  char *v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  _BOOL4 v19;
  void *v20;
  id v21;
  __n128 v22;
  Class isa;
  _BYTE v25[24];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v25[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (char *)Strong;
    objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", Strong, "updateCalculateDocumentProvider", 0);
    objc_msgSend(v11, "performSelector:withObject:afterDelay:", "updateCalculateDocumentProvider", 0, 0.1);
    sub_100760338();
    v12 = ((uint64_t (*)(void))CalculateExpression.result.getter)();
    if (v12)
    {
      v14 = (void *)v12;
      v15 = CalculateExpression.id.getter(v13);
      v16 = (void *)CalculateExpression.result.getter(v15);
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, "unitType");

        v19 = v18 == (id)16;
      }
      else
      {
        v19 = 0;
      }
      sub_10075F474(v14, (uint64_t)v9, v19);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
    else
    {
      v20 = *(void **)&v11[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController];
      if (v20)
      {
        v21 = v20;
        CalculateExpression.id.getter(v22);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v21, "mathResult:itemUUID:", 0, isa);

      }
    }
  }
}

uint64_t sub_10075F474(void *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  double **v30;
  char isUniquelyReferenced_nonNull_native;
  double *v32;
  __n128 v33;
  __n128 v34;
  void *v35;
  _BYTE *v36;
  __n128 v37;
  _BYTE *v38;
  double (*v39)(_BYTE *, uint64_t);
  _BYTE *v40;
  uint64_t v41;
  __n128 v42;
  _BYTE v44[12];
  int v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  double *v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v47 = a2;
  v45 = a3;
  v5 = type metadata accessor for DispatchTime(0);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  __chkstk_darwin(v5);
  v50 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v49 = &v44[-v8];
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v9);
  v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100760264(a2);
  v16 = swift_allocObject(&unk_10127BDC8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v46 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v46(v15, a2, v12);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = v18 + v14;
  v20 = swift_allocObject(&unk_10127BDF0, v19 + 1, v17 | 7);
  *(_QWORD *)(v20 + 16) = v16;
  *(_QWORD *)(v20 + 24) = a1;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(v20 + v18, v15, v12);
  *(_BYTE *)(v20 + v19) = v45;
  aBlock[4] = sub_1007635EC;
  v55 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10127BE08;
  v21 = _Block_copy(aBlock);
  v53 = _swiftEmptyArrayStorage;
  v22 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v16);
  v23 = a1;
  v24 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v25 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v53, v24, v25, v9, v22);
  v26 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = DispatchWorkItem.init(flags:block:)(v11, v21);
  v28 = v55;
  swift_release(v16);
  v29 = swift_release(v28);
  ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v46)(v15, v47, v12, v29);
  v30 = (double **)(v48 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates);
  swift_beginAccess(v48 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates, aBlock, 33, 0);
  swift_retain(v27);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
  v53 = *v30;
  *v30 = (double *)0x8000000000000000;
  sub_100828748(v27, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  v32 = *v30;
  *v30 = v53;
  v33 = swift_bridgeObjectRelease(v32);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v13 + 8))(v15, v12, v33);
  swift_endAccess(aBlock);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v35 = (void *)static OS_dispatch_queue.main.getter(v34);
  v36 = v50;
  static DispatchTime.now()(v37);
  v38 = v49;
  + infix(_:_:)(v36, 0.01);
  v39 = *(double (**)(_BYTE *, uint64_t))(v51 + 8);
  v40 = v36;
  v41 = v52;
  v42.n128_f64[0] = v39(v40, v52);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v38, v27, v42);
  swift_release(v27);

  return ((uint64_t (*)(_BYTE *, uint64_t))v39)(v38, v41);
}

void sub_10075F834(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  char *v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  Class v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38[24];

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v16 = (char *)Strong;
    v37 = a4;
    v17 = objc_msgSend(a2, "formattedResult");
    if (!v17)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v19 = v18;
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
    }
    v20 = OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController;
    v21 = *(void **)&v16[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController];
    v36 = a3;
    if (v21)
    {
      v22 = v21;
      v23 = v8;
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "mathResult:itemUUID:", v17, isa);

      v17 = isa;
      v8 = v23;
    }

    if ((v37 & 1) != 0)
    {
      v25 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v8);
      type metadata accessor for MainActor(0);
      v26 = v16;
      v27 = static MainActor.shared.getter(v26);
      v28 = *(unsigned __int8 *)(v9 + 80);
      v29 = (v28 + 40) & ~v28;
      v30 = (char *)swift_allocObject(&unk_10127BE40, v29 + v10, v28 | 7);
      *((_QWORD *)v30 + 2) = v27;
      *((_QWORD *)v30 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v30 + 4) = v26;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v30[v29], v11, v8);
      v31 = sub_100521B98((uint64_t)v14, (uint64_t)&unk_1013F07D0, (uint64_t)v30);

      swift_release(v31);
    }
    else
    {
      v32 = *(void **)&v16[v20];
      if (v32)
      {
        v33 = v32;
        if ((objc_msgSend(v33, "respondsToSelector:", "mathResultAttributionImage:darkModeImage:string:date:itemUUID:") & 1) != 0)
        {
          v34 = UUID._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v33, "mathResultAttributionImage:darkModeImage:string:date:itemUUID:", 0, 0, 0, 0, v34);

        }
        else
        {

        }
      }

    }
  }
}

uint64_t sub_10075FAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[4] = swift_task_alloc(v6);
  v5[5] = swift_task_alloc(v6);
  v7 = sub_1004B804C(&qword_1013F07E0);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[7] = v8;
  v5[8] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[9] = v9;
  v5[10] = v10;
  return swift_task_switch(sub_10075FBAC, v9, v10);
}

uint64_t sub_10075FBAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  if (qword_1013DD698 != -1)
    swift_once(&qword_1013DD698, sub_1009EC40C);
  v3 = (uint64_t (__cdecl *)())((char *)&dword_101401020 + dword_101401020);
  v1 = (_QWORD *)swift_task_alloc(unk_101401024);
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_10075FC34;
  return v3();
}

uint64_t sub_10075FC34(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = a1;
  swift_task_dealloc(v4);
  v7 = v3 + 72;
  v6 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD *)(v7 + 8);
  v8 = a1;
  return swift_task_switch(sub_10075FC9C, v6, v5);
}

uint64_t sub_10075FC9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_101401000 + dword_101401000);
  v1 = (_QWORD *)swift_task_alloc(unk_101401004);
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_10075FCFC;
  return v3();
}

uint64_t sub_10075FCFC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = a1;
  swift_task_dealloc(v4);
  v7 = v3 + 72;
  v6 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD *)(v7 + 8);
  v8 = a1;
  return swift_task_switch(sub_10075FD64, v6, v5);
}

uint64_t sub_10075FD64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[7];
  v1[15] = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[16] = v3;
  v1[17] = v4;
  return swift_task_switch(sub_10075FDC4, v3, v4);
}

uint64_t sub_10075FDC4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[18] = type metadata accessor for StocksKitCurrencyCache(0);
  v0[19] = static StocksKitCurrencyCache.shared.getter();
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to StocksKitCurrencyCache.provider.getter + 1));
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_10075FE30;
  return StocksKitCurrencyCache.provider.getter(v0[6]);
}

uint64_t sub_10075FE30()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 152);
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));

  return swift_task_switch(sub_10075FE80, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_10075FE80()
{
  uint64_t *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[6];
  v2 = swift_release(v0[15]);
  v3 = type metadata accessor for StocksKitCurrencyCache.Provider(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_1004CB800(v0[6], &qword_1013F07E0);
    v7 = 0;
    v8 = 0;
  }
  else
  {
    v7 = StocksKitCurrencyCache.Provider.name.getter();
    v8 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v0[21] = v7;
  v0[22] = v8;
  return swift_task_switch(sub_10075FF38, v0[9], v0[10]);
}

uint64_t sub_10075FF38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[7];
  v1[23] = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[24] = v3;
  v1[25] = v4;
  return swift_task_switch(sub_10075FF98, v3, v4);
}

uint64_t sub_10075FF98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v0[26] = static StocksKitCurrencyCache.shared.getter();
  v3 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of StocksKitCurrencyCache.lastRefreshDate.getter
                                      + async function pointer to dispatch thunk of StocksKitCurrencyCache.lastRefreshDate.getter);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of StocksKitCurrencyCache.lastRefreshDate.getter
                                  + 1));
  v0[27] = v1;
  *v1 = v0;
  v1[1] = sub_100760008;
  return v3(v0[5]);
}

uint64_t sub_100760008()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));

  return swift_task_switch(sub_100760058, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_100760058()
{
  _QWORD *v0;

  swift_release(v0[23]);
  return swift_task_switch(sub_100760090, v0[9], v0[10]);
}

uint64_t sub_100760090()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  Class v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController);
  if (!v2)
  {
    v5 = *(_QWORD *)(v0 + 176);
    v7 = *(void **)(v0 + 112);
    v8 = *(void **)(v0 + 96);
    sub_1004CB800(*(_QWORD *)(v0 + 40), &qword_1013E04F0);

LABEL_7:
    swift_bridgeObjectRelease(v5);
    goto LABEL_12;
  }
  v3 = v2;
  v4 = objc_msgSend(v3, "respondsToSelector:", "mathResultAttributionImage:darkModeImage:string:date:itemUUID:");
  v5 = *(_QWORD *)(v0 + 176);
  if ((v4 & 1) == 0)
  {
    v9 = *(void **)(v0 + 112);
    v10 = *(void **)(v0 + 96);
    sub_1004CB800(*(_QWORD *)(v0 + 40), &qword_1013E04F0);

    goto LABEL_7;
  }
  if (v5)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  v11 = *(_QWORD *)(v0 + 32);
  sub_1004E1F60(*(_QWORD *)(v0 + 40), v11);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v15 = *(_QWORD *)(v0 + 32);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  }
  v16 = *(void **)(v0 + 112);
  v17 = *(void **)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 40);
  v19 = UUID._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "mathResultAttributionImage:darkModeImage:string:date:itemUUID:", v17, v16, v6, isa, v19);

  sub_1004CB800(v18, &qword_1013E04F0);
LABEL_12:
  v20 = *(_QWORD *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100760264(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates);
  *(_QWORD *)&result = swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates, v12, 0, 0).n128_u64[0];
  v5 = *v3;
  if (*(_QWORD *)(*v3 + 16))
  {
    swift_bridgeObjectRetain(*v3);
    v6 = sub_100842EFC(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_retain(v8);
      swift_bridgeObjectRelease(v5);
      swift_beginAccess(v3, v11, 33, 0);
      v9 = sub_100847B40(a1);
      swift_endAccess(v11);
      v10 = swift_release(v9);
      dispatch thunk of DispatchWorkItem.cancel()(v10);
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
    }
  }
  return result;
}

void sub_100760338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void *Strong;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  double *v15;
  Class isa;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter(v4);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (Strong
    && (v8 = Strong,
        v9 = objc_msgSend(Strong, "interactiveCanvasController"),
        v8,
        v9)
    && (v10 = objc_msgSend(v9, "mathCalculationController"), v9, v10))
  {
    sub_1008420BC((uint64_t)v6);
    v12 = v11;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v12)
    {
      v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController);
      if (v13)
      {
        v14 = v13;
        v15 = sub_10083F4A0();
        sub_1004B8930(0, (unint64_t *)&unk_1013F07B8, PKMathRecognitionToken_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v14, "setTokens:forItem:", isa, v12, swift_bridgeObjectRelease(v15).n128_f64[0]);

      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

void sub_1007604C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *Strong;
  void *v32;
  id v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  double (*v68)(uint64_t, uint64_t);
  __n128 v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  double (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  char *v92;
  char *v93;
  __n128 v94;
  uint64_t v95;
  __n128 v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char *v101;
  __n128 v102;
  char *v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  void (*v127)(char *, uint64_t);
  void (*v128)(uint64_t, char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  char *v133;
  uint64_t v134;
  double (*v135)(char *, uint64_t, __n128);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 aBlock;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  char v147[8];
  char v148[8];
  _QWORD v149[5];

  v1 = v0;
  v134 = type metadata accessor for DispatchQoS(0);
  v123 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v122 = (char *)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for DispatchWorkItemFlags(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for UUID(0);
  v125 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v117 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v116 = (char *)&v108 - v6;
  __chkstk_darwin(v7);
  v133 = (char *)&v108 - v8;
  v118 = v9;
  __chkstk_darwin(v10);
  v124 = (char *)&v108 - v11;
  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willBeRemoved()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2, 158, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willBeRemoved()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2u, 158, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, "updateCalculateDocumentProvider", 0);
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_pendingDisplayUpdates, v148, 1, 0);
  v13 = *v12;
  v14 = *v12 + 64;
  v15 = 1 << *(_BYTE *)(*v12 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(*v12 + 64);
  v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(*v12);
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_7;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_78;
    }
    if (v24 >= v18)
      goto LABEL_25;
    v25 = *(_QWORD *)(v14 + 8 * v24);
    ++v19;
    if (!v25)
    {
      v19 = v24 + 1;
      if (v24 + 1 >= v18)
        goto LABEL_25;
      v25 = *(_QWORD *)(v14 + 8 * v19);
      if (!v25)
      {
        v19 = v24 + 2;
        if (v24 + 2 >= v18)
          goto LABEL_25;
        v25 = *(_QWORD *)(v14 + 8 * v19);
        if (!v25)
        {
          v19 = v24 + 3;
          if (v24 + 3 >= v18)
            goto LABEL_25;
          v25 = *(_QWORD *)(v14 + 8 * v19);
          if (!v25)
            break;
        }
      }
    }
LABEL_24:
    v17 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21);
    v23 = swift_retain(v22);
    dispatch thunk of DispatchWorkItem.cancel()(v23);
    swift_release(v22);
  }
  v26 = v24 + 4;
  if (v26 < v18)
  {
    v25 = *(_QWORD *)(v14 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        v19 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v19 >= v18)
          goto LABEL_25;
        v25 = *(_QWORD *)(v14 + 8 * v19);
        ++v26;
        if (v25)
          goto LABEL_24;
      }
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      return;
    }
    v19 = v26;
    goto LABEL_24;
  }
LABEL_25:
  swift_release(v13);
  v27 = *v12;
  *v12 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v27);
  v28 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v28, "removeObserver:", v1);

  sub_100762700();
  v30 = v29;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (!Strong
    || (v32 = Strong,
        v33 = objc_msgSend(Strong, "interactiveCanvasController"),
        v32,
        !v33)
    || (v34 = (char *)objc_msgSend(v33, "mathCalculationController"),
        v33,
        !v34))
  {
    *(_QWORD *)&v43 = swift_bridgeObjectRelease(v30).n128_u64[0];
    goto LABEL_76;
  }
  v109 = v1;
  if ((v30 & 0xC000000000000001) != 0)
  {
    if (v30 < 0)
      v36 = v30;
    else
      v36 = v30 & 0xFFFFFFFFFFFFFF8;
    v37 = __CocoaSet.makeIterator()(v36);
    v38 = type metadata accessor for CalculateExpression(0);
    v39 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    v35 = Set.Iterator.init(_cocoa:)(v149, v37, v38, v39);
    v30 = v149[0];
    v113 = v149[1];
    v40 = v149[2];
    v41 = v149[3];
    v42 = v149[4];
  }
  else
  {
    v41 = 0;
    v44 = -1 << *(_BYTE *)(v30 + 32);
    v45 = *(_QWORD *)(v30 + 56);
    v113 = v30 + 56;
    v46 = ~v44;
    v47 = -v44;
    if (v47 < 64)
      v48 = ~(-1 << v47);
    else
      v48 = -1;
    v42 = v48 & v45;
    v40 = v46;
  }
  v49 = v125;
  v50 = (uint64_t)v124;
  v111 = v30 & 0x7FFFFFFFFFFFFFFFLL;
  v108 = v40;
  v112 = (unint64_t)(v40 + 64) >> 6;
  v51 = &unk_1013F5000;
  v110 = (char *)&type metadata for Swift.AnyObject + 8;
  v115 = v30;
  v114 = v34;
  while (2)
  {
    if (v30 < 0)
    {
      v54 = __CocoaSet.Iterator.next()(v35);
      if (!v54)
        goto LABEL_75;
      v55 = v54;
      v141 = v54;
      v56 = type metadata accessor for CalculateExpression(0);
      swift_unknownObjectRetain(v55);
      swift_dynamicCast(&aBlock, &v141, v110, v56, 7);
      v57 = aBlock;
      v58 = swift_unknownObjectRelease(v55);
      v53 = v41;
      v136 = v42;
      if (!v57)
        goto LABEL_75;
      goto LABEL_62;
    }
    if (v42)
    {
      v136 = (v42 - 1) & v42;
      v52 = __clz(__rbit64(v42)) | (v41 << 6);
      v53 = v41;
LABEL_61:
      v57 = *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * v52);
      v58 = swift_retain(v57);
      if (!v57)
        goto LABEL_75;
LABEL_62:
      v139 = v53;
      v138 = v57;
      CalculateExpression.id.getter(v58);
      v62 = &v34[v51[129]];
      swift_beginAccess(v62, v147, 0, 0);
      v63 = *(_QWORD *)v62;
      if (*(_QWORD *)(*(_QWORD *)v62 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)v62);
        v64 = sub_100842EFC(v50);
        if ((v65 & 1) != 0)
        {
          sub_10062E59C((_QWORD *)(*(_QWORD *)(v63 + 56) + 56 * v64), &aBlock);
        }
        else
        {
          v146 = 0;
          v144 = 0u;
          v145 = 0u;
          aBlock = 0u;
        }
        swift_bridgeObjectRelease(v63);
      }
      else
      {
        v146 = 0;
        v144 = 0u;
        v145 = 0u;
        aBlock = 0u;
      }
      v41 = v139;
      v66 = v138;
      if ((_QWORD)aBlock)
      {
        sub_10062E59C(&aBlock, &v141);
        sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
        v67 = v142;
        swift_retain(v142);
        sub_1007634F4((uint64_t)&v141);
        v68 = *(double (**)(uint64_t, uint64_t))(v49 + 8);
        v69.n128_f64[0] = v68(v50, v137);
        v70 = (uint64_t)v133;
        CalculateExpression.id.getter(v69);
        v71 = (uint64_t *)&v34[v51[129]];
        swift_beginAccess(v71, &v141, 33, 0);
        v72 = *v71;
        swift_bridgeObjectRetain(*v71);
        v73 = sub_100842EFC(v70);
        v75 = v74;
        swift_bridgeObjectRelease(v72);
        if ((v75 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v71);
          v77 = *v71;
          v140 = *v71;
          *v71 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10083102C();
            v77 = v140;
          }
          v78 = v68;
          v68(*(_QWORD *)(v77 + 48) + *(_QWORD *)(v49 + 72) * v73, v137);
          v79 = v140;
          sub_10062E5D8(*(_QWORD *)(v140 + 56) + 56 * v73, (uint64_t)&aBlock);
          sub_10051C5BC(v73, v79);
          v80 = *v71;
          *v71 = v79;
          v81 = swift_bridgeObjectRelease(v80);
        }
        else
        {
          v146 = 0;
          v81 = 0uLL;
          v144 = 0u;
          v145 = 0u;
          aBlock = 0u;
          v78 = v68;
        }
        v135 = (double (*)(char *, uint64_t, __n128))v78;
        v82 = v137;
        ((void (*)(char *, uint64_t, __n128))v78)(v133, v137, v81);
        sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
        swift_endAccess(&v141);
        v83 = v116;
        v85 = CalculateExpression.id.getter(v84);
        v86 = v119;
        static DispatchWorkItemFlags.barrier.getter(v85);
        v132 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
        v129 = v67;
        v87 = v117;
        v132(v117, v83, v82);
        v88 = *(unsigned __int8 *)(v49 + 80);
        v89 = (v88 + 24) & ~v88;
        v131 = v89 + v118;
        v130 = v88 | 7;
        v90 = swift_allocObject(&unk_10127BD28, v89 + v118, v88 | 7);
        *(_QWORD *)(v90 + 16) = v34;
        v128 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
        v128(v90 + v89, v87, v82);
        *(_QWORD *)&v145 = sub_10076352C;
        *((_QWORD *)&v145 + 1) = v90;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
        *(_QWORD *)&v144 = sub_1005D2FC0;
        *((_QWORD *)&v144 + 1) = &unk_10127BD40;
        v91 = _Block_copy(&aBlock);
        v92 = v34;
        v93 = v122;
        static DispatchQoS.unspecified.getter(v94);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v93, v86, v91);
        _Block_release(v91);
        v127 = *(void (**)(char *, uint64_t))(v123 + 8);
        v127(v93, v134);
        v126 = *(void (**)(char *, uint64_t))(v120 + 8);
        v95 = v121;
        v126(v86, v121);
        v96 = swift_release(*((_QWORD *)&v145 + 1));
        v97.n128_f64[0] = v135(v83, v82, v96);
        v98 = CalculateExpression.id.getter(v97);
        static DispatchWorkItemFlags.barrier.getter(v98);
        v132(v87, v83, v82);
        v99 = swift_allocObject(&unk_10127BD78, v131, v130);
        *(_QWORD *)(v99 + 16) = v92;
        v128(v99 + v89, v87, v82);
        *(_QWORD *)&v145 = sub_10076353C;
        *((_QWORD *)&v145 + 1) = v99;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
        *(_QWORD *)&v144 = sub_1005D2FC0;
        *((_QWORD *)&v144 + 1) = &unk_10127BD90;
        v100 = _Block_copy(&aBlock);
        v101 = v92;
        static DispatchQoS.unspecified.getter(v102);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v93, v86, v100);
        _Block_release(v100);
        v103 = v93;
        v34 = v114;
        v127(v103, v134);
        v104 = v95;
        v49 = v125;
        v126(v86, v104);
        v105 = swift_release(*((_QWORD *)&v145 + 1));
        v135(v83, v82, v105);
        sub_100840E9C();
        swift_release(v129);
        v50 = (uint64_t)v124;
        v30 = v115;
        v51 = (_QWORD *)&unk_1013F5000;
        v41 = v139;
        v66 = v138;
      }
      else
      {
        sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v137);
      }
      swift_release(v66);
      v42 = v136;
      continue;
    }
    break;
  }
  v59 = v41 + 1;
  if (__OFADD__(v41, 1))
    goto LABEL_79;
  if (v59 >= v112)
    goto LABEL_75;
  v60 = *(_QWORD *)(v113 + 8 * v59);
  v53 = v41 + 1;
  if (v60)
    goto LABEL_60;
  v53 = v41 + 2;
  if (v41 + 2 >= v112)
    goto LABEL_75;
  v60 = *(_QWORD *)(v113 + 8 * v53);
  if (v60)
    goto LABEL_60;
  v53 = v41 + 3;
  if (v41 + 3 >= v112)
    goto LABEL_75;
  v60 = *(_QWORD *)(v113 + 8 * v53);
  if (v60)
    goto LABEL_60;
  v53 = v41 + 4;
  if (v41 + 4 >= v112)
    goto LABEL_75;
  v60 = *(_QWORD *)(v113 + 8 * v53);
  if (v60)
  {
LABEL_60:
    v136 = (v60 - 1) & v60;
    v52 = __clz(__rbit64(v60)) + (v53 << 6);
    goto LABEL_61;
  }
  v61 = v41 + 5;
  while (v112 != v61)
  {
    v60 = *(_QWORD *)(v113 + 8 * v61++);
    if (v60)
    {
      v53 = v61 - 1;
      goto LABEL_60;
    }
  }
LABEL_75:
  sub_1004D284C(v30);

  v1 = v109;
LABEL_76:
  v106 = OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController), "dismissPopovers", v43, v108);
  v107 = *(void **)(v1 + v106);
  *(_QWORD *)(v1 + v106) = 0;

}

uint64_t sub_100761224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *Strong;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_1004B804C(&qword_1013F07A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "pkDrawing");

    if (v8)
    {
      static PKDrawing._unconditionallyBridgeFromObjectiveC(_:)(v8);

      v9 = type metadata accessor for PKDrawing(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
    }
    else
    {
      v12 = type metadata accessor for PKDrawing(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    }
    return sub_1007634AC((uint64_t)v5, a1);
  }
  else
  {
    v10 = type metadata accessor for PKDrawing(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

void sub_100761A5C()
{
  uint64_t v0;
  void *Strong;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (Strong)
  {
    v7 = Strong;
    v2 = objc_msgSend(Strong, "pkRecognitionController");
    if (v2)
    {
      v6 = v2;
      v3 = sub_100761B4C();
      if (v3)
      {
        v4 = v3;
        objc_msgSend(v6, "setCalculateDocumentProvider:", v3);

        swift_unknownObjectRelease(v4);
        return;
      }

      v5 = v6;
    }
    else
    {
      v5 = v7;
    }

  }
}

uint64_t sub_100761B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  id v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t result;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t *v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void **v87;
  uint64_t v88;
  void *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void **aBlock;
  uint64_t v118;
  uint64_t (*v119)(uint64_t);
  void *v120;
  uint64_t (*v121)();
  uint64_t v122;
  void *v123;
  unint64_t v124;
  void *v125;
  unint64_t v126;

  v1 = sub_1004B804C(&qword_1013F07A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v100 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v100 - v5;
  v7 = type metadata accessor for UUID(0);
  v116 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v111 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = v8;
  __chkstk_darwin(v9);
  v115 = (char *)&v100 - v10;
  v11 = v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (!Strong)
    return 0;
  v13 = Strong;
  v14 = objc_msgSend(Strong, "interactiveCanvasController");

  if (!v14)
    return 0;
  v15 = (char *)objc_msgSend(v14, "mathCalculationController");

  v110 = v15;
  if (!v15)
    return 0;
  v104 = (id)swift_unknownObjectWeakLoadStrong(v11);
  if (!v104)
  {

    return 0;
  }
  v109 = v7;
  v102 = v6;
  v103 = v3;
  v126 = (unint64_t)_swiftEmptyArrayStorage;
  v124 = (unint64_t)_swiftEmptyArrayStorage;
  v125 = &_swiftEmptySetSingleton;
  v16 = *(_QWORD *)&v110[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_calculateDocument];
  v17 = swift_retain(v16);
  v18 = dispatch thunk of CalculateDocument.declaredSymbols.getter(v17);
  v19 = v18;
  v20 = 0;
  v21 = v18 + 56;
  v22 = 1 << *(_BYTE *)(v18 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & *(_QWORD *)(v18 + 56);
  v25 = (unint64_t)(v22 + 63) >> 6;
  while (1)
  {
    if (v24)
    {
      v26 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v27 = v26 | (v20 << 6);
      goto LABEL_9;
    }
    v31 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_54;
    if (v31 >= v25)
      goto LABEL_27;
    v32 = *(_QWORD *)(v21 + 8 * v31);
    ++v20;
    if (!v32)
    {
      v20 = v31 + 1;
      if (v31 + 1 >= v25)
        goto LABEL_27;
      v32 = *(_QWORD *)(v21 + 8 * v20);
      if (!v32)
      {
        v20 = v31 + 2;
        if (v31 + 2 >= v25)
          goto LABEL_27;
        v32 = *(_QWORD *)(v21 + 8 * v20);
        if (!v32)
          break;
      }
    }
LABEL_24:
    v24 = (v32 - 1) & v32;
    v27 = __clz(__rbit64(v32)) + (v20 << 6);
LABEL_9:
    v28 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v27);
    v29 = *v28;
    v30 = v28[1];
    swift_bridgeObjectRetain(v30);
    sub_100AD8690((uint64_t *)&aBlock, v29, v30);
    swift_bridgeObjectRelease(v118);
  }
  v33 = v31 + 3;
  if (v33 >= v25)
    goto LABEL_27;
  v32 = *(_QWORD *)(v21 + 8 * v33);
  if (v32)
  {
    v20 = v33;
    goto LABEL_24;
  }
  while (1)
  {
    v20 = v33 + 1;
    if (__OFADD__(v33, 1))
      goto LABEL_55;
    if (v20 >= v25)
      break;
    v32 = *(_QWORD *)(v21 + 8 * v20);
    ++v33;
    if (v32)
      goto LABEL_24;
  }
LABEL_27:
  v36 = swift_release(v19);
  v19 = dispatch thunk of CalculateDocument.expressions.getter(v36);
  if ((unint64_t)v19 >> 62)
    goto LABEL_56;
  result = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  v37 = v109;
  if (!result)
  {
LABEL_60:
    swift_bridgeObjectRelease(v19);
LABEL_61:
    v34 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLCalculateDocumentProvider()), "init");

    swift_release(v16);
    if (v34)
    {
      v96 = *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform28CRLCalculateDocumentProvider_declaredVariables];
      *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform28CRLCalculateDocumentProvider_declaredVariables] = v125;
      v97 = v34;
      swift_bridgeObjectRelease(v96);
      v98 = *(_QWORD *)&v97[OBJC_IVAR____TtC8Freeform28CRLCalculateDocumentProvider_expressions];
      *(_QWORD *)&v97[OBJC_IVAR____TtC8Freeform28CRLCalculateDocumentProvider_expressions] = v126;
      swift_bridgeObjectRelease(v98);
      v99 = *(_QWORD *)&v97[OBJC_IVAR____TtC8Freeform28CRLCalculateDocumentProvider_evaluationResults];
      *(_QWORD *)&v97[OBJC_IVAR____TtC8Freeform28CRLCalculateDocumentProvider_evaluationResults] = v124;

    }
    else
    {
      swift_bridgeObjectRelease(v124);
      swift_bridgeObjectRelease(v125);
      v99 = v126;
    }
    swift_bridgeObjectRelease(v99);
    return (uint64_t)v34;
  }
  while (1)
  {
    v101 = v16;
    if (result < 1)
      break;
    v38 = 0;
    v108 = OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroupsQueue;
    v107 = v19 & 0xC000000000000001;
    v106 = v19;
    v105 = result;
    while (1)
    {
      v113 = v38;
      v16 = v37;
      if (v107)
      {
        v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v19);
      }
      else
      {
        v41 = *(_QWORD *)(v19 + 8 * v38 + 32);
        v42 = swift_retain(v41);
      }
      v43 = v115;
      v44 = CalculateExpression.id.getter(v42);
      v114 = v41;
      v45 = CalculateExpression.expression.getter(v44);
      v47 = v46;
      v48 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MathExpression()), "init");
      v123 = 0;
      v19 = (uint64_t)v110;
      v49 = v111;
      v50 = *(NSObject **)&v110[v108];
      v51 = v116;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v111, v43, v16);
      v52 = *(unsigned __int8 *)(v51 + 80);
      v53 = (v52 + 32) & ~v52;
      v54 = swift_allocObject(&unk_10127BCB0, v53 + v112, v52 | 7);
      *(_QWORD *)(v54 + 16) = &v123;
      *(_QWORD *)(v54 + 24) = v19;
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v54 + v53, v49, v16);
      v55 = swift_allocObject(&unk_10127BCD8, 32, 7);
      *(_QWORD *)(v55 + 16) = sub_10076346C;
      *(_QWORD *)(v55 + 24) = v54;
      v121 = sub_1005B72B0;
      v122 = v55;
      aBlock = _NSConcreteStackBlock;
      v118 = *(_QWORD *)"";
      v119 = sub_100618D24;
      v120 = &unk_10127BCF0;
      v56 = _Block_copy(&aBlock);
      v57 = v122;
      v58 = (id)v19;
      swift_retain(v55);
      swift_release(v57);
      dispatch_sync(v50, v56);
      _Block_release(v56);
      LOBYTE(v56) = swift_isEscapingClosureAtFileLocation(v55, "", 98, 291, 47, 1);
      swift_release(v55);
      if ((v56 & 1) != 0)
        break;
      v59 = v123;
      swift_release(v54);
      v60 = *(void **)&v48[OBJC_IVAR____TtC8Freeform14MathExpression_strokeGroupIdentifier];
      *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform14MathExpression_strokeGroupIdentifier] = v59;
      v61 = v59;

      v62 = (uint64_t *)&v48[OBJC_IVAR____TtC8Freeform14MathExpression_expression];
      v63 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform14MathExpression_expression + 8];
      *v62 = v45;
      v62[1] = v47;
      swift_bridgeObjectRelease(v63);
      v64 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
      v66 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v65 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v66 >= v65 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
      v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
      specialized Array._endMutation()(v67);
      v37 = v109;
      v68 = v114;
      if (v59)
      {
        v69 = v61;
        v70 = (void *)CalculateExpression.result.getter();
        v40 = v113;
        if (v70)
        {
          v71 = v70;
          v72 = v37;
          v73 = objc_msgSend(v70, "formattedResult");

          v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
          v76 = v75;

          v77 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MathExpressionEvaluationResult()), "init");
          v78 = (uint64_t *)&v77[OBJC_IVAR____TtC8Freeform30MathExpressionEvaluationResult_string];
          v79 = *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform30MathExpressionEvaluationResult_string + 8];
          *v78 = v74;
          v78[1] = v76;
          swift_bridgeObjectRelease(v79);
          v80 = *(void **)&v77[OBJC_IVAR____TtC8Freeform30MathExpressionEvaluationResult_strokeGroupIdentifier];
          *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform30MathExpressionEvaluationResult_strokeGroupIdentifier] = v69;
          v81 = v69;

          v82 = objc_msgSend(v104, "pkDrawing");
          if (v82)
          {
            v83 = v82;
            v84 = (uint64_t)v103;
            static PKDrawing._unconditionallyBridgeFromObjectiveC(_:)();

            v85 = type metadata accessor for PKDrawing(0);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 0, 1, v85);
          }
          else
          {
            v85 = type metadata accessor for PKDrawing(0);
            v84 = (uint64_t)v103;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v103, 1, 1, v85);
          }
          v86 = (uint64_t)v102;
          sub_1007634AC(v84, (uint64_t)v102);
          type metadata accessor for PKDrawing(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v86, 1, v85) == 1)
          {
            sub_1004CB800(v86, &qword_1013F07A0);
            v87 = 0;
          }
          else
          {
            v88 = sub_1004B8930(0, &qword_1013F07A8, PKDrawing_ptr);
            swift_dynamicCast(&aBlock, v86, v85, v88, 7);
            v87 = aBlock;
          }
          v19 = v106;
          v39 = v105;
          v89 = *(void **)&v77[OBJC_IVAR____TtC8Freeform30MathExpressionEvaluationResult_drawing];
          *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform30MathExpressionEvaluationResult_drawing] = v87;

          v90 = v77;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v90);
          v92 = *(_QWORD *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v91 = *(_QWORD *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v92 >= v91 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v92 + 1, 1);
          v93 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v92, v90);
          specialized Array._endMutation()(v93);

          v94 = swift_release(v68);
          v37 = v72;
          (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v115, v72, v94);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v37);

          swift_release(v68);
          v19 = v106;
          v39 = v105;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v109);

        swift_release(v68);
        v19 = v106;
        v39 = v105;
        v40 = v113;
      }
      v38 = v40 + 1;
      if (v39 == v38)
      {
        swift_bridgeObjectRelease(v19);
        v16 = v101;
        goto LABEL_61;
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    if (v19 < 0)
      v95 = v19;
    else
      v95 = v19 & 0xFFFFFFFFFFFFFF8;
    result = _CocoaArrayWrapper.endIndex.getter(v95);
    v37 = v109;
    if (!result)
      goto LABEL_60;
  }
  __break(1u);
  return result;
}

double sub_1007624C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  uint64_t v6;

  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions, v5, 33, 0);
  swift_retain(a2);
  sub_100ADA1D4(&v6, a2);
  v3 = v6;
  swift_endAccess(v5);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

double sub_10076252C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  double result;
  _QWORD aBlock[5];
  uint64_t v18;

  v3 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchWorkItemFlags.barrier.getter(v11);
  v12 = swift_allocObject(&unk_10127BC60, 32, 7);
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1007633F0;
  v18 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10127BC78;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  v15 = swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v10, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1007626AC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions, v4, 33, 0);
  sub_100DB67EC(a2);
  return swift_endAccess(v4);
}

void sub_100762700()
{
  char *v0;
  void *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  void *v11;

  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1004B8688((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v1 = &_swiftEmptySetSingleton;
  }
  v11 = v1;
  v2 = *(NSObject **)&v0[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressionsQueue];
  v3 = swift_allocObject(&unk_10127BBE8, 32, 7);
  *(_QWORD *)(v3 + 16) = &v11;
  *(_QWORD *)(v3 + 24) = v0;
  v4 = swift_allocObject(&unk_10127BC10, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1007633B4;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_1005B71BC;
  v10 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_10127BC28;
  v5 = _Block_copy(aBlock);
  v6 = v10;
  v7 = v0;
  swift_retain(v4);
  swift_release(v6);
  dispatch_sync(v2, v5);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 101, 384, 36, 1);
  swift_release(v4);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v3);
}

uint64_t sub_100762870(uint64_t *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions, v7, 0, 0);
  v4 = *v3;
  v5 = *a1;
  *a1 = v4;
  swift_bridgeObjectRetain(v4);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_100762930()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  __n128 v9;
  unint64_t v10;
  char *v11;
  double *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double *v29;
  double *v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  double *v46;
  id v47;
  NSString v48;
  NSString v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  double *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  double *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __int128 v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  double *v86;
  double *v87;
  char v88[24];

  v1 = v0;
  v2 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep]);
  if (Strong
    && (v6 = Strong,
        v7 = objc_msgSend(Strong, "interactiveCanvasController"),
        v6,
        v7)
    && (v8 = objc_msgSend(v7, "mathCalculationController"), v7, v8))
  {
    v10 = dispatch thunk of CalculateDocument.expressions.getter(v9);
    v11 = v1;
    v12 = sub_100763094(v10, (uint64_t)v11);

    v13 = (uint64_t)v12;
    swift_bridgeObjectRelease(v10);

  }
  else
  {
    v14 = &v1[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions], v88, 0, 0);
    v15 = *(_QWORD *)v14;
    swift_bridgeObjectRetain(v15);
    v13 = (uint64_t)sub_1005FFA98(v16);
    swift_bridgeObjectRelease(v15);
  }
  if (!((unint64_t)v13 >> 62))
  {
    v17 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_8;
LABEL_35:
    v20 = _swiftEmptyArrayStorage;
LABEL_36:
    swift_bridgeObjectRelease(v13);
    v87 = v20;
    v75 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v76 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v77 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v75, v76);
    swift_bridgeObjectRelease(v20);
    return v77;
  }
  if (v13 < 0)
    v74 = v13;
  else
    v74 = v13 & 0xFFFFFFFFFFFFFF8;
  v17 = _CocoaArrayWrapper.endIndex.getter(v74);
  if (!v17)
    goto LABEL_35;
LABEL_8:
  result = sub_1004B8930(0, (unint64_t *)&qword_1013F95A0, NSAttributedString_ptr);
  v85 = result;
  if (v17 >= 1)
  {
    v19 = 0;
    v84 = v13 & 0xC000000000000001;
    v20 = _swiftEmptyArrayStorage;
    v81 = 0x8000000100FCEB60;
    v80 = xmmword_100EF5E40;
    v79 = v4;
    v82 = v17;
    v83 = v13;
    do
    {
      if (v84)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v13);
      }
      else
      {
        v21 = *(_QWORD *)(v13 + 8 * v19 + 32);
        v22 = swift_retain(v21);
      }
      CalculateExpression.accessibilityMathEquationDescription.getter(v22);
      v23 = (void *)NSAttributedString.init(_:)(v4);
      v24 = objc_msgSend(v23, "string");

      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      v28 = HIBYTE(v27) & 0xF;
      if ((v27 & 0x2000000000000000) == 0)
        v28 = v25 & 0xFFFFFFFFFFFFLL;
      if (v28)
      {
        v86 = v20;
        v29 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
        v30 = v29;
        v32 = *((_QWORD *)v29 + 2);
        v31 = *((_QWORD *)v29 + 3);
        if (v32 >= v31 >> 1)
        {
          v29 = (double *)sub_100D0EF94((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
          v30 = v29;
        }
        *((_QWORD *)v30 + 2) = v32 + 1;
        v33 = &v30[2 * v32];
        *((_QWORD *)v33 + 4) = v25;
        *((_QWORD *)v33 + 5) = v27;
        v34 = CalculateExpression.result.getter(v29);
        if (v34)
        {
          v35 = (void *)v34;
          v36 = (void *)objc_opt_self(NSBundle);
          v37 = objc_msgSend(v36, "mainBundle");
          v38 = String._bridgeToObjectiveC()();
          v39 = String._bridgeToObjectiveC()();
          v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

          v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
          v43 = v42;

          v45 = *((_QWORD *)v30 + 2);
          v44 = *((_QWORD *)v30 + 3);
          if (v45 >= v44 >> 1)
            v30 = (double *)sub_100D0EF94((_QWORD *)(v44 > 1), v45 + 1, 1, v30);
          *((_QWORD *)v30 + 2) = v45 + 1;
          v46 = &v30[2 * v45];
          *((_QWORD *)v46 + 4) = v41;
          *((_QWORD *)v46 + 5) = v43;
          v47 = objc_msgSend(v36, "mainBundle");
          v48 = String._bridgeToObjectiveC()();
          v49 = String._bridgeToObjectiveC()();
          v50 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, v49, 0);

          v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          v53 = v52;

          v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v55 = swift_allocObject(v54, 72, 7);
          *(_OWORD *)(v55 + 16) = v80;
          v56 = objc_msgSend(v35, "formattedResult");
          v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
          v59 = v58;

          *(_QWORD *)(v55 + 56) = &type metadata for String;
          *(_QWORD *)(v55 + 64) = sub_1004CFC2C();
          *(_QWORD *)(v55 + 32) = v57;
          *(_QWORD *)(v55 + 40) = v59;
          v60 = static String.localizedStringWithFormat(_:_:)(v51, v53, v55);
          v62 = v61;
          swift_bridgeObjectRelease(v55);
          swift_bridgeObjectRelease(v53);
          v64 = *((_QWORD *)v30 + 2);
          v63 = *((_QWORD *)v30 + 3);
          if (v64 >= v63 >> 1)
            v30 = (double *)sub_100D0EF94((_QWORD *)(v63 > 1), v64 + 1, 1, v30);
          v4 = v79;
          *((_QWORD *)v30 + 2) = v64 + 1;
          v65 = &v30[2 * v64];
          *((_QWORD *)v65 + 4) = v60;
          *((_QWORD *)v65 + 5) = v62;

          v17 = v82;
          v13 = v83;
        }
        v87 = v30;
        v66 = sub_1004B804C((uint64_t *)&unk_1013E4970);
        v67 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
        v68 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v66, v67);
        v70 = v69;
        swift_bridgeObjectRelease(v30);
        v20 = v86;
        if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
          v20 = (double *)sub_100D0EF94(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
        v72 = *((_QWORD *)v20 + 2);
        v71 = *((_QWORD *)v20 + 3);
        if (v72 >= v71 >> 1)
          v20 = (double *)sub_100D0EF94((_QWORD *)(v71 > 1), v72 + 1, 1, v20);
        *((_QWORD *)v20 + 2) = v72 + 1;
        v73 = &v20[2 * v72];
        *((_QWORD *)v73 + 4) = v68;
        *((_QWORD *)v73 + 5) = v70;
      }
      else
      {
        swift_bridgeObjectRelease(v27);
      }
      ++v19;
      swift_release(v21);
    }
    while (v17 != v19);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id sub_100762FDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMathRecognitionItemsHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMathRecognitionItemsHandler()
{
  return objc_opt_self(_TtC8Freeform30CRLMathRecognitionItemsHandler);
}

double *sub_100763094(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  double *v33;

  v3 = a1;
  v33 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v25 = a2 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_expressions, v32, 0, 0);
  if (v4)
  {
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v24 = v3;
    v28 = v4;
    v29 = v3 + 32;
    v3 = v25;
    v26 = v7;
    v27 = v6;
    while (1)
    {
      if (v6)
      {
        a2 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v24);
        v8 = __OFADD__(v5++, 1);
        if (v8)
        {
LABEL_24:
          __break(1u);
          return v33;
        }
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_28:
          if (v3 < 0)
            v23 = v3;
          else
            v23 = v3 & 0xFFFFFFFFFFFFFF8;
          v4 = _CocoaArrayWrapper.endIndex.getter(v23);
          goto LABEL_3;
        }
        a2 = *(_QWORD *)(v29 + 8 * v5);
        swift_retain(a2);
        v8 = __OFADD__(v5++, 1);
        if (v8)
          goto LABEL_24;
      }
      v9 = *(_QWORD *)v3;
      v31 = a2;
      if ((v9 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain(v9);
        v10 = swift_retain(a2);
        v11 = __CocoaSet.contains(_:)(v10);
        swift_bridgeObjectRelease(v9);
        swift_release(a2);
        if ((v11 & 1) != 0)
          goto LABEL_12;
      }
      else if (*(_QWORD *)(v9 + 16))
      {
        v15 = *(_QWORD *)(v9 + 40);
        v16 = type metadata accessor for CalculateExpression(0);
        v17 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
        swift_bridgeObjectRetain(v9);
        v18 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v16, v17);
        v19 = -1 << *(_BYTE *)(v9 + 32);
        v20 = v18 & ~v19;
        if (((*(_QWORD *)(v9 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        {
          swift_release(a2);
          swift_bridgeObjectRelease(v9);
          v4 = v28;
LABEL_20:
          v7 = v26;
          v6 = v27;
          goto LABEL_6;
        }
        v21 = ~v19;
        sub_1004B7878(&qword_1013DEA10, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
        while (1)
        {
          v30 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v20);
          if ((dispatch thunk of static Equatable.== infix(_:_:)(&v30, &v31) & 1) != 0)
            break;
          v20 = (v20 + 1) & v21;
          if (((*(_QWORD *)(v9 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          {
            swift_release(a2);
            swift_bridgeObjectRelease(v9);
            v4 = v28;
            v3 = v25;
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease(v9);
        v6 = v27;
        v4 = v28;
        v3 = v25;
        v7 = v26;
LABEL_12:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v13 = *((_QWORD *)v33 + 2);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, a2);
        specialized ContiguousArray._endMutation()(v14);
        goto LABEL_6;
      }
      swift_release(a2);
LABEL_6:
      if (v5 == v4)
        return v33;
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100763390()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007633B4()
{
  uint64_t v0;

  return sub_100762870(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1007633BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007633CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1007633DC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1007633E4()
{
  return sub_100763744((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1007633F0()
{
  uint64_t v0;

  return sub_1007626AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1007633F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10076346C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_100842428(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10076349C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007634AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F07A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007634F4(uint64_t a1)
{
  destroy for CRLMathCalculationControllerExpression(a1);
  return a1;
}

uint64_t sub_10076352C()
{
  return sub_1007659D0((uint64_t (*)(_QWORD, uint64_t))sub_100842094);
}

uint64_t sub_10076353C()
{
  return sub_1007659D0((uint64_t (*)(_QWORD, uint64_t))sub_100842B90);
}

uint64_t sub_100763548()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10076356C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_1007635EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10075F834(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_100763628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007636A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013F07CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_10075FAE4(a1, v5, v6, v7, v8);
}

uint64_t sub_100763738()
{
  return sub_100763744((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100763744(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

double sub_10076377C()
{
  uint64_t v0;

  return sub_1007624C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100763784()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1007637B0(uint64_t a1)
{
  uint64_t v1;

  sub_10075F214(a1, *(_QWORD *)(v1 + 16));
}

id sub_1007637B8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;
  id v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (!Strong)
    return 0;
  v2 = Strong;
  v3 = objc_msgSend(Strong, "interactiveCanvasController");

  if (v3)
  {
    v4 = objc_msgSend(v3, "freehandDrawingToolkit");

    if (v4)
    {
      v5 = objc_msgSend(v4, "pkCanvasView");

      v3 = objc_msgSend(v5, "_tiledView");
      return v3;
    }
    return 0;
  }
  return v3;
}

id sub_100763880()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (Strong
    && (v2 = Strong,
        v3 = objc_msgSend(Strong, "interactiveCanvasController"),
        v2,
        v4 = objc_msgSend(v3, "canvasView"),
        v3,
        v4))
  {
    v5 = objc_msgSend(v4, "unscaledCoordinateSpace");
    if (v5)
    {
      v6 = v5;

      return v6;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"mathViewController(_:coordinateSpaceFor:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2, 206, "no unscaledCoordinateSpace", 26, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"mathViewController(_:coordinateSpaceFor:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2u, 206, (uint64_t)"no unscaledCoordinateSpace", 26, 2u);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"mathViewController(_:coordinateSpaceFor:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2, 205, "no canvasView", 13, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"mathViewController(_:coordinateSpaceFor:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMathRecognitionItemsHandler.swift", 101, 2u, 205, (uint64_t)"no canvasView", 13, 2u);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  return objc_msgSend(objc_allocWithZone((Class)UIView), "init");
}

uint64_t sub_100763A88(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  _BYTE v31[72];

  v8 = type metadata accessor for UUID(0);
  v9 = __chkstk_darwin(v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for CalculateExpression.Base(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", a3 & 1);
  v17 = sub_1004B804C(&qword_1013F07E8);
  inited = swift_initStackObject(v17, v31);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v19 = (void *)CalculateKeyFormat;
  *(_QWORD *)(inited + 32) = CalculateKeyFormat;
  *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
  *(_QWORD *)(inited + 40) = v16;
  swift_bridgeObjectRetain(a2);
  v20 = v19;
  v21 = v16;
  v22 = sub_1008D7418(inited);
  v23 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for CalculateExpression.Base.base10(_:), v12);
  UUID.init()(v23);
  v24 = type metadata accessor for CalculateExpression(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = CalculateExpression.init(_:options:base:id:)(a1, a2, v22, v15, v11);
  v26 = CalculateExpressionTypesetImage(expression:result:showResult:fontSize:)(v25, 0, 0, 0, a4);
  v30 = v26;
  v27 = objc_allocWithZone((Class)sub_1004B804C(&qword_1013F0818));
  swift_retain(v26);
  v28 = UIHostingController.init(rootView:)(&v30);
  swift_release(v25);
  swift_release(v26);

  return v28;
}

void sub_100763C98()
{
  uint64_t v0;
  void *Strong;
  id v2;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_isPresentingPopoverUI) = 0;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_shouldCallEditMenuTapForRep) == 1)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
    if (Strong)
    {
      v2 = Strong;
      objc_msgSend(Strong, "handleEditMenuTapAtPoint:inputType:", 1, 0.0, 0.0);

    }
  }
}

uint64_t sub_100763D10(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  void *Strong;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (!Strong)
    return 0;
  v8 = Strong;
  v9 = objc_msgSend(Strong, "interactiveCanvasController");

  if (!v9)
    return 0;
  v10 = objc_msgSend(v9, "mathCalculationController");

  if (!v10)
    return 0;
  v11 = CRLMathCalculationController.observedExpression(for:)(a1);

  if (!v11)
    return 0;
  v12 = CalculateExpressionTypesetImage(expression:result:showResult:fontSize:)(v11, 0, 0, a2 & 1, a3);
  v19 = v12;
  v13 = sub_1004B804C(&qword_1013F0810);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = swift_retain(v12);
  v15 = ImageRenderer.init(content:)(&v19, v14);
  v16 = ImageRenderer.scale.setter(2.0);
  v17 = ImageRenderer.uiImage.getter(v16);
  swift_release(v11);
  swift_release(v12);
  swift_release(v15);
  return v17;
}

uint64_t sub_100763E4C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  _BYTE v39[72];

  v8 = type metadata accessor for UUID(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CalculateExpression.Base(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", a3 & 1);
  v17 = sub_1004B804C(&qword_1013F07E8);
  inited = swift_initStackObject(v17, v39);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v19 = (void *)CalculateKeyFormat;
  *(_QWORD *)(inited + 32) = CalculateKeyFormat;
  *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
  *(_QWORD *)(inited + 40) = v16;
  swift_bridgeObjectRetain(a2);
  v20 = v19;
  v21 = v16;
  v22 = sub_1008D7418(inited);
  v23 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for CalculateExpression.Base.base10(_:), v12);
  UUID.init()(v23);
  v24 = type metadata accessor for CalculateExpression(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = CalculateExpression.init(_:options:base:id:)(a1, a2, v22, v15, v11);
  v26 = CalculateExpressionTypesetImage(expression:result:showResult:fontSize:)(v25, 0, 0, 0, a4);
  v38 = v26;
  v27 = sub_1004B804C(&qword_1013F0810);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = swift_retain(v26);
  v29 = ImageRenderer.init(content:)(&v38, v28);
  v30 = v29;
  v31 = *(void **)(v37[1] + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_mathViewController);
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v32, "viewControllerForPresentingUI");
    if (v33)
    {
      v34 = v33;
      ImageRenderer.scale.setter(2.0);

      v32 = v34;
    }

  }
  v35 = ImageRenderer.uiImage.getter(v29);

  swift_release(v25);
  swift_release(v26);
  swift_release(v30);
  return v35;
}

void sub_1007640C4(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, __n128), uint64_t a2, uint64_t a3, int64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *Strong;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  __n128 v59;
  unint64_t v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  void (*v64)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  void *v86;
  void *v87;
  id v88;
  char *v89;
  __n128 v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  void *v98;
  void *v99;
  id v100;
  id v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void *v105;
  id v106;
  id v107;
  char *v108;
  __n128 v109;
  uint64_t v110;
  __n128 v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  __n128 v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int64_t v122;
  unint64_t v123;
  int64_t v124;
  void (*v125)(uint64_t, unint64_t, uint64_t, __n128);
  void (*v126)(char *, uint64_t, uint64_t);
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  __n128 v133;
  double v134;
  void (*v135)(uint64_t, uint64_t, double);
  __n128 v136;
  id v137;
  double v138;
  __n128 v139;
  double v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  char *v148;
  __n128 v149;
  __n128 v150;
  void *v151;
  void *v152;
  id v153;
  id v154;
  __n128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  char *v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  int64_t v164;
  unint64_t v165;
  int64_t v166;
  void (*v167)(char *, unint64_t, uint64_t, __n128);
  void (*v168)(char *, char *, uint64_t);
  unint64_t v169;
  char v170;
  id v171;
  char *v172;
  id v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  id v182;
  char *v183;
  __n128 v184;
  void (*v185)(char *, uint64_t);
  uint64_t v186;
  char *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  void *v191;
  void *v192;
  id v193;
  id v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  void *v198;
  char *v199;
  id v200;
  char *v201;
  __n128 v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, uint64_t);
  uint64_t v211;
  char *v212;
  char *v213;
  int64_t v214;
  int64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  int64_t v222;
  char *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  int64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  __int128 aBlock;
  __int128 v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  char v248[8];

  v229 = a3;
  v228 = a2;
  v230 = a1;
  v235 = type metadata accessor for DispatchQoS(0);
  v227 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v234 = (char *)&v208 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = type metadata accessor for DispatchWorkItemFlags(0);
  v226 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v232 = (char *)&v208 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v221 = (char *)&v208 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v208 - v11;
  __chkstk_darwin(v13);
  v15 = (uint64_t)&v208 - v14;
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v212 = (char *)&v208 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v236 = (char *)&v208 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v208 - v22;
  __chkstk_darwin(v24);
  v225 = (char *)&v208 - v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v208 - v27;
  v217 = v28;
  __chkstk_darwin(v29);
  v240 = (uint64_t)&v208 - v30;
  v209 = v4;
  v224 = v4 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Freeform30CRLMathRecognitionItemsHandler_rep);
  if (Strong)
  {
    v32 = Strong;
    v33 = objc_msgSend(Strong, "interactiveCanvasController");

    if (v33)
    {
      v34 = (char *)objc_msgSend(v33, "mathCalculationController");

      v223 = v34;
      if (v34)
      {
        if ((unint64_t)a4 >> 62)
          goto LABEL_147;
        v35 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a4);
LABEL_6:
        v218 = v15;
        v239 = v17;
        v216 = v12;
        v237 = v23;
        if (v35)
        {
          v238 = v16;
          v222 = a4 & 0xC000000000000001;
          v36 = _swiftEmptyDictionarySingleton;
          v12 = 4;
          while (1)
          {
            if (v222)
              v40 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, a4);
            else
              v40 = (char *)*(id *)(a4 + 8 * v12);
            v23 = v40;
            v15 = v12 - 3;
            if (__OFADD__(v12 - 4, 1))
            {
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
              goto LABEL_145;
            }
            v16 = a4;
            v41 = objc_msgSend(v40, "uuid");
            v42 = v240;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)(v41);

            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
            *(_QWORD *)&aBlock = v36;
            v17 = sub_100842EFC(v42);
            v45 = v36[2];
            v46 = (v44 & 1) == 0;
            v47 = v45 + v46;
            if (__OFADD__(v45, v46))
              goto LABEL_139;
            a4 = v44;
            if (v36[3] >= v47)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v50 = (_QWORD *)aBlock;
                if ((v44 & 1) == 0)
                  goto LABEL_21;
              }
              else
              {
                sub_100831278();
                v50 = (_QWORD *)aBlock;
                if ((a4 & 1) == 0)
                  goto LABEL_21;
              }
            }
            else
            {
              sub_10081E628(v47, isUniquelyReferenced_nonNull_native);
              v48 = sub_100842EFC(v240);
              if ((a4 & 1) != (v49 & 1))
              {
                KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v238);
                __break(1u);
                return;
              }
              v17 = v48;
              v50 = (_QWORD *)aBlock;
              if ((a4 & 1) == 0)
              {
LABEL_21:
                v50[(v17 >> 6) + 8] |= 1 << v17;
                (*(void (**)(unint64_t, uint64_t, int64_t))(v239 + 16))(v50[6] + *(_QWORD *)(v239 + 72) * v17, v240, v238);
                *(_QWORD *)(v50[7] + 8 * v17) = v23;
                v51 = v50[2];
                v52 = __OFADD__(v51, 1);
                v53 = v51 + 1;
                if (v52)
                  goto LABEL_140;
                v37 = v50;
                v50[2] = v53;
                goto LABEL_9;
              }
            }
            v37 = v50;
            v38 = v50[7];

            *(_QWORD *)(v38 + 8 * v17) = v23;
LABEL_9:
            v39 = swift_bridgeObjectRelease(0x8000000000000000);
            v17 = v239;
            (*(void (**)(uint64_t, int64_t, __n128))(v239 + 8))(v240, v238, v39);
            ++v12;
            v23 = v237;
            a4 = v16;
            v36 = v37;
            if (v15 == v35)
            {
              swift_bridgeObjectRelease(v16);
              v12 = v216;
              v16 = v238;
              v54 = v37;
              goto LABEL_27;
            }
          }
        }
        swift_bridgeObjectRelease(a4);
        v54 = _swiftEmptyDictionarySingleton;
LABEL_27:
        v55 = *((_QWORD *)v230 + 7);
        v213 = (char *)v230 + 56;
        v56 = 1 << *((_BYTE *)v230 + 32);
        v57 = -1;
        if (v56 < 64)
          v57 = ~(-1 << v56);
        v58 = v57 & v55;
        a4 = (int64_t)&v223[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions];
        v219 = OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroupsQueue;
        swift_bridgeObjectRetain(v230);
        v59 = swift_beginAccess(a4, v248, 0, 0);
        v15 = 0;
        v214 = (unint64_t)(v56 + 63) >> 6;
        v211 = v217 + 7;
        v220 = v54;
        v215 = a4;
        while (1)
        {
          if (v58)
          {
            v240 = (v58 - 1) & v58;
            v60 = __clz(__rbit64(v58)) | (v15 << 6);
          }
          else
          {
            v61 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_141;
            if (v61 >= v214)
            {
LABEL_63:
              v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56);
              v66(v218, 1, 1, v16, v59);
LABEL_64:
              swift_release(v230);
              if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
                && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
              {
                sub_1004B8688((uint64_t)_swiftEmptyArrayStorage);
              }
              else
              {
                v112 = &_swiftEmptySetSingleton;
              }
              v247 = (uint64_t)v112;
              v113 = *(_QWORD *)(v229 + 56);
              v218 = v229 + 56;
              v114 = 1 << *(_BYTE *)(v229 + 32);
              v115 = -1;
              if (v114 < 64)
                v115 = ~(-1 << v114);
              v116 = v115 & v113;
              v222 = (unint64_t)(v114 + 63) >> 6;
              v117 = swift_bridgeObjectRetain(v229);
              v15 = 0;
              v230 = v66;
              while (2)
              {
                if (v116)
                {
                  v119 = __clz(__rbit64(v116));
                  v120 = (v116 - 1) & v116;
                  v121 = v119 | (v15 << 6);
                }
                else
                {
                  v122 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_142;
                  if (v122 >= v222)
                  {
LABEL_102:
                    v66(v12, 1, 1, v16, v117);
LABEL_103:
                    swift_release(v229);
                    v156 = v247;
                    sub_10076252C(v247);
                    swift_bridgeObjectRelease(v156);
                    v241 = (uint64_t)_swiftEmptyArrayStorage;
                    v12 = v228 + 56;
                    v157 = 1 << *(_BYTE *)(v228 + 32);
                    v158 = -1;
                    if (v157 < 64)
                      v158 = ~(-1 << v157);
                    a4 = v158 & *(_QWORD *)(v228 + 56);
                    v238 = (unint64_t)(v157 + 63) >> 6;
                    v159 = swift_bridgeObjectRetain(v228);
                    v15 = 0;
                    v160 = v221;
                    v23 = v212;
                    v229 = v12;
                    while (1)
                    {
                      if (a4)
                      {
                        v161 = __clz(__rbit64(a4));
                        v162 = (a4 - 1) & a4;
                        v163 = v161 | (v15 << 6);
                      }
                      else
                      {
                        v164 = v15 + 1;
                        if (__OFADD__(v15, 1))
                          goto LABEL_143;
                        if (v164 >= v238)
                        {
LABEL_135:
                          v66((uint64_t)v160, 1, 1, v16, v159);
LABEL_136:
                          swift_bridgeObjectRelease(v54);
                          swift_release(v228);
                          v206 = v241;
                          sub_10075EAF8(v241);
                          swift_bridgeObjectRelease(v206);

                          return;
                        }
                        v165 = *(_QWORD *)(v12 + 8 * v164);
                        ++v15;
                        if (!v165)
                        {
                          v15 = v164 + 1;
                          if (v164 + 1 >= v238)
                            goto LABEL_135;
                          v165 = *(_QWORD *)(v12 + 8 * v15);
                          if (!v165)
                          {
                            v15 = v164 + 2;
                            if (v164 + 2 >= v238)
                              goto LABEL_135;
                            v165 = *(_QWORD *)(v12 + 8 * v15);
                            if (!v165)
                            {
                              v166 = v164 + 3;
                              if (v166 >= v238)
                                goto LABEL_135;
                              v165 = *(_QWORD *)(v12 + 8 * v166);
                              if (!v165)
                              {
                                while (1)
                                {
                                  v15 = v166 + 1;
                                  if (__OFADD__(v166, 1))
                                    break;
                                  if (v15 >= v238)
                                    goto LABEL_135;
                                  v165 = *(_QWORD *)(v12 + 8 * v15);
                                  ++v166;
                                  if (v165)
                                    goto LABEL_123;
                                }
LABEL_146:
                                __break(1u);
LABEL_147:
                                if (a4 < 0)
                                  v207 = a4;
                                else
                                  v207 = a4 & 0xFFFFFFFFFFFFFF8;
                                swift_bridgeObjectRetain(a4);
                                v35 = _CocoaArrayWrapper.endIndex.getter(v207);
                                goto LABEL_6;
                              }
                              v15 = v166;
                            }
                          }
                        }
LABEL_123:
                        v162 = (v165 - 1) & v165;
                        v163 = __clz(__rbit64(v165)) + (v15 << 6);
                      }
                      v167 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v17 + 16);
                      v167(v160, *(_QWORD *)(v228 + 48) + *(_QWORD *)(v17 + 72) * v163, v16, v159);
                      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v66)(v160, 0, 1, v16);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v160, 1, v16) == 1)
                        goto LABEL_136;
                      v240 = v162;
                      v168 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
                      v168(v23, v160, v16);
                      if (v54[2])
                      {
                        v169 = sub_100842EFC((uint64_t)v23);
                        v160 = v221;
                        if ((v170 & 1) != 0)
                        {
                          v237 = (char *)v15;
                          v236 = (char *)*(id *)(v54[7] + 8 * v169);
                          v171 = objc_msgSend(v236, "strokeGroupIdentifier");
                          v172 = v23;
                          v173 = v223;
                          v174 = v232;
                          static DispatchWorkItemFlags.barrier.getter(v171);
                          v175 = v225;
                          ((void (*)(char *, char *, uint64_t))v167)(v225, v172, v16);
                          v176 = *(unsigned __int8 *)(v17 + 80);
                          v177 = (v176 + 24) & ~v176;
                          v178 = (v211 + v177) & 0xFFFFFFFFFFFFFFF8;
                          v179 = swift_allocObject(&unk_10127BEE0, v178 + 8, v176 | 7);
                          *(_QWORD *)(v179 + 16) = v173;
                          v168((char *)(v179 + v177), v175, v16);
                          *(_QWORD *)(v179 + v178) = v171;
                          *(_QWORD *)&v245 = sub_100765920;
                          *((_QWORD *)&v245 + 1) = v179;
                          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                          *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
                          *(_QWORD *)&v244 = sub_1005D2FC0;
                          *((_QWORD *)&v244 + 1) = &unk_10127BEF8;
                          v180 = _Block_copy(&aBlock);
                          v181 = v173;
                          v182 = v171;
                          v183 = v234;
                          static DispatchQoS.unspecified.getter(v184);
                          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v183, v174, v180);
                          _Block_release(v180);
                          v231 = *(char **)(v227 + 8);
                          ((void (*)(char *, uint64_t))v231)(v183, v235);
                          v185 = *(void (**)(char *, uint64_t))(v226 + 8);
                          v185(v174, v233);
                          v186 = *((_QWORD *)&v245 + 1);

                          swift_release(v186);
                          v187 = v236;
                          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v187);
                          v189 = *(_QWORD *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          v188 = *(_QWORD *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x18);
                          if (v189 >= v188 >> 1)
                            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v188 > 1, v189 + 1, 1);
                          v190 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v189, v187);
                          specialized Array._endMutation()(v190);
                          v191 = (void *)swift_unknownObjectWeakLoadStrong(v224);
                          v23 = v212;
                          v17 = v239;
                          v54 = v220;
                          v66 = v230;
                          v15 = (uint64_t)v237;
                          if (v191
                            && (v192 = v191,
                                v193 = objc_msgSend(v191, "interactiveCanvasController"),
                                v192,
                                v193))
                          {
                            v194 = objc_msgSend(v193, "mathCalculationController");

                            if (v194)
                            {
                              v196 = v232;
                              static DispatchWorkItemFlags.barrier.getter(v195);
                              v197 = swift_allocObject(&unk_10127BF30, 32, 7);
                              *(_QWORD *)(v197 + 16) = v194;
                              *(_QWORD *)(v197 + 24) = v187;
                              *(_QWORD *)&v245 = sub_100765950;
                              *((_QWORD *)&v245 + 1) = v197;
                              *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                              *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
                              *(_QWORD *)&v244 = sub_1005D2FC0;
                              *((_QWORD *)&v244 + 1) = &unk_10127BF48;
                              v198 = _Block_copy(&aBlock);
                              v199 = v187;
                              v200 = v194;
                              v201 = v234;
                              static DispatchQoS.unspecified.getter(v202);
                              OS_dispatch_queue.async(group:qos:flags:execute:)(0, v201, v196, v198);
                              _Block_release(v198);
                              v203 = v201;
                              v17 = v239;
                              ((void (*)(char *, uint64_t))v231)(v203, v235);
                              v204 = v196;
                              v66 = v230;
                              v23 = v212;
                              v185(v204, v233);
                              v205 = *((_QWORD *)&v245 + 1);

                              swift_release(v205);
                            }
                            else
                            {

                            }
                            v160 = v221;
                            v12 = v229;
                            v15 = (uint64_t)v237;
                          }
                          else
                          {

                            v160 = v221;
                            v12 = v229;
                          }
                        }
                      }
                      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
                      a4 = v240;
                    }
                  }
                  v123 = *(_QWORD *)(v218 + 8 * v122);
                  ++v15;
                  if (!v123)
                  {
                    v15 = v122 + 1;
                    if (v122 + 1 >= v222)
                      goto LABEL_102;
                    v123 = *(_QWORD *)(v218 + 8 * v15);
                    if (!v123)
                    {
                      v15 = v122 + 2;
                      if (v122 + 2 >= v222)
                        goto LABEL_102;
                      v123 = *(_QWORD *)(v218 + 8 * v15);
                      if (!v123)
                      {
                        v124 = v122 + 3;
                        if (v124 >= v222)
                          goto LABEL_102;
                        v123 = *(_QWORD *)(v218 + 8 * v124);
                        if (!v123)
                        {
                          while (1)
                          {
                            v15 = v124 + 1;
                            if (__OFADD__(v124, 1))
                              break;
                            if (v15 >= v222)
                              goto LABEL_102;
                            v123 = *(_QWORD *)(v218 + 8 * v15);
                            ++v124;
                            if (v123)
                              goto LABEL_86;
                          }
LABEL_145:
                          __break(1u);
                          goto LABEL_146;
                        }
                        v15 = v124;
                      }
                    }
                  }
LABEL_86:
                  v120 = (v123 - 1) & v123;
                  v121 = __clz(__rbit64(v123)) + (v15 << 6);
                }
                v125 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v17 + 16);
                v125(v12, *(_QWORD *)(v229 + 48) + *(_QWORD *)(v17 + 72) * v121, v16, v117);
                ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v66)(v12, 0, 1, v16);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
                  goto LABEL_103;
                v238 = v120;
                v240 = v15;
                v126 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
                v126(v23, v12, v16);
                v127 = *(_QWORD *)a4;
                if (*(_QWORD *)(*(_QWORD *)a4 + 16))
                {
                  swift_bridgeObjectRetain(*(_QWORD *)a4);
                  v128 = sub_100842EFC((uint64_t)v23);
                  if ((v129 & 1) != 0)
                  {
                    sub_10062E59C((_QWORD *)(*(_QWORD *)(v127 + 56) + 56 * v128), &aBlock);
                  }
                  else
                  {
                    v246 = 0;
                    v244 = 0u;
                    v245 = 0u;
                    aBlock = 0u;
                  }
                  swift_bridgeObjectRelease(v127);
                  if ((_QWORD)aBlock)
                  {
                    sub_10062E59C(&aBlock, &v241);
                    sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
                    v130 = v242;
                    swift_retain(v242);
                    sub_1007634F4((uint64_t)&v241);
                    v131 = v17;
                    v132 = (uint64_t)v225;
                    CalculateExpression.id.getter(v133);
                    swift_beginAccess(a4, &v241, 33, 0);
                    v134 = sub_100847A38(v132, (uint64_t)&aBlock);
                    v135 = *(void (**)(uint64_t, uint64_t, double))(v131 + 8);
                    v135(v132, v16, v134);
                    sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
                    swift_endAccess(&v241);
                    CalculateExpression.id.getter(v136);
                    v137 = v223;
                    v138 = sub_100842070(v132);
                    v139.n128_f64[0] = ((double (*)(uint64_t, uint64_t, double))v135)(v132, v16, v138);
                    CalculateExpression.id.getter(v139);
                    v140 = sub_100842984(v132);
                    v231 = (char *)v135;
                    v135(v132, v16, v140);
                    v141 = sub_100840E9C();
                    v142 = v232;
                    static DispatchWorkItemFlags.barrier.getter(v141);
                    ((void (*)(uint64_t, char *, uint64_t))v125)(v132, v23, v16);
                    v143 = *(unsigned __int8 *)(v131 + 80);
                    v144 = (v143 + 24) & ~v143;
                    v145 = swift_allocObject(&unk_10127BF80, v144 + v217, v143 | 7);
                    *(_QWORD *)(v145 + 16) = v137;
                    v126((char *)(v145 + v144), v132, v16);
                    *(_QWORD *)&v245 = sub_10076353C;
                    *((_QWORD *)&v245 + 1) = v145;
                    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                    *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
                    *(_QWORD *)&v244 = sub_1005D2FC0;
                    *((_QWORD *)&v244 + 1) = &unk_10127BF98;
                    v146 = _Block_copy(&aBlock);
                    v147 = v137;
                    v148 = v234;
                    static DispatchQoS.unspecified.getter(v149);
                    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v148, v142, v146);
                    _Block_release(v146);
                    (*(void (**)(char *, uint64_t))(v227 + 8))(v148, v235);
                    (*(void (**)(char *, uint64_t))(v226 + 8))(v142, v233);
                    swift_release(*((_QWORD *)&v245 + 1));
                    swift_retain(v130);
                    sub_100ADA1D4((uint64_t *)&aBlock, v130);
                    v150 = swift_release(aBlock);
                    CalculateExpression.id.getter(v150);
                    v151 = (void *)swift_unknownObjectWeakLoadStrong(v224);
                    if (v151
                      && (v152 = v151,
                          v153 = objc_msgSend(v151, "interactiveCanvasController"),
                          v152,
                          v153))
                    {
                      v154 = objc_msgSend(v153, "mathCalculationController");

                      v17 = v239;
                      v54 = v220;
                      v23 = v237;
                      a4 = v215;
                      v15 = v240;
                      if (v154)
                      {
                        sub_100842070((uint64_t)v236);
                        swift_release(v130);

                      }
                      else
                      {
                        v155 = swift_release(v130);
                      }
                      v66 = v230;
                    }
                    else
                    {
                      v155 = swift_release(v130);
                      v17 = v239;
                      v54 = v220;
                      v23 = v237;
                      a4 = v215;
                      v66 = v230;
                      v15 = v240;
                    }
                    v118 = v231;
                    ((void (*)(char *, uint64_t, __n128))v231)(v236, v16, v155);
                    v12 = v216;
                    goto LABEL_70;
                  }
                }
                else
                {
                  v246 = 0;
                  v244 = 0u;
                  v245 = 0u;
                  aBlock = 0u;
                }
                sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
                v118 = *(char **)(v17 + 8);
                v15 = v240;
LABEL_70:
                v116 = v238;
                ((void (*)(char *, uint64_t))v118)(v23, v16);
                continue;
              }
            }
            v62 = *(_QWORD *)&v213[8 * v61];
            ++v15;
            if (!v62)
            {
              v15 = v61 + 1;
              if (v61 + 1 >= v214)
                goto LABEL_63;
              v62 = *(_QWORD *)&v213[8 * v15];
              if (!v62)
              {
                v15 = v61 + 2;
                if (v61 + 2 >= v214)
                  goto LABEL_63;
                v62 = *(_QWORD *)&v213[8 * v15];
                if (!v62)
                {
                  v63 = v61 + 3;
                  if (v63 >= v214)
                    goto LABEL_63;
                  v62 = *(_QWORD *)&v213[8 * v63];
                  if (!v62)
                  {
                    while (1)
                    {
                      v15 = v63 + 1;
                      if (__OFADD__(v63, 1))
                        goto LABEL_144;
                      if (v15 >= v214)
                        goto LABEL_63;
                      v62 = *(_QWORD *)&v213[8 * v15];
                      ++v63;
                      if (v62)
                        goto LABEL_47;
                    }
                  }
                  v15 = v63;
                }
              }
            }
LABEL_47:
            v240 = (v62 - 1) & v62;
            v60 = __clz(__rbit64(v62)) + (v15 << 6);
          }
          v64 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v17 + 16);
          v65 = v218;
          v64(v218, *((_QWORD *)v230 + 6) + *(_QWORD *)(v17 + 72) * v60, v16, v59);
          v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v66)(v65, 0, 1, v16);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v65, 1, v16) == 1)
            goto LABEL_64;
          v238 = v15;
          v67 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
          v68 = (uint64_t)v231;
          v67(v231, v65, v16);
          v69 = *(_QWORD *)a4;
          if (!*(_QWORD *)(*(_QWORD *)a4 + 16))
            break;
          swift_bridgeObjectRetain(*(_QWORD *)a4);
          v70 = sub_100842EFC(v68);
          if ((v71 & 1) != 0)
          {
            sub_10062E59C((_QWORD *)(*(_QWORD *)(v69 + 56) + 56 * v70), &aBlock);
          }
          else
          {
            v246 = 0;
            v244 = 0u;
            v245 = 0u;
            aBlock = 0u;
          }
          swift_bridgeObjectRelease(v69);
          if (!(_QWORD)aBlock)
            goto LABEL_53;
          sub_10062E59C(&aBlock, &v241);
          sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
          v222 = v242;
          swift_retain(v242);
          sub_1007634F4((uint64_t)&v241);
          if (v54[2] && (v72 = sub_100842EFC(v68), (v73 & 1) != 0))
          {
            v74 = *(id *)(v54[7] + 8 * v72);
            v75 = objc_msgSend(v74, "strokeGroupIdentifier");
            v76 = v223;
            v210 = *(void (**)(char *, uint64_t))&v223[v219];
            v77 = v68;
            v78 = v232;
            static DispatchWorkItemFlags.barrier.getter(v75);
            v79 = v17;
            v80 = v225;
            ((void (*)(char *, uint64_t, uint64_t))v64)(v225, v77, v16);
            v81 = *(unsigned __int8 *)(v79 + 80);
            v82 = (v81 + 24) & ~v81;
            v83 = (v211 + v82) & 0xFFFFFFFFFFFFFFF8;
            v84 = swift_allocObject(&unk_10127BFD0, v83 + 8, v81 | 7);
            *(_QWORD *)(v84 + 16) = v76;
            v85 = v80;
            v86 = v74;
            v67((char *)(v84 + v82), (uint64_t)v85, v16);
            *(_QWORD *)(v84 + v83) = v75;
            *(_QWORD *)&v245 = sub_100765920;
            *((_QWORD *)&v245 + 1) = v84;
            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
            *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
            *(_QWORD *)&v244 = sub_1005D2FC0;
            *((_QWORD *)&v244 + 1) = &unk_10127BFE8;
            v87 = _Block_copy(&aBlock);
            v76;
            v88 = v75;
            v89 = v234;
            static DispatchQoS.unspecified.getter(v90);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v89, v78, v87);
            _Block_release(v87);
            v210 = *(void (**)(char *, uint64_t))(v227 + 8);
            v210(v89, v235);
            v91 = *(void (**)(char *, uint64_t))(v226 + 8);
            v91(v78, v233);
            v92 = *((_QWORD *)&v245 + 1);

            v93 = objc_msgSend(v86, "expression", swift_release(v92).n128_f64[0]);
            v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
            v96 = v95;

            v97 = v222;
            CalculateExpression.expression.setter(v94, v96);
            CalculateExpression.setNeedsEvaluation(rebuild:)(0);
            v98 = (void *)swift_unknownObjectWeakLoadStrong(v224);
            if (v98)
            {
              v99 = v98;
              v100 = objc_msgSend(v98, "interactiveCanvasController");

              if (v100)
              {
                v101 = objc_msgSend(v100, "mathCalculationController");

                if (v101)
                {
                  v103 = v232;
                  static DispatchWorkItemFlags.barrier.getter(v102);
                  v104 = swift_allocObject(&unk_10127C020, 32, 7);
                  *(_QWORD *)(v104 + 16) = v101;
                  *(_QWORD *)(v104 + 24) = v86;
                  *(_QWORD *)&v245 = sub_100765AE8;
                  *((_QWORD *)&v245 + 1) = v104;
                  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                  *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
                  *(_QWORD *)&v244 = sub_1005D2FC0;
                  *((_QWORD *)&v244 + 1) = &unk_10127C038;
                  v105 = _Block_copy(&aBlock);
                  v106 = v86;
                  v107 = v101;
                  v108 = v234;
                  static DispatchQoS.unspecified.getter(v109);
                  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v108, v103, v105);
                  _Block_release(v105);
                  v210(v108, v235);
                  v91(v103, v233);
                  v110 = *((_QWORD *)&v245 + 1);

                  swift_release(v110);
                }
              }
            }
            sub_100840E9C();

            v111 = swift_release(v97);
            v17 = v239;
            (*(void (**)(char *, uint64_t, __n128))(v239 + 8))(v231, v16, v111);
            v54 = v220;
            v12 = v216;
            v23 = v237;
            a4 = v215;
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v68, v16);
            v59 = swift_release(v222);
          }
LABEL_31:
          v15 = v238;
          v58 = v240;
        }
        v246 = 0;
        v244 = 0u;
        v245 = 0u;
        aBlock = 0u;
LABEL_53:
        sub_1004CB800((uint64_t)&aBlock, &qword_1013F07B0);
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v68, v16);
        goto LABEL_31;
      }
    }
  }
}

uint64_t sub_100765924()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100765950()
{
  uint64_t v0;

  return sub_100841F18(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10076595C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007659D0(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_100765A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100765AA4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10084278C(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

id sub_100765B48()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
  qword_10147F580 = (uint64_t)result;
  return result;
}

void sub_100765B80()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F588 = v4;
  unk_10147F590 = v6;
}

uint64_t sub_100765C48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t result;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 112, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF8620;
  v2 = (void *)objc_opt_self(CRLColor);
  *(_QWORD *)(v1 + 32) = objc_msgSend(v2, "colorWithR:G:B:", 255, 244, 153);
  *(_QWORD *)(v1 + 40) = objc_msgSend(v2, "colorWithR:G:B:", 216, 253, 118);
  *(_QWORD *)(v1 + 48) = objc_msgSend(v2, "colorWithR:G:B:", 169, 214, 251);
  *(_QWORD *)(v1 + 56) = objc_msgSend(v2, "colorWithR:G:B:", 254, 201, 240);
  *(_QWORD *)(v1 + 64) = objc_msgSend(v2, "colorWithR:G:B:", 237, 209, 254);
  *(_QWORD *)(v1 + 72) = objc_msgSend(v2, "colorWithR:G:B:", 191, 248, 236);
  *(_QWORD *)(v1 + 80) = objc_msgSend(v2, "colorWithR:G:B:", 255, 220, 158);
  *(_QWORD *)(v1 + 88) = objc_msgSend(v2, "colorWithR:G:B:", 254, 205, 214);
  *(_QWORD *)(v1 + 96) = objc_msgSend(v2, "colorWithR:G:B:", 237, 178, 149);
  v3 = objc_msgSend(v2, "colorWithR:G:B:", 198, 216, 255);
  *(_QWORD *)(v1 + 104) = v3;
  result = specialized Array._endMutation()(v3);
  qword_1013F0820 = v1;
  return result;
}

uint64_t sub_100765E28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t result;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 112, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF8620;
  v2 = (void *)objc_opt_self(CRLColor);
  *(_QWORD *)(v1 + 32) = objc_msgSend(v2, "colorWithR:G:B:", 231, 192, 37);
  *(_QWORD *)(v1 + 40) = objc_msgSend(v2, "colorWithR:G:B:", 92, 186, 46);
  *(_QWORD *)(v1 + 48) = objc_msgSend(v2, "colorWithR:G:B:", 5, 147, 244);
  *(_QWORD *)(v1 + 56) = objc_msgSend(v2, "colorWithR:G:B:", 236, 121, 220);
  *(_QWORD *)(v1 + 64) = objc_msgSend(v2, "colorWithR:G:B:", 164, 119, 236);
  *(_QWORD *)(v1 + 72) = objc_msgSend(v2, "colorWithR:G:B:", 74, 194, 168);
  *(_QWORD *)(v1 + 80) = objc_msgSend(v2, "colorWithR:G:B:", 251, 140, 29);
  *(_QWORD *)(v1 + 88) = objc_msgSend(v2, "colorWithR:G:B:", 253, 35, 88);
  *(_QWORD *)(v1 + 96) = objc_msgSend(v2, "colorWithR:G:B:", 171, 90, 77);
  v3 = objc_msgSend(v2, "colorWithR:G:B:", 126, 156, 217);
  *(_QWORD *)(v1 + 104) = v3;
  result = specialized Array._endMutation()(v3);
  qword_1013F0828 = v1;
  return result;
}

uint64_t sub_100766008()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t result;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 112, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF8620;
  v2 = (void *)objc_opt_self(CRLColor);
  *(_QWORD *)(v1 + 32) = objc_msgSend(v2, "colorWithR:G:B:", 231, 201, 88);
  *(_QWORD *)(v1 + 40) = objc_msgSend(v2, "colorWithR:G:B:", 123, 196, 90);
  *(_QWORD *)(v1 + 48) = objc_msgSend(v2, "colorWithR:G:B:", 73, 165, 242);
  *(_QWORD *)(v1 + 56) = objc_msgSend(v2, "colorWithR:G:B:", 236, 145, 222);
  *(_QWORD *)(v1 + 64) = objc_msgSend(v2, "colorWithR:G:B:", 177, 142, 236);
  *(_QWORD *)(v1 + 72) = objc_msgSend(v2, "colorWithR:G:B:", 111, 203, 180);
  *(_QWORD *)(v1 + 80) = objc_msgSend(v2, "colorWithR:G:B:", 248, 159, 80);
  *(_QWORD *)(v1 + 88) = objc_msgSend(v2, "colorWithR:G:B:", 250, 85, 117);
  *(_QWORD *)(v1 + 96) = objc_msgSend(v2, "colorWithR:G:B:", 184, 119, 108);
  v3 = objc_msgSend(v2, "colorWithR:G:B:", 147, 172, 220);
  *(_QWORD *)(v1 + 104) = v3;
  result = specialized Array._endMutation()(v3);
  qword_1013F0830 = v1;
  return result;
}

void sub_1007661E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSString v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSString v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  NSString v67;
  NSString v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v0 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v1 = swift_allocObject(v0, 192, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100F07C80;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v9;
  v10 = objc_msgSend(v2, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *(_QWORD *)(v1 + 48) = v14;
  *(_QWORD *)(v1 + 56) = v16;
  v17 = objc_msgSend(v2, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  *(_QWORD *)(v1 + 64) = v21;
  *(_QWORD *)(v1 + 72) = v23;
  v24 = objc_msgSend(v2, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *(_QWORD *)(v1 + 80) = v28;
  *(_QWORD *)(v1 + 88) = v30;
  v31 = objc_msgSend(v2, "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, v33, 0);

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v37 = v36;

  *(_QWORD *)(v1 + 96) = v35;
  *(_QWORD *)(v1 + 104) = v37;
  v38 = objc_msgSend(v2, "mainBundle");
  v39 = String._bridgeToObjectiveC()();
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, v40, 0);

  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v44 = v43;

  *(_QWORD *)(v1 + 112) = v42;
  *(_QWORD *)(v1 + 120) = v44;
  v45 = objc_msgSend(v2, "mainBundle");
  v46 = String._bridgeToObjectiveC()();
  v47 = String._bridgeToObjectiveC()();
  v48 = objc_msgSend(v45, "localizedStringForKey:value:table:", v46, v47, 0);

  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v51 = v50;

  *(_QWORD *)(v1 + 128) = v49;
  *(_QWORD *)(v1 + 136) = v51;
  v52 = objc_msgSend(v2, "mainBundle");
  v53 = String._bridgeToObjectiveC()();
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v52, "localizedStringForKey:value:table:", v53, v54, 0);

  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v58 = v57;

  *(_QWORD *)(v1 + 144) = v56;
  *(_QWORD *)(v1 + 152) = v58;
  v59 = objc_msgSend(v2, "mainBundle");
  v60 = String._bridgeToObjectiveC()();
  v61 = String._bridgeToObjectiveC()();
  v62 = objc_msgSend(v59, "localizedStringForKey:value:table:", v60, v61, 0);

  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v65 = v64;

  *(_QWORD *)(v1 + 160) = v63;
  *(_QWORD *)(v1 + 168) = v65;
  v66 = objc_msgSend(v2, "mainBundle");
  v67 = String._bridgeToObjectiveC()();
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v66, "localizedStringForKey:value:table:", v67, v68, 0);

  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  *(_QWORD *)(v1 + 176) = v70;
  *(_QWORD *)(v1 + 184) = v72;
  off_1013F0838 = (_UNKNOWN *)v1;
}

uint64_t type metadata accessor for CRLCollaboratorColorResolver()
{
  return objc_opt_self(_TtC8Freeform28CRLCollaboratorColorResolver);
}

ValueMetadata *type metadata accessor for CRLCollaboratorColorType()
{
  return &type metadata for CRLCollaboratorColorType;
}

unint64_t sub_100766820()
{
  unint64_t result;

  result = qword_1013F08D8;
  if (!qword_1013F08D8)
  {
    result = swift_getWitnessTable(&unk_100F08AE4, &type metadata for CRLCollaboratorColorType);
    atomic_store(result, (unint64_t *)&qword_1013F08D8);
  }
  return result;
}

void sub_100766864(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  double v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = objc_msgSend(a1, "userIdentity");
  v2 = objc_msgSend(v1, "userRecordID");

  if (!v2)
  {
    NSNotFound.getter(v3);
    return;
  }
  v4 = objc_msgSend(v2, "recordName");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) == 0)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease(v7);
  v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v14 = objc_msgSend(v13, "delegate");

  if (!v14)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v15 = type metadata accessor for CRLiOSAppDelegate();
  v16 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v14, v15, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
  swift_retain(v16);
  swift_unknownObjectRelease(v14);
  v17 = *(void **)(v16 + 40);
  v18 = v17;
  *(_QWORD *)&v19 = swift_release(v16).n128_u64[0];
  if (!v17)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"defaultCollaboratorColorIndex(for:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorColorResolver.swift", 98, 2, 80, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"defaultCollaboratorColorIndex(for:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorColorResolver.swift", 98, 2u, 80, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    NSNotFound.getter(v26);

    return;
  }
  v20 = objc_msgSend(v18, "recordName", v19);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v7 = v21;

LABEL_13:
  v22 = sub_1004D292C();
  v23 = StringProtocol.hash.getter(&type metadata for String, v22);
  swift_bridgeObjectRelease(v7);
  if (qword_1013DD048 != -1)
    swift_once(&qword_1013DD048, sub_100766008);
  v24 = qword_1013F0830;
  if (!((unint64_t)qword_1013F0830 >> 62))
  {
    v25 = *(_QWORD *)((qword_1013F0830 & 0xFFFFFFFFFFFFF8) + 0x10);

    if (v25)
      goto LABEL_17;
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (qword_1013F0830 < 0)
    v27 = qword_1013F0830;
  else
    v27 = qword_1013F0830 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(qword_1013F0830);
  v25 = _CocoaArrayWrapper.endIndex.getter(v27);

  swift_bridgeObjectRelease(v24);
  if (!v25)
    goto LABEL_25;
LABEL_17:
  if (v23 == 0x8000000000000000 && v25 == -1)
    goto LABEL_26;
}

uint64_t sub_100766BAC(void *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char v34;
  Swift::Int v35;
  Swift::Int value;
  Swift::Bool is_nil;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char *v44;
  Swift::Int v45;
  char *v46;
  uint64_t v47;
  char v48[8];
  Swift::Int_optional v49;

  v46 = a2;
  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v43 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v43 - v23;
  sub_100766864(a1);
  v26 = v25;
  v27 = NSNotFound.getter(v25);
  v45 = v26;
  if (v26 == v27)
    return NSNotFound.getter(v27);
  v44 = v6;
  v29 = sub_100766F7C();
  dispatch thunk of SetAlgebra.init()(v3, v29);
  v47 = 0;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 1;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 2;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 3;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 4;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 5;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 6;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 7;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 8;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v47 = 9;
  dispatch thunk of SetAlgebra.insert(_:)(v48, &v47, v3, v29);
  v30 = v9;
  v31 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v31(v18, v21, v3);
  v31(v12, v21, v3);
  v31(v30, v46, v3);
  dispatch thunk of SetAlgebra.symmetricDifference(_:)(v30, v3, v29);
  dispatch thunk of SetAlgebra.intersection(_:)(v15, v3, v29);
  v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v15, v3);
  v33 = ((uint64_t (*)(char *, uint64_t))v32)(v21, v3);
  v34 = IndexSet.isEmpty.getter(v33);
  v35 = v45;
  if ((v34 & 1) != 0 || !IndexSet.contains(_:)(v45))
  {
    v32(v24, v3);
  }
  else
  {
    v49 = IndexSet.integerGreaterThan(_:)(v35);
    value = v49.value;
    is_nil = v49.is_nil;
    v38 = v44;
    v39 = ((uint64_t (*)(char *, char *, uint64_t))v31)(v44, v24, v3);
    if (is_nil)
    {
      v40 = IndexSet.first.getter(v39);
      v42 = v41;
      v32(v38, v3);
      v32(v24, v3);
      if ((v42 & 1) == 0)
        return v40;
    }
    else
    {
      v32(v38, v3);
      v32(v24, v3);
      return value;
    }
  }
  return v35;
}

unint64_t sub_100766F7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EFDE0;
  if (!qword_1013EFDE0)
  {
    v1 = type metadata accessor for IndexSet(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexSet, v1);
    atomic_store(result, (unint64_t *)&qword_1013EFDE0);
  }
  return result;
}

id sub_100766FC4(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  id result;
  uint64_t v8;
  _BYTE v9[72];

  if (a2 <= 9)
  {
    switch(a1)
    {
      case 2:
        if (qword_1013DD048 != -1)
          a1 = swift_once(&qword_1013DD048, sub_100766008);
        v3 = qword_1013F0830;
        if ((qword_1013F0830 & 0xC000000000000001) != 0)
          return (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v3);
        if (*(_QWORD *)((qword_1013F0830 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
          return *(id *)(v3 + 8 * a2 + 32);
        __break(1u);
        break;
      case 1:
        if (qword_1013DD040 != -1)
          swift_once(&qword_1013DD040, sub_100765E28);
        v3 = qword_1013F0828;
        if ((qword_1013F0828 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((qword_1013F0828 & 0xFFFFFFFFFFFFF8) + 0x10) <= a2)
          {
            __break(1u);
            goto LABEL_9;
          }
          return *(id *)(v3 + 8 * a2 + 32);
        }
        return (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v3);
      case 0:
        if (qword_1013DD038 != -1)
          a1 = swift_once(&qword_1013DD038, sub_100765C48);
        v3 = qword_1013F0820;
        if ((qword_1013F0820 & 0xC000000000000001) != 0)
          return (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v3);
        if (*(_QWORD *)((qword_1013F0820 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
          return *(id *)(v3 + 8 * a2 + 32);
        __break(1u);
        break;
    }
    v8 = a1;
    result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLCollaboratorColorType, &v8, &type metadata for CRLCollaboratorColorType, &type metadata for Int);
    __break(1u);
    return result;
  }
LABEL_9:
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v9);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = a2;
  sub_100757E04(&_mh_execute_header, (uint64_t)"color(_:index:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorColorResolver.swift", 98, 2, 49, "Invalid index: %d", 17, 2u, inited);
  sub_1004F5394(inited, (uint64_t)"color(_:index:)", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorColorResolver.swift", 98, 2u, 49, (uint64_t)"Invalid index: %d", 17, 2u);
  swift_setDeallocating(inited);
  v6 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v6);
  if (qword_1013DD028 != -1)
    swift_once(&qword_1013DD028, sub_100765B48);
  return (id)qword_10147F580;
}

uint64_t sub_100767264(unint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  _BYTE v7[72];

  if (a1 > 9)
  {
    v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v3, v7);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = a1;
    sub_100757E04(&_mh_execute_header, (uint64_t)"colorName(_:index:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorColorResolver.swift", 98, 2, 66, "Invalid index: %d", 17, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"colorName(_:index:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorColorResolver.swift", 98, 2u, 66, (uint64_t)"Invalid index: %d", 17, 2u);
    swift_setDeallocating(inited);
    v5 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v5);
    if (qword_1013DD030 == -1)
    {
LABEL_7:
      v2 = &qword_10147F588;
      return *v2;
    }
LABEL_10:
    swift_once(&qword_1013DD030, sub_100765B80);
    goto LABEL_7;
  }
  if (qword_1013DD050 != -1)
    swift_once(&qword_1013DD050, sub_1007661E8);
  if (*((_QWORD *)off_1013F0838 + 2) <= a1)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = (uint64_t *)((char *)off_1013F0838 + 16 * a1 + 32);
  return *v2;
}

_QWORD *sub_10076740C(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  Swift::String v12;
  Swift::String v13;
  unint64_t v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;

  v3 = v2;
  v25 = *v2;
  v27 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v27 - 8);
  v7 = __chkstk_darwin(v27);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v24 - v10;
  v28 = 0;
  v29 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v29);
  v28 = (id)0xD000000000000012;
  v29 = 0x8000000100FCEEB0;
  v26 = a1;
  v12._countAndFlagsBits = a1;
  v12._object = a2;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14 = v29;
  v15 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v28 = 0;
  v17 = objc_msgSend(v15, "initWithSignature:error:", v16, &v28);

  v18 = v28;
  if (v17)
  {
    v3[2] = v17;
    v19 = v18;
    v20 = objc_msgSend(v17, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

    URL.appendingPathComponent(_:)(v26, a2);
    swift_bridgeObjectRelease(a2);
    v21 = v27;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))((uint64_t)v3 + OBJC_IVAR____TtC8Freeform16CRLTemporaryFile_url, v11, v21);
  }
  else
  {
    v22 = v28;
    _convertNSErrorToError(_:)(v18);

    swift_willThrow();
    swift_bridgeObjectRelease(a2);
    swift_deallocPartialClassInstance(v3, v25, *(unsigned int *)(*v3 + 48), *(unsigned __int16 *)(*v3 + 52));
  }
  return v3;
}

uint64_t sub_10076765C()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC8Freeform16CRLTemporaryFile_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1007676B4()
{
  return type metadata accessor for CRLTemporaryFile(0);
}

uint64_t type metadata accessor for CRLTemporaryFile(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F0908;
  if (!qword_1013F0908)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLTemporaryFile);
  return result;
}

uint64_t sub_1007676F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100767774(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char v20;
  double *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *);
  uint64_t v34;
  char *v35;
  double *v36;

  v4 = v3;
  v33 = a1;
  v34 = a2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v31 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v35 = (char *)&v26 - v14;
  v36 = _swiftEmptyArrayStorage;
  v32 = *(_QWORD *)(a3 + 16);
  if (v32)
  {
    v15 = 0;
    v30 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v17 = *(_QWORD *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9, v13);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v29)(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_17;
      v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v19 = v35;
      v18(v35, v8, v9);
      v20 = v33(v19);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
        swift_bridgeObjectRelease();
        swift_release(v36);
        return;
      }
      if ((v20 & 1) != 0)
      {
        v18(v31, v35, v9);
        v21 = v36;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
        v28 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100600724(0, *((_QWORD *)v21 + 2) + 1, 1);
          v21 = v36;
        }
        v24 = *((_QWORD *)v21 + 2);
        v23 = *((_QWORD *)v21 + 3);
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v27 = v24 + 1;
          sub_100600724(v23 > 1, v24 + 1, 1);
          v25 = v27;
          v21 = v36;
        }
        *((_QWORD *)v21 + 2) = v25;
        v18((char *)v21 + v16 + v24 * v17, v31, v9);
        v36 = v21;
        v4 = v28;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      }
      a3 = v30;
      if (v32 == ++v15)
      {
        v29(v8, 1, 1, v9, v13);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v13);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  }
}

_QWORD *sub_100767A40(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  return sub_100767A78(a1, a2, a3);
}

uint64_t sub_100767A54(uint64_t (*a1)(char *), _QWORD *a2, uint64_t a3)
{
  return sub_100767DA0(a1, a2, a3, type metadata accessor for CRLBoardLibraryViewModel.Item, (void (*)(BOOL, uint64_t, uint64_t))sub_1006008AC);
}

_QWORD *sub_100767A78(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = _swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

uint64_t sub_100767C1C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double *v5;
  double *v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  double *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  double *v13;
  uint64_t (*v14)(__int128 *);
  __int128 v15[2];
  __int128 v16[2];
  double *v17;

  v5 = _swiftEmptyArrayStorage;
  v17 = _swiftEmptyArrayStorage;
  v6 = *(double **)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = _swiftEmptyArrayStorage;
    v13 = *(double **)(a3 + 16);
    v14 = (uint64_t (*)(__int128 *))result;
    while ((unint64_t)v5 < *(_QWORD *)(a3 + 16))
    {
      sub_1004E90B0(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
        swift_release(v9);
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_1004DB728(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          sub_100600A50(0, *((_QWORD *)v9 + 2) + 1, 1);
        v9 = v17;
        v12 = *((_QWORD *)v17 + 2);
        v11 = *((_QWORD *)v17 + 3);
        if (v12 >= v11 >> 1)
        {
          sub_100600A50(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        *((_QWORD *)v9 + 2) = v12 + 1;
        result = sub_1004DB728(v15, (uint64_t)&v9[5 * v12 + 4]);
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
      }
      v5 = (double *)((char *)v5 + 1);
      v8 += 40;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_100767DA0(uint64_t (*a1)(char *), _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *);
  _QWORD *v29;
  _QWORD *v30;

  v22 = a5;
  v6 = a4;
  v28 = a1;
  v29 = a2;
  v8 = a4(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v26 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v13 = (char *)&v22 - v12;
  v14 = _swiftEmptyArrayStorage;
  v30 = _swiftEmptyArrayStorage;
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v15 = 0;
    v16 = _swiftEmptyArrayStorage;
    v23 = v6;
    v24 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v18 = *(_QWORD *)(v27 + 72);
      sub_1004B8460(a3 + v17 + v18 * v15, (uint64_t)v13, v6);
      v14 = v29;
      v19 = v28(v13);
      if (v5)
      {
        sub_1004B84A4((uint64_t)v13, v6);
        swift_release(v16);
        swift_bridgeObjectRelease(a3);
        return (uint64_t)v14;
      }
      if ((v19 & 1) != 0)
      {
        sub_1004B84E0((uint64_t)v13, v26, v6);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          v22(0, v16[2] + 1, 1);
        v16 = v30;
        v21 = v30[2];
        v20 = v30[3];
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v16 = v30;
        }
        v16[2] = v21 + 1;
        v6 = v23;
        result = sub_1004B84E0(v26, (uint64_t)v16 + v17 + v21 * v18, v23);
        a3 = v24;
      }
      else
      {
        result = sub_1004B84A4((uint64_t)v13, v6);
      }
      if (v25 == ++v15)
      {
        v14 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v14;
  }
  return result;
}

uint64_t sub_100767FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

void sub_100767FC8(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __int128 v68;
  uint64_t v69;

  v57 = a4;
  v63 = a2;
  v65 = a1;
  v64 = a3 & 1;
  v62 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v62);
  v61 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v60 = (char *)&v56 - v8;
  v9 = type metadata accessor for NavigationSplitViewVisibility(0);
  v58 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - v13;
  v15 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v56 - v19;
  *(_QWORD *)(a5 + 24) = 0;
  v59 = a5 + 16;
  swift_unknownObjectWeakInit(a5 + 16);
  v21 = (int *)_s11SwiftUIViewVMa(0);
  v22 = (_QWORD *)(a5 + v21[8]);
  *v22 = swift_getKeyPath(byte_100F08EA8);
  v23 = sub_1004B804C(&qword_1013F0BF0);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  v24 = a5 + v21[9];
  v66 = 0;
  v67 = 0xE000000000000000;
  State.init(wrappedValue:)(&v68, &v66, &type metadata for String);
  v25 = v69;
  *(_OWORD *)v24 = v68;
  *(_QWORD *)(v24 + 16) = v25;
  v26 = (_QWORD *)(a5 + v21[10]);
  v27 = _s13ItemViewModelVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v20, 1, 1, v27);
  sub_1004CB7BC((uint64_t)v20, (uint64_t)v17, &qword_101402B80);
  State.init(wrappedValue:)(v26, v17, v15);
  v28 = sub_1004CB800((uint64_t)v20, &qword_101402B80);
  v29 = (_QWORD *)(a5 + v21[11]);
  static NavigationSplitViewVisibility.all.getter(v28);
  v30 = v58;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v11, v14, v9);
  State.init(wrappedValue:)(v29, v11, v9);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v9);
  v31 = a5 + v21[12];
  type metadata accessor for CGSize(0);
  v33 = v32;
  v66 = 0;
  v67 = 0;
  State.init(wrappedValue:)(&v68, &v66, v32);
  v34 = v69;
  *(_OWORD *)v31 = v68;
  *(_QWORD *)(v31 + 16) = v34;
  v35 = a5 + v21[13];
  v66 = 0;
  v67 = 0;
  State.init(wrappedValue:)(&v68, &v66, v33);
  v36 = v69;
  *(_OWORD *)v35 = v68;
  *(_QWORD *)(v35 + 16) = v36;
  if (qword_1013DD388 != -1)
    swift_once(&qword_1013DD388, sub_10089A688);
  v37 = qword_10147FBC8;
  if (*(_QWORD *)(qword_10147FBC8 + 16))
  {
    v38 = *(unsigned __int8 *)(*(_QWORD *)(_s15FilterViewModelVMa(0) - 8) + 80);
    v39 = v37 + ((v38 + 32) & ~v38);
    v40 = type metadata accessor for UUID(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v60, v39, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  }
  else
  {
    v43 = type metadata accessor for UUID(0);
    v42 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v60, 1, 1, v43);
  }
  v44 = (_QWORD *)(a5 + v21[14]);
  v45 = v61;
  sub_1004CB7BC(v42, v61, (uint64_t *)&unk_1013E1A50);
  State.init(wrappedValue:)(v44, v45, v62);
  sub_1004CB800(v42, (uint64_t *)&unk_1013E1A50);
  *(_QWORD *)(a5 + 24) = v63;
  v46 = v65;
  swift_unknownObjectWeakAssign(v59, v65);
  *(_BYTE *)(a5 + 8) = v64;
  v47 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v48 = objc_msgSend(v47, "delegate");

  if (v48)
  {
    v49 = type metadata accessor for CRLiOSAppDelegate();
    v50 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v48, v49, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary);
    swift_retain(v50);
    swift_unknownObjectRelease(v48);
    if (v50)
    {
      *(_QWORD *)a5 = v50;
      v51 = _s11SwiftUIViewV9PublisherCMa(0);
      v52 = sub_1004B7878(&qword_1013F0FE0, _s11SwiftUIViewV9PublisherCMa, (uint64_t)&unk_100F08C80);
      v53 = ObservedObject.init(wrappedValue:)(v57, v51, v52);
      v55 = v54;
      swift_unknownObjectRelease(v46);
      *(_QWORD *)(a5 + 32) = v53;
      *(_QWORD *)(a5 + 40) = v55;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1007684BC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F08CB8);
  v2 = swift_getKeyPath(&unk_100F08CE0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10076852C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCVC8Freeform17CRLStencilLibrary11SwiftUIView9Publisher__stencilToSaveThumbnailImage;
  v2 = sub_1004B804C(qword_1013F0FE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100768580()
{
  return _s11SwiftUIViewV9PublisherCMa(0);
}

uint64_t _s11SwiftUIViewV9PublisherCMa(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F0B30, (uint64_t)&_s11SwiftUIViewV9PublisherCMn);
}

void sub_10076859C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10076A2C8(319, (unint64_t *)&unk_1013F0B40, (uint64_t *)&unk_101409880, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t sub_100768620(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, int *, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  void (*v82)(char *, _QWORD, uint64_t, int *, __n128);

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a2 + 2;
    swift_retain(v5);
    swift_unknownObjectWeakCopyInit(a1 + 16, v8);
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    v10 = a2[5];
    *(_QWORD *)(a1 + 40) = v10;
    v11 = a3[8];
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    swift_retain(v10);
    v14 = sub_1004B804C(&qword_1013F0BF0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v17 = *v13;
      *v12 = *v13;
      swift_retain(v17);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v18 = a3[9];
    v19 = a3[10];
    v20 = (_QWORD *)(a1 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v21[2];
    v20[2] = v23;
    v24 = (char *)(a1 + v19);
    v25 = (char *)a2 + v19;
    v26 = (int *)_s13ItemViewModelVMa(0);
    v27 = *((_QWORD *)v26 - 1);
    v28 = *(unsigned int (**)(char *, uint64_t, int *, __n128))(v27 + 48);
    swift_bridgeObjectRetain(v22);
    v29 = swift_retain(v23);
    if (v28(v25, 1, v26, v29))
    {
      v30 = sub_1004B804C(&qword_101402B80);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
      v32 = v26[5];
      v33 = &v24[v32];
      v34 = &v25[v32];
      v35 = type metadata accessor for Date(0);
      v81 = v27;
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      v36(v33, v34, v35);
      v36(&v24[v26[6]], &v25[v26[6]], v35);
      v37 = v26[7];
      v38 = *(void **)&v25[v37];
      *(_QWORD *)&v24[v37] = v38;
      v39 = v26[8];
      v40 = &v24[v39];
      v41 = &v25[v39];
      v42 = *((_QWORD *)v41 + 1);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = v42;
      v43 = v26[9];
      v44 = &v24[v43];
      v45 = &v25[v43];
      v46 = *((_QWORD *)v45 + 1);
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = v46;
      v47 = v26[10];
      v48 = *(_QWORD *)&v25[v47];
      *(_QWORD *)&v24[v47] = v48;
      v49 = v26[11];
      v50 = *(_QWORD *)&v25[v49];
      *(_QWORD *)&v24[v49] = v50;
      v24[v26[12]] = v25[v26[12]];
      v24[v26[13]] = v25[v26[13]];
      v82 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v81 + 56);
      v51 = v38;
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRetain(v48);
      v52 = swift_bridgeObjectRetain(v50);
      v82(v24, 0, 1, v26, v52);
    }
    v53 = *(int *)(sub_1004B804C(&qword_1013F0BF8) + 28);
    v54 = *(_QWORD *)&v25[v53];
    *(_QWORD *)&v24[v53] = v54;
    v55 = a3[11];
    v56 = a1 + v55;
    v57 = (uint64_t)a2 + v55;
    v58 = type metadata accessor for NavigationSplitViewVisibility(0);
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v58 - 8) + 16);
    v60 = swift_retain(v54);
    v59(v56, v57, v58, v60);
    v61 = *(int *)(sub_1004B804C(&qword_1013F0C00) + 28);
    v62 = *(_QWORD *)(v57 + v61);
    *(_QWORD *)(v56 + v61) = v62;
    v63 = a3[12];
    v64 = a3[13];
    v65 = a1 + v63;
    v66 = (uint64_t)a2 + v63;
    *(_OWORD *)v65 = *(_OWORD *)v66;
    v67 = *(_QWORD *)(v66 + 16);
    *(_QWORD *)(v65 + 16) = v67;
    v68 = a1 + v64;
    v69 = (uint64_t)a2 + v64;
    *(_OWORD *)v68 = *(_OWORD *)v69;
    v70 = *(_QWORD *)(v69 + 16);
    *(_QWORD *)(v68 + 16) = v70;
    v71 = a3[14];
    v72 = (char *)(a1 + v71);
    v73 = (char *)a2 + v71;
    v74 = type metadata accessor for UUID(0);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v75 + 48);
    swift_retain(v62);
    swift_retain(v67);
    v77 = swift_retain(v70);
    if (v76(v73, 1, v74, v77))
    {
      v78 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v79 = *(int *)(sub_1004B804C(&qword_1013F0C08) + 28);
    v5 = *(_QWORD *)&v73[v79];
    *(_QWORD *)&v72[v79] = v5;
  }
  swift_retain(v5);
  return a1;
}

double sub_100768A28(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;

  swift_release(*a1);
  swift_unknownObjectWeakDestroy(a1 + 2);
  swift_release(a1[5]);
  v4 = (_QWORD *)((char *)a1 + a2[8]);
  v5 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (char *)a1 + a2[9];
  swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
  swift_release(*((_QWORD *)v7 + 2));
  v8 = (char *)a1 + a2[10];
  v9 = (int *)_s13ItemViewModelVMa(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    v11 = &v8[v9[5]];
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v13(v11, v12);
    v13(&v8[v9[6]], v12);

    swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[8] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[9] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[10]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[11]]);
  }
  v14 = sub_1004B804C(&qword_1013F0BF8);
  swift_release(*(_QWORD *)&v8[*(int *)(v14 + 28)]);
  v15 = (char *)a1 + a2[11];
  v16 = type metadata accessor for NavigationSplitViewVisibility(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = sub_1004B804C(&qword_1013F0C00);
  swift_release(*(_QWORD *)&v15[*(int *)(v17 + 28)]);
  swift_release(*(_QWORD *)((char *)a1 + a2[12] + 16));
  swift_release(*(_QWORD *)((char *)a1 + a2[13] + 16));
  v18 = (char *)a1 + a2[14];
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  v21 = *(_QWORD *)&v18[*(int *)(sub_1004B804C(&qword_1013F0C08) + 28)];
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100768C70(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, int *, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t, __n128);
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  void (*v82)(char *, _QWORD, uint64_t, int *, __n128);

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = a2 + 2;
  swift_retain(v6);
  swift_unknownObjectWeakCopyInit(a1 + 16, v7);
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  v9 = a2[5];
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a3[8];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  swift_retain(v9);
  v13 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = a3[9];
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (uint64_t *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v20[2];
  v19[2] = v22;
  v23 = (char *)(a1 + v18);
  v24 = (char *)a2 + v18;
  v25 = (int *)_s13ItemViewModelVMa(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(unsigned int (**)(char *, uint64_t, int *, __n128))(v26 + 48);
  swift_bridgeObjectRetain(v21);
  v28 = swift_retain(v22);
  if (v27(v24, 1, v25, v28))
  {
    v29 = sub_1004B804C(&qword_101402B80);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
    v31 = v25[5];
    v32 = &v23[v31];
    v33 = &v24[v31];
    v34 = type metadata accessor for Date(0);
    v81 = v26;
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    v35(v32, v33, v34);
    v35(&v23[v25[6]], &v24[v25[6]], v34);
    v36 = v25[7];
    v37 = *(void **)&v24[v36];
    *(_QWORD *)&v23[v36] = v37;
    v38 = v25[8];
    v39 = &v23[v38];
    v40 = &v24[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v42 = v25[9];
    v43 = &v23[v42];
    v44 = &v24[v42];
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v46 = v25[10];
    v47 = *(_QWORD *)&v24[v46];
    *(_QWORD *)&v23[v46] = v47;
    v48 = v25[11];
    v49 = *(_QWORD *)&v24[v48];
    *(_QWORD *)&v23[v48] = v49;
    v23[v25[12]] = v24[v25[12]];
    v23[v25[13]] = v24[v25[13]];
    v82 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v81 + 56);
    v50 = v37;
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v47);
    v51 = swift_bridgeObjectRetain(v49);
    v82(v23, 0, 1, v25, v51);
  }
  v52 = *(int *)(sub_1004B804C(&qword_1013F0BF8) + 28);
  v53 = *(_QWORD *)&v24[v52];
  *(_QWORD *)&v23[v52] = v53;
  v54 = a3[11];
  v55 = a1 + v54;
  v56 = (uint64_t)a2 + v54;
  v57 = type metadata accessor for NavigationSplitViewVisibility(0);
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v57 - 8) + 16);
  v59 = swift_retain(v53);
  v58(v55, v56, v57, v59);
  v60 = *(int *)(sub_1004B804C(&qword_1013F0C00) + 28);
  v61 = *(_QWORD *)(v56 + v60);
  *(_QWORD *)(v55 + v60) = v61;
  v62 = a3[12];
  v63 = a3[13];
  v64 = a1 + v62;
  v65 = (uint64_t)a2 + v62;
  *(_OWORD *)v64 = *(_OWORD *)v65;
  v66 = *(_QWORD *)(v65 + 16);
  *(_QWORD *)(v64 + 16) = v66;
  v67 = a1 + v63;
  v68 = (uint64_t)a2 + v63;
  *(_OWORD *)v67 = *(_OWORD *)v68;
  v69 = *(_QWORD *)(v68 + 16);
  *(_QWORD *)(v67 + 16) = v69;
  v70 = a3[14];
  v71 = (char *)(a1 + v70);
  v72 = (char *)a2 + v70;
  v73 = type metadata accessor for UUID(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v74 + 48);
  swift_retain(v61);
  swift_retain(v66);
  v76 = swift_retain(v69);
  if (v75(v72, 1, v73, v76))
  {
    v77 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v78 = *(int *)(sub_1004B804C(&qword_1013F0C08) + 28);
  v79 = *(_QWORD *)&v72[v78];
  *(_QWORD *)&v71[v78] = v79;
  swift_retain(v79);
  return a1;
}

uint64_t *sub_100769058(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  int *v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t, int *);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_BYTE *, _QWORD, uint64_t, int *, __n128);
  id v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, uint64_t);
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  swift_unknownObjectWeakCopyAssign(a1 + 2, a2 + 2);
  a1[3] = a2[3];
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = a3[8];
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    sub_1004CB800((uint64_t)a1 + v10, &qword_1013F0BF0);
    v13 = sub_1004B804C(&qword_1013F0BF0);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      v16 = *v12;
      *v11 = *v12;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  v17 = a3[9];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t)a2 + v17;
  *v18 = *(uint64_t *)((char *)a2 + v17);
  v20 = *(uint64_t *)((char *)a2 + v17 + 8);
  v21 = *(uint64_t *)((char *)a1 + v17 + 8);
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = v18[2];
  v23 = *(_QWORD *)(v19 + 16);
  v18[2] = v23;
  swift_retain(v23);
  swift_release(v22);
  v24 = a3[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = (int *)_s13ItemViewModelVMa(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      v32 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
      v33 = v27[5];
      v112 = &v25[v33];
      v34 = &v26[v33];
      v35 = type metadata accessor for Date(0);
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      v36(v112, v34, v35);
      v36(&v25[v27[6]], &v26[v27[6]], v35);
      v37 = v27[7];
      v38 = *(void **)&v26[v37];
      *(_QWORD *)&v25[v37] = v38;
      v39 = v27[8];
      v40 = &v25[v39];
      v41 = &v26[v39];
      *v40 = *v41;
      v113 = v41[1];
      v40[1] = v113;
      v42 = v27[9];
      v43 = &v25[v42];
      v44 = &v26[v42];
      *v43 = *v44;
      v45 = v44[1];
      v43[1] = v45;
      v46 = v27[10];
      v47 = *(_QWORD *)&v26[v46];
      *(_QWORD *)&v25[v46] = v47;
      v48 = v27[11];
      v49 = *(_QWORD *)&v26[v48];
      *(_QWORD *)&v25[v48] = v49;
      v25[v27[12]] = v26[v27[12]];
      v25[v27[13]] = v26[v27[13]];
      v50 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *, __n128))(v28 + 56);
      v51 = v38;
      swift_bridgeObjectRetain(v113);
      swift_bridgeObjectRetain(v45);
      swift_bridgeObjectRetain(v47);
      v52 = swift_bridgeObjectRetain(v49);
      v50(v25, 0, 1, v27, v52);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v31)
  {
    sub_1004B84A4((uint64_t)v25, _s13ItemViewModelVMa);
LABEL_11:
    v53 = sub_1004B804C(&qword_101402B80);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_12;
  }
  v86 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v25, v26, v86);
  v87 = v27[5];
  v88 = &v25[v87];
  v89 = &v26[v87];
  v90 = type metadata accessor for Date(0);
  v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 24);
  v91(v88, v89, v90);
  v91(&v25[v27[6]], &v26[v27[6]], v90);
  v92 = v27[7];
  v93 = *(void **)&v26[v92];
  v94 = *(void **)&v25[v92];
  *(_QWORD *)&v25[v92] = v93;
  v95 = v93;

  v96 = v27[8];
  v97 = &v25[v96];
  v98 = &v26[v96];
  *v97 = *v98;
  v99 = v98[1];
  v100 = v97[1];
  v97[1] = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease(v100);
  v101 = v27[9];
  v102 = &v25[v101];
  v103 = &v26[v101];
  *v102 = *v103;
  v104 = v103[1];
  v105 = v102[1];
  v102[1] = v104;
  swift_bridgeObjectRetain(v104);
  swift_bridgeObjectRelease(v105);
  v106 = v27[10];
  v107 = *(_QWORD *)&v26[v106];
  v108 = *(_QWORD *)&v25[v106];
  *(_QWORD *)&v25[v106] = v107;
  swift_bridgeObjectRetain(v107);
  swift_bridgeObjectRelease(v108);
  v109 = v27[11];
  v110 = *(_QWORD *)&v26[v109];
  v111 = *(_QWORD *)&v25[v109];
  *(_QWORD *)&v25[v109] = v110;
  swift_bridgeObjectRetain(v110);
  swift_bridgeObjectRelease(v111);
  v25[v27[12]] = v26[v27[12]];
  v25[v27[13]] = v26[v27[13]];
LABEL_12:
  v54 = *(int *)(sub_1004B804C(&qword_1013F0BF8) + 28);
  v55 = *(_QWORD *)&v25[v54];
  v56 = *(_QWORD *)&v26[v54];
  *(_QWORD *)&v25[v54] = v56;
  swift_retain(v56);
  swift_release(v55);
  v57 = a3[11];
  v58 = (uint64_t)a1 + v57;
  v59 = (uint64_t)a2 + v57;
  v60 = type metadata accessor for NavigationSplitViewVisibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 24))(v58, v59, v60);
  v61 = *(int *)(sub_1004B804C(&qword_1013F0C00) + 28);
  v62 = *(_QWORD *)(v58 + v61);
  v63 = *(_QWORD *)(v59 + v61);
  *(_QWORD *)(v58 + v61) = v63;
  swift_retain(v63);
  swift_release(v62);
  v64 = a3[12];
  v65 = (uint64_t *)((char *)a1 + v64);
  v66 = (uint64_t *)((char *)a2 + v64);
  *v65 = *v66;
  v65[1] = v66[1];
  v67 = v65[2];
  v68 = v66[2];
  v65[2] = v68;
  swift_retain(v68);
  swift_release(v67);
  v69 = a3[13];
  v70 = (uint64_t *)((char *)a1 + v69);
  v71 = (uint64_t *)((char *)a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  v72 = v70[2];
  v73 = v71[2];
  v70[2] = v73;
  swift_retain(v73);
  swift_release(v72);
  v74 = a3[14];
  v75 = (char *)a1 + v74;
  v76 = (char *)a2 + v74;
  v77 = type metadata accessor for UUID(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
  LODWORD(v59) = v79(v75, 1, v77);
  v80 = v79(v76, 1, v77);
  if (!(_DWORD)v59)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 24))(v75, v76, v77);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v77);
    goto LABEL_17;
  }
  if (v80)
  {
LABEL_17:
    v81 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
LABEL_18:
  v82 = *(int *)(sub_1004B804C(&qword_1013F0C08) + 28);
  v83 = *(_QWORD *)&v75[v82];
  v84 = *(_QWORD *)&v76[v82];
  *(_QWORD *)&v75[v82] = v84;
  swift_retain(v84);
  swift_release(v83);
  return a1;
}

uint64_t sub_100769668(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectWeakTakeInit(a1 + 16, a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[9];
  v12 = a3[10];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  v15 = (char *)(a1 + v12);
  v16 = (char *)(a2 + v12);
  v17 = (int *)_s13ItemViewModelVMa(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_1004B804C(&qword_101402B80);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
    v21 = v17[5];
    v45 = &v15[v21];
    v22 = &v16[v21];
    v23 = type metadata accessor for Date(0);
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
    v24(v45, v22, v23);
    v24(&v15[v17[6]], &v16[v17[6]], v23);
    *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v16[v17[7]];
    *(_OWORD *)&v15[v17[8]] = *(_OWORD *)&v16[v17[8]];
    *(_OWORD *)&v15[v17[9]] = *(_OWORD *)&v16[v17[9]];
    *(_QWORD *)&v15[v17[10]] = *(_QWORD *)&v16[v17[10]];
    *(_QWORD *)&v15[v17[11]] = *(_QWORD *)&v16[v17[11]];
    v15[v17[12]] = v16[v17[12]];
    v15[v17[13]] = v16[v17[13]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  v25 = sub_1004B804C(&qword_1013F0BF8);
  *(_QWORD *)&v15[*(int *)(v25 + 28)] = *(_QWORD *)&v16[*(int *)(v25 + 28)];
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = type metadata accessor for NavigationSplitViewVisibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = sub_1004B804C(&qword_1013F0C00);
  *(_QWORD *)(v27 + *(int *)(v30 + 28)) = *(_QWORD *)(v28 + *(int *)(v30 + 28));
  v31 = a3[12];
  v32 = a3[13];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  v37 = a3[14];
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  v40 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  v43 = sub_1004B804C(&qword_1013F0C08);
  *(_QWORD *)&v38[*(int *)(v43 + 28)] = *(_QWORD *)&v39[*(int *)(v43 + 28)];
  return a1;
}

uint64_t *sub_1007699CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  void *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  swift_unknownObjectWeakTakeAssign(a1 + 2, a2 + 2);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v7 = a1[5];
  a1[5] = a2[5];
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[8];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1004CB800((uint64_t)a1 + v8, &qword_1013F0BF0);
    v11 = sub_1004B804C(&qword_1013F0BF0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[9];
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t)a2 + v13;
  v16 = *(uint64_t *)((char *)a2 + v13 + 8);
  v17 = *(uint64_t *)((char *)a1 + v13 + 8);
  *v14 = *(uint64_t *)((char *)a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = v14[2];
  v14[2] = *(_QWORD *)(v15 + 16);
  swift_release(v18);
  v19 = a3[10];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = (int *)_s13ItemViewModelVMa(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      v27 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v20, v21, v27);
      v28 = v22[5];
      v84 = &v20[v28];
      v29 = &v21[v28];
      v30 = type metadata accessor for Date(0);
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
      v31(v84, v29, v30);
      v31(&v20[v22[6]], &v21[v22[6]], v30);
      *(_QWORD *)&v20[v22[7]] = *(_QWORD *)&v21[v22[7]];
      *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
      *(_OWORD *)&v20[v22[9]] = *(_OWORD *)&v21[v22[9]];
      *(_QWORD *)&v20[v22[10]] = *(_QWORD *)&v21[v22[10]];
      *(_QWORD *)&v20[v22[11]] = *(_QWORD *)&v21[v22[11]];
      v20[v22[12]] = v21[v22[12]];
      v20[v22[13]] = v21[v22[13]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v26)
  {
    sub_1004B84A4((uint64_t)v20, _s13ItemViewModelVMa);
LABEL_10:
    v32 = sub_1004B804C(&qword_101402B80);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_11;
  }
  v60 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v20, v21, v60);
  v61 = v22[5];
  v62 = &v20[v61];
  v63 = &v21[v61];
  v64 = type metadata accessor for Date(0);
  v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40);
  v65(v62, v63, v64);
  v65(&v20[v22[6]], &v21[v22[6]], v64);
  v66 = v22[7];
  v67 = *(void **)&v20[v66];
  *(_QWORD *)&v20[v66] = *(_QWORD *)&v21[v66];

  v68 = v22[8];
  v69 = &v20[v68];
  v70 = (uint64_t *)&v21[v68];
  v72 = *v70;
  v71 = v70[1];
  v73 = v69[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease(v73);
  v74 = v22[9];
  v75 = &v20[v74];
  v76 = (uint64_t *)&v21[v74];
  v78 = *v76;
  v77 = v76[1];
  v79 = v75[1];
  *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease(v79);
  v80 = v22[10];
  v81 = *(_QWORD *)&v20[v80];
  *(_QWORD *)&v20[v80] = *(_QWORD *)&v21[v80];
  swift_bridgeObjectRelease(v81);
  v82 = v22[11];
  v83 = *(_QWORD *)&v20[v82];
  *(_QWORD *)&v20[v82] = *(_QWORD *)&v21[v82];
  swift_bridgeObjectRelease(v83);
  v20[v22[12]] = v21[v22[12]];
  v20[v22[13]] = v21[v22[13]];
LABEL_11:
  v33 = *(int *)(sub_1004B804C(&qword_1013F0BF8) + 28);
  v34 = *(_QWORD *)&v20[v33];
  *(_QWORD *)&v20[v33] = *(_QWORD *)&v21[v33];
  swift_release(v34);
  v35 = a3[11];
  v36 = (uint64_t)a1 + v35;
  v37 = (uint64_t)a2 + v35;
  v38 = type metadata accessor for NavigationSplitViewVisibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = *(int *)(sub_1004B804C(&qword_1013F0C00) + 28);
  v40 = *(_QWORD *)(v36 + v39);
  *(_QWORD *)(v36 + v39) = *(_QWORD *)(v37 + v39);
  swift_release(v40);
  v41 = a3[12];
  v42 = (uint64_t)a1 + v41;
  v43 = (uint64_t)a2 + v41;
  *(_OWORD *)v42 = *(_OWORD *)v43;
  v44 = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  swift_release(v44);
  v45 = a3[13];
  v46 = (uint64_t)a1 + v45;
  v47 = (uint64_t)a2 + v45;
  *(_OWORD *)v46 = *(_OWORD *)v47;
  v48 = *(_QWORD *)(v46 + 16);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  swift_release(v48);
  v49 = a3[14];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = type metadata accessor for UUID(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  LODWORD(v37) = v54(v50, 1, v52);
  v55 = v54(v51, 1, v52);
  if (!(_DWORD)v37)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v50, v51, v52);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_16;
  }
  if (v55)
  {
LABEL_16:
    v56 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_17:
  v57 = *(int *)(sub_1004B804C(&qword_1013F0C08) + 28);
  v58 = *(_QWORD *)&v50[v57];
  *(_QWORD *)&v50[v57] = *(_QWORD *)&v51[v57];
  swift_release(v58);
  return a1;
}

uint64_t sub_100769EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100769F08);
}

uint64_t sub_100769F08(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013F0C10);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[8];
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013F0BF8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v13 = sub_1004B804C(&qword_1013F0C00);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[11];
        }
        else
        {
          v10 = sub_1004B804C(&qword_1013F0C08);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[14];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_10076A000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10076A00C);
}

char *sub_10076A00C(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013F0C10);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013F0BF8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v13 = sub_1004B804C(&qword_1013F0C00);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[11];
        }
        else
        {
          v10 = sub_1004B804C(&qword_1013F0C08);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[14];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t _s11SwiftUIViewVMa(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F0C70, (uint64_t)&_s11SwiftUIViewVMn);
}

void sub_10076A114(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[11];

  v10[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v10[1] = &unk_100F08BB8;
  v10[2] = &unk_100F08BD0;
  v10[3] = &unk_100F08BE8;
  sub_10076A270(319, &qword_1013F0C80, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v10[4] = *(_QWORD *)(v2 - 8) + 64;
    v10[5] = &unk_100F08C00;
    sub_10076A2C8(319, &qword_1013F0C88, &qword_101402B80, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v5 <= 0x3F)
    {
      v10[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_10076A270(319, &qword_1013F0C90, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationSplitViewVisibility, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v7 <= 0x3F)
      {
        v10[7] = *(_QWORD *)(v6 - 8) + 64;
        v10[8] = &unk_100F08C18;
        v10[9] = &unk_100F08C18;
        sub_10076A2C8(319, (unint64_t *)&unk_1013F0C98, (uint64_t *)&unk_1013E1A50, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
        if (v9 <= 0x3F)
        {
          v10[10] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 11, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_10076A270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_10076A2C8(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = sub_1004CB6A4(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_10076A320(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101123510, 1);
}

uint64_t sub_10076A330@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = _s11SwiftUIViewV9PublisherCMa(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10076A36C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  ValueMetadata *v67;
  unint64_t v68;

  v63 = a1;
  v62 = sub_1004B804C(&qword_1013F0CF0);
  v58 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v59 = (uint64_t *)((char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = sub_1004B804C(&qword_1013F0CF8);
  __chkstk_darwin(v61);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013F0D00);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F0D08);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013F0D10);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013F0D18);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = &type metadata for CRLFeatureFlags;
  v68 = sub_1004DB6DC();
  LOBYTE(v64) = 19;
  v17 = isFeatureEnabled(_:)(&v64);
  v18 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v64);
  if ((v17 & 1) != 0)
  {
    v53 = v10;
    v54 = v8;
    v55 = v14;
    v56 = v7;
    v57 = v3;
    v20 = v59;
    v19 = v60;
    if ((*(_BYTE *)(v60 + 8) & 1) != 0)
    {
      __chkstk_darwin(v18);
      v50 = v19;
      v21 = sub_1004B804C(&qword_1013F0D38);
      v22 = sub_1004CBA30(&qword_1013F0D40, &qword_1013F0D38, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      v23 = v20;
      NavigationStack.init<>(root:)(sub_1007722E0, &v51 - 4, v21, v22);
      v24 = v57;
      v25 = v58;
      v26 = v62;
      (*(void (**)(char *, uint64_t *, uint64_t))(v58 + 16))(v57, v23, v62);
      swift_storeEnumTagMultiPayload(v24, v61, 1);
      v27 = sub_1004CBA30(&qword_1013F0D28, &qword_1013F0D08, (uint64_t)&protocol conformance descriptor for NavigationSplitView<A, B, C>);
      v28 = sub_1004CBA30(&qword_1013F0D30, &qword_1013F0CF0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
      _ConditionalContent<>.init(storage:)(v24, v56, v26, v27, v28);
      (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v23, v26);
    }
    else
    {
      _s11SwiftUIViewVMa(0);
      v31 = sub_1004B804C(&qword_1013F0C00);
      v32 = State.projectedValue.getter(v31);
      v59 = &v51;
      __chkstk_darwin(v32);
      v58 = v11;
      __chkstk_darwin(v33);
      v52 = &v51 - 4;
      v34 = sub_1004B804C(&qword_1013F0D48);
      v60 = sub_1004B804C(&qword_1013F0D38);
      v51 = sub_1004CB6A4(&qword_1013F0D50);
      v35 = sub_1004CB6A4(&qword_1013F0D58);
      v36 = sub_1004CBA30(&qword_1013F0D60, &qword_1013F0D50, (uint64_t)&protocol conformance descriptor for VStack<A>);
      v37 = sub_1004CB6A4(&qword_1013F0D68);
      v38 = sub_1004CBA30(&qword_1013F0D70, &qword_1013F0D68, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
      v64 = v37;
      v65 = v38;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
      v64 = v51;
      v65 = v35;
      v66 = v36;
      v67 = (ValueMetadata *)OpaqueTypeConformance2;
      v40 = swift_getOpaqueTypeConformance2(&v64, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
      v41 = sub_1004CBA30(&qword_1013F0D40, &qword_1013F0D38, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      v42 = v53;
      v11 = v58;
      NavigationSplitView.init<>(columnVisibility:sidebar:detail:)(v6, sub_10076DE50, &v51 - 4, sub_10076DE58, v52, v34, v60, v40, v41);
      v43 = v54;
      v45 = v56;
      v44 = v57;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v57, v42, v56);
      swift_storeEnumTagMultiPayload(v44, v61, 0);
      v46 = sub_1004CBA30(&qword_1013F0D28, &qword_1013F0D08, (uint64_t)&protocol conformance descriptor for NavigationSplitView<A, B, C>);
      v47 = sub_1004CBA30(&qword_1013F0D30, &qword_1013F0CF0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
      _ConditionalContent<>.init(storage:)(v44, v45, v62, v46, v47);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v45);
    }
    v48 = v55;
    sub_1004CB7BC((uint64_t)v13, (uint64_t)v16, &qword_1013F0D10);
    swift_storeEnumTagMultiPayload(v16, v48, 1);
    v49 = sub_10076DDB4();
    _ConditionalContent<>.init(storage:)(v16, &type metadata for Spacer, v11, &protocol witness table for Spacer, v49);
    return sub_1004CB800((uint64_t)v13, &qword_1013F0D10);
  }
  else
  {
    *(_QWORD *)v16 = 0;
    v16[8] = 1;
    swift_storeEnumTagMultiPayload(v16, v14, 0);
    v29 = sub_10076DDB4();
    return _ConditionalContent<>.init(storage:)(v16, &type metadata for Spacer, v11, &protocol witness table for Spacer, v29);
  }
}

uint64_t sub_10076A950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  _QWORD v22[2];
  _BYTE v23[16];
  uint64_t v24;
  _BYTE v25[16];
  uint64_t v26;
  _QWORD v27[2];

  v22[1] = a2;
  v3 = sub_1004B804C(&qword_1013F0F80);
  __chkstk_darwin(v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F0D50);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v7);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  sub_1004B804C(&qword_1013F0F88);
  _s11SwiftUIViewVMa(0);
  v10 = sub_1004B804C(&qword_1013F0C08);
  State.projectedValue.getter(v10);
  v11 = sub_1004B804C(&qword_1013F0F90);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 0, 1, v11);
  v26 = a1;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B804C(&qword_1013F0F98);
  v14 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v15 = sub_1004CBA30(&qword_1013F0FA0, &qword_1013F0F98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List.init(selection:content:)(v5, sub_100771764, v25, v12, v13, v14, v15);
  v24 = a1;
  v16 = sub_1004B804C(&qword_1013F0D58);
  v17 = sub_1004CBA30(&qword_1013F0D60, &qword_1013F0D50, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v18 = sub_1004CB6A4(&qword_1013F0D68);
  v19 = sub_1004CBA30(&qword_1013F0D70, &qword_1013F0D68, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  v27[0] = v18;
  v27[1] = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v27, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_10077176C, v23, v6, v16, v17, OpaqueTypeConformance2);
  return sub_1004CB800((uint64_t)v9, &qword_1013F0D50);
}

uint64_t sub_10076ABB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v4;
  v5 = sub_1004B804C(&qword_1013F0D78);
  return sub_10076DEE4(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

void sub_10076ABF4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F0998 = v4;
  unk_1013F09A0 = v6;
}

void sub_10076ACC4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F09A8 = v4;
  unk_1013F09B0 = v6;
}

void sub_10076AD8C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F09B8 = v4;
  unk_1013F09C0 = v6;
}

void sub_10076AE5C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F09C8 = v4;
  unk_1013F09D0 = v6;
}

void sub_10076AF2C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F09D8 = v4;
  unk_1013F09E0 = v6;
}

void sub_10076AFEC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F09E8 = v4;
  unk_1013F09F0 = v6;
}

void sub_10076B0CC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F09F8 = v4;
  unk_1013F0A00 = v6;
}

void sub_10076B194()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013F0A08 = v4;
  unk_1013F0A10 = v6;
}

uint64_t sub_10076B26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  v3 = (_QWORD *)(a1 + *(int *)(_s15FilterViewModelVMa(0) + 20));
  v4 = v3[1];
  v10[0] = *v3;
  v10[1] = v4;
  v5 = sub_1004D292C();
  swift_bridgeObjectRetain(v4);
  result = Text.init<A>(_:)(v10, &type metadata for String, v5);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_10076B2E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (uint64_t *)(a1 + *(int *)(_s15FilterViewModelVMa(0) + 24));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    swift_bridgeObjectRetain(v3[1]);
    result = Image.init(systemName:)(v5, v4);
  }
  else
  {
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t sub_10076B34C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  _BYTE v4[16];

  v0 = sub_1004B804C(&qword_1013F1118);
  v1 = sub_1007720B8();
  return Label.init(title:icon:)(sub_1007720A8, v4, sub_1007720B0, &v3, &type metadata for Text, v0, &protocol witness table for Text, v1);
}

uint64_t sub_10076B3C4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD v46[2];

  v43 = a2;
  v3 = sub_1004B804C(&qword_1013F0FA8);
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  __chkstk_darwin(v3);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - v7;
  v40 = sub_1004B804C(&qword_1013F0FB0);
  v45 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  v14 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F08DF8);
  v16 = swift_getKeyPath(&unk_100F08E20);
  static Published.subscript.getter(v46, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = swift_getKeyPath(&unk_100F08E40);
  v18 = sub_1004B804C(&qword_1013F0FB8);
  v19 = _s11SwiftUIViewV15SidebarListItemVMa(0);
  v20 = sub_1004CBA30(&qword_1013F0FC0, &qword_1013F0FB8, (uint64_t)&protocol conformance descriptor for [A]);
  v21 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v22 = sub_1004B7878(&qword_1013F0FC8, _s11SwiftUIViewV15SidebarListItemVMa, (uint64_t)&unk_100F08FDC);
  v23 = v13;
  v24 = ForEach<>.init(_:id:content:)(v46, v17, sub_1007722E4, 0, v18, v19, v20, v21, v22);
  if (qword_1013DD090 != -1)
    v24 = swift_once(&qword_1013DD090, sub_10076B194);
  v25 = unk_1013F0A10;
  v46[0] = qword_1013F0A08;
  v46[1] = unk_1013F0A10;
  __chkstk_darwin(v24);
  v26 = sub_1007717E4();
  v27 = sub_1004D292C();
  v28 = swift_bridgeObjectRetain(v25);
  v29 = v40;
  Section<>.init<A>(_:content:)(v46, sub_1007717DC, &v40 - 4, v40, &type metadata for String, v26, v27, v28);
  v30 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v30(v10, v23, v29);
  v31 = v41;
  v32 = v42;
  v33 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v34 = v44;
  v33(v44, v8, v41);
  v35 = v43;
  v30(v43, v10, v29);
  v36 = sub_1004B804C(&qword_1013F0FD8);
  v33(&v35[*(int *)(v36 + 48)], v34, v31);
  v37 = *(void (**)(char *, uint64_t))(v32 + 8);
  v37(v8, v31);
  v38 = *(void (**)(char *, uint64_t))(v45 + 8);
  v38(v23, v29);
  v37(v34, v31);
  return ((uint64_t (*)(char *, uint64_t))v38)(v10, v29);
}

uint64_t sub_10076B720(uint64_t *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F08E60);
  v3 = swift_getKeyPath(&unk_100F08E88);
  static Published.subscript.getter(&v11, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = swift_getKeyPath(&unk_100F08E40);
  v5 = sub_1004B804C(&qword_1013F0FB8);
  v6 = _s11SwiftUIViewV15SidebarListItemVMa(0);
  v7 = sub_1004CBA30(&qword_1013F0FC0, &qword_1013F0FB8, (uint64_t)&protocol conformance descriptor for [A]);
  v8 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v9 = sub_1004B7878(&qword_1013F0FC8, _s11SwiftUIViewV15SidebarListItemVMa, (uint64_t)&unk_100F08FDC);
  return ForEach<>.init(_:id:content:)(&v11, v4, sub_10076B868, 0, v5, v6, v7, v8, v9);
}

uint64_t sub_10076B868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004B8460(a1, a2, _s15FilterViewModelVMa);
}

uint64_t sub_10076B888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_1013F0D68);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.cancellationAction.getter(v7);
  v15 = a1;
  v10 = sub_1004B804C(&qword_1013E7038);
  v11 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
  ToolbarItemGroup.init(placement:content:)(v4, sub_100771774, v14, v10, v11);
  v12 = sub_1004CBA30(&qword_1013F0D70, &qword_1013F0D68, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10076B9D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = _s11SwiftUIViewVMa(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_1004B8460(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 16) & ~v5;
  v7 = swift_allocObject(&unk_10127C2C8, v6 + v4, v5 | 7);
  sub_1004B84E0((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, _s11SwiftUIViewVMa);
  return Button.init(action:label:)(sub_10077110C, v7, sub_10076BAB4, 0, &type metadata for Text, &protocol witness table for Text);
}

uint64_t sub_10076BAB4@<X0>(uint64_t a1@<X8>)
{
  return sub_10076DC94(&qword_1013DD088, &qword_1013F09F8, &qword_1013F0A00, (uint64_t)sub_10076B0CC, a1);
}

double sub_10076BAD4()
{
  double result;

  result = 6.0;
  xmmword_1013F0A18 = xmmword_100F08B40;
  *(_OWORD *)&qword_1013F0A28 = xmmword_100F08B40;
  return result;
}

void sub_10076BAEC()
{
  qword_1013F0A38 = 0x4034000000000000;
}

void sub_10076BAFC()
{
  qword_1013F0A40 = 0x4054000000000000;
}

void sub_10076BB0C()
{
  qword_1013F0A48 = 0x4066800000000000;
}

uint64_t sub_10076BB20()
{
  uint64_t result;

  result = static Animation.easeInOut(duration:)(0.3);
  qword_1013F0A50 = result;
  return result;
}

uint64_t sub_10076BB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a3;
  v5 = _s11SwiftUIViewVMa(0);
  v27 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin(v5);
  v7 = sub_1004B804C(&qword_1013F0EB8);
  v30 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F0EC0);
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static Axis.Set.vertical.getter(v11);
  v15 = Axis.Set.init(rawValue:)(0);
  v16 = Axis.Set.init(rawValue:)(v15);
  v17 = Axis.Set.init(rawValue:)(v16 & v14);
  if (v17 != v14)
  {
    v17 = Axis.Set.init(rawValue:)(v15 | v14);
    v15 = v17;
  }
  __chkstk_darwin(v17);
  *(&v26 - 2) = a2;
  *(&v26 - 1) = a1;
  v18 = sub_1004B804C(&qword_1013F0EC8);
  v19 = sub_100771148();
  ScrollView.init(_:showsIndicators:content:)(v15, 0, sub_100771140, &v26 - 4, v18, v19);
  sub_1004B8460(a2, (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  v20 = *(unsigned __int8 *)(v27 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_10127C228, v21 + v6, v20 | 7);
  sub_1004B84E0((uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, _s11SwiftUIViewVMa);
  v23 = sub_1004CBA30(&qword_1013F0F08, &qword_1013F0EB8, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.onTapGesture(count:perform:)(1, sub_100771254, v22, v7, v23);
  v24 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v9, v7, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v31, v13, v29);
}

uint64_t sub_10076BD9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  double *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v33;
  uint64_t *v34;
  uint64_t v35;
  char v36[16];
  uint64_t *v37;
  uint64_t v38;

  v35 = a2;
  v3 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F0EF0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F0EE0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = GeometryProxy.size.getter(v13);
  v15 = sub_10076C09C(v14);
  v34 = a1;
  v37 = a1;
  v17 = static HorizontalAlignment.center.getter(v16);
  LODWORD(v38) = 0;
  v18 = sub_1004B7878(&qword_1013F0F10, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(&v38, v3, v18);
  v19 = sub_1004B804C(&qword_1013F0F18);
  v20 = sub_1004CBA30(&qword_1013F0F20, &qword_1013F0F18, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v15, v17, 0, 1, v5, sub_100771260, v36, v19, v20);
  if (qword_1013DD098 != -1)
    swift_once(&qword_1013DD098, sub_10076BAD4);
  v33 = xmmword_1013F0A18;
  v21 = qword_1013F0A28;
  v22 = unk_1013F0A30;
  v23 = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v24 = &v12[*(int *)(v10 + 36)];
  *v24 = v23;
  *(_OWORD *)(v24 + 8) = v33;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v22;
  v24[40] = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (qword_1013DD0B8 != -1)
    swift_once(&qword_1013DD0B8, sub_10076BB20);
  v25 = qword_1013F0A50;
  v26 = *v34;
  KeyPath = swift_getKeyPath(&unk_100F08D90);
  v28 = swift_getKeyPath(&unk_100F08DB8);
  static Published.subscript.getter(&v38, v26, KeyPath, v28);
  swift_release(KeyPath);
  swift_release(v28);
  v29 = v38;
  v30 = v35;
  sub_1004CB7BC((uint64_t)v12, v35, &qword_1013F0EE0);
  v31 = (uint64_t *)(v30 + *(int *)(sub_1004B804C(&qword_1013F0EC8) + 36));
  *v31 = v25;
  v31[1] = v29;
  swift_retain(v25);
  return sub_1004CB800((uint64_t)v12, &qword_1013F0EE0);
}

double *sub_10076C09C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t (*v18)(_QWORD *, _QWORD, uint64_t);
  double *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _BYTE v27[4];
  unsigned int v28;
  uint64_t v29;

  v29 = type metadata accessor for GridItem.Size(0);
  v3 = *(_QWORD *)(v29 - 8);
  v4 = __chkstk_darwin(v29);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for GridItem(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v27[-v12];
  if (qword_1013DD0B0 != -1)
    swift_once(&qword_1013DD0B0, sub_10076BB0C);
  v14 = *(double *)&qword_1013F0A48;
  v15 = floor(a1 / *(double *)&qword_1013F0A48);
  if (v15 <= 0.0)
    return _swiftEmptyArrayStorage;
  if (qword_1013DD0A0 != -1)
  {
    swift_once(&qword_1013DD0A0, sub_10076BAEC);
    v14 = *(double *)&qword_1013F0A48;
  }
  do
  {
    v16 = v15;
    v17 = v14 * v15;
    v15 = v15 + -1.0;
  }
  while (v17 - *(double *)&qword_1013F0A38 * v15 > a1);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v1 = (uint64_t)v16;
  if (((uint64_t)v16 & 0x8000000000000000) == 0)
  {
    if (v1)
    {
      if (qword_1013DD0A8 == -1)
        goto LABEL_13;
      goto LABEL_26;
    }
    return _swiftEmptyArrayStorage;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  swift_once(&qword_1013DD0A8, sub_10076BAFC);
LABEL_13:
  v28 = enum case for GridItem.Size.flexible(_:);
  v18 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104);
  v19 = _swiftEmptyArrayStorage;
  do
  {
    *v6 = qword_1013F0A40;
    v6[1] = 0x7FF0000000000000;
    v20 = v18(v6, v28, v29);
    v21 = qword_1013F0A38;
    v22 = static Alignment.top.getter(v20);
    GridItem.init(_:spacing:alignment:)(v6, v21, 0, v22, v23, 0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v19 = (double *)sub_100D11480(0, *((_QWORD *)v19 + 2) + 1, 1, (unint64_t)v19);
    v25 = *((_QWORD *)v19 + 2);
    v24 = *((_QWORD *)v19 + 3);
    if (v25 >= v24 >> 1)
      v19 = (double *)sub_100D11480(v24 > 1, v25 + 1, 1, (unint64_t)v19);
    *((_QWORD *)v19 + 2) = v25 + 1;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v25, v10, v7);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    --v1;
  }
  while (v1);
  return v19;
}

uint64_t sub_10076C3B0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t, __n128);
  __n128 v56;
  __n128 v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  _QWORD v67[3];
  _QWORD v68[3];
  __int128 v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;

  v66 = a2;
  v60 = _s11SwiftUIViewVMa(0);
  v3 = *(_QWORD *)(v60 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v60);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F0F28);
  v7 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  v64 = v7;
  __chkstk_darwin(v6);
  v65 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v62 = (char *)&v59 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - v12;
  v14 = *(_QWORD *)a1;
  KeyPath = swift_getKeyPath(&unk_100F08D90);
  v16 = swift_getKeyPath(&unk_100F08DB8);
  static Published.subscript.getter(&v69, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v67[2] = a1;
  v68[0] = sub_100767DA0((uint64_t (*)(char *))sub_1007712B0, v67, v69, _s13ItemViewModelVMa, (void (*)(BOOL, uint64_t, uint64_t))sub_100600BA0);
  v61 = swift_getKeyPath(&unk_100F08DE0);
  sub_1004B8460(a1, (uint64_t)v5, _s11SwiftUIViewVMa);
  v17 = *(unsigned __int8 *)(v3 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_10127C250, v18 + v4, v17 | 7);
  sub_1004B84E0((uint64_t)v5, v19 + v18, _s11SwiftUIViewVMa);
  v20 = sub_1004B804C(&qword_1013F0F30);
  v21 = sub_1004B804C(&qword_1013F0F38);
  v22 = sub_1004CBA30(&qword_1013F0F40, &qword_1013F0F30, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_1004B7878(&qword_1013F0F48, _s13ItemViewModelVMa, (uint64_t)&unk_100F22D10);
  v24 = sub_1004CB6A4(&qword_1013F0F50);
  v25 = sub_100771338();
  v26 = sub_1004CBA30(&qword_1013F0F60, &qword_1013F0F50, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  *(_QWORD *)&v69 = &_s8ItemViewVN;
  *((_QWORD *)&v69 + 1) = v24;
  v70 = v25;
  v71 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v69, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
  v28 = v62;
  v29 = v63;
  ForEach<>.init(_:id:content:)(v68, v61, sub_1007712D0, v19, v20, v21, v22, v23, OpaqueTypeConformance2);
  v30 = v64;
  v31 = v13;
  v32 = v29;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v13, v28, v29);
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 0;
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v34 = static Color.clear.getter(v33);
    v42 = a1 + *(int *)(v60 + 52);
    v43 = *(_QWORD *)(v42 + 16);
    v69 = *(_OWORD *)v42;
    v70 = v43;
    v44 = sub_1004B804C(&qword_1013F0DA0);
    v45 = State.wrappedValue.getter(v44);
    v46 = v68[1];
    v47 = static Alignment.center.getter(v45);
    _FrameLayout.init(width:height:alignment:)(&v69, 0, 1, v46, 0, v47, v48);
    v36 = v69;
    v37 = BYTE8(v69);
    v38 = v70;
    v39 = v71;
    v35 = 256;
    v40 = v72;
    v41 = v73;
  }
  v59 = v38;
  v60 = v39;
  v61 = v40;
  v62 = v41;
  v49 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v50 = v65;
  v49(v65, v31, v32);
  v51 = v66;
  v49(v66, v50, v32);
  v52 = (uint64_t *)&v51[*(int *)(sub_1004B804C(&qword_1013F0F68) + 48)];
  *v52 = v34;
  v52[1] = v35;
  v52[2] = v36;
  v52[3] = v37;
  v53 = v60;
  v52[4] = v59;
  v52[5] = v53;
  v54 = v62;
  v52[6] = v61;
  v52[7] = (uint64_t)v54;
  v55 = *(void (**)(char *, uint64_t, __n128))(v30 + 8);
  v56 = swift_retain(v34);
  v55(v31, v32, v56);
  v57 = swift_release(v34);
  return ((uint64_t (*)(char *, uint64_t, __n128))v55)(v50, v32, v57);
}

uint64_t sub_10076C7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v50 = a1;
  v4 = type metadata accessor for UUID(0);
  v62 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v54 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v60);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v57 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v52 = _s15FilterViewModelVMa(0);
  v16 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v61 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_1013F0F78);
  __chkstk_darwin(v18);
  v51 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100A1F680();
  v21 = v20;
  v22 = *(_QWORD *)(v20 + 16);
  if (!v22)
  {
    v37 = 1;
    v39 = v51;
    v38 = v52;
    goto LABEL_16;
  }
  v49 = v2;
  v23 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v47 = v20;
  v24 = v20 + v23;
  v59 = a2 + *(int *)(_s11SwiftUIViewVMa(0) + 56);
  v48 = v16;
  v58 = *(_QWORD *)(v16 + 72);
  v25 = v61;
  v56 = v15;
  v53 = v7;
  while (1)
  {
    sub_1004B8460(v24, v25, _s15FilterViewModelVMa);
    v26 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v15, v25, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v15, 0, 1, v4);
    v27 = sub_1004B804C(&qword_1013F0C08);
    State.wrappedValue.getter(v27);
    v28 = (uint64_t)&v7[*(int *)(v60 + 48)];
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v7, (uint64_t *)&unk_1013E1A50);
    sub_1004CB7BC((uint64_t)v12, v28, (uint64_t *)&unk_1013E1A50);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    if (v29(v7, 1, v4) == 1)
      break;
    v30 = (uint64_t)v7;
    v31 = v7;
    v32 = v57;
    sub_1004CB7BC(v30, v57, (uint64_t *)&unk_1013E1A50);
    if (v29((char *)v28, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
      v33 = v31;
      v15 = v56;
      sub_1004CB800((uint64_t)v56, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v32, v4);
      v7 = v33;
      goto LABEL_4;
    }
    v34 = v62;
    v35 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v54, v28, v4);
    sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v55 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v35);
    v36 = *(void (**)(char *, uint64_t))(v34 + 8);
    v36(v35, v4);
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    v15 = v56;
    sub_1004CB800((uint64_t)v56, (uint64_t *)&unk_1013E1A50);
    v36((char *)v32, v4);
    v7 = v53;
    sub_1004CB800((uint64_t)v53, (uint64_t *)&unk_1013E1A50);
    if ((v55 & 1) != 0)
      goto LABEL_14;
LABEL_5:
    v25 = v61;
    sub_1004B84A4(v61, _s15FilterViewModelVMa);
    v24 += v58;
    if (!--v22)
    {
      v37 = 1;
      v16 = v48;
      v39 = v51;
      v38 = v52;
      goto LABEL_15;
    }
  }
  sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1A50);
  if (v29((char *)v28, 1, v4) != 1)
  {
LABEL_4:
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013F62D0);
    goto LABEL_5;
  }
  sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E1A50);
LABEL_14:
  v39 = v51;
  sub_1004B84E0(v61, v51, _s15FilterViewModelVMa);
  v37 = 0;
  v16 = v48;
  v38 = v52;
LABEL_15:
  v21 = v47;
LABEL_16:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v39, v37, 1, v38);
  v40 = swift_bridgeObjectRelease(v21);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 48))(v39, 1, v38, v40) == 1)
  {
    sub_1004CB800(v39, &qword_1013F0F78);
    v41 = 0;
  }
  else
  {
    v42 = v39 + *(int *)(v38 + 28);
    v43 = *(uint64_t (**)(uint64_t))v42;
    v44 = *(_QWORD *)(v42 + 8);
    swift_retain(v44);
    sub_1004B84A4(v39, _s15FilterViewModelVMa);
    v41 = v43(v50);
    swift_release(v44);
  }
  return v41 & 1;
}

uint64_t sub_10076CD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;

  v78 = a3;
  v79 = a2;
  v4 = _s11SwiftUIViewVMa(0);
  v67 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v70 = v6;
  v71 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TapGesture(0, v5);
  v73 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  __chkstk_darwin(v7);
  v72 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F0F50);
  v76 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  __chkstk_darwin(v9);
  v75 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s13ItemViewModelVMa(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v63 = v13;
  v64 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1004B804C(&qword_1013F0F70);
  __chkstk_darwin(v60);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v16);
  v59 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v59 - v22;
  v68 = sub_1004B804C(&qword_1013F0F38);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v65 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(int *)(v11 + 28);
  v26 = (uint64_t *)(a1 + *(int *)(v11 + 32));
  v27 = v26[1];
  v62 = *v26;
  v28 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", *(_QWORD *)(a1 + v25), swift_bridgeObjectRetain(v27).n128_f64[0]);
  v29 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v28);

  v61 = Image.init(uiImage:)(objc_msgSend(v29, "UIImage"));
  v30 = &qword_101402B80;
  v31 = sub_1004B804C(&qword_1013F0BF8);
  State.wrappedValue.getter(v31);
  v69 = a1;
  sub_1004B8460(a1, (uint64_t)v20, _s13ItemViewModelVMa);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  v32 = (uint64_t)&v15[*(int *)(v60 + 48)];
  sub_1004CB7BC((uint64_t)v23, (uint64_t)v15, &qword_101402B80);
  sub_1004CB7BC((uint64_t)v20, v32, &qword_101402B80);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v33((uint64_t)v15, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v20, &qword_101402B80);
    sub_1004CB800((uint64_t)v23, &qword_101402B80);
    if (v33(v32, 1, v11) == 1)
    {
      v34 = -1;
    }
    else
    {
      v30 = &qword_1013F0F70;
      v34 = 0;
    }
    goto LABEL_7;
  }
  v35 = v59;
  sub_1004CB7BC((uint64_t)v15, v59, &qword_101402B80);
  if (v33(v32, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v20, &qword_101402B80);
    sub_1004CB800((uint64_t)v23, &qword_101402B80);
    sub_1004B84A4(v35, _s13ItemViewModelVMa);
    v34 = 0;
    v30 = &qword_1013F0F70;
LABEL_7:
    v36 = v64;
    goto LABEL_9;
  }
  v36 = v64;
  sub_1004B84E0(v32, v64, _s13ItemViewModelVMa);
  v34 = sub_100A1C8AC(v35, v36);
  sub_1004B84A4(v36, _s13ItemViewModelVMa);
  sub_1004CB800((uint64_t)v20, &qword_101402B80);
  sub_1004CB800((uint64_t)v23, &qword_101402B80);
  sub_1004B84A4(v35, _s13ItemViewModelVMa);
LABEL_9:
  sub_1004CB800((uint64_t)v15, v30);
  v37 = HIBYTE(v27) & 0xF;
  v38 = v62;
  if ((v27 & 0x2000000000000000) == 0)
    v37 = v62 & 0xFFFFFFFFFFFFLL;
  if (!v37)
  {
    swift_bridgeObjectRelease(v27);
    v27 = 0xE100000000000000;
    v38 = 32;
  }
  v80 = v61;
  v81 = v34 & 1;
  v82 = v38;
  v83 = v27;
  v39 = v72;
  TapGesture.init(count:)(1);
  v40 = v71;
  sub_1004B8460(v79, v71, _s11SwiftUIViewVMa);
  sub_1004B8460(v69, v36, _s13ItemViewModelVMa);
  v41 = *(unsigned __int8 *)(v67 + 80);
  v42 = (v41 + 16) & ~v41;
  v43 = *(unsigned __int8 *)(v12 + 80);
  v44 = (v70 + v43 + v42) & ~v43;
  v45 = swift_allocObject(&unk_10127C278, v44 + v63, v41 | v43 | 7);
  sub_1004B84E0(v40, v45 + v42, _s11SwiftUIViewVMa);
  sub_1004B84E0(v36, v45 + v44, _s13ItemViewModelVMa);
  v46 = swift_allocObject(&unk_10127C2A0, 32, 7);
  *(_QWORD *)(v46 + 16) = sub_1007716E0;
  *(_QWORD *)(v46 + 24) = v45;
  v47 = v74;
  v48 = v75;
  Gesture.onEnded(_:)(sub_10054E858, v46, v74, &protocol witness table for TapGesture);
  v49 = swift_release(v46);
  v50 = (*(uint64_t (**)(char *, uint64_t, __n128))(v73 + 8))(v39, v47, v49);
  v51 = static GestureMask.all.getter(v50);
  v52 = sub_100771338();
  v53 = sub_1004CBA30(&qword_1013F0F60, &qword_1013F0F50, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v54 = v65;
  v55 = v51;
  v56 = v77;
  View.simultaneousGesture<A>(_:including:)(v48, v55, &_s8ItemViewVN, v77, v52, v53);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v56);
  swift_release(v80);
  v57 = swift_bridgeObjectRelease(v83);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v66 + 32))(v78, v54, v68, v57);
}

double sub_10076D390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t Strong;
  uint64_t v22;
  _QWORD v24[2];
  __int128 v25;
  uint64_t v26;

  v4 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v4);
  v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24[-1] - v8;
  sub_1004B8460(a2, (uint64_t)&v24[-1] - v8, _s13ItemViewModelVMa);
  v10 = _s13ItemViewModelVMa(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = _s11SwiftUIViewVMa(0);
  sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, &qword_101402B80);
  v12 = sub_1004B804C(&qword_1013F0BF8);
  State.wrappedValue.setter(v6, v12);
  sub_1004CB800((uint64_t)v9, &qword_101402B80);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v13 = (uint64_t *)(a2 + *(int *)(v10 + 32));
    v15 = *v13;
    v14 = v13[1];
    v16 = (__int128 *)(a1 + *(int *)(v11 + 36));
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 2);
    v25 = v17;
    v26 = v18;
    v24[0] = v15;
    v24[1] = v14;
    swift_bridgeObjectRetain(v14);
    v19 = sub_1004B804C(&qword_1013F0E10);
    State.wrappedValue.setter(v24, v19);
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
    if (Strong)
    {
      v22 = Strong;
      sub_10096F950(a2);
      *(_QWORD *)&result = swift_unknownObjectRelease(v22).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10076D520()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - v4;
  v6 = _s13ItemViewModelVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  _s11SwiftUIViewVMa(0);
  sub_1004CB7BC((uint64_t)v5, (uint64_t)v2, &qword_101402B80);
  v7 = sub_1004B804C(&qword_1013F0BF8);
  State.wrappedValue.setter(v2, v7);
  return sub_1004CB800((uint64_t)v5, &qword_101402B80);
}

void *sub_10076D608(uint64_t a1)
{
  void *result;
  void *v2;

  result = (void *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
    return (void *)swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_10076D654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v40 = a1;
  v3 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v3);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for KeyboardShortcut(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = _s11SwiftUIViewVMa(0);
  v8 = *(_QWORD *)(v34 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v34);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E7038);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1004B804C(&qword_1013F0EA0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v2, (uint64_t)v10, _s11SwiftUIViewVMa);
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_10127C160, v18 + v9, v17 | 7);
  sub_1004B84E0((uint64_t)v10, v19 + v18, _s11SwiftUIViewVMa);
  v20 = Button.init(action:label:)(sub_100771088, v19, sub_10076DBC0, 0, &type metadata for Text, &protocol witness table for Text);
  static KeyboardShortcut.defaultAction.getter(v20);
  v21 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.keyboardShortcut(_:)(v7, v11, v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v22 = 1;
  }
  else
  {
    v23 = sub_1004B804C(&qword_1013F0BF8);
    v24 = (uint64_t)v35;
    State.wrappedValue.getter(v23);
    v25 = _s13ItemViewModelVMa(0);
    v22 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25) == 1;
    sub_1004CB800(v24, &qword_101402B80);
  }
  KeyPath = swift_getKeyPath(&unk_100F08D60);
  v27 = swift_allocObject(&unk_10127C188, 17, 7);
  *(_BYTE *)(v27 + 16) = v22;
  v28 = v36;
  v30 = v39;
  v29 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v40, v16, v39);
  v31 = (uint64_t *)(v29 + *(int *)(sub_1004B804C(&qword_1013F0EA8) + 36));
  *v31 = KeyPath;
  v31[1] = (uint64_t)sub_100712094;
  v31[2] = v27;
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v30);
}

uint64_t sub_10076D980(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;

  v2 = _s13ItemViewModelVMa(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - v10;
  _s11SwiftUIViewVMa(0);
  v12 = sub_1004B804C(&qword_1013F0BF8);
  State.wrappedValue.getter(v12);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertButton", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-SwiftUIView.swift", 121, 2, 329, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertButton", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-SwiftUIView.swift", 121, 2u, 329, (uint64_t)"invalid nil value found", 23, 2u);
    return sub_1004CB800((uint64_t)v11, &qword_101402B80);
  }
  else
  {
    sub_1004CB800((uint64_t)v11, &qword_101402B80);
    State.wrappedValue.getter(v12);
    if (v13(v8, 1, v2) == 1)
    {
      return sub_1004CB800((uint64_t)v8, &qword_101402B80);
    }
    else
    {
      sub_1004B84E0((uint64_t)v8, (uint64_t)v5, _s13ItemViewModelVMa);
      Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
      if (Strong)
      {
        v16 = Strong;
        sub_10096F950((uint64_t)v5);
        swift_unknownObjectRelease(v16);
      }
      return sub_1004B84A4((uint64_t)v5, _s13ItemViewModelVMa);
    }
  }
}

uint64_t sub_10076DBC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10076DC94(&qword_1013DD060, &qword_1013F09A8, &qword_1013F09B0, (uint64_t)sub_10076ACC4, a1);
}

double sub_10076DBE0(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    v3 = Strong;
    _s11SwiftUIViewVMa(0);
    v4 = sub_1004B804C(&qword_1013F0E10);
    State.wrappedValue.getter(v4);
    sub_10096FE2C(v5, v6);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

uint64_t sub_10076DC74@<X0>(uint64_t a1@<X8>)
{
  return sub_10076DC94(&qword_1013DD078, &qword_1013F09D8, &qword_1013F09E0, (uint64_t)sub_10076AF2C, a1);
}

uint64_t sub_10076DC94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v14[2];

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = *a3;
  v14[0] = *a2;
  v14[1] = v8;
  v9 = sub_1004D292C();
  swift_bridgeObjectRetain(v8);
  result = Text.init<A>(_:)(v14, &type metadata for String, v9);
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v11;
  *(_BYTE *)(a5 + 16) = v12 & 1;
  *(_QWORD *)(a5 + 24) = v13;
  return result;
}

BOOL sub_10076DD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[6];
  unint64_t v5;

  if (*(_BYTE *)(v0 + 8) != 1)
    return 0;
  _s11SwiftUIViewVMa(0);
  v1 = sub_1004B804C(&qword_1013F0E10);
  State.wrappedValue.getter(v1);
  swift_bridgeObjectRelease();
  v2 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v2 = *(_QWORD *)v4 & 0xFFFFFFFFFFFFLL;
  return v2 != 0;
}

unint64_t sub_10076DDB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F0D20;
  if (!qword_1013F0D20)
  {
    v1 = sub_1004CB6A4(&qword_1013F0D10);
    sub_1004CBA30(&qword_1013F0D28, &qword_1013F0D08, (uint64_t)&protocol conformance descriptor for NavigationSplitView<A, B, C>);
    sub_1004CBA30(&qword_1013F0D30, &qword_1013F0CF0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0D20);
  }
  return result;
}

uint64_t sub_10076DE50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10076A950(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10076DE58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10076ABB0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10076DE70()
{
  uint64_t result;

  result = static Font.caption.getter();
  qword_1013F0A58 = result;
  return result;
}

void sub_10076DE8C()
{
  qword_1013F0A60 = static Font.Weight.medium.getter();
}

uint64_t sub_10076DEA8()
{
  uint64_t result;

  result = static Color.secondary.getter();
  qword_1013F0A68 = result;
  return result;
}

double sub_10076DEC4()
{
  double result;

  result = 0.0;
  xmmword_1013F0A70 = xmmword_100F08B50;
  *(_OWORD *)&qword_1013F0A80 = xmmword_100F08B60;
  return result;
}

uint64_t sub_10076DEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  _BYTE v20[16];
  _BYTE v21[136];
  _QWORD v22[17];
  _QWORD v23[2];
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  __int128 v46;

  v4 = sub_1004B804C(&qword_1013F0D80);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v20[-v8];
  v11 = __chkstk_darwin(v10);
  v13 = &v20[-v12];
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v11);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v14 = sub_1004B804C(&qword_1013F0D88);
  sub_10076E144(a1, &v9[*(int *)(v14 + 44)]);
  sub_1004C4938((uint64_t)v9, (uint64_t)v13, &qword_1013F0D80);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v16 = static HorizontalAlignment.center.getter(v15);
    sub_10076F428(a1, (uint64_t)&v36);
    LOBYTE(v22[0]) = 0;
    v21[0] = v37;
    v20[8] = v43;
    v20[0] = v45;
    v23[0] = v16;
    v23[1] = 0;
    v24 = 0;
    v25 = v36;
    v26 = v37;
    v27 = v38;
    v28 = v39;
    v29 = v40;
    v30 = v41;
    v31 = v42;
    v32 = v43;
    v33 = v44;
    v34 = v45;
    v35 = v46;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v23, v17);
  }
  else
  {
    sub_10076E98C((uint64_t)v23);
  }
  sub_1004C4938((uint64_t)v23, (uint64_t)&v36, &qword_1013F0D90);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v6, &qword_1013F0D80);
  sub_1004C4938((uint64_t)&v36, (uint64_t)v21, &qword_1013F0D90);
  sub_1004CB7BC((uint64_t)v6, a2, &qword_1013F0D80);
  v18 = a2 + *(int *)(sub_1004B804C(&qword_1013F0D98) + 48);
  sub_1004C4938((uint64_t)v21, (uint64_t)v22, &qword_1013F0D90);
  sub_1004C4938((uint64_t)v22, v18, &qword_1013F0D90);
  sub_10076E9E4(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10076E9A8);
  sub_1004CB800((uint64_t)v13, &qword_1013F0D80);
  sub_1004C4938((uint64_t)v21, (uint64_t)v23, &qword_1013F0D90);
  sub_10076E9E4(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10076EA40);
  return sub_1004CB800((uint64_t)v6, &qword_1013F0D80);
}

double sub_10076E144@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  unsigned int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t OpaqueTypeConformance2;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  void (*v99)(char *, uint64_t, double);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t);
  void *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v109 = a2;
  v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v111 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v110 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s11SwiftUIViewVMa(0);
  v106 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v107 = v6;
  v108 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1004B804C(&qword_1013F0E28);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v114 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1004B804C(&qword_1013F0E30);
  v131 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v130 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v113 = (char *)&v105 - v10;
  __chkstk_darwin(v11);
  v129 = (char *)&v105 - v12;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v132 = 0;
  KeyPath = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v119 = 0;
  v118 = 0;
  v23 = *(_BYTE *)(a1 + 8) == 1;
  v112 = v3;
  if (v23)
  {
    v24 = a1;
    if (qword_1013DD070 != -1)
      swift_once(&qword_1013DD070, sub_10076AE5C);
    v25 = unk_1013F09D0;
    v134 = (uint64_t (*)(uint64_t))qword_1013F09C8;
    v135 = (void *)unk_1013F09D0;
    v26 = sub_1004D292C();
    swift_bridgeObjectRetain(v25);
    v27 = Text.init<A>(_:)(&v134, &type metadata for String, v26);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    if (qword_1013DD0C0 != -1)
      swift_once(&qword_1013DD0C0, sub_10076DE70);
    v34 = v31 & 1;
    v35 = Text.font(_:)(qword_1013F0A58, v27, v29, v31 & 1, v33);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    sub_1005EFC24(v27, v29, v34);
    swift_bridgeObjectRelease();
    if (qword_1013DD0C8 != -1)
      swift_once(&qword_1013DD0C8, sub_10076DE8C);
    v42 = v39 & 1;
    v13 = Text.fontWeight(_:)(qword_1013F0A60, 0, v35, v37, v42, v41);
    v14 = v43;
    v45 = v44;
    v132 = v46;
    sub_1005EFC24(v35, v37, v42);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_100F08D00);
    a1 = v24;
    if (qword_1013DD0D0 != -1)
      swift_once(&qword_1013DD0D0, sub_10076DEA8);
    v15 = v45 & 1;
    v19 = qword_1013F0A68;
    v18 = swift_getKeyPath(&unk_100F08D30);
    v47 = qword_1013DD0D8;
    swift_retain(v19);
    if (v47 != -1)
      swift_once(&qword_1013DD0D8, sub_10076DEC4);
    v22 = *((_QWORD *)&xmmword_1013F0A70 + 1);
    v21 = xmmword_1013F0A70;
    v119 = qword_1013F0A80;
    v118 = unk_1013F0A88;
    v20 = static Edge.Set.all.getter();
    v17 = 1;
  }
  v48 = v14;
  v120 = v20;
  v121 = v17;
  v123 = v21;
  v126 = KeyPath;
  v128 = v13;
  v49 = v108;
  sub_1004B8460(a1, v108, _s11SwiftUIViewVMa);
  v50 = *(unsigned __int8 *)(v106 + 80);
  v51 = (v50 + 16) & ~v50;
  v52 = swift_allocObject(&unk_10127C138, v51 + v107, v50 | 7);
  sub_1004B84E0(v49, v52 + v51, _s11SwiftUIViewVMa);
  v134 = sub_100770D50;
  v135 = (void *)v52;
  v53 = *(_BYTE *)(a1 + 8);
  v127 = v48;
  v124 = v18;
  v125 = v19;
  v133 = v15;
  v122 = v22;
  if ((v53 & 1) != 0)
  {
    if (qword_1013DD068 != -1)
      swift_once(&qword_1013DD068, sub_10076AD8C);
    v54 = qword_1013F09B8;
    v55 = swift_bridgeObjectRetain(unk_1013F09C0);
    v138 = v54;
    v139 = v56;
    v57 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.inline(_:);
  }
  else
  {
    if (qword_1013DD058 != -1)
      swift_once(&qword_1013DD058, sub_10076ABF4);
    v58 = qword_1013F0998;
    v55 = swift_bridgeObjectRetain(unk_1013F09A0);
    v138 = v58;
    v139 = v59;
    v57 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.large(_:);
  }
  v60 = v112;
  v61 = v111;
  v62 = v110;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v111 + 104))(v110, *v57, v112, v55);
  v63 = sub_1004B804C(&qword_1013F0E38);
  v64 = sub_1004CBA30(&qword_1013F0E40, &qword_1013F0E38, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v65 = sub_1004D292C();
  v66 = v114;
  View.navigationBarTitle<A>(_:displayMode:)(&v138, v62, v63, &type metadata for String, v64, v65);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
  swift_bridgeObjectRelease();
  swift_release(v135);
  __chkstk_darwin(v67);
  v103 = a1;
  v68 = sub_1004B804C(&qword_1013F0E48);
  v134 = (uint64_t (*)(uint64_t))v63;
  v135 = &type metadata for String;
  v136 = v64;
  v137 = v65;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v134, &opaque type descriptor for <<opaque return type of View.navigationBarTitle<A>(_:displayMode:)>>, 1);
  v70 = sub_1004CB6A4(&qword_1013F0E50);
  v71 = sub_100770D64();
  v134 = (uint64_t (*)(uint64_t))v70;
  v135 = (void *)v71;
  v72 = swift_getOpaqueTypeConformance2(&v134, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v73 = v113;
  v74 = v117;
  View.toolbar<A>(content:)(sub_100770D5C, &v101, v117, v68, OpaqueTypeConformance2, v72);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v66, v74);
  v75 = v131;
  v76 = v129;
  v77 = v115;
  (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v129, v73, v115);
  v78 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  v79 = v130;
  v78(v130, v76, v77);
  v80 = v109;
  v81 = v127;
  *v109 = v128;
  v80[1] = v81;
  v82 = v132;
  v80[2] = v133;
  v80[3] = v82;
  v83 = v121;
  v84 = v122;
  v80[4] = v126;
  v80[5] = v83;
  v86 = v124;
  v85 = v125;
  v80[6] = v124;
  v80[7] = v85;
  v87 = v123;
  v80[8] = v120;
  v80[9] = v87;
  v88 = v119;
  v80[10] = v84;
  v80[11] = v88;
  v89 = v118;
  v80[12] = v118;
  *((_BYTE *)v80 + 104) = 0;
  v90 = sub_1004B804C(&qword_1013F0E80);
  v78((char *)v80 + *(int *)(v90 + 48), v79, v77);
  v104 = 0;
  v102 = v88;
  v103 = v89;
  v101 = v84;
  v92 = v127;
  v91 = v128;
  v93 = v132;
  v94 = v126;
  v95 = v121;
  v96 = v86;
  v97 = v125;
  v98 = sub_100770E30(v128, v127, v133, v132, v126, v121, v96, v125);
  v99 = *(void (**)(char *, uint64_t, double))(v131 + 8);
  v99(v129, v77, v98);
  ((void (*)(char *, uint64_t))v99)(v130, v77);
  v104 = 0;
  v102 = v88;
  v103 = v89;
  v101 = v122;
  return sub_100770E8C(v91, v92, v133, v93, v94, v95, v124, v97);
}

double sub_10076E98C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10076E9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a7)
  {
    swift_retain(a6);
    swift_retain(a7);
    return swift_retain(a11);
  }
  return result;
}

_QWORD *sub_10076E9E4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

double sub_10076EA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a7)
  {
    swift_release(a7);
    swift_release(a11);
    *(_QWORD *)&result = swift_release(a6).n128_u64[0];
  }
  return result;
}

uint64_t sub_10076EA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  char *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a2;
  v57 = sub_1004B804C(&qword_1013F0E88);
  __chkstk_darwin(v57);
  v56 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1004B804C(&qword_1013F0E78);
  v4 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v58 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F0E90);
  v59 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v61 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_1013F0E98);
  v8 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v11);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013F0E60);
  v62 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1004B804C(&qword_1013F0E50);
  v17 = __chkstk_darwin(v63);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v20 = static ToolbarItemPlacement.cancellationAction.getter(v17);
    v53[1] = v53;
    __chkstk_darwin(v20);
    v53[-2] = a1;
    v21 = sub_1004B804C(&qword_1013F0EA0);
    v55 = v4;
    v22 = v21;
    v23 = sub_1004CB6A4(&qword_1013E7038);
    v54 = v6;
    v24 = v23;
    v25 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    v66 = v24;
    v67 = v25;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.keyboardShortcut(_:)>>, 1);
    v27 = v61;
    ToolbarItemGroup.init(placement:content:)(v13, sub_100770F88, &v53[-4], v22, OpaqueTypeConformance2);
    v29 = static ToolbarItemPlacement.confirmationAction.getter(v28);
    __chkstk_darwin(v29);
    v53[-2] = a1;
    v30 = sub_1004B804C(&qword_1013F0EA8);
    v31 = sub_100770F98();
    ToolbarItemGroup.init(placement:content:)(v13, sub_100770F90, &v53[-4], v30, v31);
    v33 = v56;
    v32 = v57;
    v34 = &v56[*(int *)(v57 + 48)];
    v35 = v59;
    v36 = v27;
    v37 = v54;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v36, v54);
    v38 = v62;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v34, v16, v14);
    v39 = v58;
    TupleToolbarContent.init(_:)(v33, v32);
    v40 = sub_1004CBA30(&qword_1013F0E68, &qword_1013F0E60, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
    v66 = v14;
    v67 = v40;
    v41 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v42 = sub_1004CBA30(&qword_1013F0E70, &qword_1013F0E78, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    v43 = v65;
    static ToolbarContentBuilder.buildEither<A, B>(second:)(v39, v64, v65, v41, v42);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v43);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v14);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v61, v37);
  }
  else
  {
    v44 = static ToolbarItemPlacement.confirmationAction.getter(v17);
    __chkstk_darwin(v44);
    v53[-2] = a1;
    v45 = sub_1004B804C(&qword_1013F0EA8);
    v46 = sub_100770F98();
    ToolbarItemGroup.init(placement:content:)(v13, sub_100771064, &v53[-4], v45, v46);
    v47 = sub_1004CBA30(&qword_1013F0E68, &qword_1013F0E60, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
    static ToolbarContentBuilder.buildBlock<A>(_:)(v16, v14, v47);
    v66 = v14;
    v67 = v47;
    v48 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v49 = sub_1004CBA30(&qword_1013F0E70, &qword_1013F0E78, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    v50 = v64;
    static ToolbarContentBuilder.buildEither<A, B>(first:)(v10, v64, v65, v48, v49);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v50);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v14);
  }
  v51 = sub_100770D64();
  static ToolbarContentBuilder.buildBlock<A>(_:)(v19, v63, v51);
  return sub_1004CB800((uint64_t)v19, &qword_1013F0E50);
}

uint64_t sub_10076EFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v19[1] = a2;
  v19[0] = type metadata accessor for KeyboardShortcut(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11SwiftUIViewVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_1004B804C(&qword_1013E7038);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_10127C200, v14 + v8, v13 | 7);
  sub_1004B84E0((uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, _s11SwiftUIViewVMa);
  v16 = Button.init(action:label:)(sub_10077110C, v15, sub_10076BAB4, 0, &type metadata for Text, &protocol witness table for Text);
  static KeyboardShortcut.cancelAction.getter(v16);
  v17 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.keyboardShortcut(_:)(v5, v9, v17);
  (*(void (**)(char *, _QWORD))(v3 + 8))(v5, v19[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10076F190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27[1] = a1;
  v31 = a2;
  v3 = type metadata accessor for KeyboardShortcut(0);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s11SwiftUIViewVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E7038);
  v28 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013F0EA0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v9, _s11SwiftUIViewVMa);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_10127C1B0, v18 + v8, v17 | 7);
  sub_1004B84E0((uint64_t)v9, v19 + v18, _s11SwiftUIViewVMa);
  v20 = Button.init(action:label:)(sub_1007710B0, v19, sub_10076DC74, 0, &type metadata for Text, &protocol witness table for Text);
  static KeyboardShortcut.defaultAction.getter(v20);
  v21 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.keyboardShortcut(_:)(v5, v10, v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  LOBYTE(v19) = sub_10076DD20();
  KeyPath = swift_getKeyPath(&unk_100F08D60);
  v23 = swift_allocObject(&unk_10127C1D8, 17, 7);
  *(_BYTE *)(v23 + 16) = (v19 & 1) == 0;
  v24 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v31, v16, v13);
  v25 = (uint64_t *)(v24 + *(int *)(sub_1004B804C(&qword_1013F0EA8) + 36));
  *v25 = KeyPath;
  v25[1] = (uint64_t)sub_1007123C8;
  v25[2] = v23;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

double sub_10076F428@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  v4 = _s11SwiftUIViewVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v8 = a1 + *(int *)(v7 + 52);
  v9 = *(_QWORD *)(v8 + 16);
  v29 = *(_OWORD *)v8;
  v30 = v9;
  v10 = sub_1004B804C(&qword_1013F0DA0);
  State.projectedValue.getter(v10);
  v11 = *((_QWORD *)&v31 + 1);
  v28 = v31;
  v12 = v32;
  v13 = v33;
  sub_1004B8460(a1, (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_10127C0E8, v15 + v6, v14 | 7);
  sub_1004B84E0((uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, _s11SwiftUIViewVMa);
  v17 = *(_QWORD *)(v8 + 16);
  v31 = *(_OWORD *)v8;
  v32 = v17;
  v18 = State.wrappedValue.getter(v10);
  v19 = *((_QWORD *)&v29 + 1);
  v20 = static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(&v31, 0, 1, v19, 0, v20, v21);
  v22 = v31;
  v23 = BYTE8(v31);
  v24 = v32;
  v25 = v33;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = sub_10076F698;
  *(_QWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 64) = v22;
  *(_BYTE *)(a2 + 72) = v23;
  *(_QWORD *)(a2 + 80) = v24;
  *(_BYTE *)(a2 + 88) = v25;
  result = *(double *)&v34;
  *(_OWORD *)(a2 + 96) = v34;
  return result;
}

__n128 sub_10076F5CC()
{
  __n128 result;

  __asm { FMOV            V0.2D, #8.0 }
  xmmword_1013F0A90 = (__int128)result;
  *(__n128 *)&qword_1013F0AA0 = result;
  return result;
}

__n128 sub_10076F5E0()
{
  __n128 result;

  __asm { FMOV            V0.2D, #2.0 }
  xmmword_1013F0AB0 = (__int128)result;
  *(__n128 *)&qword_1013F0AC0 = result;
  return result;
}

void sub_10076F5F4()
{
  qword_1013F0AD0 = 0x4008000000000000;
}

uint64_t sub_10076F604()
{
  uint64_t v0;

  v0 = type metadata accessor for Material(0);
  sub_100501DE0(v0, qword_1013F0AD8);
  sub_1004F2A1C(v0, (uint64_t)qword_1013F0AD8);
  return static Material.thin.getter();
}

void sub_10076F64C(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a3);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v5 = sub_1004B804C(&qword_1013F0DA8);
  sub_10076F6A4(a1, a2 + *(int *)(v5 + 44));
}

uint64_t sub_10076F698()
{
  return sub_100770C14((uint64_t (*)(uint64_t))sub_10076F64C);
}

void sub_10076F6A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;

  v4 = sub_1004B804C(&qword_1013F0DB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1004B804C(&qword_1013F0DB8);
  __chkstk_darwin(v53);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F0DC0);
  __chkstk_darwin(v9);
  v11 = (_QWORD *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = sub_1004B804C(&qword_1013F0DC8);
  __chkstk_darwin(v54);
  v57 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - v14;
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  v56 = Color.init(uiColor:)(v16);
  v17 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v58, 0, 0, _swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
  v18 = v58[0];
  v19 = v58[1];
  v20 = v58[2];
  v55 = v58[3];
  v21 = v58[4];
  v52 = static Alignment.center.getter(v17);
  v51 = v22;
  v23 = static Alignment.center.getter(v52);
  v25 = _FrameLayout.init(width:height:alignment:)(&v59, 0, 1, 0x3FE0000000000000, 0, v23, v24);
  v50 = v59;
  v49 = v60;
  v48 = v61;
  v47 = v62;
  v46 = v63;
  v45 = v64;
  *v11 = static Alignment.center.getter(v25);
  v11[1] = v26;
  v27 = (uint64_t)v11 + *(int *)(sub_1004B804C(&qword_1013F0DD0) + 44);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v28);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v29 = sub_1004B804C(&qword_1013F0DD8);
  sub_10076FB4C(a1, (uint64_t)&v6[*(int *)(v29 + 44)]);
  if (qword_1013DD0E0 != -1)
    swift_once(&qword_1013DD0E0, sub_10076F5CC);
  v44 = xmmword_1013F0A90;
  v31 = qword_1013F0AA0;
  v30 = unk_1013F0AA8;
  v32 = static Edge.Set.all.getter();
  sub_1004CB7BC((uint64_t)v6, (uint64_t)v8, &qword_1013F0DB0);
  v33 = &v8[*(int *)(v53 + 36)];
  *v33 = v32;
  *(_OWORD *)(v33 + 8) = v44;
  *((_QWORD *)v33 + 3) = v31;
  *((_QWORD *)v33 + 4) = v30;
  v33[40] = 0;
  sub_1004CB800((uint64_t)v6, &qword_1013F0DB0);
  sub_1004C4938((uint64_t)v8, v27, &qword_1013F0DB8);
  if (qword_1013DD0F8 != -1)
    swift_once(&qword_1013DD0F8, sub_10076F604);
  v34 = type metadata accessor for Material(0);
  v35 = sub_1004F2A1C(v34, (uint64_t)qword_1013F0AD8);
  v36 = static Edge.Set.all.getter();
  v37 = &v15[*(int *)(v54 + 36)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v37, v35, v34);
  v37[*(int *)(sub_1004B804C(&qword_1013F0DE0) + 36)] = v36;
  sub_1004C4938((uint64_t)v11, (uint64_t)v15, &qword_1013F0DC0);
  v38 = v57;
  sub_1004CB7BC((uint64_t)v15, v57, &qword_1013F0DC8);
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v19;
  *(_QWORD *)(a2 + 16) = v20;
  v40 = v55;
  v39 = v56;
  *(_QWORD *)(a2 + 24) = v55;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v39;
  *(_WORD *)(a2 + 48) = 256;
  v41 = v51;
  *(_QWORD *)(a2 + 56) = v52;
  *(_QWORD *)(a2 + 64) = v41;
  *(_QWORD *)(a2 + 72) = v50;
  *(_BYTE *)(a2 + 80) = v49;
  *(_QWORD *)(a2 + 88) = v48;
  *(_BYTE *)(a2 + 96) = v47;
  v42 = v45;
  *(_QWORD *)(a2 + 104) = v46;
  *(_QWORD *)(a2 + 112) = v42;
  v43 = sub_1004B804C(&qword_1013F0DE8);
  sub_1004CB7BC(v38, a2 + *(int *)(v43 + 48), &qword_1013F0DC8);
  swift_bridgeObjectRetain(v40);
  swift_retain(v39);
  sub_1004CB800((uint64_t)v15, &qword_1013F0DC8);
  sub_1004CB800(v38, &qword_1013F0DC8);
  swift_release(v39);
  swift_bridgeObjectRelease();
}

uint64_t sub_10076FB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v58 = a2;
  v53 = _s11SwiftUIViewVMa(0);
  v54 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v55 = v3;
  v57 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s13ThumbnailViewVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F0DF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1004B804C(&qword_1013F0DF8);
  __chkstk_darwin(v52);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v56 = a1;
  v18 = *(_QWORD *)(a1 + 40);
  KeyPath = swift_getKeyPath(&unk_100F08CB8);
  v20 = swift_getKeyPath(&unk_100F08CE0);
  swift_retain(v18);
  static Published.subscript.getter(&v66, v21, KeyPath, v20);
  swift_release(v18);
  swift_release(KeyPath);
  swift_release(v20);
  if ((_QWORD)v66)
    v22 = Image.init(uiImage:)(v66);
  else
    v22 = 0;
  if (qword_1013DD0F0 != -1)
    swift_once(&qword_1013DD0F0, sub_10076F5F4);
  v23 = qword_1013F0AD0;
  if (qword_1013DD0E8 != -1)
    swift_once(&qword_1013DD0E8, sub_10076F5E0);
  v51 = xmmword_1013F0AB0;
  v24 = qword_1013F0AC0;
  v25 = unk_1013F0AC8;
  v26 = static Color.clear.getter((__n128)xmmword_1013F0AB0);
  static ShadowStyle.drop(color:radius:x:y:)(0.0, 0.0, 0.0);
  swift_release(v26);
  *(_QWORD *)v6 = v22;
  v6[8] = 0;
  *((_QWORD *)v6 + 2) = v23;
  *(_OWORD *)(v6 + 24) = v51;
  *((_QWORD *)v6 + 5) = v24;
  *((_QWORD *)v6 + 6) = v25;
  sub_1004B8460((uint64_t)v6, (uint64_t)v9, _s13ThumbnailViewVMa);
  v27 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v27 = 0x3FFC71C71C71C71CLL;
  *((_WORD *)v27 + 4) = 0;
  sub_1004B84A4((uint64_t)v6, _s13ThumbnailViewVMa);
  v28 = v56;
  v29 = (_QWORD *)(v56 + *(int *)(v53 + 48));
  v31 = v29[1];
  v32 = v29[2];
  *(_QWORD *)&v66 = *v29;
  v30 = v66;
  *((_QWORD *)&v66 + 1) = v31;
  *(_QWORD *)&v67 = v32;
  v33 = sub_1004B804C(&qword_1013F0DA0);
  v34 = State.wrappedValue.getter(v33);
  v35 = v63;
  v36 = static Alignment.center.getter(v34);
  _FrameLayout.init(width:height:alignment:)(&v66, 0, 1, v35, 0, v36, v37);
  sub_1004CB7BC((uint64_t)v9, (uint64_t)v14, &qword_1013F0DF0);
  v38 = &v14[*(int *)(v52 + 36)];
  v39 = v67;
  *(_OWORD *)v38 = v66;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v68;
  sub_1004CB800((uint64_t)v9, &qword_1013F0DF0);
  sub_1004C4938((uint64_t)v14, (uint64_t)v17, &qword_1013F0DF8);
  v59 = v30;
  v60 = v31;
  v61 = v32;
  State.projectedValue.getter(v33);
  v40 = v62;
  v41 = v63;
  v42 = v64;
  v43 = v65;
  v44 = v57;
  sub_1004B8460(v28, v57, _s11SwiftUIViewVMa);
  v45 = *(unsigned __int8 *)(v54 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = swift_allocObject(&unk_10127C110, v46 + v55, v45 | 7);
  sub_1004B84E0(v44, v47 + v46, _s11SwiftUIViewVMa);
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v11, &qword_1013F0DF8);
  v48 = v58;
  sub_1004CB7BC((uint64_t)v11, v58, &qword_1013F0DF8);
  v49 = (_QWORD *)(v48 + *(int *)(sub_1004B804C(&qword_1013F0E00) + 48));
  *v49 = v40;
  v49[1] = v41;
  v49[2] = v42;
  v49[3] = v43;
  v49[4] = sub_100770C08;
  v49[5] = v47;
  swift_retain(v40);
  swift_retain(v41);
  swift_retain(v47);
  sub_1004CB800((uint64_t)v17, &qword_1013F0DF8);
  swift_release(v47);
  swift_release(v41);
  swift_release(v40);
  return sub_1004CB800((uint64_t)v11, &qword_1013F0DF8);
}

uint64_t sub_10077001C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v24[1] = a2;
  v3 = type metadata accessor for RoundedBorderTextFieldStyle(0);
  v25 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F0E08);
  v24[0] = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD080 != -1)
    swift_once(&qword_1013DD080, sub_10076AFEC);
  v9 = qword_1013F09E8;
  v10 = unk_1013F09F0;
  v11 = (__int128 *)(a1 + *(int *)(_s11SwiftUIViewVMa(0) + 36));
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 2);
  v26 = v12;
  v27 = v13;
  swift_bridgeObjectRetain(v10);
  v14 = sub_1004B804C(&qword_1013F0E10);
  State.projectedValue.getter(v14);
  v15 = v28;
  v16 = v29;
  v17 = v30;
  v18 = v31;
  v28 = v9;
  v29 = v10;
  v19 = sub_1004D292C();
  v20 = TextField<>.init<A>(_:text:onEditingChanged:onCommit:)(&v28, v15, v16, v17, v18, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, &type metadata for String, v19);
  RoundedBorderTextFieldStyle.init()(v20);
  v21 = sub_1004CBA30(&qword_1013F0E18, &qword_1013F0E08, (uint64_t)&protocol conformance descriptor for TextField<A>);
  v22 = sub_1004B7878(&qword_1013F0E20, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedBorderTextFieldStyle, (uint64_t)&protocol conformance descriptor for RoundedBorderTextFieldStyle);
  View.textFieldStyle<A>(_:)(v5, v6, v3, v21, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v24[0] + 8))(v8, v6);
}

uint64_t sub_100770238@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_1004CB6A4(&qword_1013F1128);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v44 = *(_QWORD *)(a1 + 24);
  v7 = v44;
  v45 = sub_1004CBA30(&qword_1013F1130, &qword_1013F1128, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v9 = type metadata accessor for ZStack(0, v6, WitnessTable);
  v37 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = sub_1004CB6A4(&qword_1013F1138);
  v13 = type metadata accessor for ModifiedContent(0, v9, v12);
  v36 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  v39 = v4;
  v40 = v7;
  v41 = v2;
  v20 = static Alignment.center.getter(v19);
  ZStack.init(alignment:content:)(v20);
  v21 = swift_allocObject(&unk_10127C3D8, 80, 7);
  *(_QWORD *)(v21 + 16) = v4;
  *(_QWORD *)(v21 + 24) = v7;
  v22 = *((_OWORD *)v2 + 1);
  v23 = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)v2;
  *(_OWORD *)(v21 + 48) = v22;
  *(_OWORD *)(v21 + 64) = v23;
  v24 = v2[1];
  v46 = *v2;
  v25 = v2[5];
  sub_1006CD6CC(&v46);
  swift_retain(v24);
  swift_retain(v25);
  v26 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  v27 = sub_100772160();
  v28 = sub_1004B7878(&qword_1013F1148, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
  View.onPreferenceChange<A>(_:perform:)(&_s11SwiftUIViewV17SizePreferenceKeyVN, sub_100772154, v21, v9, &_s11SwiftUIViewV17SizePreferenceKeyVN, v26, v27, v28);
  v29 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v11, v9, v29);
  v30 = sub_1004CBA30(&qword_1013F1150, &qword_1013F1138, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v42 = v26;
  v43 = v30;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v31 = v36;
  v32 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v32(v18, v15, v13);
  v33 = *(void (**)(char *, uint64_t))(v31 + 8);
  v33(v15, v13);
  v32(v38, v18, v13);
  return ((uint64_t (*)(char *, uint64_t))v33)(v18, v13);
}

uint64_t sub_100770504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v30 = a3;
  v31 = a4;
  v29 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004CB6A4(&qword_1013F1128);
  v9 = type metadata accessor for ModifiedContent(0, a2, v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v28 - v15;
  v17 = (*(uint64_t (**)(__n128))(a1 + 32))(v14);
  v34[0] = sub_1007706EC;
  v34[1] = 0;
  v18 = static Alignment.center.getter(v17);
  v20 = v19;
  v21 = sub_1004B804C(&qword_1013F1160);
  v22 = sub_1004CBA30(&qword_1013F1168, &qword_1013F1160, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v23 = v30;
  View.background<A>(_:alignment:)(v34, v18, v20, a2, v21, v30, v22);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, a2);
  v24 = sub_1004CBA30(&qword_1013F1130, &qword_1013F1128, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v32 = v23;
  v33 = v24;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v25(v16, v12, v9);
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v12, v9);
  v25(v31, v16, v9);
  return ((uint64_t (*)(char *, uint64_t))v26)(v16, v9);
}

void sub_1007706EC(uint64_t a1@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = static Color.clear.getter();
  v3 = GeometryProxy.size.getter();
  *(_QWORD *)a1 = v2;
  *(double *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
}

uint64_t sub_100770728(uint64_t *a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v10[2];
  __int128 v11;
  __int128 v12;

  v5 = *a1;
  v6 = a1[1];
  _s11SwiftUIViewV15ChildSizeReaderVMa(0, a3, a4, a4);
  v7 = a2[1];
  v11 = *a2;
  v12 = v7;
  v10[0] = v5;
  v10[1] = v6;
  v8 = sub_1004B804C(&qword_1013F1158);
  return Binding.wrappedValue.setter(v10, v8);
}

uint64_t sub_100770790@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100770238(a1, a2);
}

void sub_1007707C8()
{
  xmmword_1013F0AF0 = 0uLL;
}

double sub_1007707D8@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_1013DD100 != -1)
    swift_once(&qword_1013DD100, sub_1007707C8);
  result = *(double *)&xmmword_1013F0AF0;
  *a1 = xmmword_1013F0AF0;
  return result;
}

_QWORD *sub_10077082C(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  return a2(&v3);
}

void sub_100770860(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F08CB8);
  v5 = swift_getKeyPath(&unk_100F08CE0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_1007708E0(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F08CB8);
  v5 = swift_getKeyPath(&unk_100F08CE0);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_10077095C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (int *)_s11SwiftUIViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_unknownObjectWeakDestroy(v0 + v4 + 16);
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v7 = (_QWORD *)(v0 + v4 + v1[8]);
  v8 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = v6 + v1[9];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v10 + 16));
  v11 = v6 + v1[10];
  v12 = (int *)_s13ItemViewModelVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
  {
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
    v14 = v0;
    v15 = v5;
    v16 = v11 + v12[5];
    v17 = type metadata accessor for Date(0);
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
    v19 = v16;
    v5 = v15;
    v0 = v14;
    v18(v19, v17);
    v20 = v17;
    v4 = (v3 + 16) & ~v3;
    v18(v11 + v12[6], v20);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v21 = sub_1004B804C(&qword_1013F0BF8);
  swift_release(*(_QWORD *)(v11 + *(int *)(v21 + 28)));
  v22 = v6 + v1[11];
  v23 = type metadata accessor for NavigationSplitViewVisibility(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  v24 = sub_1004B804C(&qword_1013F0C00);
  swift_release(*(_QWORD *)(v22 + *(int *)(v24 + 28)));
  swift_release(*(_QWORD *)(v6 + v1[12] + 16));
  swift_release(*(_QWORD *)(v6 + v1[13] + 16));
  v25 = v6 + v1[14];
  v26 = type metadata accessor for UUID(0);
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  v28 = sub_1004B804C(&qword_1013F0C08);
  swift_release(*(_QWORD *)(v25 + *(int *)(v28 + 28)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100770C08()
{
  return sub_100770C14((uint64_t (*)(uint64_t))sub_10077001C);
}

uint64_t sub_100770C14(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(_s11SwiftUIViewVMa(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

void sub_100770C60(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F08D90, (uint64_t)&unk_100F08DB8, a2);
}

uint64_t sub_100770C74(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100770CD8(a1, a2, a3, a4, (uint64_t)&unk_100F08D90, (uint64_t)&unk_100F08DB8);
}

void sub_100770C88(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F08DF8, (uint64_t)&unk_100F08E20, a2);
}

uint64_t sub_100770C9C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100770CD8(a1, a2, a3, a4, (uint64_t)&unk_100F08DF8, (uint64_t)&unk_100F08E20);
}

void sub_100770CB0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F08E60, (uint64_t)&unk_100F08E88, a2);
}

uint64_t sub_100770CC4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100770CD8(a1, a2, a3, a4, (uint64_t)&unk_100F08E60, (uint64_t)&unk_100F08E88);
}

uint64_t sub_100770CD8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_100770D50(uint64_t a1)
{
  return sub_1007712DC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10076BB48);
}

uint64_t sub_100770D5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10076EA7C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100770D64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1013F0E58;
  if (!qword_1013F0E58)
  {
    v1 = sub_1004CB6A4(&qword_1013F0E50);
    v2[0] = sub_1004CB6A4(&qword_1013F0E60);
    v2[1] = sub_1004CBA30(&qword_1013F0E68, &qword_1013F0E60, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    sub_1004CBA30(&qword_1013F0E70, &qword_1013F0E78, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0E58);
  }
  return result;
}

double sub_100770E30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a4)
  {
    sub_1006CCFD0(a1, a2, a3 & 1);
    swift_retain(a8);
    swift_bridgeObjectRetain(a4);
    swift_retain(a5);
    *(_QWORD *)&result = swift_retain(a7).n128_u64[0];
  }
  return result;
}

double sub_100770E8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  if (a4)
  {
    sub_1005EFC24(a1, a2, a3 & 1);
    swift_release(a7);
    swift_release(a5);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(a8).n128_u64[0];
  }
  return result;
}

uint64_t sub_100770EE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100770F10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100770F38(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100770F5C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100770F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10076EFC8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100770F90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10076F190(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100770F98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1013F0EB0;
  if (!qword_1013F0EB0)
  {
    v1 = sub_1004CB6A4(&qword_1013F0EA8);
    v2[0] = sub_1004CB6A4(&qword_1013E7038);
    v2[1] = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.keyboardShortcut(_:)>>, 1);
    sub_1004CBA30(&qword_1013EF1B8, &qword_1013EF1C0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0EB0);
  }
  return result;
}

uint64_t sub_100771064@<X0>(uint64_t a1@<X8>)
{
  return sub_10076D654(a1);
}

uint64_t sub_100771088()
{
  return sub_1007710BC(sub_10076D980);
}

uint64_t sub_10077109C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1007710B0()
{
  return sub_1007710BC((uint64_t (*)(uint64_t))sub_10076DBE0);
}

uint64_t sub_1007710BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(_s11SwiftUIViewVMa(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1007710F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void *sub_100771110()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s11SwiftUIViewVMa(0) - 8) + 80);
  return sub_10076D608(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_100771140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10076BD9C(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_100771148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F0ED0;
  if (!qword_1013F0ED0)
  {
    v1 = sub_1004CB6A4(&qword_1013F0EC8);
    sub_1007711CC();
    sub_1004CBA30(&qword_1013F0EF8, &qword_1013F0F00, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0ED0);
  }
  return result;
}

unint64_t sub_1007711CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F0ED8;
  if (!qword_1013F0ED8)
  {
    v1 = sub_1004CB6A4(&qword_1013F0EE0);
    sub_1004CBA30(&qword_1013F0EE8, &qword_1013F0EF0, (uint64_t)&protocol conformance descriptor for LazyVGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0ED8);
  }
  return result;
}

uint64_t sub_100771254()
{
  return sub_1007710BC((uint64_t (*)(uint64_t))sub_10076D520);
}

uint64_t sub_100771260@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10076C3B0(*(_QWORD *)(v1 + 16), a1);
}

void sub_100771268(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F08D90, (uint64_t)&unk_100F08DB8, a2);
}

uint64_t sub_10077128C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100770CD8(a1, a2, a3, a4, (uint64_t)&unk_100F08D90, (uint64_t)&unk_100F08DB8);
}

uint64_t sub_1007712B0(uint64_t a1)
{
  uint64_t v1;

  return sub_10076C7D0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1007712D0(uint64_t a1)
{
  return sub_1007712DC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10076CD10);
}

uint64_t sub_1007712DC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s11SwiftUIViewVMa(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

unint64_t sub_100771338()
{
  unint64_t result;

  result = qword_1013F0F58;
  if (!qword_1013F0F58)
  {
    result = swift_getWitnessTable(&unk_100F32B3C, &_s8ItemViewVN);
    atomic_store(result, (unint64_t *)&qword_1013F0F58);
  }
  return result;
}

uint64_t sub_10077137C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = (int *)_s11SwiftUIViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)_s13ItemViewModelVMa(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v41 = *(_QWORD *)(v7 + 64);
  v9 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_unknownObjectWeakDestroy(v0 + v4 + 16);
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v10 = (_QWORD *)(v0 + v4 + v1[8]);
  v11 = sub_1004B804C(&qword_1013F0BF0);
  v42 = v8;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = v9 + v1[9];
  swift_bridgeObjectRelease();
  v14 = swift_release(*(_QWORD *)(v13 + 16));
  v15 = v9 + v1[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *, __n128))(v7 + 48))(v15, 1, v6, v14))
  {
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    v17 = v15 + v6[5];
    v18 = type metadata accessor for Date(0);
    v40 = v5;
    v19 = v3;
    v20 = v0;
    v21 = v4;
    v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
    v22(v17, v18);
    v22(v15 + v6[6], v18);
    v4 = v21;
    v0 = v20;
    v3 = v19;
    v5 = v40;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v23 = sub_1004B804C(&qword_1013F0BF8);
  swift_release(*(_QWORD *)(v15 + *(int *)(v23 + 28)));
  v24 = v9 + v1[11];
  v25 = type metadata accessor for NavigationSplitViewVisibility(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  v26 = sub_1004B804C(&qword_1013F0C00);
  swift_release(*(_QWORD *)(v24 + *(int *)(v26 + 28)));
  swift_release(*(_QWORD *)(v9 + v1[12] + 16));
  swift_release(*(_QWORD *)(v9 + v1[13] + 16));
  v27 = v9 + v1[14];
  v28 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  v30 = v3 | v42 | 7;
  v31 = (v4 + v5 + v42) & ~v42;
  v32 = v31 + v41;
  v33 = sub_1004B804C(&qword_1013F0C08);
  v34 = swift_release(*(_QWORD *)(v27 + *(int *)(v33 + 28)));
  v35 = v0 + v31;
  (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v0 + v31, v28, v34);
  v36 = v0 + v31 + v6[5];
  v37 = type metadata accessor for Date(0);
  v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8);
  v38(v36, v37);
  v38(v35 + v6[6], v37);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v32, v30);
}

double sub_1007716E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(_s11SwiftUIViewVMa(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s13ItemViewModelVMa(0) - 8) + 80);
  return sub_10076D390(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_100771740()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100771764@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10076B3C4(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_10077176C()
{
  uint64_t v0;

  return sub_10076B888(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100771774()
{
  uint64_t v0;

  return sub_10076B9D0(*(_QWORD *)(v0 + 16));
}

void sub_100771780(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F08DF8, (uint64_t)&unk_100F08E20, a2);
}

uint64_t sub_1007717A4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100770CD8(a1, a2, a3, a4, (uint64_t)&unk_100F08DF8, (uint64_t)&unk_100F08E20);
}

uint64_t _s11SwiftUIViewV15SidebarListItemVMa(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F10C8, (uint64_t)&_s11SwiftUIViewV15SidebarListItemVMn);
}

uint64_t sub_1007717DC()
{
  uint64_t v0;

  return sub_10076B720(*(uint64_t **)(v0 + 16));
}

unint64_t sub_1007717E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F0FD0;
  if (!qword_1013F0FD0)
  {
    v1 = sub_1004CB6A4(&qword_1013F0FB0);
    sub_1004B7878(&qword_1013F0FC8, _s11SwiftUIViewV15SidebarListItemVMa, (uint64_t)&unk_100F08FDC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F0FD0);
  }
  return result;
}

void sub_100771860(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F08E60, (uint64_t)&unk_100F08E88, a2);
}

uint64_t sub_100771884(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100770CD8(a1, a2, a3, a4, (uint64_t)&unk_100F08E60, (uint64_t)&unk_100F08E88);
}

double sub_1007718B0(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  *(_QWORD *)&result = swift_release(a1[5]).n128_u64[0];
  return result;
}

uint64_t sub_1007718E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  v5 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *sub_100771934(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t sub_1007719B8(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v6;
  swift_release(v5);
  return a1;
}

uint64_t _s11SwiftUIViewV15ChildSizeReaderVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&_s11SwiftUIViewV15ChildSizeReaderVMn);
}

_QWORD *sub_100771A10(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = _s15FilterViewModelVMa(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = v19;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v6[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v6[7];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v15);
  }
  swift_retain(v19);
  return a1;
}

double sub_100771AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = _s15FilterViewModelVMa(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(v3 + 28) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100771B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)_s15FilterViewModelVMa(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  v11 = v5[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v5[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v14);
  swift_retain(v18);
  return a1;
}

uint64_t sub_100771BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)_s15FilterViewModelVMa(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v9 = v8[1];
  v7[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = v5[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v13 = v12[1];
  v11[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  v14 = v5[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t sub_100771CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)_s15FilterViewModelVMa(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_100771D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)_s15FilterViewModelVMa(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v11 = v5[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = v5[7];
  v17 = *(_QWORD *)(a1 + v16 + 8);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_100771DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100771DF0);
}

uint64_t sub_100771DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s15FilterViewModelVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100771E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100771E38);
}

uint64_t sub_100771E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s15FilterViewModelVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100771E78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = _s15FilterViewModelVMa(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t _s11SwiftUIViewV10BodyLayoutOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100771F2C + 4 * byte_100F08B75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100771F60 + 4 * byte_100F08B70[v4]))();
}

uint64_t sub_100771F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100771F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100771F70);
  return result;
}

uint64_t sub_100771F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100771F84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100771F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100771F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11SwiftUIViewV10BodyLayoutOMa()
{
  return &_s11SwiftUIViewV10BodyLayoutON;
}

unint64_t sub_100771FB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F1100;
  if (!qword_1013F1100)
  {
    v1 = sub_1004CB6A4(&qword_1013F1108);
    sub_10076DDB4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F1100);
  }
  return result;
}

unint64_t sub_100772020()
{
  unint64_t result;

  result = qword_1013F1110;
  if (!qword_1013F1110)
  {
    result = swift_getWitnessTable(&unk_100F08F64, &_s11SwiftUIViewV10BodyLayoutON);
    atomic_store(result, (unint64_t *)&qword_1013F1110);
  }
  return result;
}

uint64_t sub_100772064(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_101123584, 1);
}

uint64_t sub_100772098(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112355C, 1);
}

uint64_t sub_1007720A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10076B26C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1007720B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10076B2E8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1007720B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F1120;
  if (!qword_1013F1120)
  {
    v1 = sub_1004CB6A4(&qword_1013F1118);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013F1120);
  }
  return result;
}

uint64_t sub_100772114@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_100770504(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100772120()
{
  _QWORD *v0;

  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100772154(uint64_t *a1)
{
  uint64_t v1;

  return sub_100770728(a1, (__int128 *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_100772160()
{
  unint64_t result;

  result = qword_1013F1140;
  if (!qword_1013F1140)
  {
    result = swift_getWitnessTable(&unk_100F09044, &_s11SwiftUIViewV17SizePreferenceKeyVN);
    atomic_store(result, (unint64_t *)&qword_1013F1140);
  }
  return result;
}

ValueMetadata *_s11SwiftUIViewV17SizePreferenceKeyVMa()
{
  return &_s11SwiftUIViewV17SizePreferenceKeyVN;
}

uint64_t sub_1007721B4()
{
  return sub_1004CBA30(&qword_1013F1170, &qword_1013F1178, (uint64_t)&protocol conformance descriptor for Label<A, B>);
}

uint64_t sub_1007721E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = sub_1004CB6A4(&qword_1013F1128);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_1004CBA30(&qword_1013F1130, &qword_1013F1128, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  v5 = type metadata accessor for ZStack(255, v3, WitnessTable);
  v6 = sub_1004CB6A4(&qword_1013F1138);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v5);
  sub_1004CBA30(&qword_1013F1150, &qword_1013F1138, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
}

BOOL sub_1007722E8()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 24);
  return sub_1001E9730() >= v1;
}

BOOL sub_10077231C()
{
  _QWORD *v0;

  return ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))() & 1) == 0;
}

uint64_t sub_100772350()
{
  _QWORD *v0;
  void *v1;
  int v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  objc_msgSend(v1, "transform");
  v5 = v8;
  v6 = v7;
  v4 = v9;

  v7 = v6;
  v8 = v5;
  v9 = v4;
  v2 = sub_100079330((double *)&v7, 0.0001);
  if (v2)
  {
    if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))() & 1) != 0)
      LOBYTE(v2) = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x290))();
    else
      LOBYTE(v2) = 1;
  }
  return v2 & 1;
}

double sub_100772420()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 256);
  v3 = swift_retain(v1);
  v2(v3);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

double sub_10077246C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 264);
  v3 = swift_retain(v1);
  v2(v3);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

void sub_1007724B8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(__n128);
  __n128 v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, __n128);
  __n128 v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  CKRecordID v33;
  Swift::String v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v38 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v35 - v17;
  if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x2F0))(v16) & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    goto LABEL_16;
  }
  v37 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v19 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v20 = *(void (**)(__n128))(*(_QWORD *)v19 + 264);
  v21 = swift_retain(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
  v20(v21);
  swift_release(v19);
  v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC(a1, v22, (uint64_t *)&unk_1013E1A50);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v24 = a1;
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
      return;
    }
    goto LABEL_8;
  }
  sub_1004CB7BC((uint64_t)v9, (uint64_t)v14, (uint64_t *)&unk_1013E1A50);
  if (v23(v22, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013F62D0);
LABEL_9:
    v25 = type metadata accessor for CRLRootContainerItem(0);
    if (!swift_dynamicCastClass(v2, v25))
    {
      v26 = *(_QWORD *)((char *)v2 + v37);
      v27 = v38;
      sub_1004CB7BC(v24, v38, (uint64_t *)&unk_1013E1A50);
      v28 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v26 + 272);
      v29 = swift_retain(v26);
      v28(v27, v29);
      swift_release(v26);
      return;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"_setParentUUID(newValue:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 741, "Root container items should never be reparented!", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Root container items should never be reparented!");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_setParentUUID(newValue:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 741, (uint64_t)"Root container items should never be reparented!", 48, 2u);
LABEL_16:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v33, v34);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v30 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v36, v22, v4);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v31 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v30);
  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v30, v4);
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
  v32(v14, v4);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  if ((v31 & 1) == 0)
    goto LABEL_9;
}

uint64_t sub_1007729B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408))();
}

uint64_t sub_1007729E4()
{
  return sub_1007729FC((uint64_t (*)(uint64_t, _QWORD))sub_1007776BC);
}

uint64_t sub_1007729F0()
{
  return sub_1007729FC((uint64_t (*)(uint64_t, _QWORD))sub_100777BC0);
}

uint64_t sub_1007729FC(uint64_t (*a1)(uint64_t, _QWORD))
{
  _QWORD *v1;
  uint64_t v2;
  char v3;

  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8))();
  return a1(v2, v3 & 1);
}

uint64_t sub_100772A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 288);
  v3 = swift_retain(v1);
  v4 = v2(v3);
  swift_release(v1);
  return v4;
}

void sub_100772A84(void *a1)
{
  sub_100776700(a1);

}

uint64_t sub_100772AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 312);
  v3 = swift_retain(v1);
  LOBYTE(v2) = v2(v3);
  swift_release(v1);
  return v2 & 1;
}

uint64_t sub_100772AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 336);
  v3 = swift_retain(v1);
  LOBYTE(v2) = v2(v3);
  swift_release(v1);
  return v2 & 1;
}

uint64_t sub_100772B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 360);
  v3 = swift_retain(v1);
  v4 = v2(v3);
  swift_release(v1);
  return v4;
}

double sub_100772B98(uint64_t a1, uint64_t a2)
{
  double result;

  sub_100776E58(a1, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100772BBC(void *a1)
{
  sub_100776C40(a1);

}

uint64_t sub_100772BE0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v13[2];
  uint64_t v14;
  void *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v1);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0;
  v4 = type metadata accessor for CRLBoardItem(0);
  v5 = v0;
  v6 = sub_1004B804C(&qword_1013E5AE8);
  if (swift_dynamicCast(v13, &v15, v4, v6, 6))
  {
    sub_1004DB728(v13, (uint64_t)v16);
    v7 = v17;
    v8 = v18;
    sub_1004BB5A4(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    v9 = type metadata accessor for CRLAssetData(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v3, 1, v9) == 1)
    {
      sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E9BE0);
      v10 = 0;
    }
    else
    {
      v11 = &v3[*(int *)(v9 + 20)];
      v10 = *(_QWORD *)v11;
      swift_bridgeObjectRetain(*((_QWORD *)v11 + 1));
      sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLAssetData);
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  }
  else
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1004CB800((uint64_t)v13, &qword_1013F13D0);
    return 0;
  }
  return v10;
}

uint64_t sub_100772D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 440);
  swift_retain(v3);
  v5 = v4(a1);
  swift_release(v3);
  return v5;
}

uint64_t sub_100772DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  char *v39;
  id v40;
  void *v41;
  os_unfair_lock_s *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(__n128);
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(__n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t v69;
  int64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(_QWORD, _QWORD, _QWORD);
  uint64_t v96;
  unsigned int (*v97)(_QWORD, _QWORD, _QWORD);
  int v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  int v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSString v135;
  NSString v136;
  id v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t, uint64_t);
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _BOOL4 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  void (*v156)(char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  char v159;
  __n128 v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  os_unfair_lock_s *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  __n128 v175;
  uint64_t v176;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  void (*v181)(unint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t inited;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  int v207;
  uint64_t v208;
  int64_t v209;
  __int128 v210;
  uint64_t v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  int64_t v225;
  char *v226;
  char *v227;
  char *v228;
  int v229;
  _BOOL4 v230;
  unsigned int (*v231)(uint64_t, uint64_t, uint64_t);
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  int64_t v243;
  void (*v244)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  _BYTE v252[24];
  uint64_t v253[3];
  uint64_t v254;
  uint64_t v255[3];
  uint64_t v256;
  uint64_t v257;
  char v258[24];
  char v259[40];

  v1 = v0;
  v222 = type metadata accessor for CocoaError.Code(0);
  v215 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v214 = (char *)&v208 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  v233 = *(_QWORD *)(v245 - 8);
  v3 = __chkstk_darwin(v245);
  v221 = (char *)&v208 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v213 = (char *)&v208 - v5;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  v7 = __chkstk_darwin(v6);
  v211 = (uint64_t)&v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v220 = (char *)&v208 - v10;
  v11 = __chkstk_darwin(v9);
  v223 = (char *)&v208 - v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v208 - v13;
  v219 = sub_1004B804C(&qword_1013F13B0);
  __chkstk_darwin(v219);
  v218 = (char *)&v208 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v238 - 8);
  v17 = __chkstk_darwin(v238);
  v241 = (char *)&v208 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v217 = (char *)&v208 - v19;
  v20 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v20);
  v226 = (char *)&v208 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v235 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v228 = (char *)&v208 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = type metadata accessor for UUID(0);
  v248 = *(_QWORD *)(v240 - 8);
  v24 = __chkstk_darwin(v240);
  v224 = (char *)&v208 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v27 = (char *)&v208 - v26;
  v28 = sub_1004B804C(&qword_1013F13B8);
  v29 = __chkstk_darwin(v28);
  v31 = (uint64_t *)((char *)&v208 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  v249 = (uint64_t)&v208 - v32;
  v33 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 16));
  v35 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v36 = *(char **)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  v227 = v14;
  v247 = v27;
  if (v36)
  {
    v37 = v36;
  }
  else
  {
    v38 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v39 = v33;
    v40 = sub_100C7EE84((uint64_t)v39);

    v41 = *(void **)&v33[v35];
    *(_QWORD *)&v33[v35] = v40;
    v37 = (char *)v40;

    v36 = 0;
  }
  v42 = *(os_unfair_lock_s **)(v34 + 16);
  v43 = v36;
  os_unfair_lock_unlock(v42);
  v44 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v45 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v46 = *(uint64_t (**)(__n128))(*(_QWORD *)v45 + 568);
  v47 = swift_retain(v45);
  v48 = v46(v47);
  swift_release(v45);
  v49 = *(_QWORD *)(v1 + v44);
  v50 = *(uint64_t (**)(__n128))(*(_QWORD *)v49 + 576);
  v51 = swift_retain(v49);
  v52 = v50(v51);
  swift_release(v49);
  v53 = sub_10077BE6C(v52, v48);
  v234 = 0;
  v54 = *(_QWORD *)(v53 + 64);
  v216 = v53 + 64;
  v237 = v53;
  v55 = 1 << *(_BYTE *)(v53 + 32);
  v56 = -1;
  if (v55 < 64)
    v56 = ~(-1 << v55);
  v250 = v56 & v54;
  v242 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  v246 = v37;
  v212 = &v37[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL];
  v239 = &v37[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache];
  result = swift_beginAccess(&v37[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache], v259, 0, 0);
  v243 = 0;
  v225 = (unint64_t)(v55 + 63) >> 6;
  v209 = v225 - 1;
  v210 = xmmword_100EF5550;
  v58 = v238;
  v236 = v16;
  v59 = (uint64_t)v228;
  v60 = v240;
  v232 = v31;
  while (v250)
  {
    v61 = __clz(__rbit64(v250));
    v250 &= v250 - 1;
    v62 = v61 | (v243 << 6);
LABEL_10:
    v63 = *(_QWORD *)(v237 + 56);
    v64 = (_QWORD *)(*(_QWORD *)(v237 + 48) + 16 * v62);
    v65 = v64[1];
    *v31 = *v64;
    v31[1] = v65;
    v66 = v63 + *(_QWORD *)(v235 + 72) * v62;
    v67 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
    sub_1004CB7BC(v66, (uint64_t)v31 + *(int *)(v67 + 48), (uint64_t *)&unk_1013E1A50);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v31, 0, 1, v67);
    swift_bridgeObjectRetain(v65);
LABEL_34:
    v73 = v249;
    sub_1004C4938((uint64_t)v31, v249, &qword_1013F13B8);
    v74 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
    v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v73, 1, v74);
    if (v75 == 1)
      goto LABEL_96;
    v76 = v249;
    swift_bridgeObjectRelease(*(_QWORD *)(v249 + 8));
    sub_1004C4938(v76 + *(int *)(v74 + 48), v59, (uint64_t *)&unk_1013E1A50);
    v77 = v248;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v59, 1, v60) == 1)
    {
      result = sub_1004CB800(v59, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v78 = (uint64_t)v247;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v247, v59, v60);
      v79 = *(_QWORD *)&v246[v242];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v79 + 16));
      v80 = v239;
      v81 = *(_QWORD *)v239;
      if (*(_QWORD *)(*(_QWORD *)v239 + 16))
      {
        v82 = v75;
        v83 = v58;
        v84 = v16;
        swift_bridgeObjectRetain(*(_QWORD *)v239);
        v85 = sub_100842EFC(v78);
        v86 = (uint64_t)v227;
        v88 = v233;
        if ((v87 & 1) != 0)
        {
          sub_1004CB7BC(*(_QWORD *)(v81 + 56) + *(_QWORD *)(v233 + 72) * v85, (uint64_t)v227, (uint64_t *)&unk_1013F13A0);
          v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56);
          v90 = v86;
          v91 = 0;
        }
        else
        {
          v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v233 + 56);
          v90 = (uint64_t)v227;
          v91 = 1;
        }
        v93 = v245;
        v244 = v89;
        v89((char *)v90, v91, 1, v245);
        v94 = v81;
        v92 = v93;
        swift_bridgeObjectRelease(v94);
        v16 = v84;
        v58 = v83;
        v75 = v82;
        v31 = v232;
      }
      else
      {
        v88 = v233;
        v86 = (uint64_t)v227;
        v92 = v245;
        v244 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v233 + 56);
        v244(v227, 1, 1, v245);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v79 + 16));
      v95 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v88 + 48);
      if (v95(v86, 1, v92) == 1)
      {
        sub_1004CB800(v86, (uint64_t *)&unk_1013E1700);
      }
      else
      {
        v96 = v16;
        v97 = v95;
        v98 = *(_DWORD *)(v86 + *(int *)(v92 + 48));
        v99 = v86;
        v100 = v218;
        v101 = v219;
        v102 = *(int *)(v219 + 48);
        v103 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 32);
        v103(v218, v99, v238);
        *(_DWORD *)&v100[v102] = v98;
        v104 = *(_DWORD *)&v100[*(int *)(v101 + 48)];
        v105 = v217;
        v106 = v100;
        v58 = v238;
        v103(v217, (uint64_t)v106, v238);
        if ((v104 & 2) != 0)
        {
          if ((v104 & 4) != 0)
          {
            v121 = (uint64_t)v226;
            v103(v226, (uint64_t)v105, v58);
            v120 = 0;
            v16 = v236;
          }
          else
          {
            v16 = v236;
            (*(void (**)(char *, uint64_t))(v236 + 8))(v105, v58);
            v120 = 1;
            v121 = (uint64_t)v226;
          }
          v59 = (uint64_t)v228;
          v60 = v240;
          v191 = v248;
          goto LABEL_95;
        }
        (*(void (**)(char *, uint64_t))(v96 + 8))(v105, v58);
        v107 = v96;
        v80 = v239;
        v95 = v97;
        v16 = v107;
      }
      v108 = *(_QWORD *)&v246[v242];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v108 + 16));
      v109 = *(_QWORD *)v80;
      v110 = (uint64_t)v247;
      if (*(_QWORD *)(*(_QWORD *)v80 + 16))
      {
        v111 = v75;
        v112 = v58;
        v113 = v16;
        swift_bridgeObjectRetain(*(_QWORD *)v80);
        v114 = sub_100842EFC(v110);
        v116 = (uint64_t)v223;
        if ((v115 & 1) != 0)
        {
          sub_1004CB7BC(*(_QWORD *)(v109 + 56) + *(_QWORD *)(v233 + 72) * v114, (uint64_t)v223, (uint64_t *)&unk_1013F13A0);
          v117 = v116;
          v118 = 0;
        }
        else
        {
          v117 = (uint64_t)v223;
          v118 = 1;
        }
        v122 = v245;
        v244((char *)v117, v118, 1, v245);
        v123 = v109;
        v119 = v122;
        swift_bridgeObjectRelease(v123);
        v16 = v113;
        v58 = v112;
        v75 = v111;
      }
      else
      {
        v116 = (uint64_t)v223;
        v119 = v245;
        v244(v223, 1, 1, v245);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v108 + 16));
      v124 = v95(v116, 1, v119);
      v231 = v95;
      if (v124 == 1)
      {
        sub_1004CB800(v116, (uint64_t *)&unk_1013E1700);
        v125 = sub_100C77E98(v110);
        v126 = v125;
        if (v125)
        {
          v128 = *(_QWORD *)(v125 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
          v127 = *(_QWORD *)(v125 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
          swift_bridgeObjectRetain(v127);
          v130 = UUID.uuidString.getter(v129);
          v132 = v131;
          v133 = (uint64_t)v241;
          if (!v127)
            goto LABEL_64;
          v134 = HIBYTE(v127) & 0xF;
          if ((v127 & 0x2000000000000000) == 0)
            v134 = v128 & 0xFFFFFFFFFFFFLL;
          if (v134)
          {
            v135 = String._bridgeToObjectiveC()();
            v136 = String._bridgeToObjectiveC()();
            v137 = objc_msgSend(v135, "stringByAppendingPathExtension:", v136);

            if (v137)
            {
              swift_bridgeObjectRelease(v132);
              v130 = static String._unconditionallyBridgeFromObjectiveC(_:)(v137);
              v132 = v138;

            }
            v139 = 1;
            v133 = (uint64_t)v241;
          }
          else
          {
LABEL_64:
            v139 = 1;
          }
          v146 = (uint64_t)v247;
        }
        else
        {
          v130 = UUID.uuidString.getter(0);
          v132 = v147;
          v127 = 0;
          v146 = v110;
          v139 = 0;
          v133 = (uint64_t)v241;
        }
        URL.appendingPathComponent(_:)(v130, v132);
        swift_bridgeObjectRelease(v132);
        v145 = v246;
        sub_100C76E78(v146, v133, v139);
        swift_release(v126);
        swift_bridgeObjectRelease(v127);
      }
      else
      {
        v140 = *(int *)(v119 + 48);
        v141 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 32);
        v142 = v213;
        v141(v213, v116, v58);
        v139 = *(_DWORD *)(v116 + v140);
        v143 = (uint64_t)v221;
        v144 = v142;
        v145 = v246;
        v141(v221, (uint64_t)v144, v58);
        v141(v241, v143, v58);
      }
      v148 = URL.checkResourceIsReachable()();
      v150 = v149;
      if (v149)
      {
        v151 = swift_errorRetain(v149);
        v152 = v214;
        static CocoaError.fileNoSuchFile.getter(v151);
        v153 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
        v154 = v222;
        v155 = static _ErrorCodeProtocol.~= infix(_:_:)(v152, v150, v222, v153);
        swift_errorRelease(v150);
        v156 = *(void (**)(char *, uint64_t))(v215 + 8);
        v156(v152, v154);
        if ((v155 & 1) == 0)
        {
          v157 = swift_errorRetain(v150);
          static CocoaError.fileReadNoSuchFile.getter(v157);
          v158 = v222;
          v159 = static _ErrorCodeProtocol.~= infix(_:_:)(v152, v150, v222, v153);
          swift_errorRelease(v150);
          v156(v152, v158);
          if ((v159 & 1) == 0)
          {
            swift_willThrow(v160);
            v192 = v150;
            if (qword_1013DD858 != -1)
              swift_once(&qword_1013DD858, sub_100A05554);
            swift_beginAccess(&static OS_os_log.boardStore, v258, 0, 0);
            v193 = (void *)static OS_os_log.boardStore;
            v194 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v194, &v257);
            *(_OWORD *)(inited + 16) = v210;
            v244 = v193;
            v196 = URL.path.getter();
            v198 = v197;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            v199 = sub_1004CFC2C();
            *(_QWORD *)(inited + 64) = v199;
            *(_QWORD *)(inited + 32) = v196;
            *(_QWORD *)(inited + 40) = v198;
            swift_getErrorValue(v192, &v256, v255);
            v200 = Error.publicDescription.getter(v255[1], v255[2]);
            *(_QWORD *)(inited + 96) = &type metadata for String;
            *(_QWORD *)(inited + 104) = v199;
            *(_QWORD *)(inited + 72) = v200;
            *(_QWORD *)(inited + 80) = v201;
            swift_getErrorValue(v192, &v254, v253);
            v202 = Error.fullDescription.getter(v253[1]);
            *(_QWORD *)(inited + 136) = &type metadata for String;
            *(_QWORD *)(inited + 144) = v199;
            *(_QWORD *)(inited + 112) = v202;
            *(_QWORD *)(inited + 120) = v203;
            v204 = static os_log_type_t.error.getter(v202);
            v205 = v244;
            sub_100A06EBC((uint64_t)v244, &_mh_execute_header, v204, "Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
            swift_errorRelease(v192);
            swift_setDeallocating(inited);
            v206 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, 3, v206);

            v234 = 0;
            v16 = v236;
            v59 = (uint64_t)v228;
            v31 = v232;
            v191 = v248;
LABEL_93:
            (*(void (**)(char *, uint64_t))(v16 + 8))(v241, v58);
            v120 = 1;
            v121 = (uint64_t)v226;
            goto LABEL_94;
          }
        }
        v229 = v75;
        v161 = v58;
        swift_errorRelease(v150);
        v230 = 0;
        v234 = 0;
        v162 = 2;
        v163 = (uint64_t)v224;
        v145 = v246;
        if ((v139 & 1) != 0)
LABEL_72:
          v162 |= 1u;
      }
      else
      {
        v229 = v75;
        v230 = v148;
        v161 = v58;
        v234 = 0;
        if (v148)
          v162 = 6;
        else
          v162 = 2;
        v163 = (uint64_t)v224;
        if ((v139 & 1) != 0)
          goto LABEL_72;
      }
      v164 = *(os_unfair_lock_s **)(*(_QWORD *)&v145[v242] + 16);
      os_unfair_lock_lock(v164);
      v165 = v248;
      v166 = v240;
      (*(void (**)(uint64_t, char *, uint64_t))(v248 + 16))(v163, v247, v240);
      v167 = v245;
      v168 = *(int *)(v245 + 48);
      v169 = (uint64_t)v220;
      (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v220, v241, v161);
      *(_DWORD *)(v169 + v168) = v162;
      v244((char *)v169, 0, 1, v167);
      v170 = (uint64_t *)v239;
      swift_beginAccess(v239, v252, 33, 0);
      if (v231(v169, 1, v167) == 1)
      {
        sub_1004CB800(v169, (uint64_t *)&unk_1013E1700);
        v171 = *v170;
        swift_bridgeObjectRetain(*v170);
        v172 = sub_100842EFC(v163);
        v174 = v173;
        v175 = swift_bridgeObjectRelease(v171);
        v176 = v236;
        v75 = v229;
        if ((v174 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v170);
          v178 = *v170;
          v251 = *v170;
          *v170 = 0x8000000000000000;
          v179 = v248;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10082CC74();
            v178 = v251;
          }
          v180 = *(_QWORD *)(v178 + 48) + *(_QWORD *)(v179 + 72) * v172;
          v181 = *(void (**)(unint64_t, uint64_t))(v179 + 8);
          v182 = v240;
          v181(v180, v240);
          v183 = v251;
          v184 = v211;
          sub_1004C4938(*(_QWORD *)(v251 + 56) + *(_QWORD *)(v233 + 72) * v172, v211, (uint64_t *)&unk_1013F13A0);
          sub_10051A120(v172, v183);
          v185 = *v170;
          *v170 = v183;
          v186 = swift_bridgeObjectRelease(v185);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v244)(v184, 0, 1, v245, v186);
        }
        else
        {
          v184 = v211;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v244)(v211, 1, 1, v245, v175);
          v181 = *(void (**)(unint64_t, uint64_t))(v248 + 8);
          v182 = v240;
        }
        v181((unint64_t)v224, v182);
        sub_1004CB800(v184, (uint64_t *)&unk_1013E1700);
        v59 = (uint64_t)v228;
        v16 = v176;
      }
      else
      {
        v187 = (uint64_t)v221;
        sub_1004C4938(v169, (uint64_t)v221, (uint64_t *)&unk_1013F13A0);
        v188 = swift_isUniquelyReferenced_nonNull_native(*v170);
        v251 = *v170;
        *v170 = 0x8000000000000000;
        sub_100825B60(v187, v163, v188);
        v189 = *v170;
        *v170 = v251;
        v190 = swift_bridgeObjectRelease(v189);
        (*(void (**)(uint64_t, uint64_t, __n128))(v165 + 8))(v163, v166, v190);
        v16 = v236;
        v59 = (uint64_t)v228;
        v75 = v229;
      }
      swift_endAccess(v252);
      os_unfair_lock_unlock(v164);
      v58 = v238;
      v191 = v248;
      v31 = v232;
      if (!v230)
        goto LABEL_93;
      v121 = (uint64_t)v226;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v226, v241, v238);
      v120 = 0;
LABEL_94:
      v60 = v240;
LABEL_95:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v121, v120, 1, v58);
      (*(void (**)(char *, uint64_t))(v191 + 8))(v247, v60);
      v207 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v121, 1, v58);
      result = sub_1004CB800(v121, &qword_1013E04D0);
      if (v207 == 1)
      {
LABEL_96:

        swift_release(v237);
        return v75 != 1;
      }
    }
  }
  v68 = v243 + 1;
  if (__OFADD__(v243, 1))
  {
    __break(1u);
    goto LABEL_98;
  }
  if (v68 >= v225)
    goto LABEL_33;
  v69 = *(_QWORD *)(v216 + 8 * v68);
  if (v69)
  {
LABEL_14:
    v250 = (v69 - 1) & v69;
    v62 = __clz(__rbit64(v69)) + (v68 << 6);
    v243 = v68;
    goto LABEL_10;
  }
  v70 = v243 + 2;
  if (v243 + 2 >= v225)
  {
LABEL_32:
    v243 = v68;
    goto LABEL_33;
  }
  v69 = *(_QWORD *)(v216 + 8 * v70);
  if (v69)
  {
LABEL_17:
    v68 = v70;
    goto LABEL_14;
  }
  v71 = v243 + 3;
  if (v243 + 3 >= v225)
    goto LABEL_29;
  v69 = *(_QWORD *)(v216 + 8 * v71);
  if (v69)
  {
LABEL_20:
    v68 = v71;
    goto LABEL_14;
  }
  v70 = v243 + 4;
  if (v243 + 4 >= v225)
  {
    v243 += 3;
    goto LABEL_33;
  }
  v69 = *(_QWORD *)(v216 + 8 * v70);
  if (v69)
    goto LABEL_17;
  v71 = v243 + 5;
  if (v243 + 5 >= v225)
  {
LABEL_29:
    v243 = v70;
LABEL_33:
    v72 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v31, 1, 1, v72);
    v250 = 0;
    goto LABEL_34;
  }
  v69 = *(_QWORD *)(v216 + 8 * v71);
  if (v69)
    goto LABEL_20;
  while (1)
  {
    v68 = v71 + 1;
    if (__OFADD__(v71, 1))
      break;
    if (v68 >= v225)
    {
      v68 = v209;
      goto LABEL_32;
    }
    v69 = *(_QWORD *)(v216 + 8 * v68);
    ++v71;
    if (v69)
      goto LABEL_14;
  }
LABEL_98:
  __break(1u);
  return result;
}

void sub_100773F4C(_QWORD *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  void (*v9)(_QWORD *, __n128);
  __n128 v10;

  v5 = v3;
  sub_100DBEE64(v3, (uint64_t)&off_10127C5E0);
  if (!v4)
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v9 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v8 + 432);
    v10 = swift_retain(*(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
    v9(a1, v10);
    (*(void (**)(_QWORD *))(*(_QWORD *)v8 + 424))(a1);
    sub_1005DAB90(a1[3], a1[4], a1[5], a1[2]);
    swift_release(v8);
    sub_100DB0D78(v5, (uint64_t)&off_10127C5E0, a3);
  }
}

void sub_10077400C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  uint64_t (*v12)(void);
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double width;
  double height;
  void *v25;
  double v26;
  double v27;
  void (*v28)(void);
  id v29;
  void *v30;
  _QWORD v31[4];
  CGSize v32;
  CGSize v33;

  v2 = v1;
  v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xE0);
  v5 = (void *)v4();
  v6 = objc_msgSend(v5, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(v31, v6);
  swift_unknownObjectRelease(v6);
  v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E4C50, off_101229818);
  if ((swift_dynamicCast(&v30, v31, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
  {
    v8 = v30;
    v9 = (*(double (**)(void))((swift_isaMask & *a1) + 0x208))();
    v11 = v10;
    v12 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xE0);
    v13 = (void *)v12();
    objc_msgSend(v13, "size");
    v15 = v14;
    v17 = v16;

    v18 = (void *)v4();
    objc_msgSend(v18, "size");
    v20 = v19;
    v22 = v21;

    v32.width = sub_100062E78(0, v15, v17, v20, v22);
    width = v32.width;
    height = v32.height;
    v33.width = 0.0;
    v33.height = 0.0;
    if (CGSizeEqualToSize(v32, v33))
    {
      v25 = (void *)v12();
      objc_msgSend(v25, "size");
      width = v26;
      height = v27;

    }
    objc_msgSend(v8, "setSize:", width, height);
    objc_msgSend(v8, "setCenter:", v9, v11);
    v28 = *(void (**)(void))((swift_isaMask & *v2) + 0xE8);
    v29 = v8;
    v28();

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 301, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 301, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

double sub_100774294()
{
  _QWORD *v0;
  void *v1;
  double v2;
  double v3;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  objc_msgSend(v1, "center");
  v3 = v2;

  return v3;
}

void sub_1007742F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  CKRecordID v5;
  Swift::String v6;

  if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v5, v6);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else if (a1)
  {
    v3 = type metadata accessor for CRLBoardItem(0);
    v4 = swift_dynamicCastClass(a1, v3);
    if (v4)
    {
      swift_unknownObjectWeakAssign((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem, v4);
      swift_unknownObjectRelease(a1);
    }
    else
    {
      swift_unknownObjectRetain(a1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"parentInfo", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 335, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentInfo", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 335, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_unknownObjectRelease_n(a1, 2);
    }
  }
  else
  {
    swift_unknownObjectWeakAssign((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem, 0);
  }
}

void sub_10077454C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v5 = (void *)objc_opt_self(CRLCanvasLayoutController);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v7 + 32) = v2;
  specialized Array._endMutation()(v7);
  v8 = v2;
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)swift_allocObject(&unk_10127C6E0, 40, 7);
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = v8;
  v14[4] = sub_10077F634;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(_QWORD *)"";
  v14[2] = sub_1004C6194;
  v14[3] = &unk_10127C6F8;
  v11 = _Block_copy(v14);
  v12 = v15;
  v13 = v8;
  swift_retain(a2);
  objc_msgSend(v5, "temporaryLayoutControllerForInfos:useInBlock:", isa, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);

}

__n128 sub_100774698@<Q0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  _QWORD *v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];

  v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0))();
  if (objc_msgSend(v3, "widthValid") && (objc_msgSend(v3, "heightValid") & 1) != 0)
  {
    objc_msgSend(v3, "fullTransform");
    v7 = v9[1];
    v8 = v9[0];
    v6 = (__n128)v9[2];

  }
  else
  {
    v4 = (_QWORD *)swift_allocObject(&unk_10127C690, 64, 7);
    v4[2] = 0x3FF0000000000000;
    v4[3] = 0;
    v4[4] = 0;
    v4[6] = 0;
    v4[7] = 0;
    v4[5] = 0x3FF0000000000000;
    swift_retain(v4);
    sub_10077454C((uint64_t)sub_10077F5CC, (uint64_t)v4);
    swift_release(v4);
    swift_beginAccess(v4 + 2, v9, 0, 0);
    v7 = *((_OWORD *)v4 + 2);
    v8 = *((_OWORD *)v4 + 1);
    v6 = *((__n128 *)v4 + 3);

    swift_release(v4);
  }
  *a1 = v8;
  a1[1] = v7;
  result = v6;
  a1[2] = v6;
  return result;
}

void sub_1007747D4(CGFloat *a1@<X8>)
{
  void *v1;
  _QWORD *v3;
  double d;
  CGFloat ty;
  CGFloat tx;
  CGFloat c;
  CGFloat b;
  double a;
  uint64_t (*v10)(void);
  _QWORD *v11;
  void *v12;
  void *Strong;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  CGAffineTransform v18;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v3 = v1;
  d = 1.0;
  ty = 0.0;
  tx = 0.0;
  c = 0.0;
  b = 0.0;
  a = 1.0;
  while (1)
  {
    v10 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE0);
    v11 = v3;
    v12 = (void *)v10();
    objc_msgSend(v12, "transform");
    v16 = *(_OWORD *)&t1.c;
    v17 = *(_OWORD *)&t1.a;
    v15 = *(_OWORD *)&t1.tx;

    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    *(_OWORD *)&t2.a = v17;
    *(_OWORD *)&t2.c = v16;
    *(_OWORD *)&t2.tx = v15;
    CGAffineTransformConcat(&v18, &t1, &t2);
    a = v18.a;
    b = v18.b;
    c = v18.c;
    d = v18.d;
    tx = v18.tx;
    ty = v18.ty;
    Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v11 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);

    if (!Strong)
      break;

    v14 = type metadata accessor for CRLBoardItem(0);
    v3 = (_QWORD *)swift_dynamicCastClass(Strong, v14);
    if (!v3)
      goto LABEL_6;
  }
  Strong = v11;
LABEL_6:

  *a1 = a;
  a1[1] = b;
  a1[2] = c;
  a1[3] = d;
  a1[4] = tx;
  a1[5] = ty;
}

void sub_100774920(CGFloat *a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  void *Strong;
  _QWORD *v11;
  void *v12;
  double v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double v18;
  uint64_t (*v19)(void);
  _QWORD *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  CGAffineTransform v31;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0))();
  objc_msgSend(v3, "fullTransform");
  a = t1.a;
  b = t1.b;
  c = t1.c;
  d = t1.d;
  tx = t1.tx;
  ty = t1.ty;

  Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v24 = t1.d;
    v25 = t1.c;
    v26 = t1.b;
    v27 = t1.a;
    v11 = Strong;
    v12 = v11;
    v13 = 1.0;
    v14 = 0.0;
    v15 = 0.0;
    v16 = 0.0;
    v17 = 0.0;
    v18 = 1.0;
    while (1)
    {
      v19 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0xE0);
      v20 = v11;
      v21 = (void *)v19();
      objc_msgSend(v21, "transform");
      v29 = *(_OWORD *)&t1.c;
      v30 = *(_OWORD *)&t1.a;
      v28 = *(_OWORD *)&t1.tx;

      t1.a = v18;
      t1.b = v17;
      t1.c = v16;
      t1.d = v13;
      t1.tx = v15;
      t1.ty = v14;
      *(_OWORD *)&t2.a = v30;
      *(_OWORD *)&t2.c = v29;
      *(_OWORD *)&t2.tx = v28;
      CGAffineTransformConcat(&v31, &t1, &t2);
      v18 = v31.a;
      v17 = v31.b;
      v16 = v31.c;
      v13 = v31.d;
      v15 = v31.tx;
      v14 = v31.ty;
      v22 = (void *)swift_unknownObjectWeakLoadStrong((char *)v20 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);

      if (!v22)
        break;

      v23 = type metadata accessor for CRLBoardItem(0);
      v11 = (_QWORD *)swift_dynamicCastClass(v22, v23);
      if (!v11)
        goto LABEL_7;
    }
    v22 = v20;
LABEL_7:

    t1.a = v27;
    t1.b = v26;
    t1.c = v25;
    t1.d = v24;
    t1.tx = tx;
    t1.ty = ty;
    t2.a = v18;
    t2.b = v17;
    t2.c = v16;
    t2.d = v13;
    t2.tx = v15;
    t2.ty = v14;
    CGAffineTransformConcat(&v31, &t1, &t2);
    a = v31.a;
    b = v31.b;
    c = v31.c;
    d = v31.d;
    tx = v31.tx;
    ty = v31.ty;

  }
  *a1 = a;
  a1[1] = b;
  a1[2] = c;
  a1[3] = d;
  a1[4] = tx;
  a1[5] = ty;
}

_QWORD *sub_100774B10()
{
  uint64_t v0;
  _QWORD *result;
  void *v2;
  uint64_t v3;

  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (result)
  {
    v2 = result;
    v3 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0x2E8))();

    return (_QWORD *)v3;
  }
  return result;
}

_QWORD *sub_100774B68()
{
  uint64_t v0;
  _QWORD *result;
  void *v2;
  char v3;

  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (result)
  {
    v2 = result;
    v3 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0x2F0))();

    return (_QWORD *)(v3 & 1);
  }
  return result;
}

uint64_t sub_100774BC0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, _UNKNOWN **, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(__n128);
  __n128 v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  void (*v27)(__n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t result;
  CKRecordID v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardItemBase(0);
  v9 = swift_dynamicCastClass(a1, v8);
  if (v9)
  {
    v10 = v9;
    v11 = *(uint64_t (**)(uint64_t, _UNKNOWN **, __n128))((swift_isaMask & *v2) + 0x3D0);
    v12 = swift_unknownObjectRetain(a1);
    v13 = v11(v10, &off_10127C5E0, v12);
    v14 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v15 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v16 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v17 = *(uint64_t (**)(__n128))(*(_QWORD *)v15 + 544);
    swift_retain(v15);
    v18 = swift_retain(v16);
    v19 = (_QWORD *)v17(v18);
    swift_release(v15);
    swift_release(v16);
    v20 = *(_QWORD *)(*(_QWORD *)((char *)v2 + v14) + 24);
    LODWORD(v20) = sub_1001E9730() < v20;
    v21 = *(_QWORD *)(*(_QWORD *)(v10 + v14) + 24);
    if (((v20 ^ (sub_1001E9730() >= v21)) & 1) != 0)
    {
      if (!v19[2])
      {
        swift_bridgeObjectRelease();
LABEL_11:
        v26 = *(_QWORD *)((char *)v2 + v14);
        v27 = *(void (**)(__n128))(*(_QWORD *)v26 + 256);
        v28 = swift_retain(v26);
        v27(v28);
        swift_release(v26);
        v29 = type metadata accessor for CRLTransactableObservableDeltas(0);
        v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v30 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_id, v7, v4);
        *(_QWORD *)(v30 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys) = v13;
        v31 = (uint64_t *)(v30 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot);
        *v31 = v10;
        v31[1] = (uint64_t)&off_10127C5E0;
        return v30;
      }
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        v19 = sub_100D0EF94(0, v19[2] + 1, 1, v19);
      v23 = v19[2];
      v22 = v19[3];
      if (v23 >= v22 >> 1)
        v19 = sub_100D0EF94((_QWORD *)(v22 > 1), v23 + 1, 1, v19);
      v19[2] = v23 + 1;
      v24 = &v19[2 * v23];
      v24[4] = 0x6574726F70707573;
      v24[5] = 0xE900000000000064;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
    v36 = v13;
    sub_100825A20((uint64_t)v19, 0, isUniquelyReferenced_nonNull_native);
    v13 = v36;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 812, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 812, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v33, v34);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

double *sub_100774F44()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(__n128);
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  objc_class *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double *v26;
  double *v27;
  id v28;
  char *v29;
  double *v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  double *v34;
  _BYTE v37[24];
  _BYTE v38[32];
  _QWORD v39[4];
  objc_super v40;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v10 = *(void (**)(__n128))(*(_QWORD *)v9 + 264);
  v11 = swift_retain(v9);
  v10(v11);
  v12 = swift_release(v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v12) == 1)
  {
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E1A50);
LABEL_16:
    v30 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v13 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
  v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x2E8))(v13);
  if (!v14
    || (v15 = (void *)v14,
        isa = UUID._bridgeToObjectiveC()().super.isa,
        v17 = objc_msgSend(v15, "getBoardItemForUUID:", isa),
        v15,
        isa,
        !v17))
  {
LABEL_15:
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_16;
  }
  v18 = type metadata accessor for CRLContainerItem(0);
  v19 = swift_dynamicCastClass(v17, v18);
  if (!v19)
  {

    goto LABEL_15;
  }
  v20 = v19;
  v21 = sub_1008E01A8((uint64_t)_swiftEmptyArrayStorage);
  v22 = (objc_class *)type metadata accessor for CRLPropertyMap();
  v23 = (char *)objc_allocWithZone(v22);
  *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v21;
  v40.receiver = v23;
  v40.super_class = v22;
  v24 = (char *)objc_msgSendSuper2(&v40, "init");
  v25 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
  v26 = *(double **)(v20 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  if (!v26)
  {
    sub_100740DA4();
    v26 = *(double **)(v20 + v25);
  }
  if (v26)
    v27 = v26;
  else
    v27 = _swiftEmptyArrayStorage;
  v39[3] = sub_1004B804C(&qword_1013F0310);
  v39[0] = v27;
  sub_1004CB7BC((uint64_t)v39, (uint64_t)v38, &qword_1013E0230);
  swift_beginAccess(&v24[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v37, 33, 0);
  swift_bridgeObjectRetain(v26);
  sub_10083DAD8((uint64_t)v38, 4uLL);
  swift_endAccess(v37);
  sub_1004CB800((uint64_t)v39, &qword_1013E0230);
  v28 = v17;
  v29 = v24;
  v30 = sub_100D0F654(0, 1, 1, _swiftEmptyArrayStorage);
  v32 = *((_QWORD *)v30 + 2);
  v31 = *((_QWORD *)v30 + 3);
  if (v32 >= v31 >> 1)
    v30 = sub_100D0F654((double *)(v31 > 1), v32 + 1, 1, v30);
  *((_QWORD *)v30 + 2) = v32 + 1;
  v33 = &v30[2 * v32];
  *((_QWORD *)v33 + 4) = v20;
  *((_QWORD *)v33 + 5) = v29;

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
LABEL_17:
  v34 = sub_100520960((uint64_t)v30);
  swift_bridgeObjectRelease();
  return v34;
}

void sub_10077527C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[8];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v22 = a3;
  v21 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v20[7] = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v20[6] = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v5);
  v20[5] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v23 = (char *)v20 - v10;
  v27 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v27);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  v25 = (char *)v20 - v13;
  __chkstk_darwin(v14);
  v24 = (char *)v20 - v15;
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v28 = (char *)v20 - v18;
  v26 = v19;
  __asm { BR              X10 }
}

double *sub_1007754F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  void (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  Class isa;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  objc_class *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  double *v45;
  double *v46;
  char *v47;
  id v48;
  char *v49;
  double *v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  double *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(__n128);
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  Class v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(__n128);
  __n128 v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  unint64_t v89;
  objc_class *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  double *v95;
  double *v96;
  char *v97;
  double *v98;
  unint64_t v99;
  unint64_t v100;
  double *v101;
  double *v102;

  swift_bridgeObjectRelease();
  v8 = type metadata accessor for CRLBoardItemBase(0);
  v9 = swift_dynamicCastClass(*(_QWORD *)(v7 - 320), v8);
  if (!v9)
    return _swiftEmptyArrayStorage;
  v10 = v1;
  v11 = *(_QWORD *)(v1 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (!v11)
    goto LABEL_58;
  v13 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  *(_QWORD *)(v7 - 224) = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v14 = *(_QWORD *)(v9 + v13);
  swift_unknownObjectRetain(*(_QWORD *)(v7 - 320));
  *(_QWORD *)(v7 - 240) = v14;
  swift_retain(v14);
  swift_bridgeObjectRetain(v10);
  *(_QWORD *)(v7 - 392) = v10;
  v15 = (uint64_t *)(v10 + 40);
  *(_QWORD *)(v7 - 328) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v7 - 280) = v6;
  *(_QWORD *)(v7 - 312) = v3;
  *(_QWORD *)(v7 - 304) = v0;
  *(_QWORD *)(v7 - 232) = v4;
  do
  {
    v17 = *(v15 - 1);
    v18 = *v15;
    v19 = v17 == 0x6641746E65726170 && v18 == 0xEE007974696E6966;
    if (v19
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0x6641746E65726170, 0xEE007974696E6966, 0) & 1) != 0)
    {
      v20 = *(_QWORD *)(v7 - 248);
      v21 = *(void (**)(void))(**(_QWORD **)(v7 - 240) + 264);
      v21();
      v22 = *(_QWORD *)((char *)v4 + *(_QWORD *)(v7 - 224));
      v23 = *(void (**)(__n128))(*(_QWORD *)v22 + 264);
      v24 = swift_retain(v22);
      v23(v24);
      swift_release(v22);
      v25 = v2 + *(int *)(*(_QWORD *)(v7 - 256) + 48);
      sub_1004CB7BC(v20, v2, (uint64_t *)&unk_1013E1A50);
      sub_1004CB7BC(v6, v25, (uint64_t *)&unk_1013E1A50);
      v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 48);
      if (v26(v2, 1, v5) == 1)
      {
        sub_1004CB800(v6, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v20, (uint64_t *)&unk_1013E1A50);
        v27 = v26(v25, 1, v5);
        v4 = *(_QWORD **)(v7 - 232);
        if (v27 == 1)
        {
          v16 = v2;
          goto LABEL_5;
        }
      }
      else
      {
        v28 = *(_QWORD *)(v7 - 288);
        sub_1004CB7BC(v2, v28, (uint64_t *)&unk_1013E1A50);
        if (v26(v25, 1, v5) != 1)
        {
          v55 = v28;
          v56 = *(_QWORD *)(v7 - 216);
          v57 = *(_QWORD *)(v7 - 296);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v57, v25, v5);
          sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v58 = dispatch thunk of static Equatable.== infix(_:_:)(v55, v57);
          v59 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
          v59(v57, v5);
          sub_1004CB800(*(_QWORD *)(v7 - 280), (uint64_t *)&unk_1013E1A50);
          sub_1004CB800(*(_QWORD *)(v7 - 248), (uint64_t *)&unk_1013E1A50);
          v60 = v55;
          v6 = *(_QWORD *)(v7 - 280);
          v59(v60, v5);
          v29 = sub_1004CB800(v2, (uint64_t *)&unk_1013E1A50);
          v4 = *(_QWORD **)(v7 - 232);
          if ((v58 & 1) != 0)
            goto LABEL_6;
LABEL_18:
          v30 = *(_QWORD *)(v7 - 272);
          ((void (*)(uint64_t))v21)(v29);
          v31 = v30;
          if (v26(v30, 1, v5) == 1)
          {
            sub_1004CB800(v30, (uint64_t *)&unk_1013E1A50);
            goto LABEL_38;
          }
          v32 = *(_QWORD *)(v7 - 304);
          v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 32))(v32, v31, v5);
          v34 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x2E8))(v33);
          if (v34)
          {
            v35 = (void *)v34;
            isa = UUID._bridgeToObjectiveC()().super.isa;
            v37 = objc_msgSend(v35, "getBoardItemForUUID:", isa);

            if (v37)
            {
              v38 = type metadata accessor for CRLContainerItem(0);
              v39 = swift_dynamicCastClass(v37, v38);
              if (v39)
              {
                *(_QWORD *)(v7 - 368) = v39;
                v40 = sub_1008E01A8((uint64_t)_swiftEmptyArrayStorage);
                v41 = (objc_class *)type metadata accessor for CRLPropertyMap();
                v42 = (char *)objc_allocWithZone(v41);
                v43 = *(_QWORD *)(v7 - 368);
                *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v40;
                *(_QWORD *)(v7 - 208) = v42;
                *(_QWORD *)(v7 - 200) = v41;
                *(_QWORD *)(v7 - 376) = objc_msgSendSuper2((objc_super *)(v7 - 208), "init");
                v44 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
                v45 = *(double **)(v43 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
                if (!v45)
                {
                  sub_100740DA4();
                  v45 = *(double **)(v43 + v44);
                }
                if (v45)
                  v46 = v45;
                else
                  v46 = _swiftEmptyArrayStorage;
                *(_QWORD *)(v7 - 112) = sub_1004B804C(&qword_1013F0310);
                *(_QWORD *)(v7 - 136) = v46;
                sub_1004CB7BC(v7 - 136, v7 - 168, &qword_1013E0230);
                v47 = *(char **)(v7 - 376);
                swift_beginAccess(&v47[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v7 - 192, 33, 0);
                swift_bridgeObjectRetain(v45);
                sub_10083DAD8(v7 - 168, 4uLL);
                swift_endAccess(v7 - 192);
                sub_1004CB800(v7 - 136, &qword_1013E0230);
                v48 = v37;
                v49 = v47;
                v50 = *(double **)(v7 - 328);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v50);
                *(_QWORD *)(v7 - 384) = v48;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  v50 = sub_100D0F654(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
                v6 = *(_QWORD *)(v7 - 280);
                v53 = *((_QWORD *)v50 + 2);
                v52 = *((_QWORD *)v50 + 3);
                if (v53 >= v52 >> 1)
                  v50 = sub_100D0F654((double *)(v52 > 1), v53 + 1, 1, v50);
                *((_QWORD *)v50 + 2) = v53 + 1;
                *(_QWORD *)(v7 - 328) = v50;
                v54 = &v50[2 * v53];
                v54[4] = *(double *)(v7 - 368);
                *((_QWORD *)v54 + 5) = v49;

                (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 216) + 8))(*(_QWORD *)(v7 - 304), v5);
                goto LABEL_37;
              }

              v32 = *(_QWORD *)(v7 - 304);
            }
          }
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 8))(v32, v5);
LABEL_37:
          v4 = *(_QWORD **)(v7 - 232);
LABEL_38:
          v61 = *(_QWORD *)((char *)v4 + *(_QWORD *)(v7 - 224));
          v62 = *(void (**)(__n128))(*(_QWORD *)v61 + 264);
          v63 = swift_retain(v61);
          v64 = *(_QWORD *)(v7 - 264);
          v62(v63);
          v65 = swift_release(v61);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v26)(v64, 1, v5, v65) == 1)
          {
            v16 = v64;
LABEL_5:
            sub_1004CB800(v16, (uint64_t *)&unk_1013E1A50);
            goto LABEL_6;
          }
          v66 = *(_QWORD *)(v7 - 312);
          v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 32))(v66, v64, v5);
          v68 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x2E8))(v67);
          if (v68)
          {
            v69 = (void *)v68;
            v70 = UUID._bridgeToObjectiveC()().super.isa;
            v71 = objc_msgSend(v69, "getBoardItemForUUID:", v70);

            if (v71)
            {
              v72 = type metadata accessor for CRLContainerItem(0);
              v73 = swift_dynamicCastClass(v71, v72);
              if (v73)
              {
                v74 = v73;
                *(_QWORD *)(v7 - 368) = v71;
                v75 = *(_QWORD *)(v73 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
                v76 = type metadata accessor for CRLContainerItemData(0);
                v77 = swift_dynamicCastClassUnconditional(v75, v76, 0, 0, 0);
                v78 = *(_QWORD *)(v7 - 360);
                (*(void (**)(void))(*(_QWORD *)v77 + 680))();
                v79 = *(_QWORD *)(v7 - 344);
                v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16);
                v81 = v78;
                v82 = *(_QWORD *)(v7 - 352);
                *(_QWORD *)(v7 - 376) = v74;
                v83 = *(_QWORD *)(v7 - 336);
                v80(v82, v81, v83);
                sub_1004B84A4(v81, type metadata accessor for CRLContainerItemCRDTData);
                v84 = *(_QWORD *)(*(_QWORD *)(v7 - 232) + *(_QWORD *)(v7 - 224));
                v85 = *(void (**)(__n128))(*(_QWORD *)v84 + 256);
                v86 = swift_retain(v84);
                v87 = *(_QWORD *)(v7 - 296);
                v85(v86);
                swift_release(v84);
                LOBYTE(v84) = CROrderedSet.contains(_:)(v87, v83);
                v88 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 8);
                v88(v87, v5);
                (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v82, v83);
                if ((v84 & 1) != 0)
                {
                  v88(*(_QWORD *)(v7 - 312), v5);

                  v4 = *(_QWORD **)(v7 - 232);
                  v6 = *(_QWORD *)(v7 - 280);
                  goto LABEL_6;
                }
                *(_QWORD *)(v7 - 384) = v88;
                v89 = sub_1008E01A8((uint64_t)_swiftEmptyArrayStorage);
                v90 = (objc_class *)type metadata accessor for CRLPropertyMap();
                v91 = (char *)objc_allocWithZone(v90);
                *(_QWORD *)&v91[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v89;
                *(_QWORD *)(v7 - 104) = v91;
                *(_QWORD *)(v7 - 96) = v90;
                v92 = (char *)objc_msgSendSuper2((objc_super *)(v7 - 104), "init");
                v93 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
                v94 = *(_QWORD *)(v7 - 376);
                v95 = *(double **)(v94 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
                v6 = *(_QWORD *)(v7 - 280);
                if (!v95)
                {
                  sub_100740DA4();
                  v95 = *(double **)(v94 + v93);
                }
                if (v95)
                  v96 = v95;
                else
                  v96 = _swiftEmptyArrayStorage;
                *(_QWORD *)(v7 - 112) = sub_1004B804C(&qword_1013F0310);
                *(_QWORD *)(v7 - 136) = v96;
                sub_1004CB7BC(v7 - 136, v7 - 168, &qword_1013E0230);
                swift_beginAccess(&v92[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v7 - 192, 33, 0);
                swift_bridgeObjectRetain(v95);
                sub_10083DAD8(v7 - 168, 4uLL);
                swift_endAccess(v7 - 192);
                sub_1004CB800(v7 - 136, &qword_1013E0230);
                *(_QWORD *)(v7 - 368) = *(id *)(v7 - 368);
                v97 = v92;
                v98 = *(double **)(v7 - 328);
                if ((swift_isUniquelyReferenced_nonNull_native(v98) & 1) == 0)
                  v98 = sub_100D0F654(0, *((_QWORD *)v98 + 2) + 1, 1, v98);
                v100 = *((_QWORD *)v98 + 2);
                v99 = *((_QWORD *)v98 + 3);
                if (v100 >= v99 >> 1)
                  v98 = sub_100D0F654((double *)(v99 > 1), v100 + 1, 1, v98);
                *((_QWORD *)v98 + 2) = v100 + 1;
                *(_QWORD *)(v7 - 328) = v98;
                v101 = &v98[2 * v100];
                *((_QWORD *)v101 + 4) = v94;
                *((_QWORD *)v101 + 5) = v97;

                (*(void (**)(_QWORD, uint64_t))(v7 - 384))(*(_QWORD *)(v7 - 312), v5);
                goto LABEL_46;
              }

            }
          }
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 8))(v66, v5);
LABEL_46:
          v4 = *(_QWORD **)(v7 - 232);
          goto LABEL_6;
        }
        sub_1004CB800(v6, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(*(_QWORD *)(v7 - 248), (uint64_t *)&unk_1013E1A50);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 8))(v28, v5);
        v4 = *(_QWORD **)(v7 - 232);
      }
      v29 = sub_1004CB800(v2, (uint64_t *)&unk_1013F62D0);
      goto LABEL_18;
    }
LABEL_6:
    v15 += 2;
    --v11;
  }
  while (v11);
  swift_unknownObjectRelease(*(_QWORD *)(v7 - 320));
  swift_release(*(_QWORD *)(v7 - 240));
  swift_bridgeObjectRelease();
  v12 = *(double **)(v7 - 328);
LABEL_58:
  v102 = sub_100520960((uint64_t)v12);
  swift_bridgeObjectRelease();
  return v102;
}

double *sub_10077603C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(__n128);
  __n128 v14;
  __n128 v15;
  uint64_t ObjectType;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  objc_class *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  double *v28;
  double *v29;
  char *v30;
  double *v31;
  unint64_t v32;
  unint64_t v33;
  double *v34;
  double *v35;
  _BYTE v38[24];
  _BYTE v39[32];
  _QWORD v40[4];
  objc_super v41;

  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v13 = *(void (**)(__n128))(*(_QWORD *)v12 + 264);
  v14 = swift_retain(v12);
  v13(v14);
  v15 = swift_release(v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v15) == 1)
  {
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E1A50);
LABEL_15:
    v31 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
  ObjectType = swift_getObjectType(a1);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a2 + 16))(v11, ObjectType, a2);
  if (!v17)
  {
LABEL_14:
    (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
    goto LABEL_15;
  }
  v19 = v17;
  v20 = type metadata accessor for CRLContainerItem(0);
  v21 = swift_dynamicCastClass(v19, v20);
  if (!v21)
  {
    v18 = swift_unknownObjectRelease(v19);
    goto LABEL_14;
  }
  v22 = v21;
  v23 = sub_1008E01A8((uint64_t)_swiftEmptyArrayStorage);
  v24 = (objc_class *)type metadata accessor for CRLPropertyMap();
  v25 = (char *)objc_allocWithZone(v24);
  *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v23;
  v41.receiver = v25;
  v41.super_class = v24;
  v26 = (char *)objc_msgSendSuper2(&v41, "init");
  v27 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
  v28 = *(double **)(v22 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  if (!v28)
  {
    sub_100740DA4();
    v28 = *(double **)(v22 + v27);
  }
  if (v28)
    v29 = v28;
  else
    v29 = _swiftEmptyArrayStorage;
  v40[3] = sub_1004B804C(&qword_1013F0310);
  v40[0] = v29;
  sub_1004CB7BC((uint64_t)v40, (uint64_t)v39, &qword_1013E0230);
  swift_beginAccess(&v26[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v38, 33, 0);
  swift_bridgeObjectRetain(v28);
  sub_10083DAD8((uint64_t)v39, 4uLL);
  swift_endAccess(v38);
  sub_1004CB800((uint64_t)v40, &qword_1013E0230);
  swift_unknownObjectRetain(v19);
  v30 = v26;
  v31 = sub_100D0F654(0, 1, 1, _swiftEmptyArrayStorage);
  v33 = *((_QWORD *)v31 + 2);
  v32 = *((_QWORD *)v31 + 3);
  if (v33 >= v32 >> 1)
    v31 = sub_100D0F654((double *)(v32 > 1), v33 + 1, 1, v31);
  *((_QWORD *)v31 + 2) = v33 + 1;
  v34 = &v31[2 * v33];
  *((_QWORD *)v34 + 4) = v22;
  *((_QWORD *)v34 + 5) = v30;
  swift_unknownObjectRelease(v19);

  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
LABEL_16:
  v35 = sub_100520960((uint64_t)v31);
  swift_bridgeObjectRelease();
  return v35;
}

double sub_100776348()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v1);
  sub_1005E1074();
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10077637C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
}

double *sub_1007763B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  unint64_t v17;
  unint64_t v18;
  double *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double *v27;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 360);
  v5 = swift_retain(v3);
  v6 = v4(v5);
  v8 = v7;
  swift_release(v3);
  swift_bridgeObjectRelease();
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    v10 = *(_QWORD *)(v1 + v2);
    v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 360);
    v12 = swift_retain(v10);
    v13 = v11(v12);
    v15 = v14;
    swift_release(v10);
    v16 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
    v18 = *((_QWORD *)v16 + 2);
    v17 = *((_QWORD *)v16 + 3);
    if (v18 >= v17 >> 1)
      v16 = (double *)sub_100D0EF94((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18 + 1;
    v19 = &v16[2 * v18];
    *((_QWORD *)v19 + 4) = v13;
    *((_QWORD *)v19 + 5) = v15;
  }
  else
  {
    v16 = _swiftEmptyArrayStorage;
  }
  v20 = sub_100772BE0();
  if (v21)
  {
    v22 = v20;
    v23 = v21;
    v24 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v24 = v20 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (double *)sub_100D0EF94(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      v26 = *((_QWORD *)v16 + 2);
      v25 = *((_QWORD *)v16 + 3);
      if (v26 >= v25 >> 1)
        v16 = (double *)sub_100D0EF94((_QWORD *)(v25 > 1), v26 + 1, 1, v16);
      *((_QWORD *)v16 + 2) = v26 + 1;
      v27 = &v16[2 * v26];
      *((_QWORD *)v27 + 4) = v22;
      *((_QWORD *)v27 + 5) = v23;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v16;
}

uint64_t sub_100776558(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(__n128);
  __n128 v16;
  char v17;
  uint64_t v19;
  char *v20;
  _QWORD v21[3];
  uint64_t v22;

  sub_1004CB7BC(a1, (uint64_t)v21, &qword_1013E0230);
  v3 = v22;
  if (v22)
  {
    v4 = sub_1004BB5A4(v21, v22);
    v5 = *(_QWORD *)(v3 - 8);
    v6 = __chkstk_darwin(v4);
    v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    v9 = _bridgeAnythingToObjectiveC<A>(_:)(v8, v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(v1, "isEqual:", v9);
  swift_unknownObjectRelease(v9);
  if (!v10)
    goto LABEL_9;
  sub_1004CB7BC(a1, (uint64_t)v21, &qword_1013E0230);
  if (!v22)
  {
    sub_1004CB800((uint64_t)v21, &qword_1013E0230);
    goto LABEL_9;
  }
  v11 = type metadata accessor for CRLBoardItemBase(0);
  if ((swift_dynamicCast(&v20, v21, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
  {
LABEL_9:
    v17 = 0;
    return v17 & 1;
  }
  v12 = v20;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v14 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v15 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 448);
  swift_retain(v13);
  v16 = swift_retain(v14);
  v17 = v15(v16);

  swift_release(v13);
  swift_release(v14);
  return v17 & 1;
}

void sub_100776700(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  void *v8;
  uint64_t v9;
  void (*v10)(void *);
  CKRecordID v11;
  Swift::String v12;

  v2 = v1;
  if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v5 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v6 = *(uint64_t (**)(__n128))(*(_QWORD *)v5 + 288);
    v7 = swift_retain(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
    v8 = (void *)v6(v7);
    swift_release(v5);
    sub_1004B8930(0, (unint64_t *)&qword_1013F1360, off_101229800);
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v8, a1);

    if ((v5 & 1) == 0)
    {
      v9 = *(_QWORD *)((char *)v2 + v4);
      v10 = *(void (**)(void *))(*(_QWORD *)v9 + 296);
      swift_retain(v9);
      v10(a1);
      swift_release(v9);
    }
  }
}

void sub_1007768D8(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, __n128);
  __n128 v11;
  CKRecordID v12;
  Swift::String v13;

  v2 = v1;
  if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v5 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v6 = *(uint64_t (**)(__n128))(*(_QWORD *)v5 + 312);
    v7 = swift_retain(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
    LODWORD(v6) = v6(v7) & 1;
    swift_release(v5);
    v8 = a1 & 1;
    if ((_DWORD)v6 != (_DWORD)v8)
    {
      v9 = *(_QWORD *)((char *)v2 + v4);
      v10 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v9 + 320);
      v11 = swift_retain(v9);
      v10(v8, v11);
      swift_release(v9);
    }
  }
}

void sub_100776A8C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, __n128);
  __n128 v11;
  CKRecordID v12;
  Swift::String v13;

  v2 = v1;
  if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v5 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v6 = *(uint64_t (**)(__n128))(*(_QWORD *)v5 + 336);
    v7 = swift_retain(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
    LODWORD(v6) = v6(v7) & 1;
    swift_release(v5);
    v8 = a1 & 1;
    if ((_DWORD)v6 != (_DWORD)v8)
    {
      v9 = *(_QWORD *)((char *)v2 + v4);
      v10 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v9 + 344);
      v11 = swift_retain(v9);
      v10(v8, v11);
      swift_release(v9);
    }
  }
}

void sub_100776C40(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;
  void (*v13)(void *, __n128);
  id v14;
  __n128 v15;
  CKRecordID v16;
  Swift::String v17;

  v2 = v1;
  if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v5 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v6 = *(uint64_t (**)(__n128))(*(_QWORD *)v5 + 384);
  v7 = swift_retain(v5);
  v8 = (void *)v6(v7);
  swift_release(v5);
  if (!v8)
  {
    if (!a1)
      return;
LABEL_10:
    v12 = *(_QWORD *)((char *)v2 + v4);
    v13 = *(void (**)(void *, __n128))(*(_QWORD *)v12 + 392);
    v14 = a1;
    v15 = swift_retain(v12);
    v13(a1, v15);
    swift_release(v12);
    return;
  }
  if (!a1)
  {

    goto LABEL_10;
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013F1390, off_1012299A8);
  v9 = a1;
  v10 = v8;
  v11 = static NSObject.== infix(_:_:)(v10, v9);

  if ((v11 & 1) == 0)
    goto LABEL_10;
}

void sub_100776E58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  CKRecordID v18;
  Swift::String v19;

  v3 = v2;
  if (!*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x2F0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, v19);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v7 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 360);
    v9 = swift_retain(v7);
    v10 = v8(v9);
    v12 = v11;
    swift_release(v7);
    if (v10 == a1 && v12 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, a1, a2, 0);
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        v15 = *(_QWORD *)((char *)v3 + v6);
        v16 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)v15 + 368);
        swift_retain(v15);
        v17 = swift_bridgeObjectRetain(a2);
        v16(a1, a2, v17);
        swift_release(v15);
      }
    }
  }
}

uint64_t sub_100777074(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType(a1);
  return sub_10077C4F0(a1, v1);
}

_QWORD *sub_1007770B0(uint64_t a1)
{
  swift_getObjectType(a1);
  return sub_10077DC78(a1);
}

void sub_1007770E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(__n128);
  __n128 v16;
  void (*v17)(char *, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  _BYTE *v23;
  __n128 v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[32];
  uint64_t v37;

  v3 = v2;
  v4 = v1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v30 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v30 - v12, a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v6, v11);
  v37 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v15 = *(void (**)(__n128))(*(_QWORD *)v14 + 256);
  v16 = swift_retain(v14);
  v15(v16);
  swift_release(v14);
  LOBYTE(v14) = static UUID.== infix(_:_:)(v13);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  v17(v13, v6);
  if ((v14 & 1) == 0)
  {
    v22 = sub_10077F578();
    swift_allocError(&type metadata for CRLTransactableError, v22, 0, 0);
    *v23 = 3;
    swift_willThrow(v24);
    return;
  }
  sub_100DBEE64(v4, (uint64_t)&off_10127C5E0);
  if (v3)
    return;
  v18 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v35, 0, 0);
  v19 = *v18;
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain(v19);
    v20 = sub_1008431EC(0);
    if ((v21 & 1) != 0)
    {
      sub_1004CB7BC(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v31, &qword_1013E0230);
    }
    else
    {
      v31 = 0;
      v32 = 0;
      v33 = 0;
      v34 = 1;
    }
    swift_bridgeObjectRelease(v19);
    if (v34 != 1)
    {
      sub_1004C4938((uint64_t)&v31, (uint64_t)v36, &qword_1013E0230);
      v27 = *(_QWORD *)(v4 + v37);
      v28 = *(void (**)(_BYTE *, __n128))(*(_QWORD *)v27 + 552);
      v29 = swift_retain(v27);
      v28(v36, v29);
      swift_release(v27);
      v26 = (uint64_t *)v36;
      v25 = &qword_1013E0230;
      goto LABEL_12;
    }
  }
  else
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 1;
  }
  v25 = (uint64_t *)&unk_1013DFC00;
  v26 = &v31;
LABEL_12:
  sub_1004CB800((uint64_t)v26, v25);
  sub_100DB0D78(v4, (uint64_t)&off_10127C5E0, 2u);
}

void sub_100777368(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  swift_getObjectType(a4);
  sub_10077C7C0(a1, a2, a3, a4, v4);
}

uint64_t sub_1007773C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(__n128);
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *(uint64_t (**)(__n128))(*(_QWORD *)v1 + 568);
  v3 = swift_retain(v1);
  v4 = v2(v3);
  v5 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 576))();
  sub_100A634F4(v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = sub_100AF7994(v7);
  swift_bridgeObjectRelease();
  sub_100A634F4(v5);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = sub_100AF7994(v10);
  swift_bridgeObjectRelease();
  v12 = sub_100CA03B4(v11, v8);
  swift_release(v1);
  return v12;
}

void sub_10077749C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t inited;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(__n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  _BYTE v45[80];
  unint64_t v46;

  v5 = v3;
  v9 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)v10 + 456);
  v12 = swift_retain(v10);
  v13 = v11(a1, a2, v12);
  v15 = v14;
  swift_release(v10);
  if (!v4)
  {
    v46 = v15;
    v16 = *(_QWORD *)(v5 + v9);
    v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)v16 + 464);
    v18 = swift_retain(v16);
    v19 = v17(a1, a2 & 1, v18);
    v21 = v20;
    swift_release(v16);
    v22 = sub_1004B804C(&qword_1013EB970);
    inited = swift_initStackObject(v22, v45);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_BYTE *)(inited + 32) = 1;
    v24 = v46;
    *(_QWORD *)(inited + 40) = v13;
    *(_QWORD *)(inited + 48) = v24;
    *(_BYTE *)(inited + 56) = 2;
    *(_QWORD *)(inited + 64) = v19;
    *(_QWORD *)(inited + 72) = v21;
    sub_1004BE310(v13, v24);
    sub_1004BE310(v19, v21);
    sub_1008D5B0C(inited);
    v44 = v25;
    v26 = *(_QWORD *)(v5 + v9);
    v27 = *(uint64_t (**)(__n128))(*(_QWORD *)v26 + 568);
    v28 = swift_retain(v26);
    v29 = v27(v28);
    swift_release(v26);
    v30 = *(_QWORD *)(v5 + v9);
    v31 = *(uint64_t (**)(__n128))(*(_QWORD *)v30 + 576);
    v32 = swift_retain(v30);
    v43 = v21;
    v33 = v31(v32);
    swift_release(v30);
    v34 = sub_10077BE6C(v33, v29);
    v35 = *(_QWORD *)(v5 + v9);
    v36 = (*(uint64_t (**)(void))(*(_QWORD *)v35 + 408))();
    v38 = v19;
    if ((v37 & 1) != 0)
      v39 = v36 + 2;
    else
      v39 = v36;
    v40 = *(_QWORD *)(v35 + 16);
    v42 = *(_OWORD *)(v35 + 24);
    v41 = *(_QWORD *)(v35 + 40);
    swift_retain(v35);
    sub_1004BBBC8(v13, v46);
    sub_1004BBBC8(v38, v43);
    swift_release(v35);
    *(_OWORD *)a3 = v42;
    *(_QWORD *)(a3 + 16) = v41;
    *(_QWORD *)(a3 + 24) = v40;
    *(_QWORD *)(a3 + 32) = v39;
    *(_QWORD *)(a3 + 40) = v44;
    *(_QWORD *)(a3 + 48) = v34;
    *(_QWORD *)(a3 + 56) = _swiftEmptyArrayStorage;
  }
}

uint64_t sub_1007776BC(uint64_t a1, char a2)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
    __asm { BR              X9 }
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  return v6;
}

void sub_100777798()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_1007777F0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_1007778F8()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_100777968()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_1007779B0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_100777A08()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_100777A68()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_100777AC0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

void sub_100777B28()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x10077771CLL);
}

uint64_t sub_100777BC0(uint64_t a1, char a2)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
    __asm { BR              X9 }
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  return v6;
}

void sub_100777CA8()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  String._bridgeToObjectiveC()();
  JUMPOUT(0x100777C2CLL);
}

void sub_100777D9C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777DD8()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777E14()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777E50()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777E8C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777EC8()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777F04()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  JUMPOUT(0x100777C0CLL);
}

void sub_100777F6C()
{
  qword_10147F5A0 = (uint64_t)&off_101263BD8;
}

uint64_t sub_100777F80(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100777FB4 + 4 * byte_100F09090[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_100777FB4()
{
  return 0x70756F7267;
}

uint64_t sub_100777FC8()
{
  return 0x6570616873;
}

uint64_t sub_100777FDC()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_100778000()
{
  return 0x6567616D69;
}

uint64_t sub_100778014()
{
  return 0x6569766F6DLL;
}

uint64_t sub_100778028()
{
  return 1701603686;
}

uint64_t sub_100778038()
{
  return 7107189;
}

uint64_t sub_100778048()
{
  return 2053403509;
}

uint64_t sub_100778058()
{
  return 0x646E616865657266;
}

unint64_t sub_10077807C()
{
  return 0xD000000000000014;
}

uint64_t sub_100778098()
{
  return 0x6F4E796B63697473;
}

uint64_t sub_1007780B4(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  char v68;

  v67 = a2;
  v66 = a3;
  v4 = sub_1004B804C(&qword_1013F12F0);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  __chkstk_darwin(v4);
  v63 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F12F8);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  __chkstk_darwin(v6);
  v60 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F1300);
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  __chkstk_darwin(v8);
  v57 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F1308);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v54 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013F1310);
  v52 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  __chkstk_darwin(v12);
  v51 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013F1318);
  v49 = *(_QWORD *)(v14 - 8);
  v50 = v14;
  __chkstk_darwin(v14);
  v48 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1004B804C(&qword_1013F1320);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v45 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1004B804C(&qword_1013F1328);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v42 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1004B804C(&qword_1013F1330);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v39 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1004B804C(&qword_1013F1338);
  v37 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v36 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1004B804C(&qword_1013F1340);
  v34[1] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34[0] = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1004B804C(&qword_1013F1348);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013F1350);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1[3];
  v30 = a1[4];
  sub_1004BB5A4(a1, v29);
  v31 = sub_10077EE18();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardItemType.CodingKeys, &type metadata for CRLBoardItemType.CodingKeys, v31, v29, v30);
  if ((v66 & 1) != 0)
    __asm { BR              X9 }
  v68 = 0;
  v32 = sub_10077F148();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardItemType.UnknownCodingKeys, &v68, v25, &type metadata for CRLBoardItemType.UnknownCodingKeys, v32);
  KeyedEncodingContainer.encode(_:forKey:)(v67);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

uint64_t sub_100778844()
{
  unsigned __int8 *v0;

  return sub_100777F80(*v0);
}

uint64_t sub_10077884C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10077DDA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100778870(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_10077887C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EE18();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007788A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EE18();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007788CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F07C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007788F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F07C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10077891C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EFB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778944(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EFB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10077896C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EEE4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778994(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EEE4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007789BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EEA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007789E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EEA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778A0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F104();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778A34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F104();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778A5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F038();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778A84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F038();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778AAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EFF4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778AD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EFF4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778AFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F0C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778B24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F0C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778B4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EE5C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778B74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EE5C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778B9C()
{
  return 0x6574736973726570;
}

uint64_t sub_100778BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x6574736973726570 && a2 == 0xEF6570795465636ELL)
  {
    result = swift_bridgeObjectRelease(0xEF6570795465636ELL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6574736973726570, 0xEF6570795465636ELL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100778C78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F148();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778CA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077F148();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778CC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EF6C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778CF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EF6C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778D18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EF28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100778D40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10077EF28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100778D68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_10077E274(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_100778D98(_QWORD *a1)
{
  uint64_t v1;

  return sub_1007780B4(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_100778DB4(uint64_t a1, uint64_t a2)
{
  return sub_10077DB6C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

double sub_100778DD0@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1013DD108 != -1)
    swift_once(&qword_1013DD108, sub_100777F6C);
  v2 = qword_10147F5A0;
  *a1 = qword_10147F5A0;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v2).n128_u64[0];
  return result;
}

void sub_100778E80()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 132, 0);
  __break(1u);
}

void sub_1007790A8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 148, 0);
  __break(1u);
}

void sub_100779108()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 159, 0);
  __break(1u);
}

void sub_100779168()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 163, 0);
  __break(1u);
}

id sub_1007791E0(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, _QWORD))
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;

  v4 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xC8))();
  a3(v4, v5 & 1);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  return v8;
}

void sub_10077929C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 175, 0);
  __break(1u);
}

void sub_10077935C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 176, 0);
  __break(1u);
}

void sub_10077941C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 180, 0);
  __break(1u);
}

void sub_1007794DC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 181, 0);
  __break(1u);
}

void sub_1007795FC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 189, 0);
  __break(1u);
}

void sub_1007796BC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 190, 0);
  __break(1u);
}

void sub_10077977C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 194, 0);
  __break(1u);
}

void sub_10077983C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 195, 0);
  __break(1u);
}

void sub_10077995C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 200, 0);
  __break(1u);
}

void sub_100779D48()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 254, 0);
  __break(1u);
}

void sub_100779E74()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 280, 0);
  __break(1u);
}

void sub_100779ED4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 284, 0);
  __break(1u);
}

void sub_10077A1A8(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = objc_msgSend(a1, "layoutForInfo:", a4);
  a2();

}

id sub_10077A4E0(void *a1, double *a2)
{
  id result;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  if (!a1)
  {
    v7 = 1.0;
    v9 = 0;
    v10 = 0;
    v8 = 0;
    v5 = 0;
    v6 = 1.0;
    goto LABEL_5;
  }
  result = objc_msgSend(a1, "pureGeometry");
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "fullTransform");
    v6 = *(double *)v11;
    v5 = v11[1];
    v8 = v11[2];
    v7 = *(double *)&v11[3];
    v10 = v11[4];
    v9 = v11[5];

LABEL_5:
    result = (id)swift_beginAccess(a2 + 2, v11, 1, 0);
    a2[2] = v6;
    *((_QWORD *)a2 + 3) = v5;
    *((_QWORD *)a2 + 4) = v8;
    a2[5] = v7;
    *((_QWORD *)a2 + 6) = v10;
    *((_QWORD *)a2 + 7) = v9;
    return result;
  }
  __break(1u);
  return result;
}

double sub_10077A5B4@<D0>(void *a1@<X0>, void (*a2)(_OWORD *__return_ptr)@<X2>, _OWORD *a3@<X8>)
{
  id v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];

  v5 = a1;
  a2(v9);

  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *a3 = v9[0];
  a3[1] = v7;
  a3[2] = v8;
  return result;
}

void sub_10077A7CC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 522, 0);
  __break(1u);
}

void sub_10077A82C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 526, 0);
  __break(1u);
}

void sub_10077A88C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 530, 0);
  __break(1u);
}

void sub_10077A8EC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 534, 0);
  __break(1u);
}

void sub_10077A94C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 538, 0);
  __break(1u);
}

void sub_10077A9AC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 542, 0);
  __break(1u);
}

void sub_10077AA0C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 546, 0);
  __break(1u);
}

void sub_10077AA6C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 550, 0);
  __break(1u);
}

void sub_10077AACC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 555, 0);
  __break(1u);
}

void sub_10077AB8C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 559, 0);
  __break(1u);
}

void sub_10077AC4C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 565, 0);
  __break(1u);
}

void sub_10077ACAC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 569, 0);
  __break(1u);
}

void sub_10077AD0C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 573, 0);
  __break(1u);
}

void sub_10077ADCC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 579, 0);
  __break(1u);
}

void sub_10077AE2C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLBoardItem.swift", 27, 2, 586, 0);
  __break(1u);
}

id sub_10077AFAC()
{
  return sub_10067865C(type metadata accessor for CRLBoardItem);
}

uint64_t sub_10077B00C()
{
  return type metadata accessor for CRLBoardItem(0);
}

uint64_t type metadata accessor for CRLBoardItem(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F11B8, (uint64_t)&nominal type descriptor for CRLBoardItem);
}

void sub_10077B028(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = &unk_100F09118;
  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_10077B0A8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext));
}

double sub_10077B0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext) = a1;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_10077B0D0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x88))();
}

uint64_t sub_10077B0EC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2F0))();
}

uint64_t sub_10077B108()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x300))();
}

uint64_t sub_10077B124()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x308))();
}

uint64_t sub_10077B140()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x310))();
}

uint64_t sub_10077B15C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

uint64_t sub_10077B188()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x320))();
}

uint64_t sub_10077B1A4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x328))();
}

uint64_t sub_10077B1C0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x330))();
}

uint64_t sub_10077B1DC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x338))();
}

uint64_t sub_10077B1F8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x348))();
}

uint64_t sub_10077B214()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x370))();
}

uint64_t sub_10077B230()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x358))();
}

double sub_10077B24C@<D0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  (*(void (**)(_OWORD *__return_ptr))((swift_isaMask & *v1) + 0x360))(v7);
  if (!v2)
  {
    v5 = v7[1];
    *a1 = v7[0];
    a1[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a1[2] = v8;
    a1[3] = v6;
  }
  return result;
}

uint64_t sub_10077B2A4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x368))();
}

uint64_t sub_10077B2C0()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x370))() & 1;
}

uint64_t sub_10077B870(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(__n128);
  __n128 v20;
  uint64_t v21;
  void (*v22)(__n128);
  __n128 v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  _BYTE v29[24];
  uint64_t v30;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  sub_1004CB7BC(a1, (uint64_t)v29, &qword_1013E0230);
  if (!v30)
  {
    sub_1004CB800((uint64_t)v29, &qword_1013E0230);
    goto LABEL_12;
  }
  v10 = type metadata accessor for CRLBoardItemBase(0);
  if ((swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
LABEL_12:
    v24 = 0;
    return v24 & 1;
  }
  v11 = v28;
  if (v28 == v1)
  {

    v24 = 1;
    return v24 & 1;
  }
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v13 = (*(uint64_t (**)(void))(*(_QWORD *)v12 + 408))();
  v15 = v14;
  v16 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v17 = (*(uint64_t (**)(void))(**(_QWORD **)&v11[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 408))();
  if ((v15 & 1) != 0)
    __asm { BR              X9 }
  if ((v18 & 1) != 0 || v13 != v17)
  {

    goto LABEL_12;
  }
  v19 = *(void (**)(__n128))(*(_QWORD *)v12 + 256);
  v20 = swift_retain(v12);
  v19(v20);
  swift_release(v12);
  v21 = *(_QWORD *)&v11[v16];
  v22 = *(void (**)(__n128))(*(_QWORD *)v21 + 256);
  v23 = swift_retain(v21);
  v22(v23);
  swift_release(v21);
  v24 = static UUID.== infix(_:_:)(v9);

  v25 = *(void (**)(char *, uint64_t))(v4 + 8);
  v25(v6, v3);
  v25(v9, v3);
  return v24 & 1;
}

uint64_t sub_10077BB24(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *, __n128))
{
  id v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  char v11;
  _OWORD v13[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v13, v8);
    v9 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v10 = a1;
  }
  v11 = a4(v13, v9);

  sub_1004CB800((uint64_t)v13, &qword_1013E0230);
  return v11 & 1;
}

Swift::Int sub_10077BBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  Swift::UInt v7;
  char v8;
  uint64_t v9;
  void (*v10)(__n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v14;
  _OWORD v15[4];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Hasher.init()(v15);
  v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v7 = (*(uint64_t (**)(_QWORD *))(**(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 408))(v5);
  if ((v8 & 1) != 0)
    v7 += 2;
  Hasher._combine(_:)(v7);
  v9 = *(_QWORD *)(v0 + v6);
  v10 = *(void (**)(__n128))(*(_QWORD *)v9 + 256);
  v11 = swift_retain(v9);
  v10(v11);
  swift_release(v9);
  v12 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v15, v1, v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v19 = v15[2];
  v20 = v15[3];
  v21 = v16;
  v17 = v15[0];
  v18 = v15[1];
  return Hasher.finalize()();
}

uint64_t sub_10077BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_10077C154(a1, (uint64_t)sub_100AF236C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000);
  if (v2)
    swift_bridgeObjectRelease(v6);
  return v6;
}

double sub_10077BF90()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)).n128_u64[0];
  return result;
}

id sub_10077BFBC()
{
  return sub_10067865C(type metadata accessor for CRLBoardItemBase);
}

uint64_t sub_10077C000()
{
  return type metadata accessor for CRLBoardItemBase(0);
}

uint64_t type metadata accessor for CRLBoardItemBase(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F11F8, (uint64_t)&nominal type descriptor for CRLBoardItemBase);
}

uint64_t sub_10077C01C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 888);
}

ValueMetadata *type metadata accessor for CRLBoardItemType()
{
  return &type metadata for CRLBoardItemType;
}

unint64_t sub_10077C0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F1208;
  if (!qword_1013F1208)
  {
    v1 = sub_1004CB6A4(&qword_1013F1210);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F1208);
  }
  return result;
}

id sub_10077C140()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
}

void sub_10077C154(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int i;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v59 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v51 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v50 = (uint64_t)&v48 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013F1380);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v52 = a1;
  v53 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v54 = v21;
  v55 = 0;
  v56 = v24 & v22;
  v57 = a2;
  v58 = a3;
  v49 = a1;
  swift_bridgeObjectRetain(a1);
  v48 = a3;
  swift_retain(a3);
  sub_100CE0548((uint64_t)v19);
  v25 = sub_1004B804C(&qword_101405DE0);
  for (i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25);
        ;
        i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25))
  {
    if (i == 1)
    {
      swift_release(v48);
      swift_bridgeObjectRelease(v49);
      sub_1004D284C(v52);
      swift_release(v58);
      return;
    }
    v32 = *v19;
    v31 = v19[1];
    v33 = (uint64_t)v16;
    sub_1004C4938((uint64_t)v19 + *(int *)(v25 + 48), (uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    v34 = *(_QWORD **)a5;
    v36 = sub_100842E98(v32, v31);
    v37 = v34[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    if (v34[3] >= v39)
    {
      if ((a4 & 1) != 0)
      {
        v43 = *(_QWORD **)a5;
        if ((v35 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_10082D260();
        v43 = *(_QWORD **)a5;
        if ((v40 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_10081633C(v39, a4 & 1);
      v41 = sub_100842E98(v32, v31);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_22;
      v36 = v41;
      v43 = *(_QWORD **)a5;
      if ((v40 & 1) != 0)
      {
LABEL_5:
        v27 = v43[7];
        v28 = *(_QWORD *)(v59 + 72) * v36;
        v29 = v51;
        sub_1004CB7BC(v27 + v28, v51, (uint64_t *)&unk_1013E1A50);
        v30 = v50;
        sub_1004CB7BC(v29, v50, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v29, (uint64_t *)&unk_1013E1A50);
        v16 = (char *)v33;
        sub_1004CB800(v33, (uint64_t *)&unk_1013E1A50);
        swift_bridgeObjectRelease(v31);
        sub_100582338(v30, *(_QWORD *)(*(_QWORD *)a5 + 56) + v28, (uint64_t *)&unk_1013E1A50);
        goto LABEL_6;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    v44 = (uint64_t *)(v43[6] + 16 * v36);
    *v44 = v32;
    v44[1] = v31;
    v16 = (char *)v33;
    sub_1004C4938(v33, v43[7] + *(_QWORD *)(v59 + 72) * v36, (uint64_t *)&unk_1013E1A50);
    v45 = v43[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_21;
    v43[2] = v47;
LABEL_6:
    sub_100CE0548((uint64_t)v19);
    v25 = sub_1004B804C(&qword_101405DE0);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10077C4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(__int128 *__return_ptr, __n128);
  __n128 v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(__n128);
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  CKRecordID v24;
  Swift::String v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[2];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardItemBase(0);
  v9 = swift_dynamicCastClass(a1, v8);
  if (v9)
  {
    v10 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v13 = *(void (**)(__int128 *__return_ptr, __n128))(*(_QWORD *)v11 + 536);
    swift_unknownObjectRetain(a1);
    swift_retain(v11);
    v14 = swift_retain(v12);
    v13(&v28, v14);
    swift_release(v11);
    swift_release(v12);
    if (v29)
    {
      sub_10050CB14(&v28, v30);
      sub_1004CB6E8((uint64_t)v30, (uint64_t)&v28);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v27 = _swiftEmptyDictionarySingleton;
      sub_1008256CC(&v28, 0, isUniquelyReferenced_nonNull_native);
      v16 = v27;
      swift_bridgeObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
    }
    else
    {
      sub_1004CB800((uint64_t)&v28, &qword_1013E0230);
      v16 = _swiftEmptyDictionarySingleton;
    }
    v17 = *(_QWORD *)(a2 + v10);
    v18 = *(void (**)(__n128))(*(_QWORD *)v17 + 256);
    v19 = swift_retain(v17);
    v18(v19);
    swift_release(v17);
    v20 = sub_100C9B734((uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(a1);
    v21 = type metadata accessor for CRLTransactableUndoingMutations(0);
    v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v22 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v7, v4);
    *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values) = v20;
    return v22;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 798, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 798, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

void sub_10077C7C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[14];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v22 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v16[8] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v17);
  v21 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v16[10] = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  v18 = (char *)v16 - v13;
  __chkstk_darwin(v14);
  v16[9] = (char *)v16 - v15;
  v19 = a5;
  __asm { BR              X10 }
}

void sub_10077C954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(__n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, _QWORD);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(__n128);
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  BOOL v36;
  uint64_t v37;
  uint64_t (*v38)(__n128);
  __n128 v39;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  id v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  id v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t (*v76)(__n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t (*v90)(__n128);
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  uint64_t v99;
  _BOOL8 v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  BOOL v121;
  char v122;
  uint64_t v123;
  uint64_t inited;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  swift_bridgeObjectRelease();
  v5 = type metadata accessor for CRLBoardItemBase(0);
  *(_QWORD *)(v0 + 56) = v3;
  v6 = swift_dynamicCastClass(v3, v5);
  *(_QWORD *)(v0 + 104) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 16);
    if (v7)
    {
      v8 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v9 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v10 = v4;
      v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      swift_unknownObjectRetain(*(_QWORD *)(v0 + 56));
      *(_QWORD *)(v0 + 96) = v9;
      swift_retain(v9);
      swift_bridgeObjectRetain(v10);
      *(_QWORD *)(v0 + 32) = v10;
      v12 = (_QWORD *)(v10 + 40);
      *(_QWORD *)(v0 + 40) = "accessibilityDescription";
      *(_QWORD *)(v0 + 48) = 0x8000000100FB8AF0;
      *(_QWORD *)(v0 + 16) = "servable deltas with wrong type";
      *(_QWORD *)(v0 + 24) = 0x8000000100FB8AD0;
      *(_OWORD *)v0 = xmmword_100EF5E40;
      *(_QWORD *)(v0 + 88) = v2;
      v13 = *(_QWORD *)(v0 + 120);
      v14 = *(_QWORD *)(v0 + 72);
      *(_QWORD *)(v0 + 136) = v8;
      while (1)
      {
        v16 = *(v12 - 1);
        v15 = *v12;
        v17 = v16 == 0x6641746E65726170 && v15 == 0xEE007974696E6966;
        if (!v17
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6641746E65726170, 0xEE007974696E6966, *(v12 - 1), *v12, 0) & 1) == 0)
        {
          v36 = v16 == 0x64656B636F6CLL && v15 == 0xE600000000000000;
          if (v36
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0x64656B636F6CLL, 0xE600000000000000, v16, v15, 0) & 1) != 0)
          {
            v37 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 136));
            v38 = *(uint64_t (**)(__n128))(*(_QWORD *)v37 + 312);
            v39 = swift_retain(v37);
            LOBYTE(v38) = v38(v39);
            swift_release(v37);
            *(_QWORD *)(v0 + 264) = &type metadata for Bool;
            *(_BYTE *)(v0 + 240) = v38 & 1;
            swift_beginAccess(v11, v0 + 216, 33, 0);
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
            v41 = *v11;
            *(_QWORD *)(v0 + 176) = *v11;
            *v11 = 0x8000000000000000;
            v43 = sub_100843260(11);
            v44 = *(_QWORD *)(v41 + 16);
            v45 = (v42 & 1) == 0;
            v46 = v44 + v45;
            if (__OFADD__(v44, v45))
            {
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              type metadata accessor for CRLChangeProperty(0);
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v128);
              __break(1u);
              JUMPOUT(0x10077DB44);
            }
            v47 = v42;
            if (*(_QWORD *)(v41 + 24) >= v46)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v50 = *(_QWORD **)(v0 + 176);
                if ((v42 & 1) == 0)
                  goto LABEL_28;
              }
              else
              {
                sub_10082C8D0();
                v50 = *(_QWORD **)(v0 + 176);
                if ((v47 & 1) == 0)
                  goto LABEL_28;
              }
            }
            else
            {
              sub_100814B68(v46, isUniquelyReferenced_nonNull_native);
              v48 = sub_100843260(11);
              if ((v47 & 1) != (v49 & 1))
                goto LABEL_111;
              v43 = v48;
              v50 = *(_QWORD **)(v0 + 176);
              if ((v47 & 1) == 0)
              {
LABEL_28:
                v50[(v43 >> 6) + 8] |= 1 << v43;
                *(_QWORD *)(v50[6] + 8 * v43) = 11;
                sub_1004C4938(v0 + 184, v50[7] + 32 * v43, &qword_1013E0230);
                v51 = v50[2];
                v52 = __OFADD__(v51, 1);
                v53 = v51 + 1;
                if (v52)
                  goto LABEL_104;
                v50[2] = v53;
                goto LABEL_46;
              }
            }
            sub_100582338(v0 + 184, v50[7] + 32 * v43, &qword_1013E0230);
LABEL_46:
            *v11 = v50;
            swift_bridgeObjectRelease();
            swift_endAccess(v0 + 216);
            sub_1004CB800(v0 + 240, &qword_1013E0230);
            v13 = *(_QWORD *)(v0 + 120);
            goto LABEL_5;
          }
          if (v16 == 0xD000000000000011 && v15 == *(_QWORD *)(v0 + 48)
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, *(_QWORD *)(v0 + 40) | 0x8000000000000000, v16, v15, 0) & 1) != 0)
          {
            v75 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 136));
            v76 = *(uint64_t (**)(__n128))(*(_QWORD *)v75 + 336);
            v77 = swift_retain(v75);
            LOBYTE(v76) = v76(v77);
            swift_release(v75);
            *(_QWORD *)(v0 + 264) = &type metadata for Bool;
            *(_BYTE *)(v0 + 240) = v76 & 1;
            swift_beginAccess(v11, v0 + 216, 33, 0);
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            v78 = swift_isUniquelyReferenced_nonNull_native(*v11);
            v79 = *v11;
            *(_QWORD *)(v0 + 176) = *v11;
            *v11 = 0x8000000000000000;
            v81 = sub_100843260(12);
            v82 = *(_QWORD *)(v79 + 16);
            v83 = (v80 & 1) == 0;
            v84 = v82 + v83;
            if (__OFADD__(v82, v83))
              goto LABEL_105;
            v85 = v80;
            if (*(_QWORD *)(v79 + 24) < v84)
            {
              sub_100814B68(v84, v78);
              v86 = sub_100843260(12);
              if ((v85 & 1) != (v87 & 1))
                goto LABEL_111;
              v81 = v86;
              v88 = *(_QWORD **)(v0 + 176);
              if ((v85 & 1) == 0)
                goto LABEL_93;
LABEL_57:
              sub_100582338(v0 + 184, v88[7] + 32 * v81, &qword_1013E0230);
              v13 = *(_QWORD *)(v0 + 120);
LABEL_95:
              *v11 = v88;
              swift_bridgeObjectRelease();
              swift_endAccess(v0 + 216);
              v108 = v0 + 240;
LABEL_96:
              sub_1004CB800(v108, &qword_1013E0230);
              goto LABEL_5;
            }
            if ((v78 & 1) != 0)
            {
              v88 = *(_QWORD **)(v0 + 176);
              if ((v80 & 1) != 0)
                goto LABEL_57;
            }
            else
            {
              sub_10082C8D0();
              v88 = *(_QWORD **)(v0 + 176);
              if ((v85 & 1) != 0)
                goto LABEL_57;
            }
LABEL_93:
            v88[(v81 >> 6) + 8] |= 1 << v81;
            *(_QWORD *)(v88[6] + 8 * v81) = 12;
            sub_1004C4938(v0 + 184, v88[7] + 32 * v81, &qword_1013E0230);
            v127 = v88[2];
            v52 = __OFADD__(v127, 1);
            v119 = v127 + 1;
            if (v52)
              goto LABEL_106;
LABEL_94:
            v88[2] = v119;
            v13 = *(_QWORD *)(v0 + 120);
            goto LABEL_95;
          }
          if (v16 == 0xD000000000000018 && v15 == *(_QWORD *)(v0 + 24)
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, *(_QWORD *)(v0 + 16) | 0x8000000000000000, v16, v15, 0) & 1) != 0)
          {
            v89 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 136));
            v90 = *(uint64_t (**)(__n128))(*(_QWORD *)v89 + 360);
            v91 = swift_retain(v89);
            v92 = v90(v91);
            v94 = v93;
            swift_release(v89);
            *(_QWORD *)(v0 + 264) = &type metadata for String;
            *(_QWORD *)(v0 + 240) = v92;
            *(_QWORD *)(v0 + 248) = v94;
            swift_beginAccess(v11, v0 + 216, 33, 0);
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            v95 = swift_isUniquelyReferenced_nonNull_native(*v11);
            v96 = *v11;
            *(_QWORD *)(v0 + 176) = *v11;
            *v11 = 0x8000000000000000;
            v98 = sub_100843260(14);
            v99 = *(_QWORD *)(v96 + 16);
            v100 = (v97 & 1) == 0;
            v101 = v99 + v100;
            if (__OFADD__(v99, v100))
              goto LABEL_107;
            v102 = v97;
            if (*(_QWORD *)(v96 + 24) >= v101)
            {
              if ((v95 & 1) != 0)
              {
                v105 = *(_QWORD **)(v0 + 176);
                if ((v97 & 1) == 0)
                  goto LABEL_65;
              }
              else
              {
                sub_10082C8D0();
                v105 = *(_QWORD **)(v0 + 176);
                if ((v102 & 1) == 0)
                  goto LABEL_65;
              }
            }
            else
            {
              sub_100814B68(v101, v95);
              v103 = sub_100843260(14);
              if ((v102 & 1) != (v104 & 1))
                goto LABEL_111;
              v98 = v103;
              v105 = *(_QWORD **)(v0 + 176);
              if ((v102 & 1) == 0)
              {
LABEL_65:
                v105[(v98 >> 6) + 8] |= 1 << v98;
                *(_QWORD *)(v105[6] + 8 * v98) = 14;
                sub_1004C4938(v0 + 184, v105[7] + 32 * v98, &qword_1013E0230);
                v106 = v105[2];
                v52 = __OFADD__(v106, 1);
                v107 = v106 + 1;
                if (v52)
                  goto LABEL_108;
                v105[2] = v107;
                v13 = *(_QWORD *)(v0 + 120);
LABEL_70:
                *v11 = v105;
LABEL_71:
                swift_bridgeObjectRelease();
                swift_endAccess(v0 + 216);
                v108 = v0 + 240;
                goto LABEL_96;
              }
            }
            sub_100582338(v0 + 184, v105[7] + 32 * v98, &qword_1013E0230);
            v13 = *(_QWORD *)(v0 + 120);
            goto LABEL_70;
          }
          if (v16 == 0x776F64616873 && v15 == 0xE600000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0x776F64616873, 0xE600000000000000, v16, v15, 0) & 1) != 0)
          {
            *(_QWORD *)(v0 + 264) = &type metadata for Bool;
            *(_BYTE *)(v0 + 240) = 1;
            swift_beginAccess(v11, v0 + 216, 33, 0);
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            v109 = swift_isUniquelyReferenced_nonNull_native(*v11);
            v110 = *v11;
            *(_QWORD *)(v0 + 176) = *v11;
            *v11 = 0x8000000000000000;
            v81 = sub_100843260(16);
            v112 = *(_QWORD *)(v110 + 16);
            v113 = (v111 & 1) == 0;
            v114 = v112 + v113;
            if (__OFADD__(v112, v113))
              goto LABEL_109;
            v115 = v111;
            if (*(_QWORD *)(v110 + 24) >= v114)
            {
              if ((v109 & 1) != 0)
              {
                v88 = *(_QWORD **)(v0 + 176);
                if ((v111 & 1) != 0)
                  goto LABEL_57;
              }
              else
              {
                sub_10082C8D0();
                v88 = *(_QWORD **)(v0 + 176);
                if ((v115 & 1) != 0)
                  goto LABEL_57;
              }
            }
            else
            {
              sub_100814B68(v114, v109);
              v116 = sub_100843260(16);
              if ((v115 & 1) != (v117 & 1))
                goto LABEL_111;
              v81 = v116;
              v88 = *(_QWORD **)(v0 + 176);
              if ((v115 & 1) != 0)
                goto LABEL_57;
            }
            v88[(v81 >> 6) + 8] |= 1 << v81;
            *(_QWORD *)(v88[6] + 8 * v81) = 16;
            sub_1004C4938(v0 + 184, v88[7] + 32 * v81, &qword_1013E0230);
            v118 = v88[2];
            v52 = __OFADD__(v118, 1);
            v119 = v118 + 1;
            if (v52)
              goto LABEL_110;
            goto LABEL_94;
          }
          if (v16 == 0x6574726F70707573 && v15 == 0xE900000000000064
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6574726F70707573, 0xE900000000000064, v16, v15, 0) & 1) != 0)
          {
            v120 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 136)) + 24);
            v121 = sub_1001E9730() >= v120;
            *(_QWORD *)(v0 + 264) = &type metadata for Bool;
            *(_BYTE *)(v0 + 240) = v121;
            swift_beginAccess(v11, v0 + 216, 33, 0);
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            v122 = swift_isUniquelyReferenced_nonNull_native(*v11);
            *(_QWORD *)(v0 + 176) = *v11;
            *v11 = 0x8000000000000000;
            sub_1008258FC(v0 + 184, 13, v122);
            *v11 = *(_QWORD *)(v0 + 176);
            goto LABEL_71;
          }
          v123 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v123, v0 + 272);
          *(_QWORD *)(v0 + 144) = v7;
          v125 = inited;
          *(_OWORD *)(inited + 16) = *(_OWORD *)v0;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(v125 + 32) = v16;
          *(_QWORD *)(v125 + 40) = v15;
          swift_bridgeObjectRetain(v15);
          v7 = *(_QWORD *)(v0 + 144);
          swift_setDeallocating(v125);
          v126 = sub_1004B804C(&qword_1013E0190);
          v13 = *(_QWORD *)(v0 + 120);
          swift_arrayDestroy(v125 + 32, 1, v126);
          goto LABEL_5;
        }
        *(_QWORD *)(v0 + 144) = v7;
        (*(void (**)(void))(**(_QWORD **)(v0 + 96) + 264))();
        v18 = *(_QWORD **)(v0 + 128);
        v19 = *(_QWORD *)((char *)v18 + *(_QWORD *)(v0 + 136));
        v20 = *(void (**)(__n128))(*(_QWORD *)v19 + 264);
        v21 = swift_retain(v19);
        v20(v21);
        swift_release(v19);
        v22 = v14;
        v23 = *(_QWORD *)(v0 + 160);
        v24 = v23 + *(int *)(*(_QWORD *)(v0 + 112) + 48);
        sub_1004CB7BC(v22, v23, (uint64_t *)&unk_1013E1A50);
        sub_1004CB7BC(v13, v24, (uint64_t *)&unk_1013E1A50);
        v25 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 48);
        if (v25(v23, 1, *(_QWORD *)(v0 + 168)) != 1)
          break;
        sub_1004CB800(v13, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v22, (uint64_t *)&unk_1013E1A50);
        v14 = v22;
        if (v25(v24, 1, *(_QWORD *)(v0 + 168)) != 1)
          goto LABEL_16;
        v26 = *(_QWORD *)(v0 + 160);
        v27 = (uint64_t *)&unk_1013E1A50;
LABEL_32:
        v57 = sub_1004CB800(v26, v27);
LABEL_33:
        v58 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v18) + 0xE0))(v57);
        v59 = (void *)(*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v0 + 104)) + 0xE0))();
        v60 = sub_1004B8930(0, (unint64_t *)&qword_1013F1360, off_101229800);
        if ((static NSObject.== infix(_:_:)(v58, v59) & 1) == 0)
        {
          if ((objc_msgSend(v58, "isEqualExceptForPosition:", v59) & 1) != 0)
          {
            *(_QWORD *)(v0 + 264) = v60;
            *(_QWORD *)(v0 + 240) = v58;
            swift_beginAccess(v11, v0 + 216, 33, 0);
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            v61 = v58;
            v62 = swift_isUniquelyReferenced_nonNull_native(*v11);
            *(_QWORD *)(v0 + 176) = *v11;
            *v11 = 0x8000000000000000;
            sub_1008258FC(v0 + 184, 6, v62);
            *v11 = *(_QWORD *)(v0 + 176);
            swift_bridgeObjectRelease();
            goto LABEL_41;
          }
          *(_QWORD *)(v0 + 264) = v60;
          *(_QWORD *)(v0 + 240) = v58;
          sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
          swift_beginAccess(v11, v0 + 216, 33, 0);
          v71 = v58;
          sub_10083DAD8(v0 + 184, 7uLL);
          swift_endAccess(v0 + 216);
          sub_1004CB800(v0 + 240, &qword_1013E0230);
          objc_msgSend(v71, "angle");
          v73 = v72;
          objc_msgSend(v59, "angle");
          if (sub_10077F18C(v73, v74))
          {

          }
          else
          {
            *(_QWORD *)(v0 + 264) = v60;
            *(_QWORD *)(v0 + 240) = v71;
            sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
            swift_beginAccess(v11, v0 + 216, 33, 0);
            v61 = v71;
            sub_10083DAD8(v0 + 184, 8uLL);
LABEL_41:
            swift_endAccess(v0 + 216);
            sub_1004CB800(v0 + 240, &qword_1013E0230);

          }
          v13 = *(_QWORD *)(v0 + 120);
          v7 = *(_QWORD *)(v0 + 144);
          goto LABEL_5;
        }

        v13 = *(_QWORD *)(v0 + 120);
        v7 = *(_QWORD *)(v0 + 144);
LABEL_5:
        v12 += 2;
        if (!--v7)
        {
          swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
          swift_release(*(_QWORD *)(v0 + 96));
          swift_bridgeObjectRelease();
          return;
        }
      }
      v28 = v23;
      v29 = *(_QWORD *)(v0 + 88);
      sub_1004CB7BC(v28, v29, (uint64_t *)&unk_1013E1A50);
      if (v25(v24, 1, *(_QWORD *)(v0 + 168)) == 1)
      {
        sub_1004CB800(v13, (uint64_t *)&unk_1013E1A50);
        v30 = v29;
        v14 = v22;
        sub_1004CB800(v22, (uint64_t *)&unk_1013E1A50);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(v30, *(_QWORD *)(v0 + 168));
LABEL_16:
        sub_1004CB800(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_1013F62D0);
      }
      else
      {
        v63 = v13;
        v64 = *(_QWORD *)(v0 + 152);
        v65 = *(_QWORD *)(v0 + 168);
        v66 = *(_QWORD *)(v0 + 64);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v66, v24, v65);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v67 = dispatch thunk of static Equatable.== infix(_:_:)(*(_QWORD *)(v0 + 88), v66);
        v68 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v68(v66, v65);
        v69 = *(_QWORD *)(v0 + 72);
        sub_1004CB800(v63, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v69, (uint64_t *)&unk_1013E1A50);
        v70 = v65;
        v14 = v69;
        v68(*(_QWORD *)(v0 + 88), v70);
        v57 = sub_1004CB800(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_1013E1A50);
        if ((v67 & 1) != 0)
          goto LABEL_33;
      }
      v31 = *(_QWORD *)((char *)v18 + *(_QWORD *)(v0 + 136));
      v32 = *(void (**)(__n128))(*(_QWORD *)v31 + 264);
      v33 = swift_retain(v31);
      v34 = *(_QWORD *)(v0 + 80);
      v32(v33);
      v35 = swift_release(v31);
      if (((unsigned int (*)(uint64_t, uint64_t, _QWORD, __n128))v25)(v34, 1, *(_QWORD *)(v0 + 168), v35) == 1)
      {
        sub_1004CB800(v34, (uint64_t *)&unk_1013E1A50);
        *(_OWORD *)(v0 + 240) = 0u;
        *(_OWORD *)(v0 + 256) = 0u;
      }
      else
      {
        v54 = *(_QWORD *)(v0 + 168);
        *(_QWORD *)(v0 + 264) = v54;
        v55 = sub_10050D1B0((_QWORD *)(v0 + 240));
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 32))(v55, v34, v54);
      }
      swift_beginAccess(v11, v0 + 216, 33, 0);
      sub_1004CB7BC(v0 + 240, v0 + 184, &qword_1013E0230);
      v56 = swift_isUniquelyReferenced_nonNull_native(*v11);
      *(_QWORD *)(v0 + 176) = *v11;
      *v11 = 0x8000000000000000;
      sub_1008258FC(v0 + 184, 0, v56);
      *v11 = *(_QWORD *)(v0 + 176);
      swift_bridgeObjectRelease();
      swift_endAccess(v0 + 216);
      v26 = v0 + 240;
      v27 = &qword_1013E0230;
      goto LABEL_32;
    }
  }
}

uint64_t sub_10077DB6C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    return ((uint64_t (*)(void))((char *)&loc_10077DB98 + 4 * byte_100F090B2[a1]))();
  if ((a4 & 1) != 0)
    return 0;
  return a1 == a3;
}

_QWORD *sub_10077DC78(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  CKRecordID v4;
  Swift::String v5;

  v2 = type metadata accessor for CRLBoardItemBase(0);
  if (swift_dynamicCastClass(a1, v2))
    return _swiftEmptyDictionarySingleton;
  sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v4, v5);
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

uint64_t sub_10077DDA0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;

  if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E776F6E6B6E75, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x70756F7267 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x70756F7267, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6570616873 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6570616873, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x697463656E6E6F63 && a2 == 0xEE00656E694C6E6FLL)
  {
    v9 = 0xEE00656E694C6E6FLL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697463656E6E6F63, 0xEE00656E694C6E6FLL, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x6567616D69 && a2 == 0xE500000000000000)
  {
    v10 = 0xE500000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6567616D69, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x6569766F6DLL && a2 == 0xE500000000000000)
  {
    v11 = 0xE500000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6569766F6DLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 1701603686 && a2 == 0xE400000000000000)
  {
    v12 = 0xE400000000000000;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701603686, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v13 = 0xE300000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 2053403509 && a2 == 0xE400000000000000)
  {
    v14 = 0xE400000000000000;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(2053403509, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0x646E616865657266 && a2 == 0xEF676E6977617244)
  {
    v15 = 0xEF676E6977617244;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646E616865657266, 0xEF676E6977617244, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0xD000000000000014)
  {
    v16 = 0x8000000100FCF780;
    if (a2 == 0x8000000100FCF780)
      goto LABEL_67;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100FCF780, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_67:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if (a1 == 0x6F4E796B63697473 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease(0xEA00000000006574);
    return 11;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F4E796B63697473, 0xEA00000000006574, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v17 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_10077E274(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  _QWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  _QWORD *v71;
  char *v72;

  v2 = sub_1004B804C(&qword_1013F1218);
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  __chkstk_darwin(v2);
  v67 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013F1220);
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  __chkstk_darwin(v4);
  v66 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F1228);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  __chkstk_darwin(v6);
  v65 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1004B804C(&qword_1013F1230);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v70 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1004B804C(&qword_1013F1238);
  v44 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v64 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1004B804C(&qword_1013F1240);
  v47 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v63 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1004B804C(&qword_1013F1248);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v61 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1004B804C(&qword_1013F1250);
  v45 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v69 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1004B804C(&qword_1013F1258);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v62 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1004B804C(&qword_1013F1260);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v68 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1004B804C(&qword_1013F1268);
  v38[3] = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v60 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013F1270);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C(&qword_1013F1278);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v25 = a1[4];
  v71 = a1;
  sub_1004BB5A4(a1, v24);
  v26 = sub_10077EE18();
  v27 = v72;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardItemType.CodingKeys, &type metadata for CRLBoardItemType.CodingKeys, v26, v24, v25);
  if (!v27)
  {
    v72 = v19;
    v38[1] = v17;
    v38[2] = v16;
    v28 = v21;
    v29 = KeyedDecodingContainer.allKeys.getter(v20);
    v30 = v20;
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v20 = type metadata accessor for DecodingError(0);
    swift_allocError(v20, &protocol witness table for DecodingError, 0, 0);
    v31 = v30;
    v33 = v32;
    sub_1004B804C(&qword_1013DF800);
    *v33 = &type metadata for CRLBoardItemType;
    v34 = KeyedDecodingContainer.codingPath.getter(v31);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v34, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v35.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v33, enum case for DecodingError.typeMismatch(_:), v20);
    swift_willThrow(v35);
    v36 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v23, v31, v36);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v71);
  return v20;
}

unint64_t sub_10077EE18()
{
  unint64_t result;

  result = qword_1013F1280;
  if (!qword_1013F1280)
  {
    result = swift_getWitnessTable(&unk_100F09C28, &type metadata for CRLBoardItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1280);
  }
  return result;
}

unint64_t sub_10077EE5C()
{
  unint64_t result;

  result = qword_1013F1290;
  if (!qword_1013F1290)
  {
    result = swift_getWitnessTable(&unk_100F09BD8, &type metadata for CRLBoardItemType.StickyNoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1290);
  }
  return result;
}

unint64_t sub_10077EEA0()
{
  unint64_t result;

  result = qword_1013F1298;
  if (!qword_1013F1298)
  {
    result = swift_getWitnessTable(&unk_100F09B88, &type metadata for CRLBoardItemType.FreehandDrawingShapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1298);
  }
  return result;
}

unint64_t sub_10077EEE4()
{
  unint64_t result;

  result = qword_1013F12A0;
  if (!qword_1013F12A0)
  {
    result = swift_getWitnessTable(&unk_100F09B38, &type metadata for CRLBoardItemType.FreehandDrawingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12A0);
  }
  return result;
}

unint64_t sub_10077EF28()
{
  unint64_t result;

  result = qword_1013F12A8;
  if (!qword_1013F12A8)
  {
    result = swift_getWitnessTable(&unk_100F09AE8, &type metadata for CRLBoardItemType.UsdzCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12A8);
  }
  return result;
}

unint64_t sub_10077EF6C()
{
  unint64_t result;

  result = qword_1013F12B0;
  if (!qword_1013F12B0)
  {
    result = swift_getWitnessTable(&unk_100F09A98, &type metadata for CRLBoardItemType.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12B0);
  }
  return result;
}

unint64_t sub_10077EFB0()
{
  unint64_t result;

  result = qword_1013F12B8;
  if (!qword_1013F12B8)
  {
    result = swift_getWitnessTable(&unk_100F09A48, &type metadata for CRLBoardItemType.FileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12B8);
  }
  return result;
}

unint64_t sub_10077EFF4()
{
  unint64_t result;

  result = qword_1013F12C0;
  if (!qword_1013F12C0)
  {
    result = swift_getWitnessTable(&unk_100F099F8, &type metadata for CRLBoardItemType.MovieCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12C0);
  }
  return result;
}

unint64_t sub_10077F038()
{
  unint64_t result;

  result = qword_1013F12C8;
  if (!qword_1013F12C8)
  {
    result = swift_getWitnessTable(&unk_100F099A8, &type metadata for CRLBoardItemType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12C8);
  }
  return result;
}

unint64_t sub_10077F07C()
{
  unint64_t result;

  result = qword_1013F12D0;
  if (!qword_1013F12D0)
  {
    result = swift_getWitnessTable(&unk_100F09958, &type metadata for CRLBoardItemType.ConnectionLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12D0);
  }
  return result;
}

unint64_t sub_10077F0C0()
{
  unint64_t result;

  result = qword_1013F12D8;
  if (!qword_1013F12D8)
  {
    result = swift_getWitnessTable(&unk_100F09908, &type metadata for CRLBoardItemType.ShapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12D8);
  }
  return result;
}

unint64_t sub_10077F104()
{
  unint64_t result;

  result = qword_1013F12E0;
  if (!qword_1013F12E0)
  {
    result = swift_getWitnessTable(&unk_100F098B8, &type metadata for CRLBoardItemType.GroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12E0);
  }
  return result;
}

unint64_t sub_10077F148()
{
  unint64_t result;

  result = qword_1013F12E8;
  if (!qword_1013F12E8)
  {
    result = swift_getWitnessTable(&unk_100F09868, &type metadata for CRLBoardItemType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F12E8);
  }
  return result;
}

BOOL sub_10077F18C(double a1, double a2)
{
  return a1 == a2 || vabdd_f64(a1, a2) < fabs(a2 * 0.000000999999997);
}

uint64_t sub_10077F1BC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _BYTE *v21;
  void (*v22)(__n128);
  uint64_t v23;
  void (*v24)(__n128);
  __n128 v25;
  __n128 v26;
  void (*v27)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128);
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  _BYTE *v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t result;
  uint64_t v33;
  void (*v34)(__n128);
  __n128 v35;
  __n128 v36;
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _QWORD *v43;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v39 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v7);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v41 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v37[-v13];
  __chkstk_darwin(v15);
  v17 = &v37[-v16];
  v19 = __chkstk_darwin(v18);
  v21 = &v37[-v20];
  v22 = *(void (**)(__n128))((swift_isaMask & *a1) + 0xB8);
  v43 = a1;
  v22(v19);
  v42 = a2;
  v40 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v24 = *(void (**)(__n128))(*(_QWORD *)v23 + 256);
  v25 = swift_retain(v23);
  v24(v25);
  v26 = swift_release(v23);
  v27 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t, __n128))(v5 + 56);
  v27(v17, 0, 1, v4, v26);
  v28 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC((uint64_t)v17, v28, (uint64_t *)&unk_1013E1A50);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v9, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E1A50);
    if (v29(v28, 1, v4) == 1)
      return sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    sub_1004CB7BC((uint64_t)v9, (uint64_t)v14, (uint64_t *)&unk_1013E1A50);
    if (v29(v28, 1, v4) != 1)
    {
      v30 = v39;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v39, v28, v4);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v38 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v30);
      v31 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v31(v30, v4);
      sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
      sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E1A50);
      v31(v14, v4);
      result = sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
      if ((v38 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v14, v4);
  }
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013F62D0);
LABEL_8:
  v33 = *(_QWORD *)(v42 + v40);
  v34 = *(void (**)(__n128))(*(_QWORD *)v33 + 256);
  v35 = swift_retain(v33);
  v9 = v41;
  v34(v35);
  v36 = swift_release(v33);
  v27(v9, 0, 1, v4, v36);
  (*(void (**)(_BYTE *))((swift_isaMask & *v43) + 0xC0))(v9);
  return sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
}

unint64_t sub_10077F578()
{
  unint64_t result;

  result = qword_1013F1370;
  if (!qword_1013F1370)
  {
    result = swift_getWitnessTable(&unk_100F36210, &type metadata for CRLTransactableError);
    atomic_store(result, (unint64_t *)&qword_1013F1370);
  }
  return result;
}

uint64_t sub_10077F5BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_10077F5CC(void *a1)
{
  double *v1;

  return sub_10077A4E0(a1, v1);
}

uint64_t sub_10077F5D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10077F5F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10077F608()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10077F634(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = objc_msgSend(a1, "layoutForInfo:", *(_QWORD *)(v1 + 32));
  v2();

}

uint64_t sub_10077F688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10077F698(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardItemType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_10077F6EC + 4 * byte_100F090DB[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_10077F720 + 4 * byte_100F090D6[v4]))();
}

uint64_t sub_10077F720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10077F728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10077F730);
  return result;
}

uint64_t sub_10077F73C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10077F744);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_10077F748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10077F750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.CodingKeys()
{
  return &type metadata for CRLBoardItemType.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLBoardItemType.UnknownCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10077F7AC + 4 * byte_100F090E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10077F7CC + 4 * byte_100F090E5[v4]))();
}

_BYTE *sub_10077F7AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10077F7CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10077F7D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10077F7DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10077F7E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10077F7EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.UnknownCodingKeys()
{
  return &type metadata for CRLBoardItemType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.GroupCodingKeys()
{
  return &type metadata for CRLBoardItemType.GroupCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.ShapeCodingKeys()
{
  return &type metadata for CRLBoardItemType.ShapeCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.ConnectionLineCodingKeys()
{
  return &type metadata for CRLBoardItemType.ConnectionLineCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.ImageCodingKeys()
{
  return &type metadata for CRLBoardItemType.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.MovieCodingKeys()
{
  return &type metadata for CRLBoardItemType.MovieCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.FileCodingKeys()
{
  return &type metadata for CRLBoardItemType.FileCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.UrlCodingKeys()
{
  return &type metadata for CRLBoardItemType.UrlCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.UsdzCodingKeys()
{
  return &type metadata for CRLBoardItemType.UsdzCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.FreehandDrawingCodingKeys()
{
  return &type metadata for CRLBoardItemType.FreehandDrawingCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.FreehandDrawingShapeCodingKeys()
{
  return &type metadata for CRLBoardItemType.FreehandDrawingShapeCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.StickyNoteCodingKeys()
{
  return &type metadata for CRLBoardItemType.StickyNoteCodingKeys;
}

unint64_t sub_10077F8BC()
{
  unint64_t result;

  result = qword_1013F13D8;
  if (!qword_1013F13D8)
  {
    result = swift_getWitnessTable(&unk_100F09788, &type metadata for CRLBoardItemType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F13D8);
  }
  return result;
}

unint64_t sub_10077F904()
{
  unint64_t result;

  result = qword_1013F13E0;
  if (!qword_1013F13E0)
  {
    result = swift_getWitnessTable(&unk_100F09840, &type metadata for CRLBoardItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F13E0);
  }
  return result;
}

unint64_t sub_10077F94C()
{
  unint64_t result;

  result = qword_1013F13E8;
  if (!qword_1013F13E8)
  {
    result = swift_getWitnessTable(&unk_100F096F8, &type metadata for CRLBoardItemType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F13E8);
  }
  return result;
}

unint64_t sub_10077F994()
{
  unint64_t result;

  result = qword_1013F13F0;
  if (!qword_1013F13F0)
  {
    result = swift_getWitnessTable(&unk_100F09720, &type metadata for CRLBoardItemType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F13F0);
  }
  return result;
}

unint64_t sub_10077F9DC()
{
  unint64_t result;

  result = qword_1013F13F8;
  if (!qword_1013F13F8)
  {
    result = swift_getWitnessTable(&unk_100F096A8, &type metadata for CRLBoardItemType.GroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F13F8);
  }
  return result;
}

unint64_t sub_10077FA24()
{
  unint64_t result;

  result = qword_1013F1400;
  if (!qword_1013F1400)
  {
    result = swift_getWitnessTable(&unk_100F096D0, &type metadata for CRLBoardItemType.GroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1400);
  }
  return result;
}

unint64_t sub_10077FA6C()
{
  unint64_t result;

  result = qword_1013F1408;
  if (!qword_1013F1408)
  {
    result = swift_getWitnessTable(&unk_100F09658, &type metadata for CRLBoardItemType.ShapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1408);
  }
  return result;
}

unint64_t sub_10077FAB4()
{
  unint64_t result;

  result = qword_1013F1410;
  if (!qword_1013F1410)
  {
    result = swift_getWitnessTable(&unk_100F09680, &type metadata for CRLBoardItemType.ShapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1410);
  }
  return result;
}

unint64_t sub_10077FAFC()
{
  unint64_t result;

  result = qword_1013F1418;
  if (!qword_1013F1418)
  {
    result = swift_getWitnessTable(&unk_100F09608, &type metadata for CRLBoardItemType.ConnectionLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1418);
  }
  return result;
}

unint64_t sub_10077FB44()
{
  unint64_t result;

  result = qword_1013F1420;
  if (!qword_1013F1420)
  {
    result = swift_getWitnessTable(&unk_100F09630, &type metadata for CRLBoardItemType.ConnectionLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1420);
  }
  return result;
}

unint64_t sub_10077FB8C()
{
  unint64_t result;

  result = qword_1013F1428;
  if (!qword_1013F1428)
  {
    result = swift_getWitnessTable(&unk_100F095B8, &type metadata for CRLBoardItemType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1428);
  }
  return result;
}

unint64_t sub_10077FBD4()
{
  unint64_t result;

  result = qword_1013F1430;
  if (!qword_1013F1430)
  {
    result = swift_getWitnessTable(&unk_100F095E0, &type metadata for CRLBoardItemType.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1430);
  }
  return result;
}

unint64_t sub_10077FC1C()
{
  unint64_t result;

  result = qword_1013F1438;
  if (!qword_1013F1438)
  {
    result = swift_getWitnessTable(&unk_100F09568, &type metadata for CRLBoardItemType.MovieCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1438);
  }
  return result;
}

unint64_t sub_10077FC64()
{
  unint64_t result;

  result = qword_1013F1440;
  if (!qword_1013F1440)
  {
    result = swift_getWitnessTable(&unk_100F09590, &type metadata for CRLBoardItemType.MovieCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1440);
  }
  return result;
}

unint64_t sub_10077FCAC()
{
  unint64_t result;

  result = qword_1013F1448;
  if (!qword_1013F1448)
  {
    result = swift_getWitnessTable(&unk_100F09518, &type metadata for CRLBoardItemType.FileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1448);
  }
  return result;
}

unint64_t sub_10077FCF4()
{
  unint64_t result;

  result = qword_1013F1450;
  if (!qword_1013F1450)
  {
    result = swift_getWitnessTable(&unk_100F09540, &type metadata for CRLBoardItemType.FileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1450);
  }
  return result;
}

unint64_t sub_10077FD3C()
{
  unint64_t result;

  result = qword_1013F1458;
  if (!qword_1013F1458)
  {
    result = swift_getWitnessTable(&unk_100F094C8, &type metadata for CRLBoardItemType.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1458);
  }
  return result;
}

unint64_t sub_10077FD84()
{
  unint64_t result;

  result = qword_1013F1460;
  if (!qword_1013F1460)
  {
    result = swift_getWitnessTable(&unk_100F094F0, &type metadata for CRLBoardItemType.UrlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1460);
  }
  return result;
}

unint64_t sub_10077FDCC()
{
  unint64_t result;

  result = qword_1013F1468;
  if (!qword_1013F1468)
  {
    result = swift_getWitnessTable(&unk_100F09478, &type metadata for CRLBoardItemType.UsdzCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1468);
  }
  return result;
}

unint64_t sub_10077FE14()
{
  unint64_t result;

  result = qword_1013F1470;
  if (!qword_1013F1470)
  {
    result = swift_getWitnessTable(&unk_100F094A0, &type metadata for CRLBoardItemType.UsdzCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1470);
  }
  return result;
}

unint64_t sub_10077FE5C()
{
  unint64_t result;

  result = qword_1013F1478;
  if (!qword_1013F1478)
  {
    result = swift_getWitnessTable(&unk_100F09428, &type metadata for CRLBoardItemType.FreehandDrawingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1478);
  }
  return result;
}

unint64_t sub_10077FEA4()
{
  unint64_t result;

  result = qword_1013F1480;
  if (!qword_1013F1480)
  {
    result = swift_getWitnessTable(&unk_100F09450, &type metadata for CRLBoardItemType.FreehandDrawingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1480);
  }
  return result;
}

unint64_t sub_10077FEEC()
{
  unint64_t result;

  result = qword_1013F1488;
  if (!qword_1013F1488)
  {
    result = swift_getWitnessTable(&unk_100F093D8, &type metadata for CRLBoardItemType.FreehandDrawingShapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1488);
  }
  return result;
}

unint64_t sub_10077FF34()
{
  unint64_t result;

  result = qword_1013F1490;
  if (!qword_1013F1490)
  {
    result = swift_getWitnessTable(&unk_100F09400, &type metadata for CRLBoardItemType.FreehandDrawingShapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1490);
  }
  return result;
}

unint64_t sub_10077FF7C()
{
  unint64_t result;

  result = qword_1013F1498;
  if (!qword_1013F1498)
  {
    result = swift_getWitnessTable(&unk_100F09388, &type metadata for CRLBoardItemType.StickyNoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1498);
  }
  return result;
}

unint64_t sub_10077FFC4()
{
  unint64_t result;

  result = qword_1013F14A0;
  if (!qword_1013F14A0)
  {
    result = swift_getWitnessTable(&unk_100F093B0, &type metadata for CRLBoardItemType.StickyNoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F14A0);
  }
  return result;
}

unint64_t sub_10078000C()
{
  unint64_t result;

  result = qword_1013F14A8;
  if (!qword_1013F14A8)
  {
    result = swift_getWitnessTable(&unk_100F097B0, &type metadata for CRLBoardItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F14A8);
  }
  return result;
}

unint64_t sub_100780054()
{
  unint64_t result;

  result = qword_1013F14B0;
  if (!qword_1013F14B0)
  {
    result = swift_getWitnessTable(&unk_100F097D8, &type metadata for CRLBoardItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F14B0);
  }
  return result;
}

id sub_1007800A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v2 + 32) = sub_1007802E4();
  v3 = sub_1007808C8();
  *(_QWORD *)(v2 + 40) = v3;
  v4 = specialized Array._endMutation()(v3);
  v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x268))(v4);
  sub_10061EC3C(v5);
  v6 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v8, "setAxis:", 1);
  if (qword_1013DC8A8 != -1)
    swift_once(&qword_1013DC8A8, sub_1004C5434);
  objc_msgSend(v8, "setSpacing:", *(double *)&qword_10147E6C8);
  return v8;
}

uint64_t sub_1007801F8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1005CBAD0();
  if (!v1)
    return 0;
  return result;
}

id sub_100780230()
{
  id v0;
  char v1;
  unint64_t v2;
  id v3;
  id result;
  id v5;
  uint64_t v6;

  v0 = sub_1005CBC1C();
  if ((v1 & 1) != 0)
    return 0;
  v2 = (unint64_t)v0;
  v3 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
  result = objc_msgSend(v3, "setAllowedUnits:", 0xFFFFLL);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = objc_msgSend(v3, "stringFromByteCount:", v2);
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

    return (id)v6;
  }
  __break(1u);
  return result;
}

id sub_1007802E4()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  Class isa;
  id v8;

  v0 = sub_10078057C();
  if (!v0)
    return sub_100780418();
  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5560;
  v4 = sub_100780418();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v1;
  specialized Array._endMutation()(v4);
  v5 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v6 = v1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v5, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setSpacing:", 2.5);
  objc_msgSend(v8, "setAlignment:", 3);

  return v8;
}

id sub_100780418()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;

  v1 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x1F0))();
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v1, "setFont:", v4);

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "setText:", v5);

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v1, "setTextColor:", v6);

  objc_msgSend(v1, "setTextAlignment:", 1);
  objc_msgSend(v1, "setLineBreakMode:", 5);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  return v1;
}

id sub_10078057C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  NSString v5;
  id v6;

  (*(void (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v3, "setFont:", v4);

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v3, "setText:", v5);

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v3, "setTextColor:", v6);

  objc_msgSend(v3, "setTextAlignment:", 1);
  objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
  return v3;
}

uint64_t sub_1007806D8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_1007807A4()
{
  uint64_t v0;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v0 = swift_allocObject(&unk_10127CAA8, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1007811A8, v0);
}

void sub_100780848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _QWORD *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider);

    (*(void (**)(void))((swift_isaMask & *v5) + 0xD8))();
  }
}

uint64_t sub_1007808C8()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  double v7;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  double height;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  id v33;
  Class isa;
  id v35;
  id v36;
  id v37;
  id v38;
  Class v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  v2 = (char *)v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
  v4 = Strong;
  if (Strong)
  {
    v5 = *((_QWORD *)v2 + 2);
    ObjectType = swift_getObjectType(Strong);
    v7 = (*(double (**)(uint64_t, uint64_t))(v5 + 104))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v7 = 0.0;
  }
  if (qword_1013DCAF8 != -1)
    swift_once(&qword_1013DCAF8, sub_1005BA280);
  if (v7 != *(double *)&qword_10147EAB0 || v4 == 0)
    v9 = 142.0;
  else
    v9 = 122.0;
  v10 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x218))();
  v12 = v11;
  v13 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x220))();
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v15 = sub_1004C85B0(v10, v12, 0, (uint64_t)v14, 0, 1, v13, 0, 6.0);
  swift_bridgeObjectRelease();

  height = UILayoutFittingCompressedSize.height;
  objc_msgSend(v15, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, height);
  v18 = v17;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v20 + 32) = v15;
  v48 = v20;
  specialized Array._endMutation()(v20);
  v21 = v48;
  v22 = v15;
  v23 = sub_100780EC4();
  if (!v23)
    goto LABEL_17;
  v24 = v23;
  objc_msgSend(v23, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, height);
  v26 = v25;
  v27 = v24;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v28 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);

  v21 = v48;
  if (v9 >= v18 && v9 >= v26)
  {
LABEL_17:
    if (qword_1013DC8B0 != -1)
      swift_once(&qword_1013DC8B0, sub_1004C5444);
    v31 = *(double *)&qword_10147E6D0;
    if (qword_1013DC8A0 != -1)
      swift_once(&qword_1013DC8A0, sub_1004C5424);
    v32 = *(double *)&qword_10147E6C0;
    v33 = objc_allocWithZone((Class)UIStackView);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_bridgeObjectRetain(v21);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v35 = objc_msgSend(v33, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v35, "setAxis:", 0);
    objc_msgSend(v35, "setAlignment:", 0);
    objc_msgSend(v35, "setDistribution:", 0);
    objc_msgSend(v35, "setSpacing:", v32);
    v36 = objc_msgSend(v35, "heightAnchor");
    v37 = objc_msgSend(v36, "constraintGreaterThanOrEqualToConstant:", v31);

    objc_msgSend(v37, "setActive:", 1);
    swift_bridgeObjectRelease();

    return (uint64_t)v35;
  }
  v38 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v48);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  v35 = objc_msgSend(v38, "initWithArrangedSubviews:", v39, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v35, "setAxis:", 1);
  if (qword_1013DC8A8 != -1)
    swift_once(&qword_1013DC8A8, sub_1004C5434);
  objc_msgSend(v35, "setSpacing:", *(double *)&qword_10147E6C8);
  if (!((unint64_t)v48 >> 62))
  {
    v40 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(v48, 2);
    if (v40)
      goto LABEL_26;
LABEL_39:

    swift_bridgeObjectRelease_n(v48, 3);
    return (uint64_t)v35;
  }
  if (v48 < 0)
    v47 = v48;
  else
    v47 = v48 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v48, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v47);
  v40 = result;
  if (!result)
    goto LABEL_39;
LABEL_26:
  if (v40 >= 1)
  {
    v42 = 0;
    do
    {
      if ((v48 & 0xC000000000000001) != 0)
        v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v48);
      else
        v43 = *(id *)(v48 + 8 * v42 + 32);
      v44 = v43;
      v45 = objc_msgSend(v43, "heightAnchor");
      if (qword_1013DC8B0 != -1)
        swift_once(&qword_1013DC8B0, sub_1004C5444);
      ++v42;
      v46 = objc_msgSend(v45, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10147E6D0);

      objc_msgSend(v46, "setActive:", 1);
    }
    while (v40 != v42);
    goto LABEL_39;
  }
  __break(1u);
  return result;
}

id sub_100780EC4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t (*v8)(void);

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x228))();
  v3 = v2;
  if (v2)
  {
    v4 = v1;
    v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x230))();
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v7 = sub_1004C85B0(v4, (uint64_t)v3, 0, (uint64_t)v6, 0, 1, v5, 0, 6.0);

    swift_bridgeObjectRelease();
    v8 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x238);
    v3 = v7;
    objc_msgSend(v3, "setEnabled:", v8() & 1);

  }
  return v3;
}

void *sub_100780FC4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100704150();
  if (v0)
    sub_100511EB8(v0);
  v1 = sub_100704150();
  if (v1)
    sub_100511EB8(v1);
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100781048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v9;
  _BYTE v10[32];

  sub_1004CB6E8(a2, (uint64_t)v10);
  v4 = type metadata accessor for CRLMediaItem(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_5;
  v5 = v9;
  v6 = sub_100704150();
  if (!v6)
  {

LABEL_5:
    v7 = sub_1004C9944(a1, a2);
    return v7 & 1;
  }
  v7 = sub_100622190(v5, v6);

  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_100781114()
{
  uint64_t v0;

}

id sub_100781124()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterMediaBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterMediaBuilder()
{
  return objc_opt_self(_TtC8Freeform31CRLiOSMiniFormatterMediaBuilder);
}

uint64_t sub_100781184()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1007811A8(uint64_t a1)
{
  uint64_t v1;

  sub_100780848(a1, v1);
}

uint64_t sub_1007811B0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v9[32];
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  sub_1004CB6E8(a1, (uint64_t)v9);
  v4 = sub_1004B804C(&qword_1013F1548);
  if ((swift_dynamicCast(&v12, v9, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_100757E04(&_mh_execute_header, (uint64_t)"copyStyleFrom(item:to:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 14, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copyStyleFrom(item:to:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 14, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)&v12, (uint64_t)&v10, (uint64_t *)&unk_1013F1550);
  if (!v11)
    return sub_1004CB800((uint64_t)&v10, (uint64_t *)&unk_1013F1550);
  sub_1004DB728(&v10, (uint64_t)&v12);
  v5 = *((_QWORD *)&v13 + 1);
  v6 = v14;
  v7 = sub_1004BB5A4(&v12, *((uint64_t *)&v13 + 1));
  sub_100783D80((uint64_t)v7, a2, v2, v5, v6);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v12);
}

void sub_1007813A0(uint64_t a1, uint64_t a2)
{
  void *v2;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v4 = (unint64_t)objc_msgSend(v2, "boardItemStyleKindsOnPasteboard:", a2);
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v5 = (char *)(v4 - 1);
  if (v4 - 1 <= 5)
  {
    v6 = a1 + 56;
    v7 = 1 << *(_BYTE *)(a1 + 32);
    v8 = -1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    v9 = v8 & *(_QWORD *)(a1 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    swift_bridgeObjectRetain(a1);
    v11 = 0;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      sub_1004B8968(*(_QWORD *)(a1 + 48) + 40 * i, (uint64_t)v27);
      v22[0] = v27[0];
      v22[1] = v27[1];
      v23 = v28;
      v17 = sub_1004B804C(&qword_1013F1548);
      if (!swift_dynamicCast(v20, v22, &type metadata for AnyHashable, v17, 6))
      {
        v21 = 0;
        memset(v20, 0, sizeof(v20));
        swift_release(a1);
        sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013F1550);
        return;
      }
      sub_1004DB728(v20, (uint64_t)v24);
      v18 = v25;
      v19 = v26;
      sub_1004BB5A4(v24, v25);
      if (((*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 32))(v5, v18, v19) & 1) == 0)
      {
        swift_release(a1);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
        return;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v14 >= v10)
        goto LABEL_28;
      v15 = *(_QWORD *)(v6 + 8 * v14);
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_28;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_28;
          v15 = *(_QWORD *)(v6 + 8 * v11);
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_28:
              swift_release(a1);
              return;
            }
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  break;
                if (v11 >= v10)
                  goto LABEL_28;
                v15 = *(_QWORD *)(v6 + 8 * v11);
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
LABEL_31:
              __break(1u);
              return;
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
}

double *sub_100781660(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  _QWORD v22[503];
  uint64_t v23;
  _QWORD v24[6];
  __int128 v25;
  uint64_t v26;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)objc_msgSend(v2, "newReadAssistantWithPasteboard:", a2, v7);
  if (v10)
  {
    v11 = v10;
    v12 = *(void **)&v10[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject];
    if (v12)
    {
      v22[24] = v9;
      v13 = v12;
      v14 = objc_msgSend(v2, "delegate");
      if (v14)
      {
        v15 = v14;
        v22[23] = v6;
        v16 = objc_msgSend(v14, "boardForPasteboardController:", v2);
        swift_unknownObjectRelease(v15);
        v24[5] = _swiftEmptyArrayStorage;
        v17 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
        v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData]
            + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
        swift_beginAccess(v18, &v23, 0, 0);
        sub_1004CB7BC(v18, (uint64_t)&v25, &qword_1013EB9A0);
        if (v26)
        {
          v22[22] = v5;
          v22[25] = v16;
          sub_1004DB728(&v25, (uint64_t)v24);
          v19 = (char *)&loc_1007817E0
              + *((int *)qword_1007833A0
                + *(unsigned __int8 *)(*(_QWORD *)&v13[v17]
                                     + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind));
          v22[21] = v13;
          v22[26] = a1;
          __asm { BR              X10 }
        }

        sub_1004CB800((uint64_t)&v25, &qword_1013EB9A0);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 55, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 55, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
    }
    else
    {
      v20 = v10;
      sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 54, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 54, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 53, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 53, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100783460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  __int128 __src;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[40];
  double *v16;

  v5 = (char *)objc_msgSend(v4, "newReadAssistantWithPasteboard:", a4);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject];
    if (v7)
    {
      v16 = _swiftEmptyArrayStorage;
      v8 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
      v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
         + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
      swift_beginAccess(v9, v14, 0, 0);
      sub_1004CB7BC(v9, (uint64_t)&__src, &qword_1013EB9A0);
      if (v13)
      {
        sub_1004DB728(&__src, (uint64_t)v15);
        __asm { BR              X10 }
      }

      sub_1004CB800((uint64_t)&__src, &qword_1013EB9A0);
      return v16;
    }
    else
    {
      v10 = _swiftEmptyArrayStorage;
      sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 123, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 123, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    }
  }
  else
  {
    v10 = _swiftEmptyArrayStorage;
    sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 122, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  return v10;
}

uint64_t sub_100783D80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  id v18;
  Class isa;
  uint64_t v21;

  v9 = *(_QWORD *)(a4 - 8);
  v10 = __chkstk_darwin(a1);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
  v13 = objc_msgSend(a3, "newCopyAssistantWithPasteboard:", a2);
  v14 = objc_msgSend(v13, "pasteboardObject");
  if (v14)
  {
    v15 = v14;
    sub_1006A0AE8((uint64_t)v12, (uint64_t)v14, a4, a5);
    v16 = objc_msgSend(objc_allocWithZone((Class)CRLContentDescriptionTranslator), "init");
    v17 = sub_100889A4C((uint64_t)v12, v16, a4, a5);
    v18 = v13;
    sub_100C9BC14((uint64_t)v17);
    swift_bridgeObjectRelease();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "setContentDescription:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v18, "copyToPasteboard");
    v13 = v16;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"copyStyleFrom(styledItem:to:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 20, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copyStyleFrom(styledItem:to:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2u, 20, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a4);
}

double *sub_100783FBC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, BOOL *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  Class v17;
  Class v18;
  Class v19;
  double v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double *result;
  void *v33;
  id v34;
  Class isa;
  id v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  double *v40;
  _BYTE v41[24];

  v9 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)CRLBoardItemProviderFactory), "initWithBoardItemFactory:", a1);
  v13 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  if (v13)
    v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  else
    v14 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (v15 >= 1)
      goto LABEL_6;
LABEL_14:
    v39 = a2;
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
        + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
    swift_beginAccess(v26, v41, 0, 0);
    sub_1004CB7BC(v26, (uint64_t)v11, (uint64_t *)&unk_1013F1500);
    v27 = type metadata accessor for CRLWPStorageCRDTData(0);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v11, 1, v27);
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F1500);
    v24 = 0;
    if (v28 == 1)
      goto LABEL_21;
    v29 = sub_10069DF00(a1);
    if (v29)
    {
      v30 = (char *)v29;
      v31 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      result = (double *)swift_allocObject(v31, 40, 7);
      *((_OWORD *)result + 1) = xmmword_100EEF400;
      v33 = *(void **)&v30[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
      if (!v33)
      {
        __break(1u);
        return result;
      }
      *((_QWORD *)result + 4) = v33;
      v40 = result;
      specialized Array._endMutation()(result);
      type metadata accessor for CRLWPStorage();
      v34 = v33;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v36 = objc_msgSend(v12, "providersForBoardItemsFromTextStorages:position:keepHighlights:", isa, v39 & 1, 0.0, 0.0);

      if (v36)
      {
        v37 = sub_1004B804C(&qword_1013F14F8);
        v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

        goto LABEL_21;
      }

    }
LABEL_20:
    v24 = 0;
    goto LABEL_21;
  }
  if (v14 < 0)
    v25 = v14;
  else
    v25 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  v15 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  if (v15 < 1)
    goto LABEL_14;
LABEL_6:
  v16 = (void *)objc_opt_self(CRLIngestibleBoardItemAndDescription);
  type metadata accessor for CRLBoardItem(0);
  v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1004B804C(&qword_1013F14F0);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  v19 = (Class)objc_msgSend(v16, "ingestibleBoardItemAndDescriptionWithBoardItems:descriptions:", v17, v18);

  if (!v19)
  {
    v21 = sub_100784498();
    static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v21);
    v19 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v20 = swift_bridgeObjectRelease().n128_u64[0];
  }
  v22 = objc_msgSend(v12, "styleMappingProvidersForPasteboardBoardItems:", v19, v20);

  if (!v22)
    goto LABEL_20;
  v23 = sub_1004B804C(&qword_1013F14F8);
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

LABEL_21:
  if (a5)
    *a5 = v15 > 0;

  if (v24)
    return (double *)v24;
  else
    return _swiftEmptyArrayStorage;
}

uint64_t sub_10078436C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v5 = *(id *)(a1 + 8 * i + 32);
      v6 = v5;
      ObjectType = swift_getObjectType(v5);
      v8 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLAssetBackedBoardItem);
      if (v8)
        v9 = v8;
      else
        v9 = 0;
      if (v8)
        v10 = v6;
      else
        v10 = 0;
      if (v10)
      {
        v11 = swift_getObjectType(v10);
        (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v11, v9);
      }

    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

unint64_t sub_100784498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F1510;
  if (!qword_1013F1510)
  {
    v1 = objc_opt_self(CRLIngestibleBoardItemAndDescription);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F1510);
  }
  return result;
}

uint64_t sub_1007844D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 144);
  v13 = *(_OWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 168);
  v10 = *(_QWORD *)(a1 + 240);
  sub_1004C4218(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1004C4174(v15, v14, v2, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v8, v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_100784590(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;

  v37 = *(_QWORD *)(a1 + 240);
  v38 = *(_QWORD *)(a1 + 232);
  v35 = *(_QWORD *)(a1 + 256);
  v36 = *(_QWORD *)(a1 + 248);
  v33 = *(_QWORD *)(a1 + 272);
  v34 = *(_QWORD *)(a1 + 264);
  v31 = *(_QWORD *)(a1 + 288);
  v32 = *(_QWORD *)(a1 + 280);
  v25 = *(_OWORD *)(a1 + 296);
  v22 = *(_OWORD *)(a1 + 312);
  v20 = *(_QWORD *)(a1 + 328);
  v17 = *(_QWORD *)(a1 + 336);
  v52 = *(_QWORD *)(a1 + 352);
  v53 = *(_QWORD *)(a1 + 344);
  v50 = *(_QWORD *)(a1 + 368);
  v51 = *(_QWORD *)(a1 + 360);
  v48 = *(_QWORD *)(a1 + 384);
  v49 = *(_QWORD *)(a1 + 376);
  v46 = *(_QWORD *)(a1 + 400);
  v47 = *(_QWORD *)(a1 + 392);
  v30 = *(_OWORD *)(a1 + 408);
  v28 = *(_OWORD *)(a1 + 424);
  v24 = *(_OWORD *)(a1 + 440);
  v21 = *(_QWORD *)(a1 + 456);
  v19 = *(_QWORD *)(a1 + 464);
  v55 = *(_OWORD *)(a1 + 744);
  v56 = *(_OWORD *)(a1 + 728);
  v3 = *(_QWORD *)(a1 + 480);
  v2 = *(_QWORD *)(a1 + 488);
  v5 = *(_QWORD *)(a1 + 496);
  v4 = *(_QWORD *)(a1 + 504);
  v6 = *(_QWORD *)(a1 + 512);
  v7 = *(_QWORD *)(a1 + 520);
  v8 = *(_QWORD *)(a1 + 528);
  v9 = *(_QWORD *)(a1 + 536);
  v10 = *(_QWORD *)(a1 + 544);
  v12 = *(_QWORD *)(a1 + 552);
  v13 = *(_QWORD *)(a1 + 560);
  v14 = *(_QWORD *)(a1 + 568);
  v15 = *(_QWORD *)(a1 + 576);
  v16 = *(_QWORD *)(a1 + 584);
  v23 = *(_QWORD *)(a1 + 600);
  v26 = *(_QWORD *)(a1 + 608);
  v39 = *(_QWORD *)(a1 + 664);
  v40 = *(_QWORD *)(a1 + 672);
  v41 = *(_QWORD *)(a1 + 680);
  v42 = *(_QWORD *)(a1 + 688);
  v43 = *(_QWORD *)(a1 + 696);
  v44 = *(_QWORD *)(a1 + 704);
  v45 = *(_QWORD *)(a1 + 712);
  v54 = *(_QWORD *)(a1 + 720);
  v29 = *(_QWORD *)(a1 + 760);
  v27 = *(_QWORD *)(a1 + 768);
  v18 = *(_BYTE *)(a1 + 616);
  sub_1004C35DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C4174(v38, v37, v36, v35, v34, v33, v32, v31, v25, *((uint64_t *)&v25 + 1), v22, *((uint64_t *)&v22 + 1), v20, v17);
  sub_1004C3718(v53, v52, v51, v50, v49, v48, v47, v46, v30, *((uint64_t *)&v30 + 1), v28, *((uint64_t *)&v28 + 1), v24, *((uint64_t *)&v24 + 1), v21, v19);
  sub_1004C41DC(v3, v2, v5, v4, v6, v7, v8);
  sub_1004C41DC(v9, v10, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  sub_1004C4218(v23, v26, v18);
  sub_1004C4174(v39, v40, v41, v42, v43, v44, v45, v54, v56, *((uint64_t *)&v56 + 1), v55, *((uint64_t *)&v55 + 1), v29, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100784888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8800;
  if (!qword_1013E8800)
  {
    v1 = type metadata accessor for CRLStyledItem(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E8800);
  }
  return result;
}

uint64_t sub_1007848D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 248);
  v14 = *(_QWORD *)(a1 + 240);
  v15 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  v6 = *(_QWORD *)(a1 + 280);
  v7 = *(_QWORD *)(a1 + 288);
  v12 = *(_OWORD *)(a1 + 312);
  v13 = *(_OWORD *)(a1 + 296);
  v11 = *(_OWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 344);
  v9 = *(_QWORD *)(a1 + 352);
  sub_1004C35DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C3718(v15, v14, v2, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1007849E8(void *a1)
{
  bzero(a1, 0x370uLL);
}

uint64_t sub_1007849F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 240);
  v18 = *(_QWORD *)(a1 + 256);
  v19 = *(_QWORD *)(a1 + 248);
  v4 = *(_QWORD *)(a1 + 272);
  v17 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 280);
  v6 = *(_QWORD *)(a1 + 288);
  v14 = *(_OWORD *)(a1 + 296);
  v12 = *(_OWORD *)(a1 + 312);
  v7 = *(_QWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 336);
  v33 = *(_QWORD *)(a1 + 352);
  v34 = *(_QWORD *)(a1 + 344);
  v31 = *(_QWORD *)(a1 + 368);
  v32 = *(_QWORD *)(a1 + 360);
  v29 = *(_QWORD *)(a1 + 384);
  v30 = *(_QWORD *)(a1 + 376);
  v27 = *(_QWORD *)(a1 + 400);
  v28 = *(_QWORD *)(a1 + 392);
  v15 = *(_OWORD *)(a1 + 424);
  v16 = *(_OWORD *)(a1 + 408);
  v13 = *(_OWORD *)(a1 + 440);
  v10 = *(_QWORD *)(a1 + 456);
  v9 = *(_QWORD *)(a1 + 464);
  v25 = *(_QWORD *)(a1 + 488);
  v26 = *(_QWORD *)(a1 + 480);
  v23 = *(_QWORD *)(a1 + 504);
  v24 = *(_QWORD *)(a1 + 496);
  v22 = *(_QWORD *)(a1 + 512);
  v20 = *(_QWORD *)(a1 + 528);
  v21 = *(_QWORD *)(a1 + 520);
  v40 = *(_QWORD *)(a1 + 544);
  v41 = *(_QWORD *)(a1 + 536);
  v38 = *(_QWORD *)(a1 + 560);
  v39 = *(_QWORD *)(a1 + 552);
  v36 = *(_QWORD *)(a1 + 576);
  v37 = *(_QWORD *)(a1 + 568);
  v35 = *(_QWORD *)(a1 + 584);
  sub_1004C35DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C4174(v2, v3, v19, v18, v17, v4, v5, v6, v14, *((uint64_t *)&v14 + 1), v12, *((uint64_t *)&v12 + 1), v7, v8);
  sub_1004C3718(v34, v33, v32, v31, v30, v29, v28, v27, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v13, *((uint64_t *)&v13 + 1), v10, v9);
  sub_1004C41DC(v26, v25, v24, v23, v22, v21, v20);
  sub_1004C41DC(v41, v40, v39, v38, v37, v36, v35);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100784BF4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 592);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_100784C0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 240);
  v18 = *(_QWORD *)(a1 + 256);
  v19 = *(_QWORD *)(a1 + 248);
  v4 = *(_QWORD *)(a1 + 272);
  v17 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 280);
  v6 = *(_QWORD *)(a1 + 288);
  v14 = *(_OWORD *)(a1 + 296);
  v12 = *(_OWORD *)(a1 + 312);
  v7 = *(_QWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 336);
  v33 = *(_QWORD *)(a1 + 352);
  v34 = *(_QWORD *)(a1 + 344);
  v31 = *(_QWORD *)(a1 + 368);
  v32 = *(_QWORD *)(a1 + 360);
  v29 = *(_QWORD *)(a1 + 384);
  v30 = *(_QWORD *)(a1 + 376);
  v27 = *(_QWORD *)(a1 + 400);
  v28 = *(_QWORD *)(a1 + 392);
  v15 = *(_OWORD *)(a1 + 424);
  v16 = *(_OWORD *)(a1 + 408);
  v13 = *(_OWORD *)(a1 + 440);
  v10 = *(_QWORD *)(a1 + 456);
  v9 = *(_QWORD *)(a1 + 464);
  v25 = *(_QWORD *)(a1 + 488);
  v26 = *(_QWORD *)(a1 + 480);
  v23 = *(_QWORD *)(a1 + 504);
  v24 = *(_QWORD *)(a1 + 496);
  v22 = *(_QWORD *)(a1 + 512);
  v20 = *(_QWORD *)(a1 + 528);
  v21 = *(_QWORD *)(a1 + 520);
  v40 = *(_QWORD *)(a1 + 544);
  v41 = *(_QWORD *)(a1 + 536);
  v38 = *(_QWORD *)(a1 + 560);
  v39 = *(_QWORD *)(a1 + 552);
  v36 = *(_QWORD *)(a1 + 576);
  v37 = *(_QWORD *)(a1 + 568);
  v35 = *(_QWORD *)(a1 + 584);
  v42 = *(_QWORD *)(a1 + 592);
  sub_1004C3830(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C485C(v2, v3, v19, v18, v17, v4, v5, v6, v14, *((uint64_t *)&v14 + 1), v12, *((uint64_t *)&v12 + 1), v7, v8);
  sub_1004C396C(v34, v33, v32, v31, v30, v29, v28, v27, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v13, *((uint64_t *)&v13 + 1), v10, v9);
  sub_1004C48C4(v26, v25, v24, v23, v22, v21, v20);
  sub_1004C48C4(v41, v40, v39, v38, v37, v36, v35);
  swift_bridgeObjectRetain(v42);
  return a1;
}

uint64_t destroy for CRLLineEndData(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for CRLLineEndData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 20) = *(uint64_t *)((char *)a2 + 20);
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  v5 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v5;
  v6 = a2[6];
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for CRLLineEndData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4);
  v6 = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[1] = v6;
  *((_DWORD *)a1 + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
  *((_BYTE *)a1 + 28) = *((_BYTE *)a2 + 28);
  a1[4] = a2[4];
  v7 = a2[5];
  v8 = a1[5];
  a1[5] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = a2[6];
  v10 = a1[6];
  a1[6] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t *assignWithTake for CRLLineEndData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *(uint64_t *)((char *)a1 + 20) = *(uint64_t *)((char *)a2 + 20);
  *((_BYTE *)a1 + 28) = *((_BYTE *)a2 + 28);
  a1[4] = a2[4];
  swift_bridgeObjectRelease(a1[5]);
  v5 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLineEndData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLineEndData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLineEndData()
{
  return &type metadata for CRLLineEndData;
}

uint64_t *sub_100785068@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_100785080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100785F90();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1007850DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100785F90();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100785128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100786EDC();
  v7 = sub_100786E50();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100785184(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100786EDC();
  v5 = sub_100785F90();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1007851EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100786EDC();
  v5 = sub_100785F90();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100785244(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_100786EDC();
  v3 = sub_100785F90();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

BOOL sub_100785290(char *a1, char *a2)
{
  return qword_100F0A270[*a1] == qword_100F0A270[*a2];
}

Swift::Int sub_1007852B4()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F0A270[v1]);
  return Hasher._finalize()();
}

void sub_100785300()
{
  char *v0;

  Hasher._combine(_:)(qword_100F0A270[*v0]);
}

Swift::Int sub_100785334(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F0A270[v2]);
  return Hasher._finalize()();
}

uint64_t sub_10078537C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1007863CC(*a1);
  *a2 = result;
  return result;
}

void sub_1007853A4(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F0A270[*v1];
}

uint64_t sub_1007853BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1007853E4 + 4 * byte_100F09CA8[*v0]))(1752457584, 0xE400000000000000);
}

uint64_t sub_1007853E4()
{
  return 0x6E696F4A656E696CLL;
}

uint64_t sub_1007853FC()
{
  return 0x746E696F50646E65;
}

uint64_t sub_100785414()
{
  return 0x64656C6C69467369;
}

uint64_t sub_10078542C()
{
  return 0x696669746E656469;
}

unint64_t sub_100785448()
{
  return 0xD000000000000010;
}

uint64_t sub_100785464@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1007863F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100785488()
{
  char *v0;

  return qword_100F0A270[*v0];
}

uint64_t sub_1007854A0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1007863CC(a1);
  *a2 = result;
  return result;
}

void sub_1007854C4(_QWORD *a1@<X8>)
{
  *a1 = &off_101263B88;
}

uint64_t sub_1007854D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100785CA0();
  v5 = sub_100785CE8();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100785518(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100785CE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100785540(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100785CE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10078556C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _BYTE v25[16];
  _BYTE v26[8];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F1600);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100785CE8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLLineEndData.CodingKeys, &type metadata for CRLLineEndData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v26, &qword_1013F1608);
  sub_1004C4938((uint64_t)v26, (uint64_t)&v23, &qword_1013F1608);
  v24 = 0;
  v12 = sub_100786A6C();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v23, &v24, v5, &type metadata for CRLBezierPathData, v12);
  if (!v2)
  {
    sub_1004C4938(v3 + 8, (uint64_t)v25, &qword_1013F15D0);
    sub_1004C4938((uint64_t)v25, (uint64_t)&v23, &qword_1013F15D0);
    v24 = 1;
    v13 = sub_1004B804C(&qword_1013F15D0);
    v14 = sub_100786AB0(&qword_1013F1618, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v24, v5, v13, v14);
    v23 = *(_QWORD *)(v3 + 20);
    v24 = 2;
    v15 = sub_100786B14();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v24, v5, &type metadata for CRLPointData, v15);
    v16 = *(unsigned __int8 *)(v3 + 28);
    LOBYTE(v23) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v16, &v23, v5);
    v17 = *(_QWORD *)(v3 + 32);
    v18 = *(_QWORD *)(v3 + 40);
    LOBYTE(v23) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v17, v18, &v23, v5);
    v23 = *(_QWORD *)(v3 + 48);
    v24 = 5;
    v19 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v20 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v24, v5, v19, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1007857E4()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1007857EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 48));
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100785814())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100785824(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_100785568(v5, v7) & 1;
}

double sub_10078587C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_10078666C(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1007858C8(_QWORD *a1)
{
  return sub_10078556C(a1);
}

uint64_t sub_100785908(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100786B58();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100785948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100785B38();
  v7 = sub_100786B9C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1007859A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100786B58();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1007859DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100785E10();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100785A28(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100785E10();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100785A6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100785E10();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100785AA8()
{
  unint64_t result;

  result = qword_1013F1560;
  if (!qword_1013F1560)
  {
    result = swift_getWitnessTable("%07", &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1560);
  }
  return result;
}

unint64_t sub_100785AF0()
{
  unint64_t result;

  result = qword_1013F1568;
  if (!qword_1013F1568)
  {
    result = swift_getWitnessTable(&unk_100F09D1C, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1568);
  }
  return result;
}

unint64_t sub_100785B38()
{
  unint64_t result;

  result = qword_1013F1570;
  if (!qword_1013F1570)
  {
    result = swift_getWitnessTable(&unk_100F09DCC, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1570);
  }
  return result;
}

unint64_t sub_100785B80()
{
  unint64_t result;

  result = qword_1013F1578;
  if (!qword_1013F1578)
  {
    result = swift_getWitnessTable(&unk_100F09DA4, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1578);
  }
  return result;
}

unint64_t sub_100785BC8()
{
  unint64_t result;

  result = qword_1013F1580;
  if (!qword_1013F1580)
  {
    result = swift_getWitnessTable(&unk_100F09D7C, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1580);
  }
  return result;
}

unint64_t sub_100785C10()
{
  unint64_t result;

  result = qword_1013F1588;
  if (!qword_1013F1588)
  {
    result = swift_getWitnessTable(&unk_100F09E4C, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1588);
  }
  return result;
}

unint64_t sub_100785C58()
{
  unint64_t result;

  result = qword_1013F1590;
  if (!qword_1013F1590)
  {
    result = swift_getWitnessTable(&unk_100F09F5C, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1590);
  }
  return result;
}

unint64_t sub_100785CA0()
{
  unint64_t result;

  result = qword_1013F1598;
  if (!qword_1013F1598)
  {
    result = swift_getWitnessTable(&unk_100F09F24, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1598);
  }
  return result;
}

unint64_t sub_100785CE8()
{
  unint64_t result;

  result = qword_1013F15A0;
  if (!qword_1013F15A0)
  {
    result = swift_getWitnessTable(&unk_100F09E84, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F15A0);
  }
  return result;
}

unint64_t sub_100785D30()
{
  unint64_t result;

  result = qword_1013F15A8;
  if (!qword_1013F15A8)
  {
    result = swift_getWitnessTable(&unk_100F09EFC, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F15A8);
  }
  return result;
}

unint64_t sub_100785D78()
{
  unint64_t result;

  result = qword_1013F15B0;
  if (!qword_1013F15B0)
  {
    result = swift_getWitnessTable(&unk_100F09ED4, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F15B0);
  }
  return result;
}

unint64_t sub_100785DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F15B8;
  if (!qword_1013F15B8)
  {
    v1 = sub_1004CB6A4(&qword_1013F15C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F15B8);
  }
  return result;
}

unint64_t sub_100785E10()
{
  unint64_t result;

  result = qword_1013F15C8;
  if (!qword_1013F15C8)
  {
    result = swift_getWitnessTable(&unk_100F09E04, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F15C8);
  }
  return result;
}

uint64_t sub_100785E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v14[16];
  _BYTE v15[16];
  _BYTE v16[16];
  _BYTE v17[16];

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  if (v4)
  {
    if (!v5 || (sub_100544C38(v4, v5) & 1) == 0)
      goto LABEL_10;
  }
  else if (v5)
  {
LABEL_10:
    v7 = 0;
    return v7 & 1;
  }
  sub_1004C4938(a1 + 8, (uint64_t)v17, &qword_1013F15D0);
  sub_1004C4938((uint64_t)v17, (uint64_t)v15, &qword_1013F15D0);
  sub_1004C4938(a2 + 8, (uint64_t)v16, &qword_1013F15D0);
  sub_1004C4938((uint64_t)v16, (uint64_t)v14, &qword_1013F15D0);
  v6 = sub_100785F90();
  if ((static CRExtensible.== infix(_:_:)(v15, v14, &type metadata for CRLLineEndData.JoinType, v6, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0|| *(float *)(a1 + 20) != *(float *)(a2 + 20)|| *(float *)(a1 + 24) != *(float *)(a2 + 24)|| ((*(unsigned __int8 *)(a1 + 28) ^ *(unsigned __int8 *)(a2 + 28)) & 1) != 0)
  {
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  if (v9 == v11 && v10 == v12
    || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v11, v12, 0), v7 = 0, (v13 & 1) != 0))
  {
    v7 = sub_100C9E04C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48));
  }
  return v7 & 1;
}

unint64_t sub_100785F90()
{
  unint64_t result;

  result = qword_1013F15D8;
  if (!qword_1013F15D8)
  {
    result = swift_getWitnessTable(&unk_100F0A238, &type metadata for CRLLineEndData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F15D8);
  }
  return result;
}

id sub_100785FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  NSString v13;
  id v14;
  _BYTE v16[16];
  _BYTE v17[16];

  v2 = v1;
  sub_1004C4938(a1 + 8, (uint64_t)v16, &qword_1013F15D0);
  sub_1004C4938((uint64_t)v16, (uint64_t)v17, &qword_1013F15D0);
  if ((v17[8] & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2, 85, "Tried to decode unknown line end line join value. Falling back to unarchiving miter.", 84, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2u, 85, (uint64_t)"Tried to decode unknown line end line join value. Falling back to unarchiving miter.", 84, 2u);
    v5 = 0;
    v6 = *(id *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_6;
    goto LABEL_5;
  }
  v5 = v17[0];
  v6 = *(id *)a1;
  if (*(_QWORD *)a1)
  {
LABEL_5:
    sub_1006D12C4();
    v7 = swift_bridgeObjectRetain(v6);
    v6 = sub_100942548(v7, v8);
  }
LABEL_6:
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2, v4));
  v10 = *(float *)(a1 + 20);
  v11 = *(float *)(a1 + 24);
  v12 = *(unsigned __int8 *)(a1 + 28);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v9, "initWithBezierPath:wrapPath:endPoint:isFilled:identifier:lineJoin:", v6, 0, v12, v13, v5, v10, v11);

  return v14;
}

void sub_100786178(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  double v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  double v11;
  float v12;
  double v13;
  float v14;
  unsigned __int8 v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v4 = objc_msgSend(a1, "path");
  if (v4)
  {
    v6 = swift_allocObject(&unk_10127CB98, 24, 7);
    *(_QWORD *)(v6 + 16) = _swiftEmptyArrayStorage;
    aBlock[4] = sub_100786C04;
    v21 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100933E14;
    aBlock[3] = &unk_10127CBB0;
    v7 = _Block_copy(aBlock);
    v8 = v21;
    swift_retain(v6);
    objc_msgSend(v4, "iteratePathElementsWithBlock:", v7, swift_release(v8).n128_f64[0]);

    _Block_release(v7);
    swift_beginAccess(v6 + 16, aBlock, 0, 0);
    v4 = *(id *)(v6 + 16);
    swift_bridgeObjectRetain(v4);
    *(_QWORD *)&v5 = swift_release(v6).n128_u64[0];
  }
  v9 = objc_msgSend(a1, "lineJoin", v5);
  if (v9 >= 3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2, 62, "Unknown line end line type. Falling back to archiving miter.", 60, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2u, 62, (uint64_t)"Unknown line end line type. Falling back to archiving miter.", 60, 2u);
    v10 = 0;
  }
  else
  {
    v10 = v9;
  }
  objc_msgSend(a1, "endPoint");
  v12 = v11;
  v14 = v13;
  v15 = objc_msgSend(a1, "isFilled");
  v16 = objc_msgSend(a1, "identifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = 0;
  *(float *)(a2 + 20) = v12;
  *(float *)(a2 + 24) = v14;
  *(_BYTE *)(a2 + 28) = v15;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1007863CC(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 6)
    return 6;
  else
    return (0x40302010005uLL >> (8 * (a1 + 1)));
}

uint64_t sub_1007863F4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 1752457584 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1752457584, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E696F4A656E696CLL && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696F4A656E696CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x746E696F50646E65 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E696F50646E65, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x64656C6C69467369 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64656C6C69467369, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v10 = 0xEA00000000007265;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_10078666C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  char v33;

  v5 = sub_1004B804C(&qword_1013F15E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100785CE8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLLineEndData.CodingKeys, &type metadata for CRLLineEndData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = 0;
    v12 = sub_1007869E4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLBezierPathData, &v33, v5, &type metadata for CRLBezierPathData, v12);
    v13 = v31;
    v14 = sub_1004B804C(&qword_1013F15D0);
    v33 = 1;
    v15 = sub_100786AB0(&qword_1013F15F0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    swift_bridgeObjectRetain(v13);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v33, v5, v14, v15);
    v30 = v31;
    v16 = v32;
    v33 = 2;
    v17 = sub_100786A28();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v33, v5, &type metadata for CRLPointData, v17);
    v29 = v16;
    v18 = v31;
    LOBYTE(v31) = 3;
    v28 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    LOBYTE(v31) = 4;
    v19 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    v21 = v20;
    v27 = v19;
    v22 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v33 = 5;
    v23 = sub_1004F3130();
    swift_bridgeObjectRetain(v21);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v22, &v33, v5, v22, v23);
    v28 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v24 = v31;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v30;
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v25;
    *(_BYTE *)(a2 + 16) = v29;
    *(_QWORD *)(a2 + 20) = v18;
    *(_BYTE *)(a2 + 28) = v28;
    *(_QWORD *)(a2 + 32) = v27;
    *(_QWORD *)(a2 + 40) = v21;
    *(_QWORD *)(a2 + 48) = v24;
  }
}

unint64_t sub_1007869E4()
{
  unint64_t result;

  result = qword_1013F15E8;
  if (!qword_1013F15E8)
  {
    result = swift_getWitnessTable(&unk_100F1AA4C, &type metadata for CRLBezierPathData);
    atomic_store(result, (unint64_t *)&qword_1013F15E8);
  }
  return result;
}

unint64_t sub_100786A28()
{
  unint64_t result;

  result = qword_1013F15F8;
  if (!qword_1013F15F8)
  {
    result = swift_getWitnessTable(&unk_100F10EE4, &type metadata for CRLPointData);
    atomic_store(result, (unint64_t *)&qword_1013F15F8);
  }
  return result;
}

unint64_t sub_100786A6C()
{
  unint64_t result;

  result = qword_1013F1610;
  if (!qword_1013F1610)
  {
    result = swift_getWitnessTable(&unk_100F1AA24, &type metadata for CRLBezierPathData);
    atomic_store(result, (unint64_t *)&qword_1013F1610);
  }
  return result;
}

uint64_t sub_100786AB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_1013F15D0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100786B14()
{
  unint64_t result;

  result = qword_1013F1620;
  if (!qword_1013F1620)
  {
    result = swift_getWitnessTable(&unk_100F10EBC, &type metadata for CRLPointData);
    atomic_store(result, (unint64_t *)&qword_1013F1620);
  }
  return result;
}

unint64_t sub_100786B58()
{
  unint64_t result;

  result = qword_1013F1628;
  if (!qword_1013F1628)
  {
    result = swift_getWitnessTable(&unk_100F09FAC, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1628);
  }
  return result;
}

unint64_t sub_100786B9C()
{
  unint64_t result;

  result = qword_1013F1630;
  if (!qword_1013F1630)
  {
    result = swift_getWitnessTable(&unk_100F09F84, &type metadata for CRLLineEndData);
    atomic_store(result, (unint64_t *)&qword_1013F1630);
  }
  return result;
}

uint64_t sub_100786BE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100786C04(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;

  sub_100942768(a1, v7, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100786C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100786C1C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLLineEndData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100786C70 + 4 * byte_100F09CB3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100786CA4 + 4 * byte_100F09CAE[v4]))();
}

uint64_t sub_100786CA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100786CAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100786CB4);
  return result;
}

uint64_t sub_100786CC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100786CC8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100786CCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100786CD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLLineEndData.CodingKeys()
{
  return &type metadata for CRLLineEndData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLLineEndData.JoinType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100786D3C + 4 * byte_100F09CBD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100786D70 + 4 * byte_100F09CB8[v4]))();
}

uint64_t sub_100786D70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100786D78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100786D80);
  return result;
}

uint64_t sub_100786D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100786D94);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100786D98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100786DA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLLineEndData.JoinType()
{
  return &type metadata for CRLLineEndData.JoinType;
}

unint64_t sub_100786DC0()
{
  unint64_t result;

  result = qword_1013F1638;
  if (!qword_1013F1638)
  {
    result = swift_getWitnessTable(&unk_100F0A000, &type metadata for CRLLineEndData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F1638);
  }
  return result;
}

unint64_t sub_100786E08()
{
  unint64_t result;

  result = qword_1013F1640;
  if (!qword_1013F1640)
  {
    result = swift_getWitnessTable(&unk_100F0A048, &type metadata for CRLLineEndData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F1640);
  }
  return result;
}

unint64_t sub_100786E50()
{
  unint64_t result;

  result = qword_1013F1648;
  if (!qword_1013F1648)
  {
    result = swift_getWitnessTable(&unk_100F0A170, &type metadata for CRLLineEndData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F1648);
  }
  return result;
}

unint64_t sub_100786E98()
{
  unint64_t result;

  result = qword_1013F1650;
  if (!qword_1013F1650)
  {
    result = swift_getWitnessTable(&unk_100F0A210, &type metadata for CRLLineEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1650);
  }
  return result;
}

unint64_t sub_100786EDC()
{
  unint64_t result;

  result = qword_1013F1658;
  if (!qword_1013F1658)
  {
    result = swift_getWitnessTable(&unk_100F0A0F8, &type metadata for CRLLineEndData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F1658);
  }
  return result;
}

uint64_t sub_100786F20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  int64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  double *v30;

  v26 = type metadata accessor for CRLDisjointPosition.Element(0);
  v2 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v30 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a1);
    sub_1006006EC(0, v5, 0);
    v7 = *(unsigned __int8 *)(v2 + 80);
    v25 = a1;
    v8 = a1 + ((v7 + 32) & ~v7);
    v9 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_100788B94(v8, (uint64_t)v4);
      v28 = 40;
      v29 = 0xE100000000000000;
      v27 = *v4;
      v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = 8236;
      v11._object = (void *)0xE200000000000000;
      String.append(_:)(v11);
      v12 = type metadata accessor for UUID(0);
      v13 = sub_1004B7878(&qword_1013E49E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v12, v13);
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      v15._countAndFlagsBits = 41;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      v17 = v28;
      v16 = v29;
      sub_100788BD8((uint64_t)v4);
      v6 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
      {
        sub_1006006EC(0, *((_QWORD *)v6 + 2) + 1, 1);
        v6 = v30;
      }
      v19 = *((_QWORD *)v6 + 2);
      v18 = *((_QWORD *)v6 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_1006006EC(v18 > 1, v19 + 1, 1);
        v6 = v30;
      }
      *((_QWORD *)v6 + 2) = v19 + 1;
      v20 = &v6[2 * v19];
      *((_QWORD *)v20 + 4) = v17;
      *((_QWORD *)v20 + 5) = v16;
      v8 += v9;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  v28 = (uint64_t)v6;
  v21 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v22 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v21, v22);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10078718C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;

  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 8236;
  v1._object = (void *)0xE200000000000000;
  String.append(_:)(v1);
  type metadata accessor for CRLDisjointPosition.Element(0);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878(&qword_1013E49E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 40;
}

uint64_t sub_100787274(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[2];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F17C0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100788B0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLDisjointPosition.Element.CodingKeys, &type metadata for CRLDisjointPosition.Element.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v18[1] = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12);
  if (!v2)
  {
    v13 = (char *)v3 + *(int *)(type metadata accessor for CRLDisjointPosition.Element(0) + 20);
    v18[0] = 1;
    v14 = type metadata accessor for UUID(0);
    v15 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v13, v18, v5, v14, v15);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1007873C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v26 = a2;
  v29 = type metadata accessor for UUID(0);
  v27 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1004B804C(&qword_1013F17B0);
  v5 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLDisjointPosition.Element(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v11 = a1[4];
  sub_1004BB5A4(a1, v12);
  v13 = sub_100788B0C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLDisjointPosition.Element.CodingKeys, &type metadata for CRLDisjointPosition.Element.CodingKeys, v13, v12, v11);
  if (!v2)
  {
    v25 = v8;
    v15 = v28;
    v14 = v29;
    v32 = 0;
    v16 = v30;
    v17 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v30);
    v24 = v10;
    *v10 = v17;
    v31 = 1;
    v18 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = v14;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v31, v16, v14, v18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
    v20 = v26;
    v21 = (uint64_t)v24;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v24 + *(int *)(v25 + 20), v15, v19);
    sub_100788B50(v21, v20);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

uint64_t sub_1007875F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1004B804C(&qword_1013F16E8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100787F48();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLDisjointPosition.CodingKeys, &type metadata for CRLDisjointPosition.CodingKeys, v10, v8, v9);
  v16 = a2;
  v11 = sub_1004B804C(&qword_1013F16D0);
  v12 = sub_100788598(&qword_1013F16F0, &qword_1013F16F8, (uint64_t)&unk_100F0A764, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v16, v13, v4, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100787718()
{
  _BYTE *v0;

  if (*v0)
    return 0x797469746E656469;
  else
    return 0x7865646E69;
}

uint64_t sub_100787750@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100788328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100787774(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100788B0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10078779C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100788B0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007877C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  if (*a1 == *a2)
    return static UUID.< infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
  else
    return *a1 < *a2;
}

BOOL sub_1007877EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char v3;

  if (*a2 == *a1)
    v3 = static UUID.< infix(_:_:)((char *)a2 + *(int *)(a3 + 20), (char *)a1 + *(int *)(a3 + 20));
  else
    v3 = *a2 < *a1;
  return (v3 & 1) == 0;
}

BOOL sub_100787830(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char v3;

  if (*a1 == *a2)
    v3 = static UUID.< infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
  else
    v3 = *a1 < *a2;
  return (v3 & 1) == 0;
}

uint64_t sub_100787870(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  if (*a2 == *a1)
    return static UUID.< infix(_:_:)((char *)a2 + *(int *)(a3 + 20), (char *)a1 + *(int *)(a3 + 20));
  else
    return *a2 < *a1;
}

uint64_t sub_10078789C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007873C8(a1, a2);
}

uint64_t sub_1007878B0(_QWORD *a1)
{
  return sub_100787274(a1);
}

uint64_t sub_1007878C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  __chkstk_darwin(a1);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  v11 = *v10;
  v13 = *v12;
  sub_100788B94((uint64_t)v10, (uint64_t)&v16 - v8);
  sub_100788B94(a2, (uint64_t)v6);
  if (v11 == v13)
    v14 = static UUID.== infix(_:_:)(&v9[*(int *)(a3 + 20)]);
  else
    v14 = 0;
  sub_100788BD8((uint64_t)v6);
  sub_100788BD8((uint64_t)v9);
  return v14 & 1;
}

uint64_t sub_100787998(uint64_t *a1, uint64_t *a2)
{
  return sub_100788048(*a1, *a2);
}

BOOL sub_1007879A4(uint64_t *a1, uint64_t *a2)
{
  return (sub_100788048(*a2, *a1) & 1) == 0;
}

BOOL sub_1007879CC(uint64_t *a1, uint64_t *a2)
{
  return (sub_100788048(*a1, *a2) & 1) == 0;
}

uint64_t sub_1007879F0(uint64_t *a1, uint64_t *a2)
{
  return sub_100788048(*a2, *a1);
}

uint64_t sub_100787A00()
{
  uint64_t *v0;

  return sub_100786F20(*v0);
}

_QWORD *sub_100787A08@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100788410(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_100787A30(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1007875F4(a1, *v1);
}

uint64_t sub_100787A48(uint64_t *a1, uint64_t *a2)
{
  return sub_100546178(*a1, *a2);
}

_QWORD *sub_100787A54@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_100787A68()
{
  return 0x73746E656D656C65;
}

uint64_t sub_100787A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease(0xE800000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73746E656D656C65, 0xE800000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100787B14()
{
  return 0;
}

uint64_t sub_100787B20@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

void sub_100787B30(_QWORD *a1@<X8>)
{
  *a1 = &off_101263EF0;
}

uint64_t sub_100787B40(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100787F00();
  v5 = sub_100787F48();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100787B84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100787F48();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100787BAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100787F48();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100787BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100787BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100787D98();
  v7 = sub_10078861C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100787C3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100788660();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100787C88(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100788660();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100787CCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100788660();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100787D08()
{
  unint64_t result;

  result = qword_1013F1660;
  if (!qword_1013F1660)
  {
    result = swift_getWitnessTable(&unk_100F0A2B4, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1660);
  }
  return result;
}

unint64_t sub_100787D50()
{
  unint64_t result;

  result = qword_1013F1668;
  if (!qword_1013F1668)
  {
    result = swift_getWitnessTable(&unk_100F0A2FC, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1668);
  }
  return result;
}

unint64_t sub_100787D98()
{
  unint64_t result;

  result = qword_1013F1670;
  if (!qword_1013F1670)
  {
    result = swift_getWitnessTable(&unk_100F0A35C, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1670);
  }
  return result;
}

unint64_t sub_100787DE0()
{
  unint64_t result;

  result = qword_1013F1678;
  if (!qword_1013F1678)
  {
    result = swift_getWitnessTable(&unk_100F0A53C, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1678);
  }
  return result;
}

unint64_t sub_100787E28()
{
  unint64_t result;

  result = qword_1013F1680;
  if (!qword_1013F1680)
  {
    result = swift_getWitnessTable(&unk_100F0A514, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1680);
  }
  return result;
}

unint64_t sub_100787E70()
{
  unint64_t result;

  result = qword_1013F1688;
  if (!qword_1013F1688)
  {
    result = swift_getWitnessTable(&unk_100F0A3DC, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1688);
  }
  return result;
}

unint64_t sub_100787EB8()
{
  unint64_t result;

  result = qword_1013F1690;
  if (!qword_1013F1690)
  {
    result = swift_getWitnessTable(&unk_100F0A4EC, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1690);
  }
  return result;
}

unint64_t sub_100787F00()
{
  unint64_t result;

  result = qword_1013F1698;
  if (!qword_1013F1698)
  {
    result = swift_getWitnessTable(&unk_100F0A4B4, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F1698);
  }
  return result;
}

unint64_t sub_100787F48()
{
  unint64_t result;

  result = qword_1013F16A0;
  if (!qword_1013F16A0)
  {
    result = swift_getWitnessTable(&unk_100F0A414, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F16A0);
  }
  return result;
}

unint64_t sub_100787F90()
{
  unint64_t result;

  result = qword_1013F16A8;
  if (!qword_1013F16A8)
  {
    result = swift_getWitnessTable(&unk_100F0A48C, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F16A8);
  }
  return result;
}

unint64_t sub_100787FD8()
{
  unint64_t result;

  result = qword_1013F16B0;
  if (!qword_1013F16B0)
  {
    result = swift_getWitnessTable(&unk_100F0A464, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F16B0);
  }
  return result;
}

uint64_t sub_10078801C()
{
  return sub_1004CBA30(&qword_1013F16B8, &qword_1013F16C0, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_100788048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = type metadata accessor for CRLDisjointPosition.Element(0);
  v4 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - v8;
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v31 - v11);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v31 - v14);
  __chkstk_darwin(v16);
  v36 = (uint64_t)&v31 - v17;
  v33 = sub_1004B804C(&qword_1013F17C8);
  __chkstk_darwin(v33);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 16);
  v35 = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v34 = v20;
  if (v20)
  {
    v21 = 0;
    v22 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v31 = *(_QWORD *)(v4 + 72);
    while (1)
    {
      result = sub_100788B94(v35 + v22, v36);
      v24 = *(_QWORD *)(a2 + 16);
      if (v21 == v24)
      {
        sub_100788BD8(v36);
        goto LABEL_10;
      }
      if (v21 >= v24)
      {
        __break(1u);
        return result;
      }
      v25 = a2;
      v26 = (uint64_t)&v19[*(int *)(v33 + 48)];
      sub_100788B50(v36, (uint64_t)v19);
      sub_100788B94(a2 + v22, v26);
      sub_100788B50((uint64_t)v19, (uint64_t)v15);
      sub_100788B50(v26, (uint64_t)v12);
      v27 = *v15;
      v28 = *v12;
      sub_100788B94((uint64_t)v15, (uint64_t)v9);
      sub_100788B94((uint64_t)v12, (uint64_t)v6);
      if (v27 != v28)
        break;
      v29 = static UUID.== infix(_:_:)(&v9[*(int *)(v32 + 20)]);
      sub_100788BD8((uint64_t)v6);
      sub_100788BD8((uint64_t)v9);
      if ((v29 & 1) == 0)
        goto LABEL_12;
      ++v21;
      sub_100788BD8((uint64_t)v12);
      sub_100788BD8((uint64_t)v15);
      v22 += v31;
      a2 = v25;
      if (v34 == v21)
        goto LABEL_10;
    }
    sub_100788BD8((uint64_t)v6);
    sub_100788BD8((uint64_t)v9);
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*v15 == *v12)
      v30 = static UUID.< infix(_:_:)((char *)v15 + *(int *)(v32 + 20), (char *)v12 + *(int *)(v32 + 20));
    else
      v30 = *v15 < *v12;
    sub_100788BD8((uint64_t)v12);
    sub_100788BD8((uint64_t)v15);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v34 < *(_QWORD *)(a2 + 16);
  }
  return v30 & 1;
}

uint64_t sub_100788328(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7865646E69, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x797469746E656469, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_100788410(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v3 = sub_1004B804C(&qword_1013F16C8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_1004BB5A4(a1, v7);
  v10 = sub_100787F48();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLDisjointPosition.CodingKeys, &type metadata for CRLDisjointPosition.CodingKeys, v10, v7, v8);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v11 = sub_1004B804C(&qword_1013F16D0);
    v12 = sub_100788598(&qword_1013F16D8, &qword_1013F16E0, (uint64_t)&unk_100F0A78C, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = (_QWORD *)v15[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return v9;
}

uint64_t type metadata accessor for CRLDisjointPosition.Element(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F1768;
  if (!qword_1013F1768)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLDisjointPosition.Element);
  return result;
}

uint64_t sub_100788598(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_1004CB6A4(&qword_1013F16D0);
    sub_1004B7878(a2, type metadata accessor for CRLDisjointPosition.Element, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10078861C()
{
  unint64_t result;

  result = qword_1013F1700;
  if (!qword_1013F1700)
  {
    result = swift_getWitnessTable(&unk_100F0A73C, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1700);
  }
  return result;
}

unint64_t sub_100788660()
{
  unint64_t result;

  result = qword_1013F1708;
  if (!qword_1013F1708)
  {
    result = swift_getWitnessTable(&unk_100F0A394, &type metadata for CRLDisjointPosition);
    atomic_store(result, (unint64_t *)&qword_1013F1708);
  }
  return result;
}

uint64_t *sub_1007886A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10078872C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_100788764(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1007887C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_10078881C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100788878(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1007888D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007888E0);
}

uint64_t sub_1007888E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_100788920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10078892C);
}

uint64_t sub_10078892C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_100788970(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLDisjointPosition.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100788A28 + 4 * byte_100F0A2A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100788A48 + 4 * byte_100F0A2A5[v4]))();
}

_BYTE *sub_100788A28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100788A48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100788A50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100788A58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100788A60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100788A68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLDisjointPosition.CodingKeys()
{
  return &type metadata for CRLDisjointPosition.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLDisjointPosition()
{
  return &type metadata for CRLDisjointPosition;
}

unint64_t sub_100788A9C()
{
  unint64_t result;

  result = qword_1013F17A0;
  if (!qword_1013F17A0)
  {
    result = swift_getWitnessTable(&unk_100F0A67C, &type metadata for CRLDisjointPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F17A0);
  }
  return result;
}

uint64_t sub_100788AE0()
{
  return sub_1004B7878(&qword_1013F17A8, type metadata accessor for CRLDisjointPosition.Element, (uint64_t)&unk_100F0A6A4);
}

unint64_t sub_100788B0C()
{
  unint64_t result;

  result = qword_1013F17B8;
  if (!qword_1013F17B8)
  {
    result = swift_getWitnessTable(&unk_100F0A86C, &type metadata for CRLDisjointPosition.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F17B8);
  }
  return result;
}

uint64_t sub_100788B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLDisjointPosition.Element(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100788B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLDisjointPosition.Element(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100788BD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLDisjointPosition.Element(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for CRLDisjointPosition.Element.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100788C60 + 4 * byte_100F0A2AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100788C94 + 4 * byte_100F0A2AA[v4]))();
}

uint64_t sub_100788C94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100788C9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100788CA4);
  return result;
}

uint64_t sub_100788CB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100788CB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100788CBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100788CC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLDisjointPosition.Element.CodingKeys()
{
  return &type metadata for CRLDisjointPosition.Element.CodingKeys;
}

unint64_t sub_100788CE4()
{
  unint64_t result;

  result = qword_1013F17D0;
  if (!qword_1013F17D0)
  {
    result = swift_getWitnessTable(&unk_100F0A844, &type metadata for CRLDisjointPosition.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F17D0);
  }
  return result;
}

unint64_t sub_100788D2C()
{
  unint64_t result;

  result = qword_1013F17D8;
  if (!qword_1013F17D8)
  {
    result = swift_getWitnessTable(&unk_100F0A7B4, &type metadata for CRLDisjointPosition.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F17D8);
  }
  return result;
}

unint64_t sub_100788D74()
{
  unint64_t result;

  result = qword_1013F17E0;
  if (!qword_1013F17E0)
  {
    result = swift_getWitnessTable(&unk_100F0A7DC, &type metadata for CRLDisjointPosition.Element.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F17E0);
  }
  return result;
}

uint64_t sub_100789118()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013F184C);
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_10078915C;
  return sub_100789518();
}

uint64_t sub_10078915C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 96);
  v3 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1007891C8, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1007891C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 88) = v1;
  swift_errorRetain(v1);
  v4 = sub_1004B804C(&qword_1013E0210);
  v5 = String.init<A>(describing:)(v0 + 88, v4);
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  sub_100757E04(&_mh_execute_header, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 55, "Unable to create CRLFileItem: %@", 32, 2u, inited);
  sub_1004F5394(inited, (uint64_t)"importBoardItem()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2u, 55, (uint64_t)"Unable to create CRLFileItem: %@", 32, 2u);
  swift_bridgeObjectRelease();
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100789428(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1013F18DC;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1007894A8;
  v6 = (_QWORD *)swift_task_alloc(dword_1013F184C);
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_10078915C;
  return sub_100789518();
}

uint64_t sub_1007894A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (**v6)(_QWORD);

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 24);
  v2 = *(_QWORD *)(*v0 + 32);
  v4 = *(void **)(*v0 + 16);
  v5 = *v0;
  swift_task_dealloc(v2);

  if (v3)
  {
    v6 = *(void (***)(_QWORD))(v1 + 24);
    v6[2](v6);
    _Block_release(v6);
  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_100789518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v1 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100789574, 0, 0);
}

uint64_t sub_100789574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  char isCancelled;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask);
  if (v3)
  {
    v4 = swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask));
    isCancelled = swift_task_isCancelled(v4);
    swift_release(v3);
    if ((isCancelled & 1) != 0)
    {
    }
    v6 = *(_QWORD *)(v1 + v2);
    if (v6)
    {
      swift_retain(*(_QWORD *)(v1 + v2));
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v6);
    }
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject(&unk_10127D2C8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = (_QWORD *)swift_allocObject(&unk_10127D368, 40, 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  v11 = sub_100595ACC(v7, (uint64_t)&unk_1013F18C0, (uint64_t)v10);
  sub_1004CB800(v7, &qword_1013E01F0);
  v12 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v11;
  swift_release(v12);
  v13 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 56) = v13;
  if (v13)
  {
    v14 = async function pointer to Task.result.getter[1];
    swift_retain(v13);
    v15 = (_QWORD *)swift_task_alloc(v14);
    *(_QWORD *)(v0 + 64) = v15;
    v16 = sub_1004B804C(&qword_1013E0210);
    *(_QWORD *)(v0 + 72) = v16;
    *v15 = v0;
    v15[1] = sub_1007897E8;
    return Task.result.getter(v0 + 16, v13, (char *)&type metadata for () + 8, v16, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007897E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  swift_release(v1);
  return swift_task_switch(sub_100789844, 0, 0);
}

uint64_t sub_100789844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 16);
    swift_willThrowTypedImpl(v0 + 32, v1, &protocol self-conformance witness table for Error);
    swift_task_dealloc(v2);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007898B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4[5] = a4;
  v5 = sub_1004B804C(&qword_1013E04D0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v4[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[8] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[9] = swift_task_alloc(v8);
  v4[10] = swift_task_alloc(v8);
  v4[11] = swift_task_alloc(v8);
  v4[12] = swift_task_alloc(v8);
  v4[13] = swift_task_alloc(v8);
  return swift_task_switch(sub_10078996C, 0, 0);
}

uint64_t sub_10078996C()
{
  _QWORD *v0;
  uint64_t v1;
  char *Strong;
  char *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  id v23;
  _QWORD *v24;
  unint64_t v25;
  _BYTE *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0[5] + 16;
  swift_beginAccess(v1, v0 + 2, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  v0[14] = Strong;
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "delegate");
    if (v4)
    {
      v5 = v4;
      if ((objc_msgSend(v4, "respondsToSelector:", "boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:") & 1) != 0)objc_msgSend(v5, "boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:", v3);
      swift_unknownObjectRelease(v5);
    }
    v6 = *(id *)&v3[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress];
    objc_msgSend(v6, "maxValue");
    objc_msgSend(v6, "setValue:", v7 * 0.01);

    v8 = objc_msgSend(v3, "URL");
    if (v8)
    {
      v9 = v8;
      v10 = v0[11];
      v11 = v0[7];
      v12 = v0[8];
      v13 = v0[6];
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v8);

      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
      v0[15] = v14;
      v14(v13, v10, v11);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v13, 0, 1, v11);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) != 1)
      {
        v14(v0[12], v0[6], v0[7]);
        v15 = (_QWORD *)swift_task_alloc(dword_1013F1854);
        v0[17] = v15;
        *v15 = v0;
        v15[1] = sub_100789D10;
        return sub_10078A2A0(v0[10], v0[12]);
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
    }
    sub_1004CB800(v0[6], &qword_1013E04D0);
    v23 = objc_msgSend(v3, "preinsertionAsset");
    v0[16] = v23;
    if (v23)
    {
      v24 = (_QWORD *)swift_task_alloc(dword_1013F185C);
      v0[19] = v24;
      *v24 = v0;
      v24[1] = sub_100789E84;
      return sub_10078A610(v0[9]);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 81, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_importBoardItem()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2u, 81, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v25 = sub_10078E308();
    swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v25, 0, 0);
    *v26 = 1;
    swift_willThrow(v27);

    v28 = v0[12];
    v30 = v0[10];
    v29 = v0[11];
    v31 = v0[9];
    v32 = v0[6];
    swift_task_dealloc(v0[13]);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    v22 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v17 = v0[12];
    v19 = v0[10];
    v18 = v0[11];
    v20 = v0[9];
    v21 = v0[6];
    swift_task_dealloc(v0[13]);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    v22 = (uint64_t (*)(void))v0[1];
  }
  return v22();
}

uint64_t sub_100789D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078A0EC;
  else
    v3 = sub_100789D74;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100789D74()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 96), v4);
  v5 = v1(v2, v3, v4);
  v6 = *(_QWORD *)(v0 + 144);
  static Task<>.checkCancellation()(v5);
  if (v6)
  {
    v7 = *(void **)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56));

    v8 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc(dword_1013F186C);
    *(_QWORD *)(v0 + 168) = v14;
    *v14 = v0;
    v14[1] = sub_100789FF4;
    return sub_10078B740(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_100789E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078A184;
  else
    v3 = sub_100789EE8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100789EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);

  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  v6 = *(_QWORD *)(v0 + 160);
  static Task<>.checkCancellation()(v5);
  if (v6)
  {
    v7 = *(void **)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56));

    v8 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc(dword_1013F186C);
    *(_QWORD *)(v0 + 168) = v14;
    *v14 = v0;
    v14[1] = sub_100789FF4;
    return sub_10078B740(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_100789FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078A20C;
  else
    v3 = sub_10078A058;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10078A058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078A0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078A184()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 112);

  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078A20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078A2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for URL(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078A304, 0, 0);
}

uint64_t sub_10078A304(uint64_t a1)
{
  uint64_t v1;
  id v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v7;
  _BYTE *v8;
  __n128 v9;

  if ((URL.isFileURL.getter(a1) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 48) + 16))(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40));
    v2 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v3 = sub_1009FAD84();

    if ((v3 & 1) != 0)
    {
      v5 = (_QWORD *)swift_task_alloc(dword_1013F1864);
      *(_QWORD *)(v1 + 64) = v5;
      *v5 = v1;
      v5[1] = sub_10078A4C4;
      return sub_10078AE54(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 24));
    }
    static Task<>.checkCancellation()(v4);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 99, "Expected a file URL.", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2u, 99, (uint64_t)"Expected a file URL.", 20, 2u);
    v7 = sub_10078E308();
    swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v7, 0, 0);
    *v8 = 0;
    swift_willThrow(v9);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 56));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10078A4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078A5CC;
  else
    v3 = sub_10078A528;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10078A528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  v6 = *(_QWORD *)(v0 + 72);
  static Task<>.checkCancellation()(v5);
  if (v6)
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078A5CC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078A610(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[8] = a1;
  v2[9] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v3);
  v2[11] = swift_task_alloc(v3);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E9BE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v4);
  v2[13] = swift_task_alloc(v4);
  v5 = type metadata accessor for CRLAssetData(0);
  v2[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[15] = v6;
  v2[16] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078A6D8, 0, 0);
}

uint64_t sub_10078A6D8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  unint64_t v4;
  _BYTE *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(*(id *)(v0 + 72), "preinsertionAsset");
  *(_QWORD *)(v0 + 136) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1013FFA54);
    *(_QWORD *)(v0 + 144) = v2;
    *v2 = v0;
    v2[1] = sub_10078A860;
    return sub_1009BB884();
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 117, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2u, 117, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v4 = sub_10078E308();
    swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v4, 0, 0);
    *v5 = 1;
    swift_willThrow(v6);
    v8 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10078A860(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 144);
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10078ADE0;
  else
    v5 = sub_10078A8CC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10078A8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  unint64_t v14;
  _BYTE *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v31;
  char *v32;
  os_unfair_lock_s *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unsigned int v39;
  void *v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  _BYTE *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_1004E90B0(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, v0 + 16);
  v1 = sub_1004B804C(&qword_101400020);
  v2 = type metadata accessor for CRLAssetBackedAssetStorage(0);
  v3 = swift_dynamicCast(v0 + 56, v0 + 16, v1, v2, 6);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  if (v3)
  {
    v7 = *(_QWORD *)(v0 + 56);
    sub_10069BF0C(v7 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, *(_QWORD *)(v0 + 96));
    v8 = swift_release(v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v5 + 56))(v6, 0, 1, v4, v8);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v5 + 56))(*(_QWORD *)(v0 + 96), 1, 1, *(_QWORD *)(v0 + 112));
    sub_100757E04(&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 122, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2u, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  sub_1004C4938(*(_QWORD *)(v0 + 96), v11, (uint64_t *)&unk_1013E9BE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v12 = *(void **)(v0 + 152);
    v13 = *(void **)(v0 + 136);
    sub_1004CB800(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1013E9BE0);
    v14 = sub_10078E308();
    swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v14, 0, 0);
    *v15 = 1;
    swift_willThrow(v16);

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 160);
    v18 = sub_10078DF08(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
    static Task<>.checkCancellation()(v18);
    if (v17)
    {
      v19 = *(void **)(v0 + 152);
      v20 = *(void **)(v0 + 136);
      sub_1004B84A4(*(_QWORD *)(v0 + 128), type metadata accessor for CRLAssetData);

    }
    else
    {
      v21 = (char *)objc_msgSend(*(id *)(v0 + 72), "boardItemFactory");
      v22 = (char *)objc_retain(*(id *)(*(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board]
                                      + OBJC_IVAR____TtC8Freeform8CRLBoard_store));

      v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 16));
      v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v25 = *(void **)&v22[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v25)
      {
        v26 = *(id *)&v22[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        v27 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
        v28 = v22;
        v29 = sub_100C7EE84((uint64_t)v28);

        v30 = *(void **)&v22[v24];
        *(_QWORD *)&v22[v24] = v29;
        v26 = v29;

        v25 = 0;
      }
      v31 = *(_QWORD *)(v0 + 128);
      v32 = *(char **)(v0 + 80);
      v33 = *(os_unfair_lock_s **)(v23 + 16);
      v34 = v25;
      os_unfair_lock_unlock(v33);
      sub_100C7857C(v31, 0, 3, 0, v32);

      v35 = type metadata accessor for URL(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      if (v37(v32, 1, v35) == 1)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 128, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2u, 128, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      v38 = *(_QWORD *)(v0 + 88);
      sub_1004C4938(*(_QWORD *)(v0 + 80), v38, &qword_1013E04D0);
      v39 = v37((char *)v38, 1, v35);
      v40 = *(void **)(v0 + 152);
      v41 = *(_QWORD *)(v0 + 128);
      v42 = *(void **)(v0 + 136);
      if (v39 != 1)
      {
        v53 = *(_QWORD *)(v0 + 96);
        v52 = *(_QWORD *)(v0 + 104);
        v54 = *(_QWORD *)(v0 + 88);
        v56 = *(_QWORD *)(v0 + 80);
        v55 = *(_QWORD *)(v0 + 64);
        sub_1004B84A4(v41, type metadata accessor for CRLAssetData);

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v55, v54, v35);
        swift_task_dealloc(v41);
        swift_task_dealloc(v52);
        swift_task_dealloc(v53);
        swift_task_dealloc(v54);
        swift_task_dealloc(v56);
        v50 = *(uint64_t (**)(void))(v0 + 8);
        return v50();
      }
      sub_1004CB800(*(_QWORD *)(v0 + 88), &qword_1013E04D0);
      v43 = sub_10078E308();
      swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v43, 0, 0);
      *v44 = 1;
      swift_willThrow(v45);

      sub_1004B84A4(v41, type metadata accessor for CRLAssetData);
    }
  }
  v47 = *(_QWORD *)(v0 + 96);
  v46 = *(_QWORD *)(v0 + 104);
  v49 = *(_QWORD *)(v0 + 80);
  v48 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_10078ADE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = type metadata accessor for URL(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078AEB8, 0, 0);
}

uint64_t sub_10078AEB8()
{
  uint64_t v0;
  id v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v12;
  _BYTE *v13;
  __n128 v14;

  v1 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v2 = sub_1009FAD84();

  if ((v2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "init");
    v6 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator;
    *(_QWORD *)(v0 + 72) = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator;
    v7 = *(void **)(v3 + v6);
    *(_QWORD *)(v3 + v6) = v5;

    *(_QWORD *)(v0 + 16) = 0;
    v8 = swift_allocObject(&unk_10127D2C8, 24, 7);
    *(_QWORD *)(v0 + 80) = v8;
    swift_unknownObjectWeakInit(v8 + 16);
    v9 = (_QWORD *)swift_task_alloc(48);
    *(_QWORD *)(v0 + 88) = v9;
    v9[2] = v8;
    v9[3] = v4;
    v9[4] = v0 + 16;
    v10 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 96) = v10;
    *v10 = v0;
    v10[1] = sub_10078B050;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 64), 0, 0, 0xD000000000000023, 0x8000000100FCFBB0, sub_10078E3B4, v9, *(_QWORD *)(v0 + 48));
  }
  else
  {
    v12 = sub_10078E34C();
    swift_allocError(&type metadata for CRLFileItemImporter.BundleError, v12, 0, 0);
    *v13 = 0;
    swift_willThrow(v14);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10078B050()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10078B138;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 88);
    swift_release(*(_QWORD *)(v2 + 80));
    swift_task_dealloc(v5);
    v4 = sub_10078B0C4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10078B0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(void **)(v5 + v1);
  *(_QWORD *)(v5 + v1) = 0;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v6, v2, v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078B138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10078B184(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  id v11;
  void *v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  double v22;
  void *v23;
  void *v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  unint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v7 = sub_1004B804C(&qword_1013F18B0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (id)Strong;
    v12 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator);
    if (v12)
    {
      v13 = v12;
      URL._bridgeToObjectiveC()(v14);
      v16 = v15;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
      v17 = *(unsigned __int8 *)(v8 + 80);
      v18 = (v17 + 24) & ~v17;
      v19 = swift_allocObject(&unk_10127D2F0, v18 + v9, v17 | 7);
      *(_QWORD *)(v19 + 16) = v11;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19 + v18, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      v7 = swift_allocObject(&unk_10127D318, 32, 7);
      *(_QWORD *)(v7 + 16) = sub_10078E438;
      *(_QWORD *)(v7 + 24) = v19;
      aBlock[4] = sub_10078E48C;
      v31 = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_10062EDE4;
      aBlock[3] = &unk_10127D330;
      v20 = _Block_copy(aBlock);
      v21 = v31;
      v11 = v11;
      swift_retain(v7);
      *(_QWORD *)&v22 = swift_release(v21).n128_u64[0];
      aBlock[0] = *a4;
      objc_msgSend(v13, "coordinateReadingItemAtURL:options:error:byAccessor:", v16, 8, aBlock, v20, v22);
      _Block_release(v20);

      v23 = (void *)aBlock[0];
      v24 = (void *)*a4;
      *a4 = aBlock[0];
      v25 = v23;

      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 86, 156, 101, 1);
      swift_release(v7);
      swift_release(v19);
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return;
      __break(1u);
    }

  }
  v27 = sub_10078E34C();
  v28 = swift_allocError(&type metadata for CRLFileItemImporter.BundleError, v27, 0, 0);
  *v29 = 1;
  aBlock[0] = v28;
  CheckedContinuation.resume(throwing:)(aBlock, v7);
}

uint64_t sub_10078B420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __n128 v26;
  NSURL *v27;
  void *v28;
  void *v29;
  NSURL *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, uint64_t);
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(char *, uint64_t, __n128);
  char *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;

  v48 = a1;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - v13;
  v15 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v16 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v49 = 0;
  v17 = objc_msgSend(v16, "initWithError:", &v49);
  v18 = v49;
  if (!v17)
  {
    v47 = v15;
    v35 = v49;
    v36 = (void *)_convertNSErrorToError(_:)(v18);

    swift_willThrow(v37);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v38(v8, v48, v5);
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v8, v5);
    v49 = v36;
    v41 = sub_1004B804C(&qword_1013F18B0);
    CheckedContinuation.resume(throwing:)(&v49, v41);
    v15 = v47;
    v38(v11, (uint64_t)v14, v5);
    goto LABEL_7;
  }
  v19 = v17;
  v45 = v8;
  v46 = a3;
  v20 = v49;
  objc_msgSend(v19, "setAssociatedLifetimeObject:", a2);
  v22 = URL.lastPathComponent.getter(v21);
  v24 = v23;
  v25 = objc_msgSend(v19, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

  URL.appendingPathComponent(_:)(v22, v24);
  v26 = swift_bridgeObjectRelease();
  v44 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  v44(v11, v5, v26);
  URL._bridgeToObjectiveC()(v27);
  v29 = v28;
  URL._bridgeToObjectiveC()(v30);
  v32 = v31;
  v49 = 0;
  LOBYTE(v25) = objc_msgSend(v15, "copyItemAtURL:toURL:error:", v29, v31, &v49);

  v33 = v49;
  if ((v25 & 1) == 0)
  {
    v47 = v15;
    v39 = v49;
    v36 = (void *)_convertNSErrorToError(_:)(v33);

    swift_willThrow(v40);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v8 = v45;
    v38(v45, v48, v5);
    ((void (*)(char *, uint64_t))v44)(v14, v5);
    goto LABEL_6;
  }
  v34 = v49;

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v14, v5);
LABEL_7:
  v42 = sub_1004B804C(&qword_1013F18B0);
  CheckedContinuation.resume(returning:)(v11, v42);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
}

uint64_t sub_10078B740(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2[183] = v1;
  v2[177] = a1;
  v3 = type metadata accessor for CRLAssetData(0);
  v2[189] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[195] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[201] = swift_task_alloc(v5);
  v2[207] = swift_task_alloc(v5);
  v2[213] = swift_task_alloc(v5);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v2[219] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[225] = swift_task_alloc(v7);
  v2[231] = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  v2[237] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[243] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v2[249] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[255] = swift_task_alloc(v11);
  v2[261] = swift_task_alloc(v11);
  return swift_task_switch(sub_10078B834, 0, 0);
}

uint64_t sub_10078B834()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[261];
  v2 = v0[237];
  v3 = (void *)v0[183];
  v4 = v0[177];
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[243] + 16);
  v0[267] = v5;
  v5(v1, v4, v2);
  v6 = (char *)objc_msgSend(v3, "preinsertionAsset");
  if (v6)
  {
    v7 = v6;
    v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
    v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename + 8];
    swift_bridgeObjectRetain(v8);

  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v0[269] = v8;
  v0[268] = v9;
  v10 = type metadata accessor for MainActor(0);
  v0[270] = v10;
  v0[271] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_10078B918, v11, v12);
}

uint64_t sub_10078B918()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[269];
  v2 = v0[268];
  v3 = (char *)v0[261];
  swift_release(v0[271]);
  v0[272] = sub_100BF7D3C(v3, v2, v1);
  v0[273] = 0;
  return swift_task_switch(sub_10078B994, 0, 0);
}

uint64_t sub_10078B994()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v1 = *(void **)(v0 + 2176);
  v2 = *(_QWORD *)(v0 + 1848);
  v3 = *(_QWORD *)(v0 + 1752);
  v4 = (char *)objc_msgSend(*(id *)(v0 + 1464), "boardItemFactory");
  v5 = *(id *)&v4[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

  v6 = type metadata accessor for CRLBoardItemImporterHelper();
  v7 = swift_allocObject(v6, 24, 7);
  *(_QWORD *)(v0 + 2192) = v7;
  *(_QWORD *)(v7 + 16) = v5;
  v8 = swift_allocObject(&unk_10127D278, 32, 7);
  *(_QWORD *)(v0 + 2200) = v8;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v1;
  swift_retain(v7);
  v9 = v1;
  swift_retain(v8);
  swift_asyncLet_begin(v0 + 16, 0, v3, &unk_1013F1880, v8, v2);
  v10 = (_QWORD *)swift_task_alloc(dword_10140975C);
  *(_QWORD *)(v0 + 2208) = v10;
  *v10 = v0;
  v10[1] = sub_10078BAC0;
  return sub_100BF723C(250.0, 150.0, 150.0);
}

uint64_t sub_10078BAC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_BYTE *)(v4 + 1360) = a3;
  *(_QWORD *)(v4 + 1352) = a2;
  *(_QWORD *)(v4 + 1344) = a1;
  *(_QWORD *)(v4 + 1336) = v3;
  v5 = *(_QWORD *)(v4 + 2208);
  *(_BYTE *)(v4 + 2392) = a3;
  swift_task_dealloc(v5);
  return swift_task_switch(sub_10078BB24, 0, 0);
}

uint64_t sub_10078BB24(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;

  if ((*(_BYTE *)(v1 + 2392) & 1) != 0)
  {
    v5 = *(_QWORD *)(v1 + 2160);
    *(_QWORD *)(v1 + 2216) = static MainActor.shared.getter(a1);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
    *(_QWORD *)(v1 + 2224) = v6;
    *(_QWORD *)(v1 + 2232) = v7;
    return swift_task_switch(sub_10078BE08, v6, v7);
  }
  else
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithSize:", *(double *)(v1 + 1344), *(double *)(v1 + 1352));
    v3 = *(_QWORD *)(v1 + 2184);
    *(_QWORD *)(v1 + 2296) = v2;
    static Task<>.checkCancellation()(v2);
    *(_QWORD *)(v1 + 2304) = v3;
    if (v3)
    {

      return swift_asyncLet_finish(v1 + 16, *(_QWORD *)(v1 + 1848), sub_10078C9F0, v1 + 1296);
    }
    else
    {
      v8 = *(_QWORD *)(v1 + 2192);
      v9 = *(_QWORD *)(v1 + 2040);
      v10 = *(_QWORD *)(v1 + 1992);
      v11 = *(_QWORD *)(v1 + 1944);
      v12 = *(_QWORD *)(v1 + 1896);
      v21 = *(_QWORD *)(v1 + 1512);
      v22 = *(_QWORD *)(v1 + 1704);
      v13 = *(void **)(v1 + 1464);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 2136))(v9, *(_QWORD *)(v1 + 1416), v12);
      v14 = *(unsigned __int8 *)(v11 + 80);
      v15 = (v14 + 24) & ~v14;
      v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
      v17 = swift_allocObject(&unk_10127D2A0, v16 + 8, v14 | 7);
      *(_QWORD *)(v1 + 2312) = v17;
      *(_QWORD *)(v17 + 16) = v8;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v17 + v15, v9, v12);
      *(_QWORD *)(v17 + v16) = v13;
      swift_retain(v8);
      v18 = v13;
      swift_retain(v17);
      swift_asyncLet_begin(v1 + 656, 0, v21, &unk_1013F1898, v17, v22);
      v19 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
      *(_QWORD *)(v1 + 2320) = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
      objc_msgSend(*(id *)&v18[v19], "maxValue");
      *(double *)(v1 + 2328) = v20;
      objc_msgSend(*(id *)&v18[v19], "setValue:", v20 * 0.2);
      return swift_asyncLet_get_throwing(v1 + 16, *(_QWORD *)(v1 + 1848), sub_10078C260, v1 + 1424);
    }
  }
}

uint64_t sub_10078BD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 2040);
  v2 = *(_QWORD *)(v0 + 1848);
  v3 = *(_QWORD *)(v0 + 1800);
  v4 = *(_QWORD *)(v0 + 1704);
  v5 = *(_QWORD *)(v0 + 1656);
  v6 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078BE08()
{
  _QWORD *v0;
  id v1;
  NSURL *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  URL._bridgeToObjectiveC()(v2);
  v4 = v3;
  v5 = objc_msgSend(v1, "initWithFileAtURL:size:scale:representationTypes:", v3, 4, 250.0, 250.0, 1.0);
  v0[280] = v5;

  objc_msgSend(v5, "setIconMode:", 0);
  v6 = swift_task_alloc(32);
  v0[281] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  v7 = swift_task_alloc(32);
  v0[282] = v7;
  *(_QWORD *)(v7 + 16) = v5;
  v8 = static MainActor.shared.getter(v7);
  v0[283] = v8;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[284] = v9;
  v10 = sub_1004B804C((uint64_t *)&unk_101409880);
  *v9 = v0;
  v9[1] = sub_10078BF54;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 171, &unk_1013F1888, v6, sub_100703DD8, v7, v8, &protocol witness table for MainActor, v10);
}

uint64_t sub_10078BF54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 2272);
  v4 = *(_QWORD *)(*v1 + 2264);
  v5 = *(_QWORD *)(*v1 + 2256);
  v6 = *(_QWORD *)(*v1 + 2248);
  *(_QWORD *)(*v1 + 2280) = v0;
  swift_task_dealloc(v3);
  swift_release(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return swift_task_switch(sub_10078BFDC, *(_QWORD *)(v2 + 2224), *(_QWORD *)(v2 + 2232));
}

uint64_t sub_10078BFDC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[280];
  swift_release(v0[277]);

  v0[286] = v0[171];
  return swift_task_switch(sub_10078C028, 0, 0);
}

uint64_t sub_10078C028()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 2288);
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 2288), "size");
    v4 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithSize:", v2, v3);

  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithSize:", 250.0, 150.0);
    v4 = v5;
  }
  v6 = *(_QWORD *)(v0 + 2280);
  *(_QWORD *)(v0 + 2296) = v4;
  static Task<>.checkCancellation()(v5);
  *(_QWORD *)(v0 + 2304) = v6;
  if (v6)
  {

    return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078C9F0, v0 + 1296);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 2192);
    v9 = *(_QWORD *)(v0 + 2040);
    v10 = *(_QWORD *)(v0 + 1992);
    v11 = *(_QWORD *)(v0 + 1944);
    v12 = *(_QWORD *)(v0 + 1896);
    v22 = *(_QWORD *)(v0 + 1704);
    v13 = *(_QWORD *)(v0 + 1512);
    v14 = *(void **)(v0 + 1464);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 2136))(v9, *(_QWORD *)(v0 + 1416), v12);
    v15 = *(unsigned __int8 *)(v11 + 80);
    v16 = (v15 + 24) & ~v15;
    v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = swift_allocObject(&unk_10127D2A0, v17 + 8, v15 | 7);
    *(_QWORD *)(v0 + 2312) = v18;
    *(_QWORD *)(v18 + 16) = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v18 + v16, v9, v12);
    *(_QWORD *)(v18 + v17) = v14;
    swift_retain(v8);
    v19 = v14;
    swift_retain(v18);
    swift_asyncLet_begin(v0 + 656, 0, v13, &unk_1013F1898, v18, v22);
    v20 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
    *(_QWORD *)(v0 + 2320) = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
    objc_msgSend(*(id *)&v19[v20], "maxValue");
    *(double *)(v0 + 2328) = v21;
    objc_msgSend(*(id *)&v19[v20], "setValue:", v21 * 0.2);
    return swift_asyncLet_get_throwing(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078C260, v0 + 1424);
  }
}

uint64_t sub_10078C260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  *(_QWORD *)(v1 + 2336) = v0;
  if (v0)
    v2 = sub_10078CAB8;
  else
    v2 = sub_10078C288;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10078C288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v9)();
  unint64_t v10;
  _BYTE *v11;
  __n128 v12;

  v1 = *(_QWORD *)(v0 + 1800);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v0 + 1512);
  sub_10078E2C0(*(_QWORD *)(v0 + 1848), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 1800), (uint64_t *)&unk_1013E9BE0);
LABEL_7:
    v6 = v0 + 1568;
    v10 = sub_10078E308();
    *(_QWORD *)(v0 + 2384) = swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v10, 0, 0);
    *v11 = 1;
    swift_willThrow(v12);
    v8 = *(_QWORD *)(v0 + 1704);
    v9 = sub_10078C8AC;
    return swift_asyncLet_finish(v0 + 656, v8, v9, v6);
  }
  v4 = *(_QWORD *)(v0 + 2296);
  sub_10078DF08(*(_QWORD *)(v0 + 1800), *(_QWORD *)(v0 + 1656));
  if (!v4)
  {
    sub_1004B84A4(*(_QWORD *)(v0 + 1656), type metadata accessor for CRLAssetData);
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(v0 + 2336);
  static Task<>.checkCancellation()(*(id *)(v0 + 2296));
  *(_QWORD *)(v0 + 2344) = v5;
  if (v5)
  {
    v6 = v0 + 1664;
    v7 = *(void **)(v0 + 2296);
    sub_1004B84A4(*(_QWORD *)(v0 + 1656), type metadata accessor for CRLAssetData);

    v8 = *(_QWORD *)(v0 + 1704);
    v9 = sub_10078CC14;
    return swift_asyncLet_finish(v0 + 656, v8, v9, v6);
  }
  *(_QWORD *)(v0 + 2352) = objc_msgSend(*(id *)(v0 + 1464), "boardItemFactory");
  return swift_asyncLet_get_throwing(v0 + 656, *(_QWORD *)(v0 + 1704), sub_10078C404, v0 + 1376);
}

uint64_t sub_10078C404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  *(_QWORD *)(v1 + 2360) = v0;
  if (v0)
  {

    v2 = sub_10078CD58;
  }
  else
  {
    v2 = sub_10078C454;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10078C454()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  __n128 v24;

  v1 = *(_QWORD *)(v0 + 2360);
  v2 = *(void **)(v0 + 2352);
  v3 = *(void **)(v0 + 2296);
  v4 = *(_QWORD *)(v0 + 1656);
  v5 = *(_QWORD *)(v0 + 1608);
  v6 = *(_QWORD *)(v0 + 1464);
  sub_10069BF0C(*(_QWORD *)(v0 + 1704), v5);
  v7 = sub_100CF1C8C(v5, v4, v3);

  sub_1004B84A4(v5, type metadata accessor for CRLAssetData);
  v8 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem;
  v9 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem) = v7;

  static Task<>.checkCancellation()(v10);
  *(_QWORD *)(v0 + 2368) = v1;
  if (v1)
  {
    v11 = v0 + 1904;
    v12 = *(void **)(v0 + 2296);
    sub_1004B84A4(*(_QWORD *)(v0 + 1656), type metadata accessor for CRLAssetData);

    v13 = *(_QWORD *)(v0 + 1704);
    v14 = sub_10078CF00;
  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)(v0 + 1464) + *(_QWORD *)(v0 + 2320)), "setValue:", *(double *)(v0 + 2328) * 0.9);
    if (*(_QWORD *)(v6 + v8))
    {
      v17 = *(void **)(v0 + 2296);
      v18 = *(_QWORD *)(v0 + 1656);
      objc_msgSend(*(id *)(*(_QWORD *)(v0 + 1464) + *(_QWORD *)(v0 + 2320)), "setValue:", *(double *)(v0 + 2328));
      sub_10078D544();

      sub_1004B84A4(v18, type metadata accessor for CRLAssetData);
      v13 = *(_QWORD *)(v0 + 1704);
      v14 = sub_10078C614;
      v15 = v0 + 656;
      v16 = v0 + 2096;
      return swift_asyncLet_finish(v15, v13, v14, v16);
    }
    v11 = v0 + 2000;
    v20 = *(void **)(v0 + 2296);
    v21 = *(_QWORD *)(v0 + 1656);
    v22 = sub_10078E308();
    *(_QWORD *)(v0 + 2376) = swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v22, 0, 0);
    *v23 = 1;
    swift_willThrow(v24);

    sub_1004B84A4(v21, type metadata accessor for CRLAssetData);
    v13 = *(_QWORD *)(v0 + 1704);
    v14 = sub_10078C768;
  }
  v15 = v0 + 656;
  v16 = v11;
  return swift_asyncLet_finish(v15, v13, v14, v16);
}

uint64_t sub_10078C614()
{
  return swift_task_switch(sub_10078C628, 0, 0);
}

uint64_t sub_10078C628()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078C684, v0 + 1760);
}

uint64_t sub_10078C684()
{
  return swift_task_switch(sub_10078C698, 0, 0);
}

uint64_t sub_10078C698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  v4 = *(_QWORD *)(v0 + 2088);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v12 = *(_QWORD *)(v0 + 1608);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v10);
  swift_release(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078C768()
{
  return swift_task_switch(sub_10078C77C, 0, 0);
}

uint64_t sub_10078C77C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078C7D8, v0 + 2048);
}

uint64_t sub_10078C7D8()
{
  return swift_task_switch(sub_10078C7EC, 0, 0);
}

uint64_t sub_10078C7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v4);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v10 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078C8AC()
{
  return swift_task_switch(sub_10078C8C0, 0, 0);
}

uint64_t sub_10078C8C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078C91C, v0 + 1616);
}

uint64_t sub_10078C91C()
{
  return swift_task_switch(sub_10078C930, 0, 0);
}

uint64_t sub_10078C930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v4);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v10 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078C9F0()
{
  return swift_task_switch(sub_10078CA04, 0, 0);
}

uint64_t sub_10078CA04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 2200);
  v2 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v1, 2, v3);
  v4 = *(_QWORD *)(v0 + 2040);
  v5 = *(_QWORD *)(v0 + 1848);
  v6 = *(_QWORD *)(v0 + 1800);
  v7 = *(_QWORD *)(v0 + 1704);
  v8 = *(_QWORD *)(v0 + 1656);
  v9 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078CAB8()
{
  uint64_t v0;

  return swift_asyncLet_finish(v0 + 656, *(_QWORD *)(v0 + 1704), sub_10078CAD0, v0 + 1472);
}

uint64_t sub_10078CAD0()
{
  return swift_task_switch(sub_10078CAE4, 0, 0);
}

uint64_t sub_10078CAE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078CB40, v0 + 1520);
}

uint64_t sub_10078CB40()
{
  return swift_task_switch(sub_10078CB54, 0, 0);
}

uint64_t sub_10078CB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v4);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v10 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078CC14()
{
  return swift_task_switch(sub_10078CC28, 0, 0);
}

uint64_t sub_10078CC28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078CC84, v0 + 1712);
}

uint64_t sub_10078CC84()
{
  return swift_task_switch(sub_10078CC98, 0, 0);
}

uint64_t sub_10078CC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v4);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v10 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078CD58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1656);

  sub_1004B84A4(v1, type metadata accessor for CRLAssetData);
  return swift_asyncLet_finish(v0 + 656, *(_QWORD *)(v0 + 1704), sub_10078CDBC, v0 + 1808);
}

uint64_t sub_10078CDBC()
{
  return swift_task_switch(sub_10078CDD0, 0, 0);
}

uint64_t sub_10078CDD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078CE2C, v0 + 1856);
}

uint64_t sub_10078CE2C()
{
  return swift_task_switch(sub_10078CE40, 0, 0);
}

uint64_t sub_10078CE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v4);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v10 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078CF00()
{
  return swift_task_switch(sub_10078CF14, 0, 0);
}

uint64_t sub_10078CF14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2312);

  swift_release(v1);
  return swift_asyncLet_finish(v0 + 16, *(_QWORD *)(v0 + 1848), sub_10078CF70, v0 + 1952);
}

uint64_t sub_10078CF70()
{
  return swift_task_switch(sub_10078CF84, 0, 0);
}

uint64_t sub_10078CF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2312);
  v2 = *(_QWORD *)(v0 + 2200);
  v3 = *(void **)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2192));

  swift_release_n(v2, 2, v4);
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 2040);
  v6 = *(_QWORD *)(v0 + 1848);
  v7 = *(_QWORD *)(v0 + 1800);
  v8 = *(_QWORD *)(v0 + 1704);
  v9 = *(_QWORD *)(v0 + 1656);
  v10 = *(_QWORD *)(v0 + 1608);
  swift_task_dealloc(*(_QWORD *)(v0 + 2088));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078D044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for CRLAssetData(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10078D0A8, 0, 0);
}

uint64_t sub_10078D0A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  static Task<>.checkCancellation()(a1);
  v2 = (_QWORD *)swift_task_alloc(dword_101409754);
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_10078D128;
  return sub_100BF6574();
}

uint64_t sub_10078D128(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_10078D344;
  }
  else
  {
    *(_QWORD *)(v4 + 80) = a1;
    v6 = sub_10078D19C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10078D19C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v5;

  v3 = *(_QWORD *)(v1 + 72);
  v2 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 88) = v2;
  static Task<>.checkCancellation()(a1);
  if (v3)
  {

    swift_task_dealloc(*(_QWORD *)(v1 + 56));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc(dword_1014077FC);
    *(_QWORD *)(v1 + 96) = v5;
    *v5 = v1;
    v5[1] = sub_10078D230;
    return sub_100BC270C(*(_QWORD *)(v1 + 56), (uint64_t)v2);
  }
}

uint64_t sub_10078D230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078D308;
  else
    v3 = sub_10078D294;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10078D294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);

  sub_10078DF08(v1, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078D308()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10078D344()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[9];
  v2 = sub_100B5E264();
  v3 = swift_errorRelease(v1);
  v0[11] = (uint64_t)v2;
  static Task<>.checkCancellation()(v3);
  v4 = (uint64_t **)swift_task_alloc(dword_1014077FC);
  v0[12] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_10078D230;
  return sub_100BC270C(v0[7], (uint64_t)v2);
}

uint64_t sub_10078D40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_10078D428, 0, 0);
}

uint64_t sub_10078D428()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 40), "preinsertionAsset");
  *(_QWORD *)(v0 + 48) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1014077EC);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_10078D49C;
  return sub_100BC22F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), (uint64_t)v1);
}

uint64_t sub_10078D49C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10078D510, 0, 0);

  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10078D510()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10078D544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN ****v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  char *v35;
  id v36;
  void *v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  id v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  _UNKNOWN ****v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  void *v59;
  os_unfair_lock_s *v60;
  id v61;
  char *v62;
  uint64_t v63;
  char *v64;
  NSURL *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  _BYTE v81[24];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v70 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - v15;
  v17 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v17);
  v80 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - v20;
  v22 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem);
  if (v22)
  {
    v23 = type metadata accessor for CRLFileItem(0);
    v24 = swift_dynamicCastClass(v22, v23);
    if (v24)
    {
      v25 = v24;
      v78 = v13;
      v79 = v2;
      v72 = v4;
      v77 = v1;
      v75 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v26 = *(_UNKNOWN *****)(v24 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v26 == &off_101407908)
        v27 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v27 = 0;
      swift_beginAccess(v27 + qword_101480E60, v81, 32, 0);
      swift_retain(v26);
      v76 = v22;
      v73 = sub_1004B804C(&qword_1013F1870);
      CRRegister.wrappedValue.getter(v73);
      swift_endAccess(v81);
      swift_release(v26);
      sub_10069BF0C((uint64_t)v7, (uint64_t)v16);
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFileItemAtomicDataStruct);
      v28 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store;
      v29 = *(char **)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
      v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v30 + 16));
      v31 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v32 = *(void **)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      v74 = v28;
      if (v32)
      {
        v33 = v32;
      }
      else
      {
        v34 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
        v35 = v29;
        v36 = sub_100C7EE84((uint64_t)v35);

        v37 = *(void **)&v29[v31];
        *(_QWORD *)&v29[v31] = v36;
        v33 = v36;

        v32 = 0;
      }
      v38 = v77;
      v39 = *(os_unfair_lock_s **)(v30 + 16);
      v40 = v32;
      os_unfair_lock_unlock(v39);
      sub_100C7857C((uint64_t)v16, 0, 3, 0, v21);

      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
      v41 = v79;
      v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
      v43 = v42(v21, 1, v38);
      if ((_DWORD)v43 == 1)
      {

        sub_1004CB800((uint64_t)v21, &qword_1013E04D0);
      }
      else
      {
        v71 = URL.pathExtension.getter(v43);
        v77 = v44;
        v45 = v21;
        v46 = *(void (**)(char *, uint64_t))(v41 + 8);
        v46(v45, v38);
        v47 = *(_UNKNOWN *****)(v25 + v75);
        if (*v47 == &off_101407908)
          v48 = *(_QWORD *)(v25 + v75);
        else
          v48 = 0;
        swift_beginAccess(v48 + qword_101480E60, v81, 32, 0);
        swift_retain(v47);
        CRRegister.wrappedValue.getter(v73);
        swift_endAccess(v81);
        swift_release(v47);
        sub_10069BF0C((uint64_t)v7, (uint64_t)v10);
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFileItemAtomicDataStruct);
        sub_10078DF08((uint64_t)v10, (uint64_t)v78);
        v49 = *(char **)(v25 + v74);
        v50 = *(_QWORD *)&v49[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
        v51 = *(os_unfair_lock_s **)(v50 + 16);
        v52 = v49;
        os_unfair_lock_lock(v51);
        v53 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
        v54 = *(void **)&v52[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
        if (v54)
        {
          v55 = *(id *)&v52[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
        }
        else
        {
          v56 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
          v57 = v52;
          v58 = sub_100C7EE84((uint64_t)v57);

          v59 = *(void **)&v52[v53];
          *(_QWORD *)&v52[v53] = v58;
          v55 = v58;

          v54 = 0;
        }
        v60 = *(os_unfair_lock_s **)(v50 + 16);
        v61 = v54;
        os_unfair_lock_unlock(v60);
        v62 = v80;
        v63 = (uint64_t)v78;
        sub_100C7857C((uint64_t)v78, 0, 3, 0, v80);

        if (v42(v62, 1, v38) == 1)
        {
          sub_1004CB800((uint64_t)v62, &qword_1013E04D0);

          sub_1004B84A4(v63, type metadata accessor for CRLAssetData);
          swift_bridgeObjectRelease();
        }
        else
        {
          v64 = v72;
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v72, v62, v38);
          URL._bridgeToObjectiveC()(v65);
          v67 = v66;
          v68 = v63;
          v69 = objc_msgSend(v66, "crl_fileSize");

          v46(v64, v38);
          sub_100960328(v71, v77, (uint64_t)v69);

          swift_bridgeObjectRelease();
          sub_1004B84A4(v68, type metadata accessor for CRLAssetData);
        }
      }
    }
  }
}

id sub_10078DB58(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  NSURL *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  objc_super v16;

  v5 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
  v6 = objc_allocWithZone((Class)CRLBasicProgress);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithMaxValue:", 100.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__error] = 3;

  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CRLFileItemImporter();
  v11 = objc_msgSendSuper2(&v16, "initWithURL:boardItemFactory:", v10, a2);

  v12 = type metadata accessor for URL(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v14 = v11;
  v13(a1, v12);
  if (v14)

  return v14;
}

id sub_10078DD1C(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  objc_super v10;

  v5 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
  v6 = objc_allocWithZone((Class)CRLBasicProgress);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithMaxValue:", 100.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__error] = 3;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CRLFileItemImporter();
  v8 = objc_msgSendSuper2(&v10, "initWithData:boardItemFactory:", a1, a2);

  return v8;
}

id sub_10078DE60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileItemImporter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLFileItemImporter()
{
  return objc_opt_self(_TtC8Freeform19CRLFileItemImporter);
}

uint64_t sub_10078DF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10078DF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  __n128 v14;
  char v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  LOBYTE(a1) = sub_1009FA9CC(a1);

  if ((a1 & 1) != 0)
  {
    v14 = swift_bridgeObjectRetain(a3);
    UTType.init(_:)(a2, a3, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
    {
      sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E3620);
      v15 = 1;
    }
    else
    {
      static UTType.url.getter();
      v16 = UTType.conforms(to:)(v9);
      v17 = *(void (**)(char *, uint64_t))(v7 + 8);
      v17(v9, v6);
      v17(v12, v6);
      v15 = v16 ^ 1;
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_10078E0C8()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10078E0D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1013F187C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1004CF80C;
  return sub_10078D044(a1, v5, v4);
}

uint64_t sub_10078E138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10140987C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return sub_100BF79F0(a1, v4);
}

uint64_t sub_10078E190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10078E220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1013F1894);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  v9[4] = v7;
  v9[5] = v8;
  v9[2] = a1;
  v9[3] = v6;
  return swift_task_switch(sub_10078D428, 0, 0);
}

uint64_t sub_10078E2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10078E308()
{
  unint64_t result;

  result = qword_1013F18A0;
  if (!qword_1013F18A0)
  {
    result = swift_getWitnessTable(&unk_100F29840, &type metadata for CRLBoardItemImporterHelperError);
    atomic_store(result, (unint64_t *)&qword_1013F18A0);
  }
  return result;
}

unint64_t sub_10078E34C()
{
  unint64_t result;

  result = qword_1013F18A8;
  if (!qword_1013F18A8)
  {
    result = swift_getWitnessTable(&unk_100F0A958, &type metadata for CRLFileItemImporter.BundleError);
    atomic_store(result, (unint64_t *)&qword_1013F18A8);
  }
  return result;
}

uint64_t sub_10078E390()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10078E3B4(uint64_t a1)
{
  uint64_t v1;

  sub_10078B184(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_10078E3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013F18B0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10078E438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013F18B0) - 8) + 80);
  return sub_10078B420(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10078E47C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10078E48C(uint64_t a1)
{
  uint64_t v1;

  return sub_100592E98(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10078E494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10078E4A4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10078E4AC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10078E4D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013F18BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1007898B4(a1, v4, v5, v6);
}

uint64_t sub_10078E544()
{
  return sub_10078E550((void (*)(_QWORD))&__Block_release);
}

uint64_t sub_10078E550(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10078E580()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013F18CC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013F18C8 + dword_1013F18C8))(v2, v3);
}

uint64_t storeEnumTagSinglePayload for CRLFileItemImporter.BundleError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10078E638 + 4 * byte_100F0A8C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10078E66C + 4 * byte_100F0A8C0[v4]))();
}

uint64_t sub_10078E66C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10078E674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10078E67CLL);
  return result;
}

uint64_t sub_10078E688(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10078E690);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10078E694(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10078E69C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFileItemImporter.BundleError()
{
  return &type metadata for CRLFileItemImporter.BundleError;
}

unint64_t sub_10078E6BC()
{
  unint64_t result;

  result = qword_1013F18E0;
  if (!qword_1013F18E0)
  {
    result = swift_getWitnessTable(&unk_100F0A930, &type metadata for CRLFileItemImporter.BundleError);
    atomic_store(result, (unint64_t *)&qword_1013F18E0);
  }
  return result;
}

void **sub_10078E700(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[7];
    *(void **)((char *)v7 + a3[6]) = *(void **)((char *)a2 + a3[6]);
    *((_BYTE *)v7 + v14) = *((_BYTE *)a2 + v14);
  }
  return v7;
}

uint64_t sub_10078E7B8(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void **sub_10078E800(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  return a1;
}

void **sub_10078E890(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_10078E920(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

void **sub_10078E9A0(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t sub_10078EA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10078EA34);
}

uint64_t sub_10078EA34(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_10078EAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10078EABC);
}

char *sub_10078EABC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CRLRealTimeEnter(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F1940, (uint64_t)&nominal type descriptor for CRLRealTimeEnter);
}

uint64_t sub_10078EB44(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_100F0A9B8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10078EBD4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _BYTE *v59;
  __n128 v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  unint64_t v72;
  _OWORD *v73;
  _OWORD v74[2];
  uint64_t v75;

  v72 = a2;
  v65 = a3;
  v64 = type metadata accessor for CRLRealTimeEnter(0);
  __chkstk_darwin(v64);
  v63 = (uint64_t *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  v68 = v6;
  __chkstk_darwin(v5);
  v66 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v70 = (char *)&v62 - v9;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v10);
  v69 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - v13;
  v15 = type metadata accessor for CRLProto_Data(0);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (uint64_t *)((char *)&v62 - v20);
  v22 = type metadata accessor for BinaryDecodingOptions(0, v19);
  __chkstk_darwin(v22);
  v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for CRLProto_RealTimeEnter(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = 0;
  memset(v74, 0, sizeof(v74));
  v28 = v72;
  v29 = sub_1004BE310(a1, v72);
  BinaryDecodingOptions.init()(v29);
  v30 = sub_1004B7878(&qword_1013F1980, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25428);
  v31 = v73;
  Message.init(serializedData:extensions:partial:options:)(a1, v28, v74, 0, v24, v25, v30);
  if (v31)
    return sub_1004BBBC8(a1, v28);
  v73 = v17;
  sub_100552F84((uint64_t)&v27[*(int *)(v25 + 24)], (uint64_t)v14);
  v33 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v71 + 6);
  v34 = v33(v14, 1, v15);
  v62 = a1;
  v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v33;
  if ((_DWORD)v34 == 1)
  {
    *(_OWORD *)v21 = xmmword_100EF78C0;
    UnknownStorage.init()(v34);
    sub_10078F968((uint64_t)v14);
  }
  else
  {
    sub_1004B84E0((uint64_t)v14, (uint64_t)v21, type metadata accessor for CRLProto_Data);
  }
  v36 = *v21;
  v35 = v21[1];
  sub_1004BE310(*v21, v35);
  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLProto_Data);
  sub_1004B8930(0, &qword_1013FF470, NSKeyedUnarchiver_ptr);
  v37 = sub_1004B8930(0, (unint64_t *)&unk_1013E8E70, CKUserIdentity_ptr);
  v38 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v37, v36, v35, v37);
  sub_1004BBBC8(v36, v35);
  v39 = v25;
  v40 = v69;
  sub_100552F84((uint64_t)&v27[*(int *)(v25 + 28)], v69);
  v41 = v71(v40, 1, v15);
  v42 = v27;
  v43 = (uint64_t *)v73;
  if ((_DWORD)v41 == 1)
  {
    *v73 = xmmword_100EF78C0;
    UnknownStorage.init()(v41);
    sub_10078F968(v40);
  }
  else
  {
    sub_1004B84E0(v40, (uint64_t)v73, type metadata accessor for CRLProto_Data);
  }
  v44 = *v43;
  v45 = v43[1];
  sub_1004BE310(*v43, v45);
  sub_1004B84A4((uint64_t)v43, type metadata accessor for CRLProto_Data);
  v46 = v70;
  UUID.init(crl_data:)(v44, v45);
  v47 = v62;
  v48 = *(int *)(v39 + 32);
  v73 = v42;
  v49 = *((unsigned __int8 *)v42 + v48);
  v50 = v67;
  v51 = v68;
  v52 = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v66, v46, v67);
  if (v38)
  {
    v53 = v73;
    v54 = *(_QWORD *)v73;
    v55 = v52;
    v56 = (uint64_t)v63;
    *v63 = v38;
    v57 = v64;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v56 + *(int *)(v64 + 20), v55, v50);
    *(_QWORD *)(v56 + *(int *)(v57 + 24)) = v54;
    *(_BYTE *)(v56 + *(int *)(v57 + 28)) = (v49 == 2) | v49 & 1;
    sub_1004B84E0(v56, v65, type metadata accessor for CRLRealTimeEnter);
    sub_1004BBBC8(v47, v28);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v70, v50);
    return sub_1004B84A4((uint64_t)v53, type metadata accessor for CRLProto_RealTimeEnter);
  }
  else
  {
    v58 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v58, 0, 0);
    *v59 = 0;
    swift_willThrow(v60);
    v61 = *(void (**)(char *, uint64_t))(v51 + 8);
    v61(v52, v50);
    sub_1004BBBC8(v47, v28);
    v61(v46, v50);
    return sub_1004B84A4((uint64_t)v73, type metadata accessor for CRLProto_RealTimeEnter);
  }
}

uint64_t sub_10078F194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  __int128 *v29;
  uint64_t (*v30)(void);
  int *v31;
  uint64_t v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  __int128 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  __int128 *v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v58 = (uint64_t)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v57 = (uint64_t)&v49 - v4;
  v5 = type metadata accessor for CRLProto_Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v55 = (__int128 *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v54 = (__int128 *)((char *)&v49 - v9);
  __chkstk_darwin(v10);
  v12 = (__int128 *)((char *)&v49 - v11);
  v13 = (int *)type metadata accessor for CRLProto_RealTimeEnter(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v15 = 0;
  UnknownStorage.init()(v16);
  v17 = (uint64_t)v15 + v13[6];
  v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v6;
  v18 = *(uint64_t (**)(void))(v6 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v17, 1, 1, v5);
  v60 = (uint64_t)v15 + v13[7];
  v19 = v18();
  v20 = v13[8];
  *((_BYTE *)v15 + v20) = 2;
  v59 = xmmword_100EF78C0;
  *v12 = xmmword_100EF78C0;
  UnknownStorage.init()(v19);
  sub_10078F968(v17);
  sub_1004B84E0((uint64_t)v12, v17, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v18)(v17, 0, 1, v5);
  v21 = v0;
  v22 = v61;
  v23 = sub_10078F614();
  v61 = v22;
  if (v22)
    goto LABEL_9;
  v25 = v23;
  v51 = v20;
  v52 = v24;
  v50 = v12;
  v53 = v21;
  v26 = v57;
  sub_100552F84(v17, v57);
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v56 + 6);
  v28 = v27(v26, 1, v5);
  v56 = v27;
  v29 = v54;
  if ((_DWORD)v28 == 1)
  {
    *v54 = v59;
    UnknownStorage.init()(v28);
    sub_10078F968(v26);
  }
  else
  {
    sub_1004B84E0(v26, (uint64_t)v54, type metadata accessor for CRLProto_Data);
  }
  v30 = v18;
  v31 = v13;
  v32 = v60;
  v33 = v50;
  sub_1004BBBC8(*(_QWORD *)v29, *((_QWORD *)v29 + 1));
  v34 = v52;
  *(_QWORD *)v29 = v25;
  *((_QWORD *)v29 + 1) = v34;
  sub_10078F968(v17);
  sub_1004B84E0((uint64_t)v29, v17, type metadata accessor for CRLProto_Data);
  v35 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v30)(v17, 0, 1, v5);
  *v33 = v59;
  UnknownStorage.init()(v35);
  sub_10078F968(v32);
  sub_1004B84E0((uint64_t)v33, v32, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v30)(v32, 0, 1, v5);
  v21 = type metadata accessor for CRLRealTimeEnter(0);
  v36 = v53;
  v57 = UUID.crl_data()();
  v38 = v37;
  v39 = v58;
  sub_100552F84(v32, v58);
  v40 = v56(v39, 1, v5);
  v41 = v55;
  if ((_DWORD)v40 == 1)
  {
    *v55 = v59;
    UnknownStorage.init()(v40);
    sub_10078F968(v39);
  }
  else
  {
    sub_1004B84E0(v39, (uint64_t)v55, type metadata accessor for CRLProto_Data);
  }
  v42 = v51;
  sub_1004BBBC8(*(_QWORD *)v41, *((_QWORD *)v41 + 1));
  *(_QWORD *)v41 = v57;
  *((_QWORD *)v41 + 1) = v38;
  v43 = v60;
  sub_10078F968(v60);
  sub_1004B84E0((uint64_t)v41, v43, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v30)(v43, 0, 1, v5);
  v44 = *(int *)(v21 + 28);
  *v15 = *(_QWORD *)(v36 + *(int *)(v21 + 24));
  *((_BYTE *)v15 + v42) = *(_BYTE *)(v36 + v44);
  v45 = sub_1004B7878(&qword_1013F1980, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25428);
  v46 = v61;
  v47 = Message.serializedData(partial:)(0, v31, v45);
  v61 = v46;
  if (v46)
  {
LABEL_9:
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_RealTimeEnter);
  }
  else
  {
    v21 = v47;
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_RealTimeEnter);
  }
  return v21;
}

void *sub_10078F614()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v5;

  v5 = 0;
  v1 = objc_msgSend((id)objc_opt_self(NSKeyedArchiver), "archivedDataWithRootObject:requiringSecureCoding:error:", v0, 1, &v5);
  v2 = v5;
  if (v1)
  {
    v3 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);

  }
  else
  {
    v3 = v2;
    _convertNSErrorToError(_:)(v2);

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_10078F6E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLProto_Data(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (__int128 *)((char *)&v24 - v8);
  v10 = type metadata accessor for CRLProto_RealTimeLeave(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnknownStorage.init()(v11);
  v25 = v10;
  v14 = (uint64_t)&v13[*(int *)(v10 + 20)];
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v16 = v15(v14, 1, 1, v3);
  v24 = xmmword_100EF78C0;
  *v9 = xmmword_100EF78C0;
  UnknownStorage.init()(v16);
  sub_10078F968(v14);
  sub_1004B84E0((uint64_t)v9, v14, type metadata accessor for CRLProto_Data);
  v15(v14, 0, 1, v3);
  v17 = UUID.crl_data()();
  v19 = v18;
  sub_100552F84(v14, (uint64_t)v2);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)v20 == 1)
  {
    *(_OWORD *)v7 = v24;
    UnknownStorage.init()(v20);
    sub_10078F968((uint64_t)v2);
  }
  else
  {
    sub_1004B84E0((uint64_t)v2, (uint64_t)v7, type metadata accessor for CRLProto_Data);
  }
  sub_1004BBBC8(*(_QWORD *)v7, *((_QWORD *)v7 + 1));
  *(_QWORD *)v7 = v17;
  *((_QWORD *)v7 + 1) = v19;
  sub_10078F968(v14);
  sub_1004B84E0((uint64_t)v7, v14, type metadata accessor for CRLProto_Data);
  v15(v14, 0, 1, v3);
  v21 = sub_1004B7878(&qword_1013E1540, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F252C0);
  v22 = Message.serializedData(partial:)(0, v25, v21);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_RealTimeLeave);
  return v22;
}

uint64_t sub_10078F968(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10078F9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10078F9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10078FA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10078FA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10078FAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10078FAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10078FB00);
}

uint64_t sub_10078FB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10078FB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10078FB48);
}

uint64_t sub_10078FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLRealTimeLeave(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F19E0, (uint64_t)&nominal type descriptor for CRLRealTimeLeave);
}

uint64_t sub_10078FB9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLCountedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCountedSet);
}

id sub_10078FC10()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  id v5;
  char *v6;
  objc_super v8;
  _QWORD aBlock[5];
  _QWORD *v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
  if (v1)
  {
    v2 = (_QWORD *)swift_allocObject(&unk_10127D6E0, 40, 7);
    v2[3] = 0;
    v2[4] = 0;
    v2[2] = v0;
    aBlock[4] = sub_100541D18;
    v10 = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10127D6F8;
    v3 = _Block_copy(aBlock);
    v4 = v10;
    v5 = v1;
    v6 = v0;
    objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, v3, swift_release(v4).n128_f64[0]);
    _Block_release(v3);

  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLInsertEditURLAlert(0);
  return objc_msgSendSuper2(&v8, "dealloc");
}

uint64_t sub_10078FD94()
{
  return type metadata accessor for CRLInsertEditURLAlert(0);
}

uint64_t type metadata accessor for CRLInsertEditURLAlert(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F1AF8;
  if (!qword_1013F1AF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLInsertEditURLAlert);
  return result;
}

uint64_t sub_10078FDD8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_10078FEE4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_10078FFEC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_1007900D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, __n128);
  int v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E87E0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v11);
  v33 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v31 - v18;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48);
  v21 = v20(a1, 1, v5, v17);
  v22 = v21;
  if ((a3 & 1) != 0)
  {
    sub_1005773FC(a1, (uint64_t)v19);
    sub_1005773FC(v34, (uint64_t)v15);
    if (v22 == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
      v24 = (uint64_t)v19;
LABEL_8:
      sub_1004CB800(v24, &qword_1013E04D0);
      v23 = 0;
      return v23 & 1;
    }
    v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1005773FC((uint64_t)v19, (uint64_t)v10);
    sub_1005773FC((uint64_t)v15, v25);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v20)(v10, 1, v5) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
      sub_1004CB800((uint64_t)v19, &qword_1013E04D0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v20)(v25, 1, v5) == 1)
      {
        v24 = (uint64_t)v10;
        goto LABEL_8;
      }
    }
    else
    {
      v26 = v33;
      sub_1005773FC((uint64_t)v10, v33);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v20)(v25, 1, v5) != 1)
      {
        v27 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v32, v25, v5);
        sub_100791980();
        v28 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v27);
        v29 = *(void (**)(char *, uint64_t))(v6 + 8);
        v29(v27, v5);
        sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
        sub_1004CB800((uint64_t)v19, &qword_1013E04D0);
        v29((char *)v26, v5);
        sub_1004CB800((uint64_t)v10, &qword_1013E04D0);
        v23 = v28 ^ 1;
        return v23 & 1;
      }
      sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
      sub_1004CB800((uint64_t)v19, &qword_1013E04D0);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v26, v5);
    }
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E87E0);
    v23 = 1;
    return v23 & 1;
  }
  v23 = v21 != 1;
  return v23 & 1;
}

void sub_1007903EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  void *v13;
  _QWORD v14[5];
  uint64_t v15;

  v2 = v1;
  v4 = (void *)sub_100790604();
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert) = v4;
  v6 = v4;

  v7 = v2 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  v12 = swift_allocObject(&unk_10127D690, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField));
  v14[4] = sub_10079207C;
  v15 = v12;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(_QWORD *)"";
  v14[2] = sub_1005D2FC0;
  v14[3] = &unk_10127D6A8;
  v13 = _Block_copy(v14);
  objc_msgSend(a1, "presentViewController:animated:completion:", v6, 1, v13, swift_release(v15).n128_f64[0]);
  _Block_release(v13);
  sub_100CE39D8(v6);

}

void sub_100790524(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "beginningOfDocument");
    v5 = objc_msgSend(v3, "endOfDocument");
    v6 = objc_msgSend(v3, "textRangeFromPosition:toPosition:", v4, v5);

    objc_msgSend(v3, "setSelectedTextRange:", v6);
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v3);

  }
}

unint64_t sub_100790604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  NSString v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;

  sub_10078FDD8();
  v2 = v1;
  sub_10078FEE4();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, v6, 1);

  v8 = sub_1007919C8();
  objc_msgSend(v7, "_setHeaderContentViewController:", v8);

  v9 = swift_allocObject(&unk_10127D5A0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v0);
  v41 = sub_100791D5C;
  v42 = v9;
  v37 = _NSConcreteStackBlock;
  v38 = *(_QWORD *)"";
  v39 = sub_1004C6194;
  v40 = &unk_10127D5B8;
  v10 = _Block_copy(&v37);
  objc_msgSend(v7, "addTextFieldWithConfigurationHandler:", v10, swift_release(v42).n128_f64[0]);
  _Block_release(v10);
  sub_10078FFEC();
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v14 = swift_allocObject(&unk_10127D5A0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v0);
  v41 = sub_100791D7C;
  v42 = v14;
  v37 = _NSConcreteStackBlock;
  v38 = *(_QWORD *)"";
  v39 = sub_1005D2FC0;
  v40 = &unk_10127D5E0;
  v15 = _Block_copy(&v37);
  swift_release(v42);
  v41 = CRLWPShapeLayout.descendersCannotClip.getter;
  v42 = 0;
  v37 = _NSConcreteStackBlock;
  v38 = *(_QWORD *)"";
  v39 = sub_10053C9E0;
  v40 = &unk_10127D608;
  v16 = _Block_copy(&v37);
  objc_msgSend(v7, "_addActionWithTitle:style:handler:shouldDismissHandler:", v13, 0, v15, v16);
  _Block_release(v16);
  _Block_release(v15);

  v17 = objc_msgSend(v7, "actions");
  v18 = sub_1004B8930(0, &qword_1013F1B20, UIAlertAction_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v36 = v19;
    else
      v36 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v20 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v19);
    if (!v20)
      goto LABEL_9;
LABEL_3:
    result = v20 - 1;
    if (__OFSUB__(v20, 1))
    {
      __break(1u);
    }
    else if ((v19 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v22 = *(id *)(v19 + 8 * result + 32);
LABEL_8:
        v20 = (uint64_t)v22;
        goto LABEL_9;
      }
      __break(1u);
      return result;
    }
    v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v19);
    goto LABEL_8;
  }
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v20)
    goto LABEL_3;
LABEL_9:
  swift_bridgeObjectRelease(v19);
  v23 = OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction;
  v24 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction) = v20;

  v25 = *(void **)(v0 + v23);
  if (v25)
    objc_msgSend(v25, "setEnabled:", 0);
  v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v31 = v30;

  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v33 = swift_allocObject(&unk_10127D5A0, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, v0);
  v41 = sub_100791D84;
  v42 = v33;
  v37 = _NSConcreteStackBlock;
  v38 = *(_QWORD *)"";
  v39 = sub_1005D2FC0;
  v40 = &unk_10127D630;
  v34 = _Block_copy(&v37);
  swift_release(v42);
  v41 = CRLWPShapeLayout.columnsAreLeftToRight.getter;
  v42 = 0;
  v37 = _NSConcreteStackBlock;
  v38 = *(_QWORD *)"";
  v39 = sub_10053C9E0;
  v40 = &unk_10127D658;
  v35 = _Block_copy(&v37);
  objc_msgSend(v7, "_addActionWithTitle:style:handler:shouldDismissHandler:", v32, 1, v34, v35);
  _Block_release(v35);
  _Block_release(v34);

  return (unint64_t)v7;
}

void sub_100790AE8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  NSString v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  _BYTE v27[24];
  char v28[24];

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (char *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role) == 1)
    {
      v13 = Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL;
      swift_beginAccess(Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL, v27, 0, 0);
      sub_1005773FC(v13, (uint64_t)v10);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
      {
        sub_1004CB800((uint64_t)v10, &qword_1013E04D0);
        v15 = 0;
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
        sub_1004CB800((uint64_t)v10, &qword_1013E04D0);
        sub_100630030();
        v24 = v23;
        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
        v15 = String._bridgeToObjectiveC()();
        v14 = swift_bridgeObjectRelease(v24).n128_u64[0];
      }
      v22 = &selRef_setText_;
    }
    else
    {
      v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v17 = String._bridgeToObjectiveC()();
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v21 = v20;

      v15 = String._bridgeToObjectiveC()();
      v14 = swift_bridgeObjectRelease(v21).n128_u64[0];
      v22 = &selRef_setPlaceholder_;
    }
    objc_msgSend(a1, *v22, v15, *(double *)&v14);

    objc_msgSend(a1, "setAutocorrectionType:", 1);
    objc_msgSend(a1, "setAutocapitalizationType:", 0);
    objc_msgSend(a1, "setSpellCheckingType:", 1);
    objc_msgSend(a1, "setKeyboardType:", 3);
    objc_msgSend(a1, "setTextAlignment:", 0);
    objc_msgSend(a1, "makeTextWritingDirectionLeftToRight:", 0);
    objc_msgSend(a1, "setSemanticContentAttribute:", 3);
    objc_msgSend(a1, "setClearButtonMode:", 1);
    objc_msgSend(a1, "setDelegate:", v12);
    v25 = *(void **)&v12[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField];
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField] = a1;
    v26 = a1;

  }
}

void sub_100790E54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *Strong;
  char *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  id v38;
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  id v48;
  id v49;
  char v50[24];
  char v51[24];

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E87E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E04D0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v44 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v44 - v16;
  a1 += 16;
  swift_beginAccess(a1, v51, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v19 = Strong;
    v20 = *(void **)&Strong[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField];
    if (!v20)
    {

      return;
    }
    v46 = v5;
    v47 = v12;
    v21 = v3;
    v22 = v20;
    objc_msgSend(v22, "resignFirstResponder");
    v23 = sub_100791D8C(v22);
    objc_msgSend(v23, "startAnimating");
    v24 = objc_msgSend(v22, "text");
    v48 = v23;
    v49 = v22;
    if (v24)
    {
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0xE000000000000000;
    }
    v29 = v21;
    sub_10062EE78(v26, v28, (uint64_t)v17);
    swift_bridgeObjectRelease(v28);
    v30 = &v19[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate];
    v31 = swift_unknownObjectWeakLoadStrong(&v19[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate]);
    if (!v31)
    {
      sub_1004CB800((uint64_t)v17, &qword_1013E04D0);

      return;
    }
    v32 = v31;
    v33 = *((_QWORD *)v30 + 1);
    v34 = (uint64_t)&v19[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL];
    swift_beginAccess(&v19[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL], v50, 0, 0);
    sub_1005773FC(v34, (uint64_t)v15);
    v35 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_1005773FC((uint64_t)v17, (uint64_t)v8);
    sub_1005773FC((uint64_t)v15, v35);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    if (v36((uint64_t)v8, 1, v2) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
      if (v36(v35, 1, v2) == 1)
      {
        sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
        v37 = 0;
        v38 = v49;
LABEL_16:
        ObjectType = swift_getObjectType(v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 8))(v17, v37 & 1, ObjectType, v33);

        swift_unknownObjectRelease(v32);
        sub_1004CB800((uint64_t)v17, &qword_1013E04D0);
        return;
      }
    }
    else
    {
      v45 = v33;
      v39 = (uint64_t)v47;
      sub_1005773FC((uint64_t)v8, (uint64_t)v47);
      if (v36(v35, 1, v2) != 1)
      {
        v40 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v46, v35, v2);
        sub_100791980();
        v41 = dispatch thunk of static Equatable.== infix(_:_:)(v39, v40);
        v42 = *(void (**)(char *, uint64_t))(v29 + 8);
        v42(v40, v2);
        sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
        v42((char *)v39, v2);
        sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
        v37 = v41 ^ 1;
        v38 = v49;
        v33 = v45;
        goto LABEL_16;
      }
      sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v39, v2);
      v33 = v45;
    }
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E87E0);
    v37 = 1;
    v38 = v49;
    goto LABEL_16;
  }
}

void sub_100791274(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate);
    v6 = *(_QWORD *)(v4 + 8);

    if (v5)
    {
      ObjectType = swift_getObjectType(v5);
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_100791304(uint64_t a1, void (*a2)(void))
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert) = 0;

  v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField) = 0;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction) = 0;

  if (a2)
    a2();
}

void sub_1007913A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100F0AA78;
  v4[1] = &unk_100F0AA90;
  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100F0AAA8;
    v4[4] = &unk_100F0AAA8;
    v4[5] = &unk_100F0AAA8;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_10079142C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  NSString v21;
  id v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  id v27;
  _BYTE v30[24];

  v11 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = &v30[-v16 - 8];
  v18 = objc_msgSend(a1, "text", v15);
  v19 = v18;
  if (v18)
  {
    v20 = v18;
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "stringByReplacingCharactersInRange:withString:", a2, a3, v21);

    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    a5 = v23;

  }
  else
  {
    swift_bridgeObjectRetain(a5);
  }
  if (String.count.getter(a4, a5) < 1)
  {
    swift_bridgeObjectRelease();
    v26 = 0;
  }
  else
  {
    sub_10062EE78(a4, a5, (uint64_t)v17);
    v24 = *(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role);
    v25 = v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL;
    swift_beginAccess(v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL, v30, 0, 0);
    sub_1005773FC(v25, (uint64_t)v13);
    v26 = sub_1007900D0((uint64_t)v17, (uint64_t)v13, v24);
    sub_1004CB800((uint64_t)v13, &qword_1013E04D0);
    sub_1004CB800((uint64_t)v17, &qword_1013E04D0);
    swift_bridgeObjectRelease();
  }
  v27 = *(id *)(v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction);
  objc_msgSend(v27, "setEnabled:", v26 & 1);

  return 1;
}

uint64_t sub_1007916BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  _BYTE v20[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = &v20[-v8 - 8];
  v10 = objc_msgSend(a1, "text", v7);
  if (!v10)
    goto LABEL_5;
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v14 = v13;

  if (String.count.getter(v12, v14) < 1)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v17 = 0;
    return v17 & 1;
  }
  sub_10062EE78(v12, v14, (uint64_t)v9);
  v15 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role);
  v16 = v1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL;
  swift_beginAccess(v16, v20, 0, 0);
  sub_1005773FC(v16, (uint64_t)v5);
  v17 = sub_1007900D0((uint64_t)v9, (uint64_t)v5, v15);
  sub_1004CB800((uint64_t)v5, &qword_1013E04D0);
  sub_1004CB800((uint64_t)v9, &qword_1013E04D0);
  swift_bridgeObjectRelease();
  return v17 & 1;
}

uint64_t storeEnumTagSinglePayload for CRLInsertEditURLAlert.Role(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1007918B8 + 4 * byte_100F0AA25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1007918EC + 4 * byte_100F0AA20[v4]))();
}

uint64_t sub_1007918EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007918F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1007918FCLL);
  return result;
}

uint64_t sub_100791908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100791910);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100791914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10079191C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLInsertEditURLAlert.Role()
{
  return &type metadata for CRLInsertEditURLAlert.Role;
}

unint64_t sub_10079193C()
{
  unint64_t result;

  result = qword_1013F1B10;
  if (!qword_1013F1B10)
  {
    result = swift_getWitnessTable(&unk_100F0AB08, &type metadata for CRLInsertEditURLAlert.Role);
    atomic_store(result, (unint64_t *)&qword_1013F1B10);
  }
  return result;
}

unint64_t sub_100791980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E87F8;
  if (!qword_1013E87F8)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1013E87F8);
  }
  return result;
}

id sub_1007919C8()
{
  id v0;
  id v1;
  NSString v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);

  v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v3);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v4);
  objc_msgSend(v0, "setView:", v1);
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF7D00;
  v8 = objc_msgSend(v4, "topAnchor");
  v9 = objc_msgSend(v1, "topAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, 16.0);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v4, "centerXAnchor");
  v12 = objc_msgSend(v1, "centerXAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v4, "bottomAnchor");
  v15 = objc_msgSend(v1, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v7 + 48) = v16;
  v17 = objc_msgSend(v4, "widthAnchor");
  v18 = objc_msgSend(v17, "constraintEqualToConstant:", 32.0);

  *(_QWORD *)(v7 + 56) = v18;
  v19 = objc_msgSend(v4, "heightAnchor");
  v20 = objc_msgSend(v19, "constraintEqualToConstant:", 32.0);

  *(_QWORD *)(v7 + 64) = v20;
  specialized Array._endMutation()(v21);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  return v0;
}

uint64_t sub_100791D38()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100791D5C(void *a1)
{
  uint64_t v1;

  sub_100790AE8(a1, v1);
}

uint64_t sub_100791D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100791D74(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100791D7C()
{
  uint64_t v0;

  sub_100790E54(v0);
}

void sub_100791D84()
{
  uint64_t v0;

  sub_100791274(v0);
}

id sub_100791D8C(void *a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v3, "addSubview:", v2);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EF7310;
  v7 = objc_msgSend(v2, "topAnchor");
  v8 = objc_msgSend(v3, "topAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, 0.0);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(v2, "leadingAnchor");
  v11 = objc_msgSend(v3, "leadingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, 0.0);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(v2, "bottomAnchor");
  v14 = objc_msgSend(v3, "bottomAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, 0.0);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(v2, "trailingAnchor");
  v17 = objc_msgSend(v3, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, -0.0);

  *(_QWORD *)(v6 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  objc_msgSend(a1, "setRightView:", v3);
  objc_msgSend(a1, "setRightViewMode:", 3);

  return v2;
}

void sub_10079207C()
{
  uint64_t v0;

  sub_100790524(v0);
}

uint64_t sub_100792084()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

NSString sub_1007920EC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F5C0 = (uint64_t)result;
  return result;
}

uint64_t sub_100792120()
{
  uint64_t v0;

  sub_1004CBB0C(v0 + 16);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLCloudAccountChangeObserverWrapper()
{
  return objc_opt_self(_TtC8FreeformP33_E0ACB756C8B339BACA6813337E06614B36CRLCloudAccountChangeObserverWrapper);
}

Swift::Int sub_100792164(uint64_t a1)
{
  Swift::UInt *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  Hasher._combine(_:)(*v1);
  return Hasher._finalize()();
}

uint64_t sub_1007921A0(uint64_t *a1, uint64_t *a2)
{
  return sub_1007AE98C(*a1, *a2);
}

uint64_t sub_1007921AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x5320646572616853;
  else
    return 0x2065746176697250;
}

void sub_1007921FC(_QWORD *a1@<X8>)
{
  *a1 = &off_101263A80;
}

uint64_t (*sub_10079220C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j__swift_endAccess_0;
}

uint64_t sub_100792248(void *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  SCNetworkReachabilityRef v8;
  SCNetworkReachabilityRef v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  sockaddr address;
  __int128 v20;
  _UNKNOWN **v21;
  _BYTE v22[24];

  v4 = v3;
  v7 = a2 & 1;
  *(_QWORD *)(v3 + 40) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&address.sa_data[6] = 0;
  *(_QWORD *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  v8 = SCNetworkReachabilityCreateWithAddress(0, &address);
  if (v8)
  {
    v9 = v8;
    v10 = type metadata accessor for CRLNetworkReachabilityListener();
    swift_allocObject(v10, 88, 7);
    v11 = sub_1008F07BC(v9);
    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = v7;
    if (v11)
    {
      *((_QWORD *)&v20 + 1) = v10;
      v21 = &off_101286E28;
      *(_QWORD *)&address.sa_len = v11;
      goto LABEL_7;
    }
  }
  else
  {
    if (qword_1013DD720 != -1)
      swift_once(&qword_1013DD720, sub_100A01CD8);
    swift_beginAccess(&static OS_os_log.crlNetworkReachability, v22, 0, 0);
    v12 = (id)static OS_os_log.crlNetworkReachability;
    v13 = static os_log_type_t.error.getter(v12);
    sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v13, "Failed to create network rechability for zero address.", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

    *(_QWORD *)(v4 + 24) = a1;
    *(_BYTE *)(v4 + 32) = v7;
  }
  v21 = 0;
  address = (sockaddr)0;
  v20 = 0u;
LABEL_7:
  v14 = type metadata accessor for CRLSyncScheduler();
  v15 = swift_allocObject(v14, 128, 7);
  *(_QWORD *)(v15 + 104) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v15 + 112) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v15 + 120) = &_swiftEmptySetSingleton;
  sub_1004C4938((uint64_t)&address, v15 + 16, &qword_1013E6100);
  v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 80) = v16;
  *(_QWORD *)(v15 + 96) = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(v15 + 56) = a1;
  *(_QWORD *)(v4 + 16) = v15;
  v17 = a1;
  return v4;
}

uint64_t sub_10079243C(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(char *, uint64_t, uint64_t, int *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  unsigned int (*v58)(uint64_t, uint64_t, int *);
  uint64_t v59;
  id v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  id v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;

  v90 = a2;
  v3 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v3);
  v79 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v87 = (uint64_t)&v78 - v6;
  __chkstk_darwin(v7);
  v84 = (char *)&v78 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v78 - v10;
  v12 = (int *)type metadata accessor for CRLThrottleInfo(0);
  v88 = (_QWORD *)*((_QWORD *)v12 - 1);
  __chkstk_darwin(v12);
  v83 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v82 = (char *)&v78 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v78 - v17;
  v19 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v23);
  v78 = (uint64_t)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v86 = (uint64_t)&v78 - v26;
  __chkstk_darwin(v27);
  v81 = (uint64_t)&v78 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v78 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v78 - v33;
  Date.init()(v35);
  v36 = (void *)_convertErrorToNSError(_:)(a1);
  v37 = CKRetryAfterSecondsForError();

  Date.advanced(by:)(v37);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v80(v34, 0, 1, v19);
  v92 = a1;
  type metadata accessor for CKError(0);
  v39 = v38;
  v40 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  _BridgedStoredNSError.code.getter(v39, v40);
  if (v93 <= 0x21 && ((1 << v93) & 0x208008002) != 0)
    v41 = 8;
  else
    v41 = 12;
  v85 = v41;
  v92 = a1;
  _BridgedStoredNSError.code.getter(v39, v40);
  if (v93 == 23
    || (v91 = a1, _BridgedStoredNSError.code.getter(v39, v40), v92 > 0x24)
    || ((1 << v92) & 0x1000A002D8) == 0)
  {
    v42 = (uint64_t)v89;
    v43 = v90;
    v44 = v42
        + *(int *)(type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0) + 24);
    v45 = *(_QWORD *)v44;
    if (*(_QWORD *)(*(_QWORD *)v44 + 16))
    {
      v46 = v43;
      v47 = sub_100843894((uint64_t)v46);
      if ((v48 & 1) != 0)
      {
        v49 = *(_QWORD *)(v45 + 56);
        v50 = v88;
        sub_1004B8460(v49 + v88[9] * v47, (uint64_t)v11, type metadata accessor for CRLThrottleInfo);
        v51 = (void (*)(char *, uint64_t, uint64_t, int *))v50[7];
        v51(v11, 0, 1, v12);
      }
      else
      {
        v50 = v88;
        v51 = (void (*)(char *, uint64_t, uint64_t, int *))v88[7];
        v51(v11, 1, 1, v12);
      }

      v43 = v90;
    }
    else
    {
      v50 = v88;
      v51 = (void (*)(char *, uint64_t, uint64_t, int *))v88[7];
      v51(v11, 1, 1, v12);
    }
    sub_1004CB7BC((uint64_t)v34, (uint64_t)v31, &qword_1013E04F0);
    if (((unsigned int (*)(char *, uint64_t, int *))v50[6])(v11, 1, v12) == 1)
    {
      v66 = v81;
      sub_1004CB7BC((uint64_t)v31, v81, &qword_1013E04F0);
      v89 = v11;
      v67 = (uint64_t)v82;
      v80(v82, 1, 1, v19);
      *(_QWORD *)(v67 + v12[7]) = 0;
      v68 = v43;
      sub_100582338(v66, v67, &qword_1013E04F0);
      *(_QWORD *)(v67 + v12[5]) = v68;
      v69 = v85;
      *(_QWORD *)(v67 + v12[6]) = v85;
      sub_1004B84E0(v67, (uint64_t)v18, type metadata accessor for CRLThrottleInfo);
      sub_1004CB800((uint64_t)v31, &qword_1013E04F0);
      sub_1004CB800((uint64_t)v89, &qword_1013F1EF0);
      v70 = (uint64_t)v84;
    }
    else
    {
      sub_1004CB800((uint64_t)v31, &qword_1013E04F0);
      sub_1004B84E0((uint64_t)v11, (uint64_t)v18, type metadata accessor for CRLThrottleInfo);
      v70 = (uint64_t)v84;
      v69 = v85;
    }
    sub_1007B2168((uint64_t)v34, (uint64_t)v18);
    *(_QWORD *)&v18[v12[6]] = v69;
    sub_1004B8460((uint64_t)v18, v70, type metadata accessor for CRLThrottleInfo);
    v51((char *)v70, 0, 1, v12);
    sub_10083E5B4(v70, v43);
    sub_1004CB800((uint64_t)v34, &qword_1013E04F0);
  }
  else
  {
    v52 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
    v53 = (uint64_t)v89;
    v54 = (uint64_t)&v89[*(int *)(v52 + 20)];
    v55 = v87;
    sub_1004CB7BC(v54, v87, &qword_1013F1EF0);
    v56 = v86;
    sub_1004CB7BC((uint64_t)v34, v86, &qword_1013E04F0);
    v57 = v88;
    v58 = (unsigned int (*)(uint64_t, uint64_t, int *))v88[6];
    if (v58(v55, 1, v12) == 1)
    {
      v59 = *(_QWORD *)(v53 + *(int *)(v52 + 24));
      if (*(_QWORD *)(v59 + 16))
      {
        v60 = v90;
        v61 = sub_100843894((uint64_t)v60);
        if ((v62 & 1) != 0)
        {
          v63 = *(_QWORD *)(v59 + 56) + v57[9] * v61;
          v64 = v79;
          sub_1004B8460(v63, v79, type metadata accessor for CRLThrottleInfo);
          ((void (*)(uint64_t, _QWORD, uint64_t, int *))v57[7])(v64, 0, 1, v12);
        }
        else
        {
          v64 = v79;
          ((void (*)(uint64_t, uint64_t, uint64_t, int *))v57[7])(v79, 1, 1, v12);
        }

      }
      else
      {
        v64 = v79;
        ((void (*)(uint64_t, uint64_t, uint64_t, int *))v57[7])(v79, 1, 1, v12);
      }
      v65 = v83;
      v71 = v78;
      v72 = v86;
      sub_1004CB7BC(v86, v78, &qword_1013E04F0);
      if (v58(v64, 1, v12) == 1)
      {
        v73 = v81;
        sub_1004CB7BC(v71, v81, &qword_1013E04F0);
        v74 = (uint64_t)v82;
        v80(v82, 1, 1, v19);
        *(_QWORD *)(v74 + v12[7]) = 0;
        v75 = v71;
        v76 = v90;
        sub_100582338(v73, v74, &qword_1013E04F0);
        *(_QWORD *)(v74 + v12[5]) = v76;
        *(_QWORD *)(v74 + v12[6]) = v85;
        sub_1004B84E0(v74, v65, type metadata accessor for CRLThrottleInfo);
        sub_1004CB800(v75, &qword_1013E04F0);
        sub_1004CB800(v72, &qword_1013E04F0);
        sub_1004CB800(v79, &qword_1013F1EF0);
      }
      else
      {
        sub_1004CB800(v71, &qword_1013E04F0);
        sub_1004CB800(v72, &qword_1013E04F0);
        sub_1004B84E0(v64, v65, type metadata accessor for CRLThrottleInfo);
      }
      sub_1004CB800(v87, &qword_1013F1EF0);
    }
    else
    {
      sub_1004CB800(v56, &qword_1013E04F0);
      v65 = v83;
      sub_1004B84E0(v55, v83, type metadata accessor for CRLThrottleInfo);
    }
    sub_100582338((uint64_t)v34, v65, &qword_1013E04F0);
    *(_QWORD *)(v65 + v12[6]) = 0x7FFFFFFFFFFFFFFFLL;
    sub_1004CB800(v54, &qword_1013F1EF0);
    sub_1004B8460(v65, v54, type metadata accessor for CRLThrottleInfo);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v57[7])(v54, 0, 1, v12);
    v18 = (char *)v65;
  }
  return sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLThrottleInfo);
}

void sub_100792CB0(void *a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, int *);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  id v25;
  id v26;
  id v27;
  id v28;
  void (*v29)(_QWORD *);
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  _QWORD v49[4];

  v3 = (int *)type metadata accessor for CRLThrottleInfo(0);
  v4 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - v14;
  v46 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v47 = v1;
  v16 = (uint64_t *)(v1 + *(int *)(v46 + 24));
  v17 = *v16;
  v18 = *(_QWORD *)(*v16 + 16);
  v48 = a1;
  if (!v18)
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56);
    v22(v12, 1, 1, v3);
LABEL_7:
    v23 = type metadata accessor for Date(0);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v24(v9, 1, 1, v23);
    v24(v6, 1, 1, v23);
    *(_QWORD *)&v6[v3[7]] = 0;
    v25 = v48;
    v26 = v48;
    sub_100582338((uint64_t)v9, (uint64_t)v6, &qword_1013E04F0);
    *(_QWORD *)&v6[v3[5]] = v26;
    *(_QWORD *)&v6[v3[6]] = 12;
    sub_1004B84E0((uint64_t)v6, (uint64_t)v15, type metadata accessor for CRLThrottleInfo);
    sub_1004CB800((uint64_t)v12, &qword_1013F1EF0);
    goto LABEL_9;
  }
  v19 = a1;
  v20 = sub_100843894((uint64_t)v19);
  if ((v21 & 1) != 0)
  {
    sub_1004B8460(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v4 + 72) * v20, (uint64_t)v12, type metadata accessor for CRLThrottleInfo);
    v22 = *(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56);
    v22(v12, 0, 1, v3);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56);
    v22(v12, 1, 1, v3);
  }

  if ((*(unsigned int (**)(char *, uint64_t, int *))(v4 + 48))(v12, 1, v3) == 1)
    goto LABEL_7;
  sub_1004B84E0((uint64_t)v12, (uint64_t)v15, type metadata accessor for CRLThrottleInfo);
  v25 = v48;
LABEL_9:
  v22(v15, 0, 1, v3);
  v27 = v25;
  sub_10083E5B4((uint64_t)v15, v27);
  v28 = v27;
  v29 = sub_100CF9CCC(v49, v28);
  v31 = v30;
  v32 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v4 + 48);
  if (!v32(v30, 1, v3))
  {
    v33 = v3[7];
    v34 = *(_QWORD *)(v31 + v33);
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
    {
      __break(1u);
      goto LABEL_19;
    }
    *(_QWORD *)(v31 + v33) = v36;
  }
  ((void (*)(_QWORD *, _QWORD))v29)(v49, 0);

  v37 = v47 + *(int *)(v46 + 20);
  if (!v32(v37, 1, v3))
  {
    v38 = *(void **)(v37 + v3[5]);
    sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v39 = v28;
    v40 = v38;
    v41 = static NSObject.== infix(_:_:)(v40, v39);

    if ((v41 & 1) != 0 && !v32(v37, 1, v3))
    {
      v42 = v3[7];
      v43 = *(_QWORD *)(v37 + v42);
      v35 = __OFADD__(v43, 1);
      v44 = v43 + 1;
      if (!v35)
      {
        *(_QWORD *)(v37 + v42) = v44;
        return;
      }
LABEL_19:
      __break(1u);
    }
  }
}

BOOL sub_100793044(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v17;

  v3 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLThrottleInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1
                  + *(int *)(type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0)
                           + 24));
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = a1;
    v12 = sub_100843894((uint64_t)v11);
    if ((v13 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v10 + 56) + *(_QWORD *)(v7 + 72) * v12, (uint64_t)v5, type metadata accessor for CRLThrottleInfo);
      v14 = 0;
    }
    else
    {
      v14 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v14, 1, v6);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_1004B84E0((uint64_t)v5, (uint64_t)v9, type metadata accessor for CRLThrottleInfo);
      v15 = *(_QWORD *)&v9[*(int *)(v6 + 28)] >= *(_QWORD *)&v9[*(int *)(v6 + 24)];
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLThrottleInfo);
      return v15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_1004CB800((uint64_t)v5, &qword_1013F1EF0);
  return 0;
}

void sub_1007931D8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  id *v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  char *v107;
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  uint64_t v110;

  v2 = v1;
  v89 = a1;
  v3 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v3);
  v92 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v100 = (char *)&v86 - v6;
  v7 = type metadata accessor for Date(0);
  v94 = *(_QWORD *)(v7 - 8);
  v95 = v7;
  __chkstk_darwin(v7);
  v88 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v91 = (char *)&v86 - v10;
  v11 = sub_1004B804C(&qword_1013F21C0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (id *)((char *)&v86 - v15);
  v17 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v17);
  v107 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v105 = (uint64_t)&v86 - v20;
  __chkstk_darwin(v21);
  v110 = (uint64_t)&v86 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v86 - v24;
  v26 = type metadata accessor for CRLThrottleInfo(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v98 = (uint64_t)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v96 = (char *)&v86 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v86 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v86 - v35;
  v37 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  sub_1004CB7BC(v2 + *(int *)(v37 + 20), (uint64_t)v25, &qword_1013F1EF0);
  v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v108(v25, 1, v26) != 1)
  {
    sub_1004B84E0((uint64_t)v25, (uint64_t)v36, type metadata accessor for CRLThrottleInfo);
    if (*(_QWORD *)&v36[*(int *)(v26 + 28)] >= *(_QWORD *)&v36[*(int *)(v26 + 24)])
    {
      sub_1004B84A4((uint64_t)v36, type metadata accessor for CRLThrottleInfo);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v89, 1, 1, v26);
    }
    else
    {
      v84 = (uint64_t)v36;
      v85 = v89;
      sub_1004B84E0(v84, v89, type metadata accessor for CRLThrottleInfo);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v85, 0, 1, v26);
    }
    return;
  }
  sub_1004CB800((uint64_t)v25, &qword_1013F1EF0);
  v38 = *(_QWORD *)(v2 + *(int *)(v37 + 24));
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  if (!*(_QWORD *)(v38 + 16))
  {
    v39(v89, 1, 1, v26);
    return;
  }
  v109 = v33;
  v99 = v27;
  v104 = v26;
  v93 = v39;
  v39(v110, 1, 1, v26);
  v40 = *(_QWORD *)(v38 + 64);
  v90 = v38 + 64;
  v41 = 1 << *(_BYTE *)(v38 + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v43 = v42 & v40;
  v97 = (unint64_t)(v41 + 63) >> 6;
  v87 = v97 - 1;
  v101 = v38;
  swift_bridgeObjectRetain(v38);
  v106 = 0;
  v44 = &qword_1013E04F0;
  v45 = (uint64_t)v107;
  v46 = (uint64_t)v96;
  v102 = v13;
  v103 = v16;
  while (v43)
  {
    v47 = __clz(__rbit64(v43));
    v43 &= v43 - 1;
    v48 = v47 | (v106 << 6);
LABEL_10:
    v49 = *(_QWORD *)(v101 + 56);
    v50 = *(void **)(*(_QWORD *)(v101 + 48) + 8 * v48);
    *v13 = v50;
    v51 = v49 + *(_QWORD *)(v99 + 72) * v48;
    v52 = sub_1004B804C(&qword_1013F21C8);
    sub_1004B8460(v51, (uint64_t)v13 + *(int *)(v52 + 48), type metadata accessor for CRLThrottleInfo);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v13, 0, 1, v52);
    v53 = v50;
    v45 = (uint64_t)v107;
LABEL_29:
    sub_1004C4938((uint64_t)v13, (uint64_t)v16, &qword_1013F21C0);
    v58 = sub_1004B804C(&qword_1013F21C8);
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v16, 1, v58) == 1)
    {
      swift_release(v101);
      sub_1004C4938(v110, v89, &qword_1013F1EF0);
      return;
    }
    v59 = v44;

    v60 = (uint64_t)v16 + *(int *)(v58 + 48);
    v61 = (uint64_t)v109;
    sub_1004B84E0(v60, (uint64_t)v109, type metadata accessor for CRLThrottleInfo);
    v62 = v105;
    sub_1004CB7BC(v110, v105, &qword_1013F1EF0);
    v63 = v104;
    v64 = v108((char *)v62, 1, v104);
    sub_1004CB800(v62, &qword_1013F1EF0);
    sub_1004B8460(v61, v46, type metadata accessor for CRLThrottleInfo);
    if (v64 == 1 && *(_QWORD *)(v46 + *(int *)(v63 + 28)) < *(_QWORD *)(v46 + *(int *)(v63 + 24)))
    {
      sub_1004B84A4(v46, type metadata accessor for CRLThrottleInfo);
      v65 = v110;
      sub_1004CB800(v110, &qword_1013F1EF0);
      sub_1004B84E0((uint64_t)v109, v65, type metadata accessor for CRLThrottleInfo);
      v93(v65, 0, 1, v63);
      v13 = v102;
      v16 = v103;
      v44 = v59;
    }
    else
    {
      sub_1004B84A4(v46, type metadata accessor for CRLThrottleInfo);
      sub_1004CB7BC(v110, v45, &qword_1013F1EF0);
      v66 = v108((char *)v45, 1, v63);
      v67 = (uint64_t)v100;
      v44 = v59;
      if (v66 == 1)
      {
        sub_1004B84A4((uint64_t)v109, type metadata accessor for CRLThrottleInfo);
        sub_1004CB800(v45, &qword_1013F1EF0);
        goto LABEL_7;
      }
      v68 = v98;
      sub_1004B84E0(v45, v98, type metadata accessor for CRLThrottleInfo);
      sub_1004CB7BC(v68, v67, v59);
      v70 = v94;
      v69 = v95;
      v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
      if (v71(v67, 1, v95) == 1)
      {
        sub_1004B84A4(v68, type metadata accessor for CRLThrottleInfo);
        sub_1004B84A4((uint64_t)v109, type metadata accessor for CRLThrottleInfo);
        v72 = v67;
LABEL_38:
        sub_1004CB800(v72, v44);
        v45 = (uint64_t)v107;
        v46 = (uint64_t)v96;
LABEL_7:
        v13 = v102;
        v16 = v103;
      }
      else
      {
        v73 = v67;
        v74 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
        v75 = v91;
        v74(v91, v73, v69);
        v76 = (uint64_t)v109;
        v77 = v92;
        sub_1004CB7BC((uint64_t)v109, v92, v44);
        if (v71(v77, 1, v69) == 1)
        {
          (*(void (**)(char *, uint64_t))(v70 + 8))(v75, v69);
          sub_1004B84A4(v98, type metadata accessor for CRLThrottleInfo);
          sub_1004B84A4(v76, type metadata accessor for CRLThrottleInfo);
          v72 = v77;
          goto LABEL_38;
        }
        v78 = v88;
        v74(v88, v77, v69);
        v79 = static Date.> infix(_:_:)(v75, v78);
        v80 = *(void (**)(char *, uint64_t))(v70 + 8);
        v80(v78, v69);
        v80(v75, v69);
        sub_1004B84A4(v98, type metadata accessor for CRLThrottleInfo);
        v46 = (uint64_t)v96;
        v13 = v102;
        if ((v79 & 1) != 0)
        {
          v16 = v103;
          v81 = v104;
          v82 = (uint64_t)v109;
          v45 = (uint64_t)v107;
          if (*(_QWORD *)&v109[*(int *)(v104 + 28)] >= *(_QWORD *)&v109[*(int *)(v104 + 24)])
          {
            sub_1004B84A4((uint64_t)v109, type metadata accessor for CRLThrottleInfo);
          }
          else
          {
            v83 = v110;
            sub_1004CB800(v110, &qword_1013F1EF0);
            sub_1004B84E0(v82, v83, type metadata accessor for CRLThrottleInfo);
            v93(v83, 0, 1, v81);
          }
        }
        else
        {
          sub_1004B84A4((uint64_t)v109, type metadata accessor for CRLThrottleInfo);
          v45 = (uint64_t)v107;
          v16 = v103;
        }
      }
    }
  }
  v54 = v106 + 1;
  if (__OFADD__(v106, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v54 >= v97)
  {
LABEL_28:
    v57 = sub_1004B804C(&qword_1013F21C8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v13, 1, 1, v57);
    v43 = 0;
    goto LABEL_29;
  }
  v55 = *(_QWORD *)(v90 + 8 * v54);
  if (v55)
  {
LABEL_14:
    v43 = (v55 - 1) & v55;
    v48 = __clz(__rbit64(v55)) + (v54 << 6);
    v106 = v54;
    goto LABEL_10;
  }
  v56 = v106 + 2;
  ++v106;
  if (v54 + 1 >= v97)
    goto LABEL_28;
  v55 = *(_QWORD *)(v90 + 8 * v56);
  if (v55)
    goto LABEL_17;
  v106 = v54 + 1;
  if (v54 + 2 >= v97)
    goto LABEL_28;
  v55 = *(_QWORD *)(v90 + 8 * (v54 + 2));
  if (v55)
  {
    v54 += 2;
    goto LABEL_14;
  }
  v56 = v54 + 3;
  v106 = v54 + 2;
  if (v54 + 3 >= v97)
    goto LABEL_28;
  v55 = *(_QWORD *)(v90 + 8 * v56);
  if (v55)
  {
LABEL_17:
    v54 = v56;
    goto LABEL_14;
  }
  while (1)
  {
    v54 = v56 + 1;
    if (__OFADD__(v56, 1))
      break;
    if (v54 >= v97)
    {
      v106 = v87;
      goto LABEL_28;
    }
    v55 = *(_QWORD *)(v90 + 8 * v54);
    ++v56;
    if (v55)
      goto LABEL_14;
  }
LABEL_52:
  __break(1u);
}

BOOL sub_100793B5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - v10;
  sub_1004CB7BC(a1, (uint64_t)v4, &qword_1013E04F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E04F0);
  }
  else
  {
    v12.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    static Date.now.getter(v12);
    v13 = static Date.> infix(_:_:)(v11, v8);
    v14 = *(void (**)(char *, uint64_t))(v6 + 8);
    v14(v8, v5);
    v14(v11, v5);
    if ((v13 & 1) != 0)
      return 0;
  }
  v16 = type metadata accessor for CRLThrottleInfo(0);
  return *(_QWORD *)(a1 + *(int *)(v16 + 28)) < *(_QWORD *)(a1 + *(int *)(v16 + 24));
}

BOOL sub_100793CD4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  BOOL v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - v7;
  v9 = type metadata accessor for CRLThrottleInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v27 = (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - v13;
  v15 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  sub_1004CB7BC(v1 + *(int *)(v15 + 20), (uint64_t)v8, &qword_1013F1EF0);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v16(v8, 1, v9) == 1)
  {
    sub_1004CB800((uint64_t)v8, &qword_1013F1EF0);
  }
  else
  {
    sub_1004B84E0((uint64_t)v8, (uint64_t)v14, type metadata accessor for CRLThrottleInfo);
    v17 = sub_100793B5C((uint64_t)v14);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLThrottleInfo);
    if (!v17)
      return 0;
  }
  v18 = *(_QWORD *)(v1 + *(int *)(v15 + 24));
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = a1;
    v20 = sub_100843894((uint64_t)v19);
    if ((v21 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v20, (uint64_t)v5, type metadata accessor for CRLThrottleInfo);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, v22, 1, v9);

    if (v16(v5, 1, v9) != 1)
    {
      v24 = v27;
      sub_1004B84E0((uint64_t)v5, v27, type metadata accessor for CRLThrottleInfo);
      v23 = sub_100793B5C(v24);
      sub_1004B84A4(v24, type metadata accessor for CRLThrottleInfo);
      return v23;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
  }
  sub_1004CB800((uint64_t)v5, &qword_1013F1EF0);
  return 1;
}

BOOL sub_100793F38(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  __n128 v16;
  BOOL v17;
  _BYTE v20[24];

  v5 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C(&qword_1013F20E8);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = swift_beginAccess(v2 + 40, v20, 0, 0);
  v13 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain(v13);
    v14 = sub_100843B24(a1 & 1);
    if ((v15 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v6 + 72) * v14, (uint64_t)v11, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    }
    v16 = swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v11, 1, 1, v5, v12);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v11, 1, v5, v16))
  {
    sub_1004CB800((uint64_t)v11, &qword_1013F20E8);
    return 0;
  }
  else
  {
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_1004CB800((uint64_t)v11, &qword_1013F20E8);
    v17 = sub_100793044(a2);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v17;
}

void sub_100794100(char a1, int a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  _QWORD *v21;
  _QWORD *v22;
  char v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _BYTE v29[24];

  v4 = v2;
  v27 = a2;
  v5 = a1 & 1;
  v6 = (int *)type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v7 = *((_QWORD *)v6 - 1);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(v2 + 40);
  swift_beginAccess(v2 + 40, v29, 33, 0);
  swift_retain(v2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 40));
  v12 = *(_QWORD *)(v2 + 40);
  v28 = v12;
  *(_QWORD *)(v4 + 40) = 0x8000000000000000;
  v14 = sub_100843B24(v5);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = v13;
  if (*(_QWORD *)(v12 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_10:
    sub_1008312A0();
    v12 = v28;
    goto LABEL_6;
  }
  sub_10081E660(v17, isUniquelyReferenced_nonNull_native);
  v12 = v28;
  v18 = sub_100843B24(v5);
  if ((v3 & 1) != (v19 & 1))
  {
    swift_release(v4);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLSyncActivityIdentifier);
    __break(1u);
    return;
  }
  v14 = v18;
LABEL_6:
  v20 = v27;
  v21 = (_QWORD *)*v10;
  *v10 = v12;
  swift_bridgeObjectRelease(v21);
  v22 = (_QWORD *)*v10;
  if ((v3 & 1) == 0)
  {
    v23 = *(_BYTE *)(v4 + 32);
    v24 = &v9[v6[5]];
    v25 = type metadata accessor for CRLThrottleInfo(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
    *(_QWORD *)&v9[v6[6]] = _swiftEmptyDictionarySingleton;
    v9[v6[7]] = 0;
    *v9 = v23;
    sub_10082B924(v14, v5, (uint64_t)v9, v22);
  }
  *(_BYTE *)(v22[7] + *(_QWORD *)(v7 + 72) * v14 + v6[7]) = v20 & 1;
  swift_endAccess(v29);
  swift_release(v4);
}

uint64_t sub_1007942F0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v18[24];

  v3 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1004B804C(&qword_1013F20E8);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = swift_beginAccess(v1 + 40, v18, 0, 0);
  v11 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain(v11);
    v12 = sub_100843B24(a1 & 1);
    if ((v13 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v11 + 56) + *(_QWORD *)(v4 + 72) * v12, (uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    }
    v14 = swift_bridgeObjectRelease(v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v9, 1, 1, v3, v10);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v4 + 48))(v9, 1, v3, v14))
  {
    sub_1004CB800((uint64_t)v9, &qword_1013F20E8);
    return 0;
  }
  else
  {
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_1004CB800((uint64_t)v9, &qword_1013F20E8);
    v15 = v6[*(int *)(v3 + 28)];
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v15;
}

void sub_1007944A4(char a1, void *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void *v19;
  _QWORD *v20;
  char v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE v27[24];

  v4 = v2;
  v25 = a2;
  v5 = a1 & 1;
  v6 = (int *)type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(v2 + 40);
  swift_beginAccess(v2 + 40, v27, 33, 0);
  swift_retain(v2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 40));
  v11 = *(_QWORD *)(v2 + 40);
  v26 = v11;
  *(_QWORD *)(v4 + 40) = 0x8000000000000000;
  v13 = sub_100843B24(v5);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = v12;
  if (*(_QWORD *)(v11 + 24) >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_10:
    sub_1008312A0();
    v11 = v26;
    goto LABEL_6;
  }
  sub_10081E660(v16, isUniquelyReferenced_nonNull_native);
  v11 = v26;
  v17 = sub_100843B24(v5);
  if ((v3 & 1) != (v18 & 1))
  {
    swift_release(v4);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLSyncActivityIdentifier);
    __break(1u);
    return;
  }
  v13 = v17;
LABEL_6:
  v19 = v25;
  *v9 = v11;
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)*v9;
  if ((v3 & 1) == 0)
  {
    v21 = *(_BYTE *)(v4 + 32);
    v22 = &v8[v6[5]];
    v23 = type metadata accessor for CRLThrottleInfo(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *(_QWORD *)&v8[v6[6]] = _swiftEmptyDictionarySingleton;
    v8[v6[7]] = 0;
    *v8 = v21;
    sub_10082B924(v13, v5, (uint64_t)v8, v20);
  }
  sub_100792CB0(v19);
  swift_endAccess(v27);
  swift_release(v4);
}

void sub_100794690(char a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  char v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE v27[24];

  v5 = v3;
  v24 = a2;
  v25 = a3;
  v6 = a1 & 1;
  v7 = (int *)type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(v3 + 40);
  swift_beginAccess(v3 + 40, v27, 33, 0);
  swift_retain(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 40));
  v12 = *(_QWORD *)(v3 + 40);
  v26 = v12;
  *(_QWORD *)(v5 + 40) = 0x8000000000000000;
  v14 = sub_100843B24(v6);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v13;
  if (*(_QWORD *)(v12 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_10:
    sub_1008312A0();
    v12 = v26;
    goto LABEL_6;
  }
  sub_10081E660(v17, isUniquelyReferenced_nonNull_native);
  v12 = v26;
  v18 = sub_100843B24(v6);
  if ((v4 & 1) != (v19 & 1))
  {
    swift_release(v5);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLSyncActivityIdentifier);
    __break(1u);
    return;
  }
  v14 = v18;
LABEL_6:
  *v10 = v12;
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)*v10;
  if ((v4 & 1) == 0)
  {
    v21 = *(_BYTE *)(v5 + 32);
    v22 = &v9[v7[5]];
    v23 = type metadata accessor for CRLThrottleInfo(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *(_QWORD *)&v9[v7[6]] = _swiftEmptyDictionarySingleton;
    v9[v7[7]] = 0;
    *v9 = v21;
    sub_10082B924(v14, v6, (uint64_t)v9, v20);
  }
  sub_10079243C(v24, v25);
  swift_endAccess(v27);
  swift_release(v5);
}

uint64_t sub_100794878@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v20[24];

  v5 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C(&qword_1013F20E8);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = swift_beginAccess(v2 + 40, v20, 0, 0);
  v13 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 40));
    v14 = sub_100843B24(a1 & 1);
    if ((v15 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v6 + 72) * v14, (uint64_t)v11, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    }
    v16 = swift_bridgeObjectRelease(v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v11, 1, 1, v5, v12);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v11, 1, v5, v16))
  {
    sub_1004CB800((uint64_t)v11, &qword_1013F20E8);
    v17 = type metadata accessor for CRLThrottleInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_1004CB800((uint64_t)v11, &qword_1013F20E8);
    sub_1007931D8(a2);
    return sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
}

BOOL sub_100794A5C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __n128 v21;
  BOOL v22;
  _BYTE v25[24];

  v3 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLThrottleInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = sub_1004B804C(&qword_1013F20E8);
  __chkstk_darwin(v14);
  v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v17 = swift_beginAccess(v1 + 40, v25, 0, 0);
  v18 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain(v18);
    v19 = sub_100843B24(a1 & 1);
    if ((v20 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v11 + 72) * v19, (uint64_t)v16, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
    }
    v21 = swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v16, 1, 1, v10, v17);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v16, 1, v10, v21))
  {
    sub_1004CB800((uint64_t)v16, &qword_1013F20E8);
    return 1;
  }
  else
  {
    sub_1004B8460((uint64_t)v16, (uint64_t)v13, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_1004CB800((uint64_t)v16, &qword_1013F20E8);
    sub_1004CB7BC((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v5, &qword_1013F1EF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1004CB800((uint64_t)v5, &qword_1013F1EF0);
      v22 = 1;
    }
    else
    {
      sub_1004B84E0((uint64_t)v5, (uint64_t)v9, type metadata accessor for CRLThrottleInfo);
      v22 = sub_100793B5C((uint64_t)v9);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLThrottleInfo);
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v22;
}

BOOL sub_100794D04(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  __n128 v16;
  BOOL v17;
  _BYTE v20[24];

  v5 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C(&qword_1013F20E8);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = swift_beginAccess(v2 + 40, v20, 0, 0);
  v13 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain(v13);
    v14 = sub_100843B24(a1 & 1);
    if ((v15 & 1) != 0)
    {
      sub_1004B8460(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v6 + 72) * v14, (uint64_t)v11, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    }
    v16 = swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v11, 1, 1, v5, v12);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v11, 1, v5, v16))
  {
    sub_1004CB800((uint64_t)v11, &qword_1013F20E8);
    return 1;
  }
  else
  {
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_1004CB800((uint64_t)v11, &qword_1013F20E8);
    v17 = sub_100793CD4(a2);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v17;
}

double sub_100794ECC(char a1, char a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v22, 0, 0);
  v5 = (void *)static OS_os_log.dataSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, &v21);
  v8 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  if (*(_BYTE *)(v2 + 32))
    v9 = 0x5320646572616853;
  else
    v9 = 0x2065746176697250;
  if (*(_BYTE *)(v2 + 32))
    v10 = 0xEC00000065706F63;
  else
    v10 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  v12 = a1 & 1;
  v13 = 1702257011;
  if (v12)
    v13 = 0x6863746566;
  v14 = 0xE500000000000000;
  if (!v12)
    v14 = 0xE400000000000000;
  *(_QWORD *)(v8 + 96) = &type metadata for String;
  *(_QWORD *)(v8 + 104) = v11;
  *(_QWORD *)(v8 + 64) = v11;
  *(_QWORD *)(v8 + 72) = v13;
  *(_QWORD *)(v8 + 80) = v14;
  *(_QWORD *)(v8 + 136) = &type metadata for Bool;
  *(_QWORD *)(v8 + 144) = &protocol witness table for Bool;
  v15 = a2 & 1;
  *(_BYTE *)(v8 + 112) = v15;
  v16 = v5;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "<%{public}@> Marking activity complete with identifier: %@ success: %d", 70, 2, v8);
  swift_setDeallocating(v8);
  v19 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v8 + 32, 3, v19);

  return sub_100C952F0(v12, v15);
}

double sub_1007950A4(_BYTE *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[112];
  _BYTE v18[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v18, 0, 0);
  v3 = (void *)static OS_os_log.dataSync;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v17);
  v6 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v1 + 32))
    v7 = 0x5320646572616853;
  else
    v7 = 0x2065746176697250;
  if (*(_BYTE *)(v1 + 32))
    v8 = 0xEC00000065706F63;
  else
    v8 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  v6[8] = v9;
  v6[4] = v7;
  v6[5] = v8;
  v10 = 1702257011;
  if (*a1)
    v10 = 0x6863746566;
  v11 = 0xE400000000000000;
  if (*a1)
    v11 = 0xE500000000000000;
  v6[12] = &type metadata for String;
  v6[13] = v9;
  v6[9] = v10;
  v6[10] = v11;
  v12 = v3;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v14, "<%{public}@> Scheduling activity with identifier: %{public}@", 60, 2, (uint64_t)v6);
  swift_setDeallocating(v6);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v6 + 4, 2, v15);

  return sub_100C94EE8((uint64_t)a1);
}

uint64_t sub_100795254@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;

  v31 = a2;
  v4 = a1 & 1;
  v5 = (int *)type metadata accessor for CRLSyncActivity(0);
  v32 = *((_QWORD *)v5 - 1);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v8);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for CRLThrottleInfo(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v30[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100794878(v4, (uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1004CB800((uint64_t)v13, &qword_1013F1EF0);
    v18 = sub_1007942F0(v4);
    v19 = 1;
    v20 = v32;
    if ((v18 & 1) != 0)
    {
      v21 = type metadata accessor for Date(0);
      v22 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
      v22(v10, 1, 1, v21);
      v23 = (uint64_t)&v7[v5[5]];
      v22((_BYTE *)v23, 1, 1, v21);
      v24 = &v7[v5[7]];
      *(_QWORD *)v24 = 0;
      v24[8] = 1;
      *v7 = v4;
      sub_100582338((uint64_t)v10, v23, &qword_1013E04F0);
      v7[v5[6]] = 4;
      *(_QWORD *)v24 = 0;
      v24[8] = 1;
      v7[v5[8]] = v31 & 1;
      sub_1004B84E0((uint64_t)v7, a3, type metadata accessor for CRLSyncActivity);
      v19 = 0;
    }
  }
  else
  {
    sub_1004B84E0((uint64_t)v13, (uint64_t)v17, type metadata accessor for CRLThrottleInfo);
    sub_1004CB7BC((uint64_t)v17, (uint64_t)v10, &qword_1013E04F0);
    v25 = *(_QWORD *)&v17[*(int *)(v14 + 24)];
    v26 = (uint64_t)&v7[v5[5]];
    v27 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
    v28 = &v7[v5[7]];
    *(_QWORD *)v28 = 0;
    v28[8] = 1;
    *v7 = v4;
    sub_100582338((uint64_t)v10, v26, &qword_1013E04F0);
    v7[v5[6]] = 4;
    *(_QWORD *)v28 = v25;
    v28[8] = 0;
    v7[v5[8]] = v31 & 1;
    sub_1004B84E0((uint64_t)v7, a3, type metadata accessor for CRLSyncActivity);
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLThrottleInfo);
    v19 = 0;
    v20 = v32;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v20 + 56))(a3, v19, 1, v5);
}

double sub_10079556C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  double *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v4 = v3;
  v7 = a3 & 1;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v4 + 24);
  v16 = swift_allocObject(&unk_10127E158, 41, 7);
  *(_QWORD *)(v16 + 16) = v4;
  *(_QWORD *)(v16 + 24) = a1;
  *(_QWORD *)(v16 + 32) = a2;
  *(_BYTE *)(v16 + 40) = v7;
  aBlock[4] = sub_1007B213C;
  v26 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10127E170;
  v17 = _Block_copy(aBlock);
  swift_retain(v4);
  v18 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v18);
  v24 = _swiftEmptyArrayStorage;
  v19 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v21 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v8, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

double sub_100795774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  double *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v0 + 24);
  aBlock[4] = sub_1007B20F0;
  v18 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10127E120;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v0);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v13 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_10079594C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLSyncActivityThrottlingScheduler()
{
  return objc_opt_self(_TtC8Freeform34CRLSyncActivityThrottlingScheduler);
}

uint64_t sub_1007959A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return swift_task_switch(sub_1007959BC, v2, 0);
}

void sub_1007959BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t ObjectType;
  int *v30;
  _QWORD *v31;
  int *v32;

  v1 = *(_QWORD *)(v0 + 112);
  swift_beginAccess(v1 + 112, v0 + 56, 0, 0);
  v2 = *(_QWORD *)(v1 + 112);
  if ((v2 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v3 = *(_QWORD *)(v1 + 112);
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = type metadata accessor for CRLCloudAccountChangeObserverWrapper();
    v6 = sub_1005034A0(&qword_1013F21B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CRLCloudAccountChangeObserverWrapper, (uint64_t)&unk_100F0AF34);
    Set.Iterator.init(_cocoa:)((_QWORD *)(v0 + 16), v4, v5, v6);
    v7 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v2 + 32);
    v8 = v2 + 56;
    v10 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain(v2);
    v9 = 0;
  }
  *(_QWORD *)(v0 + 128) = v8;
  *(_QWORD *)(v0 + 136) = v10;
  *(_QWORD *)(v0 + 120) = v7;
  if (v7 < 0)
    goto LABEL_13;
LABEL_11:
  if (v11)
  {
    v15 = (v11 - 1) & v11;
    v16 = __clz(__rbit64(v11)) | (v9 << 6);
    v17 = v9;
    goto LABEL_29;
  }
  v22 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    v23 = (unint64_t)(*(_QWORD *)(v0 + 136) + 64) >> 6;
    if (v22 < v23)
    {
      v24 = *(_QWORD *)(v0 + 128);
      v25 = *(_QWORD *)(v24 + 8 * v22);
      v17 = v9 + 1;
      if (v25)
        goto LABEL_28;
      v17 = v9 + 2;
      if (v9 + 2 >= v23)
        goto LABEL_35;
      v25 = *(_QWORD *)(v24 + 8 * v17);
      if (v25)
        goto LABEL_28;
      v17 = v9 + 3;
      if (v9 + 3 >= v23)
        goto LABEL_35;
      v25 = *(_QWORD *)(v24 + 8 * v17);
      if (v25)
      {
LABEL_28:
        v15 = (v25 - 1) & v25;
        v16 = __clz(__rbit64(v25)) + (v17 << 6);
LABEL_29:
        v21 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16);
        swift_retain(v21);
        while (1)
        {
          *(_QWORD *)(v0 + 152) = v17;
          *(_QWORD *)(v0 + 160) = v15;
          *(_QWORD *)(v0 + 144) = v21;
          if (!v21)
            goto LABEL_35;
          Strong = swift_unknownObjectWeakLoadStrong(v21 + 16);
          *(_QWORD *)(v0 + 168) = Strong;
          if (Strong)
          {
            v28 = *(_QWORD *)(v21 + 24);
            ObjectType = swift_getObjectType(Strong);
            v30 = *(int **)(v28 + 8);
            v32 = (int *)((char *)v30 + *v30);
            v31 = (_QWORD *)swift_task_alloc(v30[1]);
            *(_QWORD *)(v0 + 176) = v31;
            *v31 = v0;
            v31[1] = sub_100795CD8;
            ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))v32)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), ObjectType, v28);
            return;
          }
          swift_release(v21);
          v7 = *(_QWORD *)(v0 + 120);
          v9 = v17;
          v11 = v15;
          if ((v7 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v18 = __CocoaSet.Iterator.next()(v7);
          if (!v18)
            goto LABEL_35;
          v19 = v18;
          *(_QWORD *)(v0 + 88) = v18;
          v20 = type metadata accessor for CRLCloudAccountChangeObserverWrapper();
          swift_unknownObjectRetain(v19);
          swift_dynamicCast(v0 + 80, v0 + 88, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
          v21 = *(_QWORD *)(v0 + 80);
          swift_unknownObjectRelease(v19);
          v17 = v9;
          v15 = v11;
        }
      }
      v17 = v9 + 4;
      if (v9 + 4 < v23)
      {
        v25 = *(_QWORD *)(v24 + 8 * v17);
        if (!v25)
        {
          v26 = v9 + 5;
          while (v23 != v26)
          {
            v25 = *(_QWORD *)(v24 + 8 * v26++);
            if (v25)
            {
              v17 = v26 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_35:
    v7 = *(_QWORD *)(v0 + 120);
LABEL_36:
    sub_1004D284C(v7);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

uint64_t sub_100795CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100795D38, v2, 0);
}

uint64_t sub_100795D38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t ObjectType;
  int *v19;
  _QWORD *v20;
  int *v21;

  swift_release(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  result = *(_QWORD *)(v0 + 120);
  if (result < 0)
    goto LABEL_4;
LABEL_2:
  if (v2)
  {
    v4 = (v2 - 1) & v2;
    v5 = __clz(__rbit64(v2)) | (v1 << 6);
    v6 = v1;
    goto LABEL_20;
  }
  v11 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    v12 = (unint64_t)(*(_QWORD *)(v0 + 136) + 64) >> 6;
    if (v11 < v12)
    {
      v13 = *(_QWORD *)(v0 + 128);
      v14 = *(_QWORD *)(v13 + 8 * v11);
      v6 = v1 + 1;
      if (v14)
        goto LABEL_19;
      v6 = v1 + 2;
      if (v1 + 2 >= v12)
        goto LABEL_26;
      v14 = *(_QWORD *)(v13 + 8 * v6);
      if (v14)
        goto LABEL_19;
      v6 = v1 + 3;
      if (v1 + 3 >= v12)
        goto LABEL_26;
      v14 = *(_QWORD *)(v13 + 8 * v6);
      if (v14)
      {
LABEL_19:
        v4 = (v14 - 1) & v14;
        v5 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_20:
        v10 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v5);
        swift_retain(v10);
        while (1)
        {
          *(_QWORD *)(v0 + 152) = v6;
          *(_QWORD *)(v0 + 160) = v4;
          *(_QWORD *)(v0 + 144) = v10;
          if (!v10)
            goto LABEL_26;
          Strong = swift_unknownObjectWeakLoadStrong(v10 + 16);
          *(_QWORD *)(v0 + 168) = Strong;
          if (Strong)
          {
            v17 = *(_QWORD *)(v10 + 24);
            ObjectType = swift_getObjectType(Strong);
            v19 = *(int **)(v17 + 8);
            v21 = (int *)((char *)v19 + *v19);
            v20 = (_QWORD *)swift_task_alloc(v19[1]);
            *(_QWORD *)(v0 + 176) = v20;
            *v20 = v0;
            v20[1] = sub_100795CD8;
            return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v21)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), ObjectType, v17);
          }
          swift_release(v10);
          v1 = v6;
          v2 = v4;
          result = *(_QWORD *)(v0 + 120);
          if ((result & 0x8000000000000000) == 0)
            goto LABEL_2;
LABEL_4:
          v7 = __CocoaSet.Iterator.next()(result);
          if (!v7)
            goto LABEL_26;
          v8 = v7;
          *(_QWORD *)(v0 + 88) = v7;
          v9 = type metadata accessor for CRLCloudAccountChangeObserverWrapper();
          swift_unknownObjectRetain(v8);
          swift_dynamicCast(v0 + 80, v0 + 88, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
          v10 = *(_QWORD *)(v0 + 80);
          swift_unknownObjectRelease(v8);
          v6 = v1;
          v4 = v2;
        }
      }
      v6 = v1 + 4;
      if (v1 + 4 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * v6);
        if (!v14)
        {
          v15 = v1 + 5;
          while (v12 != v15)
          {
            v14 = *(_QWORD *)(v13 + 8 * v15++);
            if (v14)
            {
              v6 = v15 - 1;
              goto LABEL_19;
            }
          }
          goto LABEL_27;
        }
        goto LABEL_19;
      }
    }
LABEL_26:
    result = *(_QWORD *)(v0 + 120);
LABEL_27:
    sub_1004D284C(result);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CRLAccountChangeObserverManager()
{
  return objc_opt_self(_TtC8Freeform31CRLAccountChangeObserverManager);
}

uint64_t sub_100795FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch(sub_100795FD0, 0, 0);
}

uint64_t sub_100795FD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager);
  *(_QWORD *)(v0 + 64) = v1;
  swift_retain(v1);
  return swift_task_switch(sub_100796020, v1, 0);
}

uint64_t sub_100796020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t v6;
  __n128 v7;
  Swift::UInt v9;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = type metadata accessor for CRLCloudAccountChangeObserverWrapper();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  v6 = swift_unknownObjectWeakInit(v5 + 16);
  *(_QWORD *)(v5 + 24) = v2;
  swift_unknownObjectWeakAssign(v6, v3);
  swift_beginAccess(v1 + 112, v0 + 16, 33, 0);
  sub_100ADA49C(&v9, v5);
  swift_endAccess(v0 + 16);
  swift_release(v9);
  v7 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t sub_1007960D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch(sub_1007960F0, 0, 0);
}

uint64_t sub_1007960F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager);
  *(_QWORD *)(v0 + 64) = v1;
  swift_retain(v1);
  return swift_task_switch(sub_100796140, v1, 0);
}

uint64_t sub_100796140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = type metadata accessor for CRLCloudAccountChangeObserverWrapper();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  v6 = swift_unknownObjectWeakInit(v5 + 16);
  *(_QWORD *)(v5 + 24) = v2;
  swift_unknownObjectWeakAssign(v6, v3);
  swift_beginAccess(v1 + 112, v0 + 16, 33, 0);
  v7 = sub_100B27C04(v5);
  swift_endAccess(v0 + 16);
  swift_release(v5);
  swift_release(v1);
  v8 = swift_release(v7);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

double sub_1007961FC(void (*a1)(_QWORD *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  double (*v8)(uint64_t);
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  double result;
  __int128 v18;
  _QWORD v19[3];
  __int128 v20;
  char v21[8];
  uint64_t v22;
  _QWORD v23[3];
  __int128 v24;

  sub_1004C4938((uint64_t)a4, (uint64_t)v19, &qword_1013F21D8);
  v9 = v19[0];
  v8 = (double (*)(uint64_t))v19[1];
  v10 = v19[2];
  v18 = v20;
  if (a1)
  {
    v11 = swift_retain(a2);
    a1(v23, a3, v11);
    v12 = a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine, v21, 33, 0);
    sub_100582338((uint64_t)v23, v12, &qword_1013F20A0);
    swift_endAccess(v21);
    sub_1004C1024((uint64_t)a1, a2);
  }
  else
  {
    v13 = sub_10079639C();
    *(_QWORD *)&v24 = type metadata accessor for CKSyncEngine(0);
    *((_QWORD *)&v24 + 1) = &off_1013E7D98;
    v23[0] = v13;
    v14 = a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine, v21, 33, 0);
    sub_100582338((uint64_t)v23, v14, &qword_1013F20A0);
    swift_endAccess(v21);
  }
  sub_1004C4938((uint64_t)a4, (uint64_t)v21, &qword_1013F21D8);
  if (v22)
  {
    v15 = v9 & 1;
    v16 = v18;
  }
  else
  {
    v10 = 0;
    v15 = *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
    v16 = xmmword_100EFCE10;
    v8 = sub_100C94BAC;
  }
  LOBYTE(v23[0]) = v15;
  v23[1] = v8;
  v23[2] = v10;
  v24 = v16;
  sub_1007B21B0(a4);
  sub_100796CA0((uint64_t)v23);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_10079639C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  char *v24;
  unint64_t v25;
  char **v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  _BYTE *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[24];
  __int128 v93;
  __int128 v94;
  uint64_t v95;

  v1 = v0;
  v2 = type metadata accessor for CKSyncEngine.Configuration(0);
  v85 = *(_QWORD *)(v2 - 8);
  v86 = v2;
  __chkstk_darwin(v2);
  v83 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v84 = (char *)&v79 - v5;
  v6 = sub_1004B804C(&qword_1013F21A8);
  __chkstk_darwin(v6);
  v82 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v87 = (char *)&v79 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v79 - v11;
  v13 = type metadata accessor for CKSyncEngine.State.Serialization(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchPredicate(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (id *)((char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v18 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v17, v19);
  v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v17);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v24 = v16;
  v25 = 0xEC00000065706F63;
  LODWORD(v18) = v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope];
  v26 = &selRef_sharedCloudDatabase;
  if (!v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v26 = &selRef_privateCloudDatabase;
  v81 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_container], *v26);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource]);
  if (!Strong)
  {
    v95 = 0;
    v93 = 0u;
    v94 = 0u;
    goto LABEL_17;
  }
  v28 = Strong;
  sub_1008F5DF4((uint64_t)&v93);
  swift_unknownObjectRelease(v28);
  if (!*((_QWORD *)&v94 + 1))
  {
LABEL_17:
    sub_1004CB800((uint64_t)&v93, &qword_1013F2098);
    v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v80(v12, 1, 1, v13);
LABEL_18:
    sub_1004CB800((uint64_t)v12, &qword_1013F21A8);
    if (qword_1013DD870 == -1)
    {
LABEL_19:
      swift_beginAccess(&static OS_os_log.dataSync, v92, 0, 0);
      v43 = (void *)static OS_os_log.dataSync;
      v44 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v44, &v91);
      v46 = inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v36 = v18;
      v47 = (_DWORD)v18 == 0;
      if ((_DWORD)v18)
        v48 = 0x5320646572616853;
      else
        v48 = 0x2065746176697250;
      if (v47)
        v49 = 0xED000065706F6353;
      else
        v49 = 0xEC00000065706F63;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(v46 + 32) = v48;
      *(_QWORD *)(v46 + 40) = v49;
      v50 = v43;
      v51 = static os_log_type_t.error.getter(v50);
      sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v51, "<%{public}@> Failed to decode sync metadata.", 44, 2, v46);
      swift_setDeallocating(v46);
      v52 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v46 + 32, 1, v52);

      goto LABEL_26;
    }
LABEL_37:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_19;
  }
  v29 = sub_1004B804C(&qword_1013F21B0);
  v30 = swift_dynamicCast(v12, &v93, v29, v13, 6);
  v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v80(v12, v30 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    goto LABEL_18;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  *((_QWORD *)&v94 + 1) = v13;
  v95 = sub_1005034A0(&qword_1013E7D90, 255, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
  v31 = sub_10050D1B0(&v93);
  (*(void (**)(_QWORD *, char *, uint64_t))(v14 + 16))(v31, v16, v13);
  v32 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata], v92, 33, 0);
  sub_100582338((uint64_t)&v93, v32, &qword_1013F2098);
  swift_endAccess(v92);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v92, 0, 0);
  v79 = (id)static OS_os_log.dataSync;
  v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v34 = swift_initStackObject(v33, &v88);
  v35 = v34;
  *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
  v36 = v18;
  v37 = (_DWORD)v18 == 0;
  if ((_DWORD)v18)
    v38 = 0x5320646572616853;
  else
    v38 = 0x2065746176697250;
  if (v37)
    v25 = 0xED000065706F6353;
  *(_QWORD *)(v34 + 56) = &type metadata for String;
  *(_QWORD *)(v34 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v35 + 32) = v38;
  *(_QWORD *)(v35 + 40) = v25;
  v39 = v79;
  v41 = static os_log_type_t.default.getter(v40);
  sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v41, "<%{public}@> Successfully loaded sync metadata", 46, 2, v35);
  swift_setDeallocating(v35);
  v42 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v35 + 32, 1, v42);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
LABEL_26:
  v53 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata], &v90, 0, 0);
  sub_1004CB7BC(v53, (uint64_t)&v93, &qword_1013F2098);
  if (*((_QWORD *)&v94 + 1))
  {
    v54 = sub_1004B804C(&qword_1013F21B0);
    v55 = (uint64_t)v87;
    v56 = swift_dynamicCast(v87, &v93, v54, v13, 6);
    v80((char *)v55, v56 ^ 1u, 1, v13);
    v57 = 0xEC00000065706F63;
    v58 = 0x5320646572616853;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v55, 1, v13) != 1)
      goto LABEL_35;
  }
  else
  {
    sub_1004CB800((uint64_t)&v93, &qword_1013F2098);
    v80(v87, 1, 1, v13);
    v57 = 0xEC00000065706F63;
    v58 = 0x5320646572616853;
  }
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, &v93, 0, 0);
  v59 = (void *)static OS_os_log.dataSync;
  v60 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v61 = swift_initStackObject(v60, &v89);
  v62 = v61;
  *(_OWORD *)(v61 + 16) = xmmword_100EF5E40;
  if (!v36)
  {
    v58 = 0x2065746176697250;
    v57 = 0xED000065706F6353;
  }
  *(_QWORD *)(v61 + 56) = &type metadata for String;
  *(_QWORD *)(v61 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v62 + 32) = v58;
  *(_QWORD *)(v62 + 40) = v57;
  v63 = v59;
  v64 = static os_log_type_t.error.getter(v63);
  sub_100A06EBC((uint64_t)v63, &_mh_execute_header, v64, "<%{public}@> Sync metadata is of wrong type. Setting up with nil metadata. This will lead to refetching all CloudKit data.", 122, 2, v62);
  swift_setDeallocating(v62);
  v65 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v62 + 32, 1, v65);

LABEL_35:
  v66 = (uint64_t)v87;
  v67 = v82;
  sub_1004CB7BC((uint64_t)v87, v82, &qword_1013F21A8);
  v69 = sub_1005034A0(&qword_1013F2088, v68, (uint64_t (*)(uint64_t))type metadata accessor for CRLSyncController, (uint64_t)&unk_100F0AE80);
  v70 = v81;
  v71 = v1;
  v72 = v84;
  CKSyncEngine.Configuration.init(database:stateSerialization:delegate:)(v70, v67, v71, v69);
  v74 = v85;
  v73 = v86;
  v75 = v83;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v83, v72, v86);
  v76 = type metadata accessor for CKSyncEngine(0);
  swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
  v77 = CKSyncEngine.init(_:)(v75);

  (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
  sub_1004CB800(v66, &qword_1013F21A8);
  return v77;
}

void sub_100796CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[72];
  _BYTE v30[24];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = OBJC_IVAR____TtC8Freeform17CRLSyncController_queue;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v8 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4, v6);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_5;
  }
  v12 = *(void **)(v2 + v9);
  LODWORD(v4) = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
  v13 = type metadata accessor for CRLSyncActivityThrottlingScheduler();
  v14 = swift_allocObject(v13, 48, 7);
  v15 = v12;
  sub_1007B20C8(a1);
  sub_100792248(v15, v4, a1);
  v16 = OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler;
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler) = v14;
  swift_release(v17);
  v18 = *(_QWORD *)(v2 + v16);
  if (v18)
  {
    swift_retain(*(_QWORD *)(v2 + v16));
    sub_100795774();
    sub_100796F24();
    swift_release(v18);
    return;
  }
  if (qword_1013DD870 != -1)
    goto LABEL_13;
LABEL_5:
  swift_beginAccess(&static OS_os_log.dataSync, v30, 0, 0);
  v19 = (void *)static OS_os_log.dataSync;
  v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v20, v29);
  v22 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v23 = (_DWORD)v4 == 0;
  if ((_DWORD)v4)
    v24 = 0x5320646572616853;
  else
    v24 = 0x2065746176697250;
  if (v23)
    v25 = 0xED000065706F6353;
  else
    v25 = 0xEC00000065706F63;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v25;
  v26 = v19;
  v27 = static os_log_type_t.error.getter(v26);
  sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v27, "<%{public}@> Attempting to setup scheduler but throttling scheduler not found", 77, 2, v22);
  swift_setDeallocating(v22);
  v28 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v22 + 32, 1, v28);

}

void sub_100796F24()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[72];
  char v23[24];

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v1, v3);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_5;
  }
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler];
  if (v8)
  {
    v9 = swift_allocObject(&unk_10127E040, 24, 7);
    *(_QWORD *)(v9 + 16) = v0;
    swift_retain(v8);
    v10 = v0;
    sub_10079556C((uint64_t)&unk_1013F2190, v9, 1);
    swift_release(v9);
    v11 = swift_allocObject(&unk_10127E068, 24, 7);
    *(_QWORD *)(v11 + 16) = v10;
    v12 = v10;
    sub_10079556C((uint64_t)&unk_1013F21A0, v11, 0);
    swift_release(v8);
    swift_release(v11);
    return;
  }
  if (qword_1013DD870 != -1)
    goto LABEL_13;
LABEL_5:
  swift_beginAccess(&static OS_os_log.dataSync, v23, 0, 0);
  v13 = (void *)static OS_os_log.dataSync;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, v22);
  v16 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v17 = 0x5320646572616853;
  else
    v17 = 0x2065746176697250;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v18 = 0xEC00000065706F63;
  else
    v18 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v18;
  v19 = v13;
  v20 = static os_log_type_t.error.getter(v19);
  sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v20, "<%{public}@> Attempting to register scheduler activities but scheduler not found", 80, 2, v16);
  swift_setDeallocating(v16);
  v21 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v16 + 32, 1, v21);

}

uint64_t sub_1007971C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[9] = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v1[10] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[11] = v3;
  v1[12] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v1[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[14] = v5;
  v1[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100797248, 0, 0);
}

uint64_t sub_100797248()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[15];
  v2 = v0[12];
  v16 = v0[14];
  v17 = v0[13];
  v3 = v0[10];
  v15 = v0[11];
  v4 = (char *)v0[9];
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v6 = swift_allocObject(&unk_10127E0E0, 24, 7);
  *(_QWORD *)(v6 + 16) = v4;
  v0[6] = sub_1007B20A8;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(_QWORD *)"";
  v0[4] = sub_1005D2FC0;
  v0[5] = &unk_10127E0F8;
  v7 = _Block_copy(v0 + 2);
  v8 = v5;
  v9 = v4;
  static DispatchQoS.unspecified.getter(v10);
  v0[8] = _swiftEmptyArrayStorage;
  v11 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v13 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v12, v13, v3, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v2, v7);
  _Block_release(v7);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  swift_release(v0[7]);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100797408(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[9] = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v1[10] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[11] = v3;
  v1[12] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v1[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[14] = v5;
  v1[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100797490, 0, 0);
}

uint64_t sub_100797490()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[15];
  v2 = v0[12];
  v16 = v0[14];
  v17 = v0[13];
  v3 = v0[10];
  v15 = v0[11];
  v4 = (char *)v0[9];
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v6 = swift_allocObject(&unk_10127E090, 24, 7);
  *(_QWORD *)(v6 + 16) = v4;
  v0[6] = sub_1007B2088;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(_QWORD *)"";
  v0[4] = sub_1005D2FC0;
  v0[5] = &unk_10127E0A8;
  v7 = _Block_copy(v0 + 2);
  v8 = v5;
  v9 = v4;
  static DispatchQoS.unspecified.getter(v10);
  v0[8] = _swiftEmptyArrayStorage;
  v11 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v13 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v12, v13, v3, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v2, v7);
  _Block_release(v7);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  swift_release(v0[7]);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100797650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];
  __int128 v7;
  __int128 v8;
  _UNKNOWN **v9;

  v9 = 0;
  v7 = 0u;
  v8 = 0u;
  v2 = a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata, v6, 33, 0);
  sub_100582338((uint64_t)&v7, v2, &qword_1013F2098);
  swift_endAccess(v6);
  v3 = sub_10079639C();
  *((_QWORD *)&v8 + 1) = type metadata accessor for CKSyncEngine(0);
  v9 = &off_1013E7D98;
  *(_QWORD *)&v7 = v3;
  v4 = a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine, v6, 33, 0);
  sub_100582338((uint64_t)&v7, v4, &qword_1013F20A0);
  return swift_endAccess(v6);
}

void sub_100797718(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[72];
  char v24[24];
  __int128 v25;
  uint64_t v26;
  _QWORD v27[5];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!__CocoaSet.count.getter(v8))
      return;
  }
  else if (!*(_QWORD *)(a1 + 16))
  {
    return;
  }
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine], v24, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)&v25, &qword_1013F20A0);
  if (v26)
  {
    sub_1004DB728(&v25, (uint64_t)v27);
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    sub_1004E90B0((uint64_t)v27, (uint64_t)&v25);
    v11 = swift_allocObject(&unk_10127DFC8, 89, 7);
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    sub_1004DB728(&v25, v11 + 32);
    *(_QWORD *)(v11 + 72) = a1;
    *(_QWORD *)(v11 + 80) = v2;
    *(_BYTE *)(v11 + 88) = a2;
    swift_bridgeObjectRetain(a1);
    v12 = v2;
    v13 = sub_100618920((uint64_t)v7, (uint64_t)&unk_1013F2180, v11);
    swift_release(v13);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  }
  else
  {
    sub_1004CB800((uint64_t)&v25, &qword_1013F20A0);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v27, 0, 0);
    v14 = (void *)static OS_os_log.dataSync;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v15, v23);
    v17 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (v2[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
      v18 = 0x5320646572616853;
    else
      v18 = 0x2065746176697250;
    if (v2[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
      v19 = 0xEC00000065706F63;
    else
      v19 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v19;
    v20 = v14;
    v21 = static os_log_type_t.error.getter(v20);
    sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v21, "<%{public}@> Can't fetchRecords. There is no syncEngine set", 59, 2, v17);
    swift_setDeallocating(v17);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v17 + 32, 1, v22);

  }
}

uint64_t sub_1007979D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + 520) = a7;
  *(_QWORD *)(v7 + 408) = a5;
  *(_QWORD *)(v7 + 416) = a6;
  *(_QWORD *)(v7 + 400) = a4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v7 + 424) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 432) = v9;
  *(_QWORD *)(v7 + 440) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)(v7 + 448) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 456) = v11;
  *(_QWORD *)(v7 + 464) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100797A64, 0, 0);
}

uint64_t sub_100797A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = sub_1004BB5A4(*(_QWORD **)(v0 + 400), *(_QWORD *)(*(_QWORD *)(v0 + 400) + 24));
  swift_bridgeObjectRetain(v1);
  v4 = sub_1005FFAB0(v3);
  *(_QWORD *)(v0 + 472) = v4;
  swift_bridgeObjectRelease();
  v5 = *v2;
  *(_QWORD *)(v0 + 480) = *v2;
  swift_retain_n(v5, 2);
  *(_QWORD *)(v0 + 488) = CKSyncEngine.database.getter();
  v6 = (_QWORD *)swift_task_alloc(async function pointer to CKDatabase.records(for:desiredKeys:)[1]);
  *(_QWORD *)(v0 + 496) = v6;
  *v6 = v0;
  v6[1] = sub_100797B08;
  return CKDatabase.records(for:desiredKeys:)(v4, 0);
}

uint64_t sub_100797B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 496);
  *(_QWORD *)(v3 + 504) = a1;
  *(_QWORD *)(v3 + 512) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1007984F0;
  }
  else
  {

    v5 = sub_100797B7C;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_100797B7C(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t i;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t inited;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  __n128 v51;
  uint64_t v52;
  id v53;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *aBlock;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  void **v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int64_t v110;
  uint64_t v111;

  v99 = v1 + 16;
  v100 = v1 + 2;
  aBlock = v1 + 30;
  v2 = v1[63];
  v97 = v1 + 39;
  v98 = v1 + 36;
  v96 = v1 + 42;
  v106 = v1 + 45;
  v3 = v1[59];
  v94 = v1 + 47;
  v95 = v1 + 46;
  v4 = (void **)(v1 + 48);
  v104 = v1[52];
  v92 = v1 + 49;
  swift_release_n(v1[60], 2, a1);
  swift_release(v3);
  v5 = 0;
  v6 = *(_QWORD *)(v2 + 64);
  v101 = v2 + 64;
  v7 = -1;
  v108 = v2;
  v8 = -1 << *(_BYTE *)(v2 + 32);
  if (-v8 < 64)
    v7 = ~(-1 << -(char)v8);
  v9 = v7 & v6;
  v103 = OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope;
  v102 = (unint64_t)(63 - v8) >> 6;
  v93 = (uint64_t)_swiftEmptyDictionarySingleton;
  v105 = v4;
  if ((v7 & v6) != 0)
    goto LABEL_15;
LABEL_16:
  while (2)
  {
    v26 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_71;
    }
    v27 = v107;
    if (v26 >= v102)
      goto LABEL_60;
    v28 = *(_QWORD *)(v101 + 8 * v26);
    ++v5;
    if (v28)
      goto LABEL_29;
    v5 = v26 + 1;
    if (v26 + 1 >= v102)
      goto LABEL_60;
    v28 = *(_QWORD *)(v101 + 8 * v5);
    if (v28)
      goto LABEL_29;
    v5 = v26 + 2;
    if (v26 + 2 >= v102)
      goto LABEL_60;
    v28 = *(_QWORD *)(v101 + 8 * v5);
    if (v28)
    {
LABEL_29:
      v9 = (v28 - 1) & v28;
      for (i = __clz(__rbit64(v28)) + (v5 << 6); ; i = v24 | (v5 << 6))
      {
        v30 = *(void **)(*(_QWORD *)(v108 + 48) + 8 * i);
        v31 = *(_QWORD *)(v108 + 56) + 16 * i;
        v32 = *(void **)v31;
        if ((*(_BYTE *)(v31 + 8) & 1) == 0)
          break;
        v109 = v9;
        v110 = v5;
        *v106 = v32;
        sub_10059BC74(v32, 1);
        sub_10059BC74(v32, 1);
        v33 = v30;
        v34 = sub_1004B804C(&qword_1013E0210);
        type metadata accessor for CKError(0);
        v36 = v35;
        if ((swift_dynamicCast(v4, v106, v34, v35, 6) & 1) != 0)
        {
          v37 = *v4;
          if (qword_1013DD870 != -1)
            swift_once(&qword_1013DD870, sub_100A059E0);
          swift_beginAccess(&static OS_os_log.dataSync, v96, 0, 0);
          v38 = (void *)static OS_os_log.dataSync;
          v39 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v39, v99);
          v41 = (_QWORD *)inited;
          *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
          if (*(_BYTE *)(v104 + v103))
            v42 = 0x5320646572616853;
          else
            v42 = 0x2065746176697250;
          if (*(_BYTE *)(v104 + v103))
            v43 = 0xEC00000065706F63;
          else
            v43 = 0xED000065706F6353;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          v41[4] = v42;
          v41[5] = v43;
          *v94 = v37;
          v44 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
          v45 = v38;
          v46 = _BridgedStoredNSError.errorCode.getter(v36, v44);
          v41[12] = &type metadata for Int;
          v41[13] = &protocol witness table for Int;
          v41[9] = v46;
          v47 = static os_log_type_t.error.getter(v46);
          sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v47, "<%{public}@> Received cloud error fetching %d", 45, 2, (uint64_t)v41);

          swift_setDeallocating(v41);
          v48 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v41 + 4, 2, v48);

          sub_1004E1E08(v32, 1);
        }
        else
        {
          if (qword_1013DD870 != -1)
            swift_once(&qword_1013DD870, sub_100A059E0);
          swift_beginAccess(&static OS_os_log.dataSync, v97, 0, 0);
          v10 = (void *)static OS_os_log.dataSync;
          v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v12 = swift_initStackObject(v11, v100);
          v13 = (_QWORD *)v12;
          *(_OWORD *)(v12 + 16) = xmmword_100EF5A10;
          if (*(_BYTE *)(v104 + v103))
            v14 = 0x5320646572616853;
          else
            v14 = 0x2065746176697250;
          if (*(_BYTE *)(v104 + v103))
            v15 = 0xEC00000065706F63;
          else
            v15 = 0xED000065706F6353;
          *(_QWORD *)(v12 + 56) = &type metadata for String;
          v16 = sub_1004CFC2C();
          v13[8] = v16;
          v13[4] = v14;
          v13[5] = v15;
          swift_getErrorValue(v32, v95, v98);
          v17 = *(_QWORD *)(v107 + 296);
          v18 = *(_QWORD *)(v107 + 304);
          v19 = v10;
          v20 = Error.localizedDescription.getter(v17, v18);
          v13[12] = &type metadata for String;
          v13[13] = v16;
          v13[9] = v20;
          v13[10] = v21;
          v22 = static os_log_type_t.error.getter(v20);
          sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v22, "<%{public}@> Unexpected error received, fetching records to overwrite. error: %@", 80, 2, (uint64_t)v13);
          swift_setDeallocating(v13);
          v23 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v13 + 4, 2, v23);

          sub_1004E1E08(v32, 1);
        }
        v4 = v105;
        v9 = v109;
        v5 = v110;
        if (!v109)
          goto LABEL_16;
LABEL_15:
        v24 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
      v49 = v93;
      if ((v93 & 0xC000000000000001) != 0)
      {
        if (v93 >= 0)
          v49 = v93 & 0xFFFFFFFFFFFFFF8;
        sub_10059BC74(v32, 0);
        sub_10059BC74(v32, 0);
        v50 = v30;
        v52 = __CocoaDictionary.count.getter(v49, v51);
        if (__OFADD__(v52, 1))
          goto LABEL_73;
        v49 = sub_100897EF0(v49, v52 + 1);
      }
      else
      {
        sub_10059BC74(v32, 0);
        sub_10059BC74(v32, 0);
        v53 = v30;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v49);
      v56 = sub_100843848((uint64_t)v30);
      v57 = *(_QWORD *)(v49 + 16);
      v58 = (v55 & 1) == 0;
      v59 = v57 + v58;
      if (__OFADD__(v57, v58))
        goto LABEL_72;
      v60 = v55;
      v93 = v49;
      if (*(_QWORD *)(v49 + 24) < v59)
      {
        sub_10081E954(v59, isUniquelyReferenced_nonNull_native);
        v93 = v49;
        v61 = sub_100843848((uint64_t)v30);
        if ((v60 & 1) != (v62 & 1))
        {
          v90 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v90);
          return;
        }
        v56 = v61;
        if ((v60 & 1) == 0)
          goto LABEL_56;
LABEL_54:
        v63 = *(_QWORD *)(v93 + 56);

        *(_QWORD *)(v63 + 8 * v56) = v32;
        goto LABEL_58;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v55 & 1) != 0)
          goto LABEL_54;
      }
      else
      {
        sub_100831468();
        v93 = v49;
        if ((v60 & 1) != 0)
          goto LABEL_54;
      }
LABEL_56:
      *(_QWORD *)(v93 + 8 * (v56 >> 6) + 64) |= 1 << v56;
      v64 = 8 * v56;
      *(_QWORD *)(*(_QWORD *)(v93 + 48) + v64) = v30;
      *(_QWORD *)(*(_QWORD *)(v93 + 56) + v64) = v32;
      v65 = *(_QWORD *)(v93 + 16);
      v66 = __OFADD__(v65, 1);
      v67 = v65 + 1;
      if (v66)
        goto LABEL_74;
      *(_QWORD *)(v93 + 16) = v67;
      v68 = v30;
LABEL_58:
      swift_bridgeObjectRelease();

      sub_1004E1E08(v32, 0);
      if (!v9)
        continue;
      goto LABEL_15;
    }
    break;
  }
  v29 = v26 + 3;
  if (v29 >= v102)
  {
LABEL_60:
    swift_release(*(_QWORD *)(v107 + 504));
    if ((v93 & 0xC000000000000001) != 0)
    {
      if (v93 < 0)
        v69 = v93;
      else
        v69 = v93 & 0xFFFFFFFFFFFFFF8;
      v70 = swift_bridgeObjectRetain(v93);
      v71 = __CocoaDictionary.count.getter(v69, v70);
      swift_bridgeObjectRelease();
      if (v71)
        goto LABEL_65;
    }
    else if (*(_QWORD *)(v93 + 16))
    {
LABEL_65:
      v73 = *(_QWORD *)(v107 + 456);
      v72 = *(_QWORD *)(v107 + 464);
      v74 = *(_QWORD *)(v107 + 440);
      v111 = *(_QWORD *)(v107 + 448);
      v76 = *(_QWORD *)(v107 + 424);
      v75 = *(_QWORD *)(v107 + 432);
      v77 = *(_BYTE *)(v107 + 520);
      v78 = *(char **)(v107 + 416);
      v79 = *(void **)&v78[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
      v80 = swift_allocObject(&unk_10127DFF0, 33, 7);
      *(_QWORD *)(v80 + 16) = v78;
      *(_QWORD *)(v80 + 24) = v93;
      *(_BYTE *)(v80 + 32) = v77;
      *(_QWORD *)(v107 + 272) = sub_1007B1FE4;
      *(_QWORD *)(v107 + 280) = v80;
      *(_QWORD *)(v107 + 240) = _NSConcreteStackBlock;
      *(_QWORD *)(v107 + 248) = *(_QWORD *)"";
      *(_QWORD *)(v107 + 256) = sub_1005D2FC0;
      *(_QWORD *)(v107 + 264) = &unk_10127E008;
      v81 = _Block_copy(aBlock);
      v82 = v79;
      v83 = v78;
      static DispatchQoS.unspecified.getter(v84);
      *(_QWORD *)(v107 + 392) = _swiftEmptyArrayStorage;
      v85 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v86 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v87 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
      v88 = v85;
      v27 = v107;
      dispatch thunk of SetAlgebra.init<A>(_:)(v92, v86, v87, v76, v88);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v72, v74, v81);
      _Block_release(v81);

      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v111);
      swift_release(*(_QWORD *)(v107 + 280));
LABEL_68:
      v89 = *(_QWORD *)(v27 + 440);
      swift_task_dealloc(*(_QWORD *)(v27 + 464));
      swift_task_dealloc(v89);
      (*(void (**)(void))(v27 + 8))();
      return;
    }
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
  v28 = *(_QWORD *)(v101 + 8 * v29);
  if (v28)
  {
    v5 = v29;
    goto LABEL_29;
  }
  while (1)
  {
    v5 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v5 >= v102)
      goto LABEL_60;
    v28 = *(_QWORD *)(v101 + 8 * v5);
    ++v29;
    if (v28)
      goto LABEL_29;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
}

uint64_t sub_1007984F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 440);

  swift_release_n(v1, 2, v5);
  swift_release(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100798558(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v5;
  void *v6;
  void *v7;
  double result;
  void *v9;
  void *v10;

  v5 = sub_1008D7434((uint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B5DF4((uint64_t)_swiftEmptyArrayStorage);
      v7 = v9;
    }
    else
    {
      v7 = &_swiftEmptySetSingleton;
      v6 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_3;
    }
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B5DF4((uint64_t)_swiftEmptyArrayStorage);
      v6 = v10;
    }
    else
    {
      v6 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
    v7 = &_swiftEmptySetSingleton;
  }
LABEL_3:
  sub_10079E2A4(a2, v5, (uint64_t)v7, (uint64_t)v6, a3, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10079865C(void *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(uint64_t);
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  _QWORD *v55;
  void *v56;
  id v57;
  id v58;
  _BYTE *v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  char *v103;
  id v104;
  double *v105;
  __int128 v106;
  double (*v107)(uint64_t);
  void *v108;
  uint64_t (*v109)();
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115[72];
  char v116[24];
  _QWORD v117[6];

  v102 = a5;
  v100 = a3;
  v101 = a2;
  v104 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v103 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v14);
  v16 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine];
  swift_beginAccess(&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine], v116, 0, 0);
  sub_1004CB7BC(v17, (uint64_t)&v106, &qword_1013F20A0);
  if (v108)
  {
    v96 = v12;
    v97 = v11;
    v98 = v10;
    v99 = v8;
    v18 = 0xED000065706F6353;
    v19 = 0x5320646572616853;
    sub_1004DB728(&v106, (uint64_t)v117);
    v20 = &v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource];
    Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource]);
    if (Strong)
    {
      v22 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler];
      if (v22)
      {
        v94 = Strong;
        v95 = v7;
        v91 = *((_QWORD *)v20 + 1);
        v23 = v22;
        v24 = *(_QWORD *)(v22 + 16);
        v25 = *(double (**)(uint64_t))(v24 + 72);
        v26 = *(_QWORD *)(v24 + 80);
        v27 = *(double *)(v24 + 96);
        swift_retain(v26);
        v93 = v23;
        swift_retain(v23);
        v92 = v26;
        sub_100C9A9FC(1, a4, v25);
        v29 = v27 + v28;
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, &v112, 0, 0);
        v30 = (void *)static OS_os_log.dataSync;
        v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v31, &v111);
        v33 = inited;
        *(_OWORD *)(inited + 16) = xmmword_100EF5550;
        if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
          v34 = 0x5320646572616853;
        else
          v34 = 0x2065746176697250;
        if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
          v35 = 0xEC00000065706F63;
        else
          v35 = 0xED000065706F6353;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v36 = sub_1004CFC2C();
        *(_QWORD *)(v33 + 64) = v36;
        *(_QWORD *)(v33 + 32) = v34;
        *(_QWORD *)(v33 + 40) = v35;
        v37 = v30;
        v38 = objc_msgSend(v104, "zoneName");
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v41 = v40;

        *(_QWORD *)(v33 + 96) = &type metadata for String;
        *(_QWORD *)(v33 + 104) = v36;
        *(_QWORD *)(v33 + 72) = v39;
        *(_QWORD *)(v33 + 80) = v41;
        *(_QWORD *)(v33 + 136) = &type metadata for Double;
        *(_QWORD *)(v33 + 144) = &protocol witness table for Double;
        *(double *)(v33 + 112) = v29;
        v43 = static os_log_type_t.default.getter(v42);
        sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v43, "<%{public}@> Fetching targetted changes for zoneID: <%{public}@> delay:%ld", 74, 2, v33);
        swift_setDeallocating(v33);
        v44 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v33 + 32, 3, v44);

        static TaskPriority.userInitiated.getter(v45);
        v46 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v16, 0, 1, v46);
        v47 = swift_allocObject(&unk_10127DE88, 24, 7);
        swift_unknownObjectWeakInit(v47 + 16);
        sub_1004E90B0((uint64_t)v117, (uint64_t)&v106);
        v48 = swift_allocObject(&unk_10127DEB0, 112, 7);
        *(_QWORD *)(v48 + 16) = v47;
        v49 = v104;
        *(_QWORD *)(v48 + 24) = v104;
        sub_1004DB728(&v106, v48 + 32);
        *(_BYTE *)(v48 + 72) = v100 & 1;
        *(_QWORD *)(v48 + 80) = v102;
        *(_BYTE *)(v48 + 88) = v101;
        v50 = v94;
        v51 = v91;
        *(_QWORD *)(v48 + 96) = v94;
        *(_QWORD *)(v48 + 104) = v51;
        v52 = v49;
        swift_unknownObjectRetain(v50);
        v53 = sub_100C947A0((uint64_t)v16, (uint64_t)&unk_1013F2160, v48, v29);
        swift_release(v48);
        sub_1004CB800((uint64_t)v16, &qword_1013E01F0);
        v54 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
        v55 = (_QWORD *)swift_allocObject(&unk_10127DED8, 40, 7);
        v55[2] = v5;
        v55[3] = v52;
        v55[4] = v53;
        v109 = sub_1007B1E10;
        v110 = v55;
        *(_QWORD *)&v106 = _NSConcreteStackBlock;
        *((_QWORD *)&v106 + 1) = *(_QWORD *)"";
        v107 = sub_1005D2FC0;
        v108 = &unk_10127DEF0;
        v56 = _Block_copy(&v106);
        v57 = v52;
        v58 = v54;
        v59 = v5;
        v60 = swift_retain(v53);
        v61 = v103;
        static DispatchQoS.unspecified.getter(v60);
        v105 = _swiftEmptyArrayStorage;
        v62 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v63 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
        v64 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
        v65 = v98;
        v66 = v63;
        v67 = v95;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v105, v66, v64, v95, v62);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v61, v65, v56);
        _Block_release(v56);
        swift_release(v92);
        swift_unknownObjectRelease(v50);
        swift_release(v53);
        swift_release(v93);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v67);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v61, v97);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v117);
        swift_release(v110);
        return;
      }
      v84 = Strong;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v106, 0, 0);
      v85 = (void *)static OS_os_log.dataSync;
      v86 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v87 = swift_initStackObject(v86, &v113);
      v88 = v87;
      *(_OWORD *)(v87 + 16) = xmmword_100EF5E40;
      if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v18 = 0xEC00000065706F63;
      else
        v19 = 0x2065746176697250;
      *(_QWORD *)(v87 + 56) = &type metadata for String;
      *(_QWORD *)(v87 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v88 + 32) = v19;
      *(_QWORD *)(v88 + 40) = v18;
      v81 = v85;
      v89 = static os_log_type_t.error.getter(v81);
      sub_100A06EBC((uint64_t)v81, &_mh_execute_header, v89, "<%{public}@> Can't fetch records for zoneID. There is no scheduler set", 70, 2, v88);
      swift_setDeallocating(v88);
      v90 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v88 + 32, 1, v90);
      swift_unknownObjectRelease(v84);
    }
    else
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v106, 0, 0);
      v77 = (void *)static OS_os_log.dataSync;
      v78 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v79 = swift_initStackObject(v78, &v114);
      v80 = v79;
      *(_OWORD *)(v79 + 16) = xmmword_100EF5E40;
      if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v18 = 0xEC00000065706F63;
      else
        v19 = 0x2065746176697250;
      *(_QWORD *)(v79 + 56) = &type metadata for String;
      *(_QWORD *)(v79 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v80 + 32) = v19;
      *(_QWORD *)(v80 + 40) = v18;
      v81 = v77;
      v82 = static os_log_type_t.error.getter(v81);
      sub_100A06EBC((uint64_t)v81, &_mh_execute_header, v82, "<%{public}@> Can't fetch records for zoneID. There is no datasource set", 71, 2, v80);
      swift_setDeallocating(v80);
      v83 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v80 + 32, 1, v83);
    }

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v117);
    return;
  }
  sub_1004CB800((uint64_t)&v106, &qword_1013F20A0);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, &v106, 0, 0);
  v68 = (void *)static OS_os_log.dataSync;
  v69 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v70 = swift_initStackObject(v69, v115);
  v71 = v70;
  *(_OWORD *)(v70 + 16) = xmmword_100EF5E40;
  if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v72 = 0x5320646572616853;
  else
    v72 = 0x2065746176697250;
  if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v73 = 0xEC00000065706F63;
  else
    v73 = 0xED000065706F6353;
  *(_QWORD *)(v70 + 56) = &type metadata for String;
  *(_QWORD *)(v70 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v71 + 32) = v72;
  *(_QWORD *)(v71 + 40) = v73;
  v74 = v68;
  v75 = static os_log_type_t.error.getter(v74);
  sub_100A06EBC((uint64_t)v74, &_mh_execute_header, v75, "<%{public}@> Can't fetch records for zoneID. There is no syncEngine set", 71, 2, v71);
  swift_setDeallocating(v71);
  v76 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v71 + 32, 1, v76);

}

uint64_t sub_100798FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  *(_QWORD *)(v8 + 544) = v14;
  *(_QWORD *)(v8 + 536) = a8;
  *(_BYTE *)(v8 + 657) = a7;
  *(_QWORD *)(v8 + 528) = a6;
  *(_BYTE *)(v8 + 656) = a5;
  *(_QWORD *)(v8 + 520) = a4;
  *(_QWORD *)(v8 + 504) = a2;
  *(_QWORD *)(v8 + 512) = a3;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v8 + 552) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 560) = v10;
  *(_QWORD *)(v8 + 568) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)(v8 + 576) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 584) = v12;
  *(_QWORD *)(v8 + 592) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100799060, 0, 0);
}

uint64_t sub_100799060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 504) + 16;
  swift_beginAccess(v1, v0 + 384, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 600) = Strong;
  if (!Strong)
    goto LABEL_4;
  v4 = (char *)Strong;
  if ((static Task<>.isCancelled.getter(v3) & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 512);
    swift_beginAccess(&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks], v0 + 336, 33, 0);
    v6 = sub_100847B70(v5);
    swift_endAccess(v0 + 336);

    swift_release(v6);
LABEL_4:
    v7 = *(_QWORD *)(v0 + 568);
    swift_task_dealloc(*(_QWORD *)(v0 + 592));
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *sub_1004BB5A4(*(_QWORD **)(v0 + 520), *(_QWORD *)(*(_QWORD *)(v0 + 520) + 24));
  *(_QWORD *)(v0 + 608) = v9;
  swift_retain_n(v9, 2);
  *(_QWORD *)(v0 + 616) = CKSyncEngine.database.getter();
  v10 = (_QWORD *)swift_task_alloc(dword_1013EA32C);
  *(_QWORD *)(v0 + 624) = v10;
  *v10 = v0;
  v10[1] = sub_10079919C;
  return sub_100671160(*(_QWORD *)(v0 + 512), *(_BYTE *)(v0 + 656), *(_QWORD *)(v0 + 528));
}

uint64_t sub_10079919C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 624);
  *(_QWORD *)(v4 + 632) = a1;
  *(_QWORD *)(v4 + 640) = a2;
  *(_QWORD *)(v4 + 648) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = sub_100799D44;
  }
  else
  {

    v6 = sub_100799218;
  }
  return swift_task_switch(v6, 0, 0);
}

void sub_100799218(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t inited;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  Swift::Int v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD *@<X8>);
  _QWORD *v72;
  uint64_t *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  void *v97;
  void *v98;
  uint64_t v99;
  void *v100;
  char *v101;
  id v102;
  id v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  int64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  void **v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  void (*v129)(_QWORD *@<X8>);
  int64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;

  v116 = v1 + 16;
  v117 = v1 + 2;
  v114 = v1 + 51;
  v115 = v1 + 45;
  v2 = v1[79];
  v3 = (void **)(v1 + 57);
  v112 = v1 + 59;
  v113 = v1 + 54;
  v123 = v1 + 60;
  v122 = v1[75];
  v111 = v1 + 62;
  swift_release_n(v1[76], 2, a1);
  v118 = v2 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 64);
  v121 = OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope;
  v119 = (unint64_t)(63 - v5) >> 6;
  v126 = v2;
  swift_bridgeObjectRetain(v2);
  v7 = 0;
  v110 = (uint64_t)_swiftEmptyDictionarySingleton;
  v124 = (void **)(v1 + 57);
  if (v6)
    goto LABEL_15;
LABEL_16:
  while (2)
  {
    v24 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    if (v24 >= v119)
      goto LABEL_61;
    v25 = *(_QWORD *)(v118 + 8 * v24);
    ++v7;
    if (v25)
      goto LABEL_29;
    v7 = v24 + 1;
    if (v24 + 1 >= v119)
      goto LABEL_61;
    v25 = *(_QWORD *)(v118 + 8 * v7);
    if (v25)
      goto LABEL_29;
    v7 = v24 + 2;
    if (v24 + 2 >= v119)
    {
LABEL_61:
      v69 = *(_QWORD *)(v120 + 640);
      swift_release(*(_QWORD *)(v120 + 632));
      swift_bridgeObjectRelease();
      v70 = *(_QWORD *)(v69 + 16);
      if (!v70)
      {
        v129 = 0;
        v72 = _swiftEmptyDictionarySingleton;
LABEL_78:
        v92 = *(char **)(v120 + 600);
        v93 = *(_QWORD *)(v120 + 592);
        v127 = *(_QWORD *)(v120 + 584);
        v132 = *(_QWORD *)(v120 + 576);
        v94 = *(_QWORD *)(v120 + 568);
        v125 = *(_QWORD *)(v120 + 560);
        v95 = *(_QWORD *)(v120 + 552);
        v96 = *(_BYTE *)(v120 + 657);
        v97 = *(void **)(v120 + 512);
        swift_bridgeObjectRelease();
        v98 = *(void **)&v92[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
        v99 = swift_allocObject(&unk_10127DF78, 49, 7);
        *(_QWORD *)(v99 + 16) = v92;
        *(_QWORD *)(v99 + 24) = v97;
        *(_QWORD *)(v99 + 32) = v110;
        *(_QWORD *)(v99 + 40) = v72;
        *(_BYTE *)(v99 + 48) = v96;
        *(_QWORD *)(v120 + 272) = sub_1007B1EB4;
        *(_QWORD *)(v120 + 280) = v99;
        *(_QWORD *)(v120 + 240) = _NSConcreteStackBlock;
        *(_QWORD *)(v120 + 248) = *(_QWORD *)"";
        *(_QWORD *)(v120 + 256) = sub_1005D2FC0;
        *(_QWORD *)(v120 + 264) = &unk_10127DF90;
        v100 = _Block_copy((const void *)(v120 + 240));
        v101 = v92;
        v102 = v97;
        v103 = v98;
        static DispatchQoS.unspecified.getter(v104);
        *(_QWORD *)(v120 + 488) = _swiftEmptyArrayStorage;
        v105 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v106 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
        v107 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)(v120 + 488, v106, v107, v95, v105);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v93, v94, v100);
        _Block_release(v100);

        (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v94, v95);
        (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v93, v132);
        swift_release(*(_QWORD *)(v120 + 280));
        sub_1004C1024((uint64_t)v129, 0);
        v108 = *(_QWORD *)(v120 + 568);
        swift_task_dealloc(*(_QWORD *)(v120 + 592));
        swift_task_dealloc(v108);
        (*(void (**)(void))(v120 + 8))();
        return;
      }
      v71 = 0;
      v72 = _swiftEmptyDictionarySingleton;
      v73 = (uint64_t *)(*(_QWORD *)(v120 + 640) + 48);
      v129 = sub_100799F90;
      while (1)
      {
        v131 = v70;
        v75 = *(v73 - 1);
        v76 = *v73;
        v77 = (id)*(v73 - 2);
        swift_bridgeObjectRetain_n(v76, 2);
        v78 = v77;
        sub_1004C1024((uint64_t)v71, 0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v72);
        v133 = v72;
        v81 = sub_100842E98(v75, v76);
        v82 = v72[2];
        v83 = (v80 & 1) == 0;
        v84 = v82 + v83;
        if (__OFADD__(v82, v83))
          goto LABEL_83;
        v85 = v80;
        if (v72[3] >= v84)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1008317B8();
            v72 = v133;
          }
        }
        else
        {
          sub_10081EF00(v84, isUniquelyReferenced_nonNull_native);
          v72 = v133;
          v86 = sub_100842E98(v75, v76);
          if ((v85 & 1) != (v87 & 1))
          {
            v109 = &type metadata for String;
            goto LABEL_80;
          }
          v81 = v86;
        }
        swift_bridgeObjectRelease();
        v74 = v72;
        if ((v85 & 1) == 0)
        {
          v72[(v81 >> 6) + 8] |= 1 << v81;
          v88 = (uint64_t *)(v72[6] + 16 * v81);
          *v88 = v75;
          v88[1] = v76;
          *(_QWORD *)(v72[7] + 8 * v81) = &_swiftEmptySetSingleton;
          v89 = v72[2];
          v90 = v89 + 1;
          v91 = __OFADD__(v89, 1);
          swift_bridgeObjectRetain(v72);
          if (v91)
            goto LABEL_84;
          v72[2] = v90;
          v74 = (_QWORD *)v76;
        }
        swift_bridgeObjectRetain(v74);
        swift_bridgeObjectRelease();
        sub_100ADA74C((Swift::Int *)&v133, v78);

        swift_bridgeObjectRelease_n(v76, 2);
        v73 += 3;
        v71 = sub_100799F90;
        v70 = v131 - 1;
        if (v131 == 1)
          goto LABEL_78;
      }
    }
    v25 = *(_QWORD *)(v118 + 8 * v7);
    if (!v25)
    {
      v26 = v24 + 3;
      if (v26 < v119)
      {
        v25 = *(_QWORD *)(v118 + 8 * v26);
        if (v25)
        {
          v7 = v26;
          goto LABEL_29;
        }
        while (1)
        {
          v7 = v26 + 1;
          if (__OFADD__(v26, 1))
            break;
          if (v7 >= v119)
            goto LABEL_61;
          v25 = *(_QWORD *)(v118 + 8 * v7);
          ++v26;
          if (v25)
            goto LABEL_29;
        }
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
        return;
      }
      goto LABEL_61;
    }
LABEL_29:
    v6 = (v25 - 1) & v25;
    for (i = __clz(__rbit64(v25)) + (v7 << 6); ; i = v22 | (v7 << 6))
    {
      v27 = *(void **)(*(_QWORD *)(v126 + 48) + 8 * i);
      v28 = *(_QWORD *)(v126 + 56) + 16 * i;
      v29 = *(void **)v28;
      if ((*(_BYTE *)(v28 + 8) & 1) == 0)
        break;
      v130 = v7;
      *v123 = v29;
      sub_10059BC74(v29, 1);
      sub_10059BC74(v29, 1);
      v30 = v27;
      v31 = sub_1004B804C(&qword_1013E0210);
      type metadata accessor for CKError(0);
      v33 = v32;
      v128 = v6;
      if ((swift_dynamicCast(v3, v123, v31, v32, 6) & 1) != 0)
      {
        v34 = *v3;
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v114, 0, 0);
        v35 = (void *)static OS_os_log.dataSync;
        v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v36, v117);
        v38 = (_QWORD *)inited;
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        if (*(_BYTE *)(v122 + v121))
          v39 = 0x5320646572616853;
        else
          v39 = 0x2065746176697250;
        if (*(_BYTE *)(v122 + v121))
          v40 = 0xEC00000065706F63;
        else
          v40 = 0xED000065706F6353;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        v38[4] = v39;
        v38[5] = v40;
        *v112 = v34;
        v41 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
        v42 = v35;
        v43 = _BridgedStoredNSError.errorCode.getter(v33, v41);
        v38[12] = &type metadata for Int;
        v38[13] = &protocol witness table for Int;
        v38[9] = v43;
        v44 = static os_log_type_t.error.getter(v43);
        sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v44, "<%{public}@> Received cloud record error fetching records for ZoneID %d", 71, 2, (uint64_t)v38);

        swift_setDeallocating(v38);
        v45 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v38 + 4, 2, v45);

        sub_1004E1E08(v29, 1);
      }
      else
      {
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v115, 0, 0);
        v8 = (void *)static OS_os_log.dataSync;
        v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v10 = swift_initStackObject(v9, v116);
        v11 = (_QWORD *)v10;
        *(_OWORD *)(v10 + 16) = xmmword_100EF5A10;
        if (*(_BYTE *)(v122 + v121))
          v12 = 0x5320646572616853;
        else
          v12 = 0x2065746176697250;
        if (*(_BYTE *)(v122 + v121))
          v13 = 0xEC00000065706F63;
        else
          v13 = 0xED000065706F6353;
        *(_QWORD *)(v10 + 56) = &type metadata for String;
        v14 = sub_1004CFC2C();
        v11[8] = v14;
        v11[4] = v12;
        v11[5] = v13;
        swift_getErrorValue(v29, v111, v113);
        v15 = *(_QWORD *)(v120 + 440);
        v16 = *(_QWORD *)(v120 + 448);
        v17 = v8;
        v18 = Error.localizedDescription.getter(v15, v16);
        v11[12] = &type metadata for String;
        v11[13] = v14;
        v11[9] = v18;
        v11[10] = v19;
        v20 = static os_log_type_t.error.getter(v18);
        sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v20, "<%{public}@> Unexpected record error received, fetching records for zoneID to overwrite. error: %@", 98, 2, (uint64_t)v11);
        swift_setDeallocating(v11);
        v21 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v11 + 4, 2, v21);

        sub_1004E1E08(v29, 1);
      }
      v3 = v124;
      v6 = v128;
      v7 = v130;
      if (!v128)
        goto LABEL_16;
LABEL_15:
      v22 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
    }
    if ((v110 & 0xC000000000000001) != 0)
    {
      if (v110 < 0)
        v46 = v110;
      else
        v46 = v110 & 0xFFFFFFFFFFFFFF8;
      sub_10059BC74(v29, 0);
      sub_10059BC74(v29, 0);
      v47 = v27;
      v49 = __CocoaDictionary.count.getter(v46, v48);
      if (__OFADD__(v49, 1))
        goto LABEL_87;
      v50 = sub_100897EF0(v46, v49 + 1);
    }
    else
    {
      sub_10059BC74(v29, 0);
      sub_10059BC74(v29, 0);
      v51 = v27;
      v50 = v110;
    }
    v52 = (_QWORD *)v50;
    v53 = swift_isUniquelyReferenced_nonNull_native(v50);
    v133 = v52;
    v55 = sub_100843848((uint64_t)v27);
    v56 = v52[2];
    v57 = (v54 & 1) == 0;
    v58 = v56 + v57;
    if (__OFADD__(v56, v57))
      goto LABEL_86;
    v59 = v54;
    if (v52[3] >= v58)
    {
      if ((v53 & 1) != 0)
      {
        v62 = v52;
        v110 = (uint64_t)v52;
        if ((v54 & 1) != 0)
          goto LABEL_55;
      }
      else
      {
        sub_100831468();
        v62 = v133;
        v110 = (uint64_t)v133;
        if ((v59 & 1) != 0)
          goto LABEL_55;
      }
LABEL_57:
      v62[(v55 >> 6) + 8] |= 1 << v55;
      v64 = 8 * v55;
      *(_QWORD *)(v62[6] + v64) = v27;
      *(_QWORD *)(v62[7] + v64) = v29;
      v65 = v62[2];
      v66 = __OFADD__(v65, 1);
      v67 = v65 + 1;
      if (v66)
        goto LABEL_88;
      v62[2] = v67;
      v68 = v27;
LABEL_59:
      swift_bridgeObjectRelease();

      sub_1004E1E08(v29, 0);
      if (!v6)
        continue;
      goto LABEL_15;
    }
    break;
  }
  sub_10081E954(v58, v53);
  v60 = sub_100843848((uint64_t)v27);
  if ((v59 & 1) == (v61 & 1))
  {
    v55 = v60;
    v62 = v133;
    v110 = (uint64_t)v133;
    if ((v59 & 1) == 0)
      goto LABEL_57;
LABEL_55:
    v63 = v62[7];

    *(_QWORD *)(v63 + 8 * v55) = v29;
    goto LABEL_59;
  }
  v109 = (void *)sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
LABEL_80:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v109);
}

uint64_t sub_100799D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(char **)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 592);
  v23 = *(_QWORD *)(v0 + 584);
  v24 = *(_QWORD *)(v0 + 576);
  v5 = *(_QWORD *)(v0 + 568);
  v22 = *(_QWORD *)(v0 + 560);
  v21 = *(_QWORD *)(v0 + 552);
  v6 = *(_BYTE *)(v0 + 657);
  v7 = *(void **)(v0 + 512);
  v25 = *(_OWORD *)(v0 + 536);

  swift_release_n(v2, 2, v8);
  v9 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v10 = swift_allocObject(&unk_10127DF28, 57, 7);
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v1;
  *(_OWORD *)(v10 + 40) = v25;
  *(_BYTE *)(v10 + 56) = v6;
  *(_QWORD *)(v0 + 320) = sub_1007B1E34;
  *(_QWORD *)(v0 + 328) = v10;
  *(_QWORD *)(v0 + 288) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 296) = *(_QWORD *)"";
  *(_QWORD *)(v0 + 304) = sub_1005D2FC0;
  *(_QWORD *)(v0 + 312) = &unk_10127DF40;
  v11 = _Block_copy((const void *)(v0 + 288));
  v12 = v3;
  v13 = v9;
  v14 = v7;
  swift_errorRetain(v1);
  v15 = swift_unknownObjectRetain(v25);
  static DispatchQoS.unspecified.getter(v15);
  *(_QWORD *)(v0 + 464) = _swiftEmptyArrayStorage;
  v16 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v18 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 464, v17, v18, v21, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v5, v11);
  _Block_release(v11);

  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v5, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v24);
  swift_release(*(_QWORD *)(v0 + 328));
  v19 = *(_QWORD *)(v0 + 568);
  swift_task_dealloc(*(_QWORD *)(v0 + 592));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100799F90(_QWORD *a1@<X8>)
{
  *a1 = &_swiftEmptySetSingleton;
}

double sub_100799FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  void *v10;
  void *v11;
  double result;
  void *v13;
  void *v14;
  _BYTE v15[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks, v15, 33, 0);
  v9 = sub_100847B70(a2);
  swift_endAccess(v15);
  swift_release(v9);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B5DF4((uint64_t)_swiftEmptyArrayStorage);
      v11 = v13;
    }
    else
    {
      v11 = &_swiftEmptySetSingleton;
      v10 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_3;
    }
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B5DF4((uint64_t)_swiftEmptyArrayStorage);
      v10 = v14;
    }
    else
    {
      v10 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    v10 = &_swiftEmptySetSingleton;
    v11 = &_swiftEmptySetSingleton;
  }
LABEL_3:
  sub_10079E2A4(a3, a4, (uint64_t)v11, (uint64_t)v10, a5, 0, 0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10079A0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  unint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t inited;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  id v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  void *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[3];
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char v111[32];

  v104 = a6;
  v105 = a4;
  v9 = sub_1004B804C(&qword_1013F20C0);
  __chkstk_darwin(v9);
  v101 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v100 = (char *)&v95 - v12;
  v13 = type metadata accessor for CRLZoneSyncResultScenarios(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v20);
  v98 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v99 = (uint64_t)&v95 - v23;
  v102 = a1;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks, v111, 33, 0);
  v24 = sub_100847B70(a2);
  swift_endAccess(v111);
  swift_release(v24);
  *(_QWORD *)v111 = a3;
  swift_errorRetain(a3);
  v25 = sub_1004B804C(&qword_1013E0210);
  type metadata accessor for CKError(0);
  v26 = v25;
  v28 = v27;
  v29 = swift_dynamicCast(&v110, v111, v26, v27, 6);
  v103 = (void *)a2;
  if (v29)
  {
    v30 = v110;
    v31 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
    v96 = v28;
    v97 = v31;
    v32 = _BridgedStoredNSError.code.getter(v28, v31);
    v33 = (*(_QWORD *)v111 < 0x25uLL) & (0x1000A002D8uLL >> v111[0]);
    Date.init()(v32);
    v98 = v30;
    v34 = (void *)_convertErrorToNSError(_:)(v30);
    v35 = CKRetryAfterSecondsForError();

    v36 = v16;
    v37 = (uint64_t)v15;
    v38 = v99;
    Date.advanced(by:)(v35);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v38, 0, 1, v36);
    v39 = (uint64_t)&v100[*(int *)(v9 + 48)];
    sub_1004CB7BC(v38, v39, &qword_1013E04F0);
    *(_DWORD *)v37 = 0;
    *(_BYTE *)(v37 + 4) = v33 ^ 1;
    v40 = (uint64_t)&v101[*(int *)(v9 + 48)];
    sub_1004C4938(v39, v40, &qword_1013E04F0);
    v41 = (_BYTE *)(v37 + *(int *)(v13 + 36));
    *v41 = v33;
    sub_1004C4938(v40, (uint64_t)&v41[*(int *)(v9 + 48)], &qword_1013E04F0);
    *(_QWORD *)(v37 + *(int *)(v13 + 40)) = _swiftEmptyArrayStorage;
    v42 = sub_1004B804C(&qword_1013F2168);
    v43 = sub_1004B804C(&qword_1013F2170);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(_QWORD *)(v44 + 72);
    v46 = *(unsigned __int8 *)(v44 + 80);
    v47 = (v46 + 32) & ~v46;
    v48 = swift_allocObject(v42, v47 + v45, v46 | 7);
    *(_OWORD *)(v48 + 16) = xmmword_100EF5E40;
    v49 = v48 + v47 + *(int *)(v43 + 48);
    v50 = v103;
    *(_QWORD *)(v48 + v47) = v103;
    sub_1004B8460(v37, v49, type metadata accessor for CRLZoneSyncResultScenarios);
    v51 = v50;
    v52 = sub_1008D7554(v48);
    sub_1008F729C(v52, v104);
    swift_bridgeObjectRelease();
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v111, 0, 0);
    v53 = (void *)static OS_os_log.dataSync;
    v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v54, &v106);
    v56 = (_QWORD *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    if (*(_BYTE *)(v102 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v57 = 0x5320646572616853;
    else
      v57 = 0x2065746176697250;
    if (*(_BYTE *)(v102 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v58 = 0xEC00000065706F63;
    else
      v58 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    v56[4] = v57;
    v56[5] = v58;
    v59 = v98;
    v110 = v98;
    v60 = v53;
    v61 = _BridgedStoredNSError.errorCode.getter(v96, v97);
    v56[12] = &type metadata for Int;
    v56[13] = &protocol witness table for Int;
    v56[9] = v61;
    v62 = static os_log_type_t.error.getter(v61);
    sub_100A06EBC((uint64_t)v60, &_mh_execute_header, v62, "<%{public}@> Received cloud error fetching records for ZoneID %d", 64, 2, (uint64_t)v56);
    swift_setDeallocating(v56);
    v63 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v56 + 4, 2, v63);

    sub_1004B84A4(v37, type metadata accessor for CRLZoneSyncResultScenarios);
    sub_1004CB800(v99, &qword_1013E04F0);
  }
  else
  {
    v95 = v17;
    v96 = v16;
    v97 = v13;
    v99 = v9;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v111, 0, 0);
    v64 = (void *)static OS_os_log.dataSync;
    v65 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v66 = swift_initStackObject(v65, &v109);
    v67 = (_QWORD *)v66;
    *(_OWORD *)(v66 + 16) = xmmword_100EF5A10;
    if (*(_BYTE *)(v102 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v68 = 0x5320646572616853;
    else
      v68 = 0x2065746176697250;
    if (*(_BYTE *)(v102 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v69 = 0xEC00000065706F63;
    else
      v69 = 0xED000065706F6353;
    *(_QWORD *)(v66 + 56) = &type metadata for String;
    v70 = sub_1004CFC2C();
    v67[8] = v70;
    v67[4] = v68;
    v67[5] = v69;
    swift_getErrorValue(a3, &v108, v107);
    v71 = v107[1];
    v72 = v107[2];
    v73 = v64;
    v74 = Error.localizedDescription.getter(v71, v72);
    v67[12] = &type metadata for String;
    v67[13] = v70;
    v67[9] = v74;
    v67[10] = v75;
    v76 = static os_log_type_t.error.getter(v74);
    sub_100A06EBC((uint64_t)v73, &_mh_execute_header, v76, "<%{public}@> Received error fetching records for ZoneID <%{public}@>", 68, 2, (uint64_t)v67);
    swift_setDeallocating(v67);
    v77 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v67 + 4, 2, v77);

    v78 = sub_1004B804C(&qword_1013F2168);
    v79 = sub_1004B804C(&qword_1013F2170);
    v80 = *(_QWORD *)(v79 - 8);
    v81 = *(_QWORD *)(v80 + 72);
    v82 = *(unsigned __int8 *)(v80 + 80);
    v83 = (v82 + 32) & ~v82;
    v84 = swift_allocObject(v78, v83 + v81, v82 | 7);
    *(_OWORD *)(v84 + 16) = xmmword_100EF5E40;
    v85 = v84 + v83 + *(int *)(v79 + 48);
    v86 = v103;
    *(_QWORD *)(v84 + v83) = v103;
    v87 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56))(v98, 1, 1, v96);
    v88 = v99;
    v89 = (uint64_t)&v100[*(int *)(v99 + 48)];
    sub_1004C4938(v87, v89, &qword_1013E04F0);
    *(_DWORD *)v85 = 0;
    *(_BYTE *)(v85 + 4) = 0;
    v90 = (uint64_t)&v101[*(int *)(v88 + 48)];
    sub_1004C4938(v89, v90, &qword_1013E04F0);
    v91 = v97;
    v92 = (_BYTE *)(v85 + *(int *)(v97 + 36));
    *v92 = 0;
    sub_1004C4938(v90, (uint64_t)&v92[*(int *)(v88 + 48)], &qword_1013E04F0);
    *(_QWORD *)(v85 + *(int *)(v91 + 40)) = _swiftEmptyArrayStorage;
    v93 = v86;
    v94 = sub_1008D7554(v84);
    sub_1008F729C(v94, v104);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10079A90C(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];

  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks, v11, 33, 0);
  v6 = a2;
  swift_retain(a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
  v10 = *v5;
  *v5 = 0x8000000000000000;
  sub_1008288F8(a3, v6, isUniquelyReferenced_nonNull_native);
  v8 = *v5;
  *v5 = v10;

  swift_bridgeObjectRelease(v8);
  return swift_endAccess(v11);
}

double sub_10079A9B8(char a1)
{
  return sub_10079AC80(a1, (uint64_t)&unk_10127DE38, (uint64_t)sub_1007B1CC8, (uint64_t)&unk_10127DE50);
}

void sub_10079A9D4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[72];
  _BYTE v22[24];

  v4 = sub_1004B804C(&qword_1013F2140);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CRLSyncActivity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (v11)
  {
    swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler));
    sub_100794100(1, 1);
    sub_100795254(1, a2 & 1, (uint64_t)v6);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      swift_release(v11);
      sub_1004CB800((uint64_t)v6, &qword_1013F2140);
    }
    else
    {
      sub_1004B84E0((uint64_t)v6, (uint64_t)v10, type metadata accessor for CRLSyncActivity);
      sub_1007950A4(v10);
      swift_release(v11);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSyncActivity);
    }
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v22, 0, 0);
    v12 = (void *)static OS_os_log.dataSync;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v21);
    v15 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v16 = 0x5320646572616853;
    else
      v16 = 0x2065746176697250;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v17 = 0xEC00000065706F63;
    else
      v17 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v17;
    v18 = v12;
    v19 = static os_log_type_t.error.getter(v18);
    sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v19, "<%{public}@> Attempting to fetch changes but scheduler not found", 64, 2, v15);
    swift_setDeallocating(v15);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v15 + 32, 1, v20);

  }
}

double sub_10079AC64(char a1)
{
  return sub_10079AC80(a1, (uint64_t)&unk_10127DDE8, (uint64_t)sub_1007B1CBC, (uint64_t)&unk_10127DE00);
}

double sub_10079AC80(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v16 = swift_allocObject(a2, 25, 7);
  *(_QWORD *)(v16 + 16) = v4;
  *(_BYTE *)(v16 + 24) = a1;
  aBlock[4] = a3;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = a4;
  v17 = _Block_copy(aBlock);
  v18 = v15;
  v19 = v4;
  static DispatchQoS.unspecified.getter(v20);
  v28 = _swiftEmptyArrayStorage;
  v21 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v23 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v22, v23, v9, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  return result;
}

void sub_10079AE7C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[72];
  _BYTE v22[24];

  v4 = sub_1004B804C(&qword_1013F2140);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CRLSyncActivity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (v11)
  {
    swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler));
    sub_100794100(0, 1);
    sub_100795254(0, a2 & 1, (uint64_t)v6);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      swift_release(v11);
      sub_1004CB800((uint64_t)v6, &qword_1013F2140);
    }
    else
    {
      sub_1004B84E0((uint64_t)v6, (uint64_t)v10, type metadata accessor for CRLSyncActivity);
      sub_1007950A4(v10);
      swift_release(v11);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSyncActivity);
    }
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v22, 0, 0);
    v12 = (void *)static OS_os_log.dataSync;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v21);
    v15 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v16 = 0x5320646572616853;
    else
      v16 = 0x2065746176697250;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v17 = 0xEC00000065706F63;
    else
      v17 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v17;
    v18 = v12;
    v19 = static os_log_type_t.error.getter(v18);
    sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v19, "<%{public}@> Attempting to save changes but scheduler not found", 63, 2, v15);
    swift_setDeallocating(v15);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v15 + 32, 1, v20);

  }
}

void sub_10079B10C()
{
  unint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD, __n128);
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  __n128 v41;
  void *v42;
  id v43;
  _QWORD *v44;
  id v45;
  char v46;
  char v47;
  id v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t (*v50)(_QWORD, _QWORD, __n128);
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  id v62;
  id v63;
  _QWORD **v64;
  void (*v65)(_QWORD *);
  _QWORD *v66;
  _QWORD *v67;
  char v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::Int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  id v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  id v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t (*v131)(_QWORD, _QWORD, __n128);
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double *v138;
  _QWORD v139[4];
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char v143[72];
  char v144[80];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) == 0)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v1 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v2
                                                        + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v1)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v139, 0, 0);
    v22 = (void *)static OS_os_log.dataSync;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v144);
    v25 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v26 = 0x5320646572616853;
    else
      v26 = 0x2065746176697250;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v27 = 0xEC00000065706F63;
    else
      v27 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v27;
    v28 = v22;
    v30 = static os_log_type_t.default.getter(v29);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "<%{public}@> Could not create throttling scheduler while attempting to save changes", 83, 2, v25);
    swift_setDeallocating(v25);
    v31 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 32, 1, v31);
    goto LABEL_21;
  }
  v10 = OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask))
  {
    v11 = qword_1013DD870;
    swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler));
    if (v11 == -1)
    {
LABEL_5:
      swift_beginAccess(&static OS_os_log.dataSync, v139, 0, 0);
      v12 = (void *)static OS_os_log.dataSync;
      v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v14 = swift_initStackObject(v13, v143);
      v15 = v14;
      *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v16 = 0x5320646572616853;
      else
        v16 = 0x2065746176697250;
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v17 = 0xEC00000065706F63;
      else
        v17 = 0xED000065706F6353;
      *(_QWORD *)(v14 + 56) = &type metadata for String;
      *(_QWORD *)(v14 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v15 + 32) = v16;
      *(_QWORD *)(v15 + 40) = v17;
      v18 = v12;
      v20 = static os_log_type_t.default.getter(v19);
      sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "<%{public}@> There is an ongoing save task. A subsequent save will be attempted once the current save task is finished", 118, 2, v15);
      swift_setDeallocating(v15);
      v21 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v15 + 32, 1, v21);

      sub_100794100(0, 1);
      swift_release(v1);
      return;
    }
LABEL_95:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_5;
  }
  swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler));
  sub_100794100(0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource);
  if (!Strong)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v139, 0, 0);
    v71 = (void *)static OS_os_log.dataSync;
    v72 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v73 = swift_initStackObject(v72, &v142);
    v74 = v73;
    *(_OWORD *)(v73 + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v75 = 0x5320646572616853;
    else
      v75 = 0x2065746176697250;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v76 = 0xEC00000065706F63;
    else
      v76 = 0xED000065706F6353;
    *(_QWORD *)(v73 + 56) = &type metadata for String;
    *(_QWORD *)(v73 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v74 + 32) = v75;
    *(_QWORD *)(v74 + 40) = v76;
    v28 = v71;
    v77 = static os_log_type_t.error.getter(v28);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v77, "<%{public}@> Saving changes was cancelled because there is no data source set on the sync controller", 100, 2, v74);
    swift_setDeallocating(v74);
    v78 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v74 + 32, 1, v78);
    swift_release(v1);
    goto LABEL_21;
  }
  v33 = Strong;
  v34 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
  if (!v34)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v139, 0, 0);
    v109 = (void *)static OS_os_log.dataSync;
    v110 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v111 = swift_initStackObject(v110, &v141);
    v112 = v111;
    *(_OWORD *)(v111 + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v113 = 0x5320646572616853;
    else
      v113 = 0x2065746176697250;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v114 = 0xEC00000065706F63;
    else
      v114 = 0xED000065706F6353;
    *(_QWORD *)(v111 + 56) = &type metadata for String;
    *(_QWORD *)(v111 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v112 + 32) = v113;
    *(_QWORD *)(v112 + 40) = v114;
    v28 = v109;
    v115 = static os_log_type_t.error.getter(v28);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v115, "<%{public}@> Saving changes was cancelled because there is no sync logic provider set on the sync controller", 108, 2, v112);
    swift_setDeallocating(v112);
    v116 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v112 + 32, 1, v116);
    swift_release(v1);
    swift_unknownObjectRelease(v33);
LABEL_21:

    return;
  }
  v35 = v34;
  v36 = sub_1008F5AC0();
  v133 = *(_QWORD *)(v36 + 16);
  if (v133)
  {
    v128 = v10;
    v129 = v33;
    v131 = v1;
    v132 = v35;
    v130 = v2;
    v37 = 0;
    v140 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      v134 = *(_OWORD *)(v36 + 16 * v37 + 32);
      v38 = v134;
      ObjectType = swift_getObjectType(v134);
      v139[0] = v134;
      v40 = *(_QWORD *)(*((_QWORD *)&v134 + 1) + 8);
      v1 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(v40 + 8);
      v41 = swift_unknownObjectRetain(v38);
      v42 = (void *)v1(ObjectType, v40, v41);
      v43 = objc_msgSend(v42, "zoneID");

      v44 = v140;
      if (!v140[2]
        || (v45 = v43, sub_100843894((uint64_t)v45), v47 = v46, v45, (v47 & 1) == 0))
      {
        v48 = v43;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v44);
        v139[0] = v44;
        v140 = (_QWORD *)0x8000000000000000;
        v2 = sub_100843894((uint64_t)v48);
        v51 = v44[2];
        v52 = (v50 & 1) == 0;
        v53 = v51 + v52;
        if (__OFADD__(v51, v52))
        {
          __break(1u);
          goto LABEL_93;
        }
        v1 = v50;
        if (v44[3] >= v53)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_10083145C();
        }
        else
        {
          sub_10081E948(v53, isUniquelyReferenced_nonNull_native);
          v54 = sub_100843894((uint64_t)v48);
          if ((v1 & 1) != (v55 & 1))
          {
            v127 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v127);
            __break(1u);
            return;
          }
          v2 = v54;
        }
        v56 = (_QWORD *)v139[0];
        v57 = 8 * v2;
        if ((v1 & 1) != 0)
        {
          v58 = *(_QWORD *)(v139[0] + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v58 + v57) = _swiftEmptyArrayStorage;
        }
        else
        {
          *(_QWORD *)(v139[0] + 8 * (v2 >> 6) + 64) |= 1 << v2;
          *(_QWORD *)(v56[6] + 8 * v2) = v48;
          *(_QWORD *)(v56[7] + 8 * v2) = _swiftEmptyArrayStorage;
          v59 = v56[2];
          v60 = __OFADD__(v59, 1);
          v61 = v59 + 1;
          if (v60)
            goto LABEL_94;
          v56[2] = v61;
          v62 = v48;
        }
        v140 = v56;

        swift_bridgeObjectRelease();
      }
      v63 = v43;
      v65 = sub_100CF9D74(v139, v63);
      v66 = *v64;
      if (*v64)
      {
        v67 = v64;
        swift_unknownObjectRetain(v38);
        v68 = swift_isUniquelyReferenced_nonNull_native(v66);
        *v67 = v66;
        if ((v68 & 1) == 0)
        {
          v66 = sub_100D11494(0, v66[2] + 1, 1, v66);
          *v67 = v66;
        }
        v70 = v66[2];
        v69 = v66[3];
        if (v70 >= v69 >> 1)
        {
          v66 = sub_100D11494((_QWORD *)(v69 > 1), v70 + 1, 1, v66);
          *v67 = v66;
        }
        v66[2] = v70 + 1;
        *(_OWORD *)&v66[2 * v70 + 4] = v134;
      }
      ((void (*)(_QWORD *, _QWORD))v65)(v139, 0);
      ++v37;

      swift_unknownObjectRelease(v38);
      if (v133 == v37)
      {
        swift_bridgeObjectRelease();
        v79 = v140;
        swift_bridgeObjectRetain(v140);
        sub_100A6549C(v80);
        v81 = v132;
        v83 = sub_100B3B424(v82);
        swift_bridgeObjectRelease();
        v138 = _swiftEmptyArrayStorage;
        __chkstk_darwin(v84);
        *(&v128 - 2) = (uint64_t)&v138;
        swift_bridgeObjectRetain(v79);
        sub_1007AF818(v85, (void (*)(id, uint64_t))sub_1007B1C90);
        swift_bridgeObjectRelease();
        v86 = (unint64_t)v138;
        v87 = type metadata accessor for CRLSyncControllerSaveTask();
        swift_allocObject(v87, 72, 7);
        swift_bridgeObjectRetain(v86);
        swift_unknownObjectRetain(v81);
        v88 = sub_100D4F084(v86);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease(v81);
        v89 = v130;
        v90 = v128;
        v91 = *(_QWORD *)(v130 + v128);
        *(_QWORD *)(v130 + v128) = v88;
        swift_release(v91);
        v92 = *(_QWORD *)(v89 + v90);
        if (v92)
        {
          swift_beginAccess(v92 + 40, v139, 33, 0);
          swift_retain(v92);
          swift_bridgeObjectRetain(v83);
          sub_100512BA0(v93);
          swift_endAccess(v139);
          swift_release(v92);
          v94 = *(_QWORD *)(v89 + v90);
          if (v94)
          {
            swift_beginAccess(v94 + 40, v139, 0, 0);
            v95 = *(_QWORD *)(v94 + 40);
            if ((v95 & 0xC000000000000001) != 0)
            {
              if (v95 < 0)
                v96 = v95;
              else
                v96 = v95 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v95);
              v97 = __CocoaSet.count.getter(v96);
              swift_bridgeObjectRelease();
              if (v97)
              {
LABEL_62:
                if (qword_1013DD870 != -1)
                  swift_once(&qword_1013DD870, sub_100A059E0);
                swift_beginAccess(&static OS_os_log.dataSync, &v137, 0, 0);
                v98 = (void *)static OS_os_log.dataSync;
                v99 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                v100 = swift_initStackObject(v99, &v136);
                v101 = v100;
                *(_OWORD *)(v100 + 16) = xmmword_100EF5E40;
                if (*(_BYTE *)(v89 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
                  v102 = 0x5320646572616853;
                else
                  v102 = 0x2065746176697250;
                if (*(_BYTE *)(v89 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
                  v103 = 0xEC00000065706F63;
                else
                  v103 = 0xED000065706F6353;
                *(_QWORD *)(v100 + 56) = &type metadata for String;
                *(_QWORD *)(v100 + 64) = sub_1004CFC2C();
                *(_QWORD *)(v101 + 32) = v102;
                *(_QWORD *)(v101 + 40) = v103;
                v104 = v98;
                v106 = static os_log_type_t.default.getter(v105);
                sub_100A06EBC((uint64_t)v104, &_mh_execute_header, v106, "<%{public}@> Attempting to re-save zones whose data was reset", 61, 2, v101);
                swift_setDeallocating(v101);
                v107 = sub_1004B804C(&qword_1013E0190);
                swift_arrayDestroy(v101 + 32, 1, v107);

                v108 = sub_1005FFAA4(v83);
                swift_bridgeObjectRelease();
                sub_10079C850((uint64_t)v108);
                swift_release(v108);
                v81 = v132;
                goto LABEL_91;
              }
            }
            else if (*(_QWORD *)(v95 + 16))
            {
              goto LABEL_62;
            }
          }
        }
        swift_bridgeObjectRelease();
LABEL_91:
        sub_1007A1E00();
        swift_bridgeObjectRelease();
        swift_release(v131);
        swift_unknownObjectRelease(v129);
        swift_unknownObjectRelease(v81);
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v139, 0, 0);
  v117 = (void *)static OS_os_log.dataSync;
  v118 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v119 = swift_initStackObject(v118, &v135);
  v120 = v119;
  *(_OWORD *)(v119 + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v121 = 0x5320646572616853;
  else
    v121 = 0x2065746176697250;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v122 = 0xEC00000065706F63;
  else
    v122 = 0xED000065706F6353;
  *(_QWORD *)(v119 + 56) = &type metadata for String;
  *(_QWORD *)(v119 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v120 + 32) = v121;
  *(_QWORD *)(v120 + 40) = v122;
  v123 = v117;
  v125 = static os_log_type_t.default.getter(v124);
  sub_100A06EBC((uint64_t)v123, &_mh_execute_header, v125, "<%{public}@> Received an empty change set from the data source. There is no need to sync with CloudKit", 102, 2, v120);
  swift_setDeallocating(v120);
  v126 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v120 + 32, 1, v126);

  sub_100794ECC(0, 1);
  swift_release(v1);
  swift_unknownObjectRelease(v33);
  swift_unknownObjectRelease(v35);
}

double sub_10079BEE8(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double result;

  v6 = type metadata accessor for CRLSyncRecordGroup();
  swift_allocObject(v6, 48, 7);
  v7 = a1;
  swift_bridgeObjectRetain(a2);
  v8 = sub_100C74D84(v7, a2);
  swift_retain(v8);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v8);
  specialized Array._endMutation()(v12);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_10079BFA4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _BYTE *v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _BYTE *v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[5];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[72];
  char v92[72];
  char v93[32];

  v1 = v0;
  v2 = type metadata accessor for CRLSyncActivity(0);
  v78 = *(_QWORD *)(v2 - 8);
  v79 = v2;
  __chkstk_darwin(v2);
  v70 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013F2140);
  __chkstk_darwin(v4);
  v77 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v80 = (uint64_t)&v67 - v7;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  __chkstk_darwin(v8);
  v74 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  __chkstk_darwin(v10);
  v71 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v93, 0, 0);
  v16 = (void *)static OS_os_log.dataSync;
  v85 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v85, v92);
  v18 = (_QWORD *)inited;
  v83 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v19 = 0x5320646572616853;
  else
    v19 = 0x2065746176697250;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v20 = 0xEC00000065706F63;
  else
    v20 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v81 = sub_1004CFC2C();
  v82 = v20;
  v18[8] = v81;
  v84 = v19;
  v18[4] = v19;
  v18[5] = v20;
  v21 = v16;
  v23 = static os_log_type_t.default.getter(v22);
  sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "<%{public}@> Current save task finished", 39, 2, (uint64_t)v18);
  swift_setDeallocating(v18);
  v86 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v18 + 4, 1, v86);

  v24 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v15 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v25 = v24;
  v26 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v26 & 1) != 0)
  {
    v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler];
    if (v27)
    {
      v28 = OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask;
      v29 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask];
      if (v29)
      {
        swift_beginAccess(v29 + 16, &v89, 0, 0);
        v30 = *(_QWORD *)(v29 + 16);
        swift_retain(v27);
        swift_retain(v29);
        v31 = swift_bridgeObjectRetain(v30);
        sub_100A6567C(v32, v31);
        v34 = v33;
        sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
        v68 = static OS_dispatch_queue.main.getter(v35);
        v36 = swift_allocObject(&unk_10127DD98, 32, 7);
        *(_QWORD *)(v36 + 16) = v1;
        *(_QWORD *)(v36 + 24) = v34;
        v87[4] = sub_1007B1C88;
        v88 = v36;
        v87[0] = _NSConcreteStackBlock;
        v87[1] = *(_QWORD *)"";
        v87[2] = sub_1005D2FC0;
        v87[3] = &unk_10127DDB0;
        v37 = _Block_copy(v87);
        v38 = v88;
        v39 = v1;
        v40 = swift_release(v38);
        v41 = v71;
        static DispatchQoS.unspecified.getter(v40);
        v87[0] = _swiftEmptyArrayStorage;
        v42 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v43 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
        v69 = v28;
        v44 = v43;
        v45 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
        v46 = v74;
        v47 = v44;
        v48 = v76;
        dispatch thunk of SetAlgebra.init<A>(_:)(v87, v47, v45, v76, v42);
        v49 = (void *)v68;
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v41, v46, v37);
        _Block_release(v37);
        swift_release(v29);

        v50 = v48;
        v28 = v69;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v50);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v73);
      }
      else
      {
        swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler]);
      }
      v56 = (uint64_t)v77;
      v57 = v80;
      sub_100795254(0, 0, v80);
      v58 = *(_QWORD *)&v1[v28];
      if (v58)
        v59 = (*(_BYTE *)(v58 + 56) | *(_BYTE *)(v58 + 57)) ^ 1;
      else
        v59 = 1;
      *(_QWORD *)&v1[v28] = 0;
      swift_release(v58);
      sub_1004CB7BC(v57, v56, &qword_1013F2140);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v56, 1, v79) == 1)
      {
        sub_1004CB800(v56, &qword_1013F2140);
        sub_100794ECC(0, v59 & 1);
        swift_release(v27);
      }
      else
      {
        v60 = v70;
        sub_1004B84E0(v56, (uint64_t)v70, type metadata accessor for CRLSyncActivity);
        sub_100794ECC(0, v59 & 1);
        v61 = (void *)static OS_os_log.dataSync;
        v62 = swift_initStackObject(v85, &v90);
        *(_OWORD *)(v62 + 16) = v83;
        v63 = v81;
        *(_QWORD *)(v62 + 56) = &type metadata for String;
        *(_QWORD *)(v62 + 64) = v63;
        *(_QWORD *)(v62 + 32) = v84;
        *(_QWORD *)(v62 + 40) = v82;
        v64 = v61;
        v66 = static os_log_type_t.default.getter(v65);
        sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v66, "<%{public}@> Scheduling new save activity", 41, 2, v62);
        swift_setDeallocating(v62);
        swift_arrayDestroy(v62 + 32, 1, v86);

        sub_1007950A4(v60);
        swift_release(v27);
        sub_1004B84A4((uint64_t)v60, type metadata accessor for CRLSyncActivity);
      }
      sub_1004CB800(v57, &qword_1013F2140);
    }
    else
    {
      v51 = (void *)static OS_os_log.dataSync;
      v52 = swift_initStackObject(v85, v91);
      *(_OWORD *)(v52 + 16) = v83;
      v53 = v81;
      *(_QWORD *)(v52 + 56) = &type metadata for String;
      *(_QWORD *)(v52 + 64) = v53;
      *(_QWORD *)(v52 + 32) = v84;
      *(_QWORD *)(v52 + 40) = v82;
      v54 = v51;
      v55 = static os_log_type_t.error.getter(v54);
      sub_100A06EBC((uint64_t)v54, &_mh_execute_header, v55, "<%{public}@> Attempting to mark save task finished but scheduler not found", 74, 2, v52);
      swift_setDeallocating(v52);
      swift_arrayDestroy(v52 + 32, 1, v86);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10079C6F0(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  Class isa;
  _QWORD v9[2];
  _BYTE v10[104];

  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD110 != -1)
    swift_once(&qword_1013DD110, sub_1007920EC);
  v5 = qword_10147F5C0;
  v6 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v6, v10);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v9[0] = 0xD00000000000001DLL;
  v9[1] = 0x8000000100FADF90;
  AnyHashable.init<A>(_:)(v9, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = sub_1004B804C(&qword_1013E0238);
  *(_QWORD *)(inited + 72) = a2;
  swift_bridgeObjectRetain(a2);
  sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "postNotificationName:object:userInfo:", v5, a1, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_10079C850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  void (*v29)(double *, uint64_t, uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  _BYTE v44[72];
  _BYTE v45[24];
  __int128 v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for CKSyncEngine.PendingDatabaseChange(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8, v10);
  v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    if (!((unint64_t)a1 >> 62))
    {
      v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  if (a1 < 0)
    v40 = a1;
  else
    v40 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v15 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease();
LABEL_4:
  v16 = _swiftEmptyArrayStorage;
  if (v15)
  {
    v48[0] = _swiftEmptyArrayStorage;
    sub_100600BBC(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
LABEL_30:
      swift_once(&qword_1013DD870, sub_100A059E0);
      goto LABEL_17;
    }
    v41 = v2;
    v17 = 0;
    v16 = (double *)v48[0];
    v43 = a1 & 0xC000000000000001;
    v42 = enum case for CKSyncEngine.PendingDatabaseChange.saveZone(_:);
    v18 = a1;
    do
    {
      if (v43)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, a1);
      else
        v19 = *(id *)(a1 + 8 * v17 + 32);
      v20 = v19;
      *v7 = objc_msgSend(objc_allocWithZone((Class)CKRecordZone), "initWithZoneID:", v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, v42, v4);

      v48[0] = v16;
      v22 = *((_QWORD *)v16 + 2);
      v21 = *((_QWORD *)v16 + 3);
      if (v22 >= v21 >> 1)
      {
        sub_100600BBC(v21 > 1, v22 + 1, 1);
        v16 = (double *)v48[0];
      }
      ++v17;
      *((_QWORD *)v16 + 2) = v22 + 1;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v5 + 32))((unint64_t)v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v22, v7, v4);
      a1 = v18;
    }
    while (v15 != v17);
    v2 = v41;
  }
  v23 = v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine, v45, 0, 0);
  sub_1004CB7BC(v23, (uint64_t)&v46, &qword_1013F20A0);
  if (v47)
  {
    sub_1004DB728(&v46, (uint64_t)v48);
    v24 = v49;
    v25 = v50;
    sub_1004BB5A4(v48, v49);
    v26 = CKSyncEngine.state.getter();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v25, v24, &unk_10111B01C, &unk_10111B02C);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v25, v24, AssociatedTypeWitness, &unk_10111B01C, &unk_10111B024);
    v29 = *(void (**)(double *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
    v30 = swift_checkMetadataState(0, AssociatedTypeWitness);
    v29(v16, v30, AssociatedConformanceWitness);
    swift_release(v26);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v48);
    return;
  }
  swift_bridgeObjectRelease();
  sub_1004CB800((uint64_t)&v46, &qword_1013F20A0);
  if (qword_1013DD870 != -1)
    goto LABEL_30;
LABEL_17:
  swift_beginAccess(&static OS_os_log.dataSync, v48, 0, 0);
  v31 = (void *)static OS_os_log.dataSync;
  v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v32, v44);
  v34 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v35 = 0x5320646572616853;
  else
    v35 = 0x2065746176697250;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v36 = 0xEC00000065706F63;
  else
    v36 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v34 + 32) = v35;
  *(_QWORD *)(v34 + 40) = v36;
  v37 = v31;
  v38 = static os_log_type_t.error.getter(v37);
  sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v38, "<%{public}@> SyncEngine not found while attempting to add zones to save", 71, 2, v34);
  swift_setDeallocating(v34);
  v39 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v34 + 32, 1, v39);

}

void sub_10079CD1C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t ChangesOptions;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, _QWORD);
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _BYTE *v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t Changes;
  char *v61;
  uint64_t v62;
  _QWORD v63[5];
  char v64[72];
  char v65[24];
  char v66[64];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Changes = type metadata accessor for CKSyncEngine.FetchChangesOptions.Scope(0);
  v59 = *(_QWORD *)(Changes - 8);
  __chkstk_darwin(Changes);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions(0);
  v62 = *(_QWORD *)(ChangesOptions - 8);
  v8 = *(_QWORD *)(v62 + 64);
  __chkstk_darwin(ChangesOptions);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v61 = (char *)&v56 - v11;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v13 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v12, v14);
  v18 = v17;
  v19 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v16 = (_QWORD *)0xED000065706F6353;
  v19 = 0x2065746176697250;
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler];
  if (v20)
  {
    v57 = ChangesOptions;
    v58 = v4;
    swift_retain(v20);
    v56 = v20;
    sub_100794100(1, 0);
    if (qword_1013DD870 == -1)
    {
LABEL_4:
      swift_beginAccess(&static OS_os_log.dataSync, v65, 0, 0);
      v21 = (void *)static OS_os_log.dataSync;
      v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v22, v64);
      v24 = inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v25 = 0x5320646572616853;
      else
        v25 = v19;
      if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v26 = 0xEC00000065706F63;
      else
        v26 = (unint64_t)v16;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(v24 + 32) = v25;
      *(_QWORD *)(v24 + 40) = v26;
      v27 = v21;
      v29 = static os_log_type_t.default.getter(v28);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "<%{public}@> [Fetch] Fetching all changes", 41, 2, v24);
      swift_setDeallocating(v24);
      v30 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v24 + 32, 1, v30);

      (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v6, enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), Changes);
      CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)(v6, 0);
      v31 = *sub_1004BB5A4(&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider], *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider + 24]);
      v32 = sub_1004B804C(&qword_1013F20E0);
      OS_dispatch_queue.sync<A>(execute:)(sub_1007B0FDC, v31, v32);
      CKSyncEngine.FetchChangesOptions.prioritizedZoneIDs.setter(v63[0]);
      v33 = v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_shouldFetchAssets];
      v34 = (void (*)(_QWORD *, _QWORD))CKSyncEngine.FetchChangesOptions.defaultZoneConfiguration.modify(v63);
      CKSyncEngine.FetchChangesOptions.ZoneConfiguration.shouldFetchAssetContents.setter(v33);
      v34(v63, 0);
      v35 = v62;
      v36 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      v37 = v61;
      v38 = v57;
      v36(v61, v9, v57);
      v39 = type metadata accessor for TaskPriority(0);
      v40 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v58, 1, 1, v39);
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v9, v37, v38);
      v41 = *(unsigned __int8 *)(v35 + 80);
      v42 = (v41 + 40) & ~v41;
      v43 = (char *)swift_allocObject(&unk_10127DD70, v42 + v8, v41 | 7);
      *((_QWORD *)v43 + 2) = 0;
      *((_QWORD *)v43 + 3) = 0;
      *((_QWORD *)v43 + 4) = v1;
      v36(&v43[v42], v9, v38);
      v44 = v1;
      v45 = sub_100521B98(v40, (uint64_t)&unk_1013F2150, (uint64_t)v43);
      swift_release(v56);
      v46 = swift_release(v45);
      (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v37, v38, v46);
      return;
    }
LABEL_18:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_4;
  }
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v63, 0, 0);
  v47 = (void *)static OS_os_log.dataSync;
  v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v49 = swift_initStackObject(v48, v66);
  v50 = v49;
  *(_OWORD *)(v49 + 16) = xmmword_100EF5E40;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
  {
    v19 = 0x5320646572616853;
    v51 = 0xEC00000065706F63;
  }
  else
  {
    v51 = 0xED000065706F6353;
  }
  *(_QWORD *)(v49 + 56) = &type metadata for String;
  *(_QWORD *)(v49 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v50 + 32) = v19;
  *(_QWORD *)(v50 + 40) = v51;
  v52 = v47;
  v54 = static os_log_type_t.default.getter(v53);
  sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v54, "<%{public}@> Scheduler not found while attempting to fetch changes", 66, 2, v50);
  swift_setDeallocating(v50);
  v55 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v50 + 32, 1, v55);

}

void sub_10079D308(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  double v14;
  uint64_t Strong;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  __n128 v20;
  id v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    v10 = objc_msgSend(a1, "recordID");
    v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords, v24, 0, 0);
    v12 = *v11;
    swift_bridgeObjectRetain(*v11);
    v13 = sub_100618794(v10, v12);

    *(_QWORD *)&v14 = swift_bridgeObjectRelease().n128_u64[0];
    if (v13)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
      if (Strong)
      {
        v16 = Strong;
        v17 = sub_100B4B268(v13, a1);
        v18 = objc_msgSend(a1, "recordID");
        swift_beginAccess(v11, v23, 33, 0);
        v19 = v17;
        sub_100897778((uint64_t)v19, v18, v20);
        swift_endAccess(v23);
        swift_unknownObjectRelease(v16);

LABEL_7:
        return;
      }

    }
    v18 = objc_msgSend(a1, "recordID", v14);
    swift_beginAccess(v11, v23, 33, 0);
    v21 = a1;
    sub_100897778((uint64_t)v21, v18, v22);
    swift_endAccess(v23);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_10079D50C(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  Swift::Int *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  Swift::Int v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  _BYTE v24[24];
  Swift::Int v25;

  v7 = (Swift::Int *)type metadata accessor for DispatchPredicate(0);
  v8 = *(v7 - 1);
  v9 = __chkstk_darwin(v7);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, Swift::Int *, __n128))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7, v9);
  v13 = v12;
  v14 = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, Swift::Int *))(v8 + 8))(v11, v7);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v7 = (Swift::Int *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs, v24, 33, 0);
  swift_bridgeObjectRetain(a3);
  a1 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
  v25 = *v7;
  v16 = v25;
  *v7 = 0x8000000000000000;
  v11 = (_QWORD *)sub_100842E98(a2, a3);
  v18 = *(_QWORD *)(v16 + 16);
  v19 = (v17 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v17;
  if (*(_QWORD *)(v16 + 24) >= v20)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_7;
LABEL_12:
    sub_1008317B8();
    v16 = v25;
    goto LABEL_7;
  }
  sub_10081EF00(v20, isUniquelyReferenced_nonNull_native);
  v16 = v25;
  v21 = sub_100842E98(a2, a3);
  if ((v14 & 1) != (v22 & 1))
  {
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }
  v11 = (_QWORD *)v21;
LABEL_7:
  *v7 = v16;
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    sub_10082B604((unint64_t)v11, a2, a3, (uint64_t)&_swiftEmptySetSingleton, (_QWORD *)*v7);
    swift_bridgeObjectRetain(a3);
  }
  sub_100ADA74C(&v25, a1);
  v23 = (void *)v25;
  swift_endAccess(v24);
  swift_bridgeObjectRelease();

}

void sub_10079D71C(void *a1)
{
  sub_10079D734(a1, &OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs);
}

void sub_10079D728(void *a1)
{
  sub_10079D734(a1, &OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset);
}

void sub_10079D734(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE v13[24];
  Swift::Int v14;

  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5, v7);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess(v2 + *a2, v13, 33, 0);
    sub_100ADA730(&v14, a1);
    v12 = (void *)v14;
    swift_endAccess(v13);

  }
  else
  {
    __break(1u);
  }
}

void sub_10079D83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[72];
  _BYTE v26[24];

  v1 = sub_1004B804C(&qword_1013F2140);
  __chkstk_darwin(v1);
  v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for CRLSyncActivity(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (v11)
  {
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler));
    sub_100794878(1, (uint64_t)v10);
    v12 = type metadata accessor for CRLThrottleInfo(0);
    v13 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12) == 1;
    sub_100794ECC(1, v13);
    sub_100795254(1, 0, (uint64_t)v3);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      swift_release(v11);
      sub_1004CB800((uint64_t)v10, &qword_1013F1EF0);
      v14 = &qword_1013F2140;
      v15 = (uint64_t)v3;
    }
    else
    {
      sub_1004B84E0((uint64_t)v3, (uint64_t)v7, type metadata accessor for CRLSyncActivity);
      sub_1007950A4(v7);
      swift_release(v11);
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLSyncActivity);
      v14 = &qword_1013F1EF0;
      v15 = (uint64_t)v10;
    }
    sub_1004CB800(v15, v14);
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v26, 0, 0);
    v16 = (void *)static OS_os_log.dataSync;
    v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v17, v25);
    v19 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v20 = 0x5320646572616853;
    else
      v20 = 0x2065746176697250;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v21 = 0xEC00000065706F63;
    else
      v21 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v21;
    v22 = v16;
    v23 = static os_log_type_t.error.getter(v22);
    sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v23, "<%{public}@> Attempting to handle end fetching changes from CloudKit but scheduler not found", 92, 2, v19);
    swift_setDeallocating(v19);
    v24 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v19 + 32, 1, v24);

  }
}

double sub_10079DB50()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  double result;
  char *v37;
  char v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  char v42[72];
  _BYTE v43[32];

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *(_QWORD *)v6 = v7;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2, v4);
  v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_5;
  }
  v9 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource]);
  v1 = &_swiftEmptySetSingleton;
  if (Strong)
  {
    v11 = Strong;
    v12 = *((_QWORD *)v9 + 1);
    v13 = (_QWORD *)swift_allocObject(&unk_10127DD48, 40, 7);
    v13[2] = v0;
    v13[3] = v11;
    v13[4] = v12;
    v14 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords];
    v37 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords], v43, 1, 0);
    v15 = *v14;
    v16 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs], v41, 1, 0);
    v17 = *v16;
    v18 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs], v40, 1, 0);
    v19 = *v18;
    v20 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset], v39, 1, 0);
    v21 = *v20;
    v22 = v0;
    swift_unknownObjectRetain(v11);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v21);
    sub_10079E2A4(v15, v17, v19, v21, 0, sub_1007B1B74, (uint64_t)v13);
    swift_unknownObjectRelease(v11);
    swift_release(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v16 = (uint64_t)_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    *v18 = (uint64_t)&_swiftEmptySetSingleton;
    v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    *(_QWORD *)v37 = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (qword_1013DD870 != -1)
    goto LABEL_14;
LABEL_5:
  swift_beginAccess(&static OS_os_log.dataSync, v43, 0, 0);
  v23 = (void *)static OS_os_log.dataSync;
  v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v24, v42);
  v26 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v27 = 0x5320646572616853;
  else
    v27 = 0x2065746176697250;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v28 = 0xEC00000065706F63;
  else
    v28 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 40) = v28;
  v29 = v23;
  v31 = static os_log_type_t.default.getter(v30);
  sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v31, "<%{public}@> Cannot process fetched records since the data source is nil", 72, 2, v26);
  swift_setDeallocating(v26);
  v32 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v26 + 32, 1, v32);

  v33 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs], v41, 1, 0);
  *(_QWORD *)v33 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v34 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs], v40, 1, 0);
  *(_QWORD *)v34 = v1;
  swift_bridgeObjectRelease();
  v35 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords], v39, 1, 0);
  *(_QWORD *)v35 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset], v38, 1, 0);
LABEL_12:
  *v20 = (uint64_t)v1;
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10079DFBC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[72];
  _BYTE v22[72];
  _BYTE v23[24];
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];

  v2 = 0xED000065706F6353;
  v3 = 0x5320646572616853;
  v4 = a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata, v23, 0, 0);
  sub_1004CB7BC(v4, (uint64_t)&v24, &qword_1013F2098);
  if (v25)
  {
    sub_1004DB728(&v24, (uint64_t)v26);
    sub_1008F61E0(v26);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v24, 0, 0);
    v5 = (void *)static OS_os_log.dataSync;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v6, v21);
    v8 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v2 = 0xEC00000065706F63;
    else
      v3 = 0x2065746176697250;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v2;
    v9 = v5;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "<%{public}@> Persisting sync metadata after sync is finished", 60, 2, v8);
    swift_setDeallocating(v8);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v8 + 32, 1, v12);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
  }
  else
  {
    sub_1004CB800((uint64_t)&v24, &qword_1013F2098);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v26, 0, 0);
    v13 = (void *)static OS_os_log.dataSync;
    v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v15 = swift_initStackObject(v14, v22);
    v16 = v15;
    *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v2 = 0xEC00000065706F63;
    else
      v3 = 0x2065746176697250;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v16 + 32) = v3;
    *(_QWORD *)(v16 + 40) = v2;
    v17 = v13;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "<%{public}@> No metadata to persist after sync is finished", 58, 2, v16);
    swift_setDeallocating(v16);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v16 + 32, 1, v20);

  }
}

void sub_10079E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t inited;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  __n128 v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  id v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  int64_t v104;
  unint64_t v105;
  unint64_t i;
  unint64_t v108;
  int64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  unint64_t v123;
  id v124;
  __n128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  __n128 v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  void *v144;
  uint64_t v145;
  id v146;
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  unint64_t v154;
  id v155;
  __n128 v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  _QWORD v160[2];
  void (*v161)(void);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  char v186[72];
  char v187[72];
  _BYTE v188[32];

  v161 = a6;
  v162 = a4;
  v174 = a5;
  v163 = a3;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (_QWORD *)((char *)v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11, v13);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) == 0)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v160[1] = a7;
  Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource);
  if (!Strong)
  {
LABEL_25:
    if (qword_1013DD870 == -1)
    {
LABEL_26:
      swift_beginAccess(&static OS_os_log.dataSync, v188, 0, 0);
      v52 = (void *)static OS_os_log.dataSync;
      v53 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v53, v187);
      v55 = inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      if (*(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v56 = 0x5320646572616853;
      else
        v56 = 0x2065746176697250;
      if (*(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v57 = 0xEC00000065706F63;
      else
        v57 = 0xED000065706F6353;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(v55 + 32) = v56;
      *(_QWORD *)(v55 + 40) = v57;
      v58 = v52;
      v60 = static os_log_type_t.default.getter(v59);
      sub_100A06EBC((uint64_t)v58, &_mh_execute_header, v60, "<%{public}@> Cannot process fetched records since the data source or sync logic provider is nil", 95, 2, v55);
      swift_setDeallocating(v55);
      v61 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v55 + 32, 1, v61);

      return;
    }
LABEL_95:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_26;
  }
  v19 = Strong;
  v20 = v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider;
  v21 = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
  if (!v21)
  {
    swift_unknownObjectRelease(v19);
    goto LABEL_25;
  }
  v172 = v21;
  v22 = *(_QWORD *)(v20 + 8);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v188, 0, 0);
  v23 = (void *)static OS_os_log.dataSync;
  v166 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v24 = swift_initStackObject(v166, v186);
  v25 = (_QWORD *)v24;
  v167 = xmmword_100EF5E40;
  *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v26 = 0x5320646572616853;
  else
    v26 = 0x2065746176697250;
  if (*(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v27 = 0xEC00000065706F63;
  else
    v27 = 0xED000065706F6353;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v168 = sub_1004CFC2C();
  v169 = v27;
  v25[8] = v168;
  v164 = v26;
  v25[4] = v26;
  v25[5] = v27;
  v28 = v23;
  v30 = static os_log_type_t.default.getter(v29);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "<%{public}@> Processing fetched remote records", 46, 2, (uint64_t)v25);
  swift_setDeallocating(v25);
  v165 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v25 + 4, 1, v165);

  v185 = _swiftEmptyDictionarySingleton;
  __chkstk_darwin(v31);
  v32 = v172;
  v160[-2] = v172;
  v160[-1] = v22;
  v170 = v22;
  __chkstk_darwin(v33);
  v160[-2] = &v185;
  v35 = sub_100A66E54(a1, (void (*)(_QWORD **__return_ptr, id *, __n128))sub_1007B1AE8, v34, (void (*)(_QWORD **__return_ptr, _QWORD *))sub_1007B1B10, (uint64_t)&v160[-4], (void (*)(uint64_t **__return_ptr, _QWORD *, __n128))sub_10079F488, 0);
  v173 = v35;
  if ((unint64_t)v35 >> 62)
  {
    if (v35 >= 0)
      v35 &= 0xFFFFFFFFFFFFFF8uLL;
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  }
  else
  {
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v37 = v164;
  v38 = v169;
  if (!v36 && !*(_QWORD *)(a2 + 16))
  {
    if ((v163 & 0xC000000000000001) != 0)
    {
      if (v163 < 0)
        v120 = v163;
      else
        v120 = v163 & 0xFFFFFFFFFFFFFF8;
      if (__CocoaSet.count.getter(v120))
        goto LABEL_16;
    }
    else if (*(_QWORD *)(v163 + 16))
    {
      goto LABEL_16;
    }
    if ((v162 & 0xC000000000000001) != 0)
    {
      if (v162 < 0)
        v150 = v162;
      else
        v150 = v162 & 0xFFFFFFFFFFFFFF8;
      v151 = __CocoaSet.count.getter(v150);
    }
    else
    {
      v151 = *(_QWORD *)(v162 + 16);
    }
    if (!v151)
    {
      swift_bridgeObjectRelease();
      v152 = (void *)static OS_os_log.dataSync;
      v153 = swift_initStackObject(v166, &v176);
      *(_OWORD *)(v153 + 16) = v167;
      v154 = v168;
      *(_QWORD *)(v153 + 56) = &type metadata for String;
      *(_QWORD *)(v153 + 64) = v154;
      *(_QWORD *)(v153 + 32) = v37;
      *(_QWORD *)(v153 + 40) = v38;
      v155 = v152;
      v157 = static os_log_type_t.default.getter(v156);
      sub_100A06EBC((uint64_t)v155, &_mh_execute_header, v157, "<%{public}@> Sync is finished. No new record was received. Nothing to do", 72, 2, v153);
      swift_setDeallocating(v153);
      swift_arrayDestroy(v153 + 32, 1, v165);

      if (v161)
        v161();
      v158 = v185;
      swift_bridgeObjectRetain(v185);
      sub_1008F729C(v159, v174);
      swift_unknownObjectRelease(v19);
      swift_bridgeObjectRelease_n(v158, 2);
      swift_unknownObjectRelease(v32);
      return;
    }
  }
LABEL_16:
  v171 = a2;
  v175 = v19;
  v39 = (void *)static OS_os_log.dataSync;
  v40 = swift_initStackObject(v166, &v184);
  *(_OWORD *)(v40 + 16) = v167;
  v41 = v168;
  *(_QWORD *)(v40 + 56) = &type metadata for String;
  *(_QWORD *)(v40 + 64) = v41;
  *(_QWORD *)(v40 + 32) = v37;
  *(_QWORD *)(v40 + 40) = v38;
  v42 = v39;
  v44 = static os_log_type_t.default.getter(v43);
  sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v44, "<%{public}@> Merging fetched remote records", 43, 2, v40);
  swift_setDeallocating(v40);
  swift_arrayDestroy(v40 + 32, 1, v165);

  if (v36)
  {
    v45 = v173;
    v46 = v173 & 0xC000000000000001;
    v47 = 4;
    while (1)
    {
      v7 = v47 - 4;
      if (v46)
      {
        v48 = specialized _ArrayBuffer._getElementSlowPath(_:)(v47 - 4, v45);
        v49 = v48;
      }
      else
      {
        v49 = *(_QWORD *)(v45 + 8 * v47);
        swift_retain(v49);
      }
      v50 = v47 - 3;
      if (__OFADD__(v7, 1))
        break;
      __chkstk_darwin(v48);
      v160[-4] = v51;
      v160[-3] = v49;
      LOBYTE(v160[-2]) = v174;
      OS_dispatch_queue.sync<A>(execute:)(sub_1007B1B18, &v160[-6], (char *)&type metadata for () + 8);
      swift_release(v49);
      ++v47;
      v45 = v173;
      if (v50 == v36)
        goto LABEL_33;
    }
    __break(1u);
    goto LABEL_93;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  v62 = (void *)static OS_os_log.dataSync;
  v63 = swift_initStackObject(v166, &v183);
  *(_OWORD *)(v63 + 16) = v167;
  v64 = v168;
  *(_QWORD *)(v63 + 56) = &type metadata for String;
  *(_QWORD *)(v63 + 64) = v64;
  *(_QWORD *)(v63 + 32) = v164;
  *(_QWORD *)(v63 + 40) = v169;
  v65 = v62;
  v67 = static os_log_type_t.default.getter(v66);
  sub_100A06EBC((uint64_t)v65, &_mh_execute_header, v67, "<%{public}@> Finished merging fetched remote records. Clearing local cache", 74, 2, v63);
  swift_setDeallocating(v63);
  v68 = v165;
  swift_arrayDestroy(v63 + 32, 1, v165);

  if ((v163 & 0xC000000000000001) != 0)
  {
    if (v163 < 0)
      v69 = v163;
    else
      v69 = v163 & 0xFFFFFFFFFFFFFF8;
    v70 = __CocoaSet.count.getter(v69);
  }
  else
  {
    v70 = *(_QWORD *)(v163 + 16);
  }
  v71 = v175;
  v73 = v168;
  v72 = v169;
  if (v70)
  {
    v74 = (void *)static OS_os_log.dataSync;
    v75 = swift_initStackObject(v166, &v182);
    *(_OWORD *)(v75 + 16) = v167;
    *(_QWORD *)(v75 + 56) = &type metadata for String;
    *(_QWORD *)(v75 + 64) = v73;
    v76 = v164;
    *(_QWORD *)(v75 + 32) = v164;
    *(_QWORD *)(v75 + 40) = v72;
    v77 = v74;
    v79 = static os_log_type_t.default.getter(v78);
    sub_100A06EBC((uint64_t)v77, &_mh_execute_header, v79, "<%{public}@> Purging zones", 26, 2, v75);
    swift_setDeallocating(v75);
    swift_arrayDestroy(v75 + 32, 1, v165);

    v80 = v169;
    v81 = v172;
    swift_unknownObjectRetain(v172);
    sub_1007AE9E8(v163);
    v83 = v82;
    swift_unknownObjectRelease(v81);
    __chkstk_darwin(v84);
    v160[-2] = v85;
    v160[-1] = v83;
    OS_dispatch_queue.sync<A>(execute:)(sub_1007B1B34, &v160[-4], (char *)&type metadata for () + 8);
    v86 = v168;
    swift_bridgeObjectRelease();
    v87 = (void *)static OS_os_log.dataSync;
    v88 = swift_initStackObject(v166, &v181);
    *(_OWORD *)(v88 + 16) = v167;
    *(_QWORD *)(v88 + 56) = &type metadata for String;
    *(_QWORD *)(v88 + 64) = v86;
    *(_QWORD *)(v88 + 32) = v76;
    *(_QWORD *)(v88 + 40) = v80;
    v89 = v87;
    v91 = static os_log_type_t.default.getter(v90);
    sub_100A06EBC((uint64_t)v89, &_mh_execute_header, v91, "<%{public}@> Finished purging zones", 35, 2, v88);
    swift_setDeallocating(v88);
    v68 = v165;
    swift_arrayDestroy(v88 + 32, 1, v165);

  }
  v92 = v171;
  if (!*(_QWORD *)(v171 + 16))
  {
LABEL_70:
    if ((v162 & 0xC000000000000001) != 0)
    {
      if (v162 < 0)
        v127 = v162;
      else
        v127 = v162 & 0xFFFFFFFFFFFFFF8;
      v128 = __CocoaSet.count.getter(v127);
      v130 = v168;
      v129 = v169;
      if (!v128)
        goto LABEL_78;
    }
    else
    {
      v130 = v168;
      v129 = v169;
      if (!*(_QWORD *)(v162 + 16))
      {
LABEL_78:
        if (v161)
          v161();
        swift_bridgeObjectRetain(v185);
        sub_1008F729C(v149, v174);
        swift_unknownObjectRelease(v71);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease(v172);
        swift_bridgeObjectRelease();
        return;
      }
    }
    v131 = (void *)static OS_os_log.dataSync;
    v132 = swift_initStackObject(v166, &v178);
    *(_OWORD *)(v132 + 16) = v167;
    *(_QWORD *)(v132 + 56) = &type metadata for String;
    *(_QWORD *)(v132 + 64) = v130;
    v133 = v164;
    *(_QWORD *)(v132 + 32) = v164;
    *(_QWORD *)(v132 + 40) = v129;
    v134 = v131;
    v136 = static os_log_type_t.default.getter(v135);
    sub_100A06EBC((uint64_t)v134, &_mh_execute_header, v136, "<%{public}@> Resetting sync state for zones due to encryption data reset", 72, 2, v132);
    swift_setDeallocating(v132);
    swift_arrayDestroy(v132 + 32, 1, v165);

    v137 = v169;
    v138 = v172;
    swift_unknownObjectRetain(v172);
    sub_1007AE9E8(v162);
    v140 = v139;
    swift_unknownObjectRelease(v138);
    __chkstk_darwin(v141);
    v160[-2] = v142;
    v160[-1] = v140;
    OS_dispatch_queue.sync<A>(execute:)(sub_1007B1B4C, &v160[-4], (char *)&type metadata for () + 8);
    v143 = v168;
    swift_bridgeObjectRelease();
    v144 = (void *)static OS_os_log.dataSync;
    v145 = swift_initStackObject(v166, &v177);
    *(_OWORD *)(v145 + 16) = v167;
    *(_QWORD *)(v145 + 56) = &type metadata for String;
    *(_QWORD *)(v145 + 64) = v143;
    *(_QWORD *)(v145 + 32) = v133;
    *(_QWORD *)(v145 + 40) = v137;
    v146 = v144;
    v148 = static os_log_type_t.default.getter(v147);
    sub_100A06EBC((uint64_t)v146, &_mh_execute_header, v148, "<%{public}@> Finished resetting sync state for zones due to encryption data reset", 81, 2, v145);
    swift_setDeallocating(v145);
    swift_arrayDestroy(v145 + 32, 1, v165);

    goto LABEL_78;
  }
  v93 = (void *)static OS_os_log.dataSync;
  v94 = swift_initStackObject(v166, &v180);
  *(_OWORD *)(v94 + 16) = v167;
  v95 = v168;
  *(_QWORD *)(v94 + 56) = &type metadata for String;
  *(_QWORD *)(v94 + 64) = v95;
  *(_QWORD *)(v94 + 32) = v164;
  v96 = v94 + 32;
  *(_QWORD *)(v94 + 40) = v169;
  v97 = v93;
  v99 = static os_log_type_t.default.getter(v98);
  sub_100A06EBC((uint64_t)v97, &_mh_execute_header, v99, "<%{public}@> Purging remote records", 35, 2, v94);
  swift_setDeallocating(v94);
  v7 = 1;
  swift_arrayDestroy(v96, 1, v68);

  v100 = *(_QWORD *)(v92 + 64);
  v163 = v92 + 64;
  v101 = 1 << *(_BYTE *)(v92 + 32);
  v102 = -1;
  if (v101 < 64)
    v102 = ~(-1 << v101);
  v103 = v102 & v100;
  v173 = (unint64_t)(v101 + 63) >> 6;
  swift_bridgeObjectRetain(v92);
  v104 = 0;
  if (!v103)
    goto LABEL_46;
LABEL_45:
  v105 = __clz(__rbit64(v103));
  v103 &= v103 - 1;
  for (i = v105 | (v104 << 6); ; i = __clz(__rbit64(v108)) + (v104 << 6))
  {
    v110 = (uint64_t *)(*(_QWORD *)(v92 + 48) + 16 * i);
    v111 = *v110;
    v112 = v110[1];
    v113 = *(_QWORD *)(*(_QWORD *)(v92 + 56) + 8 * i);
    v114 = v172;
    swift_unknownObjectRetain(v172);
    swift_bridgeObjectRetain(v112);
    swift_bridgeObjectRetain(v113);
    sub_1007AF464(v115, v114, v170, v111, v112);
    v117 = v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v114);
    v71 = v175;
    v7 = *(_QWORD *)(*(_QWORD *)(v175 + 16) + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
    __chkstk_darwin(v118);
    v160[-2] = v119;
    v160[-1] = v117;
    OS_dispatch_queue.sync<A>(execute:)(sub_1007B22B8, &v160[-4], (char *)&type metadata for () + 8);
    swift_bridgeObjectRelease();
    v92 = v171;
    if (v103)
      goto LABEL_45;
LABEL_46:
    if (__OFADD__(v104++, 1))
      goto LABEL_94;
    if (v104 >= v173)
    {
LABEL_69:
      swift_release(v92);
      v121 = (void *)static OS_os_log.dataSync;
      v122 = swift_initStackObject(v166, &v179);
      *(_OWORD *)(v122 + 16) = v167;
      v123 = v168;
      *(_QWORD *)(v122 + 56) = &type metadata for String;
      *(_QWORD *)(v122 + 64) = v123;
      *(_QWORD *)(v122 + 32) = v164;
      *(_QWORD *)(v122 + 40) = v169;
      v124 = v121;
      v126 = static os_log_type_t.default.getter(v125);
      sub_100A06EBC((uint64_t)v124, &_mh_execute_header, v126, "<%{public}@> Finished Purging remote records", 44, 2, v122);
      swift_setDeallocating(v122);
      swift_arrayDestroy(v122 + 32, 1, v165);

      goto LABEL_70;
    }
    v108 = *(_QWORD *)(v163 + 8 * v104);
    if (!v108)
      break;
LABEL_56:
    v103 = (v108 - 1) & v108;
  }
  v109 = v104 + 1;
  if (v104 + 1 >= v173)
    goto LABEL_69;
  v108 = *(_QWORD *)(v163 + 8 * v109);
  if (v108)
    goto LABEL_55;
  v109 = v104 + 2;
  if (v104 + 2 >= v173)
    goto LABEL_69;
  v108 = *(_QWORD *)(v163 + 8 * v109);
  if (v108)
    goto LABEL_55;
  v109 = v104 + 3;
  if (v104 + 3 >= v173)
    goto LABEL_69;
  v108 = *(_QWORD *)(v163 + 8 * v109);
  if (v108)
  {
LABEL_55:
    v104 = v109;
    goto LABEL_56;
  }
  while (1)
  {
    v104 = v109 + 1;
    if (__OFADD__(v109, 1))
      break;
    if (v104 >= v173)
      goto LABEL_69;
    v108 = *(_QWORD *)(v163 + 8 * v104);
    ++v109;
    if (v108)
      goto LABEL_56;
  }
  __break(1u);
}

uint64_t sub_10079F248@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  void *v29[2];
  uint64_t *v30;
  uint64_t v31;

  v29[1] = a2;
  v30 = a3;
  v4 = sub_1004B804C(&qword_1013F20C0);
  __chkstk_darwin(v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v29 - v8;
  v10 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013F20B0);
  __chkstk_darwin(v13);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v16 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  v31 = v17;
  v19 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)(v16 + 8) + 8))();
  v29[0] = objc_msgSend(v19, "zoneID");

  v20 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  v21 = (uint64_t)&v9[*(int *)(v4 + 48)];
  sub_1004C4938((uint64_t)v12, v21, &qword_1013E04F0);
  *v15 = 1;
  *(_DWORD *)(v15 + 1) = 0;
  v22 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_1004C4938(v21, v22, &qword_1013E04F0);
  v23 = type metadata accessor for CRLZoneSyncResultScenarios(0);
  v24 = &v15[*(int *)(v23 + 36)];
  *v24 = 0;
  sub_1004C4938(v22, (uint64_t)&v24[*(int *)(v4 + 48)], &qword_1013E04F0);
  *(_QWORD *)&v15[*(int *)(v23 + 40)] = _swiftEmptyArrayStorage;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 0, 1, v23);
  v25 = sub_10083E720((uint64_t)v15, v29[0]);
  v31 = v17;
  result = (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(v16 + 16) + 8))(ObjectType, v25);
  v27 = v30;
  *v30 = result;
  v27[1] = v28;
  return result;
}

uint64_t sub_10079F488@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  v3 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 16))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

double sub_10079F4D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  __n128 v26;
  void *v27;
  unint64_t v28;
  void *v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  __n128 v39;
  Swift::String v40;
  Swift::String v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double result;
  void *v54;
  uint64_t v55;
  uint64_t inited;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  __n128 v72;
  Swift::String v73;
  Swift::String v74;
  id v75;
  id v76;
  uint64_t v77;
  void *v78;
  void *v79;
  Swift::String v80;
  double v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  unint64_t v94;
  id v95;
  unint64_t v96;
  id v97;
  id v98;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  _BYTE v104[24];
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[72];
  _QWORD v110[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4, v6);
  v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
  if (!Strong)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v110, 0, 0);
    v54 = (void *)static OS_os_log.dataSync;
    v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v55, v109);
    v57 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v58 = 0x5320646572616853;
    else
      v58 = 0x2065746176697250;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v59 = 0xEC00000065706F63;
    else
      v59 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v57 + 32) = v58;
    *(_QWORD *)(v57 + 40) = v59;
    v60 = v54;
    v62 = static os_log_type_t.default.getter(v61);
    sub_100A06EBC((uint64_t)v60, &_mh_execute_header, v62, "<%{public}@> Could not handle a save result since sync logic provider is not set", 80, 2, v57);
    swift_setDeallocating(v57);
    v63 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v57 + 32, 1, v63);

    return result;
  }
  v12 = Strong;
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v13 || (v14 = *(_QWORD **)(v13 + 64)) == 0)
  {
    v102 = (id)Strong;
    if (qword_1013DD870 == -1)
    {
LABEL_11:
      swift_beginAccess(&static OS_os_log.dataSync, v110, 0, 0);
      v31 = (void *)static OS_os_log.dataSync;
      v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v33 = swift_initStackObject(v32, &v108);
      v34 = (_QWORD *)v33;
      *(_OWORD *)(v33 + 16) = xmmword_100EF5A10;
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v35 = 0x5320646572616853;
      else
        v35 = 0x2065746176697250;
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v36 = 0xEC00000065706F63;
      else
        v36 = 0xED000065706F6353;
      *(_QWORD *)(v33 + 56) = &type metadata for String;
      v37 = sub_1004CFC2C();
      v34[4] = v35;
      v34[8] = v37;
      v34[5] = v36;
      v105 = 0x203A65707954;
      v106 = 0xE600000000000000;
      v38 = v31;
      v40._countAndFlagsBits = CKRecord.recordType.getter(v39);
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      v41._countAndFlagsBits = 0x203A444920;
      v41._object = (void *)0xE500000000000000;
      String.append(_:)(v41);
      v42 = objc_msgSend(a1, "recordID");
      v43 = objc_msgSend(v42, "recordName");

      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v46 = v45;

      v47._countAndFlagsBits = v44;
      v47._object = v46;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      v48 = v105;
      v49 = v106;
      v34[12] = &type metadata for String;
      v34[13] = v37;
      v34[9] = v48;
      v34[10] = v49;
      v51 = static os_log_type_t.error.getter(v50);
      sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v51, "<%{public}@> There is no ongoing batch save in the save task. We can't process the save results of record %{public}@", 116, 2, (uint64_t)v34);
      swift_setDeallocating(v34);
      v52 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v34 + 4, 2, v52);
      swift_unknownObjectRelease(v102);

      return result;
    }
LABEL_43:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_11;
  }
  v15 = objc_msgSend(a1, "recordID", swift_retain(*(_QWORD *)(v13 + 64)).n128_f64[0]);
  v16 = *(_QWORD *)(v14[2] + 24);
  if (*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v14[2] + 24));
    v17 = v15;
    v18 = sub_100843848((uint64_t)v17);
    if ((v19 & 1) != 0)
    {
      v20 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v18);
      v21 = *v20;
      v22 = v20[1];
      swift_unknownObjectRetain(*v20);

      swift_bridgeObjectRelease();
      swift_beginAccess(v14 + 6, &v105, 0, 0);
      v23 = v14[6];
      v24 = v17;
      swift_bridgeObjectRetain(v23);
      v25 = sub_100618794(v24, v23);

      swift_bridgeObjectRelease();
      if (v25 && (sub_100B4C648(v26), v27))
      {
        v29 = v27;
        v30 = v28;
        v22 |= 0x4000000000000000uLL;
        swift_unknownObjectRetain(v21);
        a1 = 0;
      }
      else
      {
        v91 = objc_msgSend(a1, "recordChangeTag", swift_unknownObjectRetain(v21).n128_f64[0]);
        if (v91)
        {

          v92 = objc_msgSend(objc_allocWithZone((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
          objc_msgSend(a1, "encodeSystemFieldsWithCoder:", v92);
          v93 = objc_msgSend(v92, "encodedData");
          v102 = v24;
          v94 = v22;
          v95 = v93;
          v29 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v93);
          v30 = v96;

          v22 = v94;
          v24 = v102;
        }
        else
        {
          v29 = 0;
          v30 = 0xF000000000000000;
        }
        v97 = a1;
      }
      v110[0] = v21;
      v110[1] = v22;
      v110[2] = v29;
      v110[3] = v30;
      v110[4] = a1;
      swift_beginAccess(v14 + 8, v104, 33, 0);
      v98 = v24;
      sub_1007B0D28(v21, v22, v29, v30, a1);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14[8]);
      v103 = v14[8];
      v14[8] = 0x8000000000000000;
      sub_100828BDC((uint64_t)v110, v98, isUniquelyReferenced_nonNull_native);
      v14[8] = v103;

      swift_bridgeObjectRelease();
      swift_endAccess(v104);
      swift_unknownObjectRelease(v21);
      sub_1007B0C8C(v21, v22, v29, v30, a1);
      swift_release(v14);

      *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
      return result;
    }

    swift_bridgeObjectRelease();
  }
  v101 = v15;
  v102 = (id)v12;
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v110, 0, 0);
  v64 = (void *)static OS_os_log.dataSync;
  v65 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v66 = swift_initStackObject(v65, &v107);
  v67 = (_QWORD *)v66;
  *(_OWORD *)(v66 + 16) = xmmword_100EF5550;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v68 = 0x5320646572616853;
  else
    v68 = 0x2065746176697250;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v69 = 0xEC00000065706F63;
  else
    v69 = 0xED000065706F6353;
  *(_QWORD *)(v66 + 56) = &type metadata for String;
  v70 = sub_1004CFC2C();
  v67[4] = v68;
  v67[8] = v70;
  v67[5] = v69;
  v105 = 0x203A65707954;
  v106 = 0xE600000000000000;
  v71 = v64;
  v73._countAndFlagsBits = CKRecord.recordType.getter(v72);
  String.append(_:)(v73);
  swift_bridgeObjectRelease();
  v74._countAndFlagsBits = 0x203A444920;
  v74._object = (void *)0xE500000000000000;
  String.append(_:)(v74);
  v75 = objc_msgSend(a1, "recordID");
  v76 = objc_msgSend(v75, "recordName");

  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
  v79 = v78;

  v80._countAndFlagsBits = v77;
  v80._object = v79;
  String.append(_:)(v80);
  *(_QWORD *)&v81 = swift_bridgeObjectRelease().n128_u64[0];
  v82 = v105;
  v83 = v106;
  v67[12] = &type metadata for String;
  v67[13] = v70;
  v67[9] = v82;
  v67[10] = v83;
  v84 = objc_msgSend(*(id *)(v14[2] + 16), "zoneName", v81);
  v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
  v87 = v86;

  v67[17] = &type metadata for String;
  v67[18] = v70;
  v67[14] = v85;
  v67[15] = v87;
  v89 = static os_log_type_t.error.getter(v88);
  sub_100A06EBC((uint64_t)v71, &_mh_execute_header, v89, "<%{public}@> Did not find a local change record for record %{public}@ in batch with zone ID: %{public}@", 103, 2, (uint64_t)v67);
  swift_setDeallocating(v67);
  v90 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v67 + 4, 3, v90);
  swift_unknownObjectRelease(v102);
  swift_release(v14);

  return result;
}

void sub_10079FDD8(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _BYTE *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  __n128 v32;
  Swift::String v33;
  Swift::String v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  Swift::String v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  Swift::String v55;
  Swift::String v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  Swift::String v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  __n128 v86;
  Swift::String v87;
  _BYTE *v88;
  Swift::String v89;
  id v90;
  id v91;
  void *v92;
  uint64_t v93;
  void *v94;
  void *v95;
  Swift::String v96;
  __n128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  void *v111;
  __n128 v112;
  Swift::String v113;
  Swift::String v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void *v120;
  Swift::String v121;
  __n128 v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  __n128 v130;
  Swift::String v131;
  Swift::String v132;
  id v133;
  id v134;
  uint64_t v135;
  void *v136;
  void *v137;
  Swift::String v138;
  __n128 v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  id v143;
  void *v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  void *v155;
  __int128 v156;
  uint64_t v157;
  id v158;
  id v159;
  _BYTE *v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171[112];
  char v172[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (_QWORD *)((char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = v11;
  v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_58;
  }
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask];
  if (!v14 || (v15 = *(_QWORD *)(v14 + 64)) == 0)
  {
    v161 = a2;
    if (qword_1013DD870 == -1)
    {
LABEL_8:
      swift_beginAccess(&static OS_os_log.dataSync, v172, 0, 0);
      v23 = (void *)static OS_os_log.dataSync;
      v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v24, v171);
      v26 = (_QWORD *)inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v27 = 0x5320646572616853;
      else
        v27 = 0x2065746176697250;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v28 = 0xEC00000065706F63;
      else
        v28 = 0xED000065706F6353;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v29 = sub_1004CFC2C();
      v160 = v3;
      v30 = v29;
      v26[4] = v27;
      v26[8] = v29;
      v26[5] = v28;
      v169 = 0x203A65707954;
      v170 = 0xE600000000000000;
      v31 = v23;
      v33._countAndFlagsBits = CKRecord.recordType.getter(v32);
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34._countAndFlagsBits = 0x203A444920;
      v34._object = (void *)0xE500000000000000;
      String.append(_:)(v34);
      v35 = objc_msgSend(a1, "recordID");
      v36 = objc_msgSend(v35, "recordName");

      v37 = a1;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v40 = v39;

      v41._countAndFlagsBits = v38;
      a1 = v37;
      v41._object = v40;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      v42 = v169;
      v43 = v170;
      v26[12] = &type metadata for String;
      v26[13] = v30;
      v3 = v160;
      v26[9] = v42;
      v26[10] = v43;
      v45 = static os_log_type_t.error.getter(v44);
      sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v45, "<%{public}@> Failed to find the current batch to handle save failure for record %{public}@", 90, 2, (uint64_t)v26);
      swift_setDeallocating(v26);
      v46 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v26 + 4, 2, v46);

      goto LABEL_15;
    }
LABEL_58:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_8;
  }
  *(_QWORD *)v172 = a2;
  type metadata accessor for CKError(0);
  v17 = v16;
  v18 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  swift_retain(v15);
  _BridgedStoredNSError.code.getter(v17, v18);
  *((_QWORD *)&v19 + 1) = v168;
  *(_QWORD *)&v19 = v168 - 14;
  switch((unint64_t)(v19 >> 1))
  {
    case 0uLL:
      v20 = v3;
      v21 = (void *)related decl 'e' for CKErrorCode.serverRecord.getter(a2);
      if (v21)
      {
        v22 = v21;
        sub_1007AFF18(v15, v21);

        v3 = v20;
        goto LABEL_45;
      }
      v160 = a1;
      v161 = a2;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v172, 0, 0);
      v145 = (void *)static OS_os_log.dataSync;
      v146 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v147 = swift_initStackObject(v146, &v163);
      v148 = v147;
      *(_OWORD *)(v147 + 16) = xmmword_100EF5E40;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v149 = 0x5320646572616853;
      else
        v149 = 0x2065746176697250;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v150 = 0xEC00000065706F63;
      else
        v150 = 0xED000065706F6353;
      *(_QWORD *)(v147 + 56) = &type metadata for String;
      *(_QWORD *)(v147 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v148 + 32) = v149;
      *(_QWORD *)(v148 + 40) = v150;
      v151 = v145;
      v152 = static os_log_type_t.error.getter(v151);
      sub_100A06EBC((uint64_t)v151, &_mh_execute_header, v152, "<%{public}@> Could not merge conflict because serverRecord does not exist on the CKError. This is an internal CloudKit error", 124, 2, v148);
      swift_setDeallocating(v148);
      v153 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v148 + 32, 1, v153);

      v162 = 1;
      v154 = sub_1007AE6B0((uint64_t)_swiftEmptyArrayStorage);
      _BridgedStoredNSError.init(_:userInfo:)(&v169, &v162, v154, v17, v18);
      v155 = (void *)v169;
      a1 = v160;
      sub_1007A1560(v15, v160, (void *)v169);

      swift_release(v15);
      break;
    case 4uLL:
      v161 = a2;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v172, 0, 0);
      v79 = (void *)static OS_os_log.dataSync;
      v80 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v81 = swift_initStackObject(v80, &v164);
      v82 = (_QWORD *)v81;
      *(_OWORD *)(v81 + 16) = xmmword_100EF5A10;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v83 = 0x5320646572616853;
      else
        v83 = 0x2065746176697250;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
        v84 = 0xEC00000065706F63;
      else
        v84 = 0xED000065706F6353;
      *(_QWORD *)(v81 + 56) = &type metadata for String;
      v85 = sub_1004CFC2C();
      v82[4] = v83;
      v160 = v82 + 4;
      v82[8] = v85;
      v82[5] = v84;
      v169 = 0x203A65707954;
      v170 = 0xE600000000000000;
      v159 = v79;
      v87._countAndFlagsBits = CKRecord.recordType.getter(v86);
      v88 = v3;
      String.append(_:)(v87);
      swift_bridgeObjectRelease();
      v89._countAndFlagsBits = 0x203A444920;
      v89._object = (void *)0xE500000000000000;
      String.append(_:)(v89);
      v90 = objc_msgSend(a1, "recordID");
      v91 = objc_msgSend(v90, "recordName");

      v92 = a1;
      v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
      v95 = v94;

      v3 = v88;
      v96._countAndFlagsBits = v93;
      a1 = v92;
      v96._object = v95;
      String.append(_:)(v96);
      v97 = swift_bridgeObjectRelease();
      v98 = v169;
      v99 = v170;
      v82[12] = &type metadata for String;
      v82[13] = v85;
      v82[9] = v98;
      v82[10] = v99;
      v100 = static os_log_type_t.default.getter(v97);
      v101 = v159;
      sub_100A06EBC((uint64_t)v159, &_mh_execute_header, v100, "<%{public}@> Failed to save a record due to atomic batch save failure. Record %{public}@", 88, 2, (uint64_t)v82);
      swift_release(v15);
      swift_setDeallocating(v82);
      v102 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v160, 2, v102);

      break;
    case 6uLL:
      v161 = a2;
      v103 = a1;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      v104 = 0x5320646572616853;
      swift_beginAccess(&static OS_os_log.dataSync, v172, 0, 0);
      v105 = (void *)static OS_os_log.dataSync;
      v157 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v106 = swift_initStackObject(v157, &v166);
      v107 = (_QWORD *)v106;
      v156 = xmmword_100EF5A10;
      *(_OWORD *)(v106 + 16) = xmmword_100EF5A10;
      LODWORD(v159) = v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope];
      if ((_DWORD)v159)
      {
        v108 = 0xEC00000065706F63;
      }
      else
      {
        v104 = 0x2065746176697250;
        v108 = 0xED000065706F6353;
      }
      *(_QWORD *)(v106 + 56) = &type metadata for String;
      v109 = sub_1004CFC2C();
      v107[8] = v109;
      v107[4] = v104;
      v110 = v107 + 4;
      v107[5] = v108;
      v169 = 0x203A65707954;
      v170 = 0xE600000000000000;
      v158 = v105;
      v111 = v103;
      v113._countAndFlagsBits = CKRecord.recordType.getter(v112);
      String.append(_:)(v113);
      swift_bridgeObjectRelease();
      v114._countAndFlagsBits = 0x203A444920;
      v114._object = (void *)0xE500000000000000;
      String.append(_:)(v114);
      v115 = objc_msgSend(v103, "recordID");
      v116 = objc_msgSend(v115, "recordName");

      v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
      v160 = v3;
      v118 = v117;
      v120 = v119;

      v121._countAndFlagsBits = v118;
      v121._object = v120;
      String.append(_:)(v121);
      v122 = swift_bridgeObjectRelease();
      v123 = v169;
      v124 = v170;
      v107[12] = &type metadata for String;
      v107[13] = v109;
      v107[9] = v123;
      v107[10] = v124;
      v125 = static os_log_type_t.default.getter(v122);
      v126 = v158;
      sub_100A06EBC((uint64_t)v158, &_mh_execute_header, v125, "<%{public}@> Failed to save a record due to zone not found for record %{public}@", 80, 2, (uint64_t)v107);
      swift_setDeallocating(v107);
      v127 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v110, 2, v127);

      if ((_DWORD)v159)
      {
        v128 = (void *)static OS_os_log.dataSync;
        v129 = swift_initStackObject(v157, &v165);
        *(_OWORD *)(v129 + 16) = v156;
        *(_QWORD *)(v129 + 56) = &type metadata for String;
        *(_QWORD *)(v129 + 64) = v109;
        *(_QWORD *)(v129 + 32) = 0x5320646572616853;
        v159 = (id)(v129 + 32);
        *(_QWORD *)(v129 + 40) = 0xEC00000065706F63;
        v169 = 0x203A65707954;
        v170 = 0xE600000000000000;
        v158 = v128;
        v131._countAndFlagsBits = CKRecord.recordType.getter(v130);
        String.append(_:)(v131);
        swift_bridgeObjectRelease();
        v132._countAndFlagsBits = 0x203A444920;
        v132._object = (void *)0xE500000000000000;
        String.append(_:)(v132);
        v133 = objc_msgSend(v111, "recordID");
        v134 = objc_msgSend(v133, "recordName");

        v135 = static String._unconditionallyBridgeFromObjectiveC(_:)(v134);
        v137 = v136;

        v138._countAndFlagsBits = v135;
        v138._object = v137;
        String.append(_:)(v138);
        v139 = swift_bridgeObjectRelease();
        v140 = v169;
        v141 = v170;
        *(_QWORD *)(v129 + 96) = &type metadata for String;
        *(_QWORD *)(v129 + 104) = v109;
        *(_QWORD *)(v129 + 72) = v140;
        *(_QWORD *)(v129 + 80) = v141;
        v142 = static os_log_type_t.default.getter(v139);
        v143 = v158;
        sub_100A06EBC((uint64_t)v158, &_mh_execute_header, v142, "<%{public}@> Marking zoneNotFound failure as unrecoverable for shared record %{public}@", 87, 2, v129);
        swift_setDeallocating(v129);
        swift_arrayDestroy(v159, 2, v127);

        v3 = v160;
        v144 = v161;
        sub_1007A19A4(v15, v111, v161);
        swift_release(v15);
        a1 = v111;
        a2 = v144;
        goto LABEL_16;
      }
      v3 = v160;
      sub_1007B09B4(v15);
      swift_release(v15);
      a1 = v111;
      break;
    case 7uLL:
      sub_1007A0F0C(v15, a1, a2);
      goto LABEL_45;
    default:
      v169 = (uint64_t)a2;
      _BridgedStoredNSError.code.getter(v17, v18);
      if (*(_QWORD *)v172 <= 0x24uLL && ((1 << v172[0]) & 0x1000A002D8) != 0)
      {
        v157 = v15;
        v161 = a2;
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v172, 0, 0);
        v47 = (void *)static OS_os_log.dataSync;
        v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v49 = swift_initStackObject(v48, &v167);
        v50 = (_QWORD *)v49;
        *(_OWORD *)(v49 + 16) = xmmword_100EF5E30;
        if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
          v51 = 0x5320646572616853;
        else
          v51 = 0x2065746176697250;
        if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
          v52 = 0xEC00000065706F63;
        else
          v52 = 0xED000065706F6353;
        *(_QWORD *)(v49 + 56) = &type metadata for String;
        v53 = sub_1004CFC2C();
        v50[4] = v51;
        v159 = v50 + 4;
        v50[8] = v53;
        v50[5] = v52;
        v169 = 0x203A65707954;
        v170 = 0xE600000000000000;
        v158 = v47;
        v55._countAndFlagsBits = CKRecord.recordType.getter(v54);
        String.append(_:)(v55);
        swift_bridgeObjectRelease();
        v56._countAndFlagsBits = 0x203A444920;
        v56._object = (void *)0xE500000000000000;
        String.append(_:)(v56);
        v57 = objc_msgSend(a1, "recordID");
        v58 = objc_msgSend(v57, "recordName");

        v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
        v160 = v3;
        v60 = v59;
        v61 = a1;
        v63 = v62;

        v64._countAndFlagsBits = v60;
        v64._object = v63;
        String.append(_:)(v64);
        a1 = v61;
        swift_bridgeObjectRelease();
        v65 = v169;
        v66 = v170;
        v50[12] = &type metadata for String;
        v50[13] = v53;
        v50[9] = v65;
        v50[10] = v66;
        a2 = v161;
        v67 = v161;
        v68 = sub_10089EABC(v67);
        v70 = v69;

        v50[17] = &type metadata for String;
        v50[18] = v53;
        v50[14] = v68;
        v50[15] = v70;
        v3 = v160;
        v169 = (uint64_t)v67;
        v71 = v67;
        v72 = String.init<A>(reflecting:)(&v169, v17);
        v50[22] = &type metadata for String;
        v50[23] = v53;
        v50[19] = v72;
        v50[20] = v73;
        v75 = static os_log_type_t.default.getter(v74);
        v76 = v158;
        sub_100A06EBC((uint64_t)v158, &_mh_execute_header, v75, "<%{public}@> Failed to save record due to a retriable error. Record %{public}@ Error: %{public}@ <%@>", 101, 2, (uint64_t)v50);
        swift_setDeallocating(v50);
        v77 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v159, 4, v77);

        v78 = v157;
        sub_1007A1560(v157, a1, v71);
        swift_release(v78);
      }
      else
      {
        sub_1007A19A4(v15, a1, a2);
LABEL_45:
        swift_release(v15);
      }
      goto LABEL_16;
  }
LABEL_15:
  a2 = v161;
LABEL_16:
  sub_1007A0C5C((uint64_t)v3, a2, a1);
}

void sub_1007A0C5C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  __n128 v18;
  Swift::String v19;
  Swift::String v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _BYTE v31[112];
  _BYTE v32[24];

  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v5 && (v6 = *(_QWORD *)(v5 + 64)) != 0)
  {
    v8 = *(void **)(*(_QWORD *)(v6 + 16) + 16);
    swift_retain(v6);
    v30 = v8;
    sub_1007A2FF4(a2, v30, 0);
    swift_release(v6);

  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v32, 0, 0);
    v9 = (void *)static OS_os_log.dataSync;
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v10, v31);
    v12 = (_QWORD *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v13 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v14 = 0x5320646572616853;
    else
      v14 = 0x2065746176697250;
    if (v13)
      v15 = 0xED000065706F6353;
    else
      v15 = 0xEC00000065706F63;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v16 = sub_1004CFC2C();
    v12[4] = v14;
    v12[8] = v16;
    v12[5] = v15;
    v17 = v9;
    v19._countAndFlagsBits = CKRecord.recordType.getter(v18);
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 0x203A444920;
    v20._object = (void *)0xE500000000000000;
    String.append(_:)(v20);
    v21 = objc_msgSend(a3, "recordID");
    v22 = objc_msgSend(v21, "recordName");

    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    v12[12] = &type metadata for String;
    v12[13] = v16;
    v12[9] = 0x203A65707954;
    v12[10] = 0xE600000000000000;
    v28 = static os_log_type_t.error.getter(v27);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v28, "<%{public}@> Failed to find the current batch to notify throttler about save failure for record %{public}@", 106, 2, (uint64_t)v12);
    swift_setDeallocating(v12);
    v29 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v12 + 4, 2, v29);

  }
}

void sub_1007A0F0C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  char v13;
  void *v14;
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  __n128 v23;
  Swift::String v24;
  Swift::String v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  __n128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t Strong;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  __n128 v59;
  Swift::String v60;
  Swift::String v61;
  id v62;
  id v63;
  uint64_t v64;
  void *v65;
  void *v66;
  Swift::String v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[112];
  char v92[32];

  v80 = a1;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = v11;
  v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) != 0)
  {
    v83 = a2;
    v79 = a3;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v92, 0, 0);
  v14 = (void *)static OS_os_log.dataSync;
  v82 = (id)sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v82, v91);
  v16 = (_QWORD *)inited;
  v78 = xmmword_100EF5A10;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v17 = 0x5320646572616853;
  else
    v17 = 0x2065746176697250;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v18 = 0xEC00000065706F63;
  else
    v18 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v19 = sub_1004CFC2C();
  v16[8] = v19;
  v81 = v17;
  v16[4] = v17;
  v16[5] = v18;
  v85 = 0x203A65707954;
  v86 = 0xE600000000000000;
  v20 = v14;
  v84 = v3;
  v21 = v20;
  v22 = v83;
  v24._countAndFlagsBits = CKRecord.recordType.getter(v23);
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 0x203A444920;
  v25._object = (void *)0xE500000000000000;
  String.append(_:)(v25);
  v26 = objc_msgSend(v22, "recordID");
  v27 = objc_msgSend(v26, "recordName");

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31._countAndFlagsBits = v28;
  v31._object = v30;
  String.append(_:)(v31);
  v32 = swift_bridgeObjectRelease();
  v33 = v85;
  v34 = v86;
  v16[12] = &type metadata for String;
  v16[13] = v19;
  v16[9] = v33;
  v16[10] = v34;
  v35 = static os_log_type_t.default.getter(v32);
  sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v35, "<%{public}@> Encountered .userDeletedZone error while saving record {%@}. It needs to be recreated.", 99, 2, (uint64_t)v16);
  swift_setDeallocating(v16);
  v36 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v16 + 4, 2, v36);

  v37 = *(_QWORD *)(v84 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v37)
  {
    v77 = v36;
    v38 = v18;
    v39 = v81;
    v40 = v82;
    Strong = swift_unknownObjectWeakLoadStrong(v84 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
    if (Strong)
    {
      v42 = v80;
      v43 = *(void **)(*(_QWORD *)(v80 + 16) + 16);
      v44 = Strong;
      swift_retain(v37);
      v45 = v43;
      v76 = v44;
      if ((sub_100B3B0DC((uint64_t)v45) & 1) != 0)
      {
        swift_beginAccess(v37 + 40, &v85, 33, 0);
        sub_100ADA730((Swift::Int *)&v87, v45);
        swift_endAccess(&v85);

        v46 = v83;
      }
      else
      {
        v54 = (void *)static OS_os_log.dataSync;
        v55 = swift_initStackObject(v40, &v88);
        v56 = v19;
        v75 = v19;
        v57 = (_QWORD *)v55;
        *(_OWORD *)(v55 + 16) = v78;
        *(_QWORD *)(v55 + 56) = &type metadata for String;
        *(_QWORD *)(v55 + 64) = v56;
        *(_QWORD *)(v55 + 32) = v39;
        v58 = v55 + 32;
        *(_QWORD *)(v55 + 40) = v38;
        v85 = 0x203A65707954;
        v86 = 0xE600000000000000;
        v82 = v54;
        v46 = v83;
        v60._countAndFlagsBits = CKRecord.recordType.getter(v59);
        String.append(_:)(v60);
        swift_bridgeObjectRelease();
        v61._countAndFlagsBits = 0x203A444920;
        v61._object = (void *)0xE500000000000000;
        String.append(_:)(v61);
        v62 = objc_msgSend(v46, "recordID");
        v63 = objc_msgSend(v62, "recordName");

        v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
        v66 = v65;

        v42 = v80;
        v67._countAndFlagsBits = v64;
        v67._object = v66;
        String.append(_:)(v67);
        swift_bridgeObjectRelease();
        v68 = v85;
        v69 = v86;
        v70 = v75;
        v57[12] = &type metadata for String;
        v57[13] = v70;
        v57[9] = v68;
        v57[10] = v69;
        v72 = static os_log_type_t.error.getter(v71);
        v73 = v82;
        sub_100A06EBC((uint64_t)v82, &_mh_execute_header, v72, "<%{public}@> Encountered .userDeletedZone error while saving a record that should not recreate a metadata zone {%@}.", 116, 2, (uint64_t)v57);
        swift_setDeallocating(v57);
        swift_arrayDestroy(v58, 2, v77);

      }
      sub_1007A19A4(v42, v46, v79);
      swift_release(v37);
      swift_unknownObjectRelease(v76);
    }
    else
    {
      v50 = (void *)static OS_os_log.dataSync;
      v51 = swift_initStackObject(v40, &v89);
      *(_OWORD *)(v51 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v51 + 56) = &type metadata for String;
      *(_QWORD *)(v51 + 64) = v19;
      *(_QWORD *)(v51 + 32) = v39;
      *(_QWORD *)(v51 + 40) = v38;
      swift_retain(v37);
      v45 = v50;
      v53 = static os_log_type_t.default.getter(v52);
      sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v53, "<%{public}@> Cannot handle save failure since a sync logic provider is not set", 78, 2, v51);
      swift_setDeallocating(v51);
      swift_arrayDestroy(v51 + 32, 1, v77);
      swift_release(v37);
    }
  }
  else
  {
    v47 = (void *)static OS_os_log.dataSync;
    v48 = swift_initStackObject(v82, &v90);
    *(_OWORD *)(v48 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    *(_QWORD *)(v48 + 64) = v19;
    *(_QWORD *)(v48 + 32) = v81;
    *(_QWORD *)(v48 + 40) = v18;
    v45 = v47;
    v49 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v49, "<%{public}@> Could not find active save task for handling zone-not-found error", 78, 2, v48);
    swift_setDeallocating(v48);
    swift_arrayDestroy(v48 + 32, 1, v36);
  }

}

void sub_1007A1560(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  char isUniquelyReferenced_nonNull_native;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];
  uint64_t v54;
  uint64_t v55;
  char v56[24];
  _QWORD v57[6];

  v50 = a3;
  v51 = a1;
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5, v7);
  v11 = v10;
  v12 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v12 & 1) != 0)
  {
    v49 = a2;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v56, 0, 0);
  v13 = (void *)static OS_os_log.dataSync;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, &v55);
  v16 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v17 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v18 = 0x5320646572616853;
  else
    v18 = 0x2065746176697250;
  if (v17)
    v19 = 0xED000065706F6353;
  else
    v19 = 0xEC00000065706F63;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v20 = sub_1004CFC2C();
  v16[8] = v20;
  v48 = v18;
  v16[4] = v18;
  v21 = v16 + 4;
  v16[5] = v19;
  v57[0] = v50;
  type metadata accessor for CKError(0);
  v23 = v22;
  v24 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  v25 = v13;
  v26 = _BridgedStoredNSError.errorCode.getter(v23, v24);
  v16[12] = &type metadata for Int;
  v16[13] = &protocol witness table for Int;
  v16[9] = v26;
  v28 = static os_log_type_t.default.getter(v27);
  sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v28, "<%{public}@> Received retriable cloud error %d", 46, 2, (uint64_t)v16);
  swift_setDeallocating(v16);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v21, 2, v29);

  v30 = objc_msgSend(v49, "recordID");
  v31 = *(_QWORD *)(*(_QWORD *)(v51 + 16) + 24);
  if (*(_QWORD *)(v31 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v51 + 16) + 24));
    v32 = v30;
    v33 = sub_100843848((uint64_t)v32);
    if ((v34 & 1) != 0)
    {
      v35 = (_QWORD *)(*(_QWORD *)(v31 + 56) + 16 * v33);
      v37 = *v35;
      v36 = v35[1];
      swift_unknownObjectRetain(*v35);

      swift_bridgeObjectRelease();
      v57[0] = v37;
      v57[1] = v36 | 0x8000000000000000;
      v38 = v50;
      v39 = v51;
      v57[3] = 0;
      v57[4] = 0;
      v57[2] = v50;
      swift_beginAccess(v51 + 64, v53, 33, 0);
      swift_unknownObjectRetain_n(v37, 2);
      v40 = v38;
      v41 = v32;
      v42 = v40;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v39 + 64));
      v52 = *(_QWORD *)(v39 + 64);
      *(_QWORD *)(v39 + 64) = 0x8000000000000000;
      sub_100828BDC((uint64_t)v57, v41, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v39 + 64) = v52;

      swift_bridgeObjectRelease();
      swift_endAccess(v53);

      swift_unknownObjectRelease_n(v37, 2);
      return;
    }

    swift_bridgeObjectRelease();
  }
  v44 = (void *)static OS_os_log.dataSync;
  v45 = swift_initStackObject(v14, &v54);
  *(_OWORD *)(v45 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v45 + 56) = &type metadata for String;
  *(_QWORD *)(v45 + 64) = v20;
  *(_QWORD *)(v45 + 32) = v48;
  *(_QWORD *)(v45 + 40) = v19;
  v46 = v44;
  v47 = static os_log_type_t.error.getter(v46);
  sub_100A06EBC((uint64_t)v46, &_mh_execute_header, v47, "<%{public}@> Failed to find the local change to populate an error while saving.", 79, 2, v45);
  swift_setDeallocating(v45);
  swift_arrayDestroy(v45 + 32, 1, v29);

}

void sub_1007A19A4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  char v12;
  void *v13;
  uint64_t inited;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _BYTE v54[24];
  uint64_t v55;
  uint64_t v56;
  char v57[24];
  _QWORD v58[6];

  v51 = a1;
  v52 = a3;
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5, v7);
  v11 = v10;
  v12 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v12 & 1) != 0)
  {
    v50 = a2;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v57, 0, 0);
  v13 = (void *)static OS_os_log.dataSync;
  v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v49, &v56);
  v15 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v48 = v3;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v16 = 0x5320646572616853;
  else
    v16 = 0x2065746176697250;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v17 = 0xEC00000065706F63;
  else
    v17 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v18 = sub_1004CFC2C();
  v15[8] = v18;
  v15[4] = v16;
  v19 = v15 + 4;
  v15[5] = v17;
  v58[0] = v52;
  type metadata accessor for CKError(0);
  v21 = v20;
  v22 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  v23 = v13;
  v24 = _BridgedStoredNSError.errorCode.getter(v21, v22);
  v15[12] = &type metadata for Int;
  v15[13] = &protocol witness table for Int;
  v15[9] = v24;
  v26 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v26, "<%{public}@> Received unrecoverable cloud error %d", 50, 2, (uint64_t)v15);
  swift_setDeallocating(v15);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v19, 2, v27);

  v28 = objc_msgSend(v50, "recordID");
  v29 = v51;
  v30 = *(_QWORD *)(*(_QWORD *)(v51 + 16) + 24);
  if (!*(_QWORD *)(v30 + 16))
    goto LABEL_14;
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v51 + 16) + 24));
  v31 = v28;
  v32 = sub_100843848((uint64_t)v31);
  if ((v33 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_14:
    v43 = (void *)static OS_os_log.dataSync;
    v44 = swift_initStackObject(v49, &v55);
    *(_OWORD *)(v44 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v44 + 56) = &type metadata for String;
    *(_QWORD *)(v44 + 64) = v18;
    *(_QWORD *)(v44 + 32) = v16;
    *(_QWORD *)(v44 + 40) = v17;
    v45 = v43;
    v46 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v46, "<%{public}@> Failed to find the local change to populate an error while saving.", 79, 2, v44);
    swift_setDeallocating(v44);
    swift_arrayDestroy(v44 + 32, 1, v27);

    return;
  }
  v34 = (_QWORD *)(*(_QWORD *)(v30 + 56) + 16 * v32);
  v36 = *v34;
  v35 = v34[1];
  swift_unknownObjectRetain(*v34);

  swift_bridgeObjectRelease();
  v58[0] = v36;
  v58[1] = v35 | 0x8000000000000000;
  v58[3] = 0;
  v58[4] = 0;
  v37 = v52;
  v58[2] = v52;
  swift_beginAccess(v29 + 64, v54, 33, 0);
  swift_unknownObjectRetain_n(v36, 2);
  v38 = v37;
  v39 = v31;
  v40 = v38;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v29 + 64));
  v53 = *(_QWORD *)(v29 + 64);
  *(_QWORD *)(v29 + 64) = 0x8000000000000000;
  sub_100828BDC((uint64_t)v58, v39, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v29 + 64) = v53;

  swift_bridgeObjectRelease();
  swift_endAccess(v54);

  swift_unknownObjectRelease_n(v36, 2);
  v42 = *(_QWORD *)(v48 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v42)
    *(_BYTE *)(v42 + 56) = 1;
}

double sub_1007A1E00()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_10127DCF8, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = v0;
  if (v8 == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013E01F0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v13 = v14 | 0x1C00;
    v15 = *v7;
    if (*v7)
    {
      v16 = v6[3];
      ObjectType = swift_getObjectType(*v7);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_10127DD20, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1013F2120;
  *(_QWORD *)(v19 + 24) = v6;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1013FE730);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1007A1FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[43] = a4;
  v5 = type metadata accessor for CKSyncEngine.SendChangesOptions.Scope(0);
  v4[44] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[45] = v6;
  v4[46] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  v4[47] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[48] = v8;
  v4[49] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1007A2058, 0, 0);
}

uint64_t sub_1007A2058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 344) + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess(v1, v0 + 256, 0, 0);
  sub_1004CB7BC(v1, v0 + 128, &qword_1013F20A0);
  if (*(_QWORD *)(v0 + 152))
  {
    v3 = *(_QWORD *)(v0 + 360);
    v2 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 352);
    sub_1004DB728((__int128 *)(v0 + 128), v0 + 168);
    sub_1004BB5A4((_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 192));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for CKSyncEngine.SendChangesOptions.Scope.all(_:), v4);
    CKSyncEngine.SendChangesOptions.init(scope:operationGroup:)(v2, 0);
    v5 = (_QWORD *)swift_task_alloc(async function pointer to CKSyncEngine.sendChanges(_:)[1]);
    *(_QWORD *)(v0 + 400) = v5;
    *v5 = v0;
    v5[1] = sub_1007A221C;
    return CKSyncEngine.sendChanges(_:)(*(_QWORD *)(v0 + 392));
  }
  else
  {
    sub_1004CB800(v0 + 128, &qword_1013F20A0);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v0 + 208, 0, 0);
    v7 = (id)static OS_os_log.dataSync;
    v8 = static os_log_type_t.error.getter(v7);
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v8, "Failed to request save from SyncEngine because of no SyncEngine exists.", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

    v9 = *(_QWORD *)(v0 + 368);
    swift_task_dealloc(*(_QWORD *)(v0 + 392));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007A221C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 392);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v6 = sub_1007A22E0;
  else
    v6 = sub_1007A229C;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1007A229C()
{
  uint64_t v0;
  uint64_t v1;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007A22E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 168));
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  v1 = *(_QWORD *)(v0 + 408);
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 232, 0, 0);
  v2 = (void *)static OS_os_log.dataSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v1, v0 + 336, v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  swift_getErrorValue(v1, v0 + 328, v0 + 280);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 288));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v14, "sendChanges call to SyncEngine failed because of error: %{public}@ %@", 69, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  swift_errorRelease(v1);
  v16 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007A24A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 344) = a4;
  *(_QWORD *)(v5 + 352) = a5;
  return swift_task_switch(sub_1007A24BC, 0, 0);
}

uint64_t sub_1007A24BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 344) + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess(v1, v0 + 256, 0, 0);
  sub_1004CB7BC(v1, v0 + 128, &qword_1013F20A0);
  if (*(_QWORD *)(v0 + 152))
  {
    sub_1004DB728((__int128 *)(v0 + 128), v0 + 168);
    sub_1004BB5A4((_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 192));
    v2 = (_QWORD *)swift_task_alloc(async function pointer to CKSyncEngine.fetchChanges(_:)[1]);
    *(_QWORD *)(v0 + 360) = v2;
    *v2 = v0;
    v2[1] = sub_1007A2618;
    return CKSyncEngine.fetchChanges(_:)(*(_QWORD *)(v0 + 352));
  }
  else
  {
    sub_1004CB800(v0 + 128, &qword_1013F20A0);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v0 + 208, 0, 0);
    v4 = (id)static OS_os_log.dataSync;
    v5 = static os_log_type_t.error.getter(v4);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v5, "Failed to request fetch from SyncEngine because of no SyncEngine exists.", 72, 2, (uint64_t)_swiftEmptyArrayStorage);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1007A2618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 360);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1007A26AC;
  else
    v3 = sub_1007A267C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1007A267C()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007A26AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 168));
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  v1 = *(_QWORD *)(v0 + 368);
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 232, 0, 0);
  v2 = (void *)static OS_os_log.dataSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v1, v0 + 336, v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  swift_getErrorValue(v1, v0 + 328, v0 + 280);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 288));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v14, "fetchChanges call to SyncEngine failed because of error: %{public}@ %@", 70, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007A285C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t inited;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  double result;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[32];

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v55, 0, 0);
  v10 = (void *)static OS_os_log.dataSync;
  v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v49, &v54);
  v12 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v13 = 0x5320646572616853;
  else
    v13 = 0x2065746176697250;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v14 = 0xEC00000065706F63;
  else
    v14 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v15 = sub_1004CFC2C();
  v12[8] = v15;
  v50 = v1;
  v48 = v13;
  v12[4] = v13;
  v16 = v12 + 4;
  v12[5] = v14;
  v17 = v10;
  v18 = objc_msgSend(a1, "zoneID");
  v47 = a1;
  v19 = v18;
  v12[12] = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v12[13] = sub_1005A15B8(&qword_1013F20B8, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v12[9] = v19;
  v21 = static os_log_type_t.default.getter(v20);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v21, "<%{public}@> Saved recordZone %{public}@", 40, 2, (uint64_t)v12);
  swift_setDeallocating(v12);
  v22 = sub_1004B804C(&qword_1013E0190);
  v23 = v50;
  swift_arrayDestroy(v16, 2, v22);

  v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v24)
  {
    v45 = v22;
    v46 = v15;
    v25 = v14;
    v27 = v48;
    v26 = v49;
    *(_QWORD *)&v28 = swift_retain(v24).n128_u64[0];
    v29 = (char *)objc_msgSend(v47, "zoneID", v28);
    sub_1007A3778(v29, 0);

    swift_beginAccess(v24 + 40, &v52, 0, 0);
    v30 = *(_QWORD *)(v24 + 40);
    if ((v30 & 0xC000000000000001) != 0)
    {
      if (v30 < 0)
        v31 = *(_QWORD *)(v24 + 40);
      else
        v31 = v30 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v24 + 40));
      v32 = __CocoaSet.count.getter(v31);
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = *(_QWORD *)(v30 + 16);
    }
    v38 = v46;
    if (!v32)
    {
      v39 = (void *)static OS_os_log.dataSync;
      v40 = swift_initStackObject(v26, &v51);
      *(_OWORD *)(v40 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v40 + 56) = &type metadata for String;
      *(_QWORD *)(v40 + 64) = v38;
      *(_QWORD *)(v40 + 32) = v27;
      *(_QWORD *)(v40 + 40) = v25;
      v41 = v39;
      v43 = static os_log_type_t.default.getter(v42);
      sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "<%{public}@> Record zones finished saving. Enqueing record save", 63, 2, v40);
      swift_setDeallocating(v40);
      swift_arrayDestroy(v40 + 32, 1, v45);

      sub_1007A1E00();
    }
    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  else
  {
    v33 = (void *)static OS_os_log.dataSync;
    v34 = swift_initStackObject(v49, &v53);
    *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = v15;
    *(_QWORD *)(v34 + 32) = v48;
    *(_QWORD *)(v34 + 40) = v14;
    v35 = v33;
    v36 = static os_log_type_t.error.getter(v35);
    sub_100A06EBC((uint64_t)v35, &_mh_execute_header, v36, "<%{public}@> Could not find active save task for handling successful zone save", 78, 2, v34);
    swift_setDeallocating(v34);
    swift_arrayDestroy(v34 + 32, 1, v22);

  }
  return result;
}

void sub_1007A2CC8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  id v39[2];
  id v40;
  char v41[152];
  char v42[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (id *)((char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    v39[0] = a1;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v42, 0, 0);
  v13 = (void *)static OS_os_log.dataSync;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, v41);
  v16 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v17 = 0x5320646572616853;
  else
    v17 = 0x2065746176697250;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v18 = 0xEC00000065706F63;
  else
    v18 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v19 = sub_1004CFC2C();
  v16[8] = v19;
  v16[4] = v17;
  v16[5] = v18;
  v20 = v13;
  v21 = a2;
  v22 = sub_10089EABC(v21);
  v24 = v23;

  v16[12] = &type metadata for String;
  v16[13] = v19;
  v16[9] = v22;
  v16[10] = v24;
  v40 = v21;
  type metadata accessor for CKError(0);
  v26 = v25;
  v27 = v21;
  v28 = String.init<A>(reflecting:)(&v40, v26);
  v16[17] = &type metadata for String;
  v16[18] = v19;
  v16[14] = v28;
  v16[15] = v29;
  v31 = static os_log_type_t.default.getter(v30);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v31, "<%{public}@> Failed to save recordZone %{public}@ due to error: %{public}@ <%@>", 79, 2, (uint64_t)v16);
  swift_setDeallocating(v16);
  v32 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v16 + 4, 3, v32);

  v33 = v39[0];
  v34 = objc_msgSend(v39[0], "zoneID");
  sub_1007A2FF4(v27, v34, 0);

  v39[1] = v27;
  v35 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  _BridgedStoredNSError.code.getter(v26, v35);
  v36 = v40;
  v37 = objc_msgSend(v33, "zoneID");
  v38 = v37;
  if (v36 == (id)27)
    sub_1007B1108(v37);
  else
    sub_1007B159C(v37);

}

double sub_1007A2FF4(void *a1, void *a2, char a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  void *v74;
  uint64_t v75;
  unint64_t v76[3];
  uint64_t v77;
  id v78;
  uint64_t v79;
  _BYTE v80[72];
  _QWORD v81[4];

  v6 = v3;
  v74 = a2;
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9, v11);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  v13 = (_QWORD *)0xED000065706F6353;
  v4 = 0xEC00000065706F63;
  v5 = 0x5320646572616853;
  v16 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (v16)
  {
    v73 = a3 & 1;
    if ((a3 & 1) != 0)
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6863746566, 0xE500000000000000, 1702257011, 0xE400000000000000, 0);
      swift_retain(v16);
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        goto LABEL_36;
    }
    else
    {
      swift_retain(v16);
      swift_bridgeObjectRelease();
    }
    v28 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    if (v28)
    {
      v76[0] = (unint64_t)a1;
      type metadata accessor for CKError(0);
      v30 = v29;
      v31 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
      swift_retain(v28);
      _BridgedStoredNSError.code.getter(v30, v31);
      if (v81[0] == 23
        || (v78 = a1, _BridgedStoredNSError.code.getter(v30, v31), v76[0] > 0x24)
        || ((1 << SLOBYTE(v76[0])) & 0x1000A002D8) == 0)
      {
        swift_release(v28);
        v4 = 0xEC00000065706F63;
        v5 = 0x5320646572616853;
      }
      else
      {
        v42 = 0xEC00000065706F63;
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v76, 0, 0);
        v43 = (void *)static OS_os_log.dataSync;
        v44 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v44, &v75);
        v46 = inited;
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        if (*(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v47 = 0x5320646572616853;
        else
          v47 = 0x2065746176697250;
        if (!*(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v42 = 0xED000065706F6353;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(v46 + 32) = v47;
        *(_QWORD *)(v46 + 40) = v42;
        v13 = (_QWORD *)0xED000065706F6353;
        v48 = v43;
        v49 = static os_log_type_t.error.getter(v48);
        sub_100A06EBC((uint64_t)v48, &_mh_execute_header, v49, "<%{public}@> encounteredThrottlingErrorForAllZones", 50, 2, v46);
        swift_setDeallocating(v46);
        v50 = sub_1004B804C(&qword_1013E0190);
        v4 = 0xEC00000065706F63;
        swift_arrayDestroy(v46 + 32, 1, v50);

        v5 = 0x5320646572616853;
        *(_BYTE *)(v28 + 57) = 1;
        swift_release(v28);
      }
LABEL_36:
      v72 = v16;
      if (qword_1013DD870 == -1)
      {
LABEL_37:
        swift_beginAccess(&static OS_os_log.dataSync, v81, 0, 0);
        v51 = (void *)static OS_os_log.dataSync;
        v52 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v53 = swift_initStackObject(v52, &v79);
        v54 = (_QWORD *)v53;
        *(_OWORD *)(v53 + 16) = xmmword_100EF5550;
        v55 = *(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
        if (*(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v56 = v5;
        else
          v56 = 0x2065746176697250;
        if (!v55)
          v13 = (_QWORD *)v4;
        *(_QWORD *)(v53 + 56) = &type metadata for String;
        v57 = sub_1004CFC2C();
        v54[8] = v57;
        v54[4] = v56;
        v54[5] = v13;
        v58 = v51;
        v59 = a1;
        v60 = sub_10089EABC(v59);
        v62 = v61;

        v54[12] = &type metadata for String;
        v54[13] = v57;
        v54[9] = v60;
        v54[10] = v62;
        v78 = v59;
        type metadata accessor for CKError(0);
        v64 = v63;
        v65 = v59;
        v66 = String.init<A>(reflecting:)(&v78, v64);
        v54[17] = &type metadata for String;
        v54[18] = v57;
        v54[14] = v66;
        v54[15] = v67;
        v68 = static os_log_type_t.error.getter(v66);
        sub_100A06EBC((uint64_t)v58, &_mh_execute_header, v68, "<%{public}@> Updating earliest start date after error \"<%{public}@> <%@>\"", 73, 2, (uint64_t)v54);
        swift_setDeallocating(v54);
        v69 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v54 + 4, 3, v69);

        v70 = v72;
        sub_100794690(v73, (unint64_t)v65, v74);
        *(_QWORD *)&result = swift_release(v70).n128_u64[0];
        return result;
      }
LABEL_44:
      swift_once(&qword_1013DD870, sub_100A059E0);
      goto LABEL_37;
    }
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v81, 0, 0);
    v32 = (void *)static OS_os_log.dataSync;
    v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v34 = swift_initStackObject(v33, &v77);
    v35 = v34;
    *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
    v36 = *(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
    if (*(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v37 = 0x5320646572616853;
    else
      v37 = 0x2065746176697250;
    if (v36)
      v38 = 0xED000065706F6353;
    else
      v38 = 0xEC00000065706F63;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v35 + 32) = v37;
    *(_QWORD *)(v35 + 40) = v38;
    v39 = v32;
    v40 = static os_log_type_t.error.getter(v39);
    sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v40, "<%{public}@> Could not find active save task for handling failure", 65, 2, v35);
    swift_setDeallocating(v35);
    v41 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v35 + 32, 1, v41);
    swift_release(v16);

  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v81, 0, 0);
    v17 = (void *)static OS_os_log.dataSync;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v19 = swift_initStackObject(v18, v80);
    v20 = v19;
    *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
    v21 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
    if (*(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v22 = 0x5320646572616853;
    else
      v22 = 0x2065746176697250;
    if (v21)
      v13 = (_QWORD *)0xEC00000065706F63;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v13;
    v23 = v17;
    v24 = static os_log_type_t.error.getter(v23);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v24, "<%{public}@> Attempting update throttling state after error but scheduler not found", 83, 2, v20);
    swift_setDeallocating(v20);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v20 + 32, 1, v25);

  }
  return result;
}

void sub_1007A3778(char *a1, char a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);
  void (*v62)(_QWORD *);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  id v74;
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[4];
  _BYTE v93[32];
  uint64_t v94;
  char v95[24];
  char v96[80];

  v4 = v2;
  v7 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v14 = (uint64_t)v15;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, __n128))(v11 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v10, v12);
  v16 = v15;
  v17 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v14, v10);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  v17 = 0xED000065706F6353;
  v10 = 0xEC00000065706F63;
  v11 = 0x5320646572616853;
  v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v18)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v93, 0, 0);
    v39 = (void *)static OS_os_log.dataSync;
    v40 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v40, v96);
    v42 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    {
      v43 = 0xEC00000065706F63;
    }
    else
    {
      v11 = 0x2065746176697250;
      v43 = 0xED000065706F6353;
    }
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v42 + 32) = v11;
    *(_QWORD *)(v42 + 40) = v43;
    v44 = v39;
    v45 = static os_log_type_t.error.getter(v44);
    sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v45, "<%{public}@> Attempting update throttling state for zone save success but scheduler not found", 93, 2, v42);
    swift_setDeallocating(v42);
    v46 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v42 + 32, 1, v46);
    goto LABEL_36;
  }
  v14 = &static OS_os_log.dataSync;
  v86 = v9;
  if ((a2 & 1) != 0)
  {
    v87 = a2 & 1;
    v88 = v18;
    swift_retain(v18);
    goto LABEL_21;
  }
  v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v19)
  {
    v76 = qword_1013DD870;
    swift_retain(v18);
    if (v76 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v93, 0, 0);
    v77 = (void *)static OS_os_log.dataSync;
    v78 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v79 = swift_initStackObject(v78, &v91);
    v80 = v79;
    *(_OWORD *)(v79 + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    {
      v81 = 0xEC00000065706F63;
    }
    else
    {
      v11 = 0x2065746176697250;
      v81 = 0xED000065706F6353;
    }
    *(_QWORD *)(v79 + 56) = &type metadata for String;
    *(_QWORD *)(v79 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v80 + 32) = v11;
    *(_QWORD *)(v80 + 40) = v81;
    v44 = v77;
    v82 = static os_log_type_t.error.getter(v44);
    sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v82, "<%{public}@> Could not find active save task for zone save success", 66, 2, v80);
    swift_setDeallocating(v80);
    v83 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v80 + 32, 1, v83);
    swift_release(v18);
LABEL_36:

    return;
  }
  v87 = 0;
  v20 = qword_1013DD870;
  v88 = v18;
  v21 = v19;
  swift_retain(v18);
  v85 = (char *)v21;
  swift_retain(v21);
  if (v20 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, &v90, 0, 0);
  v22 = (void *)static OS_os_log.dataSync;
  v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v24 = swift_initStackObject(v23, &v89);
  v25 = (_QWORD *)v24;
  *(_OWORD *)(v24 + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v26 = 0x5320646572616853;
  else
    v26 = 0x2065746176697250;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v27 = 0xEC00000065706F63;
  else
    v27 = 0xED000065706F6353;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v28 = sub_1004CFC2C();
  v25[8] = v28;
  v25[4] = v26;
  v25[5] = v27;
  v29 = v22;
  v30 = objc_msgSend(a1, "zoneName");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v17 = 0xED000065706F6353;
  v25[12] = &type metadata for String;
  v25[13] = v28;
  v25[9] = v31;
  v25[10] = v33;
  v11 = 0x5320646572616853;
  v10 = 0xEC00000065706F63;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v35, "<%{public}@> Removing zoneID from unsaved zones after success %{public}@", 72, 2, (uint64_t)v25);
  swift_setDeallocating(v25);
  v36 = sub_1004B804C(&qword_1013E0190);
  v14 = &static OS_os_log.dataSync;
  swift_arrayDestroy(v25 + 4, 2, v36);

  v37 = (uint64_t)v85;
  swift_beginAccess(v85 + 40, v93, 33, 0);
  v38 = (void *)sub_100B27DC8(a1);
  swift_endAccess(v93);
  swift_release(v37);

LABEL_21:
  v3 = a1;
  if (qword_1013DD870 != -1)
LABEL_38:
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(v14, v95, 0, 0);
  v47 = (void *)*v14;
  v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v49 = swift_initStackObject(v48, &v94);
  v50 = (_QWORD *)v49;
  *(_OWORD *)(v49 + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v17 = v10;
  else
    v11 = 0x2065746176697250;
  *(_QWORD *)(v49 + 56) = &type metadata for String;
  v51 = sub_1004CFC2C();
  v50[8] = v51;
  v50[4] = v11;
  v50[5] = v17;
  v52 = v47;
  v85 = v3;
  v53 = objc_msgSend(v3, "zoneName");
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
  v56 = v55;

  v50[12] = &type metadata for String;
  v50[13] = v51;
  v50[9] = v54;
  v50[10] = v56;
  v58 = static os_log_type_t.default.getter(v57);
  sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v58, "<%{public}@> Clearing throttling state for batch with zoneID:<%{public}@>", 73, 2, (uint64_t)v50);
  swift_setDeallocating(v50);
  v59 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v50 + 4, 2, v59);

  v60 = v88;
  v61 = sub_10079220C((uint64_t)v93);
  v62 = sub_100CF9D28(v92, v87);
  v64 = v63;
  v65 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v64, 1, v65))
  {
    v67 = (uint64_t)v85;
    v66 = (uint64_t)v86;
    sub_100847B54((uint64_t)v85, (uint64_t)v86);
    sub_1004CB800(v66, &qword_1013F1EF0);
    v68 = v64 + *(int *)(v65 + 20);
    v69 = type metadata accessor for CRLThrottleInfo(0);
    v70 = (void *)v67;
    v71 = *(_QWORD *)(v69 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v68, 1, v69))
    {
      v72 = *(void **)(v68 + *(int *)(v69 + 20));
      sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
      v73 = v72;
      v74 = v70;
      v75 = static NSObject.== infix(_:_:)(v73, v74);

      if ((v75 & 1) != 0)
      {
        sub_1004CB800(v68, &qword_1013F1EF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v68, 1, 1, v69);
      }
    }
  }
  ((void (*)(_QWORD *, _QWORD))v62)(v92, 0);
  ((void (*)(_BYTE *, _QWORD))v61)(v93, 0);
  swift_release(v60);
}

uint64_t sub_1007A3FBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[67] = v1;
  v2[66] = a1;
  v3 = type metadata accessor for SyncEvent.DidSendChanges(0);
  v2[68] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SyncEvent.WillSendChanges(0);
  v2[69] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SyncEvent(0);
  v2[70] = v5;
  v2[71] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1007A405C, 0, 0);
}

void sub_1007A405C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  _QWORD *v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  v1 = v0[71];
  v19 = v0[70];
  v2 = v0[67];
  v3 = v0[66];
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 60, 0, 0);
  v4 = (void *)static OS_os_log.dataSync;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v0 + 2);
  v6 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v8 = 0x5320646572616853;
  else
    v8 = 0x2065746176697250;
  if (v7)
    v9 = 0xED000065706F6353;
  else
    v9 = 0xEC00000065706F63;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v10 = sub_1004CFC2C();
  v6[8] = v10;
  v6[4] = v8;
  v6[5] = v9;
  v11 = v4;
  SyncEvent.description.getter();
  v6[12] = &type metadata for String;
  v6[13] = v10;
  v6[9] = v12;
  v6[10] = v13;
  v15 = static os_log_type_t.default.getter(v14);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v15, "<%{public}@> Received new SyncEngine event: <%{public}@>", 56, 2, (uint64_t)v6);
  swift_setDeallocating(v6);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v6 + 4, 2, v16);

  sub_1004B8460(v3, v1, type metadata accessor for SyncEvent);
  v17 = (char *)&loc_1007A4234 + *((int *)qword_1007A4758 + swift_getEnumCaseMultiPayload(v1, v19));
  __asm { BR              X10 }
}

uint64_t sub_1007A4788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = v1;
  return swift_task_switch(sub_1007A47A0, 0, 0);
}

uint64_t sub_1007A47A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  v1 = *(_QWORD *)(v0 + 120);
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.dataSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v6 = 0x5320646572616853;
  else
    v6 = 0x2065746176697250;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v7 = 0xEC00000065706F63;
  else
    v7 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v7;
  v8 = v2;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "<%{public}@> Next Record Zone Change Batch is being requested by Sync Engine.", 77, 2, v5);
  swift_setDeallocating(v5);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v5 + 32, 1, v11);

  v12 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  v13 = swift_task_alloc(32);
  *(_QWORD *)(v13 + 16) = v1;
  v14 = v12;
  v15 = sub_1004B804C(&qword_1013F2110);
  OS_dispatch_queue.sync<A>(execute:)(sub_1007B0FF4, v13, v15);

  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007A4980(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t Strong;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  char v77;
  unint64_t v78;
  unint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  char v96;
  void *v97;
  uint64_t v98;
  void *v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  __n128 v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  id v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  char v116;
  id v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  void *v122;
  uint64_t v123;
  void *v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  int64_t v148;
  uint64_t v149;
  double *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  unint64_t v166;
  char v167;
  void *v168;
  uint64_t v169;
  __n128 v170;
  Swift::String v171;
  Swift::String v172;
  id v173;
  id v174;
  uint64_t v175;
  void *v176;
  void *v177;
  Swift::String v178;
  __n128 v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  void *v191;
  uint64_t v192;
  unint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  __n128 v196;
  Swift::String v197;
  Swift::String v198;
  id v199;
  id v200;
  uint64_t v201;
  void *v202;
  void *v203;
  Swift::String v204;
  __n128 v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  __n128 v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  __n128 v228;
  void *v229;
  uint64_t v230;
  unint64_t v231;
  id v232;
  __n128 v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t *v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  __int128 v245;
  uint64_t v246;
  __int128 v247;
  unint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  char *v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277[72];
  char v278[72];
  char v279[32];

  v2 = v1;
  v257 = a1;
  v3 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  v249 = *(uint64_t **)(v3 - 8);
  v250 = v3;
  __chkstk_darwin(v3);
  *(_QWORD *)&v247 = (char *)&v237 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013F20E8);
  __chkstk_darwin(v5);
  v248 = (unint64_t)&v237 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F20B0);
  __chkstk_darwin(v7);
  v251 = (char *)&v237 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F20F0);
  __chkstk_darwin(v9);
  v258 = (char *)&v237 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v279, 0, 0);
  v11 = (void *)static OS_os_log.dataSync;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v278);
  v14 = (_QWORD *)inited;
  v256 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v15 = 0x5320646572616853;
  else
    v15 = 0x2065746176697250;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v16 = 0xEC00000065706F63;
  else
    v16 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v17 = sub_1004CFC2C();
  v14[8] = v17;
  v14[4] = v15;
  v14[5] = v16;
  v18 = v11;
  v20 = static os_log_type_t.default.getter(v19);
  sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "<%{public}@> Generating Record Zone Change Batch.", 49, 2, (uint64_t)v14);
  swift_setDeallocating(v14);
  v21 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v14 + 4, 1, v21);

  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v22)
  {
    v38 = (void *)static OS_os_log.dataSync;
    v39 = swift_initStackObject(v12, v277);
    *(_OWORD *)(v39 + 16) = v256;
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = v17;
    *(_QWORD *)(v39 + 32) = v15;
    v40 = v39 + 32;
    *(_QWORD *)(v39 + 40) = v16;
    v41 = v38;
    v42 = static os_log_type_t.error.getter(v41);
    sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v42, "<%{public}@> Attempting to handle fetch next batch to save but scheduler not found", 82, 2, v39);
LABEL_20:
    swift_setDeallocating(v39);
    swift_arrayDestroy(v40, 1, v21);

    v47 = sub_1004B804C(&qword_1013F20F8);
    v26 = (uint64_t)v258;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v258, 1, 1, v47);
    v48 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v257, 1, 1, v48);
    v49 = v26;
    v50 = v2;
LABEL_29:
    sub_1007A6160(v49, v50);
    sub_1004CB800(v26, &qword_1013F20F0);
    return;
  }
  v254 = v12;
  v255 = v15;
  v252 = v17;
  v253 = v16;
  swift_retain(v22);
  if (!sub_100794A5C(0))
  {
    v43 = (void *)static OS_os_log.dataSync;
    v39 = swift_initStackObject(v254, &v276);
    *(_OWORD *)(v39 + 16) = v256;
    v44 = v252;
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = v44;
    *(_QWORD *)(v39 + 32) = v255;
    v40 = v39 + 32;
    *(_QWORD *)(v39 + 40) = v253;
    v41 = v43;
    v46 = static os_log_type_t.default.getter(v45);
    sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v46, "<%{public}@> Could not return batch for saving, task is paused due to throttling", 80, 2, v39);
    swift_release(v22);
    goto LABEL_20;
  }
  v23 = v2;
  v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  v25 = v252;
  v26 = (uint64_t)v258;
  if (!v24)
  {
    v51 = (void *)static OS_os_log.dataSync;
    v52 = swift_initStackObject(v254, &v275);
    *(_OWORD *)(v52 + 16) = v256;
    *(_QWORD *)(v52 + 56) = &type metadata for String;
    *(_QWORD *)(v52 + 64) = v25;
    *(_QWORD *)(v52 + 32) = v255;
    *(_QWORD *)(v52 + 40) = v253;
    v53 = v51;
    v55 = static os_log_type_t.default.getter(v54);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v55, "<%{public}@> There is no outstanding save task. No new record batch to save", 75, 2, v52);
    swift_release(v22);
    swift_setDeallocating(v52);
    v56 = v52 + 32;
    v57 = v21;
LABEL_22:
    swift_arrayDestroy(v56, 1, v57);
LABEL_26:

    goto LABEL_27;
  }
  v246 = v21;
  swift_beginAccess(v24 + 40, &v274, 0, 0);
  v27 = *(_QWORD *)(v24 + 40);
  if ((v27 & 0xC000000000000001) != 0)
  {
    if (v27 < 0)
      v28 = *(_QWORD *)(v24 + 40);
    else
      v28 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_retain(v24);
    swift_bridgeObjectRetain(v27);
    v29 = __CocoaSet.count.getter(v28);
    swift_bridgeObjectRelease();
    if (v29)
      goto LABEL_17;
  }
  else
  {
    v58 = *(_QWORD *)(v27 + 16);
    swift_retain(v24);
    if (v58)
    {
LABEL_17:
      v30 = v22;
      v31 = (void *)static OS_os_log.dataSync;
      v32 = swift_initStackObject(v254, &v273);
      *(_OWORD *)(v32 + 16) = xmmword_100EF5A10;
      v33 = v252;
      *(_QWORD *)(v32 + 56) = &type metadata for String;
      *(_QWORD *)(v32 + 64) = v33;
      *(_QWORD *)(v32 + 32) = v255;
      *(_QWORD *)(v32 + 40) = v253;
      v34 = *(_QWORD *)(v24 + 40);
      *(_QWORD *)(v32 + 96) = sub_1004B804C(&qword_1013E0238);
      *(_QWORD *)(v32 + 104) = sub_1004CBA30(&qword_1013F2100, &qword_1013E0238, (uint64_t)&protocol conformance descriptor for Set<A>);
      *(_QWORD *)(v32 + 72) = v34;
      v35 = v31;
      v36 = swift_bridgeObjectRetain(v34);
      v37 = static os_log_type_t.default.getter(v36);
      sub_100A06EBC((uint64_t)v35, &_mh_execute_header, v37, "<%{public}@> Could not return a batch for saving, task has pending zones to save: %{public}@", 92, 2, v32);
      swift_release(v30);
      swift_release(v24);
      swift_setDeallocating(v32);
      swift_arrayDestroy(v32 + 32, 2, v246);

      goto LABEL_27;
    }
  }
  if ((*(_BYTE *)(v24 + 32) & 1) != 0)
  {
    v59 = (void *)static OS_os_log.dataSync;
    v60 = swift_allocObject(v254, 72, 7);
    *(_OWORD *)(v60 + 16) = v256;
    v61 = v252;
    *(_QWORD *)(v60 + 56) = &type metadata for String;
    *(_QWORD *)(v60 + 64) = v61;
    *(_QWORD *)(v60 + 32) = v255;
    *(_QWORD *)(v60 + 40) = v253;
    v53 = v59;
    v63 = static os_log_type_t.default.getter(v62);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v63, "<%{public}@> There is an ongoing batch to be saved. Not returning a new batch", 77, 2, v60);
    swift_release(v22);
    swift_release(v24);
    swift_setDeallocating(v60);
    swift_arrayDestroy(v60 + 32, 1, v246);
    swift_deallocClassInstance(v60, 32, 7);
    goto LABEL_26;
  }
  v66 = v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
  v68 = v255;
  v242 = Strong;
  if (!Strong)
  {
    v132 = (void *)static OS_os_log.dataSync;
    v133 = v246;
    v134 = swift_initStackObject(v254, &v272);
    *(_OWORD *)(v134 + 16) = v256;
    v135 = v252;
    *(_QWORD *)(v134 + 56) = &type metadata for String;
    *(_QWORD *)(v134 + 64) = v135;
    *(_QWORD *)(v134 + 32) = v68;
    *(_QWORD *)(v134 + 40) = v253;
    v53 = v132;
    v136 = static os_log_type_t.error.getter(v53);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v136, "<%{public}@> Could not return a batch for saving since sync logic provider is not set", 85, 2, v134);
    swift_release(v22);
    swift_release(v24);
    swift_setDeallocating(v134);
    v56 = v134 + 32;
    v57 = v133;
    goto LABEL_22;
  }
  v69 = *(_QWORD **)(v66 + 8);
  v240 = v24;
  v241 = v69;
  v70 = *(_QWORD *)(v24 + 64);
  v243 = v22;
  v244 = v2;
  v71 = v252;
  if (!v70 || (*(_BYTE *)(v70 + 80) & 1) != 0 || !*(_QWORD *)(v70 + 72))
    goto LABEL_37;
  swift_retain(v70);
  sub_100897140();
  if ((v72 & 1) != 0)
    goto LABEL_36;
  v73 = v240;
  swift_beginAccess(v240 + 48, &v259, 0, 0);
  v74 = *(_QWORD *)(v73 + 48);
  v75 = *(void **)(*(_QWORD *)(v70 + 16) + 16);
  swift_bridgeObjectRetain(v74);
  v76 = v75;
  v77 = sub_10062219C(v76, v74);

  swift_bridgeObjectRelease();
  if ((v77 & 1) != 0)
  {
LABEL_36:
    swift_release(v70);
    v22 = v243;
    v24 = v240;
LABEL_37:
    v239 = (uint64_t *)(v24 + 48);
    swift_beginAccess(v24 + 48, &v271, 0, 0);
    v238 = (uint64_t *)(v22 + 40);
    swift_beginAccess(v22 + 40, &v270, 0, 0);
    sub_100D4EBD8();
    if (v78)
    {
      v79 = v78;
      v245 = xmmword_100EF5A10;
      do
      {
        v93 = *v239;
        v94 = *(void **)(*(_QWORD *)(v79 + 16) + 16);
        swift_bridgeObjectRetain(*v239);
        v95 = v94;
        v96 = sub_10062219C(v95, v93);

        swift_bridgeObjectRelease();
        if ((v96 & 1) != 0)
        {
          sub_1008973B4();
          v80 = (void *)static OS_os_log.dataSync;
          v81 = swift_allocObject(v254, 112, 7);
          *(_OWORD *)(v81 + 16) = v245;
          *(_QWORD *)(v81 + 56) = &type metadata for String;
          *(_QWORD *)(v81 + 64) = v71;
          *(_QWORD *)(v81 + 32) = v255;
          *(_QWORD *)(v81 + 40) = v253;
          v82 = *(void **)(*(_QWORD *)(v79 + 16) + 16);
          v83 = v80;
          v84 = objc_msgSend(v82, "zoneName");
          v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
          v87 = v86;

          *(_QWORD *)(v81 + 96) = &type metadata for String;
          *(_QWORD *)(v81 + 104) = v71;
          *(_QWORD *)(v81 + 72) = v85;
          *(_QWORD *)(v81 + 80) = v87;
          v89 = static os_log_type_t.default.getter(v88);
          sub_100A06EBC((uint64_t)v83, &_mh_execute_header, v89, "<%{public}@> Skipping batch part of a failed zone with ID: %{public}@", 69, 2, v81);
          swift_setDeallocating(v81);
          swift_arrayDestroy(v81 + 32, 2, v246);
          swift_deallocClassInstance(v81, 32, 7);

          v90 = type metadata accessor for CRLZoneSyncResultScenarios(0);
          v91 = (uint64_t)v251;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v251, 1, 1, v90);
          v23 = v244;
          sub_1007A9CA8(v79, 0, v91);
          swift_release(v79);
          sub_1004CB800(v91, &qword_1013F20B0);
        }
        else
        {
          v97 = (void *)static OS_os_log.dataSync;
          v98 = swift_initStackObject(v254, &v269);
          *(_OWORD *)(v98 + 16) = v245;
          *(_QWORD *)(v98 + 56) = &type metadata for String;
          *(_QWORD *)(v98 + 64) = v71;
          *(_QWORD *)(v98 + 32) = v255;
          *(_QWORD *)(v98 + 40) = v253;
          v99 = *(void **)(*(_QWORD *)(v79 + 16) + 16);
          v100 = v97;
          v101 = objc_msgSend(v99, "zoneName");
          v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
          v104 = v103;

          *(_QWORD *)(v98 + 96) = &type metadata for String;
          *(_QWORD *)(v98 + 104) = v71;
          v105 = (_QWORD *)v79;
          *(_QWORD *)(v98 + 72) = v102;
          *(_QWORD *)(v98 + 80) = v104;
          v107 = static os_log_type_t.default.getter(v106);
          sub_100A06EBC((uint64_t)v100, &_mh_execute_header, v107, "<%{public}@> Advancing to next batch. Zone ID: %{public}@", 57, 2, v98);
          swift_setDeallocating(v98);
          swift_arrayDestroy(v98 + 32, 2, v246);

          v108 = *(id *)(*(_QWORD *)(v79 + 16) + 16);
          v109 = *v238;
          if (*(_QWORD *)(*v238 + 16))
          {
            v110 = v108;
            swift_bridgeObjectRetain(v109);
            v111 = sub_100843B24(0);
            v112 = v243;
            v114 = v249;
            v113 = v250;
            v115 = v248;
            if ((v116 & 1) != 0)
            {
              sub_1004B8460(*(_QWORD *)(v109 + 56) + v249[9] * v111, v248, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
              ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v114[7])(v115, 0, 1, v113);
            }
            else
            {
              ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v249[7])(v248, 1, 1, v250);
            }
            v118 = swift_bridgeObjectRelease();
          }
          else
          {
            v115 = v248;
            v114 = v249;
            v113 = v250;
            ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v249[7])(v248, 1, 1, v250);
            v117 = v108;
            v112 = v243;
          }
          v119 = v254;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v114[6])(v115, 1, v113, v118))
          {
            sub_1004CB800(v115, &qword_1013F20E8);
            v23 = v244;
            v26 = (uint64_t)v258;
            goto LABEL_56;
          }
          v120 = v247;
          sub_1004B8460(v115, v247, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
          sub_1004CB800(v115, &qword_1013F20E8);
          v121 = sub_100793CD4(v108);
          sub_1004B84A4(v120, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);

          if (v121)
          {
            v23 = v244;
            v26 = (uint64_t)v258;
            goto LABEL_57;
          }
          v122 = (void *)static OS_os_log.dataSync;
          v123 = swift_allocObject(v119, 112, 7);
          *(_OWORD *)(v123 + 16) = v245;
          *(_QWORD *)(v123 + 56) = &type metadata for String;
          *(_QWORD *)(v123 + 64) = v71;
          *(_QWORD *)(v123 + 32) = v255;
          *(_QWORD *)(v123 + 40) = v253;
          v124 = *(void **)(v105[2] + 16);
          v125 = v122;
          v126 = objc_msgSend(v124, "zoneName");
          v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
          v129 = v128;

          *(_QWORD *)(v123 + 96) = &type metadata for String;
          *(_QWORD *)(v123 + 104) = v71;
          *(_QWORD *)(v123 + 72) = v127;
          *(_QWORD *)(v123 + 80) = v129;
          v131 = static os_log_type_t.default.getter(v130);
          sub_100A06EBC((uint64_t)v125, &_mh_execute_header, v131, "<%{public}@> Skipping batch for throttled Zone ID: %@", 53, 2, v123);
          swift_setDeallocating(v123);
          swift_arrayDestroy(v123 + 32, 2, v246);
          swift_deallocClassInstance(v123, 32, 7);
          swift_release(v105);

          v23 = v244;
        }
        v24 = v240;
        sub_100D4EBD8();
        v79 = v92;
        v26 = (uint64_t)v258;
      }
      while (v92);
    }
    swift_release(v243);
    swift_release(v24);
    swift_unknownObjectRelease(v242);
    goto LABEL_27;
  }
  v137 = (void *)static OS_os_log.dataSync;
  v138 = swift_allocObject(v254, 112, 7);
  *(_OWORD *)(v138 + 16) = xmmword_100EF5A10;
  v105 = (_QWORD *)v70;
  *(_QWORD *)(v138 + 56) = &type metadata for String;
  *(_QWORD *)(v138 + 64) = v71;
  *(_QWORD *)(v138 + 32) = v255;
  *(_QWORD *)(v138 + 40) = v253;
  v139 = *(void **)(*(_QWORD *)(v70 + 16) + 16);
  v108 = v137;
  v140 = objc_msgSend(v139, "zoneName");
  v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
  v143 = v142;

  v144 = v252;
  *(_QWORD *)(v138 + 96) = &type metadata for String;
  *(_QWORD *)(v138 + 104) = v144;
  *(_QWORD *)(v138 + 72) = v141;
  *(_QWORD *)(v138 + 80) = v143;
  v71 = v252;
  v146 = static os_log_type_t.default.getter(v145);
  sub_100A06EBC((uint64_t)v108, &_mh_execute_header, v146, "<%{public}@> The current batch previously had a recoverable save error. Attempting to save the batch again. Zone ID: %{public}@", 127, 2, v138);
  swift_setDeallocating(v138);
  swift_arrayDestroy(v138 + 32, 2, v246);
  swift_deallocClassInstance(v138, 32, 7);
  v112 = v243;
LABEL_56:

LABEL_57:
  v268 = (uint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess(v105 + 8, &v267, 0, 0);
  v147 = *(_QWORD *)(v105[8] + 16);
  v148 = v105[4];
  swift_retain(v105);
  swift_bridgeObjectRetain(v148);
  v149 = v246;
  if (v147)
  {
    v150 = sub_100898140(v148, (unint64_t)v105);
    swift_bridgeObjectRelease();
    v148 = (int64_t)v150;
  }
  v241 = v105;
  if (!((unint64_t)v148 >> 62))
  {
    v151 = *(_QWORD *)((v148 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v151)
      goto LABEL_61;
LABEL_98:
    v214 = swift_bridgeObjectRelease();
    v215 = v268;
    if ((unint64_t)v268 >> 62)
    {
      if (v268 < 0)
        v236 = v268;
      else
        v236 = v268 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v268);
      v216 = _CocoaArrayWrapper.endIndex.getter(v236);
      v214 = swift_bridgeObjectRelease();
    }
    else
    {
      v216 = *(_QWORD *)((v268 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v217 = v253;
    v218 = v255;
    if (v216)
    {
      v219 = v241;
      v220 = v257;
      CKSyncEngine.RecordZoneChangeBatch.init(recordsToSave:recordIDsToDelete:atomicByZone:)(v215, _swiftEmptyArrayStorage, *((unsigned __int8 *)v241 + 25), v214);
      swift_release(v112);
      swift_unknownObjectRelease(v242);
      swift_release(v219);
      v221 = v240;
      *(_BYTE *)(v240 + 32) = 1;
      swift_release(v221);
      v222 = sub_1004B804C(&qword_1013F20F8);
      v223 = *(int *)(v222 + 48);
      v224 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch(0);
      v225 = *(_QWORD *)(v224 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 16))(v26, v220, v224);
      v226 = v219[2];
      swift_retain(v226);
      swift_release(v219);
      v227 = *(id *)(v226 + 16);
      v228 = swift_release(v226);
      *(_QWORD *)(v26 + v223) = v227;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v222 - 8) + 56))(v26, 0, 1, v222, v228);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v225 + 56))(v220, 0, 1, v224);
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    v229 = (void *)static OS_os_log.dataSync;
    v230 = swift_initStackObject(v254, &v264);
    *(_OWORD *)(v230 + 16) = v256;
    v231 = v252;
    *(_QWORD *)(v230 + 56) = &type metadata for String;
    *(_QWORD *)(v230 + 64) = v231;
    *(_QWORD *)(v230 + 32) = v218;
    *(_QWORD *)(v230 + 40) = v217;
    v232 = v229;
    v234 = static os_log_type_t.default.getter(v233);
    sub_100A06EBC((uint64_t)v232, &_mh_execute_header, v234, "<%{public}@> No records are available to add to a batch save", 60, 2, v230);
    v235 = v241;
    swift_release(v241);
    swift_setDeallocating(v230);
    swift_arrayDestroy(v230 + 32, 1, v149);
    swift_release(v112);
    swift_release(v240);
    swift_unknownObjectRelease(v242);
    swift_release(v235);

LABEL_27:
    v64 = sub_1004B804C(&qword_1013F20F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v26, 1, 1, v64);
    v65 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v257, 1, 1, v65);
LABEL_28:
    v49 = v26;
    v50 = v23;
    goto LABEL_29;
  }
  if (v148 < 0)
    v213 = v148;
  else
    v213 = v148 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v148);
  v151 = _CocoaArrayWrapper.endIndex.getter(v213);
  swift_bridgeObjectRelease();
  if (!v151)
    goto LABEL_98;
LABEL_61:
  if (v151 >= 1)
  {
    v248 = v148 & 0xC000000000000001;
    v249 = v241 + 6;
    swift_beginAccess(v241 + 6, &v266, 0, 0);
    v152 = 0;
    v247 = xmmword_100EF5A10;
    v239 = (uint64_t *)((char *)&type metadata for Swift.AnyObject + 8);
    v250 = v151;
    v251 = (char *)v148;
    while (1)
    {
      if (v248)
        v158 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v152, v148);
      else
        v158 = *(id *)(v148 + 8 * v152 + 32);
      v156 = v158;
      v159 = *v249;
      if ((*v249 & 0xC000000000000001) != 0)
      {
        if (v159 < 0)
          v160 = *v249;
        else
          v160 = v159 & 0xFFFFFFFFFFFFFF8;
        v161 = v158;
        swift_bridgeObjectRetain(v159);
        v162 = __CocoaDictionary.lookup(_:)(v161, v160);
        if (!v162)
          goto LABEL_80;
        v163 = v162;
        v260 = v162;
        v164 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
        swift_unknownObjectRetain(v163);
        swift_dynamicCast(&v261, &v260, (char *)&type metadata for Swift.AnyObject + 8, v164, 7);
        v165 = (id)v261;
        swift_unknownObjectRelease(v163);
      }
      else
      {
        if (!*(_QWORD *)(v159 + 16))
          goto LABEL_81;
        v161 = v158;
        swift_bridgeObjectRetain(v159);
        v166 = sub_100843848((uint64_t)v161);
        if ((v167 & 1) == 0)
        {
LABEL_80:

          swift_bridgeObjectRelease();
          goto LABEL_81;
        }
        v165 = *(id *)(*(_QWORD *)(v159 + 56) + 8 * v166);
      }

      swift_bridgeObjectRelease();
      if (v165)
      {
        v168 = (void *)static OS_os_log.dataSync;
        v169 = swift_allocObject(v254, 112, 7);
        *(_OWORD *)(v169 + 16) = v247;
        *(_QWORD *)(v169 + 56) = &type metadata for String;
        *(_QWORD *)(v169 + 64) = v71;
        *(_QWORD *)(v169 + 32) = v255;
        *(_QWORD *)(v169 + 40) = v253;
        v261 = 0x203A65707954;
        v262 = 0xE600000000000000;
        *(_QWORD *)&v245 = v168;
        v171._countAndFlagsBits = CKRecord.recordType.getter(v170);
        String.append(_:)(v171);
        swift_bridgeObjectRelease();
        v172._countAndFlagsBits = 0x203A444920;
        v172._object = (void *)0xE500000000000000;
        String.append(_:)(v172);
        v173 = objc_msgSend(v165, "recordID");
        v174 = objc_msgSend(v173, "recordName");

        v175 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
        v177 = v176;

        v178._countAndFlagsBits = v175;
        v178._object = v177;
        String.append(_:)(v178);
        v179 = swift_bridgeObjectRelease();
        v180 = v261;
        v181 = v262;
        v182 = v252;
        *(_QWORD *)(v169 + 96) = &type metadata for String;
        *(_QWORD *)(v169 + 104) = v182;
        *(_QWORD *)(v169 + 72) = v180;
        *(_QWORD *)(v169 + 80) = v181;
        v183 = static os_log_type_t.default.getter(v179);
        v184 = (void *)v245;
        sub_100A06EBC(v245, &_mh_execute_header, v183, "<%{public}@> Adding record %{public}@ to batch save that was previously merged with the server record", 101, 2, v169);
        swift_setDeallocating(v169);
        swift_arrayDestroy(v169 + 32, 2, v246);
        swift_deallocClassInstance(v169, 32, 7);
LABEL_91:

        v154 = v165;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v154);
        v211 = *(_QWORD *)((v268 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v210 = *(_QWORD *)((v268 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v211 >= v210 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v210 > 1, v211 + 1, 1);
        v212 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v211, v154);
        specialized Array._endMutation()(v212);
        v112 = v243;
        v23 = v244;
        v26 = (uint64_t)v258;
        v71 = v252;
        goto LABEL_65;
      }
LABEL_81:
      v185 = v241[5];
      if ((v185 & 0xC000000000000001) != 0)
      {
        if (v185 >= 0)
          v185 &= 0xFFFFFFFFFFFFFF8uLL;
        v186 = __CocoaDictionary.lookup(_:)(v156, v185);
        if (!v186)
          goto LABEL_63;
        v187 = v186;
        v260 = v186;
        v188 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
        swift_unknownObjectRetain(v187);
        swift_dynamicCast(&v261, &v260, v239, v188, 7);
        v165 = (id)v261;
        swift_unknownObjectRelease(v187);

        if (v165)
          goto LABEL_90;
      }
      else
      {
        if (!*(_QWORD *)(v185 + 16))
          goto LABEL_64;
        v189 = sub_100843848((uint64_t)v156);
        if ((v190 & 1) == 0)
        {
LABEL_63:

          goto LABEL_64;
        }
        v165 = *(id *)(*(_QWORD *)(v185 + 56) + 8 * v189);

        if (v165)
        {
LABEL_90:
          v191 = (void *)static OS_os_log.dataSync;
          v192 = swift_initStackObject(v254, &v263);
          v193 = v71;
          v194 = (_QWORD *)v192;
          *(_OWORD *)(v192 + 16) = v247;
          *(_QWORD *)(v192 + 56) = &type metadata for String;
          *(_QWORD *)(v192 + 64) = v193;
          *(_QWORD *)(v192 + 32) = v255;
          v195 = v192 + 32;
          *(_QWORD *)(v192 + 40) = v253;
          v261 = 0x203A65707954;
          v262 = 0xE600000000000000;
          *(_QWORD *)&v245 = v191;
          v197._countAndFlagsBits = CKRecord.recordType.getter(v196);
          String.append(_:)(v197);
          swift_bridgeObjectRelease();
          v198._countAndFlagsBits = 0x203A444920;
          v198._object = (void *)0xE500000000000000;
          String.append(_:)(v198);
          v199 = objc_msgSend(v165, "recordID");
          v200 = objc_msgSend(v199, "recordName");

          v201 = static String._unconditionallyBridgeFromObjectiveC(_:)(v200);
          v203 = v202;

          v204._countAndFlagsBits = v201;
          v204._object = v203;
          String.append(_:)(v204);
          v205 = swift_bridgeObjectRelease();
          v206 = v261;
          v207 = v262;
          v208 = v252;
          v194[12] = &type metadata for String;
          v194[13] = v208;
          v194[9] = v206;
          v194[10] = v207;
          v209 = static os_log_type_t.default.getter(v205);
          v184 = (void *)v245;
          sub_100A06EBC(v245, &_mh_execute_header, v209, "<%{public}@> Adding record %{public}@ to batch save from local changes", 70, 2, (uint64_t)v194);
          swift_setDeallocating(v194);
          swift_arrayDestroy(v195, 2, v246);
          goto LABEL_91;
        }
      }
LABEL_64:
      *(_QWORD *)&v245 = static OS_os_log.dataSync;
      v153 = swift_initStackObject(v254, &v265);
      *(_OWORD *)(v153 + 16) = v247;
      *(_QWORD *)(v153 + 56) = &type metadata for String;
      *(_QWORD *)(v153 + 64) = v71;
      *(_QWORD *)(v153 + 32) = v255;
      *(_QWORD *)(v153 + 40) = v253;
      *(_QWORD *)(v153 + 96) = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
      *(_QWORD *)(v153 + 104) = sub_1005A15B8((unint64_t *)&qword_1013F2108, &qword_1013E8810, CKRecordID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v153 + 72) = v156;
      v154 = v156;
      v155 = (id)v245;
      v112 = v243;
      v156 = v155;
      v157 = static os_log_type_t.error.getter(v155);
      sub_100A06EBC((uint64_t)v156, &_mh_execute_header, v157, "<%{public}@> Failed to find a cloud record for record ID %{public}@ for saving the batch", 88, 2, v153);
      swift_setDeallocating(v153);
      swift_arrayDestroy(v153 + 32, 2, v246);
LABEL_65:
      ++v152;

      v148 = (int64_t)v251;
      v149 = v246;
      if (v250 == v152)
        goto LABEL_98;
    }
  }
  __break(1u);
}

double sub_1007A6160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[72];
  _BYTE v46[24];
  _BYTE v47[72];
  _BYTE v48[24];

  v4 = sub_1004B804C(&qword_1013F20F0);
  __chkstk_darwin(v4);
  v6 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C(&qword_1013F20F8);
  v8 = __chkstk_darwin(v7);
  v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 48);
  if (v12(a1, 1, v7, v8) != 1
    || (v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask)) == 0
    || (*(_BYTE *)(v13 + 32) & 1) != 0)
  {
LABEL_10:
    sub_1004CB7BC(a1, (uint64_t)v6, &qword_1013F20F0);
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v12)(v6, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v6, &qword_1013F20F0);
    }
    else
    {
      v18 = *(int *)(v7 + 48);
      v19 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v10, v6, v19);
      v20 = *(void **)&v6[v18];
      *(_QWORD *)&v10[v18] = v20;
      v21 = qword_1013DD870;
      v22 = v20;
      if (v21 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v48, 0, 0);
      v23 = (void *)static OS_os_log.dataSync;
      v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v24, v47);
      v26 = inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v27 = 0x5320646572616853;
      else
        v27 = 0x2065746176697250;
      if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v28 = 0xEC00000065706F63;
      else
        v28 = 0xED000065706F6353;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(v26 + 32) = v27;
      *(_QWORD *)(v26 + 40) = v28;
      v29 = v23;
      v31 = static os_log_type_t.default.getter(v30);
      sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v31, "<%{public}@> There is another batch to save in the current save task. Incrementing attempts for save.", 101, 2, v26);
      swift_setDeallocating(v26);
      v32 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v26 + 32, 1, v32);

      v33 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
      if (v33)
      {
        swift_retain(v33);
        sub_1007944A4(0, v22);

        swift_release(v33);
        sub_1004CB800((uint64_t)v10, &qword_1013F20F8);
      }
      else
      {
        sub_1004CB800((uint64_t)v10, &qword_1013F20F8);

      }
    }
    return result;
  }
  swift_beginAccess(v13 + 40, v46, 0, 0);
  v14 = *(_QWORD *)(v13 + 40);
  if ((v14 & 0xC000000000000001) != 0)
  {
    if (v14 < 0)
      v15 = *(_QWORD *)(v13 + 40);
    else
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_retain(v13);
    swift_bridgeObjectRetain(v14);
    v16 = __CocoaSet.count.getter(v15);
    swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_9;
  }
  else
  {
    v34 = *(_QWORD *)(v14 + 16);
    swift_retain(v13);
    if (v34)
    {
LABEL_9:
      swift_release(v13);
      goto LABEL_10;
    }
  }
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v48, 0, 0);
  v35 = (void *)static OS_os_log.dataSync;
  v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v37 = swift_initStackObject(v36, v45);
  v38 = v37;
  *(_OWORD *)(v37 + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v39 = 0x5320646572616853;
  else
    v39 = 0x2065746176697250;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v40 = 0xEC00000065706F63;
  else
    v40 = 0xED000065706F6353;
  *(_QWORD *)(v37 + 56) = &type metadata for String;
  *(_QWORD *)(v37 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v38 + 32) = v39;
  *(_QWORD *)(v38 + 40) = v40;
  v41 = v35;
  v43 = static os_log_type_t.default.getter(v42);
  sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "<%{public}@> No batch left to save in the current save task. Finishing the save task", 84, 2, v38);
  swift_setDeallocating(v38);
  v44 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v38 + 32, 1, v44);

  sub_10079BFA4();
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1007A6610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t Changes;
  uint64_t v5;
  uint64_t ChangesOptions;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[30] = a2;
  v3[31] = v2;
  v3[29] = a1;
  Changes = type metadata accessor for CKSyncEngine.FetchChangesOptions.Scope(0);
  v3[32] = Changes;
  v5 = *(_QWORD *)(Changes - 8);
  v3[33] = v5;
  v3[34] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions(0);
  v3[35] = ChangesOptions;
  v7 = *(_QWORD *)(ChangesOptions - 8);
  v3[36] = v7;
  v3[37] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CKSyncEngine.SyncReason(0);
  v3[38] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[39] = v9;
  v3[40] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1007A66C4, 0, 0);
}

uint64_t sub_1007A66C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*Changes)(uint64_t, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ChangesContext;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 240), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for CKSyncEngine.SyncReason.scheduled(_:))
  {
    v6 = *(_QWORD *)(v0 + 288);
    v5 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 280);
    v9 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 104))(v7, enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), *(_QWORD *)(v0 + 256));
    CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)(v7, 0);
    v11 = *sub_1004BB5A4((_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider), *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider + 24));
    v12 = sub_1004B804C(&qword_1013F20E0);
    OS_dispatch_queue.sync<A>(execute:)(sub_1007B0FDC, v11, v12);
    CKSyncEngine.FetchChangesOptions.prioritizedZoneIDs.setter(*(_QWORD *)(v0 + 224));
    v13 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC8Freeform17CRLSyncController_shouldFetchAssets);
    Changes = (void (*)(uint64_t, _QWORD))CKSyncEngine.FetchChangesOptions.defaultZoneConfiguration.modify(v0 + 160);
    CKSyncEngine.FetchChangesOptions.ZoneConfiguration.shouldFetchAssetContents.setter(v13);
    Changes(v0 + 160, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, v5, v8);
  }
  else if (v4 == enum case for CKSyncEngine.SyncReason.manual(_:))
  {
    v15 = *(_QWORD *)(v0 + 280);
    v16 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 240);
    ChangesContext = type metadata accessor for FetchChangesContext(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v18 + *(int *)(ChangesContext + 20), v15);
  }
  else
  {
    v53 = v0 + 128;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    v51 = *(_QWORD *)(v0 + 312);
    v52 = *(_QWORD *)(v0 + 320);
    v20 = *(_QWORD *)(v0 + 296);
    v49 = *(_QWORD *)(v0 + 288);
    v50 = *(_QWORD *)(v0 + 280);
    v45 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 272);
    v21 = *(_QWORD *)(v0 + 248);
    v47 = *(_QWORD *)(v0 + 256);
    v43 = *(_QWORD *)(v0 + 304);
    v44 = v21;
    v48 = *(_QWORD *)(v0 + 232);
    swift_beginAccess(&static OS_os_log.dataSync, v0 + 192, 0, 0);
    v22 = (void *)static OS_os_log.dataSync;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v0 + 16);
    v25 = (_QWORD *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v26 = *(_BYTE *)(v21 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
    if (*(_BYTE *)(v21 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v27 = 0x5320646572616853;
    else
      v27 = 0x2065746176697250;
    if (v26)
      v28 = 0xED000065706F6353;
    else
      v28 = 0xEC00000065706F63;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    v25[8] = v29;
    v25[4] = v27;
    v25[5] = v28;
    v30 = sub_1005034A0(&qword_1013F20D8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.SyncReason, (uint64_t)&protocol conformance descriptor for CKSyncEngine.SyncReason);
    v31 = v22;
    v32 = dispatch thunk of CustomStringConvertible.description.getter(v43, v30);
    v25[12] = &type metadata for String;
    v25[13] = v29;
    v25[9] = v32;
    v25[10] = v33;
    v34 = static os_log_type_t.error.getter(v32);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v34, "<%{public}@> encountered unknown FetchChangesContext.Reason %@", 62, 2, (uint64_t)v25);
    swift_setDeallocating(v25);
    v35 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 4, 2, v35);

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v45 + 104))(v46, enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), v47);
    CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)(v46, 0);
    v36 = *sub_1004BB5A4((_QWORD *)(v44 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider), *(_QWORD *)(v44 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider + 24));
    v37 = sub_1004B804C(&qword_1013F20E0);
    OS_dispatch_queue.sync<A>(execute:)(sub_1007B0FDC, v36, v37);
    CKSyncEngine.FetchChangesOptions.prioritizedZoneIDs.setter(*(_QWORD *)(v0 + 216));
    v38 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC8Freeform17CRLSyncController_shouldFetchAssets);
    v39 = (void (*)(uint64_t, _QWORD))CKSyncEngine.FetchChangesOptions.defaultZoneConfiguration.modify(v53);
    CKSyncEngine.FetchChangesOptions.ZoneConfiguration.shouldFetchAssetContents.setter(v38);
    v39(v53, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v48, v20, v50);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v43);
  }
  v40 = *(_QWORD *)(v0 + 296);
  v41 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007A6B34(void *a1, void *a2, unsigned __int8 a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v14 = swift_allocObject(&unk_10127DB18, 48, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = v3;
  aBlock[4] = sub_1007B0F10;
  v28 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10127DB30;
  v15 = _Block_copy(aBlock);
  v16 = v13;
  sub_1006121CC(a1, a2, a3);
  v17 = v3;
  static DispatchQoS.unspecified.getter(v18);
  v26 = _swiftEmptyArrayStorage;
  v19 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v21 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v7, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

double sub_1007A6D54(void *a1, void *a2, unsigned __int8 a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = swift_allocObject(&unk_10127DB68, 64, 7);
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  *(_BYTE *)(v12 + 48) = a3;
  *(_QWORD *)(v12 + 56) = a4;
  sub_1006121CC(a1, a2, a3);
  v13 = a4;
  v14 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013F20D0, v12);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1007A6E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 272) = a5;
  *(_QWORD *)(v7 + 280) = a7;
  *(_BYTE *)(v7 + 320) = a6;
  *(_QWORD *)(v7 + 264) = a4;
  return swift_task_switch(sub_1007A6E60, 0, 0);
}

uint64_t sub_1007A6E60()
{
  uint64_t v0;
  int v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char **v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t *v21;
  unint64_t v22;
  void *v23;
  uint64_t *v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  _QWORD *v39;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  void *v50;

  v1 = *(unsigned __int8 *)(v0 + 320);
  if (v1 == 2)
  {
    v2 = *(void **)(v0 + 272);
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    v2 = 0;
LABEL_5:
    v3 = *(void **)(v0 + 264);
    v4 = v3;
    goto LABEL_7;
  }
  v4 = 0;
  v3 = *(void **)(v0 + 264);
  v2 = v3;
LABEL_7:
  *(_QWORD *)(v0 + 288) = v2;
  *(_QWORD *)(v0 + 296) = v4;
  v48 = v2;
  sub_1006121CC(v3, *(void **)(v0 + 272), v1);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  v5 = *(_QWORD *)(v0 + 280);
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 240, 0, 0);
  v6 = (void *)static OS_os_log.dataSync;
  v47 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v47, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v8 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  v10 = v9;
  v11 = 0x2065746176697250;
  if (v8)
    v11 = 0x5320646572616853;
  v46 = v11;
  *(_QWORD *)(inited + 32) = v11;
  v12 = inited + 32;
  v13 = 0xED000065706F6353;
  if (v8)
    v13 = 0xEC00000065706F63;
  *(_QWORD *)(inited + 64) = v9;
  v45 = v13;
  *(_QWORD *)(inited + 40) = v13;
  v14 = &selRef_parentMapOfItemsFrom_;
  v49 = v6;
  v50 = v4;
  if (!v4)
  {
    v21 = (uint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v9;
    v22 = v9;
    v25 = v6;
    v23 = v48;
    goto LABEL_19;
  }
  v15 = v6;
  v16 = objc_msgSend(v4, "recordName");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v21 = (uint64_t *)(inited + 72);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v10;
  v22 = v10;
  if (!v19)
  {
    v23 = v48;
    v14 = &selRef_parentMapOfItemsFrom_;
LABEL_19:
    *v21 = 7104878;
    *(_QWORD *)(inited + 80) = 0xE300000000000000;
    if (!v23)
      goto LABEL_16;
    goto LABEL_20;
  }
  *v21 = v17;
  v23 = v48;
  v14 = &selRef_parentMapOfItemsFrom_;
  *(_QWORD *)(inited + 80) = v19;
  if (!v48)
  {
LABEL_16:
    v24 = (uint64_t *)(inited + 112);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v22;
    goto LABEL_22;
  }
LABEL_20:
  v26 = objc_msgSend(v23, v14[46]);
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v24 = (uint64_t *)(inited + 112);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v22;
  if (v29)
  {
    *v24 = v27;
    goto LABEL_23;
  }
LABEL_22:
  *v24 = 7104878;
  v29 = 0xE300000000000000;
LABEL_23:
  *(_QWORD *)(inited + 120) = v29;
  v30 = static os_log_type_t.default.getter(v20);
  sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v30, "<%{public}@> Received account changed notification. From %@ to %@", 65, 2, inited);
  swift_setDeallocating(inited);
  v31 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v12, 3, v31);

  if (v50)
  {
    if (v23)
    {
      sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
      v32 = v23;
      v33 = v50;
      v34 = static NSObject.== infix(_:_:)(v33, v32);

      if ((v34 & 1) != 0)
        goto LABEL_30;
    }
LABEL_28:
    v35 = *(_QWORD *)(*(_QWORD *)(v0 + 280) + OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager);
    *(_QWORD *)(v0 + 304) = v35;
    v36 = dword_1013F1D5C;
    v37 = v23;
    v38 = v50;
    swift_retain(v35);
    v39 = (_QWORD *)swift_task_alloc(v36);
    *(_QWORD *)(v0 + 312) = v39;
    *v39 = v0;
    v39[1] = sub_1007A72D4;
    v39[13] = v23;
    v39[14] = v35;
    v39[12] = v50;
    return swift_task_switch(sub_1007959BC, v35, 0);
  }
  if (v23)
    goto LABEL_28;
  v33 = 0;
  v32 = 0;
LABEL_30:
  v41 = (void *)static OS_os_log.dataSync;
  v42 = swift_initStackObject(v47, v0 + 168);
  *(_OWORD *)(v42 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v42 + 56) = &type metadata for String;
  *(_QWORD *)(v42 + 64) = v22;
  *(_QWORD *)(v42 + 32) = v46;
  *(_QWORD *)(v42 + 40) = v45;
  v43 = v41;
  v44 = static os_log_type_t.error.getter(v43);
  sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v44, "<%{public}@> Unexpected account change state. Both old and new user records are same", 84, 2, v42);
  swift_setDeallocating(v42);
  swift_arrayDestroy(v42 + 32, 1, v31);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007A72D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  v3 = *(void **)(*(_QWORD *)v0 + 288);
  v2 = *(void **)(*(_QWORD *)v0 + 296);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));

  swift_release(v1);
  return swift_task_switch(sub_1007A7344, 0, 0);
}

uint64_t sub_1007A7344()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 288);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1007A7378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[112];
  _BYTE v32[32];

  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v4 = 0x5320646572616853;
    else
      v4 = 0x2065746176697250;
    v5 = 0xED000065706F6353;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v5 = 0xEC00000065706F63;
    v28 = v5;
    v29 = v4;
    swift_bridgeObjectRetain(a1);
    v7 = 0;
    v27 = v6;
    do
    {
      v8 = qword_1013DD870;
      v9 = *(id *)(v6 + 8 * v7 + 32);
      if (v8 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      ++v7;
      swift_beginAccess(&static OS_os_log.dataSync, v32, 0, 0);
      v10 = (void *)static OS_os_log.dataSync;
      v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v11, v31);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v13 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v13;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v28;
      v14 = v10;
      v15 = objc_msgSend(v9, "zoneName");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v13;
      *(_QWORD *)(inited + 72) = v16;
      *(_QWORD *)(inited + 80) = v18;
      v20 = static os_log_type_t.default.getter(v19);
      sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v20, "<%{public}@> zoneWithIDWasModified name: %{public}@", 51, 2, inited);
      swift_setDeallocating(inited);
      v21 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v21);

      v6 = v27;
    }
    while (v30 != v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    a2 = v26;
  }
  v23 = *(_QWORD *)(a2 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain(a2);
    v24 = (_BYTE *)(a2 + 40);
    do
    {
      v25 = (void *)*((_QWORD *)v24 - 1);
      if (*v24)
      {
        if (*v24 == 1)
          sub_1007A78B8(v25);
        else
          sub_1007A7B78(v25);
      }
      else
      {
        sub_1007A75F8(v25);
      }

      v24 += 16;
      --v23;
    }
    while (v23);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_1007A75F8(void *a1)
{
  _BYTE *v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BYTE *v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  _QWORD v27[5];
  uint64_t v28;
  char v29[112];
  char v30[32];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v30, 0, 0);
  v3 = (void *)static OS_os_log.dataSync;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v29);
  v6 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v7 = 0x5320646572616853;
  else
    v7 = 0x2065746176697250;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v8 = 0xEC00000065706F63;
  else
    v8 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  v6[8] = v9;
  v6[4] = v7;
  v6[5] = v8;
  v10 = v3;
  v11 = objc_msgSend(a1, "zoneName");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v6[12] = &type metadata for String;
  v6[13] = v9;
  v6[9] = v12;
  v6[10] = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v16, "<%{public}@> zoneWithIDWasDeleted name: %{public}@", 50, 2, (uint64_t)v6);
  swift_setDeallocating(v6);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v6 + 4, 2, v17);

  v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v19 = swift_allocObject(&unk_10127DAA0, 32, 7);
  *(_QWORD *)(v19 + 16) = v1;
  *(_QWORD *)(v19 + 24) = a1;
  v20 = swift_allocObject(&unk_10127DAC8, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1007B22D4;
  *(_QWORD *)(v20 + 24) = v19;
  v27[4] = sub_1005B72B0;
  v28 = v20;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = *(_QWORD *)"";
  v27[2] = sub_100618D24;
  v27[3] = &unk_10127DAE0;
  v21 = _Block_copy(v27);
  v22 = v28;
  v23 = v18;
  v24 = v1;
  v25 = a1;
  swift_retain(v20);
  swift_release(v22);
  dispatch_sync(v23, v21);

  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 82, 1704, 20, 1);
  swift_release(v19);
  swift_release(v20);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1007A78B8(void *a1)
{
  _BYTE *v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BYTE *v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  _QWORD v27[5];
  uint64_t v28;
  char v29[112];
  char v30[32];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v30, 0, 0);
  v3 = (void *)static OS_os_log.dataSync;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v29);
  v6 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v7 = 0x5320646572616853;
  else
    v7 = 0x2065746176697250;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v8 = 0xEC00000065706F63;
  else
    v8 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  v6[8] = v9;
  v6[4] = v7;
  v6[5] = v8;
  v10 = v3;
  v11 = objc_msgSend(a1, "zoneName");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v6[12] = &type metadata for String;
  v6[13] = v9;
  v6[9] = v12;
  v6[10] = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v16, "<%{public}@> zoneWithIDWasPurged name: %{public}@", 49, 2, (uint64_t)v6);
  swift_setDeallocating(v6);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v6 + 4, 2, v17);

  v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v19 = swift_allocObject(&unk_10127DA28, 32, 7);
  *(_QWORD *)(v19 + 16) = v1;
  *(_QWORD *)(v19 + 24) = a1;
  v20 = swift_allocObject(&unk_10127DA50, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1007B0E9C;
  *(_QWORD *)(v20 + 24) = v19;
  v27[4] = sub_1005B72B0;
  v28 = v20;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = *(_QWORD *)"";
  v27[2] = sub_100618D24;
  v27[3] = &unk_10127DA68;
  v21 = _Block_copy(v27);
  v22 = v28;
  v23 = v18;
  v24 = v1;
  v25 = a1;
  swift_retain(v20);
  swift_release(v22);
  dispatch_sync(v23, v21);

  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 82, 1712, 20, 1);
  swift_release(v19);
  swift_release(v20);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1007A7B78(void *a1)
{
  _BYTE *v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BYTE *v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  _QWORD v27[5];
  uint64_t v28;
  char v29[112];
  char v30[32];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v30, 0, 0);
  v3 = (void *)static OS_os_log.dataSync;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v29);
  v6 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v7 = 0x5320646572616853;
  else
    v7 = 0x2065746176697250;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v8 = 0xEC00000065706F63;
  else
    v8 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  v6[8] = v9;
  v6[4] = v7;
  v6[5] = v8;
  v10 = v3;
  v11 = objc_msgSend(a1, "zoneName");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v6[12] = &type metadata for String;
  v6[13] = v9;
  v6[9] = v12;
  v6[10] = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v16, "<%{public}@> zoneWithIDWasDeletedDueToUserEncryptedDataReset name: %{public}@", 77, 2, (uint64_t)v6);
  swift_setDeallocating(v6);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v6 + 4, 2, v17);

  v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v19 = swift_allocObject(&unk_10127D9B0, 32, 7);
  *(_QWORD *)(v19 + 16) = v1;
  *(_QWORD *)(v19 + 24) = a1;
  v20 = swift_allocObject(&unk_10127D9D8, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1007B0E68;
  *(_QWORD *)(v20 + 24) = v19;
  v27[4] = sub_1005B72B0;
  v28 = v20;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = *(_QWORD *)"";
  v27[2] = sub_100618D24;
  v27[3] = &unk_10127D9F0;
  v21 = _Block_copy(v27);
  v22 = v28;
  v23 = v18;
  v24 = v1;
  v25 = a1;
  swift_retain(v20);
  swift_release(v22);
  dispatch_sync(v23, v21);

  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 82, 1720, 20, 1);
  swift_release(v19);
  swift_release(v20);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1007A7E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  id v23;
  char v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD, uint64_t);
  unsigned int v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[144];
  _BYTE v52[16];

  v47 = type metadata accessor for DispatchPredicate(0);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (_QWORD *)((char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(a1);
    v8 = 0;
    do
    {
      v9 = *(void **)(a1 + 8 * v8++ + 32);
      v10 = v9;
      sub_1007A8214(v10);

    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v12 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
    v45 = OBJC_IVAR____TtC8Freeform17CRLSyncController_queue;
    v44 = enum case for DispatchPredicate.onQueue(_:);
    v43 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v48 + 104);
    v13 = 0x2065746176697250;
    if (v12)
      v13 = 0x5320646572616853;
    v42 = v13;
    v14 = 0xED000065706F6353;
    if (v12)
      v14 = 0xEC00000065706F63;
    v41 = v14;
    swift_bridgeObjectRetain(a2);
    v38[1] = a2;
    v15 = (uint64_t *)(a2 + 48);
    v39 = xmmword_100EF5550;
    v40 = a3;
    while (1)
    {
      v16 = (void *)*(v15 - 2);
      v17 = *(v15 - 1);
      v18 = *v15;
      v19 = *(void **)(a3 + v45);
      v20 = v46;
      *v46 = v19;
      v21 = v47;
      v43(v20, v44, v47);
      v22 = v16;
      swift_bridgeObjectRetain(v18);
      v23 = v19;
      v24 = _dispatchPreconditionTest(_:)(v20);
      (*(void (**)(_QWORD *, uint64_t))(v48 + 8))(v20, v21);
      if ((v24 & 1) == 0)
        break;
      v25 = v22;
      v50 = v11;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      v15 += 3;
      swift_beginAccess(&static OS_os_log.dataSync, v52, 0, 0);
      v26 = (void *)static OS_os_log.dataSync;
      v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v27, v51);
      *(_OWORD *)(inited + 16) = v39;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v29 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v42;
      *(_QWORD *)(inited + 40) = v41;
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v29;
      *(_QWORD *)(inited + 64) = v29;
      *(_QWORD *)(inited + 72) = v17;
      v49 = v17;
      *(_QWORD *)(inited + 80) = v18;
      swift_bridgeObjectRetain(v18);
      v30 = v26;
      v31 = objc_msgSend(v25, "recordName");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v29;
      *(_QWORD *)(inited + 112) = v32;
      *(_QWORD *)(inited + 120) = v34;
      v36 = static os_log_type_t.default.getter(v35);
      sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v36, "<%{public}@> SyncEngine fetched changed deleted record with type: %{public}@ id: %{public}@", 91, 2, inited);
      swift_setDeallocating(inited);
      v37 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v37);

      a3 = v40;
      sub_10079D50C(v25, v49, v18);
      swift_bridgeObjectRelease();

      v11 = v50 - 1;
      if (v50 == 1)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_1007A8214(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  _BYTE v54[32];

  v3 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (id *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    v50 = v3;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v54, 0, 0);
  v13 = (void *)static OS_os_log.dataSync;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, &v53);
  *(_OWORD *)(inited + 16) = xmmword_100F05060;
  v51 = v1;
  v16 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v17 = sub_1004CFC2C();
  v18 = v17;
  v19 = 0x2065746176697250;
  if (v16)
    v19 = 0x5320646572616853;
  *(_QWORD *)(inited + 32) = v19;
  v20 = 0xED000065706F6353;
  if (v16)
    v20 = 0xEC00000065706F63;
  *(_QWORD *)(inited + 64) = v17;
  *(_QWORD *)(inited + 40) = v20;
  v49 = v13;
  v22 = CKRecord.recordType.getter(v21);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v18;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = v23;
  v24 = objc_msgSend(a1, "recordID");
  v25 = objc_msgSend(v24, "recordName");

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v18;
  *(_QWORD *)(inited + 112) = v26;
  *(_QWORD *)(inited + 120) = v28;
  v29 = objc_msgSend(a1, "recordChangeTag");
  if (v29)
  {
    v30 = v29;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0;
  }
  v52[0] = v31;
  v52[1] = v33;
  v34 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  v35 = String.init<A>(describing:)(v52, v34);
  *(_QWORD *)(inited + 176) = &type metadata for String;
  *(_QWORD *)(inited + 184) = v18;
  *(_QWORD *)(inited + 152) = v35;
  *(_QWORD *)(inited + 160) = v36;
  v37 = objc_msgSend(a1, "modificationDate");
  if (v37)
  {
    v38 = v37;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v37);

    v39 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v5, 0, 1, v39);
  }
  else
  {
    v40 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v5, 1, 1, v40);
  }
  v41 = String.init<A>(describing:)(v5, v50);
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = v18;
  *(_QWORD *)(inited + 192) = v41;
  *(_QWORD *)(inited + 200) = v42;
  v44 = static os_log_type_t.default.getter(v43);
  v45 = v49;
  sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v44, "<%{public}@> SyncEngine fetched changed record with type: %{public}@ id: %{public}@ recordChangeTag: %{public}@ modificationDate: %@", 132, 2, inited);
  swift_setDeallocating(inited);
  v46 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 5, v46);

  v47 = objc_msgSend(a1, "recordID");
  v48 = (char *)objc_msgSend(v47, "zoneID");

  sub_1007A3778(v48, 1);
  sub_10079D308(a1);
}

double sub_1007A8608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1007A8D00(a1, a2, a3, a4, (uint64_t)&unk_10127D960, (uint64_t)sub_1007B0E1C, (uint64_t)&unk_10127D978);
}

void sub_1007A8624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id *a5)
{
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  id *v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  id v85;
  char v86[152];
  char v87[24];
  char v88[112];
  char v89[32];

  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(a2 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain(a2);
      v15 = (void **)(a2 + 40);
      do
      {
        v16 = *v15;
        v17 = *(v15 - 1);
        v18 = v16;
        sub_1007A2CC8(v17, v18);

        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    if ((unint64_t)a3 >> 62)
      goto LABEL_66;
    v19 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a3);
    while (1)
    {
      v20 = &unk_1013F1000;
      v80 = a5;
      if (v19)
      {
        if (v19 < 1)
          goto LABEL_71;
        v21 = 0;
        v77 = a3 & 0xC000000000000001;
        if (*((_BYTE *)a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v22 = 0x5320646572616853;
        else
          v22 = 0x2065746176697250;
        v23 = 0xED000065706F6353;
        if (*((_BYTE *)a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v23 = 0xEC00000065706F63;
        v74 = v23;
        v76 = v22;
        v81 = v19;
        v83 = a3;
        do
        {
          if (v77)
            v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, a3);
          else
            v24 = *(id *)(a3 + 8 * v21 + 32);
          v25 = v24;
          if (qword_1013DD870 != -1)
            swift_once(&qword_1013DD870, sub_100A059E0);
          ++v21;
          swift_beginAccess(&static OS_os_log.dataSync, v89, 0, 0);
          v26 = (void *)static OS_os_log.dataSync;
          v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v27, v88);
          *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          v29 = sub_1004CFC2C();
          *(_QWORD *)(inited + 64) = v29;
          *(_QWORD *)(inited + 32) = v76;
          *(_QWORD *)(inited + 40) = v74;
          v30 = v26;
          v31 = objc_msgSend(v25, "zoneName");
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v34 = v33;

          *(_QWORD *)(inited + 96) = &type metadata for String;
          *(_QWORD *)(inited + 104) = v29;
          *(_QWORD *)(inited + 72) = v32;
          *(_QWORD *)(inited + 80) = v34;
          v36 = static os_log_type_t.error.getter(v35);
          sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v36, "<%{public}@> Zone apparently deleted as part of client save. This is unexpected! Handling anyway. zoneID: %{public}@", 116, 2, inited);
          swift_setDeallocating(inited);
          v37 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 2, v37);

          a5 = v80;
          sub_1007A75F8(v25);

          a3 = v83;
        }
        while (v81 != v21);
        swift_bridgeObjectRelease();
        v20 = (_QWORD *)&unk_1013F1000;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v73 = a4 + 64;
      v38 = 1 << *(_BYTE *)(a4 + 32);
      v39 = -1;
      if (v38 < 64)
        v39 = ~(-1 << v38);
      v40 = v39 & *(_QWORD *)(a4 + 64);
      v78 = v20[450];
      v75 = (unint64_t)(v38 + 63) >> 6;
      swift_bridgeObjectRetain(a4);
      v41 = 0;
      if (v40)
      {
LABEL_38:
        v82 = (v40 - 1) & v40;
        v84 = v41;
        v42 = __clz(__rbit64(v40)) | (v41 << 6);
        v43 = v80;
        goto LABEL_53;
      }
      while (1)
      {
        v44 = v41 + 1;
        v43 = v80;
        if (__OFADD__(v41, 1))
        {
          __break(1u);
          goto LABEL_65;
        }
        if (v44 >= v75)
          goto LABEL_63;
        v45 = *(_QWORD *)(v73 + 8 * v44);
        v46 = v41 + 1;
        if (!v45)
        {
          v46 = v41 + 2;
          if (v41 + 2 >= v75)
            goto LABEL_63;
          v45 = *(_QWORD *)(v73 + 8 * v46);
          if (!v45)
          {
            v46 = v41 + 3;
            if (v41 + 3 >= v75)
              goto LABEL_63;
            v45 = *(_QWORD *)(v73 + 8 * v46);
            if (!v45)
              break;
          }
        }
LABEL_52:
        v82 = (v45 - 1) & v45;
        v84 = v46;
        v42 = __clz(__rbit64(v45)) + (v46 << 6);
LABEL_53:
        v48 = 8 * v42;
        v49 = *(void **)(*(_QWORD *)(a4 + 56) + v48);
        v50 = qword_1013DD870;
        v51 = *(id *)(*(_QWORD *)(a4 + 48) + v48);
        v52 = v49;
        if (v50 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v87, 0, 0);
        v53 = (void *)static OS_os_log.dataSync;
        v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v55 = swift_initStackObject(v54, v86);
        v56 = (_QWORD *)v55;
        *(_OWORD *)(v55 + 16) = xmmword_100EF5550;
        if (*((_BYTE *)v43 + v78))
          v57 = 0x5320646572616853;
        else
          v57 = 0x2065746176697250;
        if (*((_BYTE *)v43 + v78))
          v58 = 0xEC00000065706F63;
        else
          v58 = 0xED000065706F6353;
        *(_QWORD *)(v55 + 56) = &type metadata for String;
        v59 = sub_1004CFC2C();
        v56[8] = v59;
        v56[4] = v57;
        a3 = (uint64_t)(v56 + 4);
        v56[5] = v58;
        v60 = v53;
        v61 = objc_msgSend(v51, "zoneName");
        v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
        v64 = v63;

        v56[12] = &type metadata for String;
        v56[13] = v59;
        v56[9] = v62;
        v56[10] = v64;
        v85 = v52;
        type metadata accessor for CKError(0);
        v66 = v65;
        v67 = sub_1005034A0(&qword_1013DE530, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1374);
        a5 = &v85;
        v68 = Error.localizedDescription.getter(v66, v67);
        v56[17] = &type metadata for String;
        v56[18] = v59;
        v56[14] = v68;
        v56[15] = v69;
        v70 = static os_log_type_t.error.getter(v68);
        sub_100A06EBC((uint64_t)v60, &_mh_execute_header, v70, "<%{public}@> Zone apparently failed to be deleted as part of client save. This is unexpected! This will go unhandled. zoneID: %{public}@ error: %@", 146, 2, (uint64_t)v56);
        swift_setDeallocating(v56);
        v71 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v56 + 4, 3, v71);

        v40 = v82;
        v41 = v84;
        if (v82)
          goto LABEL_38;
      }
      v47 = v41 + 4;
      if (v41 + 4 >= v75)
      {
LABEL_63:
        swift_release(a4);
        return;
      }
      v45 = *(_QWORD *)(v73 + 8 * v47);
      if (v45)
        break;
      while (1)
      {
        v46 = v47 + 1;
        if (__OFADD__(v47, 1))
          break;
        if (v46 >= v75)
          goto LABEL_63;
        v45 = *(_QWORD *)(v73 + 8 * v46);
        ++v47;
        if (v45)
          goto LABEL_52;
      }
LABEL_65:
      __break(1u);
LABEL_66:
      if (a3 < 0)
        v72 = a3;
      else
        v72 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v19 = _CocoaArrayWrapper.endIndex.getter(v72);
    }
    v46 = v41 + 4;
    goto LABEL_52;
  }
  if (a1 < 0)
    v13 = a1;
  else
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v11 = *(id *)(a1 + 8 * i + 32);
      v12 = v11;
      sub_1007A285C(v11);

    }
    goto LABEL_13;
  }
  __break(1u);
LABEL_71:
  __break(1u);
}

double sub_1007A8CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1007A8D00(a1, a2, a3, a4, (uint64_t)&unk_10127D910, (uint64_t)sub_1007B0DC8, (uint64_t)&unk_10127D928);
}

double sub_1007A8D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  _QWORD aBlock[5];
  _QWORD *v36;

  v29 = a6;
  v30 = a7;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)&v7[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v20 = (_QWORD *)swift_allocObject(a5, 56, 7);
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = a3;
  v20[5] = a4;
  v20[6] = v7;
  aBlock[4] = v29;
  v36 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = v30;
  v21 = _Block_copy(aBlock);
  v22 = v19;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  v23 = v7;
  static DispatchQoS.unspecified.getter(v24);
  v34 = _swiftEmptyArrayStorage;
  v25 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v27 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v26, v27, v13, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v15, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v32);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

void sub_1007A8F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  _QWORD *v15;
  id v16;
  char v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t inited;
  unint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  unint64_t j;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int64_t v85;
  _QWORD *v86;
  void *v87;
  uint64_t v88;
  int64_t v89;
  unint64_t v90;
  unint64_t k;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  unint64_t v95;
  int64_t v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  int64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  _QWORD *v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  char v111[152];
  _QWORD *v112;
  char v113[112];
  uint64_t v114[4];

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v8)
      goto LABEL_13;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v8)
      goto LABEL_13;
  }
  if (v8 < 1)
    goto LABEL_98;
  for (i = 0; i != v8; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v10 = *(id *)(a1 + 8 * i + 32);
    v11 = v10;
    sub_10079F4D8(v10);

  }
LABEL_13:
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 16);
  v107 = a3;
  if (!v13)
  {
    v105 = _swiftEmptyDictionarySingleton;
    if (!((unint64_t)a3 >> 62))
      goto LABEL_22;
LABEL_38:
    if (a3 < 0)
      v47 = a3;
    else
      v47 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v109 = _CocoaArrayWrapper.endIndex.getter(v47);
    if (!v109)
      goto LABEL_42;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain(a2);
  v14 = (void **)(a2 + 40);
  v105 = _swiftEmptyDictionarySingleton;
  do
  {
    v18 = *v14;
    v19 = *(v14 - 1);
    v20 = v18;
    sub_10079FDD8(v19, v20);
    v112 = v20;
    type metadata accessor for CKError(0);
    v22 = v21;
    v23 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
    _BridgedStoredNSError.code.getter(v22, v23);
    v24 = v105;
    if (v105[2] && (v25 = sub_100843260(v114[0]), v24 = v105, (v26 & 1) != 0))
    {
      v27 = *(_QWORD *)(v105[7] + 16 * v25);
      v112 = v20;
      _BridgedStoredNSError.code.getter(v22, v23);
      if (__OFADD__(v27, 1))
        goto LABEL_95;
      v28 = v20;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v105);
      v112 = v105;
      sub_100828D04(v27 + 1, (uint64_t)v28, v114[0], isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = v24;
      _BridgedStoredNSError.code.getter(v22, v23);
      v16 = v20;
      v17 = swift_isUniquelyReferenced_nonNull_native(v15);
      v112 = v15;
      sub_100828D04(1, (uint64_t)v16, v114[0], v17);
      v105 = v15;

      swift_bridgeObjectRelease();
    }
    v14 += 2;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  if ((unint64_t)a3 >> 62)
    goto LABEL_38;
LABEL_22:
  v109 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  if (!v109)
    goto LABEL_42;
LABEL_23:
  if (v109 < 1)
    goto LABEL_99;
  v30 = 0;
  v102 = a3 & 0xC000000000000001;
  if (*(_BYTE *)(a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v31 = 0x5320646572616853;
  else
    v31 = 0x2065746176697250;
  v32 = 0xED000065706F6353;
  if (*(_BYTE *)(a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v32 = 0xEC00000065706F63;
  v99 = v32;
  v101 = v31;
  do
  {
    if (v102)
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a3);
    else
      v33 = *(id *)(a3 + 8 * v30 + 32);
    v34 = v33;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    ++v30;
    swift_beginAccess(&static OS_os_log.dataSync, v114, 0, 0);
    v35 = (void *)static OS_os_log.dataSync;
    v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v36, v113);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v38 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v38;
    *(_QWORD *)(inited + 32) = v101;
    *(_QWORD *)(inited + 40) = v99;
    v39 = v35;
    v40 = objc_msgSend(v34, "recordName");
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v38;
    *(_QWORD *)(inited + 72) = v41;
    *(_QWORD *)(inited + 80) = v43;
    v45 = static os_log_type_t.error.getter(v44);
    sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v45, "<%{public}@> Record apparently deleted as part of client save. This is unexpected! This will go unhandled. recordID: %{public}@", 127, 2, inited);
    swift_setDeallocating(inited);
    v46 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v46);

    a3 = v107;
  }
  while (v109 != v30);
LABEL_42:
  swift_bridgeObjectRelease();
  v98 = a4 + 64;
  v48 = 1 << *(_BYTE *)(a4 + 32);
  v49 = -1;
  if (v48 < 64)
    v49 = ~(-1 << v48);
  v50 = v49 & *(_QWORD *)(a4 + 64);
  v103 = OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope;
  v100 = (unint64_t)(v48 + 63) >> 6;
  swift_bridgeObjectRetain(a4);
  v51 = 0;
  if (!v50)
    goto LABEL_46;
LABEL_45:
  v108 = (v50 - 1) & v50;
  v110 = v51;
  for (j = __clz(__rbit64(v50)) | (v51 << 6); ; j = __clz(__rbit64(v54)) + (v55 << 6))
  {
    v57 = 8 * j;
    v58 = *(void **)(*(_QWORD *)(a4 + 56) + v57);
    v59 = qword_1013DD870;
    v60 = *(id *)(*(_QWORD *)(a4 + 48) + v57);
    v61 = v58;
    if (v59 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v112, 0, 0);
    v62 = (void *)static OS_os_log.dataSync;
    v63 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v64 = swift_initStackObject(v63, v111);
    v65 = (_QWORD *)v64;
    *(_OWORD *)(v64 + 16) = xmmword_100EF5550;
    if (*(_BYTE *)(a5 + v103))
      v66 = 0x5320646572616853;
    else
      v66 = 0x2065746176697250;
    if (*(_BYTE *)(a5 + v103))
      v67 = 0xEC00000065706F63;
    else
      v67 = 0xED000065706F6353;
    *(_QWORD *)(v64 + 56) = &type metadata for String;
    v68 = sub_1004CFC2C();
    v65[8] = v68;
    v65[4] = v66;
    v65[5] = v67;
    v69 = v62;
    v70 = objc_msgSend(v60, "recordName");
    v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v73 = v72;

    v65[12] = &type metadata for String;
    v65[13] = v68;
    v65[9] = v71;
    v65[10] = v73;
    type metadata accessor for CKError(0);
    v75 = v74;
    v76 = sub_1005034A0(&qword_1013DE530, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1374);
    v77 = Error.localizedDescription.getter(v75, v76);
    v65[17] = &type metadata for String;
    v65[18] = v68;
    v65[14] = v77;
    v65[15] = v78;
    v79 = static os_log_type_t.error.getter(v77);
    sub_100A06EBC((uint64_t)v69, &_mh_execute_header, v79, "<%{public}@> Record apparently failed to be deleted as part of client save. This is unexpected! This will go unhandled. recordID: %{public}@ error: %@", 150, 2, (uint64_t)v65);
    swift_setDeallocating(v65);
    v80 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v65 + 4, 3, v80);

    v50 = v108;
    v51 = v110;
    if (v108)
      goto LABEL_45;
LABEL_46:
    v53 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    if (v53 >= v100)
      goto LABEL_70;
    v54 = *(_QWORD *)(v98 + 8 * v53);
    v55 = v51 + 1;
    if (!v54)
    {
      v55 = v51 + 2;
      if (v51 + 2 >= v100)
        goto LABEL_70;
      v54 = *(_QWORD *)(v98 + 8 * v55);
      if (!v54)
      {
        v55 = v51 + 3;
        if (v51 + 3 >= v100)
          goto LABEL_70;
        v54 = *(_QWORD *)(v98 + 8 * v55);
        if (!v54)
          break;
      }
    }
LABEL_59:
    v108 = (v54 - 1) & v54;
    v110 = v55;
  }
  v56 = v51 + 4;
  if (v51 + 4 < v100)
  {
    v54 = *(_QWORD *)(v98 + 8 * v56);
    if (!v54)
    {
      while (1)
      {
        v55 = v56 + 1;
        if (__OFADD__(v56, 1))
          break;
        if (v55 >= v100)
          goto LABEL_70;
        v54 = *(_QWORD *)(v98 + 8 * v55);
        ++v56;
        if (v54)
          goto LABEL_59;
      }
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v55 = v51 + 4;
    goto LABEL_59;
  }
LABEL_70:
  swift_release(a4);
  v81 = v105 + 8;
  v82 = 1 << *((_BYTE *)v105 + 32);
  v83 = -1;
  if (v82 < 64)
    v83 = ~(-1 << v82);
  v84 = v83 & v105[8];
  v85 = (unint64_t)(v82 + 63) >> 6;
  swift_bridgeObjectRetain(v105);
  v87 = 0;
  v88 = 0;
  v89 = 0;
  if (!v84)
    goto LABEL_76;
LABEL_73:
  v90 = __clz(__rbit64(v84));
  v84 &= v84 - 1;
  for (k = v90 | (v89 << 6); ; k = __clz(__rbit64(v95)) + (v89 << 6))
  {
    v92 = v86[7];
    v93 = *(_QWORD *)(v92 + 16 * k);
    if (v88 < v93)
    {
      v97 = *(id *)(v92 + 16 * k + 8);

      v86 = v105;
      v87 = v97;
      v88 = v93;
      if (v84)
        goto LABEL_73;
    }
    else if (v84)
    {
      goto LABEL_73;
    }
LABEL_76:
    v94 = v89 + 1;
    if (__OFADD__(v89, 1))
      goto LABEL_94;
    if (v94 >= v85)
    {
LABEL_92:
      swift_release(v86);
      sub_1007A98C4(v87);
      swift_bridgeObjectRelease();

      return;
    }
    v95 = v81[v94];
    ++v89;
    if (!v95)
    {
      v89 = v94 + 1;
      if (v94 + 1 >= v85)
        goto LABEL_92;
      v95 = v81[v89];
      if (!v95)
      {
        v89 = v94 + 2;
        if (v94 + 2 >= v85)
          goto LABEL_92;
        v95 = v81[v89];
        if (!v95)
          break;
      }
    }
LABEL_89:
    v84 = (v95 - 1) & v95;
  }
  v96 = v94 + 3;
  if (v96 >= v85)
    goto LABEL_92;
  v95 = v81[v96];
  if (v95)
  {
    v89 = v96;
    goto LABEL_89;
  }
  while (1)
  {
    v89 = v96 + 1;
    if (__OFADD__(v96, 1))
      break;
    if (v89 >= v85)
      goto LABEL_92;
    v95 = v81[v89];
    ++v96;
    if (v95)
      goto LABEL_89;
  }
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
}

void sub_1007A98C4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v3 = sub_1004B804C(&qword_1013F20B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    if (v13)
    {
      *(_BYTE *)(v13 + 32) = 0;
      v14 = *(_QWORD *)(v13 + 64);
      if (v14)
      {
        if (a1)
        {
          swift_retain(*(_QWORD *)(v13 + 64));
          v15 = a1;
          sub_1007AB4F4(v14, v15);

          swift_release(v14);
        }
        else
        {
          v16 = type metadata accessor for CRLZoneSyncResultScenarios(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
          swift_retain(v14);
          sub_1007A9CA8(v17, 1, (uint64_t)v5);
          swift_release(v14);
          sub_1004CB800((uint64_t)v5, &qword_1013F20B0);
        }
      }
    }
    sub_1007A9A64(v1);
  }
  else
  {
    __break(1u);
  }
}

double sub_1007A9A64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[72];
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v2)
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B5DF4((uint64_t)_swiftEmptyArrayStorage);
      v3 = v6;
      if ((v6 & 0xC000000000000001) == 0)
        goto LABEL_13;
    }
    else
    {
      v3 = (uint64_t)&_swiftEmptySetSingleton;
      if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) == 0)
        goto LABEL_13;
    }
LABEL_6:
    if (v3 < 0)
      v4 = v3;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    if (!__CocoaSet.count.getter(v4))
      goto LABEL_14;
LABEL_10:
    v5 = sub_1005FFAA4(v3);
    swift_bridgeObjectRelease();
    sub_10079C850((uint64_t)v5);
    swift_release(v5);
    return sub_1007A1E00();
  }
  swift_beginAccess(v2 + 40, v20, 0, 0);
  v3 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain(v3);
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_6;
LABEL_13:
  if (*(_QWORD *)(v3 + 16))
    goto LABEL_10;
LABEL_14:
  swift_bridgeObjectRelease();
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v19, 0, 0);
  v7 = (void *)static OS_os_log.dataSync;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v8, v18);
  v10 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v11 = 0x5320646572616853;
  else
    v11 = 0x2065746176697250;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v12 = 0xEC00000065706F63;
  else
    v12 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v12;
  v13 = v7;
  v15 = static os_log_type_t.default.getter(v14);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "<%{public}@> No pending zones to save, saving record zones", 58, 2, v10);
  swift_setDeallocating(v10);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v10 + 32, 1, v16);

  return sub_1007A1E00();
}

void sub_1007A9CA8(unint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  char v61;
  unint64_t *v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  id v82;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  id v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  void *v116;
  unint64_t v117;
  void *v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  uint64_t Strong;
  unint64_t v130;
  uint64_t v131;
  double *v132;
  _QWORD *v133;
  id v134[3];
  uint64_t v135;
  _BYTE v136[72];
  _BYTE v137[72];
  _BYTE v138[32];

  v5 = v3;
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)((char *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9, v11);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v14 & 1) == 0)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if ((a2 & 1) != 0)
  {
    v16 = (char *)*(id *)(*(_QWORD *)(a1 + 16) + 16);
    sub_1007A3778(v16, 0);

    v4 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    if (v4)
    {
      *(_BYTE *)(a1 + 80) = 1;
LABEL_9:
      swift_retain(v4);
      goto LABEL_10;
    }
LABEL_27:
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v138, 0, 0);
    v36 = (void *)static OS_os_log.dataSync;
    v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v37, v137);
    v39 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v40 = 0x5320646572616853;
    else
      v40 = 0x2065746176697250;
    if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v41 = 0xEC00000065706F63;
    else
      v41 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v39 + 32) = v40;
    *(_QWORD *)(v39 + 40) = v41;
    v42 = v36;
    v43 = static os_log_type_t.error.getter(v42);
    sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v43, "<%{public}@> Could not find active save task for handling finishSavingBatch", 75, 2, v39);
    swift_setDeallocating(v39);
    v44 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v39 + 32, 1, v44);
    goto LABEL_44;
  }
  v4 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v4)
    goto LABEL_27;
  *(_BYTE *)(a1 + 80) = 1;
  if ((*(_BYTE *)(a1 + 25) & 1) == 0)
    goto LABEL_9;
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v17 = *(void **)(*(_QWORD *)(a1 + 16) + 16);
    swift_beginAccess(v4 + 48, v138, 33, 0);
    swift_retain(v4);
    sub_100ADA730((Swift::Int *)v134, v17);
    swift_endAccess(v138);

  }
  else
  {
    swift_retain(v4);
  }
  v53 = *(_QWORD *)(a1 + 32);
  if ((unint64_t)v53 >> 62)
  {
LABEL_99:
    if (v53 < 0)
      v111 = v53;
    else
      v111 = v53 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v53, 2);
    v54 = _CocoaArrayWrapper.endIndex.getter(v111);
    swift_bridgeObjectRelease();
    if (v54)
      goto LABEL_48;
LABEL_103:
    swift_bridgeObjectRelease();
LABEL_10:
    Strong = swift_unknownObjectWeakLoadStrong((char *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource);
    if (!Strong)
    {
      if (qword_1013DD870 == -1)
      {
LABEL_37:
        swift_beginAccess(&static OS_os_log.dataSync, v138, 0, 0);
        v45 = (void *)static OS_os_log.dataSync;
        v46 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v47 = swift_initStackObject(v46, v136);
        v48 = v47;
        *(_OWORD *)(v47 + 16) = xmmword_100EF5E40;
        if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v49 = 0x5320646572616853;
        else
          v49 = 0x2065746176697250;
        if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v50 = 0xEC00000065706F63;
        else
          v50 = 0xED000065706F6353;
        *(_QWORD *)(v47 + 56) = &type metadata for String;
        *(_QWORD *)(v47 + 64) = sub_1004CFC2C();
        *(_QWORD *)(v48 + 32) = v49;
        *(_QWORD *)(v48 + 40) = v50;
        v42 = v45;
        v51 = static os_log_type_t.error.getter(v42);
        sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v51, "<%{public}@> Can't process save results. There is no data source set", 68, 2, v48);
        swift_setDeallocating(v48);
        v52 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v48 + 32, 1, v52);
        swift_release(v4);
LABEL_44:

        return;
      }
LABEL_97:
      swift_once(&qword_1013DD870, sub_100A059E0);
      goto LABEL_37;
    }
    if (qword_1013DD870 == -1)
    {
LABEL_12:
      v120 = v4;
      swift_beginAccess(&static OS_os_log.dataSync, v138, 0, 0);
      v18 = (void *)static OS_os_log.dataSync;
      v126 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v19 = swift_initStackObject(v126, &v135);
      v20 = (_QWORD *)v19;
      v125 = xmmword_100EF5A10;
      *(_OWORD *)(v19 + 16) = xmmword_100EF5A10;
      if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v21 = 0x5320646572616853;
      else
        v21 = 0x2065746176697250;
      if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v22 = 0xEC00000065706F63;
      else
        v22 = 0xED000065706F6353;
      *(_QWORD *)(v19 + 56) = &type metadata for String;
      v124 = sub_1004CFC2C();
      v20[8] = v124;
      v20[4] = v21;
      v20[5] = v22;
      swift_beginAccess(a1 + 64, v134, 0, 0);
      v23 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 16);
      v20[12] = &type metadata for Int;
      v20[13] = &protocol witness table for Int;
      v20[9] = v23;
      v24 = v18;
      v26 = static os_log_type_t.default.getter(v25);
      sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "<%{public}@> Processing %d save results", 39, 2, (uint64_t)v20);
      swift_setDeallocating(v20);
      v123 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v20 + 4, 2, v123);

      v133 = _swiftEmptyDictionarySingleton;
      v132 = _swiftEmptyArrayStorage;
      v27 = *(_QWORD *)(a1 + 64);
      __chkstk_darwin(v28);
      *(&v113 - 4) = a3;
      *(&v113 - 3) = (uint64_t)&v132;
      *(&v113 - 2) = (uint64_t)&v133;
      swift_bridgeObjectRetain(v27);
      v30 = sub_100A67BD4(v29, (void (*)(uint64_t *__return_ptr, id *, double))sub_1007AAAEC, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1007AFF0C, (uint64_t)(&v113 - 6), (void (*)(_QWORD **__return_ptr, uint64_t *, __n128))sub_1007AB48C);
      swift_bridgeObjectRelease();
      sub_100AFE460();
      if ((unint64_t)v30 >> 62)
      {
        if (v30 < 0)
          v108 = v30;
        else
          v108 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v30);
        v4 = _CocoaArrayWrapper.endIndex.getter(v108);
        swift_bridgeObjectRelease();
        if (v4)
          goto LABEL_20;
      }
      else
      {
        v4 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v4)
        {
LABEL_20:
          if (v4 >= 1)
          {
            v31 = 0;
            v128 = v30 & 0xC000000000000001;
            v127 = (char *)&type metadata for () + 8;
            v121 = (_QWORD *)v4;
            v122 = v30;
            do
            {
              if (v128)
              {
                v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v30);
                v33 = v32;
              }
              else
              {
                v33 = *(_QWORD *)(v30 + 8 * v31 + 32);
                swift_retain(v33);
              }
              v34 = *(_BYTE *)(Strong + 24);
              __chkstk_darwin(v32);
              *(&v113 - 4) = v35;
              *(&v113 - 3) = v33;
              *((_BYTE *)&v113 - 16) = v34;
              OS_dispatch_queue.sync<A>(execute:)(sub_1007B0C70, &v113 - 6, v127);
              swift_release(v33);
              ++v31;
            }
            while (v4 != v31);
            goto LABEL_94;
          }
LABEL_96:
          __break(1u);
          goto LABEL_97;
        }
      }
LABEL_94:
      swift_bridgeObjectRelease();
      v109 = Strong;
      sub_1008F5CC0();
      swift_bridgeObjectRetain(v133);
      sub_1008F7830(v110);
      swift_unknownObjectRelease(v109);
      swift_bridgeObjectRelease();
      swift_release(v120);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
LABEL_89:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_12;
  }
  v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 32));
  if (!v54)
    goto LABEL_103;
LABEL_48:
  v114 = v5;
  v115 = a3;
  v120 = v4;
  v5 = (_QWORD *)(a1 + 64);
  v55 = *(_QWORD *)(a1 + 16);
  v130 = v53 & 0xC000000000000001;
  swift_beginAccess(a1 + 64, &v131, 0, 0);
  a3 = 4;
  v125 = xmmword_100EFD000;
  v127 = (char *)v53;
  v128 = a1;
  v124 = v54;
  v126 = v55;
  v121 = (_QWORD *)(a1 + 64);
  while (1)
  {
    if (v130)
      v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a3 - 4, v53);
    else
      v56 = *(id *)(v53 + 8 * a3);
    v57 = v56;
    v4 = a3 - 3;
    if (__OFADD__(a3 - 4, 1))
    {
      __break(1u);
      goto LABEL_87;
    }
    v58 = *(_QWORD *)(v55 + 24);
    if (!*(_QWORD *)(v58 + 16))
    {

      goto LABEL_50;
    }
    swift_bridgeObjectRetain(*(_QWORD *)(v55 + 24));
    v59 = v57;
    v60 = sub_100843848((uint64_t)v59);
    if ((v61 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    v62 = (unint64_t *)(*(_QWORD *)(v58 + 56) + 16 * v60);
    a1 = *v62;
    Strong = v62[1];
    swift_unknownObjectRetain(a1);

    swift_bridgeObjectRelease();
    v63 = *v5;
    if (*(_QWORD *)(*v5 + 16))
      break;
LABEL_66:
    swift_beginAccess(v5, v138, 33, 0);
    swift_unknownObjectRetain_n(a1, 2);
    v82 = v59;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v134[0] = *(id *)v5;
    v84 = v134[0];
    *v5 = 0x8000000000000000;
    v86 = sub_100843848((uint64_t)v82);
    v87 = v84[2];
    v88 = (v85 & 1) == 0;
    v89 = v87 + v88;
    if (__OFADD__(v87, v88))
      goto LABEL_88;
    v90 = v85;
    if (v84[3] >= v89)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_100831D70();
    }
    else
    {
      sub_10081F83C(v89, isUniquelyReferenced_nonNull_native);
      v91 = sub_100843848((uint64_t)v82);
      if ((v90 & 1) != (v92 & 1))
        goto LABEL_105;
      v86 = v91;
    }
    v93 = Strong | 0x8000000000000000;
    v94 = v134[0];
    if ((v90 & 1) != 0)
    {
      v95 = *((_QWORD *)v134[0] + 7) + 40 * v86;
      sub_1007B0C8C(*(_QWORD *)v95, *(_QWORD *)(v95 + 8), *(void **)(v95 + 16), *(_QWORD *)(v95 + 24), *(void **)(v95 + 32));
      *(_QWORD *)v95 = a1;
      *(_QWORD *)(v95 + 8) = v93;
      *(_OWORD *)(v95 + 16) = v125;
      *(_QWORD *)(v95 + 32) = 0;
    }
    else
    {
      *((_QWORD *)v134[0] + (v86 >> 6) + 8) |= 1 << v86;
      *(_QWORD *)(v94[6] + 8 * v86) = v82;
      v96 = v94[7] + 40 * v86;
      *(_QWORD *)v96 = a1;
      *(_QWORD *)(v96 + 8) = v93;
      *(_OWORD *)(v96 + 16) = v125;
      *(_QWORD *)(v96 + 32) = 0;
      v97 = v94[2];
      v98 = __OFADD__(v97, 1);
      v99 = v97 + 1;
      if (v98)
      {
        __break(1u);
        goto LABEL_96;
      }
      v94[2] = v99;
      v100 = v82;
    }
    *v5 = v94;

    swift_bridgeObjectRelease();
    swift_endAccess(v138);

    swift_unknownObjectRelease_n(a1, 2);
    v53 = (uint64_t)v127;
    a1 = v128;
    v54 = v124;
    v55 = v126;
LABEL_50:
    ++a3;
    if (v4 == v54)
    {
      swift_bridgeObjectRelease();
      v4 = v120;
      v5 = v114;
      a3 = v115;
      goto LABEL_10;
    }
  }
  v64 = v59;
  swift_bridgeObjectRetain(v63);
  v65 = sub_100843848((uint64_t)v64);
  if ((v66 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  v123 = a1;
  v67 = (uint64_t *)(*(_QWORD *)(v63 + 56) + 40 * v65);
  v68 = v67[1];
  v70 = (void *)v67[2];
  v69 = v67[3];
  v53 = v67[4];
  v122 = *v67;
  sub_1007B0D28(v122, v68, v70, v69, (void *)v53);

  swift_bridgeObjectRelease();
  if ((v68 & 0x8000000000000000) != 0)
  {
    swift_unknownObjectRelease(v123);
    sub_1007B0C8C(v122, v68, v70, v69, (void *)v53);

    v53 = (uint64_t)v127;
    a1 = v128;
    v55 = v126;
    v5 = v121;
    goto LABEL_50;
  }
  v116 = (void *)v53;
  v117 = v69;
  v118 = v70;
  v119 = v68;
  v5 = v121;
  swift_beginAccess(v121, v138, 33, 0);
  a1 = v123;
  swift_unknownObjectRetain_n(v123, 2);
  v71 = v64;
  v72 = swift_isUniquelyReferenced_nonNull_native(*v5);
  v134[0] = *(id *)v5;
  v73 = v134[0];
  *v5 = 0x8000000000000000;
  v75 = sub_100843848((uint64_t)v71);
  v76 = v73[2];
  v77 = (v74 & 1) == 0;
  v78 = v76 + v77;
  if (__OFADD__(v76, v77))
  {
    __break(1u);
    goto LABEL_99;
  }
  v79 = v74;
  if (v73[3] >= v78)
  {
    if ((v72 & 1) == 0)
      sub_100831D70();
  }
  else
  {
    sub_10081F83C(v78, v72);
    v80 = sub_100843848((uint64_t)v71);
    if ((v79 & 1) != (v81 & 1))
      goto LABEL_105;
    v75 = v80;
  }
  v101 = Strong | 0x8000000000000000;
  v102 = v134[0];
  if ((v79 & 1) != 0)
  {
    v103 = *((_QWORD *)v134[0] + 7) + 40 * v75;
    sub_1007B0C8C(*(_QWORD *)v103, *(_QWORD *)(v103 + 8), *(void **)(v103 + 16), *(_QWORD *)(v103 + 24), *(void **)(v103 + 32));
    *(_QWORD *)v103 = a1;
    *(_QWORD *)(v103 + 8) = v101;
    *(_OWORD *)(v103 + 16) = v125;
    *(_QWORD *)(v103 + 32) = 0;
LABEL_84:
    v55 = v126;
    v53 = (uint64_t)v127;
    *v5 = v102;

    swift_bridgeObjectRelease();
    swift_endAccess(v138);
    swift_unknownObjectRelease(a1);
    sub_1007B0C8C(v122, v119, v118, v117, v116);
    swift_unknownObjectRelease(a1);

    a1 = v128;
    v54 = v124;
    goto LABEL_50;
  }
  *((_QWORD *)v134[0] + (v75 >> 6) + 8) |= 1 << v75;
  *(_QWORD *)(v102[6] + 8 * v75) = v71;
  v104 = v102[7] + 40 * v75;
  *(_QWORD *)v104 = a1;
  *(_QWORD *)(v104 + 8) = v101;
  *(_OWORD *)(v104 + 16) = v125;
  *(_QWORD *)(v104 + 32) = 0;
  v105 = v102[2];
  v98 = __OFADD__(v105, 1);
  v106 = v105 + 1;
  if (!v98)
  {
    v102[2] = v106;
    v107 = v71;
    goto LABEL_84;
  }
  __break(1u);
LABEL_105:
  v112 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v112);
  __break(1u);
}

void sub_1007AAAEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  void *v5;
  unint64_t v6;
  void *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(a1 + 40);
  v8 = *(id *)a1;
  sub_1007B0D28(v3, v4, v5, v6, v7);

  *a2 = v3;
  a2[1] = v4;
  a2[2] = (uint64_t)v5;
  a2[3] = v6;
  a2[4] = (uint64_t)v7;
}

void sub_1007AAB5C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  void *v38;
  unsigned int (*v39)(unsigned __int8 *, uint64_t, uint64_t);
  int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t *v43;
  __n128 v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  unsigned __int8 *v69;
  int v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, __n128);
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  char *v110;
  char *v111;
  uint64_t *v112;
  char *v113;
  uint64_t v114;
  uint64_t *v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  int v123;
  id v124;
  uint64_t v125;
  uint64_t v126;

  v119 = a4;
  v112 = a3;
  v115 = a5;
  v114 = sub_1004B804C(&qword_1013F20C0);
  __chkstk_darwin(v114);
  v113 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v111 = (char *)&v103 - v9;
  v10 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v10);
  v110 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLZoneSyncResultScenarios(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v106 = (unsigned __int8 *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013F20B0);
  __chkstk_darwin(v15);
  v108 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v107 = (uint64_t)&v103 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v103 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v103 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v103 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v103 - v29;
  __chkstk_darwin(v31);
  v33 = (unsigned __int8 *)&v103 - v32;
  v35 = *a1;
  v34 = a1[1];
  v104 = a1[2];
  v105 = *((unsigned __int8 *)a1 + 24);
  v122 = v34 >> 62;
  v120 = v34;
  if (v34 >> 62)
    v36 = v34 & 0x3FFFFFFFFFFFFFFFLL;
  else
    v36 = v34;
  ObjectType = swift_getObjectType(v35);
  v126 = v35;
  v38 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v36 + 8) + 8))(ObjectType);
  v124 = objc_msgSend(v38, "zoneID");

  sub_1004CB7BC(a2, (uint64_t)v33, &qword_1013F20B0);
  v118 = v13;
  v39 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v13 + 48);
  if (v39(v33, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v33, &qword_1013F20B0);
    v123 = 0;
  }
  else
  {
    v123 = *v33;
    sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLZoneSyncResultScenarios);
  }
  sub_1004CB7BC(a2, (uint64_t)v30, &qword_1013F20B0);
  if (v39((unsigned __int8 *)v30, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v30, &qword_1013F20B0);
    v40 = 0;
  }
  else
  {
    v40 = v30[1];
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLZoneSyncResultScenarios);
  }
  sub_1004CB7BC(a2, (uint64_t)v27, &qword_1013F20B0);
  v41 = v39((unsigned __int8 *)v27, 1, v12);
  v121 = v35;
  if (v41 == 1)
  {
    sub_1004CB800((uint64_t)v27, &qword_1013F20B0);
    v109 = 0;
  }
  else
  {
    v109 = v27[2];
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLZoneSyncResultScenarios);
  }
  sub_1004CB7BC(a2, (uint64_t)v24, &qword_1013F20B0);
  v42 = v39((unsigned __int8 *)v24, 1, v12);
  v43 = v119;
  if (v42 == 1)
  {
    sub_1004CB800((uint64_t)v24, &qword_1013F20B0);
    v116 = 0;
  }
  else
  {
    v116 = v24[3];
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLZoneSyncResultScenarios);
  }
  v45 = v112;
  v117 = v40;
  if ((_DWORD)v122)
  {
    if ((_DWORD)v122 == 1)
    {
      v46 = v121;
      v47 = v120 & 0x3FFFFFFFFFFFFFFFLL;
      v48 = (_QWORD *)*v112;
      swift_unknownObjectRetain_n(v121, 2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
      *v45 = (uint64_t)v48;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v48 = sub_100D11494(0, v48[2] + 1, 1, v48);
        *v45 = (uint64_t)v48;
      }
      v51 = v48[2];
      v50 = v48[3];
      if (v51 >= v50 >> 1)
      {
        v48 = sub_100D11494((_QWORD *)(v50 > 1), v51 + 1, 1, v48);
        *v45 = (uint64_t)v48;
      }
      v48[2] = v51 + 1;
      v52 = &v48[2 * v51];
      v52[4] = v46;
      v52[5] = v47;
      v44 = swift_unknownObjectRelease(v46);
      v123 = 1;
      v43 = v119;
    }
    else if (!v105)
    {
      v125 = v104;
      type metadata accessor for CKError(0);
      v101 = v100;
      v102 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
      _BridgedStoredNSError.code.getter(v101, v102);
      if (v126 == 18)
      {
        v116 = 1;
      }
      else if (v126 == 25)
      {
        v117 = 1;
      }
    }
  }
  else
  {
    v53 = (_QWORD *)*v112;
    swift_unknownObjectRetain_n(v121, 2);
    v54 = swift_isUniquelyReferenced_nonNull_native(v53);
    *v45 = (uint64_t)v53;
    if ((v54 & 1) == 0)
    {
      v53 = sub_100D11494(0, v53[2] + 1, 1, v53);
      *v45 = (uint64_t)v53;
    }
    v56 = v53[2];
    v55 = v53[3];
    if (v56 >= v55 >> 1)
    {
      v53 = sub_100D11494((_QWORD *)(v55 > 1), v56 + 1, 1, v53);
      *v45 = (uint64_t)v53;
    }
    v53[2] = v56 + 1;
    v57 = &v53[2 * v56];
    v59 = v120;
    v58 = v121;
    v57[4] = v121;
    v57[5] = v59;
    v44 = swift_unknownObjectRelease(v58);
  }
  v60 = *v43;
  if (*(_QWORD *)(*v43 + 16))
  {
    v61 = v124;
    v62 = sub_100843894((uint64_t)v61);
    if ((v63 & 1) != 0)
    {
      v64 = *(_QWORD *)(v60 + 56);
      v65 = v118;
      v66 = v107;
      sub_1004B8460(v64 + *(_QWORD *)(v118 + 72) * v62, v107, type metadata accessor for CRLZoneSyncResultScenarios);
      v67 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56);
      v68 = v66;
      v67(v66, 0, 1, v12);
    }
    else
    {
      v67 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v118 + 56);
      v68 = v107;
      v67(v107, 1, 1, v12);
    }

  }
  else
  {
    v67 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v118 + 56);
    v68 = v107;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v67)(v107, 1, 1, v12, v44);
  }
  if (v39((unsigned __int8 *)v68, 1, v12))
  {
    sub_1004CB800(v68, &qword_1013F20B0);
  }
  else
  {
    v69 = v106;
    sub_1004B8460(v68, (uint64_t)v106, type metadata accessor for CRLZoneSyncResultScenarios);
    sub_1004CB800(v68, &qword_1013F20B0);
    v70 = *v69;
    sub_1004B84A4((uint64_t)v69, type metadata accessor for CRLZoneSyncResultScenarios);
    v123 |= v70;
  }
  v71 = *v43;
  if (*(_QWORD *)(*v43 + 16))
  {
    v72 = v124;
    v73 = sub_100843894((uint64_t)v72);
    if ((v74 & 1) != 0)
    {
      v75 = *(_QWORD *)(v71 + 56) + *(_QWORD *)(v118 + 72) * v73;
      v76 = v108;
      sub_1004B8460(v75, v108, type metadata accessor for CRLZoneSyncResultScenarios);
      v77 = v76;
      v78 = 0;
    }
    else
    {
      v76 = v108;
      v77 = v108;
      v78 = 1;
    }
    v67(v77, v78, 1, v12);

  }
  else
  {
    v76 = v108;
    v67(v108, 1, 1, v12);
  }
  if (v39((unsigned __int8 *)v76, 1, v12))
  {
    sub_1004CB800(v76, &qword_1013F20B0);
    v79 = v117;
  }
  else
  {
    v80 = (uint64_t)v106;
    sub_1004B8460(v76, (uint64_t)v106, type metadata accessor for CRLZoneSyncResultScenarios);
    sub_1004CB800(v76, &qword_1013F20B0);
    v81 = *(_BYTE *)(v80 + 1);
    sub_1004B84A4(v80, type metadata accessor for CRLZoneSyncResultScenarios);
    v79 = v81 | v117;
  }
  v82 = *v45;
  v83 = type metadata accessor for Date(0);
  v84 = (uint64_t)v110;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v110, 1, 1, v83);
  v85 = v114;
  v86 = (uint64_t)&v111[*(int *)(v114 + 48)];
  sub_1004C4938(v84, v86, &qword_1013E04F0);
  *v21 = v123 & 1;
  v21[1] = v79 & 1;
  v21[2] = v109;
  v21[3] = v116;
  v21[4] = 0;
  v87 = (uint64_t)&v113[*(int *)(v85 + 48)];
  sub_1004C4938(v86, v87, &qword_1013E04F0);
  v88 = &v21[*(int *)(v12 + 36)];
  *v88 = 0;
  sub_1004C4938(v87, (uint64_t)&v88[*(int *)(v85 + 48)], &qword_1013E04F0);
  *(_QWORD *)&v21[*(int *)(v12 + 40)] = v82;
  v67((uint64_t)v21, 0, 1, v12);
  v89 = v124;
  swift_bridgeObjectRetain(v82);
  sub_10083E720((uint64_t)v21, v89);
  v90 = v120;
  v91 = v121;
  if ((_DWORD)v122)
    v90 = v120 & 0x3FFFFFFFFFFFFFFFLL;
  v92 = swift_getObjectType(v121);
  v126 = v91;
  v93 = *(_QWORD *)(v90 + 32);
  v94 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v93 + 8);
  v95 = swift_unknownObjectRetain(v91);
  v96 = v94(v92, v93, v95);
  v98 = v97;
  swift_unknownObjectRelease(v91);

  v99 = v115;
  *v115 = v96;
  v99[1] = v98;
}

uint64_t sub_1007AB48C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v7;

  v3 = a1[1];
  if (v3 >> 62)
    v4 = v3 & 0x3FFFFFFFFFFFFFFFLL;
  else
    v4 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 32) + 16))(ObjectType);
  *a2 = result;
  a2[1] = v7;
  return result;
}

void sub_1007AB4F4(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t inited;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  char v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  __n128 v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  BOOL v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;
  id v83;
  id v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  BOOL v89;
  void *v90;
  uint64_t v91;
  int v92;
  unint64_t v93;
  BOOL v94;
  uint64_t v95;
  unint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  void *v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  id v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD v146[4];
  _QWORD v147[15];
  char v148[72];
  _QWORD v149[4];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013F20B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9, v11);
  v15 = v14;
  v16 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_83;
  }
  v13 = (_QWORD *)0xED000065706F6353;
  v14 = (void *)0xEC00000065706F63;
  v10 = 0x5320646572616853;
  v16 = 0x2065746176697250;
  v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v17)
  {
    if (qword_1013DD870 == -1)
    {
LABEL_15:
      swift_beginAccess(&static OS_os_log.dataSync, v149, 0, 0);
      v46 = (void *)static OS_os_log.dataSync;
      v47 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v47, v148);
      v49 = inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v13 = v14;
      else
        v10 = v16;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(v49 + 32) = v10;
      *(_QWORD *)(v49 + 40) = v13;
      v50 = v46;
      v51 = static os_log_type_t.error.getter(v50);
      sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v51, "<%{public}@> Attempting to handle successful batch failure but scheduler not found", 82, 2, v49);
      swift_setDeallocating(v49);
      v52 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v49 + 32, 1, v52);

      return;
    }
LABEL_83:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_15;
  }
  v137 = v8;
  v139 = v17;
  swift_retain(v17);
  v138 = a1;
  sub_100897140();
  if ((v18 & 1) != 0)
  {
    v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    v20 = 0x2065746176697250;
    if (v19)
      *(_BYTE *)(v19 + 56) = 1;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v141, 0, 0);
    v21 = (void *)static OS_os_log.dataSync;
    v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v23 = swift_initStackObject(v22, &v140);
    v24 = (_QWORD *)v23;
    *(_OWORD *)(v23 + 16) = xmmword_100EF5550;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    {
      v20 = 0x5320646572616853;
      v25 = 0xEC00000065706F63;
    }
    else
    {
      v25 = 0xED000065706F6353;
    }
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    v26 = sub_1004CFC2C();
    v136 = v3;
    v27 = v26;
    v24[8] = v26;
    v24[4] = v20;
    v24[5] = v25;
    v28 = v21;
    v29 = a2;
    v30 = sub_10089EABC(v29);
    v32 = v31;

    v24[12] = &type metadata for String;
    v24[13] = v27;
    v24[9] = v30;
    v24[10] = v32;
    v149[0] = v29;
    type metadata accessor for CKError(0);
    v34 = v33;
    v35 = v29;
    v36 = String.init<A>(reflecting:)(v149, v34);
    v24[17] = &type metadata for String;
    v24[18] = v27;
    v3 = v136;
    v24[14] = v36;
    v24[15] = v37;
    v39 = static os_log_type_t.default.getter(v38);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v39, "<%{public}@> Encountered unrecoverable batch error \"<%{public}@> <%@>\"", 70, 2, (uint64_t)v24);
    swift_setDeallocating(v24);
    v40 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v24 + 4, 3, v40);

  }
  v146[0] = a2;
  type metadata accessor for CKError(0);
  v42 = v41;
  v43 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  _BridgedStoredNSError.code.getter(v42, v43);
  if (v149[0] == 23
    || (v147[14] = a2, _BridgedStoredNSError.code.getter(v42, v43), v146[0] > 0x24uLL)
    || ((1 << SLOBYTE(v146[0])) & 0x1000A002D8) == 0)
  {
    v44 = 0;
    v45 = v138;
  }
  else
  {
    v53 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    v44 = 1;
    v45 = v138;
    if (v53)
      *(_BYTE *)(v53 + 57) = 1;
  }
  v54 = *(_QWORD *)(v45 + 72);
  *(_QWORD *)(v45 + 72) = a2;
  v55 = a2;
  swift_errorRelease(v54);
  v56 = *(_QWORD *)(v45 + 16);
  v57 = *(id *)(v56 + 16);
  sub_1007A2FF4(v55, v57, 0);

  sub_100897140();
  if ((v58 & 1) != 0)
  {
    if (*(_BYTE *)(v45 + 25) == 1)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v149, 0, 0);
      v59 = (void *)static OS_os_log.dataSync;
      v60 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v61 = swift_initStackObject(v60, &v142);
      *(_OWORD *)(v61 + 16) = xmmword_100EF5E40;
      v62 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
      *(_QWORD *)(v61 + 56) = &type metadata for String;
      v63 = sub_1004CFC2C();
      v64 = v62 == 0;
      v65 = 0x2065746176697250;
      if (v62)
        v65 = 0x5320646572616853;
      *(_QWORD *)(v61 + 32) = v65;
      v66 = v61 + 32;
      if (v64)
        v67 = 0xED000065706F6353;
      else
        v67 = 0xEC00000065706F63;
      *(_QWORD *)(v61 + 64) = v63;
      *(_QWORD *)(v61 + 40) = v67;
      v68 = v59;
      v70 = static os_log_type_t.default.getter(v69);
      v71 = "<%{public}@> An atomic batch has failed to save and we cannot retry the save. Finishing the save operation on the batch";
      v72 = (uint64_t)v68;
      v73 = 119;
    }
    else
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v149, 0, 0);
      v90 = (void *)static OS_os_log.dataSync;
      v91 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v61 = swift_initStackObject(v91, &v143);
      *(_OWORD *)(v61 + 16) = xmmword_100EF5E40;
      v92 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
      *(_QWORD *)(v61 + 56) = &type metadata for String;
      v93 = sub_1004CFC2C();
      v94 = v92 == 0;
      v95 = 0x2065746176697250;
      if (v92)
        v95 = 0x5320646572616853;
      *(_QWORD *)(v61 + 32) = v95;
      v66 = v61 + 32;
      if (v94)
        v96 = 0xED000065706F6353;
      else
        v96 = 0xEC00000065706F63;
      *(_QWORD *)(v61 + 64) = v93;
      *(_QWORD *)(v61 + 40) = v96;
      v68 = v90;
      v70 = static os_log_type_t.default.getter(v97);
      v71 = "<%{public}@> A non-atomic batch has failed to save and we cannot retry the save. Finishing the save operation on the batch";
      v72 = (uint64_t)v68;
      v73 = 122;
    }
    sub_100A06EBC(v72, &_mh_execute_header, v70, v71, v73, 2, v61);
    swift_setDeallocating(v61);
    v98 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v66, 1, v98);

LABEL_53:
    v99 = type metadata accessor for CRLZoneSyncResultScenarios(0);
    v100 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v137, 1, 1, v99);
    v101 = v45;
    v102 = 0;
LABEL_54:
    sub_1007A9CA8(v101, v102, v100);
    swift_release(v139);
    sub_1004CB800(v100, &qword_1013F20B0);
    return;
  }
  v74 = *(id *)(v56 + 16);
  v75 = sub_100794D04(0, v74);

  if (v44 & 1 | !v75)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v149, 0, 0);
    v76 = (void *)static OS_os_log.dataSync;
    v77 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v78 = swift_initStackObject(v77, v147);
    v79 = (_QWORD *)v78;
    *(_OWORD *)(v78 + 16) = xmmword_100EF5A10;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v80 = 0x5320646572616853;
    else
      v80 = 0x2065746176697250;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v81 = 0xEC00000065706F63;
    else
      v81 = 0xED000065706F6353;
    *(_QWORD *)(v78 + 56) = &type metadata for String;
    *(_QWORD *)(v78 + 64) = sub_1004CFC2C();
    v79[4] = v80;
    v79[5] = v81;
    v82 = *(void **)(v56 + 16);
    v79[12] = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v79[13] = sub_1005A15B8(&qword_1013F20B8, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v79[9] = v82;
    v83 = v76;
    v84 = v82;
    v86 = static os_log_type_t.default.getter(v85);
    sub_100A06EBC((uint64_t)v83, &_mh_execute_header, v86, "<%{public}@> Batch cannot be saved because it is throttled. ZoneID:<%{public}@>", 79, 2, (uint64_t)v79);
    swift_setDeallocating(v79);
    v87 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v79 + 4, 2, v87);

    v88 = *(id *)(v56 + 16);
    v89 = sub_100793F38(0, v88);

    if (v89)
      *(_BYTE *)(v45 + 56) = 1;
    goto LABEL_53;
  }
  swift_beginAccess(v45 + 64, v149, 0, 0);
  v103 = *(_QWORD *)(v45 + 32);
  if (!*(_QWORD *)(*(_QWORD *)(v45 + 64) + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v45 + 32));
    if (!((unint64_t)v103 >> 62))
      goto LABEL_57;
LABEL_69:
    if (v103 < 0)
      v124 = v103;
    else
      v124 = v103 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v103);
    v106 = _CocoaArrayWrapper.endIndex.getter(v124);
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  swift_retain(v45);
  swift_bridgeObjectRetain(v103);
  v105 = (unint64_t)sub_100898140(v104, v45);
  swift_bridgeObjectRelease();
  swift_release(v45);
  v103 = v105;
  if (v105 >> 62)
    goto LABEL_69;
LABEL_57:
  v106 = *(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_58:
  swift_bridgeObjectRelease();
  if (!v106)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v146, 0, 0);
    v125 = (void *)static OS_os_log.dataSync;
    v126 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v127 = swift_initStackObject(v126, &v144);
    v128 = v127;
    *(_OWORD *)(v127 + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v129 = 0x5320646572616853;
    else
      v129 = 0x2065746176697250;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v130 = 0xEC00000065706F63;
    else
      v130 = 0xED000065706F6353;
    *(_QWORD *)(v127 + 56) = &type metadata for String;
    *(_QWORD *)(v127 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v128 + 32) = v129;
    *(_QWORD *)(v128 + 40) = v130;
    v131 = v125;
    v133 = static os_log_type_t.default.getter(v132);
    sub_100A06EBC((uint64_t)v131, &_mh_execute_header, v133, "<%{public}@> A failed batch save should not be attempted again because all failures have been resolved locally and there is no need to sync them back to server", 159, 2, v128);
    swift_setDeallocating(v128);
    v134 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v128 + 32, 1, v134);

    v135 = type metadata accessor for CRLZoneSyncResultScenarios(0);
    v100 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v137, 1, 1, v135);
    v101 = v45;
    v102 = 1;
    goto LABEL_54;
  }
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v146, 0, 0);
  v107 = (void *)static OS_os_log.dataSync;
  v108 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v109 = swift_initStackObject(v108, &v145);
  v110 = v109;
  *(_OWORD *)(v109 + 16) = xmmword_100EF5550;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v111 = 0x5320646572616853;
  else
    v111 = 0x2065746176697250;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v112 = 0xEC00000065706F63;
  else
    v112 = 0xED000065706F6353;
  *(_QWORD *)(v109 + 56) = &type metadata for String;
  v113 = sub_1004CFC2C();
  *(_QWORD *)(v110 + 64) = v113;
  *(_QWORD *)(v110 + 32) = v111;
  *(_QWORD *)(v110 + 40) = v112;
  v114 = *(void **)(v56 + 16);
  v115 = v107;
  v116 = objc_msgSend(v114, "zoneName");
  v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
  v119 = v118;

  *(_QWORD *)(v110 + 96) = &type metadata for String;
  *(_QWORD *)(v110 + 104) = v113;
  *(_QWORD *)(v110 + 72) = v117;
  *(_QWORD *)(v110 + 80) = v119;
  v120 = *(_BYTE *)(v138 + 25);
  *(_QWORD *)(v110 + 136) = &type metadata for Bool;
  *(_QWORD *)(v110 + 144) = &protocol witness table for Bool;
  *(_BYTE *)(v110 + 112) = v120;
  v122 = static os_log_type_t.default.getter(v121);
  sub_100A06EBC((uint64_t)v115, &_mh_execute_header, v122, "<%{public}@> Saving a batch is failed but the save failure is recoverable. In our next attempt, we will retry the save if there are any outstanding records for saving. Zone id: %{public}@, isAtomic: %d", 201, 2, v110);
  swift_setDeallocating(v110);
  v123 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v110 + 32, 3, v123);
  swift_release(v139);

}

void sub_1007AC248()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  _BYTE *v17;
  char isEscapingClosureAtFileLocation;
  _QWORD v19[5];
  uint64_t v20;
  char v21[72];
  char v22[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v22, 0, 0);
  v1 = (void *)static OS_os_log.dataSync;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v21);
  v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v5 = 0x5320646572616853;
  else
    v5 = 0x2065746176697250;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v6 = 0xEC00000065706F63;
  else
    v6 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  v7 = v1;
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "<%{public}@> Sync engine will send changes to CloudKit", 54, 2, v4);
  swift_setDeallocating(v4);
  v10 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v4 + 32, 1, v10);

  v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v12 = swift_allocObject(&unk_10127D898, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  v13 = swift_allocObject(&unk_10127D8C0, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1007AFEF4;
  *(_QWORD *)(v13 + 24) = v12;
  v19[4] = sub_1005B72B0;
  v20 = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = *(_QWORD *)"";
  v19[2] = sub_100618D24;
  v19[3] = &unk_10127D8D8;
  v14 = _Block_copy(v19);
  v15 = v20;
  v16 = v11;
  v17 = v0;
  swift_retain(v13);
  swift_release(v15);
  dispatch_sync(v16, v14);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 82, 2067, 20, 1);
  swift_release(v12);
  swift_release(v13);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1007AC4B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter);
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (!v10)
    {
      *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter) = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1007AC590()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v24;
  char v25[112];
  char v26[24];

  v1 = v0;
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v26, 0, 0);
  v2 = (void *)static OS_os_log.dataSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v25);
  v5 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v6 = 0x5320646572616853;
  else
    v6 = 0x2065746176697250;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v7 = 0xEC00000065706F63;
  else
    v7 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v8 = sub_1004CFC2C();
  v5[8] = v8;
  v5[4] = v6;
  v5[5] = v7;
  v9 = v2;
  v10 = CKSyncEngine.SyncReason.description.getter();
  v5[12] = &type metadata for String;
  v5[13] = v8;
  v5[9] = v10;
  v5[10] = v11;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v13, "<%{public}@> Sync engine did send changes to CloudKit for reason %{public}@", 75, 2, (uint64_t)v5);
  swift_setDeallocating(v5);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v5 + 4, 2, v14);

  v15 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v16 = swift_allocObject(&unk_10127D820, 24, 7);
  *(_QWORD *)(v16 + 16) = v1;
  v17 = swift_allocObject(&unk_10127D848, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_1007AFEAC;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_1005B71BC;
  v24 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_10127D860;
  v18 = _Block_copy(aBlock);
  v19 = v24;
  v20 = v15;
  v21 = v1;
  swift_retain(v17);
  swift_release(v19);
  dispatch_sync(v20, v18);

  _Block_release(v18);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 82, 2074, 20, 1);
  swift_release(v16);
  swift_release(v17);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1007AC828()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2, v4);
  v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    v9 = OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter])
    {
      Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_fetchStatusObserver]);
      if (Strong)
      {
        v11 = Strong;
        sub_100B059B4(v1);
        swift_unknownObjectRelease(v11);
      }
    }
    v12 = *(_QWORD *)&v1[v9];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (!v13)
    {
      *(_QWORD *)&v1[v9] = v14;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1007AC930()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v1, v3);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v8 = OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter];
  if (v9 <= 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_decrementOngoingFetchCounter()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2, 2098, "SyncController ongoing fetch counter is negative, which is invalid. A fetch finished but we did not expect one to be ongoing.", 125, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_decrementOngoingFetchCounter()", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2u, 2098, (uint64_t)"SyncController ongoing fetch counter is negative, which is invalid. A fetch finished but we did not expect one to be ongoing.", 125, 2u);
    v9 = *(_QWORD *)&v0[v8];
  }
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
    goto LABEL_10;
  *(_QWORD *)&v0[v8] = v11 & ~(v11 >> 63);
  if (v11 <= 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_fetchStatusObserver]);
    if (Strong)
    {
      v13 = Strong;
      sub_100B04ED0(v0);
      swift_unknownObjectRelease(v13);
    }
  }
}

void sub_1007ACAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v1, v3);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    v8 = OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter;
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter);
    if (v9 <= 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"_decrementOngoingSaveCounter()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2, 2113, "SyncController ongoing fetch counter is negative, which is invalid. A fetch finished but we did not expect one to be ongoing.", 125, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_decrementOngoingSaveCounter()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2u, 2113, (uint64_t)"SyncController ongoing fetch counter is negative, which is invalid. A fetch finished but we did not expect one to be ongoing.", 125, 2u);
      v9 = *(_QWORD *)(v0 + v8);
    }
    v10 = __OFSUB__(v9, 1);
    v11 = v9 - 1;
    if (!v10)
    {
      *(_QWORD *)(v0 + v8) = v11 & ~(v11 >> 63);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1007ACC98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSyncController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSyncController()
{
  return objc_opt_self(_TtC8Freeform17CRLSyncController);
}

_QWORD *sub_1007ACE10(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, _QWORD, uint64_t, int *);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = (int *)type metadata accessor for CRLThrottleInfo(0);
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_1004B804C(&qword_1013F1EF0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for Date(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
      {
        v16 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v9, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
      }
      v17 = v10[5];
      v18 = *(void **)&v9[v17];
      *(_QWORD *)&v8[v17] = v18;
      *(_QWORD *)&v8[v10[6]] = *(_QWORD *)&v9[v10[6]];
      *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
      v19 = *(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56);
      v20 = v18;
      v19(v8, 0, 1, v10);
    }
    v21 = a3[6];
    v22 = a3[7];
    v23 = *(_QWORD *)((char *)a2 + v21);
    *(_QWORD *)((char *)v4 + v21) = v23;
    *((_BYTE *)v4 + v22) = *((_BYTE *)a2 + v22);
    swift_bridgeObjectRetain(v23);
  }
  return v4;
}

uint64_t type metadata accessor for CRLThrottleInfo(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F1FF0, (uint64_t)&nominal type descriptor for CRLThrottleInfo);
}

double sub_1007ACFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for CRLThrottleInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = type metadata accessor for Date(0);
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);

  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_BYTE *sub_1007AD074(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void (*v17)(char *, _QWORD, uint64_t, int *);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_1004B804C(&qword_1013F1EF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Date(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v7, v8, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    v15 = v9[5];
    v16 = *(void **)&v8[v15];
    *(_QWORD *)&v7[v15] = v16;
    *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
    *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
    v17 = *(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56);
    v18 = v16;
    v17(v7, 0, 1, v9);
  }
  v19 = a3[6];
  v20 = a3[7];
  v21 = *(_QWORD *)&a2[v19];
  *(_QWORD *)&a1[v19] = v21;
  a1[v20] = a2[v20];
  swift_bridgeObjectRetain(v21);
  return a1;
}

_BYTE *sub_1007AD1EC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, _QWORD, uint64_t, int *);
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLThrottleInfo);
      goto LABEL_7;
    }
    v18 = type metadata accessor for Date(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_16:
        v28 = v9[5];
        v29 = *(void **)&v8[v28];
        v30 = *(void **)&v7[v28];
        *(_QWORD *)&v7[v28] = v29;
        v31 = v29;

        *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
        *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    v27 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v17 = sub_1004B804C(&qword_1013F1EF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = v9[5];
  v24 = *(void **)&v8[v23];
  *(_QWORD *)&v7[v23] = v24;
  *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  v25 = *(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56);
  v26 = v24;
  v25(v7, 0, 1, v9);
LABEL_17:
  v32 = a3[6];
  v33 = *(_QWORD *)&a2[v32];
  *(_QWORD *)&a1[v32] = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *sub_1007AD490(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_1004B804C(&qword_1013F1EF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for Date(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    *(_QWORD *)&v7[v9[5]] = *(_QWORD *)&v8[v9[5]];
    *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
    *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v15 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  a1[v15] = a2[v15];
  return a1;
}

_BYTE *sub_1007AD600(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLThrottleInfo);
      goto LABEL_7;
    }
    v18 = type metadata accessor for Date(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v7, v8, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_16:
        v24 = v9[5];
        v25 = *(void **)&v7[v24];
        *(_QWORD *)&v7[v24] = *(_QWORD *)&v8[v24];

        *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
        *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    v23 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v17 = sub_1004B804C(&qword_1013F1EF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  *(_QWORD *)&v7[v9[5]] = *(_QWORD *)&v8[v9[5]];
  *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_1007AD894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007AD8A0);
}

uint64_t sub_1007AD8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013F1EF0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1007AD924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007AD930);
}

uint64_t sub_1007AD930(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013F1EF0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F1F50, (uint64_t)&nominal type descriptor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
}

void sub_1007AD9C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100F0AD80;
  sub_1007018C8(319, (unint64_t *)&unk_1013F1F60, type metadata accessor for CRLThrottleInfo);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_100F0AD80;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t *sub_1007ADA58(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_1004B804C(&qword_1013E04F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v14 = v13;
  }
  return a1;
}

void sub_1007ADB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);

}

char *sub_1007ADBC0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C(&qword_1013E04F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = *(void **)&a2[v9];
  *(_QWORD *)&a1[v9] = v11;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v12 = v11;
  return a1;
}

char *sub_1007ADC94(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C(&qword_1013E04F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = *(void **)&a2[v12];
  v14 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  v15 = v13;

  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_1007ADDC0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C(&qword_1013E04F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_1007ADE90(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C(&qword_1013E04F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  return a1;
}

uint64_t sub_1007ADFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007ADFC0);
}

uint64_t sub_1007ADFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013E04F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1007AE040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007AE04C);
}

uint64_t sub_1007AE04C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013E04F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1007AE0C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_1007018C8(319, (unint64_t *)&qword_1013F2430, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for CRLSyncScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1007AE1A8 + 4 * byte_100F0AB35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1007AE1DC + 4 * byte_100F0AB30[v4]))();
}

uint64_t sub_1007AE1DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007AE1E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1007AE1ECLL);
  return result;
}

uint64_t sub_1007AE1F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1007AE200);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1007AE204(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1007AE20C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncScope()
{
  return &type metadata for CRLSyncScope;
}

uint64_t sub_1007AE228()
{
  return sub_1004CBA30(&qword_1013F2030, &qword_1013F2038, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1007AE258()
{
  unint64_t result;

  result = qword_1013F2040[0];
  if (!qword_1013F2040[0])
  {
    result = swift_getWitnessTable(&unk_100F0AE58, &type metadata for CRLSyncScope);
    atomic_store(result, qword_1013F2040);
  }
  return result;
}

uint64_t sub_1007AE29C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013F1EDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1007A3FBC(a1);
}

uint64_t sub_1007AE2E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1013F1EE4);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1004CFD00;
  v4[14] = a1;
  v4[15] = v1;
  return swift_task_switch(sub_1007A47A0, 0, 0);
}

uint64_t sub_1007AE348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1013F1EEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return sub_1007A6610(a1, a2);
}

uint64_t sub_1007AE3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t WitnessTable;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1013E80E0 + dword_1013E80E0);
  v6 = (_QWORD *)swift_task_alloc(unk_1013E80E4);
  *(_QWORD *)(v3 + 16) = v6;
  WitnessTable = swift_getWitnessTable(&unk_100F0AEC8, a3);
  *v6 = v3;
  v6[1] = sub_1004CFD00;
  return v9(a1, a3, WitnessTable);
}

uint64_t sub_1007AE434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t WitnessTable;

  v9 = (_QWORD *)swift_task_alloc(dword_1013E80DC);
  *(_QWORD *)(v4 + 16) = v9;
  WitnessTable = swift_getWitnessTable(&unk_100F0AEC8, a4);
  *v9 = v4;
  v9[1] = sub_1004CFD00;
  return sub_100611B04(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1007AE4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t WitnessTable;

  v9 = (_QWORD *)swift_task_alloc(dword_1013E80D4);
  *(_QWORD *)(v4 + 16) = v9;
  WitnessTable = swift_getWitnessTable(&unk_100F0AEC8, a4);
  *v9 = v4;
  v9[1] = sub_1004CFD00;
  return sub_100611D58(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1007AE54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to CKSyncEngineDelegate.shouldFetchChanges(zoneID:syncEngine:)[1]);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_100550210;
  return CKSyncEngineDelegate.shouldFetchChanges(zoneID:syncEngine:)(a1, a2, a3, a4);
}

uint64_t sub_1007AE5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(async function pointer to CKSyncEngineDelegate.relatedApplicationBundleIdentifiers(zoneIDs:recordIDs:syncEngine:)[1]);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_100550210;
  return CKSyncEngineDelegate.relatedApplicationBundleIdentifiers(zoneIDs:recordIDs:syncEngine:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1007AE644(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1005034A0(&qword_1013F2088, a2, (uint64_t (*)(uint64_t))type metadata accessor for CRLSyncController, (uint64_t)&unk_100F0AE80);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1007AE680()
{
  return sub_1005034A0(&qword_1013F2090, 255, (uint64_t (*)(uint64_t))type metadata accessor for CRLCloudAccountChangeObserverWrapper, (uint64_t)&unk_100F0AF0C);
}

unint64_t sub_1007AE6B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F2128);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1004CB7BC(v7, (uint64_t)&v16, &qword_1013F2130);
    v8 = v16;
    v9 = v17;
    result = sub_1007AE7E4(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10050CB14(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1007AE7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1007AE848(a1, a2, v5);
}

unint64_t sub_1007AE848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1007AE98C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t Strong;

  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v4 = result;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    swift_unknownObjectRelease(v4);
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      return v4 == Strong;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1007AE9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  double v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  __n128 v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  double v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, __n128);
  char *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  double *v109;
  _QWORD v110[2];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  int64_t v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  NSString *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  double *v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  _UNKNOWN **v133;
  __int128 v134[2];
  _QWORD v135[5];
  uint64_t v136;

  v117 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v117);
  v116 = (char *)v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v125 = (char *)v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v115 = (char *)v110 - v11;
  __chkstk_darwin(v12);
  v124 = (char *)v110 - v13;
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14);
  v114 = (uint64_t)v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v113 = (uint64_t)v110 - v17;
  __chkstk_darwin(v18);
  v112 = (uint64_t)v110 - v19;
  v111 = v1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v21 = __CocoaSet.makeIterator()(v20);
    v22 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v23 = sub_1005A15B8((unint64_t *)&qword_1013E1778, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v24 = Set.Iterator.init(_cocoa:)(v135, v21, v22, v23);
    a1 = v135[0];
    v121 = v135[1];
    v25 = v135[2];
    v26 = v135[3];
    v27 = v135[4];
  }
  else
  {
    v28 = -1 << *(_BYTE *)(a1 + 32);
    v29 = *(_QWORD *)(a1 + 56);
    v121 = a1 + 56;
    v25 = ~v28;
    v30 = -v28;
    if (v30 < 64)
      v31 = ~(-1 << v30);
    else
      v31 = -1;
    v27 = v31 & v29;
    swift_bridgeObjectRetain(a1);
    v26 = 0;
  }
  v119 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v120 = (unint64_t)(v25 + 64) >> 6;
  v123 = CKCurrentUserDefaultName;
  v129 = _swiftEmptyArrayStorage;
  v118 = (char *)&type metadata for Swift.AnyObject + 8;
  v126 = a1;
  v127 = v6;
  v128 = v7;
  v110[1] = v25;
  if ((a1 & 0x8000000000000000) == 0)
    goto LABEL_16;
LABEL_13:
  v32 = __CocoaSet.Iterator.next()(v24);
  if (!v32)
    goto LABEL_74;
  v33 = v32;
  *(_QWORD *)&v131 = v32;
  v34 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  swift_unknownObjectRetain(v33);
  swift_dynamicCast(v134, &v131, v118, v34, 7);
  v35 = *(id *)&v134[0];
  *(_QWORD *)&v36 = swift_unknownObjectRelease(v33).n128_u64[0];
  v136 = v26;
  v130 = v27;
  if (!v35)
    goto LABEL_74;
  while (1)
  {
    v42 = objc_msgSend(v35, "zoneName", v36);
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46._countAndFlagsBits = 0x5F6472616F42;
    v46._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v46))
    {
      v47 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0)
        v47 = v43 & 0xFFFFFFFFFFFFLL;
      v48 = 7;
      if (((v45 >> 60) & ((v43 & 0x800000000000000) == 0)) != 0)
        v48 = 11;
      if (!v47)
      {
LABEL_48:
        v56 = swift_bridgeObjectRelease();
        v6 = v127;
        v7 = v128;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v127, 1, 1, v128, v56);
        a1 = v126;
LABEL_54:
        sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
        v131 = 0u;
        v132 = 0u;
        v133 = 0;
        goto LABEL_67;
      }
      v49 = v48 | (v47 << 16);
      v50 = 4 * v47;
      v51 = v49;
      while (1)
      {
        v51 = String.index(before:)(v51, v43, v45);
        v52 = String.subscript.getter(v51, v43, v45);
        if (v52 == 95 && v53 == 0xE100000000000000)
          break;
        v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, 95, 0xE100000000000000, 0);
        swift_bridgeObjectRelease();
        if ((v55 & 1) != 0)
          goto LABEL_51;
        if (v51 < 0x4000)
          goto LABEL_48;
      }
      swift_bridgeObjectRelease();
LABEL_51:
      v57 = String.index(after:)(v51, v43, v45);
      if (v50 < v57 >> 14)
        goto LABEL_76;
      v58 = String.subscript.getter(v57, v49, v43, v45);
      v60 = v59;
      v62 = v61;
      v64 = v63;
      v65 = swift_bridgeObjectRelease();
      v66 = static String._fromSubstring(_:)(v58, v60, v62, v64, v65);
      v68 = v67;
      v69 = swift_bridgeObjectRelease();
      v6 = v127;
      UUID.init(uuidString:)(v66, v68, v69);
      a1 = v126;
      v7 = v128;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    v70 = swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v70) == 1)
      goto LABEL_54;
    v71 = v7;
    v72 = v8;
    v73 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v74 = v124;
    v73(v124, v6, v7);
    v75 = v72;
    v76 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v77 = v115;
    v76(v115, v74, v71);
    v78 = objc_msgSend(v35, "ownerName");
    v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v81 = v80;

    v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
    v122 = v73;
    if (v79 != v83)
      goto LABEL_58;
    if (v81 == v82)
    {
      swift_bridgeObjectRelease_n(v81, 2);
    }
    else
    {
LABEL_58:
      v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v81, v83, v82, 0);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v85 = swift_bridgeObjectRelease().n128_u64[0];
      if ((v84 & 1) == 0)
      {
        v88 = objc_msgSend(v35, "ownerName", v85);
        v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
        v87 = v89;

        goto LABEL_61;
      }
    }
    v86 = 0;
    v87 = 0xE000000000000000;
LABEL_61:
    v76(v125, v77, v128);
    v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
    if (v86 == v91 && v87 == v90)
    {
      swift_bridgeObjectRelease();
LABEL_65:
      v93 = swift_bridgeObjectRelease();
      v86 = 0;
      v87 = 0xE000000000000000;
      goto LABEL_66;
    }
    v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, v91, v90, 0);
    v93 = swift_bridgeObjectRelease();
    if ((v92 & 1) != 0)
      goto LABEL_65;
LABEL_66:
    v94 = v126;
    v95 = v75;
    v96 = *(void (**)(char *, uint64_t, __n128))(v75 + 8);
    v97 = v77;
    v7 = v128;
    v96(v97, v128, v93);
    v98 = (uint64_t)v116;
    v122(v116, v125, v7);
    v99 = (uint64_t *)(v98 + *(int *)(v117 + 20));
    *v99 = v86;
    v99[1] = v87;
    v100 = v113;
    sub_1004B84E0(v98, v113, type metadata accessor for CRLBoardIdentifierStorage);
    ((void (*)(char *, uint64_t))v96)(v124, v7);
    v101 = v112;
    sub_1004B84E0(v100, v112, type metadata accessor for CRLBoardIdentifier);
    v102 = v114;
    sub_1004B8460(v101, v114, type metadata accessor for CRLBoardIdentifier);
    v103 = type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(0);
    v104 = swift_allocObject(v103, *(unsigned int *)(v103 + 48), *(unsigned __int16 *)(v103 + 52));
    sub_1004B84E0(v102, v104 + OBJC_IVAR____TtC8Freeform34CRLBoardSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    *((_QWORD *)&v132 + 1) = v103;
    v133 = &off_1012A5990;
    *(_QWORD *)&v131 = v104;
    sub_1004B84A4(v101, type metadata accessor for CRLBoardIdentifier);
    a1 = v94;
    v8 = v95;
    v6 = v127;
LABEL_67:

    if (*((_QWORD *)&v132 + 1))
    {
      sub_1004DB728(&v131, (uint64_t)v134);
      sub_1004DB728(v134, (uint64_t)&v131);
      v105 = a1;
      if ((swift_isUniquelyReferenced_nonNull_native(v129) & 1) == 0)
        v129 = (double *)sub_100D114A8(0, *((_QWORD *)v129 + 2) + 1, 1, v129);
      v26 = v136;
      v106 = v130;
      v108 = *((_QWORD *)v129 + 2);
      v107 = *((_QWORD *)v129 + 3);
      if (v108 >= v107 >> 1)
        v129 = (double *)sub_100D114A8((_QWORD *)(v107 > 1), v108 + 1, 1, v129);
      v109 = v129;
      *((_QWORD *)v129 + 2) = v108 + 1;
      v24 = (_QWORD *)sub_1004DB728(&v131, (uint64_t)&v109[5 * v108 + 4]);
      v27 = v106;
      a1 = v105;
      if (v105 < 0)
        goto LABEL_13;
    }
    else
    {
      v24 = (_QWORD *)sub_1004CB800((uint64_t)&v131, &qword_1013F2138);
      v26 = v136;
      v27 = v130;
      if (a1 < 0)
        goto LABEL_13;
    }
LABEL_16:
    if (!v27)
      break;
    v130 = (v27 - 1) & v27;
    v37 = __clz(__rbit64(v27)) | (v26 << 6);
    v136 = v26;
LABEL_34:
    v35 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v37);
    if (!v35)
      goto LABEL_74;
  }
  v38 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
LABEL_76:
    __break(1u);
    return;
  }
  if (v38 >= v120)
    goto LABEL_74;
  v39 = *(_QWORD *)(v121 + 8 * v38);
  v40 = v26 + 1;
  if (v39)
    goto LABEL_33;
  v40 = v26 + 2;
  if (v26 + 2 >= v120)
    goto LABEL_74;
  v39 = *(_QWORD *)(v121 + 8 * v40);
  if (v39)
    goto LABEL_33;
  v40 = v26 + 3;
  if (v26 + 3 >= v120)
    goto LABEL_74;
  v39 = *(_QWORD *)(v121 + 8 * v40);
  if (v39)
    goto LABEL_33;
  v40 = v26 + 4;
  if (v26 + 4 >= v120)
    goto LABEL_74;
  v39 = *(_QWORD *)(v121 + 8 * v40);
  if (v39)
    goto LABEL_33;
  v40 = v26 + 5;
  if (v26 + 5 >= v120)
    goto LABEL_74;
  v39 = *(_QWORD *)(v121 + 8 * v40);
  if (v39)
  {
LABEL_33:
    v130 = (v39 - 1) & v39;
    v136 = v40;
    v37 = __clz(__rbit64(v39)) + (v40 << 6);
    goto LABEL_34;
  }
  v41 = v26 + 6;
  while (v120 != v41)
  {
    v39 = *(_QWORD *)(v121 + 8 * v41++);
    if (v39)
    {
      v40 = v41 - 1;
      goto LABEL_33;
    }
  }
LABEL_74:
  sub_1004D284C(a1);
}

void sub_1007AF464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v33;
  uint64_t v34;
  __int128 v35[2];
  _QWORD v36[6];
  uint64_t v37;

  v37 = a5;
  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v9 = sub_1005A15B8(&qword_1013E8818, &qword_1013E8810, CKRecordID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v10 = Set.Iterator.init(_cocoa:)(v36, v7, v8, v9);
    v5 = v36[0];
    v31 = v36[1];
    v11 = v36[2];
    v12 = v36[3];
    v13 = v36[4];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v11 = ~v14;
    v15 = -v14;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v13 = v16 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v12 = 0;
  }
  v30 = (unint64_t)(v11 + 64) >> 6;
  v17 = _swiftEmptyArrayStorage;
  while (v5 < 0)
  {
    v21 = __CocoaSet.Iterator.next()(v10);
    if (!v21)
      goto LABEL_42;
    v22 = v21;
    *(_QWORD *)&v33 = v21;
    v23 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
    v24 = *(id *)&v35[0];
    swift_unknownObjectRelease(v22);
    v20 = v12;
    v18 = v13;
    if (!v24)
      goto LABEL_42;
LABEL_36:
    sub_100B39B84(v24, a4, v37, (uint64_t)&v33);

    if (v34)
    {
      sub_1004DB728(&v33, (uint64_t)v35);
      sub_1004DB728(v35, (uint64_t)&v33);
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = (double *)sub_100D114A8(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v29 = *((_QWORD *)v17 + 2);
      v28 = *((_QWORD *)v17 + 3);
      if (v29 >= v28 >> 1)
        v17 = (double *)sub_100D114A8((_QWORD *)(v28 > 1), v29 + 1, 1, v17);
      *((_QWORD *)v17 + 2) = v29 + 1;
      v10 = (_QWORD *)sub_1004DB728(&v33, (uint64_t)&v17[5 * v29 + 4]);
    }
    else
    {
      v10 = (_QWORD *)sub_1004CB800((uint64_t)&v33, &qword_1013F2138);
    }
    v12 = v20;
    v13 = v18;
  }
  if (v13)
  {
    v18 = (v13 - 1) & v13;
    v19 = __clz(__rbit64(v13)) | (v12 << 6);
    v20 = v12;
LABEL_35:
    v24 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v19);
    if (!v24)
      goto LABEL_42;
    goto LABEL_36;
  }
  v25 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v25 >= v30)
      goto LABEL_42;
    v26 = *(_QWORD *)(v31 + 8 * v25);
    v20 = v12 + 1;
    if (!v26)
    {
      v20 = v12 + 2;
      if (v12 + 2 >= v30)
        goto LABEL_42;
      v26 = *(_QWORD *)(v31 + 8 * v20);
      if (!v26)
      {
        v20 = v12 + 3;
        if (v12 + 3 >= v30)
          goto LABEL_42;
        v26 = *(_QWORD *)(v31 + 8 * v20);
        if (!v26)
        {
          v20 = v12 + 4;
          if (v12 + 4 >= v30)
            goto LABEL_42;
          v26 = *(_QWORD *)(v31 + 8 * v20);
          if (!v26)
          {
            v20 = v12 + 5;
            if (v12 + 5 >= v30)
              goto LABEL_42;
            v26 = *(_QWORD *)(v31 + 8 * v20);
            if (!v26)
            {
              v27 = v12 + 6;
              while (v30 != v27)
              {
                v26 = *(_QWORD *)(v31 + 8 * v27++);
                if (v26)
                {
                  v20 = v27 - 1;
                  goto LABEL_34;
                }
              }
LABEL_42:
              sub_1004D284C(v5);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v18 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v20 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_1007AF818(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8)
      goto LABEL_23;
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v8)
        goto LABEL_23;
      v16 = *(_QWORD *)(v4 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v8)
          goto LABEL_23;
        v16 = *(_QWORD *)(v4 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v8)
            goto LABEL_23;
          v16 = *(_QWORD *)(v4 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = 8 * v11;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v12);
    v14 = *(id *)(*(_QWORD *)(a1 + 48) + v12);
    swift_bridgeObjectRetain(v13);
    a2(v14, v13);
    swift_bridgeObjectRelease(v13);

  }
  v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v16 = *(_QWORD *)(v4 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1007AF9A8()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  _BYTE *v17;
  char isEscapingClosureAtFileLocation;
  _QWORD v19[5];
  uint64_t v20;
  char v21[72];
  char v22[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v22, 0, 0);
  v1 = (void *)static OS_os_log.dataSync;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v21);
  v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v5 = 0x5320646572616853;
  else
    v5 = 0x2065746176697250;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v6 = 0xEC00000065706F63;
  else
    v6 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  v7 = v1;
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "<%{public}@> Sync engine started fetching changes from CloudKit", 63, 2, v4);
  swift_setDeallocating(v4);
  v10 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v4 + 32, 1, v10);

  v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v12 = swift_allocObject(&unk_10127DC08, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  v13 = swift_allocObject(&unk_10127DC30, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1007B10A0;
  *(_QWORD *)(v13 + 24) = v12;
  v19[4] = sub_1005B72B0;
  v20 = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = *(_QWORD *)"";
  v19[2] = sub_100618D24;
  v19[3] = &unk_10127DC48;
  v14 = _Block_copy(v19);
  v15 = v20;
  v16 = v11;
  v17 = v0;
  swift_retain(v13);
  swift_release(v15);
  dispatch_sync(v16, v14);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 82, 2037, 20, 1);
  swift_release(v12);
  swift_release(v13);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1007AFC18()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  _BYTE *v17;
  char isEscapingClosureAtFileLocation;
  _QWORD v19[5];
  uint64_t v20;
  char v21[72];
  char v22[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v22, 0, 0);
  v1 = (void *)static OS_os_log.dataSync;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v21);
  v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v5 = 0x5320646572616853;
  else
    v5 = 0x2065746176697250;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
    v6 = 0xEC00000065706F63;
  else
    v6 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  v7 = v1;
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "<%{public}@> Sync engine stopped fetching changes from CloudKit", 63, 2, v4);
  swift_setDeallocating(v4);
  v10 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v4 + 32, 1, v10);

  v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  v12 = swift_allocObject(&unk_10127DC80, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  v13 = swift_allocObject(&unk_10127DCA8, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1007B10D0;
  *(_QWORD *)(v13 + 24) = v12;
  v19[4] = sub_1005B72B0;
  v20 = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = *(_QWORD *)"";
  v19[2] = sub_100618D24;
  v19[3] = &unk_10127DCC0;
  v14 = _Block_copy(v19);
  v15 = v20;
  v16 = v11;
  v17 = v0;
  swift_retain(v13);
  swift_release(v15);
  dispatch_sync(v16, v14);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 82, 2055, 20, 1);
  swift_release(v12);
  swift_release(v13);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1007AFE88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1007AFEAC()
{
  sub_1007ACAE8();
}

uint64_t sub_1007AFECC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007AFEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1007AFEEC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1007AFEF4()
{
  uint64_t v0;

  return sub_1007AC4B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1007AFEFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1007AFF0C(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1007AAB5C(a1, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), *(uint64_t **)(v2 + 32), a2);
}

void sub_1007AFF18(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t (*v35)(uint64_t, uint64_t);
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  BOOL v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  Swift::String v45;
  Swift::String v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  Swift::String v52;
  __n128 v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  __n128 v61;
  void *v62;
  uint64_t v63;
  uint64_t inited;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  __n128 v88;
  Swift::String v89;
  Swift::String v90;
  id v91;
  id v92;
  uint64_t v93;
  void *v94;
  void *v95;
  Swift::String v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  char isUniquelyReferenced_nonNull_native;
  id v112;
  id v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[3];
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char v125[72];
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  __int128 v129;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (id *)((char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = v11;
  v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_49;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider);
  if (!Strong)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v126, 0, 0);
    v62 = (void *)static OS_os_log.dataSync;
    v63 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v63, v125);
    v65 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v66 = 0x5320646572616853;
    else
      v66 = 0x2065746176697250;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v67 = 0xEC00000065706F63;
    else
      v67 = 0xED000065706F6353;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(v65 + 32) = v66;
    *(_QWORD *)(v65 + 40) = v67;
    v59 = v62;
    v69 = static os_log_type_t.default.getter(v68);
    sub_100A06EBC((uint64_t)v59, &_mh_execute_header, v69, "<%{public}@> Cannot handle save failure since a sync logic provider is not set", 78, 2, v65);
    swift_setDeallocating(v65);
    v70 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v65 + 32, 1, v70);
    goto LABEL_26;
  }
  v10 = (_QWORD *)Strong;
  v13 = (uint64_t)objc_msgSend(a2, "recordID");
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 24);
  if (!*(_QWORD *)(v15 + 16))
  {
LABEL_28:
    if (qword_1013DD870 == -1)
    {
LABEL_29:
      swift_beginAccess(&static OS_os_log.dataSync, &v126, 0, 0);
      v71 = (void *)static OS_os_log.dataSync;
      v72 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v73 = swift_initStackObject(v72, &v124);
      v74 = (_QWORD *)v73;
      *(_OWORD *)(v73 + 16) = xmmword_100EF5A10;
      if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v75 = 0x5320646572616853;
      else
        v75 = 0x2065746176697250;
      if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
        v76 = 0xEC00000065706F63;
      else
        v76 = 0xED000065706F6353;
      *(_QWORD *)(v73 + 56) = &type metadata for String;
      *(_QWORD *)(v73 + 64) = sub_1004CFC2C();
      v74[4] = v75;
      v74[5] = v76;
      v74[12] = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
      v74[13] = sub_1005A15B8((unint64_t *)&qword_1013F2108, &qword_1013E8810, CKRecordID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v74[9] = v13;
      v77 = (id)v13;
      v78 = v71;
      v79 = static os_log_type_t.error.getter(v78);
      sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v79, "<%{public}@> Failed to find the local change to merge into the remote change for %{public}@.", 92, 2, (uint64_t)v74);
      swift_setDeallocating(v74);
      v80 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v74 + 4, 2, v80);
      swift_unknownObjectRelease(v10);

      return;
    }
LABEL_49:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 24));
  v16 = (id)v13;
  v17 = sub_100843848((uint64_t)v16);
  if ((v18 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v19 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 16 * v17);
  v20 = v16;
  v22 = *v19;
  v21 = v19[1];
  swift_unknownObjectRetain(*v19);
  v117 = v20;

  v23 = swift_bridgeObjectRelease();
  sub_100B4C648(v23);
  if (v24)
  {
    v26 = v25;
    v116 = v24;
    v27 = v10;
    v28 = v21;
    v29 = v27;
    v30 = sub_100B3A714(v24, v25, v22);
    if (v30)
    {
      v32 = v30;
      v33 = v31;
      ObjectType = swift_getObjectType(v30);
      v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 40);
      v114 = (_QWORD *)v32;
      if ((v35(ObjectType, v33) & 1) != 0)
      {
        v115 = v22;
        v113 = v29;
        sub_100B3AC84((uint64_t)v114, v33, a2);
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, &v126, 0, 0);
        v36 = (void *)static OS_os_log.dataSync;
        v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v38 = swift_initStackObject(v37, &v118);
        v39 = (_QWORD *)v38;
        *(_OWORD *)(v38 + 16) = xmmword_100EF5A10;
        v40 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
        if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
          v41 = 0x5320646572616853;
        else
          v41 = 0x2065746176697250;
        if (v40)
          v42 = 0xED000065706F6353;
        else
          v42 = 0xEC00000065706F63;
        *(_QWORD *)(v38 + 56) = &type metadata for String;
        v43 = sub_1004CFC2C();
        v39[4] = v41;
        v39[8] = v43;
        v39[5] = v42;
        v122 = 0x203A65707954;
        v123 = 0xE600000000000000;
        v112 = v36;
        v45._countAndFlagsBits = CKRecord.recordType.getter(v44);
        String.append(_:)(v45);
        swift_bridgeObjectRelease();
        v46._countAndFlagsBits = 0x203A444920;
        v46._object = (void *)0xE500000000000000;
        String.append(_:)(v46);
        v47 = objc_msgSend(a2, "recordID");
        v48 = objc_msgSend(v47, "recordName");

        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v52._countAndFlagsBits = v49;
        v52._object = v51;
        String.append(_:)(v52);
        v53 = swift_bridgeObjectRelease();
        v54 = v122;
        v55 = v123;
        v39[12] = &type metadata for String;
        v39[13] = v43;
        v39[9] = v54;
        v39[10] = v55;
        v56 = static os_log_type_t.default.getter(v53);
        v57 = v112;
        sub_100A06EBC((uint64_t)v112, &_mh_execute_header, v56, "<%{public}@> Resolved conflict for record %{public}@", 52, 2, (uint64_t)v39);
        swift_setDeallocating(v39);
        v58 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v39 + 4, 2, v58);

        swift_beginAccess(a1 + 48, &v122, 33, 0);
        v59 = v117;
        v60 = a2;
        sub_100897778((uint64_t)v60, v59, v61);
        swift_endAccess(&v122);
        swift_unknownObjectRelease(v113);
        swift_unknownObjectRelease(v114);
        swift_unknownObjectRelease(v116);
        swift_unknownObjectRelease(v115);

LABEL_26:
        return;
      }
      swift_unknownObjectRelease(v114);
    }
    v126 = v22;
    v127 = v28 | 0x4000000000000000;
    v109 = v116;
    v128 = v116;
    v129 = (unint64_t)v26;
    swift_beginAccess(a1 + 64, &v122, 33, 0);
    swift_unknownObjectRetain_n(v22, 2);
    swift_unknownObjectRetain_n(v109, 2);
    v110 = v117;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + 64));
    v120[0] = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = 0x8000000000000000;
    sub_100828BDC((uint64_t)&v126, v110, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 64) = v120[0];

    swift_bridgeObjectRelease();
    swift_endAccess(&v122);

    swift_unknownObjectRelease(v29);
    swift_unknownObjectRelease_n(v109, 2);
    v108 = v22;
  }
  else
  {
    v115 = v22;
    v116 = v21;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v122, 0, 0);
    v81 = (void *)static OS_os_log.dataSync;
    v82 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v83 = swift_initStackObject(v82, &v121);
    v84 = (_QWORD *)v83;
    *(_OWORD *)(v83 + 16) = xmmword_100EF5A10;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v85 = 0x5320646572616853;
    else
      v85 = 0x2065746176697250;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
      v86 = 0xEC00000065706F63;
    else
      v86 = 0xED000065706F6353;
    *(_QWORD *)(v83 + 56) = &type metadata for String;
    v87 = sub_1004CFC2C();
    v84[4] = v85;
    v114 = v84 + 4;
    v84[8] = v87;
    v84[5] = v86;
    v126 = 0x203A65707954;
    v127 = 0xE600000000000000;
    v113 = v81;
    v89._countAndFlagsBits = CKRecord.recordType.getter(v88);
    String.append(_:)(v89);
    swift_bridgeObjectRelease();
    v90._countAndFlagsBits = 0x203A444920;
    v90._object = (void *)0xE500000000000000;
    String.append(_:)(v90);
    v91 = objc_msgSend(a2, "recordID");
    v92 = objc_msgSend(v91, "recordName");

    v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
    v95 = v94;

    v96._countAndFlagsBits = v93;
    v96._object = v95;
    String.append(_:)(v96);
    swift_bridgeObjectRelease();
    v97 = v126;
    v98 = v127;
    v84[12] = &type metadata for String;
    v84[13] = v87;
    v84[9] = v97;
    v84[10] = v98;
    v100 = static os_log_type_t.error.getter(v99);
    v101 = v113;
    sub_100A06EBC((uint64_t)v113, &_mh_execute_header, v100, "<%{public}@> Failed to convert server's record to CRLSyncRemoteRecord %{public}@", 80, 2, (uint64_t)v84);
    swift_setDeallocating(v84);
    v102 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v114, 2, v102);

    v103 = v115;
    v126 = v115;
    v127 = v116 | 0x8000000000000000;
    v128 = (uint64_t)a2;
    v129 = xmmword_100F02C20;
    swift_beginAccess(a1 + 64, v120, 33, 0);
    swift_unknownObjectRetain_n(v103, 2);
    v104 = a2;
    v105 = v117;
    v106 = v104;
    v107 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + 64));
    v119 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = 0x8000000000000000;
    sub_100828BDC((uint64_t)&v126, v105, v107);
    *(_QWORD *)(a1 + 64) = v119;

    swift_bridgeObjectRelease();
    swift_endAccess(v120);
    swift_unknownObjectRelease(v10);

    v108 = v103;
  }
  swift_unknownObjectRelease_n(v108, 2);
}

void sub_1007B09B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _BYTE v26[24];
  id v27;
  _BYTE v28[72];
  _BYTE v29[24];

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v10)
  {
    swift_beginAccess(v10 + 48, v29, 0, 0);
    v11 = *(_QWORD *)(v10 + 48);
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(void **)(v12 + 16);
    swift_retain(v10);
    swift_bridgeObjectRetain(v11);
    v14 = v13;
    v15 = sub_10062219C(v14, v11);

    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0 || (*(_BYTE *)(a1 + 56) & 1) != 0)
    {
      swift_release(v10);
    }
    else
    {
      v25 = *(void **)(v12 + 16);
      swift_beginAccess(v10 + 40, v26, 33, 0);
      sub_100ADA730((Swift::Int *)&v27, v25);
      swift_endAccess(v26);
      swift_release(v10);

    }
    return;
  }
  if (qword_1013DD870 != -1)
    goto LABEL_16;
LABEL_7:
  swift_beginAccess(&static OS_os_log.dataSync, v29, 0, 0);
  v16 = (void *)static OS_os_log.dataSync;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v17, v28);
  v19 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v20 = 0x5320646572616853;
  else
    v20 = 0x2065746176697250;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    v21 = 0xEC00000065706F63;
  else
    v21 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v21;
  v22 = v16;
  v23 = static os_log_type_t.error.getter(v22);
  sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v23, "<%{public}@> Could not find active save task for handling zone-not-found error", 78, 2, v19);
  swift_setDeallocating(v19);
  v24 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v19 + 32, 1, v24);

}

double sub_1007B0C70()
{
  uint64_t v0;

  return sub_100ACBABC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

double sub_1007B0C8C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, void *a5)
{
  unint64_t v7;
  double result;

  v7 = a2 >> 62;
  if (a2 >> 62 == 2)
  {
    swift_unknownObjectRelease(a1);
    sub_10071CCD8(a3, a4);
  }
  else if ((_DWORD)v7 == 1)
  {
    swift_unknownObjectRelease(a1);
    *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  else if (!(_DWORD)v7)
  {
    swift_unknownObjectRelease(a1);
    sub_1004BE2FC((uint64_t)a3, a4);

  }
  return result;
}

double sub_1007B0D28(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, void *a5)
{
  unint64_t v7;
  id v8;
  double result;

  v7 = a2 >> 62;
  if (a2 >> 62 == 2)
  {
    swift_unknownObjectRetain(a1);
    sub_10071CCC4(a3, a4);
  }
  else if ((_DWORD)v7 == 1)
  {
    swift_unknownObjectRetain(a1);
    *(_QWORD *)&result = swift_unknownObjectRetain(a3).n128_u64[0];
  }
  else if (!(_DWORD)v7)
  {
    swift_unknownObjectRetain(a1);
    sub_10057939C((uint64_t)a3, a4);
    v8 = a5;
  }
  return result;
}

uint64_t sub_1007B0DC8()
{
  return sub_1007B0E28((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1007A8F30);
}

uint64_t sub_1007B0DD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1007B0E1C()
{
  return sub_1007B0E28((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1007A8624);
}

uint64_t sub_1007B0E28(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1007B0E3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1007B0E68()
{
  uint64_t v0;

  sub_10079D728(*(void **)(v0 + 24));
}

uint64_t sub_1007B0E8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1007B0E9C()
{
  uint64_t v0;

  sub_10079D71C(*(void **)(v0 + 24));
}

uint64_t sub_1007B0EC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007B0ED0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007B0EE0()
{
  uint64_t v0;

  sub_100613114(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_1007B0F10()
{
  uint64_t v0;

  return sub_1007A6D54(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1007B0F20()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100613114(*(void **)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1007B0F58()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1013F20CC);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1004CF80C;
  *(_QWORD *)(v4 + 280) = v3;
  *(_BYTE *)(v4 + 320) = v2;
  *(_OWORD *)(v4 + 264) = v6;
  return swift_task_switch(sub_1007A6E60, 0, 0);
}

void sub_1007B0FDC(double **a1@<X8>)
{
  uint64_t v1;

  sub_1005808D0(v1, a1);
}

void sub_1007B0FF4(uint64_t a1@<X8>)
{
  sub_1007A4980(a1);
}

uint64_t sub_1007B101C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1007B1050()
{
  uint64_t *v0;

  sub_1007A7E38(v0[2], v0[3], v0[4]);
}

