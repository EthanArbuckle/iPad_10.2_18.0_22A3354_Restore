float sub_1008BF750@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  float *v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  double v36;
  float v37;
  const mach_header_64 *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  float result;
  float v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  float *v50;
  __int16 v51;
  char v52;
  _BYTE v53[7];
  _BYTE v54[95];
  _OWORD v55[5];
  uint64_t v56;

  v4 = objc_msgSend(a1, "pattern");
  v5 = objc_msgSend(v4, "patternType");

  if (v5)
  {
    if (v5 == (id)2)
    {
      v49 = 0;
      v50 = 0;
      v6 = 0;
      v7 = 2;
    }
    else
    {
      if (v5 != (id)1)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 236, "Unknown stroke pattern type. Falling back to archiving solid.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 236, (uint64_t)"Unknown stroke pattern type. Falling back to archiving solid.", 61, 2u);
      }
      v49 = 0;
      v50 = 0;
      v6 = 0;
      v7 = 0;
    }
  }
  else
  {
    v8 = objc_msgSend(a1, "pattern");
    v9 = sub_1008BF1A8(v8);
    v49 = v10;
    v50 = v9;
    v12 = v11;

    v6 = v12;
    v7 = 1;
  }
  sub_1006C5DE8(objc_msgSend(a1, "color"), (uint64_t)v55);
  *(_OWORD *)&v54[39] = v55[2];
  *(_OWORD *)&v54[55] = v55[3];
  *(_OWORD *)&v54[71] = v55[4];
  *(_QWORD *)&v54[87] = v56;
  *(_OWORD *)&v54[7] = v55[0];
  *(_OWORD *)&v54[23] = v55[1];
  objc_msgSend(a1, "widthForDefaultAndDowngradePersistence");
  v14 = v13;
  v15 = objc_msgSend(a1, "cap");
  if (v15 == (id)2)
  {
    v16 = 2;
  }
  else if (v15 == (id)1)
  {
    v16 = 1;
  }
  else
  {
    if (v15)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 252, "Unknown stroke cap type. Falling back to archiving butt.", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 252, (uint64_t)"Unknown stroke cap type. Falling back to archiving butt.", 56, 2u);
    }
    v16 = 0;
  }
  v17 = objc_msgSend(a1, "join");
  if (v17 == (id)2)
  {
    v18 = 2;
  }
  else if (v17 == (id)1)
  {
    v18 = 1;
  }
  else
  {
    if (v17)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 264, "Unknown stroke cap type. Falling back to archiving miter.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 264, (uint64_t)"Unknown stroke cap type. Falling back to archiving miter.", 57, 2u);
    }
    v18 = 0;
  }
  objc_msgSend(a1, "miterLimit");
  v20 = v19;
  v21 = objc_opt_self(CRLSmartStroke);
  v22 = (void *)swift_dynamicCastObjCClass(a1, v21);
  if (v22)
  {
    v23 = (void *)sub_1008BF2B0(v22);
    v25 = v24;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v31 = v30 & 1;
  }
  else
  {
    v32 = objc_opt_self(CRLPencilKitInkStroke);
    v23 = (void *)swift_dynamicCastObjCClass(a1, v32);
    if (v23)
    {
      v48 = v18;
      v33 = a1;
      v34 = objc_msgSend(v23, "inkType");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v27 = v35;

      objc_msgSend(v23, "width");
      v37 = v36;
      LODWORD(v34) = objc_msgSend(v23, "isFountainPenInkV2");

      v38 = &_mh_execute_header;
      if (!(_DWORD)v34)
        v38 = 0;
      v28 = (unint64_t)v38 | LODWORD(v37);
      v39 = objc_msgSend(v23, "fallbackSmartStrokeForPersistence");
      if (v39)
      {
        v23 = (void *)sub_1008BF2B0(v39);
        v47 = v6;
        v40 = v16;
        v41 = v7;
        v43 = v42;
        v25 = v44;

        v31 = v43 & 1;
        v7 = v41;
        v16 = v40;
        v6 = v47;
      }
      else
      {

        v23 = 0;
        v31 = 0;
        v25 = 0;
      }
      v29 = &_swiftEmptyDictionarySingleton;
      v18 = v48;
    }
    else
    {

      v31 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
    }
  }
  result = v20;
  v46 = v14;
  *(_DWORD *)(a2 + 121) = *(_DWORD *)v53;
  *(_DWORD *)(a2 + 124) = *(_DWORD *)&v53[3];
  *(_WORD *)(a2 + 137) = v51;
  *(_BYTE *)(a2 + 139) = v52;
  *(_QWORD *)a2 = v7;
  *(_BYTE *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 9) = *(_OWORD *)v54;
  *(_OWORD *)(a2 + 25) = *(_OWORD *)&v54[16];
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v54[79];
  *(_OWORD *)(a2 + 73) = *(_OWORD *)&v54[64];
  *(_OWORD *)(a2 + 57) = *(_OWORD *)&v54[48];
  *(_OWORD *)(a2 + 41) = *(_OWORD *)&v54[32];
  *(float *)(a2 + 104) = v46;
  *(_QWORD *)(a2 + 112) = v16;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = v18;
  *(_BYTE *)(a2 + 136) = 0;
  *(float *)(a2 + 140) = result;
  *(_QWORD *)(a2 + 144) = v50;
  *(_QWORD *)(a2 + 152) = v6;
  *(_QWORD *)(a2 + 160) = v49;
  *(_QWORD *)(a2 + 168) = v23;
  *(_QWORD *)(a2 + 176) = v31;
  *(_QWORD *)(a2 + 184) = v25;
  *(_QWORD *)(a2 + 192) = v26;
  *(_QWORD *)(a2 + 200) = v27;
  *(_QWORD *)(a2 + 208) = v28;
  *(_QWORD *)(a2 + 216) = v29;
  *(_QWORD *)(a2 + 224) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1008BFCFC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x6E726574746170 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E726574746170, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6573616870 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6573616870, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

float sub_1008BFE44(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  float v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = sub_1004B804C(&qword_1013F86A8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_1008BBBE8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLStrokePatternData.CodingKeys, &type metadata for CRLStrokePatternData.CodingKeys, v10, v8, v9);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v11 = sub_1004B804C(&qword_1013F86B0);
    v19 = 0;
    v12 = sub_1008C17A4(&qword_1013F86B8, (uint64_t)&protocol witness table for Float, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, &v19, v4, v11, v12);
    v14 = v20;
    LOBYTE(v20) = 1;
    swift_bridgeObjectRetain(v14);
    KeyedDecodingContainer.decode(_:forKey:)(&v20, v4);
    v2 = v15;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = 2;
    v17 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v16, &v19, v4, v16, v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain(v20);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_1008C0074(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

uint64_t sub_1008C0084(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x7274537472616D73 && a2 == 0xEF65707954656B6FLL)
  {
    v5 = 0xEF65707954656B6FLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7274537472616D73, 0xEF65707954656B6FLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1008C0194(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v2 = sub_1004B804C(&qword_1013F87C8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  sub_1004BB5A4(a1, v6);
  v8 = sub_1008C2148();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSmartStrokeData.CodingKeys, &type metadata for CRLSmartStrokeData.CodingKeys, v8, v6, v7);
  v9 = sub_1004B804C(&qword_1013F86E0);
  v16 = 0;
  v10 = sub_1008C2438(&qword_1013F87D0, &qword_1013F86E0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v9, &v16, v2, v9, v10);
  v11 = v17;
  v12 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v16 = 1;
  v13 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v16, v2, v12, v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v11;
}

uint64_t sub_1008C034C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x657079546B6E69 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657079546B6E69, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6874646977 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6874646977, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000012)
  {
    v8 = 0x8000000100FDC940;
    if (a2 == 0x8000000100FDC940)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100FDC940, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_1008C04F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  unsigned __int32 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  v5 = sub_1004B804C(&qword_1013F8688);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008BCC9C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLPencilKitInkStrokeData.CodingKeys, &type metadata for CRLPencilKitInkStrokeData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v26 = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v14 = v13;
    v25 = 1;
    swift_bridgeObjectRetain(v13);
    KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
    v16 = v15.n128_u32[0];
    v24 = 2;
    v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v24, v5, v15);
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v22 = 3;
    v18 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v17, &v22, v5, v17, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = v23;
    swift_bridgeObjectRetain(v23);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v12;
    *(_QWORD *)(a2 + 8) = v14;
    *(_DWORD *)(a2 + 16) = v16;
    *(_BYTE *)(a2 + 20) = v21;
    *(_QWORD *)(a2 + 24) = v19;
  }
}

uint64_t sub_1008C0720(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 9)
    return 10;
  else
    return byte_100F15098[a1 + 1];
}

uint64_t sub_1008C0744(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F6C6F63, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6874646977 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6874646977, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 7364963 && a2 == 0xE300000000000000)
  {
    v9 = 0xE300000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7364963, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 1852403562 && a2 == 0xE400000000000000)
  {
    v10 = 0xE400000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1852403562, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x6D694C726574696DLL && a2 == 0xEA00000000007469)
  {
    v11 = 0xEA00000000007469;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D694C726574696DLL, 0xEA00000000007469, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x6E726574746170 && a2 == 0xE700000000000000)
  {
    v12 = 0xE700000000000000;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E726574746170, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x7274537472616D73 && a2 == 0xEF61746144656B6FLL)
  {
    v13 = 0xEF61746144656B6FLL;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7274537472616D73, 0xEF61746144656B6FLL, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0xD000000000000016)
  {
    v14 = 0x8000000100FDC920;
    if (a2 == 0x8000000100FDC920)
      goto LABEL_55;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100FDC920, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_55:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 9;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

void sub_1008C0B38(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char v123;
  _BYTE v124[7];
  uint64_t v125;
  char v126;
  __int16 v127;
  char v128;
  int v129;
  unsigned __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  __int16 v142;
  char v143;
  char v144;
  _BYTE v145[7];
  char v146;
  __int16 v147;
  char v148;
  char v149;
  _BYTE v150[7];
  char v151;
  _QWORD *v152;

  v5 = sub_1004B804C(&qword_1013F8610);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v152 = a1;
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008BDF04();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLStrokeData.CodingKeys, &type metadata for CRLStrokeData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v152);
    swift_bridgeObjectRelease();
  }
  else
  {
    v92 = v6;
    v84 = a2;
    v12 = sub_1004B804C(&qword_1013F85D8);
    LOBYTE(v93) = 0;
    v13 = sub_1008C2438(&qword_1013F8618, &qword_1013F85D8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v93, v5, v12, v13);
    v14 = v108;
    LODWORD(v12) = v109;
    v151 = v109;
    LOBYTE(v93) = 1;
    v15 = sub_1006C6638();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLColorData, &v93, v5, &type metadata for CRLColorData, v15);
    v74 = v12;
    v75 = v108;
    v16 = BYTE4(v108);
    v81 = v14;
    v82 = v109;
    v17 = v112;
    v79 = v111;
    v80 = v110;
    v77 = v114;
    v78 = v113;
    v18 = v115;
    v76 = v116;
    v19 = v117;
    v20 = v118;
    v149 = BYTE4(v108);
    LOBYTE(v108) = 2;
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v20);
    v83 = v17;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    KeyedDecodingContainer.decode(_:forKey:)(&v108, v5);
    v90 = v19;
    v91 = v18;
    v22 = v21;
    v72 = v16;
    v73 = v20;
    v23 = sub_1004B804C(&qword_1013F85E8);
    LOBYTE(v93) = 3;
    v24 = sub_1008C2438(&qword_1013F8620, &qword_1013F85E8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, &v93, v5, v23, v24);
    v25 = v108;
    v26 = v109;
    v146 = v109;
    v27 = sub_1004B804C(&qword_1013F85F8);
    LOBYTE(v93) = 4;
    v28 = sub_1008C2438(&qword_1013F8628, &qword_1013F85F8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v27, &v93, v5, v27, v28);
    v71 = v25;
    v29 = v108;
    LODWORD(v27) = v109;
    v144 = v109;
    LOBYTE(v108) = 5;
    KeyedDecodingContainer.decode(_:forKey:)(&v108, v5);
    v31 = v30;
    v70 = v29;
    v69 = v27;
    LOBYTE(v93) = 6;
    v32 = sub_1008BBA80();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLStrokePatternData, &v93, v5, &type metadata for CRLStrokePatternData, v32);
    v33 = v108;
    v34 = v109;
    LOBYTE(v93) = 7;
    v89 = v110;
    sub_1004C3910(v108, v109, v110);
    v35 = sub_1008C154C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLSmartStrokeData, &v93, v5, &type metadata for CRLSmartStrokeData, v35);
    *(_QWORD *)&v88 = v33;
    *((_QWORD *)&v88 + 1) = v34;
    v66 = v26;
    v36 = v110;
    v67 = v109;
    v68 = v108;
    LOBYTE(v93) = 8;
    v37 = sub_1008BCB34();
    swift_bridgeObjectRetain(v36);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLPencilKitInkStrokeData, &v93, v5, &type metadata for CRLPencilKitInkStrokeData, v37);
    v38 = v36;
    v40 = v108;
    v39 = v109;
    v42 = v110;
    v41 = v111;
    v65 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v140 = 9;
    v85 = v39;
    v86 = v41;
    v87 = v42;
    sub_1004C393C(v40, v39, v42, v41);
    v43 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v65, &v140, v5, v65, v43);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v8, v5);
    v92 = v141;
    swift_bridgeObjectRetain(v141);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v93 = v81;
    BYTE8(v93) = v74;
    LODWORD(v94) = v75;
    BYTE4(v94) = v72;
    *((_QWORD *)&v94 + 1) = v82;
    *(_QWORD *)&v95 = v80;
    *((_QWORD *)&v95 + 1) = v79;
    *(_QWORD *)&v96 = v83;
    *((_QWORD *)&v96 + 1) = v78;
    *(_QWORD *)&v97 = v77;
    *((_QWORD *)&v97 + 1) = v91;
    *(_QWORD *)&v98 = v76;
    v44 = v89;
    *((_QWORD *)&v98 + 1) = v90;
    *(_QWORD *)&v99 = v73;
    DWORD2(v99) = v22;
    *(_QWORD *)&v100 = v71;
    BYTE8(v100) = v66;
    *(_QWORD *)&v101 = v70;
    BYTE8(v101) = v69;
    HIDWORD(v101) = v31;
    v45 = v88;
    v102 = v88;
    *(_QWORD *)&v103 = v89;
    *((_QWORD *)&v103 + 1) = v68;
    *(_QWORD *)&v104 = v67;
    *((_QWORD *)&v104 + 1) = v38;
    v63 = v38;
    v64 = v40;
    v46 = v40;
    v47 = v85;
    *(_QWORD *)&v105 = v40;
    *((_QWORD *)&v105 + 1) = v85;
    v49 = v86;
    v48 = v87;
    *(_QWORD *)&v106 = v87;
    *((_QWORD *)&v106 + 1) = v86;
    v107 = v92;
    sub_1004F2958(&v93);
    swift_bridgeObjectRelease();
    sub_1004C36E8(v46, v47, v48, v49);
    v50 = v63;
    swift_bridgeObjectRelease();
    sub_1004C36BC(v45, *((uint64_t *)&v88 + 1), v44);
    v51 = v73;
    swift_bridgeObjectRelease();
    v52 = v90;
    swift_bridgeObjectRelease();
    v53 = v91;
    swift_bridgeObjectRelease();
    v54 = v83;
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v152);
    v108 = v81;
    LOBYTE(v109) = v151;
    *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v150;
    HIDWORD(v109) = *(_DWORD *)&v150[3];
    LODWORD(v110) = v75;
    BYTE4(v110) = v149;
    *(_WORD *)((char *)&v110 + 5) = v147;
    HIBYTE(v110) = v148;
    v111 = v82;
    v112 = v80;
    v113 = v79;
    v114 = v54;
    v115 = v78;
    v116 = v77;
    v117 = v53;
    v118 = v76;
    v119 = v52;
    v120 = v51;
    v121 = v22;
    v122 = v71;
    v123 = v146;
    *(_DWORD *)v124 = *(_DWORD *)v145;
    *(_DWORD *)&v124[3] = *(_DWORD *)&v145[3];
    v125 = v70;
    v126 = v144;
    v127 = v142;
    v128 = v143;
    v129 = v31;
    v130 = __PAIR128__(*((unint64_t *)&v88 + 1), v45);
    v131 = v44;
    v132 = v68;
    v133 = v67;
    v134 = v50;
    v135 = v64;
    v136 = v85;
    v137 = v87;
    v138 = v86;
    v139 = v92;
    sub_1008C1590(&v108);
    v55 = v106;
    v56 = v84;
    *(_OWORD *)(v84 + 192) = v105;
    *(_OWORD *)(v56 + 208) = v55;
    *(_QWORD *)(v56 + 224) = v107;
    v57 = v102;
    *(_OWORD *)(v56 + 128) = v101;
    *(_OWORD *)(v56 + 144) = v57;
    v58 = v104;
    *(_OWORD *)(v56 + 160) = v103;
    *(_OWORD *)(v56 + 176) = v58;
    v59 = v98;
    *(_OWORD *)(v56 + 64) = v97;
    *(_OWORD *)(v56 + 80) = v59;
    v60 = v100;
    *(_OWORD *)(v56 + 96) = v99;
    *(_OWORD *)(v56 + 112) = v60;
    v61 = v94;
    *(_OWORD *)v56 = v93;
    *(_OWORD *)(v56 + 16) = v61;
    v62 = v96;
    *(_OWORD *)(v56 + 32) = v95;
    *(_OWORD *)(v56 + 48) = v62;
  }
}

unint64_t sub_1008C154C()
{
  unint64_t result;

  result = qword_1013F8630;
  if (!qword_1013F8630)
  {
    result = swift_getWitnessTable(&unk_100F14E60, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8630);
  }
  return result;
}

_QWORD *sub_1008C1590(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[18];
  v3 = a1[19];
  v4 = a1[20];
  v5 = a1[24];
  v6 = a1[25];
  v8 = a1[27];
  v9 = a1[26];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004C36BC(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1004C36E8(v5, v6, v9, v8);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1008C1650()
{
  unint64_t result;

  result = qword_1013F8668;
  if (!qword_1013F8668)
  {
    result = swift_getWitnessTable(&unk_100F14E38, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8668);
  }
  return result;
}

unint64_t sub_1008C1694()
{
  unint64_t result;

  result = qword_1013F8678;
  if (!qword_1013F8678)
  {
    result = swift_getWitnessTable(&unk_100F14268, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8678);
  }
  return result;
}

unint64_t sub_1008C16D8()
{
  unint64_t result;

  result = qword_1013F8680;
  if (!qword_1013F8680)
  {
    result = swift_getWitnessTable(&unk_100F14240, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8680);
  }
  return result;
}

unint64_t sub_1008C171C()
{
  unint64_t result;

  result = qword_1013F8698;
  if (!qword_1013F8698)
  {
    result = swift_getWitnessTable(&unk_100F13F88, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8698);
  }
  return result;
}

unint64_t sub_1008C1760()
{
  unint64_t result;

  result = qword_1013F86A0;
  if (!qword_1013F86A0)
  {
    result = swift_getWitnessTable(&unk_100F13F60, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F86A0);
  }
  return result;
}

uint64_t sub_1008C17A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(&qword_1013F86B0);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008C1804()
{
  unint64_t result;

  result = qword_1013F86D0;
  if (!qword_1013F86D0)
  {
    result = swift_getWitnessTable(&unk_100F13C70, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F86D0);
  }
  return result;
}

unint64_t sub_1008C1848()
{
  unint64_t result;

  result = qword_1013F86D8;
  if (!qword_1013F86D8)
  {
    result = swift_getWitnessTable(&unk_100F13C48, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F86D8);
  }
  return result;
}

uint64_t sub_1008C188C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F86E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for CRLSmartStrokeData.SmartStrokeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1008C1918 + 4 * byte_100F13913[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1008C194C + 4 * byte_100F1390E[v4]))();
}

uint64_t sub_1008C194C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C195CLL);
  return result;
}

uint64_t sub_1008C1968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C1970);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1008C1974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C197C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSmartStrokeData.SmartStrokeType()
{
  return &type metadata for CRLSmartStrokeData.SmartStrokeType;
}

uint64_t storeEnumTagSinglePayload for CRLStrokeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1008C19E4 + 4 * byte_100F1391D[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1008C1A18 + 4 * byte_100F13918[v4]))();
}

uint64_t sub_1008C1A18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C1A28);
  return result;
}

uint64_t sub_1008C1A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C1A3CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1008C1A40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1A48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLStrokeData.CodingKeys()
{
  return &type metadata for CRLStrokeData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLPencilKitInkStrokeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1008C1AB0 + 4 * byte_100F13927[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1008C1AE4 + 4 * byte_100F13922[v4]))();
}

uint64_t sub_1008C1AE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1AEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C1AF4);
  return result;
}

uint64_t sub_1008C1B00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C1B08);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1008C1B0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1B14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPencilKitInkStrokeData.CodingKeys()
{
  return &type metadata for CRLPencilKitInkStrokeData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLStrokePatternData.CodingKeys()
{
  return &type metadata for CRLStrokePatternData.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLSmartStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLSmartStrokeData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for CRLSmartStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLSmartStrokeData()
{
  return &type metadata for CRLSmartStrokeData;
}

ValueMetadata *type metadata accessor for CRLStrokeData.JoinType()
{
  return &type metadata for CRLStrokeData.JoinType;
}

ValueMetadata *type metadata accessor for CRLStrokeData.CapType()
{
  return &type metadata for CRLStrokeData.CapType;
}

uint64_t _s8Freeform13CRLStrokeDataV10StrokeTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1008C1C84 + 4 * byte_100F13931[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1008C1CB8 + 4 * byte_100F1392C[v4]))();
}

uint64_t sub_1008C1CB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1CC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C1CC8);
  return result;
}

uint64_t sub_1008C1CD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C1CDCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1008C1CE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C1CE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLStrokeData.StrokeType()
{
  return &type metadata for CRLStrokeData.StrokeType;
}

unint64_t sub_1008C1D08()
{
  unint64_t result;

  result = qword_1013F86F0;
  if (!qword_1013F86F0)
  {
    result = swift_getWitnessTable(&unk_100F14330, &type metadata for CRLStrokeData.StrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F86F0);
  }
  return result;
}

unint64_t sub_1008C1D50()
{
  unint64_t result;

  result = qword_1013F86F8;
  if (!qword_1013F86F8)
  {
    result = swift_getWitnessTable(&unk_100F14378, &type metadata for CRLStrokeData.StrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F86F8);
  }
  return result;
}

unint64_t sub_1008C1D98()
{
  unint64_t result;

  result = qword_1013F8700;
  if (!qword_1013F8700)
  {
    result = swift_getWitnessTable(&unk_100F144A0, &type metadata for CRLStrokeData.StrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F8700);
  }
  return result;
}

unint64_t sub_1008C1DE0()
{
  unint64_t result;

  result = qword_1013F8708;
  if (!qword_1013F8708)
  {
    result = swift_getWitnessTable(&unk_100F144C8, &type metadata for CRLStrokeData.CapType);
    atomic_store(result, (unint64_t *)&qword_1013F8708);
  }
  return result;
}

unint64_t sub_1008C1E28()
{
  unint64_t result;

  result = qword_1013F8710;
  if (!qword_1013F8710)
  {
    result = swift_getWitnessTable(&unk_100F14510, &type metadata for CRLStrokeData.CapType);
    atomic_store(result, (unint64_t *)&qword_1013F8710);
  }
  return result;
}

unint64_t sub_1008C1E70()
{
  unint64_t result;

  result = qword_1013F8718;
  if (!qword_1013F8718)
  {
    result = swift_getWitnessTable(&unk_100F14638, &type metadata for CRLStrokeData.CapType);
    atomic_store(result, (unint64_t *)&qword_1013F8718);
  }
  return result;
}

unint64_t sub_1008C1EB8()
{
  unint64_t result;

  result = qword_1013F8720;
  if (!qword_1013F8720)
  {
    result = swift_getWitnessTable(&unk_100F14660, &type metadata for CRLStrokeData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F8720);
  }
  return result;
}

unint64_t sub_1008C1F00()
{
  unint64_t result;

  result = qword_1013F8728;
  if (!qword_1013F8728)
  {
    result = swift_getWitnessTable(&unk_100F146A8, &type metadata for CRLStrokeData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F8728);
  }
  return result;
}

unint64_t sub_1008C1F48()
{
  unint64_t result;

  result = qword_1013F8730;
  if (!qword_1013F8730)
  {
    result = swift_getWitnessTable(&unk_100F147D0, &type metadata for CRLStrokeData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F8730);
  }
  return result;
}

unint64_t sub_1008C1F90()
{
  unint64_t result;

  result = qword_1013F8738;
  if (!qword_1013F8738)
  {
    result = swift_getWitnessTable(&unk_100F147F8, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8738);
  }
  return result;
}

unint64_t sub_1008C1FD8()
{
  unint64_t result;

  result = qword_1013F8740;
  if (!qword_1013F8740)
  {
    result = swift_getWitnessTable(&unk_100F14840, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8740);
  }
  return result;
}

unint64_t sub_1008C2020()
{
  unint64_t result;

  result = qword_1013F8748;
  if (!qword_1013F8748)
  {
    result = swift_getWitnessTable(&unk_100F148A0, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8748);
  }
  return result;
}

unint64_t sub_1008C2070()
{
  unint64_t result;

  result = qword_1013F8750;
  if (!qword_1013F8750)
  {
    result = swift_getWitnessTable(&unk_100F14920, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8750);
  }
  return result;
}

unint64_t sub_1008C20B8()
{
  unint64_t result;

  result = qword_1013F8758;
  if (!qword_1013F8758)
  {
    result = swift_getWitnessTable(&unk_100F14A30, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8758);
  }
  return result;
}

unint64_t sub_1008C2100()
{
  unint64_t result;

  result = qword_1013F8760;
  if (!qword_1013F8760)
  {
    result = swift_getWitnessTable(&unk_100F149F8, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8760);
  }
  return result;
}

unint64_t sub_1008C2148()
{
  unint64_t result;

  result = qword_1013F8768;
  if (!qword_1013F8768)
  {
    result = swift_getWitnessTable(&unk_100F14958, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8768);
  }
  return result;
}

unint64_t sub_1008C2190()
{
  unint64_t result;

  result = qword_1013F8770;
  if (!qword_1013F8770)
  {
    result = swift_getWitnessTable(&unk_100F149D0, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8770);
  }
  return result;
}

unint64_t sub_1008C21D8()
{
  unint64_t result;

  result = qword_1013F8778;
  if (!qword_1013F8778)
  {
    result = swift_getWitnessTable(&unk_100F149A8, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8778);
  }
  return result;
}

uint64_t sub_1008C221C()
{
  return sub_1006047EC(&qword_1013F8780, &qword_1013F8788);
}

unint64_t sub_1008C2244()
{
  unint64_t result;

  result = qword_1013F8790;
  if (!qword_1013F8790)
  {
    result = swift_getWitnessTable(&unk_100F148D8, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8790);
  }
  return result;
}

unint64_t sub_1008C228C()
{
  unint64_t result;

  result = qword_1013F8798;
  if (!qword_1013F8798)
  {
    result = swift_getWitnessTable(&unk_100F14B38, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8798);
  }
  return result;
}

unint64_t sub_1008C22D4()
{
  unint64_t result;

  result = qword_1013F87A0;
  if (!qword_1013F87A0)
  {
    result = swift_getWitnessTable(&unk_100F14BD8, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F87A0);
  }
  return result;
}

unint64_t sub_1008C231C()
{
  unint64_t result;

  result = qword_1013F87A8;
  if (!qword_1013F87A8)
  {
    result = swift_getWitnessTable(&unk_100F14C78, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F87A8);
  }
  return result;
}

unint64_t sub_1008C2364()
{
  unint64_t result;

  result = qword_1013F87B0;
  if (!qword_1013F87B0)
  {
    result = swift_getWitnessTable(&unk_100F14CA0, &type metadata for CRLSmartStrokeData.SmartStrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F87B0);
  }
  return result;
}

unint64_t sub_1008C23AC()
{
  unint64_t result;

  result = qword_1013F87B8;
  if (!qword_1013F87B8)
  {
    result = swift_getWitnessTable(&unk_100F14CE8, &type metadata for CRLSmartStrokeData.SmartStrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F87B8);
  }
  return result;
}

unint64_t sub_1008C23F4()
{
  unint64_t result;

  result = qword_1013F87C0;
  if (!qword_1013F87C0)
  {
    result = swift_getWitnessTable(&unk_100F14E10, &type metadata for CRLSmartStrokeData.SmartStrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F87C0);
  }
  return result;
}

uint64_t sub_1008C2438(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008C2498()
{
  unint64_t result;

  result = qword_1013F87E8;
  if (!qword_1013F87E8)
  {
    result = swift_getWitnessTable(&unk_100F14D98, &type metadata for CRLSmartStrokeData.SmartStrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F87E8);
  }
  return result;
}

unint64_t sub_1008C24DC()
{
  unint64_t result;

  result = qword_1013F87F0;
  if (!qword_1013F87F0)
  {
    result = swift_getWitnessTable(&unk_100F14A80, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F87F0);
  }
  return result;
}

unint64_t sub_1008C2520()
{
  unint64_t result;

  result = qword_1013F87F8;
  if (!qword_1013F87F8)
  {
    result = swift_getWitnessTable(&unk_100F14A58, &type metadata for CRLSmartStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F87F8);
  }
  return result;
}

unint64_t sub_1008C2564()
{
  unint64_t result;

  result = qword_1013F8800;
  if (!qword_1013F8800)
  {
    result = swift_getWitnessTable(&unk_100F14758, &type metadata for CRLStrokeData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F8800);
  }
  return result;
}

unint64_t sub_1008C25A8()
{
  unint64_t result;

  result = qword_1013F8808;
  if (!qword_1013F8808)
  {
    result = swift_getWitnessTable(&unk_100F145C0, &type metadata for CRLStrokeData.CapType);
    atomic_store(result, (unint64_t *)&qword_1013F8808);
  }
  return result;
}

unint64_t sub_1008C25EC()
{
  unint64_t result;

  result = qword_1013F8810;
  if (!qword_1013F8810)
  {
    result = swift_getWitnessTable(&unk_100F14428, &type metadata for CRLStrokeData.StrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F8810);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLSmartStrokeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1008C267C + 4 * byte_100F1393B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1008C26B0 + 4 * byte_100F13936[v4]))();
}

uint64_t sub_1008C26B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C26B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C26C0);
  return result;
}

uint64_t sub_1008C26CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C26D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1008C26D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C26E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSmartStrokeData.CodingKeys()
{
  return &type metadata for CRLSmartStrokeData.CodingKeys;
}

unint64_t sub_1008C2700()
{
  unint64_t result;

  result = qword_1013F8818;
  if (!qword_1013F8818)
  {
    result = swift_getWitnessTable(&unk_100F14FE0, &type metadata for CRLSmartStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8818);
  }
  return result;
}

uint64_t sub_1008C28FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013F8884);
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1008C2940;
  return sub_1008C2C8C();
}

uint64_t sub_1008C2940()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 96);
  v3 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1008C29AC, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1008C29AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 88) = v1;
  swift_errorRetain(v1);
  v4 = sub_1004B804C(&qword_1013E0210);
  v5 = String.init<A>(describing:)(v0 + 88, v4);
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  sub_100757E04(&_mh_execute_header, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLUSDItemImporter.swift", 85, 2, 64, "Unable to create CRLUSDZItem: %@", 32, 2u, inited);
  sub_1004F5394(inited, (uint64_t)"importBoardItem()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLUSDItemImporter.swift", 85, 2u, 64, (uint64_t)"Unable to create CRLUSDZItem: %@", 32, 2u);
  swift_bridgeObjectRelease();
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008C2C0C(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1013F88C4;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1007894A8;
  v6 = (_QWORD *)swift_task_alloc(dword_1013F8884);
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_1008C2940;
  return sub_1008C2C8C();
}

uint64_t sub_1008C2C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v1 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1008C2CE8, 0, 0);
}

uint64_t sub_1008C2CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  char isCancelled;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;
  id v19;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask);
  if (v3)
  {
    v4 = swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask));
    isCancelled = swift_task_isCancelled(v4);
    swift_release(v3);
    if ((isCancelled & 1) != 0)
    {
    }
    v6 = *(_QWORD *)(v1 + v2);
    if (v6)
    {
      swift_retain(*(_QWORD *)(v1 + v2));
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v6);
    }
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject(&unk_101285C30, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = (_QWORD *)swift_allocObject(&unk_101285C58, 40, 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  v11 = sub_100595ACC(v7, (uint64_t)&unk_1013F88A0, (uint64_t)v10);
  sub_1004CB800(v7, &qword_1013E01F0);
  v12 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v11;
  swift_release(v12);
  v13 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 56) = v13;
  if (v13)
  {
    v14 = async function pointer to Task.result.getter[1];
    swift_retain(v13);
    v15 = (_QWORD *)swift_task_alloc(v14);
    *(_QWORD *)(v0 + 64) = v15;
    v16 = sub_1004B804C(&qword_1013E0210);
    *(_QWORD *)(v0 + 72) = v16;
    *v15 = v0;
    v15[1] = sub_1008C2F98;
    return Task.result.getter(v0 + 16, v13, (char *)&type metadata for () + 8, v16, &protocol self-conformance witness table for Error);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 48);
    v19 = *(id *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress);
    objc_msgSend(v19, "maxValue");
    objc_msgSend(v19, "setValue:");

    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1008C2F98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  swift_release(v1);
  return swift_task_switch(sub_1008C2FF4, 0, 0);
}

uint64_t sub_1008C2FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 16);
    swift_willThrowTypedImpl(v0 + 32, v1, &protocol self-conformance witness table for Error);
    swift_task_dealloc(v2);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(id *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress);
    objc_msgSend(v4, "maxValue");
    objc_msgSend(v4, "setValue:");

    swift_task_dealloc(v3);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008C309C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch(sub_1008C30B4, 0, 0);
}

uint64_t sub_1008C30B4()
{
  uint64_t v0;
  uint64_t v1;
  char *Strong;
  char *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  v3 = Strong;
  *(_QWORD *)(v0 + 48) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = objc_msgSend(Strong, "delegate");
  if (v4)
  {
    v5 = v4;
    if ((objc_msgSend(v4, "respondsToSelector:", "boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:") & 1) != 0)objc_msgSend(v5, "boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:", v3);
    swift_unknownObjectRelease(v5);
  }
  v6 = *(id *)&v3[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress];
  objc_msgSend(v6, "maxValue");
  objc_msgSend(v6, "setValue:", v7 * 0.01);

  v8 = (_QWORD *)swift_task_alloc(dword_1013F888C);
  *(_QWORD *)(v0 + 56) = v8;
  *v8 = v0;
  v8[1] = sub_1008C31D8;
  return sub_1008C32E0();
}

uint64_t sub_1008C31D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10078D510;
  else
    v3 = sub_1008C323C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008C323C()
{
  uint64_t v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;

  v1 = *(char **)(v0 + 48);
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem]
    && !*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error])
  {
    v2 = sub_1008C5714();
    v3 = swift_allocError(&type metadata for CRLUSDItemImporter.USDImportError, v2, 0, 0);
    *v4 = 0;
    v5 = sub_1008C4EE0(v3);
    swift_errorRelease(v3);
    sub_1008C5458(v5);
    swift_errorRelease(v5);
    v1 = *(char **)(v0 + 48);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008C32E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1[21] = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v1[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLAssetData(0);
  v1[23] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[24] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[25] = swift_task_alloc(v5);
  v1[26] = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v6);
  v1[28] = swift_task_alloc(v6);
  v7 = type metadata accessor for URL(0);
  v1[29] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[30] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v9);
  v1[32] = swift_task_alloc(v9);
  v1[33] = swift_task_alloc(v9);
  return swift_task_switch(sub_1008C33EC, 0, 0);
}

uint64_t sub_1008C33EC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  objc_class *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void (*v25)(uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = objc_msgSend(*(id *)(v0 + 168), "URL");
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 256);
    v4 = *(_QWORD *)(v0 + 232);
    v5 = *(_QWORD *)(v0 + 240);
    v6 = *(_QWORD *)(v0 + 224);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v1);

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v7(v6, v3, v4);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v8(v6, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      v10 = *(_QWORD *)(v0 + 256);
      v9 = *(_QWORD *)(v0 + 264);
      v11 = *(_QWORD *)(v0 + 232);
      v12 = *(_QWORD *)(v0 + 240);
      v39 = v12;
      v13 = *(void **)(v0 + 168);
      v7(v9, *(_QWORD *)(v0 + 224), v11);
      v14 = (char *)objc_msgSend(v13, "boardItemFactory");
      v15 = *(id *)&v14[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      v16(v10, v9, v11);
      v17 = (objc_class *)type metadata accessor for CRLPreinsertionAssetWrapper(0);
      v18 = (char *)objc_allocWithZone(v17);
      v20 = URL.lastPathComponent.getter(v19);
      v21 = (uint64_t *)&v18[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
      *v21 = v20;
      v21[1] = v22;
      v23 = &v18[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
      v16((uint64_t)&v18[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url], v10, v11);
      v8((uint64_t)v23, 0, 1, v11);
      *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = v15;
      *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = 0;
      *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = 0;
      swift_unknownObjectRetain(v15);

      *(_QWORD *)(v0 + 152) = v18;
      *(_QWORD *)(v0 + 160) = v17;
      v24 = objc_msgSendSuper2((objc_super *)(v0 + 152), "init");

      v25 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v25(v10, v11);
      v25(v9, v11);
      goto LABEL_6;
    }
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 56);
    v8(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 232));
  }
  v26 = *(void **)(v0 + 168);
  sub_1004CB800(*(_QWORD *)(v0 + 224), &qword_1013E04D0);
  v24 = objc_msgSend(v26, "preinsertionAsset");
  if (!v24)
  {
    v32 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD *)(v0 + 248);
    v35 = *(_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 200);
    v36 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_6:
  *(_QWORD *)(v0 + 272) = v8;
  *(_QWORD *)(v0 + 280) = v24;
  static Task<>.checkCancellation()(v24);
  if (qword_1013DD120 != -1)
    swift_once(&qword_1013DD120, sub_1007B58D0);
  v27 = *(_QWORD *)(v0 + 168);
  *(_BYTE *)(v0 + 145) = byte_10147F5F8;
  v28 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
  *(_QWORD *)(v0 + 288) = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
  objc_msgSend(*(id *)(v27 + v28), "maxValue");
  *(_QWORD *)(v0 + 296) = v29;
  v30 = (_QWORD *)swift_task_alloc(dword_1013FFA4C);
  *(_QWORD *)(v0 + 304) = v30;
  *v30 = v0;
  v30[1] = sub_1008C37B0;
  return sub_1009BB53C(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1008C37B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1008C477C;
  else
    v3 = sub_1008C3814;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008C3814()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 312);
  static Task<>.checkCancellation()(objc_msgSend(*(id *)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 288)), "setValue:", *(double *)(v0 + 296) * 0.3));
  if (v1)
  {
    sub_1005CC194(*(_QWORD *)(v0 + 208));
    v2 = *(void **)(v0 + 280);
    v3 = sub_1008C4EE0(v1);
    sub_1008C5458(v3);
    swift_errorRelease(v3);

    swift_errorRelease(v1);
LABEL_8:
    v22 = *(_QWORD *)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 248);
    v25 = *(_QWORD *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 224);
    v27 = *(_QWORD *)(v0 + 200);
    v26 = *(_QWORD *)(v0 + 208);
    v28 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = (char *)objc_msgSend(*(id *)(v0 + 168), "boardItemFactory");
  v5 = (char *)objc_retain(*(id *)(*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board]
                                 + OBJC_IVAR____TtC8Freeform8CRLBoard_store));

  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  v7 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v8 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v8)
  {
    v9 = *(id *)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v10 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v11 = v5;
    v12 = sub_100C7EE84((uint64_t)v11);

    v13 = *(void **)&v5[v7];
    *(_QWORD *)&v5[v7] = v12;
    v9 = v12;

    v8 = 0;
  }
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 208);
  v16 = *(char **)(v0 + 216);
  v18 = *(os_unfair_lock_s **)(v6 + 16);
  v19 = v8;
  os_unfair_lock_unlock(v18);
  sub_100C7857C(v17, 0, 3, 0, v16);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    v20 = *(void **)(v0 + 280);
    v21 = *(_QWORD *)(v0 + 216);
    sub_1005CC194(*(_QWORD *)(v0 + 208));

    sub_1004CB800(v21, &qword_1013E04D0);
    goto LABEL_8;
  }
  v30 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 32))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 232));
  v31 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", 1, 1, 0, 0, 0.0, 0.0, *(double *)(v30 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize), *(double *)(v30 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize + 8), 0.0);
  *(_QWORD *)(v0 + 320) = v31;
  objc_msgSend(v31, "size");
  *(double *)(v0 + 328) = sub_10005FDDC();
  *(_QWORD *)(v0 + 336) = v32;
  *(_QWORD *)(v0 + 344) = v33;
  *(_QWORD *)(v0 + 352) = v34;
  v35 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 360) = v35;
  *(_QWORD *)(v0 + 368) = static MainActor.shared.getter(v35);
  v36 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 376) = v36;
  *(_QWORD *)(v0 + 384) = v37;
  return swift_task_switch(sub_1008C3B38, v36, v37);
}

uint64_t sub_1008C3B38(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(__int8 *, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  __int8 *v6;
  uint64_t v7;
  __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v1 + 145) == 1)
  {
    v2 = *(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v1 + 272);
    v3 = *(_QWORD *)(v1 + 232);
    v4 = _s17QLSnapshotBackendCMa(0);
    v5 = (int64x2_t *)swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    *(_QWORD *)(v1 + 392) = v5;
    v5[1] = vdupq_n_s64(0x408F400000000000uLL);
    v2(&v5->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL], 1, 1, v3);
    v6 = &v5->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate];
    *((_QWORD *)v6 + 1) = 0;
    v7 = swift_unknownObjectWeakInit(v6);
    UUID.init()(v7);
    *((_QWORD *)v6 + 1) = 0;
    swift_unknownObjectWeakAssign(v6, 0);
    v8 = &v5->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_backendState];
    v9 = _s17QLSnapshotBackendC12BackendStateOMa(0);
    v10 = swift_storeEnumTagMultiPayload(v8, v9, 2);
    *(_QWORD *)(v1 + 400) = static MainActor.shared.getter(v10);
    v11 = (_QWORD *)swift_task_alloc(dword_10140E4E4);
    *(_QWORD *)(v1 + 408) = v11;
    *v11 = v1;
    v11[1] = sub_1008C3CE4;
    return sub_100D01894(v1 + 64, *(_QWORD *)(v1 + 248), (uint64_t)v5, (uint64_t)&off_101279820, 2.0, 1.0, *(double *)(v1 + 328), *(double *)(v1 + 336), *(double *)(v1 + 344), *(double *)(v1 + 352));
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 360);
    *(_QWORD *)(v1 + 472) = static MainActor.shared.getter(a1);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
    *(_QWORD *)(v1 + 480) = v14;
    *(_QWORD *)(v1 + 488) = v15;
    return swift_task_switch(sub_1008C3EA8, v14, v15);
  }
}

uint64_t sub_1008C3CE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = (_OWORD *)(*v1 + 424);
  v4 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(v2 + 416) = v0;
  v5 = *(_OWORD *)(v2 + 80);
  *v3 = *(_OWORD *)(v2 + 64);
  v3[1] = v5;
  v3[2] = *(_OWORD *)(v2 + 96);
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 360), &protocol witness table for MainActor);
  if (v0)
    v8 = sub_1008C3E24;
  else
    v8 = sub_1008C3D80;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_1008C3D80()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[50];
  swift_release(v0[49]);
  swift_release(v1);
  return swift_task_switch(sub_1008C3DC0, v0[47], v0[48]);
}

uint64_t sub_1008C3DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_OWORD *)(v0 + 416);
  *(_QWORD *)(v0 + 624) = *(_QWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 608) = *(_OWORD *)(v0 + 448);
  *(_QWORD *)(v0 + 600) = v1;
  *(_QWORD *)(v0 + 592) = v2;
  *(_OWORD *)(v0 + 576) = v3;
  swift_release(*(_QWORD *)(v0 + 368));
  return swift_task_switch(sub_1008C417C, 0, 0);
}

uint64_t sub_1008C3E24()
{
  _QWORD *v0;

  swift_release(v0[50]);
  return swift_task_switch(sub_1008C3E5C, v0[47], v0[48]);
}

uint64_t sub_1008C3E5C()
{
  _QWORD *v0;

  swift_release(v0[49]);
  v0[79] = v0[52];
  swift_release(v0[46]);
  return swift_task_switch(sub_1008C4398, 0, 0);
}

uint64_t sub_1008C3EA8()
{
  uint64_t v0;
  id v1;
  id v2;
  _QWORD *v3;

  v1 = objc_allocWithZone((Class)_s15AppExRepBackendCMa(0));
  v2 = sub_10068C5C4(0, 0, 0);
  *(_QWORD *)(v0 + 496) = v2;
  *(_QWORD *)(v0 + 504) = static MainActor.shared.getter(v2);
  v3 = (_QWORD *)swift_task_alloc(dword_10140E4E4);
  *(_QWORD *)(v0 + 512) = v3;
  *v3 = v0;
  v3[1] = sub_1008C3F58;
  return sub_100D01894(v0 + 16, *(_QWORD *)(v0 + 248), (uint64_t)v2, (uint64_t)&off_1012756C0, 2.0, 1.0, *(double *)(v0 + 328), *(double *)(v0 + 336), *(double *)(v0 + 344), *(double *)(v0 + 352));
}

uint64_t sub_1008C3F58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 512);
  *(_QWORD *)(v2 + 520) = v0;
  v4 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 528) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 544) = v4;
  *(_OWORD *)(v2 + 560) = *(_OWORD *)(v2 + 48);
  swift_task_dealloc(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 360), &protocol witness table for MainActor);
  if (v0)
    v7 = sub_1008C40C0;
  else
    v7 = sub_1008C3FF0;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1008C3FF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 504);

  swift_release(v1);
  return swift_task_switch(sub_1008C4030, *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488));
}

uint64_t sub_1008C4030()
{
  _QWORD *v0;

  swift_release(v0[59]);
  return swift_task_switch(sub_1008C4068, v0[47], v0[48]);
}

uint64_t sub_1008C4068()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_OWORD *)(v0 + 560);
  v3 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 600) = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 616) = v2;
  *(_OWORD *)(v0 + 584) = v3;
  *(_QWORD *)(v0 + 576) = v1;
  swift_release(*(_QWORD *)(v0 + 368));
  return swift_task_switch(sub_1008C417C, 0, 0);
}

uint64_t sub_1008C40C0()
{
  _QWORD *v0;

  swift_release(v0[63]);
  return swift_task_switch(sub_1008C40F8, v0[60], v0[61]);
}

uint64_t sub_1008C40F8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[62];
  swift_release(v0[59]);

  return swift_task_switch(sub_1008C4138, v0[47], v0[48]);
}

uint64_t sub_1008C4138()
{
  _QWORD *v0;

  v0[79] = v0[65];
  swift_release(v0[46]);
  return swift_task_switch(sub_1008C4398, 0, 0);
}

uint64_t sub_1008C417C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;

  v2 = *(_QWORD *)(v1 + 576);
  static Task<>.checkCancellation()(a1);
  v3 = *(_QWORD *)(v1 + 592);
  v4 = *(_QWORD *)(v1 + 584);
  if (v2)
  {
    v5 = *(void **)(v1 + 320);
    v7 = *(_QWORD *)(v1 + 240);
    v6 = *(_QWORD *)(v1 + 248);
    v8 = *(_QWORD *)(v1 + 232);
    v9 = *(_QWORD *)(v1 + 208);
    sub_1004BBBC8(*(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_1005CC194(v9);
    v13 = *(void **)(v1 + 280);
    v14 = sub_1008C4EE0(v2);
    sub_1008C5458(v14);
    swift_errorRelease(v14);

    swift_errorRelease(v2);
    v15 = *(_QWORD *)(v1 + 256);
    v16 = *(_QWORD *)(v1 + 248);
    v18 = *(_QWORD *)(v1 + 216);
    v17 = *(_QWORD *)(v1 + 224);
    v20 = *(_QWORD *)(v1 + 200);
    v19 = *(_QWORD *)(v1 + 208);
    v21 = *(_QWORD *)(v1 + 176);
    swift_task_dealloc(*(_QWORD *)(v1 + 264));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v10 = (char *)objc_msgSend(*(id *)(v1 + 168), "boardItemFactory");
    v11 = *(id *)&v10[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

    v12 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
    sub_1004BE310(v4, v3);
    *(_QWORD *)(v1 + 640) = sub_1009BAF98(v4, v3, 0xD000000000000010, 0x8000000100FDCD60, (uint64_t)v11);
    v23 = (_QWORD *)swift_task_alloc(dword_1013FFA4C);
    *(_QWORD *)(v1 + 648) = v23;
    *v23 = v1;
    v23[1] = sub_1008C448C;
    return sub_1009BB53C(*(_QWORD *)(v1 + 200));
  }
}

uint64_t sub_1008C4398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1005CC194(v4);
  v5 = *(_QWORD *)(v0 + 632);
  v6 = *(void **)(v0 + 280);
  v7 = sub_1008C4EE0(v5);
  sub_1008C5458(v7);
  swift_errorRelease(v7);

  swift_errorRelease(v5);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 248);
  v11 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008C448C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 648);
  *(_QWORD *)(*(_QWORD *)v1 + 656) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1008C4844;
  else
    v3 = sub_1008C44F0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008C44F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(v1 + 656);
  static Task<>.checkCancellation()(a1);
  v3 = *(void **)(v1 + 640);
  if (v2)
  {
    v4 = *(void **)(v1 + 320);
    v6 = *(_QWORD *)(v1 + 240);
    v5 = *(_QWORD *)(v1 + 248);
    v7 = *(_QWORD *)(v1 + 232);
    v9 = *(_QWORD *)(v1 + 200);
    v8 = *(_QWORD *)(v1 + 208);
    sub_1004BBBC8(*(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));

    sub_1005CC194(v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_1005CC194(v8);
    v10 = *(void **)(v1 + 280);
    v11 = sub_1008C4EE0(v2);
    sub_1008C5458(v11);
    swift_errorRelease(v11);

    swift_errorRelease(v2);
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 624);
    v13 = *(_QWORD *)(v1 + 616);
    v34 = *(_OWORD *)(v1 + 600);
    v37 = *(_QWORD *)(v1 + 584);
    v38 = *(_QWORD *)(v1 + 592);
    v14 = *(void **)(v1 + 320);
    v15 = *(double *)(v1 + 296);
    v35 = *(_QWORD *)(v1 + 288);
    v36 = *(void **)(v1 + 280);
    v39 = *(_QWORD *)(v1 + 240);
    v40 = *(_QWORD *)(v1 + 232);
    v41 = *(_QWORD *)(v1 + 248);
    v17 = *(_QWORD *)(v1 + 200);
    v16 = *(_QWORD *)(v1 + 208);
    v18 = *(_QWORD *)(v1 + 184);
    v19 = *(_QWORD *)(v1 + 192);
    v21 = *(char **)(v1 + 168);
    v20 = *(_QWORD *)(v1 + 176);
    v22 = objc_msgSend(v21, "boardItemFactory");
    sub_10069BF0C(v17, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v18);
    *(_OWORD *)(v1 + 112) = v34;
    *(_QWORD *)(v1 + 128) = v13;
    *(_QWORD *)(v1 + 136) = v12;
    *(_BYTE *)(v1 + 144) = 0;
    v23 = sub_100CF2198(v14, v16, v20, v1 + 112);

    sub_1004CB800(v20, (uint64_t *)&unk_1013E9BE0);
    v24 = *(void **)&v21[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem];
    *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem] = v23;

    v25 = *(id *)&v21[v35];
    objc_msgSend(v25, "setValue:", v15 * 0.9);

    sub_1004BBBC8(v37, v38);
    sub_1005CC194(v17);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
    sub_1005CC194(v16);
  }
  v26 = *(_QWORD *)(v1 + 256);
  v27 = *(_QWORD *)(v1 + 248);
  v29 = *(_QWORD *)(v1 + 216);
  v28 = *(_QWORD *)(v1 + 224);
  v31 = *(_QWORD *)(v1 + 200);
  v30 = *(_QWORD *)(v1 + 208);
  v32 = *(_QWORD *)(v1 + 176);
  swift_task_dealloc(*(_QWORD *)(v1 + 264));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1008C477C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(void **)(v0 + 280);
  v3 = sub_1008C4EE0(v1);
  sub_1008C5458(v3);
  swift_errorRelease(v3);

  swift_errorRelease(v1);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008C4844()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 640);
  v2 = *(void **)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 208);
  sub_1004BBBC8(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 592));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1005CC194(v6);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(void **)(v0 + 280);
  v9 = sub_1008C4EE0(v7);
  sub_1008C5458(v9);
  swift_errorRelease(v9);

  swift_errorRelease(v7);
  v10 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1008C49BC(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  NSURL *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  objc_super v16;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_cancellable] = 0;
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize] = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_smallBoundingSize] = vdupq_n_s64(0x4051800000000000uLL);
  v5 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
  v6 = objc_allocWithZone((Class)CRLBasicProgress);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithMaxValue:", 100.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error] = 0;

  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CRLUSDItemImporter();
  v11 = objc_msgSendSuper2(&v16, "initWithURL:boardItemFactory:", v10, a2);

  v12 = type metadata accessor for URL(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v14 = v11;
  v13(a1, v12);
  if (v14)

  return v14;
}

id sub_1008C4B84(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_cancellable] = 0;
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize] = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_smallBoundingSize] = vdupq_n_s64(0x4051800000000000uLL);
  v5 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
  v6 = objc_allocWithZone((Class)CRLBasicProgress);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithMaxValue:", 100.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error] = 0;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CRLUSDItemImporter();
  v8 = objc_msgSendSuper2(&v10, "initWithData:boardItemFactory:", a1, a2);

  return v8;
}

id sub_1008C4CCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDItemImporter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDItemImporter()
{
  return objc_opt_self(_TtC8Freeform18CRLUSDItemImporter);
}

uint64_t sub_1008C4D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BOOL4 v6;
  id v7;
  uint64_t v8;
  NSString v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001E9750(0x2000000000000uLL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (!v6)
    goto LABEL_5;
  v7 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v8 = URL.isFileURL.getter(v7);
  if ((v8 & 1) == 0)
  {

LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  HIBYTE(v13) = 0;
  URL.path.getter(v8);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "fileExistsAtPath:isDirectory:", v9, (char *)&v13 + 7, swift_bridgeObjectRelease().n128_f64[0]);

  v11 = v10 & (HIBYTE(v13) ^ 1);
LABEL_6:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

uint64_t sub_1008C4EE0(uint64_t a1)
{
  uint64_t v2;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v52;
  char v53;
  uint64_t v54;

  v54 = a1;
  swift_errorRetain(a1);
  v2 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(&v52, &v54, v2, &type metadata for CRLUSDRendering.RendererError, 0))
  {
    if (v53 == 6 && v52 == 0)
    {
      v36 = (void *)objc_opt_self(NSBundle);
      v37 = objc_msgSend(v36, "mainBundle");
      v38 = String._bridgeToObjectiveC()();
      v39 = String._bridgeToObjectiveC()();
      v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v44 = objc_msgSend(v36, "mainBundle");
      v45 = String._bridgeToObjectiveC()();
      v46 = String._bridgeToObjectiveC()();
      v47 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, v46, 0);

      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v50 = v49;

      v19 = sub_100BC2B98(a1, (id)0x69, 0, 104, 0, 1, v41, v43, v48, v50, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v54;
      goto LABEL_12;
    }
    sub_100689EEC(v52, *((unint64_t *)&v52 + 1), v53);
  }
  swift_errorRelease(v54);
  *(_QWORD *)&v52 = a1;
  swift_errorRetain(a1);
  if (swift_dynamicCast(&v54, &v52, v2, &type metadata for CRLUSDItemImporter.USDImportError, 0)
    && v54 == 1)
  {
    v4 = (void *)objc_opt_self(NSBundle);
    v5 = objc_msgSend(v4, "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = objc_msgSend(v4, "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = sub_100BC2B98(a1, (id)0x67, 0, 104, 0, 1, v9, v11, v16, v18, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v52;
LABEL_12:
    swift_errorRelease(v20);
    return v19;
  }
  swift_errorRelease(v52);
  v21 = (void *)objc_opt_self(NSBundle);
  v22 = objc_msgSend(v21, "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = objc_msgSend(v21, "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, v31, 0);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v19 = sub_100BC2B98(a1, (id)0x64, 0, 104, 0, 1, v26, v28, v33, v35, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1008C5458(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  char v22[8];
  _QWORD v23[3];
  char v24[8];
  char v25[152];
  char v26[24];

  v2 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error] = a1;
  swift_errorRetain(a1);
  result = swift_errorRelease(v3);
  v5 = *(_QWORD *)&v1[v2];
  if (v5)
  {
    swift_errorRetain(*(_QWORD *)&v1[v2]);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v26, 0, 0);
    v6 = (void *)static OS_os_log.crlDefault;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v25);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    *(_QWORD *)(inited + 56) = type metadata accessor for CRLUSDItemImporter();
    *(_QWORD *)(inited + 64) = sub_1008C5620();
    *(_QWORD *)(inited + 32) = v1;
    swift_getErrorValue(v5, v24, v23);
    v9 = v23[1];
    v10 = v23[2];
    v11 = v6;
    v12 = v1;
    v13 = Error.publicDescription.getter(v9, v10);
    v15 = v14;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    v16 = sub_1004CFC2C();
    *(_QWORD *)(inited + 104) = v16;
    *(_QWORD *)(inited + 72) = v13;
    *(_QWORD *)(inited + 80) = v15;
    swift_getErrorValue(v5, v22, v21);
    v17 = Error.fullDescription.getter(v21[1]);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v16;
    *(_QWORD *)(inited + 112) = v17;
    *(_QWORD *)(inited + 120) = v18;
    v19 = static os_log_type_t.error.getter(v17);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v19, "Importer (%p) error: %{public}@ <%@>", 36, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v20);

    return swift_errorRelease(v5);
  }
  return result;
}

unint64_t sub_1008C5620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F8890;
  if (!qword_1013F8890)
  {
    v1 = type metadata accessor for CRLUSDItemImporter();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, &qword_1013F8890);
  }
  return result;
}

uint64_t sub_1008C5664()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008C5688()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008C56B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013F889C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  v3[5] = v2;
  return swift_task_switch(sub_1008C30B4, 0, 0);
}

unint64_t sub_1008C5714()
{
  unint64_t result;

  result = qword_1013F88A8;
  if (!qword_1013F88A8)
  {
    result = swift_getWitnessTable(&unk_100F1513C, &type metadata for CRLUSDItemImporter.USDImportError);
    atomic_store(result, (unint64_t *)&qword_1013F88A8);
  }
  return result;
}

uint64_t sub_1008C5758()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008C5784()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013F88B4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013F88B0 + dword_1013F88B0))(v2, v3);
}

uint64_t storeEnumTagSinglePayload for CRLUSDItemImporter.USDImportError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1008C583C + 4 * byte_100F150AB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1008C5870 + 4 * byte_100F150A6[v4]))();
}

uint64_t sub_1008C5870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C5878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C5880);
  return result;
}

uint64_t sub_1008C588C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C5894);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1008C5898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C58A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDItemImporter.USDImportError()
{
  return &type metadata for CRLUSDItemImporter.USDImportError;
}

unint64_t sub_1008C58C0()
{
  unint64_t result;

  result = qword_1013F88C8;
  if (!qword_1013F88C8)
  {
    result = swift_getWitnessTable(&unk_100F15114, &type metadata for CRLUSDItemImporter.USDImportError);
    atomic_store(result, (unint64_t *)&qword_1013F88C8);
  }
  return result;
}

id sub_1008C5904(void *a1, void *a2)
{
  void *v2;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v5 = v2;
  UUID.init()(v5);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform10CRLFileRep____lazy_storage___placeholderImage] = 1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for CRLFileRep(0);
  v6 = objc_msgSendSuper2(&v11, "initWithLayout:canvas:", a1, a2);
  v7 = v6;
  if (a2)
  {
    v8 = v6;
    v9 = a2;
    if (objc_msgSend(v9, "isCanvasInteractive"))
      sub_1008C5E8C();

  }
  else
  {
    v9 = a1;
  }

  return v7;
}

void sub_1008C5A24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  _DWORD *v27;
  uint64_t v28;
  id v29;
  void *v30;
  os_unfair_lock_s *v31;
  id v32;
  uint64_t v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  Class v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;
  objc_super v52;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for CRLFileRep(0);
  v52.receiver = v1;
  v52.super_class = v9;
  objc_msgSendSuper2(&v52, "willBeRemoved");
  v10 = objc_msgSend(v1, "layout");
  v11 = objc_msgSend(v10, "info");

  if (!v11)
    goto LABEL_11;
  v50 = v3;
  v12 = type metadata accessor for CRLFileItem(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13)
  {
    swift_unknownObjectRelease(v11);
LABEL_11:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v49 = v4;
  v14 = (char *)*(id *)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  swift_unknownObjectRelease(v11);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v17 = *(void **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v17)
  {
    v18 = *(char **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v45 = (Class)type metadata accessor for CRLAssetManager();
    v19 = (char *)objc_allocWithZone(v45);
    v44 = &v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v46 = v8;
    v20 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v21 = type metadata accessor for CRLUnfairLock();
    v22 = swift_allocObject(v21, 24, 7);
    v23 = v14;
    v48 = v2;
    v24 = v23;
    v25 = v19;
    v47 = v5;
    v26 = v25;
    v27 = (_DWORD *)swift_slowAlloc(4, -1);
    *v27 = 0;
    *(_QWORD *)(v22 + 16) = v27;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v19[v20] = v22;
    *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v28 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v26[v28] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign(v44, v24);

    v51.receiver = v26;
    v5 = v47;
    v51.super_class = v45;
    v29 = objc_msgSendSuper2(&v51, "init");

    v2 = v48;
    v30 = *(void **)&v14[v16];
    *(_QWORD *)&v14[v16] = v29;
    v18 = (char *)v29;

    v8 = v46;
    v17 = 0;
  }
  v31 = *(os_unfair_lock_s **)(v15 + 16);
  v32 = v17;
  os_unfair_lock_unlock(v31);

  v33 = OBJC_IVAR____TtC8Freeform10CRLFileRep_downloadObserverIdentifier;
  Strong = swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
  if (Strong)
  {
    v35 = Strong;
    v36 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 1, 1, v36);
    v37 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v5, &v1[v33], v2);
    v38 = *(unsigned __int8 *)(v37 + 80);
    v39 = (uint64_t)v8;
    v40 = (v38 + 40) & ~v38;
    v41 = (char *)swift_allocObject(&unk_101285E10, v40 + v49, v38 | 7);
    *((_QWORD *)v41 + 2) = 0;
    *((_QWORD *)v41 + 3) = 0;
    *((_QWORD *)v41 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v41[v40], v5, v2);
    v42 = sub_100521B98(v39, (uint64_t)&unk_1013FFE80, (uint64_t)v41);

    swift_release(v42);
  }
  else
  {

  }
}

void sub_1008C5E8C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Class v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double (*v20)(Class, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  const char *v32;
  uint64_t v33;
  _UNKNOWN ****v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  _DWORD *v49;
  uint64_t v50;
  id v51;
  void *v52;
  os_unfair_lock_s *v53;
  id v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  Class v62;
  uint64_t v63;
  objc_super v64;
  _BYTE v65[24];

  v1 = v0;
  v2 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v63 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v0, "layout", v6);
  v9 = objc_msgSend(v8, "info");

  if (!v9)
    goto LABEL_20;
  v10 = type metadata accessor for CRLFileItem(0);
  if (!swift_dynamicCastClass(v9, v10))
  {
    swift_unknownObjectRelease(v9);
LABEL_20:
    v28 = 2;
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    goto LABEL_21;
  }
  v11 = OBJC_IVAR____TtC8Freeform10CRLFileRep_downloadObserverIdentifier;
  v12 = sub_1008F1888();
  swift_unknownObjectRelease(v9);
  v13 = (_QWORD *)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v14 = *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v15 = *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((Class)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v14);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(v14, v15) & 1) != 0)
  {
    v62 = (Class)&v1[v11];
    v16 = swift_allocObject(&unk_101285DE8, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16);
    v17 = v13[3];
    v18 = v13[4];
    sub_1004BB5A4(v13, v17);
    v19 = v4;
    v20 = *(double (**)(Class, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v18 + 72);
    v21 = swift_retain(v16);
    v22.n128_f64[0] = v20(v62, 2, sub_1005B2C8C, v16, v17, v18, v21);
    v4 = v19;
    swift_release_n(v16, 2, v22);
    v23 = v13[3];
    v24 = v13[4];
    sub_1004BB5A4(v13, v23);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 64))(v23, v24) & 1) != 0)
    {
      v25 = v13[3];
      v26 = v13[4];
      sub_1004BB5A4(v13, v25);
      (*(void (**)(uint64_t, uint64_t))(v26 + 88))(v25, v26);
    }
  }

  v27 = objc_msgSend(v1, "layout");
  v28 = (uint64_t)objc_msgSend(v27, "info");

  if (!v28)
    goto LABEL_22;
  v29 = swift_dynamicCastClass(v28, v10);
  if (!v29)
  {
LABEL_21:
    swift_unknownObjectRelease(v28);
LABEL_22:
    v32 = "invalid nil found when unwrapping value";
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    goto LABEL_23;
  }
  v30 = (void *)v29;
  v31 = objc_msgSend(v1, "layout");
  v32 = (const char *)objc_msgSend(v31, "info");

  if (!v32)
  {
LABEL_24:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v33 = swift_dynamicCastClass(v32, v10);
  if (!v33)
  {
LABEL_23:
    swift_unknownObjectRelease(v32);
    goto LABEL_24;
  }
  v34 = *(_UNKNOWN *****)(v33 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v34 == &off_101407908)
    v35 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v35 = 0;
  swift_beginAccess(v35 + qword_101480E60, v65, 32, 0);
  swift_retain(v34);
  v36 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v36);
  swift_endAccess(v65);
  swift_release(v34);
  v37 = v63;
  sub_10069BF0C((uint64_t)v4, v63);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLFileItemAtomicDataStruct);
  v38 = (char *)objc_msgSend(v30, "store", swift_unknownObjectRelease(v32).n128_f64[0]);
  v39 = *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 16));
  v40 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v41 = *(void **)&v38[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v41)
  {
    v42 = *(id *)&v38[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v62 = (Class)type metadata accessor for CRLAssetManager();
    v43 = (char *)objc_allocWithZone(v62);
    v61 = &v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v44 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v45 = type metadata accessor for CRLUnfairLock();
    v46 = swift_allocObject(v45, 24, 7);
    v47 = v38;
    v48 = v43;
    v49 = (_DWORD *)swift_slowAlloc(4, -1);
    *v49 = 0;
    *(_QWORD *)(v46 + 16) = v49;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v43[v44] = v46;
    *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v50 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v48[v50] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign(v61, v47);

    v64.receiver = v48;
    v64.super_class = v62;
    v51 = objc_msgSendSuper2(&v64, "init");

    v52 = *(void **)&v38[v40];
    *(_QWORD *)&v38[v40] = v51;
    v42 = v51;

    v37 = v63;
    v41 = 0;
  }
  v53 = *(os_unfair_lock_s **)(v39 + 16);
  v54 = v41;
  os_unfair_lock_unlock(v53);

  v55 = (char *)sub_100CF7F90(v37, v30, v42);
  swift_unknownObjectRelease(v28);

  sub_1004B84A4(v37, type metadata accessor for CRLAssetData);
  v56 = &v55[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
  v57 = *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  v58 = *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_1004BB5A4(&v55[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v57);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v58 + 64))(v57, v58) & 1) != 0)
  {
    v59 = *((_QWORD *)v56 + 3);
    v60 = *((_QWORD *)v56 + 4);
    sub_1004BB5A4(v56, v59);
    (*(void (**)(uint64_t, uint64_t))(v60 + 88))(v59, v60);
  }

}

void sub_1008C65D4(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for CRLFileRep(0);
  objc_msgSendSuper2(&v7, "processChangedProperty:", a1);
  if (a1 == 49)
  {
    v3 = CRLLinkViewHostingRep.reloadView.getter();
    objc_msgSend(v3, "removeFromSuperview");

    v4 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
    v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
    if (v5)
    {
      CRLLinkViewHostingRep.updateReloadView()();
      v5 = *(void **)&v1[v4];
    }
    *(_QWORD *)&v1[v4] = 0;

    objc_msgSend(v1, "setNeedsDisplay");
    v6 = objc_msgSend(v1, "interactiveCanvasController");
    objc_msgSend(v6, "invalidateContentLayersForRep:", v1);

  }
}

void sub_1008C670C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "info");

  if (v2)
  {
    v3 = type metadata accessor for CRLFileItem(0);
    if (swift_dynamicCastClass(v2, v3))
      return;
    swift_unknownObjectRelease(v2);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  __break(1u);
}

void sub_1008C6824()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN ****v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v1 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = objc_msgSend(v0, "layout", v5);
  v9 = objc_msgSend(v8, "info");

  if (!v9)
    goto LABEL_8;
  v10 = type metadata accessor for CRLFileItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {
    swift_unknownObjectRelease(v9);
LABEL_8:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v12 = *(_UNKNOWN *****)(v11 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v12 == &off_101407908)
    v13 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v13 = 0;
  swift_beginAccess(v13 + qword_101480E60, v16, 32, 0);
  swift_retain(v12);
  v14 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v14);
  swift_endAccess(v16);
  swift_release(v12);
  sub_10069BF0C((uint64_t)v3, (uint64_t)v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLFileItemAtomicDataStruct);
  swift_unknownObjectRelease(v9);
  swift_bridgeObjectRetain(*(_QWORD *)&v7[*(int *)(v4 + 20) + 8]);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
}

void sub_1008C6AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform10CRLFileRep_downloadObserverIdentifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004CB49C(*(id *)(v0 + OBJC_IVAR____TtC8Freeform10CRLFileRep____lazy_storage___placeholderImage));
}

id sub_1008C6B14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileRep(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1008C6B98()
{
  return type metadata accessor for CRLFileRep(0);
}

uint64_t type metadata accessor for CRLFileRep(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F8908;
  if (!qword_1013F8908)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFileRep);
  return result;
}

uint64_t sub_1008C6BDC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 496);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1008C6C70()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008C6C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1008C6D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_10147FCD8);
  sub_1004F2A1C(v17, (uint64_t)qword_10147FCD8);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x79745320746E6F46, 0xEA0000000000656CLL);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

unint64_t sub_1008C6F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  _BYTE *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t result;
  char *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  char *v63;
  unsigned int v64;
  void (*v65)(char *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v73 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v70 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013F8988);
  v18 = sub_1004B804C(&qword_1013F8990);
  v19 = *(_QWORD *)(v18 - 8);
  v72 = v18;
  v68 = *(_QWORD *)(v19 + 72);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(v17, v21 + 4 * v68, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF5E30;
  v67 = v22 + v21;
  v61 = (_BYTE *)(v22 + v21 + *(int *)(v18 + 48));
  v62 = v22;
  *(_BYTE *)(v22 + v21) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(1684827970, 0xE400000000000000);
  static Locale.current.getter(v23);
  v64 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v65 = *(void (**)(char *))(v5 + 104);
  v66 = v4;
  v65(v7);
  v24 = v16;
  v63 = v16;
  v25 = v13;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v13, 0x6E497070414C5243, 0xED000073746E6574, v10, v7, "Bold style display representation", 33, 2);
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v27 = v69;
  v26 = v70;
  v60(v70, 1, 1, v69);
  v71 = type metadata accessor for DisplayRepresentation.Image(0);
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v28 = v73;
  v59(v73, 1, 1, v71);
  DisplayRepresentation.init(title:subtitle:image:)(v24, v26, v28);
  v30 = v67;
  v29 = v68;
  v61 = (_BYTE *)(v67 + v68 + *(int *)(v72 + 48));
  *(_BYTE *)(v67 + v68) = 1;
  v31 = v25;
  v56 = v25;
  v32 = String.LocalizationValue.init(stringLiteral:)(0x63696C617449, 0xE600000000000000);
  v33 = v10;
  v57 = v10;
  static Locale.current.getter(v32);
  v34 = v7;
  v58 = v7;
  v35 = v7;
  v36 = v64;
  v37 = (void (*)(char *, uint64_t, uint64_t))v65;
  v38 = v66;
  ((void (*)(char *, _QWORD, uint64_t))v65)(v35, v64, v66);
  v39 = v63;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v31, 0x6E497070414C5243, 0xED000073746E6574, v33, v34, "Italic style display representation", 35, 2);
  v40 = v70;
  v41 = v60;
  v60(v70, 1, 1, v27);
  v42 = v73;
  v43 = v59;
  v59(v73, 1, 1, v71);
  DisplayRepresentation.init(title:subtitle:image:)(v39, v40, v42);
  v44 = 2 * v29;
  v45 = (_BYTE *)(v30 + 2 * v29);
  v61 = &v45[*(int *)(v72 + 48)];
  *v45 = 2;
  v46 = v56;
  v47 = String.LocalizationValue.init(stringLiteral:)(0x6E696C7265646E55, 0xE900000000000065);
  v48 = v57;
  static Locale.current.getter(v47);
  v49 = v58;
  v37(v58, v36, v38);
  v50 = v63;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v46, 0x6E497070414C5243, 0xED000073746E6574, v48, v49, "Underline style display representation", 38, 2);
  v51 = v40;
  v52 = v69;
  v41(v40, 1, 1, v69);
  v53 = v73;
  v43(v73, 1, 1, v71);
  DisplayRepresentation.init(title:subtitle:image:)(v50, v51, v53);
  *(_BYTE *)(v67 + v44 + v68) = 3;
  v54 = String.LocalizationValue.init(stringLiteral:)(0x5420656B69727453, 0xEE006867756F7268);
  static Locale.current.getter(v54);
  ((void (*)(char *, _QWORD, uint64_t))v65)(v49, v64, v66);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v46, 0x6E497070414C5243, 0xED000073746E6574, v48, v49, "Strike Through style display representation", 43, 2);
  v41(v51, 1, 1, v52);
  v43(v53, 1, 1, v71);
  DisplayRepresentation.init(title:subtitle:image:)(v50, v51, v53);
  result = sub_1008D7CD4(v62);
  qword_10147FCF0 = result;
  return result;
}

void sub_1008C7530(char *a1)
{
  sub_10083C5AC(*a1);
}

unint64_t sub_1008C7540()
{
  unint64_t result;

  result = qword_1013F8918;
  if (!qword_1013F8918)
  {
    result = swift_getWitnessTable(&unk_100F151CC, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8918);
  }
  return result;
}

void sub_1008C7584()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1008C75C8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x63696C617469, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_1008C7644()
{
  __asm { BR              X10 }
}

uint64_t sub_1008C7678(uint64_t a1)
{
  String.hash(into:)(a1, 0x63696C617469, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1008C76E0(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1008C7720()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x63696C617469, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1008C779C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1008C7DF0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1008C77C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1008C77F0 + 4 * byte_100F151BC[*v0]))();
}

void sub_1008C77F0(_QWORD *a1@<X8>)
{
  *a1 = 0x63696C617469;
  a1[1] = 0xE600000000000000;
}

void sub_1008C7808(_QWORD *a1@<X8>)
{
  *a1 = 0x6E696C7265646E75;
  a1[1] = 0xE900000000000065;
}

void sub_1008C7828(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "strikethrough");
  *(_WORD *)(a1 + 14) = -4864;
}

unint64_t sub_1008C7854()
{
  unint64_t result;

  result = qword_1013F8920;
  if (!qword_1013F8920)
  {
    result = swift_getWitnessTable(&unk_100F152AC, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8920);
  }
  return result;
}

unint64_t sub_1008C789C()
{
  unint64_t result;

  result = qword_1013F8928;
  if (!qword_1013F8928)
  {
    result = swift_getWitnessTable(&unk_100F152E4, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8928);
  }
  return result;
}

unint64_t sub_1008C78E4()
{
  unint64_t result;

  result = qword_1013F8930;
  if (!qword_1013F8930)
  {
    result = swift_getWitnessTable(&unk_100F15234, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8930);
  }
  return result;
}

unint64_t sub_1008C792C()
{
  unint64_t result;

  result = qword_1013F8938;
  if (!qword_1013F8938)
  {
    result = swift_getWitnessTable(&unk_100F15314, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8938);
  }
  return result;
}

unint64_t sub_1008C7974()
{
  unint64_t result;

  result = qword_1013F8940;
  if (!qword_1013F8940)
  {
    result = swift_getWitnessTable(&unk_100F1533C, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8940);
  }
  return result;
}

unint64_t sub_1008C79BC()
{
  unint64_t result;

  result = qword_1013F8948;
  if (!qword_1013F8948)
  {
    result = swift_getWitnessTable(&unk_100F15364, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8948);
  }
  return result;
}

unint64_t sub_1008C7A04()
{
  unint64_t result;

  result = qword_1013F8950;
  if (!qword_1013F8950)
  {
    result = swift_getWitnessTable(&unk_100F153BC, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8950);
  }
  return result;
}

uint64_t sub_1008C7A48@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DD3D8 != -1)
    swift_once(&qword_1013DD3D8, sub_1008C6D10);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_10147FCD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1008C7AB8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1008C7AF8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1008C7AF8()
{
  unint64_t result;

  result = qword_1013F8958;
  if (!qword_1013F8958)
  {
    result = swift_getWitnessTable(&unk_100F1526C, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8958);
  }
  return result;
}

uint64_t sub_1008C7B3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C7AF8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1008C7B78()
{
  unint64_t result;

  result = qword_1013F8960;
  if (!qword_1013F8960)
  {
    result = swift_getWitnessTable(&unk_100F153FC, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8960);
  }
  return result;
}

unint64_t sub_1008C7BC0()
{
  unint64_t result;

  result = qword_1013F8968;
  if (!qword_1013F8968)
  {
    result = swift_getWitnessTable(&unk_100F15424, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8968);
  }
  return result;
}

unint64_t sub_1008C7C08()
{
  unint64_t result;

  result = qword_1013F8970;
  if (!qword_1013F8970)
  {
    result = swift_getWitnessTable(&unk_100F151F4, &type metadata for CRLFontStyleEntity);
    atomic_store(result, (unint64_t *)&qword_1013F8970);
  }
  return result;
}

double sub_1008C7C4C()
{
  double result;

  if (qword_1013DD3E0 != -1)
    swift_once(&qword_1013DD3E0, sub_1008C6F44);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_10147FCF0).n128_u64[0];
  return result;
}

uint64_t sub_1008C7C8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C7A04();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1008C7CC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F8978;
  if (!qword_1013F8978)
  {
    v1 = sub_1004CB6A4(&qword_1013F8980);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F8978);
  }
  return result;
}

void sub_1008C7D14(_QWORD *a1@<X8>)
{
  *a1 = &off_101263DB0;
}

uint64_t storeEnumTagSinglePayload for CRLFontStyleEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1008C7D70 + 4 * byte_100F151C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1008C7DA4 + 4 * byte_100F151C0[v4]))();
}

uint64_t sub_1008C7DA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C7DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008C7DB4);
  return result;
}

uint64_t sub_1008C7DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008C7DC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1008C7DCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008C7DD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFontStyleEntity()
{
  return &type metadata for CRLFontStyleEntity;
}

unint64_t sub_1008C7DF0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012652F0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

char *sub_1008C7E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _QWORD);
  uint64_t v42;
  void *v43;
  char *v44;
  objc_class *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  objc_super v57;
  _BYTE v58[32];
  _BYTE v59[24];
  _BYTE v60[32];
  char *v61;

  v56 = a4;
  v52 = a2;
  v5 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v53 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v49 = (uint64_t)&v48 - v14;
  __chkstk_darwin(v15);
  v51 = (uint64_t)&v48 - v16;
  __chkstk_darwin(v17);
  v55 = (uint64_t)&v48 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v48 - v23;
  v54 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_1009DA448(1);
  swift_release(v25);
  v27 = (char *)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v60, 0, 0);
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  v50 = v8;
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1005E3EB4((uint64_t)v7);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_release(v26);
  v29 = (uint64_t)v61;
  sub_1009DA6A4(v56);
  if (v29)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v56 = 0;
    v30 = v55;
    sub_1004CB7BC(v52, v55, (uint64_t *)&unk_1013E1A50);
    v61 = v24;
    v31 = (uint64_t)v24;
    v32 = v51;
    sub_1004CB7BC(v31, v51, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33);
    v36 = v28;
    if (v35 == 1)
    {
      v37 = (uint64_t)v21;
      sub_1008C89B0(v32, (uint64_t)v21);
      swift_retain(v26);
      sub_1004CB800(v55, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v55, v33);
      v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v37 = (uint64_t)v21;
      v38(v21, 0, 1, v33);
    }
    v39 = v49;
    sub_1004CB7BC(v37, v49, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v59, 33, 0);
    v40 = v53;
    sub_1004CB7BC(v39, v53, (uint64_t *)&unk_1013E1A50);
    v41 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v58, v36);
    sub_1005E388C(v40, v42);
    v41(v58, 0);
    sub_1004CB800(v39, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v59);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v43 = *(void **)(v54 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v44 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUnknownItem(0));
    *(_QWORD *)&v44[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v43;
    *(_QWORD *)&v44[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v26;
    v45 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v57.receiver = v44;
    v57.super_class = v45;
    v46 = v43;
    v27 = (char *)objc_msgSendSuper2(&v57, "init");
    sub_1004CB800((uint64_t)v61, (uint64_t *)&unk_1013E1A50);
  }
  return v27;
}

id sub_1008C82C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  char *v5;
  id v6;
  objc_super v8;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v2);
  v3 = sub_1009DA448(0);
  swift_release(v2);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v5 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUnknownItem(0));
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v4;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v3;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v6 = v4;
  return objc_msgSendSuper2(&v8, "init");
}

uint64_t sub_1008C8394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _UNKNOWN ****v6;
  char *v7;
  uint64_t v8;
  _UNKNOWN ****v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  CKRecordID v14;
  Swift::String v15;

  v3 = type metadata accessor for CRLUnknownItem(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (!v4)
    goto LABEL_13;
  v5 = v4;
  v6 = *(_UNKNOWN *****)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 != &off_101400278)
    v6 = 0;
  v7 = (char *)v6 + qword_101400218;
  if (v7[8])
    v8 = *(_QWORD *)v7 + 2;
  else
    v8 = *(_QWORD *)v7;
  v9 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v9 != &off_101400278)
    v9 = 0;
  v10 = (char *)v9 + qword_101400218;
  v11 = *(uint64_t *)((char *)v9 + qword_101400218);
  if (v10[8] == 1)
    __asm { BR              X11 }
  if (v8 == v11)
  {
    swift_unknownObjectRetain(a1);
    v12 = sub_100B0C360(v5, v1);
    swift_unknownObjectRelease(a1);
    return v12;
  }
  else
  {
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2, 38, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2u, 38, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

_QWORD *sub_1008C85E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _UNKNOWN ****v6;
  char *v7;
  uint64_t v8;
  _UNKNOWN ****v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  CKRecordID v14;
  Swift::String v15;

  v3 = type metadata accessor for CRLUnknownItem(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (!v4)
    goto LABEL_14;
  v5 = v4;
  v6 = *(_UNKNOWN *****)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 != &off_101400278)
    v6 = 0;
  v7 = (char *)v6 + qword_101400218;
  if (v7[8])
    v8 = *(_QWORD *)v7 + 2;
  else
    v8 = *(_QWORD *)v7;
  v9 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v9 != &off_101400278)
    v9 = 0;
  v10 = (char *)v9 + qword_101400218;
  v11 = *(uint64_t *)((char *)v9 + qword_101400218);
  if (v10[8] == 1)
    __asm { BR              X11 }
  if (v8 == v11)
  {
    v12 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v5, v12))
      return _swiftEmptyDictionarySingleton;
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
LABEL_14:
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2, 48, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2u, 48, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

id sub_1008C8904()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUnknownItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1008C8938()
{
  return type metadata accessor for CRLUnknownItem(0);
}

uint64_t type metadata accessor for CRLUnknownItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F89C0;
  if (!qword_1013F89C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUnknownItem);
  return result;
}

uint64_t sub_1008C897C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1000);
}

uint64_t sub_1008C89B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1008C89FC()
{
  unint64_t result;

  result = qword_1013F89D0;
  if (!qword_1013F89D0)
  {
    result = swift_getWitnessTable(&unk_100F154E0, &type metadata for CRLiOSCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F89D0);
  }
  return result;
}

uint64_t sub_1008C8A44(uint64_t a1)
{
  return sub_1008C918C(a1, &qword_1013F8A70, qword_10147FCF8, (uint64_t (*)(void))sub_1005E4338, (uint64_t)&type metadata for CRLCreateBoardIntent);
}

uint64_t sub_1008C8A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147FD10);
  sub_1004F2A1C(v10, (uint64_t)qword_10147FD10);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x8000000100FDD350);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "Title for Create Board app intent", 33, 2);
}

void sub_1008C8BF4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  id v3;
  id v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v19[24];

  v0 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v0);
  v2 = &v19[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for CRLiOSAppDelegate();
    if (swift_dynamicCastClass(v4, v5))
    {
      sub_10060A6B8();
      if (v6)
      {
        v7 = v6;
        v8 = *(void **)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
        if (v8)
        {
          v9 = objc_msgSend(v8, "windowScene");
          if (v9)
          {
            v10 = v9;
            if (qword_1013DD820 != -1)
              swift_once(&qword_1013DD820, sub_100A04A9C);
            swift_beginAccess(&static OS_os_log.sceneManagement, v19, 0, 0);
            v11 = (id)static OS_os_log.sceneManagement;
            v13 = static os_log_type_t.default.getter(v12);
            sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Creating new board from app intent", 34, 2, (uint64_t)_swiftEmptyArrayStorage);

            sub_1008CA090();
            v14 = type metadata accessor for CRLBoardIdentifier(0);
            (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
            v15 = sub_10087430C(6u, 1, (uint64_t)v2);
            sub_10091F384(v15);
            swift_unknownObjectRelease(v4);

            goto LABEL_14;
          }
        }

      }
    }
    swift_unknownObjectRelease(v4);
  }
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, v19, 0, 0);
  v15 = (id)static OS_os_log.sceneManagement;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Failed to create new board from app intent", 42, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_14:

}

uint64_t sub_1008C8E74@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C97E4(&qword_1013DD3E8, &qword_1013F8A70, (uint64_t)qword_10147FCF8, (uint64_t)sub_1008C8A44, a1);
}

unint64_t sub_1008C8E9C()
{
  unint64_t result;

  result = qword_1013F89D8;
  if (!qword_1013F89D8)
  {
    result = swift_getWitnessTable(&unk_100F15570, &type metadata for CRLiOSCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F89D8);
  }
  return result;
}

unint64_t sub_1008C8EE4()
{
  unint64_t result;

  result = qword_1013F89E0;
  if (!qword_1013F89E0)
  {
    result = swift_getWitnessTable(&unk_100F15598, &type metadata for CRLiOSCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F89E0);
  }
  return result;
}

uint64_t sub_1008C8F28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101129F54, 1);
}

uint64_t sub_1008C8F38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101129F2C, 1);
}

uint64_t sub_1008C8F48@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C9920(&qword_1013DD3F0, (uint64_t)qword_10147FD10, (uint64_t)sub_1008C8A68, a1);
}

uint64_t sub_1008C8F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_1004B804C(&qword_1013F8A68);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.init(stringLiteral:)(0x4220657461657243, 0xEC0000006472616FLL, a1, a2, v5);
  return IntentParameterSummary.init(_:table:)(v7, 0x6E497070414C5243, 0xED000073746E6574, a1, a2);
}

uint64_t sub_1008C902C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1008C9044, 0, 0);
}

uint64_t sub_1008C9044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008C90AC, v2, v3);
}

uint64_t sub_1008C90AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1008C8BF4();
  return swift_task_switch(sub_1008CA0F4, 0, 0);
}

uint64_t sub_1008C90F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C89FC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1008C9124()
{
  unint64_t result;

  result = qword_1013F89F0;
  if (!qword_1013F89F0)
  {
    result = swift_getWitnessTable(&unk_100F155F4, &type metadata for CRLiOSOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F89F0);
  }
  return result;
}

uint64_t sub_1008C9168(uint64_t a1)
{
  return sub_1008C918C(a1, &qword_1013F8A60, qword_10147FD28, (uint64_t (*)(void))sub_1005761F4, (uint64_t)&type metadata for CRLOpenBoardIntent);
}

uint64_t sub_1008C918C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1004B804C(a2);
  sub_100501DE0(v8, a3);
  sub_1004F2A1C(v8, (uint64_t)a3);
  v9 = a4();
  return IntentDeprecation.init(replacedBy:)(a5, a5, v9);
}

uint64_t sub_1008C91F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147FD40);
  sub_1004F2A1C(v10, (uint64_t)qword_10147FD40);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100FDD2B0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "Title for Open Board app intent", 31, 2);
}

void sub_1008C9380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  __n128 v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[72];
  _BYTE v45[24];
  uint64_t v46;

  v46 = a1;
  v2 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v2);
  v43 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLiOSBoardEntity(0);
  __chkstk_darwin(v11);
  v13 = (id *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v15 = objc_msgSend(v14, "delegate");

  if (v15)
  {
    v16 = type metadata accessor for CRLiOSAppDelegate();
    if (swift_dynamicCastClass(v15, v16))
    {
      sub_10060A6B8();
      if (v17)
      {
        v18 = v17;
        v19 = *(void **)&v17[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
        if (v19)
        {
          v20 = objc_msgSend(v19, "windowScene");
          if (v20)
          {
            v39 = v20;
            v40 = v18;
            v41 = v1;
            if (qword_1013DD820 != -1)
              swift_once(&qword_1013DD820, sub_100A04A9C);
            swift_beginAccess(&static OS_os_log.sceneManagement, v45, 0, 0);
            v21 = (void *)static OS_os_log.sceneManagement;
            v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v22, v44);
            *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
            v38 = v21;
            IntentParameter.wrappedValue.getter(v13);
            sub_1004E1B3C((uint64_t)v13, (uint64_t)v10);
            sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLiOSBoardEntity);
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
            v24 = sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
            v25 = UUID.uuidString.getter(v24);
            v27 = v26;
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v25;
            *(_QWORD *)(inited + 40) = v27;
            v29 = static os_log_type_t.default.getter(v28);
            v30 = v38;
            sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v29, "Opening the board:%@ from app intent", 36, 2, inited);
            swift_setDeallocating(inited);
            v31 = *(_QWORD *)(inited + 16);
            v32 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, v31, v32);

            sub_1008CA090();
            IntentParameter.wrappedValue.getter(v13);
            v33 = v43;
            sub_1004E1B3C((uint64_t)v13, v43);
            sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLiOSBoardEntity);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v42);
            v34 = sub_10087430C(5u, 1, v33);
            v35 = v40;
            sub_10091F384(v34);
            swift_unknownObjectRelease(v15);

            goto LABEL_14;
          }
        }

      }
    }
    swift_unknownObjectRelease(v15);
  }
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, v45, 0, 0);
  v34 = (id)static OS_os_log.sceneManagement;
  v37 = static os_log_type_t.default.getter(v36);
  sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v37, "Failed to open a board from app intent", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_14:

}

uint64_t sub_1008C97C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C97E4(&qword_1013DD3F8, &qword_1013F8A60, (uint64_t)qword_10147FD28, (uint64_t)sub_1008C9168, a1);
}

uint64_t sub_1008C97E4@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = sub_1004B804C(a2);
  v9 = sub_1004F2A1C(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

unint64_t sub_1008C9858()
{
  unint64_t result;

  result = qword_1013F89F8;
  if (!qword_1013F89F8)
  {
    result = swift_getWitnessTable(&unk_100F15684, &type metadata for CRLiOSOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F89F8);
  }
  return result;
}

unint64_t sub_1008C98A0()
{
  unint64_t result;

  result = qword_1013F8A00;
  if (!qword_1013F8A00)
  {
    result = swift_getWitnessTable(&unk_100F156AC, &type metadata for CRLiOSOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F8A00);
  }
  return result;
}

uint64_t sub_1008C98E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101129F04, 1);
}

uint64_t sub_1008C98F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101129EDC, 1);
}

uint64_t sub_1008C9904@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C9920(&qword_1013DD400, (uint64_t)qword_10147FD40, (uint64_t)sub_1008C91F4, a1);
}

uint64_t sub_1008C9920@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = sub_1004F2A1C(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

uint64_t sub_1008C998C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_1004B804C(&qword_1013F8A48);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F8A50);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, a1, a2);
  v10._countAndFlagsBits = 0x616F42206E65704FLL;
  v10._object = (void *)0xEB00000000206472;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(byte_100F15708);
  v12 = sub_1004B804C(&qword_1013F8A58);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E497070414C5243, 0xED000073746E6574, a1, a2);
}

uint64_t sub_1008C9B08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch(sub_1008C9B24, 0, 0);
}

uint64_t sub_1008C9B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 32) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008C9B8C, v2, v3);
}

uint64_t sub_1008C9B8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_1008C9380(v1);
  return swift_task_switch(sub_1008C9BDC, 0, 0);
}

uint64_t sub_1008C9BDC(uint64_t a1)
{
  uint64_t v1;

  static IntentResult.result<>()(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1008C9C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1008C9CD4();
  *a1 = result;
  return result;
}

uint64_t sub_1008C9C34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C9124();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLiOSOpenBoardIntent()
{
  return &type metadata for CRLiOSOpenBoardIntent;
}

ValueMetadata *type metadata accessor for CRLiOSCreateBoardIntent()
{
  return &type metadata for CRLiOSCreateBoardIntent;
}

uint64_t sub_1008C9C7C()
{
  return sub_1004CBA30(&qword_1013F8A10, &qword_1013F8A18, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1008C9CA8()
{
  return sub_1004CBA30(&qword_1013F8A20, &qword_1013F8A28, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1008C9CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  unint64_t v33;
  _QWORD v35[2];
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  __chkstk_darwin(v0);
  v38 = (char *)v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v37 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v36 = (char *)v35 - v5;
  v6 = sub_1004B804C(&qword_1013F8A30);
  __chkstk_darwin(v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[1] = sub_1004B804C(&qword_1013F8A38);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, 0, 0, 256);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v11, 1, 1, v22);
  v27 = type metadata accessor for CRLiOSBoardEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
  v28 = type metadata accessor for IntentDialog(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v30 = v36;
  v29(v36, 1, 1, v28);
  v31 = v37;
  v29(v37, 1, 1, v28);
  v32 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v38, enum case for InputConnectionBehavior.default(_:), v40);
  v33 = sub_1008CA048();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v25, v11, v8, v30, v31, v32, v33);
}

unint64_t sub_1008CA048()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9A30[0];
  if (!qword_1013E9A30[0])
  {
    v1 = type metadata accessor for CRLiOSBoardEntity(255);
    result = swift_getWitnessTable(&unk_100F01380, v1);
    atomic_store(result, qword_1013E9A30);
  }
  return result;
}

unint64_t sub_1008CA090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F8A40;
  if (!qword_1013F8A40)
  {
    v1 = objc_opt_self(NSUserActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F8A40);
  }
  return result;
}

uint64_t sub_1008CA0CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1008CA0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _UNKNOWN ****v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  void *v42;
  os_unfair_lock_s *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  NSURL *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;
  NSString v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  NSString v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  double v91;
  id v92;
  const void *v93;
  uint64_t v94;
  id v95;
  NSString v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  void (*v101)(char *, uint64_t);
  uint64_t v103;
  void (*v104)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  _QWORD aBlock[5];
  uint64_t v121;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v1);
  v107 = (uint64_t)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for UTType(0);
  v112 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v111 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v108 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v114 = (char *)&v103 - v7;
  __chkstk_darwin(v8);
  v113 = (char *)&v103 - v9;
  __chkstk_darwin(v10);
  v115 = (char *)&v103 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v103 - v13;
  v117 = type metadata accessor for URL(0);
  v119 = *(_QWORD *)(v117 - 8);
  v15 = *(_QWORD *)(v119 + 64);
  __chkstk_darwin(v117);
  v106 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v110 = (char *)&v103 - v17;
  __chkstk_darwin(v18);
  v116 = (char *)&v103 - v19;
  v20 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v103 - v27;
  v29 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v29 == &off_1014086A0)
    v30 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v30 = 0;
  swift_beginAccess(v30 + qword_101480ED0, aBlock, 32, 0);
  swift_retain(v29);
  v31 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v31);
  swift_endAccess(aBlock);
  swift_release(v29);
  sub_1004B8460((uint64_t)v22, (uint64_t)v25, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLImageItemAssetData);
  v118 = v28;
  sub_1004B84E0((uint64_t)v25, (uint64_t)v28, type metadata accessor for CRLAssetData);
  v32 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v33 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v34 = *(os_unfair_lock_s **)(v33 + 16);
  v35 = v32;
  os_unfair_lock_lock(v34);
  v36 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v37 = *(void **)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v37)
  {
    v38 = *(id *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v39 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v40 = v35;
    v41 = sub_100C7EE84((uint64_t)v40);

    v42 = *(void **)&v35[v36];
    *(_QWORD *)&v35[v36] = v41;
    v38 = v41;

    v37 = 0;
  }
  v43 = *(os_unfair_lock_s **)(v33 + 16);
  v44 = v37;
  os_unfair_lock_unlock(v43);
  v45 = (uint64_t)v118;
  sub_100C7857C((uint64_t)v118, 0, 3, 0, v14);

  v46 = v119;
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
  v48 = v117;
  if (v47(v14, 1, v117) == 1)
  {
    sub_1004B84A4(v45, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v14, &qword_1013E04D0);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, aBlock, 0, 0);
    v49 = (id)static OS_os_log.crlDefault;
    v50 = static os_log_type_t.error.getter(v49);
    sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v50, "Unable to make itemProvider from backing asset because the asset is missing", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  v52 = v23;
  v53 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v53(v116, v14, v48);
  v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
  v55 = v45;
  v56 = (uint64_t)v115;
  v104 = v54;
  v54(v115, 1, 1, v48);
  v57 = (uint64_t *)(v55 + *(int *)(v52 + 20));
  v58 = *v57;
  v59 = v57[1];
  v105 = v57;
  swift_bridgeObjectRetain(v59);
  v60 = (uint64_t)v113;
  v61 = (char *)sub_100D46048((uint64_t)v113, v58, v59);
  swift_bridgeObjectRelease(v59);
  sub_1004CB800(v56, &qword_1013E04D0);
  sub_1004C4938(v60, v56, &qword_1013E04D0);
  v62 = (uint64_t)v114;
  sub_1004CB7BC(v56, (uint64_t)v114, &qword_1013E04D0);
  if (v47((char *)v62, 1, v48) != 1)
  {
    v113 = v61;
    v75 = v110;
    v53(v110, (char *)v62, v48);
    v51 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
    v76 = v107;
    sub_10062E628(0, v107);
    v77 = v112;
    v78 = v109;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v76, 1, v109) == 1)
    {
      sub_1004CB800(v76, (uint64_t *)&unk_1013E3620);
      v79 = v119;
      if (!v51)
      {
LABEL_26:
        if (v113)
        {
          aBlock[0] = v51;
          v97 = v113;
          v98 = sub_1004B804C((uint64_t *)&unk_1013F8B40);
          v99 = Optional._bridgeToObjectiveC()(v98);
          objc_msgSend(v97, "setAssociatedLifetimeObject:", v99);

          swift_unknownObjectRelease(v99);
          v100 = *(void (**)(char *, uint64_t))(v79 + 8);
          v100(v75, v48);
          sub_1004CB800((uint64_t)v115, &qword_1013E04D0);
          v100(v116, v48);
          sub_1004B84A4((uint64_t)v118, type metadata accessor for CRLAssetData);

        }
        else
        {
          v101 = *(void (**)(char *, uint64_t))(v79 + 8);
          v101(v75, v48);
          sub_1004CB800((uint64_t)v115, &qword_1013E04D0);
          v101(v116, v48);
          sub_1004B84A4((uint64_t)v118, type metadata accessor for CRLAssetData);
        }
        return v51;
      }
    }
    else
    {
      v80 = v111;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v111, v76, v78);
      v79 = v119;
      if (v51)
      {
        v114 = (char *)v51;
        UTType.identifier.getter(v114);
        v82 = v81;
        v83 = String._bridgeToObjectiveC()();
        v84 = swift_bridgeObjectRelease(v82);
        v85 = v106;
        (*(void (**)(char *, char *, uint64_t, __n128))(v79 + 16))(v106, v75, v48, v84);
        v86 = *(unsigned __int8 *)(v79 + 80);
        v87 = (v86 + 16) & ~v86;
        v88 = swift_allocObject(&unk_101286248, v87 + v15, v86 | 7);
        v89 = v88 + v87;
        v48 = v117;
        v53((char *)v89, v85, v117);
        aBlock[4] = sub_1008D3C74;
        v121 = v88;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1008CAB08;
        aBlock[3] = &unk_101286260;
        v90 = _Block_copy(aBlock);
        *(_QWORD *)&v91 = swift_release(v121).n128_u64[0];
        v92 = v114;
        objc_msgSend(v114, "registerFileRepresentationForTypeIdentifier:fileOptions:visibility:loadHandler:", v83, 0, 0, v90, v91);
        v93 = v90;
        v80 = v111;
        _Block_release(v93);

        v77 = v112;
      }
      (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v78);
      if (!v51)
        goto LABEL_26;
    }
    v94 = v105[1];
    v95 = v51;
    swift_bridgeObjectRetain(v94);
    v96 = String._bridgeToObjectiveC()();
    objc_msgSend(v95, "setSuggestedName:", v96, swift_bridgeObjectRelease(v94).n128_f64[0]);

    goto LABEL_26;
  }
  sub_1004CB800(v62, &qword_1013E04D0);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v63 = v61;
  swift_beginAccess(&static OS_os_log.crlDefault, aBlock, 0, 0);
  v64 = (id)static OS_os_log.crlDefault;
  v65 = static os_log_type_t.error.getter(v64);
  sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v65, "Unable to cacheItemToURL", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

  v66 = v119;
  v67 = v108;
  v68 = v117;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v108, v116, v117);
  v104(v67, 0, 1, v68);
  v70 = 0;
  if (v47(v67, 1, v68) != 1)
  {
    URL._bridgeToObjectiveC()(v69);
    v70 = v71;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  }
  v51 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithContentsOfURL:", v70);

  if (v51)
  {
    v72 = v105[1];
    v73 = v51;
    swift_bridgeObjectRetain(v72);
    v74 = String._bridgeToObjectiveC()();
    objc_msgSend(v73, "setSuggestedName:", v74, swift_bridgeObjectRelease(v72).n128_f64[0]);

  }
  sub_1004CB800((uint64_t)v115, &qword_1013E04D0);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v116, v68);
  sub_1004B84A4((uint64_t)v118, type metadata accessor for CRLAssetData);

  return v51;
}

id sub_1008CAB08(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  uint64_t (*v3)(void (*)(uint64_t, char, uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(void (*)(uint64_t, char, uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_101286298, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v7 = (void *)v3(sub_1008D3CE4, v5, v6);
  swift_release(v2);
  swift_release(v5);
  return v7;
}

void sub_1008CAB84(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSURL *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v8 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v10, &qword_1013E04D0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    v14 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a3)
    v16 = (void *)_convertErrorToNSError(_:)(a3);
  else
    v16 = 0;
  (*(void (**)(uint64_t, void *, _QWORD, void *))(a4 + 16))(a4, v14, a2 & 1, v16);

}

Class sub_1008CAD08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _UNKNOWN ****v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  void (*v30)(char *, char *);
  _UNKNOWN ****v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _DWORD *v46;
  uint64_t v47;
  char *v48;
  id v49;
  void *v50;
  os_unfair_lock_s *v51;
  id v52;
  void *v53;
  char *v54;
  void *v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  objc_super v60;
  _BYTE v61[24];

  v1 = v0;
  v2 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  v11 = type metadata accessor for UUID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v57 - v17;
  v19 = OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData;
  v20 = *(char **)&v0[OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData];
  if (v20)
  {
    v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    v57 = v16;
    v58 = v15;
    sub_1004BB5A4(&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v21);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
    v59 = v20;
    v23(v21, v22);
    v24 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v24 == &off_1014086A0)
      v25 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v25 = 0;
    swift_beginAccess(v25 + qword_101480ED0, v61, 32, 0);
    swift_retain(v24);
    v26 = sub_1004B804C(&qword_1013EBA40);
    CRRegister.wrappedValue.getter(v26);
    swift_endAccess(v61);
    swift_release(v24);
    sub_1004B8460((uint64_t)v4, (uint64_t)v10, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLImageItemAssetData);
    v27 = v57;
    v28 = v58;
    (*((void (**)(char *, char *, char *))v57 + 2))(v13, v10, v58);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLAssetData);
    v29 = static UUID.== infix(_:_:)(v18);
    v30 = (void (*)(char *, char *))*((_QWORD *)v27 + 1);
    v30(v13, v28);
    v30(v18, v28);
    if ((v29 & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"imageAssetPayload", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 53, "Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imageAssetPayload", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 53, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u);
    }
    return (Class)v59;
  }
  else
  {
    v32 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v32 == &off_1014086A0)
      v33 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v33 = 0;
    swift_beginAccess(v33 + qword_101480ED0, v61, 32, 0);
    swift_retain(v32);
    v34 = sub_1004B804C(&qword_1013EBA40);
    CRRegister.wrappedValue.getter(v34);
    swift_endAccess(v61);
    swift_release(v32);
    sub_1004B8460((uint64_t)v4, (uint64_t)v7, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLImageItemAssetData);
    v35 = (char *)objc_msgSend(v0, "store");
    v36 = *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v36 + 16));
    v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    v38 = *(void **)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v38)
    {
      v39 = *(id *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      v59 = (char *)type metadata accessor for CRLAssetManager();
      v40 = (char *)objc_allocWithZone((Class)v59);
      v58 = &v40[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit(&v40[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
      v41 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      v42 = type metadata accessor for CRLUnfairLock();
      v43 = v1;
      v44 = swift_allocObject(v42, 24, 7);
      v57 = v35;
      v45 = v40;
      v46 = (_DWORD *)swift_slowAlloc(4, -1);
      *v46 = 0;
      *(_QWORD *)(v44 + 16) = v46;
      atomic_thread_fence(memory_order_acq_rel);
      *(_QWORD *)&v40[v41] = v44;
      v1 = v43;
      *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      v47 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(_QWORD *)&v45[v47] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
      *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      v48 = v57;
      swift_unknownObjectWeakAssign(v58, v57);

      v60.receiver = v45;
      v60.super_class = (Class)v59;
      v49 = objc_msgSendSuper2(&v60, "init");

      v50 = *(void **)&v35[v37];
      *(_QWORD *)&v35[v37] = v49;
      v39 = v49;

      v38 = 0;
    }
    v51 = *(os_unfair_lock_s **)(v36 + 16);
    v52 = v38;
    os_unfair_lock_unlock(v51);

    v53 = (void *)sub_100CF7F90(v7, v1, v39);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
    v54 = v1;
    v55 = *(void **)&v1[v19];
    *(_QWORD *)&v54[v19] = v53;
    v56 = v53;

    return (Class)v56;
  }
}

char *sub_1008CB2D4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _UNKNOWN ****v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (**v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _DWORD *v39;
  uint64_t v40;
  id v41;
  void *v42;
  os_unfair_lock_s *v43;
  id v44;
  void *v45;
  char *v46;
  Class v48;
  uint64_t v49;
  char *v50;
  objc_super v51;
  _BYTE v52[24];

  v1 = type metadata accessor for UUID(0);
  v2 = *(char **)(v1 - 8);
  v49 = v1;
  v50 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetData(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v15 == &off_1014086A0)
    v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v16 = 0;
  swift_beginAccess(v16 + qword_101480ED0, v52, 32, 0);
  swift_retain(v15);
  v17 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v17);
  swift_endAccess(v52);
  swift_release(v15);
  sub_1004CB7BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLImageItemAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
    return 0;
  }
  else
  {
    v19 = (void (**)(char *, uint64_t))v50;
    sub_1004B84E0((uint64_t)v10, (uint64_t)v14, type metadata accessor for CRLAssetData);
    v20 = OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData;
    v18 = *(char **)&v0[OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData];
    if (v18)
    {
      v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v22 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v21);
      v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
      v24 = v18;
      v23(v21, v22);
      LOBYTE(v21) = static UUID.== infix(_:_:)(v4);
      v19[1](v4, v49);
      if ((v21 & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"thumbnailAssetPayload", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 70, "Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"thumbnailAssetPayload", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 70, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u);
      }
    }
    else
    {
      v25 = v0;
      v26 = (char *)objc_msgSend(v0, "store");
      v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 16));
      v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      v29 = *(void **)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v29)
      {
        v30 = *(id *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        v48 = (Class)type metadata accessor for CRLAssetManager();
        v31 = (char *)objc_allocWithZone(v48);
        v50 = v14;
        v32 = v31;
        v33 = &v31[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit(&v31[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
        v49 = (uint64_t)v25;
        v34 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        v35 = type metadata accessor for CRLUnfairLock();
        v36 = swift_allocObject(v35, 24, 7);
        v37 = v26;
        v38 = v32;
        v39 = (_DWORD *)swift_slowAlloc(4, -1);
        *v39 = 0;
        *(_QWORD *)(v36 + 16) = v39;
        atomic_thread_fence(memory_order_acq_rel);
        *(_QWORD *)&v32[v34] = v36;
        v14 = v50;
        *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        v40 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(_QWORD *)&v38[v40] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
        *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        swift_unknownObjectWeakAssign(v33, v37);

        v51.receiver = v38;
        v51.super_class = v48;
        v41 = objc_msgSendSuper2(&v51, "init");

        v42 = *(void **)&v26[v28];
        *(_QWORD *)&v26[v28] = v41;
        v30 = v41;

        v25 = (char *)v49;
        v29 = 0;
      }
      v43 = *(os_unfair_lock_s **)(v27 + 16);
      v44 = v29;
      os_unfair_lock_unlock(v43);

      v18 = (char *)sub_100CF7F90(v14, v25, v30);
      v45 = *(void **)&v25[v20];
      *(_QWORD *)&v25[v20] = v18;
      v46 = v18;

    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLAssetData);
  }
  return v18;
}

double sub_1008CB854()
{
  Class v0;
  id v1;
  id v2;
  double v3;
  double v4;

  v0 = sub_1008CAD08();
  v1 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v2 = objc_msgSend(v1, "providerForAsset:shouldValidate:", v0, 1);

  objc_msgSend(v2, "naturalSize");
  v4 = v3;

  return v4;
}

id sub_1008CB8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  void *v41;
  _BYTE *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];
  _BYTE v53[24];
  _BYTE v54[24];
  char *v55;

  v51 = a4;
  v47 = a2;
  v5 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v48 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v45 = (uint64_t)&v44 - v14;
  __chkstk_darwin(v15);
  v46 = (uint64_t)&v44 - v16;
  __chkstk_darwin(v17);
  v50 = (uint64_t)&v44 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v44 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v44 - v23;
  v49 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_100BDE918(1);
  swift_release(v25);
  v27 = (id)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 632));
  swift_beginAccess(v27, v54, 0, 0);
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_release(v26);
  v29 = (uint64_t)v55;
  sub_100BDECB0(v51);
  if (v29)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v51 = 0;
    v44 = v8;
    v30 = v50;
    sub_1004CB7BC(v47, v50, (uint64_t *)&unk_1013E1A50);
    v55 = v24;
    v31 = (uint64_t)v24;
    v32 = v46;
    sub_1004CB7BC(v31, v46, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33) == 1)
    {
      v35 = (uint64_t)v21;
      sub_1004C4938(v32, (uint64_t)v21, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v50, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v50, v33);
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v35 = (uint64_t)v21;
      v36(v21, 0, 1, v33);
    }
    v37 = v45;
    sub_1004CB7BC(v35, v45, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v53, 33, 0);
    v38 = v48;
    sub_1004CB7BC(v37, v48, (uint64_t *)&unk_1013E1A50);
    v39 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v52, v28);
    sub_100582338(v38, v40, (uint64_t *)&unk_1013E1A50);
    v39(v52, 0);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v53);
    sub_1004CB800(v35, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v41 = *(void **)(v49 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v42 = objc_allocWithZone((Class)type metadata accessor for CRLImageItem(0));
    v27 = sub_100CF7ED8((uint64_t)v41, v26, v42);
    sub_1004CB800((uint64_t)v55, (uint64_t *)&unk_1013E1A50);
  }
  return v27;
}

uint64_t sub_1008CBD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *Strong;
  void *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  int v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _UNKNOWN ****v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t result;
  CKRecordID v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  _QWORD aBlock[5];
  uint64_t v74;
  uint64_t v75;

  v64 = a2;
  v71 = a1;
  v66 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v66);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v11);
  v65 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - v17;
  v19 = type metadata accessor for CRLAssetData(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v69 = (uint64_t)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v61 - v23;
  v70 = v2;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v70 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v26 = Strong,
        v27 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v26,
        (v27 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v59, v60);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    if (qword_1013DDE28 != -1)
      swift_once(&qword_1013DDE28, sub_100C88730);
    v28 = type metadata accessor for UUID(0);
    v29 = sub_1004F2A1C(v28, (uint64_t)qword_101481278);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v29, v28);
    v30 = &v24[*(int *)(v19 + 20)];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0xE000000000000000;
    v31 = *(int *)(v19 + 24);
    v63 = v24;
    *(_QWORD *)&v24[v31] = _swiftEmptyDictionarySingleton;
    v32 = v71;
    sub_1004E90B0(v71 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)aBlock);
    v33 = sub_1004B804C(&qword_101400020);
    v61 = type metadata accessor for CRLAssetBackedAssetStorage(0);
    v62 = v33;
    v34 = swift_dynamicCast(v72, aBlock, v33, v61, 6);
    v67 = v7;
    v68 = v4;
    if (v34)
    {
      v35 = v72[0];
      sub_1004B8460(v72[0] + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v15, type metadata accessor for CRLAssetData);
      v36 = swift_release(v35);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t, __n128))v37)(v15, 0, 1, v19, v36);
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
      v37(v15, 1, 1, v19);
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAssetMedia(media:thumbnailData:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 139, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      v32 = v71;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAssetMedia(media:thumbnailData:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 139, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    sub_1004C4938((uint64_t)v15, (uint64_t)v18, (uint64_t *)&unk_1013E9BE0);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
    v39 = (uint64_t)v63;
    if (v38 == 1)
    {
      sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E9BE0);
    }
    else
    {
      sub_1004B84A4((uint64_t)v63, type metadata accessor for CRLAssetData);
      sub_1004B84E0((uint64_t)v18, v39, type metadata accessor for CRLAssetData);
    }
    v40 = sub_1008D3194(v32);
    if (v40)
    {
      v41 = swift_allocObject(&unk_1012861F8, 24, 7);
      *(_QWORD *)(v41 + 16) = _swiftEmptyArrayStorage;
      aBlock[4] = sub_100786C04;
      v74 = v41;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100933E14;
      aBlock[3] = &unk_101286210;
      v42 = _Block_copy(aBlock);
      v43 = v74;
      swift_retain(v41);
      objc_msgSend(v40, "iteratePathElementsWithBlock:", v42, swift_release(v43).n128_f64[0]);

      _Block_release(v42);
      swift_beginAccess(v41 + 16, v72, 0, 0);
      v40 = *(id *)(v41 + 16);
      swift_bridgeObjectRetain(v40);
      swift_release(v41);
    }
    v45 = (uint64_t)v67;
    v44 = (uint64_t)v68;
    v47 = (uint64_t)v65;
    v46 = (int *)v66;
    v48 = v69;
    sub_1004B8460(v39, v69, type metadata accessor for CRLAssetData);
    if (v64
      && (sub_1004E90B0(v64 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)aBlock),
          swift_dynamicCast(&v75, aBlock, v62, v61, 6)))
    {
      v50 = v75;
      sub_1004B8460(v75 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v47, type metadata accessor for CRLAssetData);
      v51 = v50;
      v48 = v69;
      v49 = swift_release(v51);
      v52 = v47;
      v53 = 0;
    }
    else
    {
      v52 = v47;
      v53 = 1;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v37)(v52, v53, 1, v19, v49);
    sub_1004B84E0(v48, (uint64_t)v10, type metadata accessor for CRLAssetData);
    sub_1004C4938(v47, (uint64_t)&v10[v46[5]], (uint64_t *)&unk_1013E9BE0);
    *(_QWORD *)&v10[v46[6]] = v40;
    v10[v46[7]] = 2;
    *(_QWORD *)&v10[v46[8]] = _swiftEmptyDictionarySingleton;
    v54 = *(_UNKNOWN *****)(v70 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v54 == &off_1014086A0)
      v55 = *(_QWORD *)(v70 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v55 = 0;
    sub_1004B8460((uint64_t)v10, v45, type metadata accessor for CRLImageItemAssetData);
    swift_beginAccess(v55 + qword_101480ED0, aBlock, 33, 0);
    sub_1004B8460(v45, v44, type metadata accessor for CRLImageItemAssetData);
    swift_retain(v54);
    v56 = sub_1004B804C(&qword_1013EBA40);
    CRRegister.wrappedValue.setter(v44, v56, v57);
    sub_1004B84A4(v45, type metadata accessor for CRLImageItemAssetData);
    swift_endAccess(aBlock);
    swift_release(v54);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    return sub_1004B84A4(v39, type metadata accessor for CRLAssetData);
  }
  return result;
}

id sub_1008CC5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v1 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1014086A0)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_101480ED0, v11, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v6);
  swift_endAccess(v11);
  swift_release(v4);
  v7 = *(_QWORD *)&v3[*(int *)(v1 + 24)];
  swift_bridgeObjectRetain(v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLImageItemAssetData);
  if (!v7)
    return 0;
  v8 = sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
  return sub_100942548(v7, v8);
}

id sub_1008CC750()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  void *v11;
  id v12;
  unsigned __int8 *v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  _BYTE *v26;
  id v27;
  uint64_t v29;
  id v30;

  v1 = v0;
  v2 = type metadata accessor for CRLMaskInfoData(0);
  __chkstk_darwin(v2);
  v4 = (unsigned __int8 *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - v6;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v9 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 288);
  v10 = swift_retain(v8);
  v11 = (void *)v9(v10);
  swift_release(v8);
  v30 = v11;
  sub_1008AC6F8(v30, (uint64_t)v7);
  sub_1004B8460((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLMaskInfoData);
  v12 = objc_allocWithZone((Class)CRLMaskInfo);
  v13 = &v4[*(int *)(v2 + 20)];
  v14 = *(float *)v13;
  v15 = *((float *)v13 + 1);
  v16 = *((float *)v13 + 2);
  v17 = *((float *)v13 + 3);
  v18 = *((float *)v13 + 4);
  v19 = v13[20];
  v20 = v13[21];
  v21 = v13[22];
  v22 = v13[23];
  v23 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  v24 = v1;
  v25 = objc_msgSend(v23, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v19, v20, v21, v22, v14, v15, v16, v17, v18);
  v26 = sub_1009352D4(v4);
  v27 = objc_msgSend(v12, "initWithImageItem:geometry:pathSource:", v24, v25, v26);

  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLMaskInfoData);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMaskInfoData);
  return v27;
}

uint64_t sub_1008CC9B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(__n128);
  __n128 v11;
  void *v12;
  id v13;
  unsigned __int8 *v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  id v26;
  _BYTE *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  unsigned int v38;
  uint64_t v40;
  id v41;
  id v42;
  id v43;

  v1 = v0;
  v2 = type metadata accessor for CRLMaskInfoData(0);
  __chkstk_darwin(v2);
  v4 = (unsigned __int8 *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  v8 = (void *)sub_1008D2EB8();
  if (!v8)
    return 0;
  v43 = v8;
  v42 = objc_msgSend(v43, "geometry");
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v10 = *(uint64_t (**)(__n128))(*(_QWORD *)v9 + 288);
  v11 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]);
  v12 = (void *)v10(v11);
  swift_release(v9);
  v41 = v12;
  sub_1008AC6F8(v41, (uint64_t)v7);
  sub_1004B8460((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLMaskInfoData);
  v13 = objc_allocWithZone((Class)CRLMaskInfo);
  v14 = &v4[*(int *)(v2 + 20)];
  v15 = *(float *)v14;
  v16 = *((float *)v14 + 1);
  v17 = *((float *)v14 + 2);
  v18 = *((float *)v14 + 3);
  v19 = *((float *)v14 + 4);
  v20 = v14[20];
  v21 = v14[21];
  v22 = v14[22];
  v23 = v14[23];
  v24 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  v25 = v1;
  v26 = objc_msgSend(v24, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v20, v21, v22, v23, v15, v16, v17, v18, v19);
  v27 = sub_1009352D4(v4);
  v28 = objc_msgSend(v13, "initWithImageItem:geometry:pathSource:", v25, v26, v27);

  v29 = (uint64_t)v4;
  v30 = v42;
  sub_1004B84A4(v29, type metadata accessor for CRLMaskInfoData);

  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMaskInfoData);
  v31 = objc_msgSend(v28, "geometry");

  LODWORD(v27) = objc_msgSend(v30, "isEqual:", v31);
  if ((_DWORD)v27)
  {
    v32 = v43;
    v33 = objc_msgSend(v43, "pathSource");
    v34 = objc_opt_self(CRLScalarPathSource);
    v35 = (void *)swift_dynamicCastObjCClass(v33, v34);
    if (v35)
    {
      v36 = objc_msgSend(v35, "shouldShowKnob");

    }
    else
    {

      v37 = objc_msgSend(v32, "pathSource");
      v38 = objc_msgSend(v37, "isRectangular");

      return v38 ^ 1;
    }
  }
  else
  {

    return 1;
  }
  return (uint64_t)v36;
}

uint64_t sub_1008CCD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v10[24];

  v1 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1014086A0)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_101480ED0, v10, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v6);
  swift_endAccess(v10);
  swift_release(v4);
  v7 = v3[*(int *)(v1 + 28)];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLImageItemAssetData);
  return v7 & 1;
}

void sub_1008CCE48(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  _UNKNOWN ****v17;
  char v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  CKRecordID v22;
  Swift::String v23;
  _BYTE v25[24];

  v2 = v1;
  v4 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v25[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v25[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v22, v23);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1014086A0)
      v17 = v16;
    else
      v17 = 0;
    v18 = a1 & 1;
    v19 = (char *)v17 + qword_101480ED0;
    swift_beginAccess((char *)v17 + qword_101480ED0, v25, 32, 0);
    swift_retain(v16);
    v20 = sub_1004B804C(&qword_1013EBA40);
    CRRegister.wrappedValue.getter(v20);
    swift_endAccess(v25);
    v12[*(int *)(v4 + 28)] = v18;
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
    swift_beginAccess(v19, v25, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    CRRegister.wrappedValue.setter(v6, v20, v21);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
    swift_endAccess(v25);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLImageItemAssetData);
    swift_release(v16);
  }
}

id sub_1008CD154()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  Class v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  Class v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;

  v1 = OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial);
  if (v2 != 2)
    return (id)(v2 & 1);
  v3 = v0;
  v4 = sub_1008CAD08();
  v5 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v6 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((Class)((char *)v4 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);

  if ((v7 & 1) != 0)
    return 0;
  v9 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v10 = sub_1008CAD08();
  v11 = objc_msgSend(v9, "providerForAsset:shouldValidate:", v10, 1);

  v12 = objc_opt_self(CRLBitmapImageProvider);
  v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
  if (v13 && (v14 = objc_msgSend(v13, "CGImageSource")) != 0)
  {
    v15 = v14;
    v8 = objc_msgSend((id)objc_opt_self(PFImageMetadata), "imageSourceIsSpatial:", v14);

  }
  else
  {
    v8 = 0;
  }

  *(_BYTE *)(v3 + v1) = (_BYTE)v8;
  return v8;
}

BOOL sub_1008CD2E0()
{
  uint64_t v0;
  uint64_t v1;
  Class v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(__n128);
  __n128 v11;
  void *v12;
  double v13;
  double v14;
  Class v16;
  id v17;
  id v18;
  double v19;
  double v20;
  Class v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  __n128 v29;
  void *v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t (*v34)(__n128);
  __n128 v35;
  void *v36;
  double v37;
  double v38;

  v1 = v0;
  v2 = sub_1008CAD08();
  v3 = (void *)objc_opt_self(CRLImageProviderPool);
  v4 = objc_msgSend(v3, "sharedPool");
  v5 = objc_msgSend(v4, "providerForAsset:shouldValidate:", v2, 1);

  objc_msgSend(v5, "naturalSize");
  v7 = v6;

  if (sub_100803E94(v7, 0.0))
    return 0;
  v8 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v10 = *(uint64_t (**)(__n128))(*(_QWORD *)v9 + 288);
  v11 = swift_retain(v9);
  v12 = (void *)v10(v11);
  objc_msgSend(v12, "size", swift_release(v9).n128_f64[0]);
  v14 = v13;

  if (sub_100803E94(v14, 0.0))
    return 0;
  v16 = sub_1008CAD08();
  v17 = objc_msgSend(v3, "sharedPool");
  v18 = objc_msgSend(v17, "providerForAsset:shouldValidate:", v16, 1);

  objc_msgSend(v18, "naturalSize");
  v20 = v19;

  v21 = sub_1008CAD08();
  v22 = objc_msgSend(v3, "sharedPool");
  v23 = objc_msgSend(v22, "providerForAsset:shouldValidate:", v21, 1);

  objc_msgSend(v23, "naturalSize");
  v25 = v24;

  v26 = v20 / v25;
  v27 = *(_QWORD *)(v1 + v8);
  v28 = *(uint64_t (**)(__n128))(*(_QWORD *)v27 + 288);
  v29 = swift_retain(v27);
  v30 = (void *)v28(v29);
  objc_msgSend(v30, "size", swift_release(v27).n128_f64[0]);
  v32 = v31;

  v33 = *(_QWORD *)(v1 + v8);
  v34 = *(uint64_t (**)(__n128))(*(_QWORD *)v33 + 288);
  v35 = swift_retain(v33);
  v36 = (void *)v34(v35);
  objc_msgSend(v36, "size", swift_release(v33).n128_f64[0]);
  v38 = v37;

  return sub_100803E94(fabs(v26), fabs(v32 / v38));
}

BOOL sub_1008CD578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  Class v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  Class v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  unsigned int v18;
  _UNKNOWN ****v19;
  _UNKNOWN ****v20;
  uint64_t v21;
  char v22;
  _BOOL8 result;
  _BYTE v25[24];

  v1 = v0;
  v2 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial;
  v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial);
  if (v6 != 2)
  {
    if ((v6 & 1) != 0)
      goto LABEL_8;
    return 0;
  }
  v7 = sub_1008CAD08();
  v8 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v9 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((Class)((char *)v7 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v8, v9);

  if ((v10 & 1) != 0)
    return 0;
  v11 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v12 = sub_1008CAD08();
  v13 = objc_msgSend(v11, "providerForAsset:shouldValidate:", v12, 1);

  v14 = objc_opt_self(CRLBitmapImageProvider);
  v15 = (void *)swift_dynamicCastObjCClass(v13, v14);
  if (!v15 || (v16 = objc_msgSend(v15, "CGImageSource")) == 0)
  {

    result = 0;
    *(_BYTE *)(v1 + v5) = 0;
    return result;
  }
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(PFImageMetadata), "imageSourceIsSpatial:", v16);

  *(_BYTE *)(v1 + v5) = v18;
  if (!v18)
    return 0;
LABEL_8:
  if ((sub_1008CC9B8() & 1) != 0 || !sub_1008CD2E0())
    return 0;
  v19 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v19 == &off_1014086A0)
    v20 = v19;
  else
    v20 = 0;
  swift_beginAccess((char *)v20 + qword_101480ED0, v25, 32, 0);
  swift_retain(v19);
  v21 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v21);
  swift_endAccess(v25);
  swift_release(v19);
  v22 = v4[*(int *)(v2 + 28)];
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLImageItemAssetData);
  return (v22 & 1) == 0;
}

id sub_1008CD7D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t (*v17)(__n128);
  __n128 v18;
  void *v19;
  id v20;
  unsigned __int8 *v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  _BYTE *v38;
  id v39;
  uint64_t v40;
  uint64_t (*v41)(__n128);
  __n128 v42;
  char *v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  uint64_t v65;
  void (*v66)(__n128);
  char *v67;
  id v68;
  __n128 v69;
  char *v70;
  Class isa;
  id v72;
  uint64_t v74;
  char *v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v78 = *(_QWORD *)(v2 - 8);
  v79 = v2;
  __chkstk_darwin(v2);
  v77 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLMaskInfoData(0);
  __chkstk_darwin(v4);
  v6 = (unsigned __int8 *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v74 - v8;
  v10 = (void *)sub_1008D2EB8();
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v11, "pathSource");
    v13 = objc_opt_self(CRLScalarPathSource);
    v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
    if (v14)
    {
      v15 = v14;
      if ((objc_msgSend(v14, "shouldShowKnob") & 1) == 0)
      {
        v40 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v41 = *(uint64_t (**)(__n128))(*(_QWORD *)v40 + 288);
        v42 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]);
        v43 = v1;
        v44 = (void *)v41(v42);
        objc_msgSend(v44, "center", swift_release(v40).n128_f64[0]);
        v46 = v45;
        v48 = v47;
        objc_msgSend(v44, "position");
        v50 = sub_1000603B8(v46, v48, v49);
        v52 = v51;
        objc_msgSend(v44, "size");
        v55 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithCenter:size:", v50, v52, v53, v54);

        v56 = (void *)objc_opt_self(CRLScalarPathSource);
        objc_msgSend(v15, "scalar");
        v58 = v57;
        v36 = v43;
        objc_msgSend(v55, "size");
        v61 = objc_msgSend(v56, "roundedRectangleWithScalar:naturalSize:continuousCurve:", 1, v58, v59, v60);
        objc_msgSend(v61, "setShouldShowKnob:", 0);
        v62 = objc_allocWithZone((Class)CRLMaskInfo);
        v63 = v36;
        v39 = objc_msgSend(v62, "initWithImageItem:geometry:pathSource:", v63, v55, v61);

        goto LABEL_7;
      }
    }

  }
  v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v17 = *(uint64_t (**)(__n128))(*(_QWORD *)v16 + 288);
  v18 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]);
  v19 = (void *)v17(v18);
  swift_release(v16);
  v76 = v19;
  sub_1008AC6F8(v76, (uint64_t)v9);
  sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMaskInfoData);
  v20 = objc_allocWithZone((Class)CRLMaskInfo);
  v21 = &v6[*(int *)(v4 + 20)];
  v22 = *(float *)v21;
  v23 = *((float *)v21 + 1);
  v24 = *((float *)v21 + 2);
  v25 = *((float *)v21 + 3);
  v26 = *((float *)v21 + 4);
  v27 = v21[20];
  v28 = v21[21];
  v29 = v21[22];
  v75 = v9;
  v30 = v21[23];
  v31 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  v32 = v1;
  v33 = v1;
  v34 = v32;
  v35 = v30;
  v36 = v33;
  v37 = objc_msgSend(v31, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v27, v28, v29, v35, v22, v23, v24, v25, v26);
  v38 = sub_1009352D4(v6);
  v39 = objc_msgSend(v20, "initWithImageItem:geometry:pathSource:", v34, v37, v38);

  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMaskInfoData);
  sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLMaskInfoData);
LABEL_7:
  v64 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMask(0));
  v65 = *(_QWORD *)&v36[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v66 = *(void (**)(__n128))(*(_QWORD *)v65 + 256);
  v67 = v36;
  v68 = v39;
  v69 = swift_retain(v65);
  v70 = v77;
  v66(v69);
  swift_release(v65);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v70, v79);
  v72 = objc_msgSend(v64, "initWithId:maskInfo:", isa, v68);

  return v72;
}

BOOL sub_1008CDCC8(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v22;
  CGPoint v23;
  CGPoint v24;

  v3 = (void *)sub_1008D2EB8();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v4, "geometry");
  objc_msgSend(v5, "position");
  v7 = v6;
  v9 = v8;

  v24.x = 0.0;
  v24.y = 0.0;
  v23.x = v7;
  v23.y = v9;
  if (!CGPointEqualToPoint(v23, v24))
    goto LABEL_7;
  v10 = objc_msgSend(v4, "geometry");
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v11 + 288);
  v13 = swift_retain(v11);
  v14 = (void *)v12(v13);
  LODWORD(v11) = objc_msgSend(v10, "isEqualExceptForPosition:", v14, swift_release(v11).n128_f64[0]);

  if (!(_DWORD)v11)
  {
LABEL_7:

    return 0;
  }
  v15 = objc_msgSend(v4, "pathSource");
  v16 = v15;
  if ((a1 & 1) == 0)
  {
    v22 = objc_msgSend(v15, "isRectangular");
LABEL_12:
    v20 = v22;

    return (BOOL)v20;
  }
  v17 = objc_opt_self(CRLScalarPathSource);
  v18 = (void *)swift_dynamicCastObjCClass(v16, v17);
  if (!v18)
  {

    v16 = objc_msgSend(v4, "pathSource");
    v22 = objc_msgSend(v16, "isRectangular");
    goto LABEL_12;
  }
  v19 = objc_msgSend(v18, "type");

  return v19 == 0;
}

id sub_1008CDEDC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  void *v7;
  id v8;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  __n128 v12;
  uint64_t v13;

  v1 = (void *)sub_1008D2EB8();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "geometry");
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v5 = *(uint64_t (**)(__n128))(*(_QWORD *)v4 + 288);
    v6 = swift_retain(v4);
    v7 = (void *)v5(v6);
    v8 = objc_msgSend(v3, "geometryWithParentGeometry:", v7, swift_release(v4).n128_f64[0]);

    return v8;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 288);
    v12 = swift_retain(v10);
    v13 = v11(v12);
    swift_release(v10);
    return (id)v13;
  }
}

void sub_1008CE0BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _UNKNOWN ****v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void *v24;
  void *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  unsigned __int8 *v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  id v48;
  _BYTE *v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  _BYTE *v57;
  void *v58;
  id v59;
  uint64_t v60;
  unsigned __int8 *v61;
  uint64_t v62;
  _BYTE v63[24];
  _BYTE v64[32];
  __int128 v65;
  __int128 v66;

  v62 = a1;
  v4 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - v8;
  v10 = type metadata accessor for CRLMaskInfoData(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (unsigned __int8 *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v61 = (unsigned __int8 *)&v60 - v15;
  __chkstk_darwin(v16);
  v18 = (unsigned __int8 *)&v60 - v17;
  v19 = *(_UNKNOWN *****)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v19 == &off_1014086A0)
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v20 = 0;
  swift_beginAccess(v20 + qword_101480ED0, &v65, 32, 0);
  type metadata accessor for CRLImageItemCRDTData(0);
  swift_retain(v19);
  v21 = sub_1004B804C(&qword_1013F8AC8);
  CRRegister.wrappedValue.getter(v21);
  swift_endAccess(&v65);
  v22 = swift_release(v19);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v23)(v9, 1, v10, v22) != 1)
  {
    sub_1004B84E0((uint64_t)v9, (uint64_t)v18, type metadata accessor for CRLMaskInfoData);
    sub_1004CB7BC(v62, (uint64_t)v6, &qword_1013F8AC0);
    v26 = v18;
    if (v23(v6, 1, v10) == 1)
    {
      v62 = a2;
      sub_1004CB800((uint64_t)v6, &qword_1013F8AC0);
    }
    else
    {
      v27 = v61;
      sub_1004B84E0((uint64_t)v6, (uint64_t)v61, type metadata accessor for CRLMaskInfoData);
      v28 = *(void **)&v2[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo];
      if (v28)
      {
        v29 = v28;
        v30 = sub_1008AC904((uint64_t)v27);
        if (v30)
        {
          v31 = v30;
          objc_msgSend(v29, "setGeometry:", v30);
          if (a2)
          {
            v32 = (void *)sub_1008D2EB8();
            if (v32)
            {
              *((_QWORD *)&v66 + 1) = sub_1004B8930(0, &qword_1013F8B20, off_101229928);
              *(_QWORD *)&v65 = v32;
            }
            else
            {
              v65 = 0u;
              v66 = 0u;
            }
            sub_1004CB7BC((uint64_t)&v65, (uint64_t)v64, &qword_1013E0230);
            swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v63, 33, 0);
            v56 = v32;
            sub_10083DAD8((uint64_t)v64, 0x25uLL);
            swift_endAccess(v63);
            sub_1004CB800((uint64_t)&v65, &qword_1013E0230);
          }

        }
        if ((sub_1009345F4(v18, v27) & 1) == 0)
        {
          v57 = sub_1009352D4(v18);
          objc_msgSend(v29, "setPathSource:", v57);
          if (a2)
          {
            v58 = (void *)sub_1008D2EB8();
            if (v58)
            {
              *((_QWORD *)&v66 + 1) = sub_1004B8930(0, &qword_1013F8B20, off_101229928);
              *(_QWORD *)&v65 = v58;
            }
            else
            {
              v65 = 0u;
              v66 = 0u;
            }
            sub_1004CB7BC((uint64_t)&v65, (uint64_t)v64, &qword_1013E0230);
            swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v63, 33, 0);
            v59 = v58;
            sub_10083DAD8((uint64_t)v64, 0x26uLL);
            swift_endAccess(v63);
            sub_1004CB800((uint64_t)&v65, &qword_1013E0230);
          }

        }
        sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLMaskInfoData);
        v55 = (uint64_t)v18;
        goto LABEL_35;
      }
      v62 = a2;
      sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLMaskInfoData);
    }
    sub_1004B8460((uint64_t)v18, (uint64_t)v13, type metadata accessor for CRLMaskInfoData);
    v34 = objc_allocWithZone((Class)CRLMaskInfo);
    v35 = &v13[*(int *)(v10 + 20)];
    v36 = *(float *)v35;
    v37 = *((float *)v35 + 1);
    v38 = *((float *)v35 + 2);
    v39 = *((float *)v35 + 3);
    v40 = *((float *)v35 + 4);
    v41 = v35[20];
    v42 = v35[21];
    v43 = v35[22];
    v44 = v35[23];
    v45 = (uint64_t)v26;
    v46 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    v47 = v2;
    v48 = objc_msgSend(v46, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v41, v42, v43, v44, v36, v37, v38, v39, v40);
    v49 = sub_1009352D4(v13);
    v50 = objc_msgSend(v34, "initWithImageItem:geometry:pathSource:", v47, v48, v49);

    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLMaskInfoData);
    v51 = *(void **)&v47[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo];
    *(_QWORD *)&v47[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo] = v50;

    v52 = v62;
    if (v62)
    {
      v53 = (void *)sub_1008D2EB8();
      if (v53)
      {
        *((_QWORD *)&v66 + 1) = sub_1004B8930(0, &qword_1013F8B20, off_101229928);
        *(_QWORD *)&v65 = v53;
      }
      else
      {
        v65 = 0u;
        v66 = 0u;
      }
      sub_1004CB7BC((uint64_t)&v65, (uint64_t)v64, &qword_1013E0230);
      swift_beginAccess(v52 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v63, 33, 0);
      v54 = v53;
      sub_10083DAD8((uint64_t)v64, 0x24uLL);
      swift_endAccess(v63);
      sub_1004CB800((uint64_t)&v65, &qword_1013E0230);
    }
    v55 = v45;
LABEL_35:
    sub_1004B84A4(v55, type metadata accessor for CRLMaskInfoData);
    return;
  }
  sub_1004CB800((uint64_t)v9, &qword_1013F8AC0);
  v24 = *(void **)&v2[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo] = 0;

  if (a2)
  {
    v25 = (void *)sub_1008D2EB8();
    if (v25)
    {
      *((_QWORD *)&v66 + 1) = sub_1004B8930(0, &qword_1013F8B20, off_101229928);
      *(_QWORD *)&v65 = v25;
    }
    else
    {
      v65 = 0u;
      v66 = 0u;
    }
    sub_1004CB7BC((uint64_t)&v65, (uint64_t)v64, &qword_1013E0230);
    swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v63, 33, 0);
    v33 = v25;
    sub_10083DAD8((uint64_t)v64, 0x24uLL);
    swift_endAccess(v63);
    sub_1004CB800((uint64_t)&v65, &qword_1013E0230);
  }
}

uint64_t sub_1008CE7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t (*v15)(__n128);
  __n128 v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 288);
  v5 = swift_retain(v3);
  v6 = (void *)v4(v5);
  objc_msgSend(v6, "transform", swift_release(v3).n128_f64[0]);
  v29 = v36;
  v32 = v35;
  v26 = v37;

  v35 = v32;
  v36 = v29;
  v37 = v26;
  result = sub_100079330((double *)&v35, 0.0001);
  if ((_DWORD)result)
  {
    v8 = *(_QWORD *)(v1 + v2);
    v9 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 336);
    v10 = swift_retain(v8);
    LOBYTE(v9) = v9(v10);
    swift_release(v8);
    if ((v9 & 1) != 0)
    {
      v11 = (void *)sub_1008D2EB8();
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v12, "geometry");
        objc_msgSend(v13, "transform");
        v30 = v36;
        v33 = v35;
        v27 = v37;

        v35 = v33;
        v36 = v30;
        v37 = v27;
        LODWORD(v13) = sub_100079330((double *)&v35, 0.0001);

        if (!(_DWORD)v13)
          return 0;
      }
      v14 = *(_QWORD *)(v1 + v2);
      v15 = *(uint64_t (**)(__n128))(*(_QWORD *)v14 + 312);
      v16 = swift_retain(v14);
      LOBYTE(v15) = v15(v16);
      swift_release(v14);
      if ((v15 & 1) != 0)
        return 0;
    }
    v17 = (void *)sub_1008D2EB8();
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v18, "geometry");
      objc_msgSend(v19, "transform");
      v31 = v36;
      v34 = v35;
      v28 = v37;

      v35 = v34;
      v36 = v31;
      v37 = v28;
      LODWORD(v19) = sub_100079330((double *)&v35, 0.0001);

      if (!(_DWORD)v19)
        return 0;
    }
    v20 = (void *)sub_1008D2EB8();
    if (v20)
    {
      v21 = objc_msgSend(v20, "pathSource");
      if (v21)
      {
        v22 = v21;
        if (objc_msgSend(v21, "conformsToProtocol:", &OBJC_PROTOCOL___CRLSmartPathSource))
        {
          v23 = objc_opt_self(CRLScalarPathSource);
          v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
          if (v24)
          {
            v25 = objc_msgSend(v24, "shouldShowKnob");

            return v25 ^ 1;
          }
          else
          {

            return 0;
          }
        }

      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1008CEA88()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  char v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v1 = (void *)sub_1008D2EB8();
  if (!v1)
    goto LABEL_3;
  v2 = v1;
  v3 = objc_msgSend(v2, "geometry");
  objc_msgSend(v3, "transform");
  v10 = v13;
  v11 = v12;
  v9 = v14;

  v12 = v11;
  v13 = v10;
  v14 = v9;
  LODWORD(v3) = sub_100079330((double *)&v12, 0.0001);

  if (!(_DWORD)v3)
  {
    v7 = 0;
  }
  else
  {
LABEL_3:
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v5 = *(uint64_t (**)(__n128))(*(_QWORD *)v4 + 312);
    v6 = swift_retain(v4);
    LOBYTE(v5) = v5(v6);
    swift_release(v4);
    v7 = v5 ^ 1;
  }
  return v7 & 1;
}

void *sub_1008CEB70@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  char *v3;
  void *v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  char *v8;
  __n128 v9;
  void *v10;
  Swift::String v11;
  float v12;
  uint64_t v13;
  void *result;
  _BYTE v15[376];
  _BYTE v16[128];
  _BYTE v17[232];

  v3 = v1;
  v4 = (void *)sub_100A14240();
  if (v4)
  {
    sub_1008BF750(v4, (uint64_t)v15);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v15, v5);
  }
  else
  {
    sub_1004C39E8((uint64_t)v15);
  }
  sub_1004C4938((uint64_t)v15, (uint64_t)v17, (uint64_t *)&unk_1013F1530);
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v7 = *(uint64_t (**)(__n128))(*(_QWORD *)v6 + 384);
  v8 = v3;
  v9 = swift_retain(v6);
  v10 = (void *)v7(v9);

  swift_release(v6);
  if (v10)
  {
    sub_10080C2C4(v10, (uint64_t)v15);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v15, v11);
  }
  else
  {
    sub_1004C3A10(v15);
  }
  sub_1004C4938((uint64_t)v15, (uint64_t)v16, (uint64_t *)&unk_1013F02D0);
  v12 = sub_1008CF3C8();

  sub_1004C4938((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v16, (uint64_t)&v15[232], (uint64_t *)&unk_1013F02D0);
  *(float *)&v15[360] = v12;
  *(_QWORD *)&v15[368] = _swiftEmptyDictionarySingleton;
  a1[3] = (uint64_t)&type metadata for CRLImagePresetData;
  a1[4] = sub_10089D170();
  v13 = swift_allocObject(&unk_1012861D0, 400, 7);
  *a1 = v13;
  result = memcpy((void *)(v13 + 16), v15, 0x178uLL);
  *(_QWORD *)(v13 + 392) = _swiftEmptyDictionarySingleton;
  return result;
}

void sub_1008CECF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  _QWORD *v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(__n128);
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  double v27;
  id v28;
  id v29;

  v2 = v1;
  sub_1008CF9BC(a1);
  v4 = type metadata accessor for CRLMediaItem(0);
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = (_QWORD *)v5;
    v7 = a1;
    v8 = (void *)sub_100A14240();
    sub_100A14388(v8);
    v9 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v10 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 384);
    v12 = v7;
    v13 = swift_retain(v10);
    v14 = (void *)v11(v13);

    swift_release(v10);
    sub_100776C40(v14);

    v15 = *(_QWORD *)((char *)v6 + v9);
    v16 = *(uint64_t (**)(__n128))(*(_QWORD *)v15 + 336);
    v17 = v12;
    v18 = swift_retain(v15);
    LOBYTE(v16) = v16(v18);

    swift_release(v15);
    sub_100776A8C(v16 & 1);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping) = (*(uint64_t (**)(void))((swift_isaMask & *v6)
                                                                                              + 0x4B0))() & 1;

  }
  v19 = type metadata accessor for CRLImageItem(0);
  if (swift_dynamicCastClass(a1, v19))
  {
    v20 = a1;
    v21 = (void *)sub_1008D2EB8();
    if (v21)
    {
      v22 = v21;
      v29 = objc_msgSend(v22, "pathSource");
      v23 = objc_opt_self(CRLScalarPathSource);
      v24 = (void *)swift_dynamicCastObjCClass(v29, v23);
      if (v24 && (v25 = v24, (objc_msgSend(v24, "shouldShowKnob") & 1) == 0))
      {
        objc_msgSend(v25, "cornerRadius");
        *(float *)&v27 = v27;
        v28 = sub_1008CF5DC(*(float *)&v27);
        sub_1008D3420(v28);

        v26 = v28;
      }
      else
      {

        v26 = v29;
      }
    }
    else
    {
      v26 = v20;
    }

  }
}

void sub_1008CF03C(uint64_t a1, double a2, double a3)
{
  char *v3;
  char *v4;
  void *v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat v18;
  CGFloat v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  CGAffineTransform v29;
  objc_super v30;

  v4 = v3;
  v8 = (void *)sub_1008D2EB8();
  if (v8)
  {
    v9 = v8;
    v28 = v8;
    v10 = objc_msgSend(v28, "geometry");
    objc_msgSend(v10, "size");
    v12 = v11;
    v14 = v13;
    v15 = sub_100062E10(v11, v13, a2, a3);
    if (v15 < v12 || v16 < v14)
    {
      v18 = v15 / v12;
      v19 = v16 / v14;
      v20 = objc_msgSend(v28, "geometry");
      CGAffineTransformMakeScale(&v29, v18, v19);
      v21 = objc_msgSend(v20, "geometryByAppendingTransform:", &v29);

      v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v23 = *(uint64_t (**)(__n128))(*(_QWORD *)v22 + 288);
      v24 = swift_retain(v22);
      v25 = (void *)v23(v24);
      swift_release(v22);
      CGAffineTransformMakeScale(&v29, v18, v19);
      v26 = objc_msgSend(v25, "geometryByAppendingTransform:", &v29);

      objc_msgSend(v28, "setGeometry:", v21);
      v27 = v28;
      sub_1008D3420(v9);

      sub_100776700(v26);
    }
    else
    {

    }
  }
  else
  {
    v30.receiver = v3;
    v30.super_class = (Class)type metadata accessor for CRLImageItem(0);
    objc_msgSendSuper2(&v30, "scaleDownSizeToFitWithinSize:board:", a1, a2, a3);
  }
}

float sub_1008CF3C8()
{
  void *v0;
  float v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  double v8;

  v0 = (void *)sub_1008D2EB8();
  v1 = 0.0;
  if (v0)
  {
    v2 = v0;
    v3 = objc_msgSend(v2, "pathSource");
    v4 = objc_opt_self(CRLScalarPathSource);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5 && (v6 = v5, !objc_msgSend(v5, "type")))
    {
      objc_msgSend(v6, "scalar");
      v8 = v7;

      return v8;
    }
    else
    {

    }
  }
  return v1;
}

id sub_1008CF47C(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  float v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  void (*v12)(__n128);
  __n128 v13;
  Class isa;
  id v15;
  uint64_t v17;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v7 = 10.0;
  else
    v7 = 0.0;
  v8 = v1;
  v9 = sub_1008CF5DC(v7);
  v10 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMask(0));
  v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v12 = *(void (**)(__n128))(*(_QWORD *)v11 + 256);
  v13 = swift_retain(v11);
  v12(v13);
  swift_release(v11);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v15 = objc_msgSend(v10, "initWithId:maskInfo:", isa, v9);

  return v15;
}

id sub_1008CF5DC(float a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  char *v7;
  double v8;
  double v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  __n128 v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  id v30;

  v2 = v1;
  v4 = (void *)sub_1008D2EB8();
  if (a1 <= 0.0)
  {
    if (!v4)
      return 0;
    v6 = v4;
    v7 = (char *)objc_msgSend(v6, "geometry");
    objc_msgSend(v7, "size");
    v5 = objc_msgSend((id)objc_opt_self(CRLPathSource), "pathSourceForShapeType:naturalSize:", 3, v8, v9);
    v10 = objc_allocWithZone((Class)CRLMaskInfo);
    v11 = v2;
    v12 = objc_msgSend(v10, "initWithImageItem:geometry:pathSource:", v11, v7, v5);

  }
  else
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "geometry");
    }
    else
    {
      v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 288);
      v15 = swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]);
      v16 = (void *)v14(v15);
      objc_msgSend(v16, "center", swift_release(v13).n128_f64[0]);
      v18 = v17;
      v20 = v19;
      objc_msgSend(v16, "position");
      v22 = sub_1000603B8(v18, v20, v21);
      v24 = v23;
      objc_msgSend(v16, "size");
      v5 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithCenter:size:", v22, v24, v25, v26);

    }
    v27 = (void *)objc_opt_self(CRLScalarPathSource);
    objc_msgSend(v5, "size");
    v11 = (char *)objc_msgSend(v27, "roundedRectangleWithScalar:naturalSize:continuousCurve:", 1, a1, v28, v29);
    objc_msgSend(v11, "setShouldShowKnob:", 0);
    v30 = objc_allocWithZone((Class)CRLMaskInfo);
    v7 = v2;
    v12 = objc_msgSend(v30, "initWithImageItem:geometry:pathSource:", v7, v5, v11);
  }

  return v12;
}

uint64_t sub_1008CF940()
{
  id v0;
  unsigned __int8 v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = objc_msgSend(v0, "BOOLForKey:", CFSTR("CRLImageItemsRequireAssetDownloadForSendCopyUserDefault"));

  if ((v1 & 1) != 0)
    return 1;
  else
    return sub_100772DAC();
}

void sub_1008CF9BC(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(__n128);
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  uint64_t v36;
  id v37;
  char *v38;
  void *v39;
  Class v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t (*v47)(__n128);
  __n128 v48;
  void *v49;
  unsigned __int8 *v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  id v61;
  _BYTE *v62;
  uint64_t v63;
  id v64;
  id v65;
  _BYTE v66[4];
  unsigned int v67;
  id v68;
  id v69;
  id v70;
  Class v71;
  id v72;
  char *v73;
  void *v74;
  _QWORD v75[4];

  v2 = v1;
  v4 = type metadata accessor for CRLMaskInfoData(0);
  __chkstk_darwin(v4);
  v6 = &v66[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v7);
  v10 = &v66[-v9];
  v11 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xE0);
  v12 = (void *)v11(v8);
  v13 = objc_msgSend(v12, "copy");

  _bridgeAnyObjectToAny(_:)(v75, v13);
  swift_unknownObjectRelease(v13);
  v14 = sub_1004B8930(0, (unint64_t *)&qword_1013F1360, off_101229800);
  if (!swift_dynamicCast(&v74, v75, (char *)&type metadata for Any + 8, v14, 6))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 570, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 570, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v73 = v2;
  v15 = v74;
  v16 = type metadata accessor for CRLImageItem(0);
  if (swift_dynamicCastClass(a1, v16))
  {
    v17 = v15;
    v18 = a1;
    v19 = (void *)sub_1008D2EB8();
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v20, "pathSource");
      v22 = objc_msgSend(v20, "geometry");

      v15 = v17;
      goto LABEL_8;
    }

    v15 = v17;
  }
  objc_msgSend(v15, "size");
  v23 = sub_10005FDDC();
  v27 = sub_100061400(v23, v24, v25, v26);
  v29 = v28;
  v30 = (void *)((uint64_t (*)(void))v11)();
  objc_msgSend(v30, "size");
  v32 = v31;
  v34 = v33;

  v22 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithCenter:size:", v27, v29, v32, v34);
  v21 = 0;
LABEL_8:
  v35 = objc_msgSend(v15, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v75, v35);
  swift_unknownObjectRelease(v35);
  v36 = sub_1004B8930(0, (unint64_t *)&qword_1013E4C50, off_101229818);
  if (!swift_dynamicCast(&v74, v75, (char *)&type metadata for Any + 8, v36, 6))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 586, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 586, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_14:

    return;
  }
  v72 = v15;
  v15 = v74;
  v37 = objc_msgSend(v22, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v75, v37);
  swift_unknownObjectRelease(v37);
  if ((swift_dynamicCast(&v74, v75, (char *)&type metadata for Any + 8, v36, 6) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 587, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 587, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    goto LABEL_14;
  }
  v38 = v73;
  v39 = v74;
  v40 = sub_1008CAD08();
  v41 = v22;
  sub_1008D2AD0(v15, v39, (uint64_t)v40, v72, v22, (uint64_t)v38);

  v42 = v15;
  sub_100776700(v42);

  v71 = v40;
  if (v21)
  {
    v43 = objc_msgSend(objc_allocWithZone((Class)CRLMaskInfo), "initWithImageItem:geometry:pathSource:", v38, v41, v21);
    v44 = v41;
  }
  else
  {
    v45 = *(uint64_t **)&v38[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v46 = *v45;
    v70 = v41;
    v47 = *(uint64_t (**)(__n128))(v46 + 288);
    v48 = swift_retain(v45);
    v49 = (void *)v47(v48);
    swift_release(v45);
    v69 = v49;
    sub_1008AC6F8(v69, (uint64_t)v10);
    sub_1004B8460((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMaskInfoData);
    v68 = objc_allocWithZone((Class)CRLMaskInfo);
    v50 = &v6[*(int *)(v4 + 20)];
    v51 = *(float *)v50;
    v52 = *((float *)v50 + 1);
    v53 = *((float *)v50 + 2);
    v54 = *((float *)v50 + 3);
    v55 = *((float *)v50 + 4);
    v56 = v50[20];
    v57 = v50[21];
    v58 = v50[22];
    v67 = v50[23];
    v59 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    v60 = v73;
    v61 = objc_msgSend(v59, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v56, v57, v58, v67, v51, v52, v53, v54, v55);
    v62 = sub_1009352D4(v6);
    v43 = objc_msgSend(v68, "initWithImageItem:geometry:pathSource:", v60, v61, v62);

    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMaskInfoData);
    v63 = (uint64_t)v10;
    v44 = v70;
    sub_1004B84A4(v63, type metadata accessor for CRLMaskInfoData);
    v21 = 0;
  }
  v64 = v72;
  objc_msgSend(v43, "setGeometry:", v39);
  v65 = v43;
  sub_1008D3420(v43);

}

double sub_1008D0144()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  void *v7;
  id v8;
  double v9;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  __n128 v12;
  double v13;
  double v14;

  v1 = (void *)sub_1008D2EB8();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "geometry");
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v5 = *(uint64_t (**)(__n128))(*(_QWORD *)v4 + 288);
    v6 = swift_retain(v4);
    v7 = (void *)v5(v6);
    v8 = objc_msgSend(v3, "geometryWithParentGeometry:", v7, swift_release(v4).n128_f64[0]);

  }
  else
  {
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 288);
    v12 = swift_retain(v10);
    v8 = (id)v11(v12);
    *(_QWORD *)&v9 = swift_release(v10).n128_u64[0];
  }
  objc_msgSend(v8, "center", v9);
  v14 = v13;

  return v14;
}

double sub_1008D0310()
{
  uint64_t v0;
  Class v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v18;
  double v19;
  double v20;

  v1 = sub_1008CAD08();
  v2 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v3 = objc_msgSend(v2, "temporaryProviderForAsset:shouldValidate:", v1, 1);

  objc_msgSend(v3, "naturalSize");
  v5 = v4;
  v7 = v6;

  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v9 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 288);
  v10 = swift_retain(v8);
  v11 = (void *)v9(v10);
  objc_msgSend(v11, "size", swift_release(v8).n128_f64[0]);
  v13 = v12;
  v15 = v14;

  if (v5 == 0.0 || v7 == 0.0 || v13 == 0.0 || v15 == 0.0)
  {

    return 0.0;
  }
  v18 = sub_10040EB5C();
  if (v18 < v5)
    v5 = v18;
  sub_10040EB5C();
  if (v19 >= v7)
    v20 = v7;
  else
    v20 = v19;
  v16 = sub_100062DDC(v13, v15, v5, v20) / v13;

  if (v16 <= 2.0)
    return 0.0;
  return v16;
}

id sub_1008D046C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _BYTE *v5;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v2);
  v3 = sub_100BDE918(0);
  swift_release(v2);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v5 = objc_allocWithZone((Class)type metadata accessor for CRLImageItem(0));
  return sub_100CF7ED8((uint64_t)v4, v3, v5);
}

uint64_t sub_1008D0508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  _UNKNOWN ****v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  CKRecordID v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _QWORD v43[3];
  uint64_t v44;

  v3 = sub_1004B804C(&qword_1013F8AE0);
  v37 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v35 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v36);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - v8;
  v10 = sub_1004B804C(&qword_1013F8AD8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLImageItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v39 = a1;
    swift_unknownObjectRetain(a1);
    v38 = sub_100B0C360(v15, v1);
    v16 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 != &off_1014086A0)
      v16 = 0;
    v17 = (uint64_t)v16 + qword_101480ED0;
    swift_beginAccess((char *)v16 + qword_101480ED0, v42, 0, 0);
    sub_1004B8460(v17, (uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    v18 = *(_UNKNOWN *****)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 != &off_1014086A0)
      v18 = 0;
    v19 = (uint64_t)v18 + qword_101480ED0;
    swift_beginAccess((char *)v18 + qword_101480ED0, v41, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    v20 = sub_1008D3A08(&qword_1013F8B00, (uint64_t)&unk_100F2C310);
    CRStruct_3.actionUndoingDifference(from:)(v6, v36, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_1013F8AD8);
      memset(v43, 0, sizeof(v43));
      v44 = 1;
    }
    else
    {
      v21 = *(int *)(v3 + 48);
      v22 = (uint64_t)&v12[v21];
      v23 = *(int *)(v3 + 64);
      v24 = (uint64_t)&v12[v23];
      v25 = v35;
      v26 = v35 + v21;
      v27 = v35 + v23;
      sub_1004C4938((uint64_t)v12, v35, &qword_1013F8AE8);
      sub_1004C4938(v22, v26, &qword_1013F8AF0);
      sub_1004C4938(v24, v27, &qword_1013F8AF8);
      v44 = v3;
      v28 = sub_10050D1B0(v43);
      v29 = (uint64_t)v28 + *(int *)(v3 + 48);
      v30 = (uint64_t)v28 + *(int *)(v3 + 64);
      sub_1004C4938(v25, (uint64_t)v28, &qword_1013F8AE8);
      sub_1004C4938(v26, v29, &qword_1013F8AF0);
      sub_1004C4938(v27, v30, &qword_1013F8AF8);
    }
    v31 = v38;
    swift_beginAccess(v38 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v40, 33, 0);
    sub_10083DA20((uint64_t)v43, 3);
    swift_endAccess(v40);
    swift_unknownObjectRelease(v39);
    return v31;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 656, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 656, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v33, v34);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1008D0960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN ****v29;
  uint64_t v30;
  _UNKNOWN ****v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  double *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  double *v68;
  uint64_t result;
  CKRecordID v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  char v82[24];
  char v83[24];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013F8B08);
  v77 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v72 - v8;
  __chkstk_darwin(v10);
  v73 = (uint64_t)&v72 - v11;
  __chkstk_darwin(v12);
  v78 = (uint64_t)&v72 - v13;
  v76 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v76);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v72 - v17;
  v19 = sub_1004B804C(&qword_1013F8B10);
  __chkstk_darwin(v19);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v72 - v23;
  v25 = type metadata accessor for CRLImageItem(0);
  v26 = swift_dynamicCastClass(a1, v25);
  if (v26)
  {
    v27 = v26;
    v74 = v9;
    v75 = v6;
    v79 = v24;
    v80 = v4;
    v28 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v27, v28))
    {
      v29 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v29 != &off_1014086A0)
        v29 = 0;
      v30 = (uint64_t)v29 + qword_101480ED0;
      swift_beginAccess((char *)v29 + qword_101480ED0, v83, 0, 0);
      sub_1004B8460(v30, (uint64_t)v18, type metadata accessor for CRLImageItemCRDTData);
      v31 = *(_UNKNOWN *****)(v27 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v31 != &off_1014086A0)
        v31 = 0;
      v32 = (uint64_t)v31 + qword_101480ED0;
      swift_beginAccess((char *)v31 + qword_101480ED0, v82, 0, 0);
      sub_1004B8460(v32, (uint64_t)v15, type metadata accessor for CRLImageItemCRDTData);
      v33 = sub_1008D3A08(&qword_1013F8B18, (uint64_t)&unk_100F2C148);
      v34 = a1;
      swift_unknownObjectRetain(a1);
      v35 = (uint64_t)v79;
      CRType.observableDifference(from:)(v15, v76, v33);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLImageItemCRDTData);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLImageItemCRDTData);
      sub_1004CB7BC(v35, (uint64_t)v21, &qword_1013F8B10);
      v36 = v80;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v21, 1, v80) == 1)
      {
        sub_1004CB800((uint64_t)v21, &qword_1013F8B10);
        v37 = _swiftEmptyArrayStorage;
        if (!*(_QWORD *)&_swiftEmptyArrayStorage[2])
          goto LABEL_30;
      }
      else
      {
        v38 = *(int *)(v36 + 48);
        v39 = v78;
        v40 = v78 + v38;
        v41 = *(int *)(v36 + 64);
        v42 = v78 + v41;
        v43 = (uint64_t)&v21[v38];
        v44 = (uint64_t)&v21[v41];
        sub_1004C4938((uint64_t)v21, v78, &qword_1013E9C40);
        sub_1004C4938(v43, v40, &qword_1013E9C40);
        sub_1004C4938(v44, v42, &qword_1013E9C40);
        v45 = v73 + *(int *)(v36 + 48);
        v46 = *(int *)(v36 + 64);
        v47 = v73;
        v48 = v73 + v46;
        sub_1004CB7BC(v39, v73, &qword_1013E9C40);
        sub_1004CB7BC(v40, v45, &qword_1013E9C40);
        sub_1004CB7BC(v42, v48, &qword_1013E9C40);
        v49 = type metadata accessor for CRValueObservableDifference(0);
        v77 = *(_QWORD *)(*(_QWORD *)(v49 - 8) + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v47, 1, v49) == 1)
        {
          sub_1004CB800(v48, &qword_1013E9C40);
          sub_1004CB800(v45, &qword_1013E9C40);
          sub_1004CB800(v47, &qword_1013E9C40);
          v37 = _swiftEmptyArrayStorage;
        }
        else
        {
          sub_1004CB800(v47, &qword_1013E9C40);
          sub_1004CB800(v48, &qword_1013E9C40);
          sub_1004CB800(v45, &qword_1013E9C40);
          v37 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v51 = *((_QWORD *)v37 + 2);
          v50 = *((_QWORD *)v37 + 3);
          if (v51 >= v50 >> 1)
            v37 = (double *)sub_100D0EF94((_QWORD *)(v50 > 1), v51 + 1, 1, v37);
          *((_QWORD *)v37 + 2) = v51 + 1;
          v52 = &v37[2 * v51];
          *((_QWORD *)v52 + 4) = 0x737465737361;
          v52[5] = -2.12455197e183;
        }
        v53 = (uint64_t)v74;
        v54 = (uint64_t)&v74[*(int *)(v80 + 48)];
        v55 = (uint64_t)&v74[*(int *)(v80 + 64)];
        sub_1004CB7BC(v39, (uint64_t)v74, &qword_1013E9C40);
        sub_1004CB7BC(v40, v54, &qword_1013E9C40);
        sub_1004CB7BC(v42, v55, &qword_1013E9C40);
        v56 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v77)(v55, 1, v49);
        sub_1004CB800(v55, &qword_1013E9C40);
        sub_1004CB800(v54, &qword_1013E9C40);
        sub_1004CB800(v53, &qword_1013E9C40);
        v72 = a1;
        if (v56 == 1)
        {
          v57 = v78;
          v35 = (uint64_t)v79;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
            v37 = (double *)sub_100D0EF94(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
          v57 = v78;
          v35 = (uint64_t)v79;
          v59 = *((_QWORD *)v37 + 2);
          v58 = *((_QWORD *)v37 + 3);
          if (v59 >= v58 >> 1)
            v37 = (double *)sub_100D0EF94((_QWORD *)(v58 > 1), v59 + 1, 1, v37);
          *((_QWORD *)v37 + 2) = v59 + 1;
          v60 = &v37[2 * v59];
          *((_QWORD *)v60 + 4) = 1802723693;
          v60[5] = -4.94660803e173;
        }
        v61 = (uint64_t)v75;
        v62 = (uint64_t)&v75[*(int *)(v80 + 48)];
        v63 = (uint64_t)&v75[*(int *)(v80 + 64)];
        sub_1004CB7BC(v57, (uint64_t)v75, &qword_1013E9C40);
        sub_1004CB7BC(v40, v62, &qword_1013E9C40);
        sub_1004CB7BC(v42, v63, &qword_1013E9C40);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v62, 1, v49) == 1)
        {
          sub_1004CB800(v57, &qword_1013F8B08);
          sub_1004CB800(v63, &qword_1013E9C40);
          sub_1004CB800(v62, &qword_1013E9C40);
          sub_1004CB800(v61, &qword_1013E9C40);
          v34 = v72;
          if (!*((_QWORD *)v37 + 2))
          {
LABEL_30:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease(v34);
            v65 = _swiftEmptyDictionarySingleton;
            goto LABEL_31;
          }
        }
        else
        {
          sub_1004CB800(v62, &qword_1013E9C40);
          sub_1004CB800(v63, &qword_1013E9C40);
          sub_1004CB800(v61, &qword_1013E9C40);
          if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
            v37 = (double *)sub_100D0EF94(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
          v34 = v72;
          v67 = *((_QWORD *)v37 + 2);
          v66 = *((_QWORD *)v37 + 3);
          if (v67 >= v66 >> 1)
            v37 = (double *)sub_100D0EF94((_QWORD *)(v66 > 1), v67 + 1, 1, v37);
          *((_QWORD *)v37 + 2) = v67 + 1;
          v68 = &v37[2 * v67];
          *((_QWORD *)v68 + 4) = 0x656B6F727473;
          v68[5] = -2.12455197e183;
          sub_1004CB800(v57, &qword_1013F8B08);
          if (!*((_QWORD *)v37 + 2))
            goto LABEL_30;
        }
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v81 = _swiftEmptyDictionarySingleton;
      sub_100825A20((uint64_t)v37, 3, isUniquelyReferenced_nonNull_native);
      v65 = v81;
      swift_unknownObjectRelease(v34);
      swift_bridgeObjectRelease();
LABEL_31:
      sub_1004CB800(v35, &qword_1013F8B10);
      return (uint64_t)v65;
    }
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 668, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 668, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v70, v71);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_1008D1280(uint64_t a1, void (**a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (**v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void (**v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  int v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _UNKNOWN ****v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN ****v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _UNKNOWN ****v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _UNKNOWN ****v66;
  uint64_t v67;
  void *v68;
  id v69;
  void (**v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  _UNKNOWN ****v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  int v78;
  unsigned __int8 *v79;
  unsigned __int8 *v80;
  char v81;
  uint64_t v82;
  _UNKNOWN ****v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unsigned __int8 *v90;
  unsigned __int8 *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (**v101)(uint64_t, uint64_t, uint64_t, uint64_t);
  _OWORD v102[14];
  uint64_t v103;
  _BYTE v104[24];
  _OWORD v105[14];
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[29];
  _QWORD v125[29];
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _OWORD v131[14];
  uint64_t v132;
  _OWORD v133[14];
  uint64_t v134;
  _OWORD v135[14];
  uint64_t v136;
  uint64_t v137;

  v101 = a2;
  v95 = type metadata accessor for CRLMaskInfoData(0);
  v97 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v90 = (unsigned __int8 *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1004B804C(&qword_1013F8AD0);
  __chkstk_darwin(v96);
  v94 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v6);
  v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v91 = (unsigned __int8 *)&v82 - v9;
  __chkstk_darwin(v10);
  v98 = (uint64_t)&v82 - v11;
  __chkstk_darwin(v12);
  v93 = (char *)&v82 - v13;
  v99 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v99);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013F8AD8);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v82 - v20;
  v22 = sub_1004B804C(&qword_1013F8AE0);
  v23 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = (char *)a1;
  v26 = v137;
  sub_1007770E0(a1);
  if (!v26)
  {
    v101 = v23;
    v137 = (uint64_t)v21;
    v86 = v18;
    v87 = v25;
    v88 = v15;
    v89 = 0;
    v27 = v2;
    v28 = &v100[OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values];
    swift_beginAccess(&v100[OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values], &v130, 0, 0);
    v29 = *(_QWORD *)v28;
    if (!*(_QWORD *)(v29 + 16))
    {
      v127 = 0;
      v126 = 0;
      v128 = 0;
      v129 = 1;
      v32 = v137;
      v33 = v101;
LABEL_8:
      v34 = (uint64_t *)&unk_1013DFC00;
      v35 = &v126;
LABEL_9:
      sub_1004CB800((uint64_t)v35, v34);
      v33[7](v32, 1, 1, v22);
LABEL_10:
      v36 = &qword_1013F8AD8;
LABEL_11:
      sub_1004CB800(v32, v36);
      return;
    }
    swift_bridgeObjectRetain(v29);
    v30 = sub_1008431EC(3);
    if ((v31 & 1) != 0)
    {
      sub_1004CB7BC(*(_QWORD *)(v29 + 56) + 32 * v30, (uint64_t)&v126, &qword_1013E0230);
    }
    else
    {
      v127 = 0;
      v126 = 0;
      v128 = 0;
      v129 = 1;
    }
    v32 = v137;
    v33 = v101;
    swift_bridgeObjectRelease();
    if (v129 == 1)
      goto LABEL_8;
    sub_1004C4938((uint64_t)&v126, (uint64_t)&v107, &qword_1013E0230);
    if (!*((_QWORD *)&v108 + 1))
    {
      v34 = &qword_1013E0230;
      v35 = (uint64_t *)&v107;
      goto LABEL_9;
    }
    v37 = swift_dynamicCast(v32, &v107, (char *)&type metadata for Any + 8, v22, 6);
    v38 = v33[7];
    v38(v32, v37 ^ 1u, 1, v22);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v33[6])(v32, 1, v22) == 1)
      goto LABEL_10;
    v39 = *(int *)(v22 + 48);
    v101 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v38;
    v40 = (uint64_t)v87;
    v41 = (uint64_t)&v87[v39];
    v100 = &v87[v39];
    v42 = *(int *)(v22 + 64);
    v43 = (uint64_t)&v87[v42];
    v84 = &v87[v42];
    v44 = v22;
    v45 = v32 + v39;
    v46 = v32 + v42;
    sub_1004C4938(v32, (uint64_t)v87, &qword_1013F8AE8);
    sub_1004C4938(v45, v41, &qword_1013F8AF0);
    sub_1004C4938(v46, v43, &qword_1013F8AF8);
    v137 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v47 = v27;
    v48 = *(_UNKNOWN *****)(v27 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v48 == &off_1014086A0)
      v49 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v49 = 0;
    v50 = v49 + qword_101480ED0;
    swift_beginAccess(v49 + qword_101480ED0, &v123, 0, 0);
    v51 = (uint64_t)v88;
    sub_1004B8460(v50, (uint64_t)v88, type metadata accessor for CRLImageItemCRDTData);
    if (*v48 == &off_1014086A0)
      v52 = v48;
    else
      v52 = 0;
    v83 = v52;
    v53 = (uint64_t)v86;
    v54 = (uint64_t)&v86[*(int *)(v44 + 48)];
    v55 = (uint64_t)&v86[*(int *)(v44 + 64)];
    sub_1004CB7BC(v40, (uint64_t)v86, &qword_1013F8AE8);
    sub_1004CB7BC((uint64_t)v100, v54, &qword_1013F8AF0);
    sub_1004CB7BC((uint64_t)v84, v55, &qword_1013F8AF8);
    v85 = v47;
    v56 = v51;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v101)(v53, 0, 1, v44);
    swift_beginAccess((char *)v83 + qword_101480ED0, &v107, 33, 0);
    v57 = sub_1008D3A08(&qword_1013F8B00, (uint64_t)&unk_100F2C310);
    swift_retain(v48);
    CRStruct_3.apply(_:)(v53, v99, v57);
    swift_endAccess(&v107);
    swift_release(v48);
    sub_1004CB800(v53, &qword_1013F8AD8);
    v58 = sub_1004B804C(&qword_1013E0A88);
    CRRegister.wrappedValue.getter(v58);
    sub_1004C4938((uint64_t)&v107, (uint64_t)v124, (uint64_t *)&unk_1013F1530);
    v59 = *(_UNKNOWN *****)(v47 + v137);
    if (*v59 == &off_1014086A0)
      v60 = *(_QWORD *)(v47 + v137);
    else
      v60 = 0;
    swift_beginAccess(v60 + qword_101480ED0, &v126, 32, 0);
    swift_retain(v59);
    CRRegister.wrappedValue.getter(v58);
    sub_1004C4938((uint64_t)&v107, (uint64_t)v125, (uint64_t *)&unk_1013F1530);
    swift_endAccess(&v126);
    swift_release(v59);
    sub_1004C4938((uint64_t)v124, (uint64_t)&v126, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)&v126) == 1)
    {
      sub_1004C4938((uint64_t)v125, (uint64_t)&v107, (uint64_t *)&unk_1013F1530);
      v61 = sub_1004F276C((uint64_t)&v107);
      v63 = (uint64_t)v93;
      v62 = (uint64_t)v94;
      v64 = v99;
      if (v61 == 1)
        goto LABEL_39;
    }
    else
    {
      sub_1004C4938((uint64_t)v125, (uint64_t)&v107, (uint64_t *)&unk_1013F1530);
      if (sub_1004F276C((uint64_t)&v107) != 1)
      {
        sub_1004C4938((uint64_t)v125, (uint64_t)v102, (uint64_t *)&unk_1013F1530);
        v135[12] = v102[12];
        v135[13] = v102[13];
        v136 = v103;
        v135[8] = v102[8];
        v135[9] = v102[9];
        v135[11] = v102[11];
        v135[10] = v102[10];
        v135[4] = v102[4];
        v135[5] = v102[5];
        v135[7] = v102[7];
        v135[6] = v102[6];
        v135[0] = v102[0];
        v135[1] = v102[1];
        v135[3] = v102[3];
        v135[2] = v102[2];
        sub_1004C4938((uint64_t)v124, (uint64_t)v105, (uint64_t *)&unk_1013F1530);
        v133[12] = v105[12];
        v133[13] = v105[13];
        v134 = v106;
        v133[8] = v105[8];
        v133[9] = v105[9];
        v133[11] = v105[11];
        v133[10] = v105[10];
        v133[4] = v105[4];
        v133[5] = v105[5];
        v133[7] = v105[7];
        v133[6] = v105[6];
        v133[0] = v105[0];
        v133[1] = v105[1];
        v133[3] = v105[3];
        v133[2] = v105[2];
        sub_1008D3994(v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
        v65 = sub_1008BE12C((uint64_t)v133, (uint64_t)v135);
        sub_1008D3994(v125, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        sub_1008D3994(v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        sub_1008D3994(v124, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        v63 = (uint64_t)v93;
        v62 = (uint64_t)v94;
        v64 = v99;
        if ((v65 & 1) != 0)
          goto LABEL_39;
        goto LABEL_32;
      }
      v63 = (uint64_t)v93;
      v62 = (uint64_t)v94;
      v64 = v99;
    }
    sub_1004C4938((uint64_t)v124, (uint64_t)&v107, (uint64_t *)&unk_1013F1530);
    sub_1004C4938((uint64_t)v125, (uint64_t)&v122, (uint64_t *)&unk_1013F1530);
    sub_1004F2784((uint64_t)&v107);
LABEL_32:
    v66 = *(_UNKNOWN *****)(v85 + v137);
    if (*v66 == &off_1014086A0)
      v67 = *(_QWORD *)(v85 + v137);
    else
      v67 = 0;
    swift_beginAccess(v67 + qword_101480ED0, v104, 32, 0);
    swift_retain(v66);
    CRRegister.wrappedValue.getter(v58);
    sub_1004C4938((uint64_t)v102, (uint64_t)v105, (uint64_t *)&unk_1013F1530);
    swift_endAccess(v104);
    swift_release(v66);
    sub_1004C4938((uint64_t)v105, (uint64_t)&v107, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)&v107) == 1)
    {
      v68 = 0;
    }
    else
    {
      v131[12] = v119;
      v131[13] = v120;
      v132 = v121;
      v131[8] = v115;
      v131[9] = v116;
      v131[11] = v118;
      v131[10] = v117;
      v131[4] = v111;
      v131[5] = v112;
      v131[7] = v114;
      v131[6] = v113;
      v131[0] = v107;
      v131[1] = v108;
      v131[3] = v110;
      v131[2] = v109;
      v69 = sub_1008BEA4C((uint64_t)v131, 0);
      sub_1008D3994(v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
      v68 = v69;
    }
    sub_100A14388(v68);
    v56 = v51;
LABEL_39:
    v70 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + *(int *)(v64 + 24));
    v71 = sub_1004B804C(&qword_1013F8AC8);
    v101 = v70;
    CRRegister.wrappedValue.getter(v71);
    v72 = *(_UNKNOWN *****)(v85 + v137);
    if (*v72 == &off_1014086A0)
      v73 = *(_QWORD *)(v85 + v137);
    else
      v73 = 0;
    swift_beginAccess(v73 + qword_101480ED0, &v107, 32, 0);
    swift_retain(v72);
    v74 = v98;
    CRRegister.wrappedValue.getter(v71);
    swift_endAccess(&v107);
    swift_release(v72);
    v75 = v62 + *(int *)(v96 + 48);
    sub_1004CB7BC(v63, v62, &qword_1013F8AC0);
    sub_1004CB7BC(v74, v75, &qword_1013F8AC0);
    v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
    v77 = v95;
    if (v76(v62, 1, v95) == 1)
    {
      sub_1004CB800(v74, &qword_1013F8AC0);
      sub_1004CB800(v63, &qword_1013F8AC0);
      v78 = v76(v75, 1, v77);
      v32 = (uint64_t)v87;
      if (v78 == 1)
        goto LABEL_50;
    }
    else
    {
      v79 = v91;
      sub_1004CB7BC(v62, (uint64_t)v91, &qword_1013F8AC0);
      if (v76(v75, 1, v77) != 1)
      {
        v80 = v90;
        sub_1004B84E0(v75, (uint64_t)v90, type metadata accessor for CRLMaskInfoData);
        v81 = sub_1008AD4EC(v79, v80);
        sub_1004B84A4((uint64_t)v80, type metadata accessor for CRLMaskInfoData);
        sub_1004CB800(v98, &qword_1013F8AC0);
        sub_1004CB800(v63, &qword_1013F8AC0);
        sub_1004B84A4((uint64_t)v79, type metadata accessor for CRLMaskInfoData);
        sub_1004CB800(v62, &qword_1013F8AC0);
        v62 = (uint64_t)v92;
        v32 = (uint64_t)v87;
        if ((v81 & 1) != 0)
        {
LABEL_51:
          sub_1004B84A4((uint64_t)v88, type metadata accessor for CRLImageItemCRDTData);
          v36 = &qword_1013F8AE0;
          goto LABEL_11;
        }
        goto LABEL_49;
      }
      sub_1004CB800(v98, &qword_1013F8AC0);
      sub_1004CB800(v63, &qword_1013F8AC0);
      sub_1004B84A4((uint64_t)v79, type metadata accessor for CRLMaskInfoData);
      v32 = (uint64_t)v87;
    }
    sub_1004CB800(v62, &qword_1013F8AD0);
    v62 = (uint64_t)v92;
LABEL_49:
    CRRegister.wrappedValue.getter(v71);
    sub_1008CE0BC(v62, 0);
LABEL_50:
    sub_1004CB800(v62, &qword_1013F8AC0);
    goto LABEL_51;
  }
}

void sub_1008D1E68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[11];
  uint64_t v8;

  v4 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v4);
  v7[5] = (char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v8);
  v7[10] = (char *)v7 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __asm { BR              X10 }
}

void sub_1008D1F50()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  char isUniquelyReferenced_nonNull_native;
  _UNKNOWN ****v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t *v59;
  _UNKNOWN ****v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  uint64_t v67;

  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x7461446567616D69, 0xE900000000000061, 0);
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    *(_QWORD *)(v0 + 32) = v5;
    v7 = type metadata accessor for CRLImageItem(0);
    v8 = swift_dynamicCastClass(v4, v7);
    *(_QWORD *)(v0 + 72) = v8;
    if (v8)
    {
      v9 = *(_QWORD *)(v3 + 16);
      if (v9)
      {
        v10 = OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData;
        *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial;
        *(_QWORD *)(v0 + 64) = v10;
        *(_QWORD *)(v0 + 48) = OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData;
        v11 = (_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
        *(_QWORD *)(v0 + 16) = v4;
        swift_unknownObjectRetain(v4);
        swift_bridgeObjectRetain(v3);
        *(_QWORD *)(v0 + 24) = v3;
        v12 = (_QWORD *)(v3 + 40);
        *(_OWORD *)v0 = xmmword_100EF5E40;
        while (1)
        {
          v14 = *(v12 - 1);
          v13 = *v12;
          v15 = v14 == 0x656B6F727473 && v13 == 0xE600000000000000;
          if (v15
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656B6F727473, 0xE600000000000000, *(v12 - 1), *v12, 0) & 1) != 0)
          {
            break;
          }
          v22 = v14 == 0x737465737361 && v13 == 0xE600000000000000;
          if (v22
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0x737465737361, 0xE600000000000000, v14, v13, 0) & 1) != 0)
          {
            v23 = *(_QWORD *)(v0 + 64);
            v24 = *(void **)(v2 + v23);
            *(_QWORD *)(v2 + v23) = 0;

            *(_BYTE *)(v2 + *(_QWORD *)(v0 + 56)) = 2;
            v25 = *(_QWORD *)(v0 + 48);
            v26 = *(void **)(v2 + v25);
            *(_QWORD *)(v2 + v25) = 0;

            *(_QWORD *)(v0 + 184) = &type metadata for Bool;
            *(_BYTE *)(v0 + 160) = 1;
            swift_beginAccess(v11, v0 + 136, 33, 0);
            sub_1004CB7BC(v0 + 160, v0 + 104, &qword_1013E0230);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
            *(_QWORD *)(v0 + 96) = *v11;
            *v11 = 0x8000000000000000;
            sub_1008258FC(v0 + 104, 18, isUniquelyReferenced_nonNull_native);
            *v11 = *(_QWORD *)(v0 + 96);
            swift_bridgeObjectRelease();
            swift_endAccess(v0 + 136);
            sub_1004CB800(v0 + 160, &qword_1013E0230);
            v28 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            if (*v28 == &off_1014086A0)
              v29 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            else
              v29 = 0;
            swift_beginAccess(v29 + qword_101480ED0, v0 + 160, 32, 0);
            swift_retain(v28);
            v30 = sub_1004B804C(&qword_1013EBA40);
            v31 = *(_QWORD *)(v0 + 80);
            CRRegister.wrappedValue.getter(v30);
            swift_endAccess(v0 + 160);
            swift_release(v28);
            v32 = *(unsigned __int8 *)(v31 + *(int *)(*(_QWORD *)(v0 + 88) + 28));
            sub_1004B84A4(v31, type metadata accessor for CRLImageItemAssetData);
            if (v32 == 2)
            {
              *(_OWORD *)(v0 + 160) = 0u;
              *(_OWORD *)(v0 + 176) = 0u;
            }
            else
            {
              *(_QWORD *)(v0 + 184) = &type metadata for Bool;
              *(_BYTE *)(v0 + 160) = v32 & 1;
            }
            swift_beginAccess(v11, v0 + 136, 33, 0);
            sub_1004CB7BC(v0 + 160, v0 + 104, &qword_1013E0230);
            v57 = swift_isUniquelyReferenced_nonNull_native(*v11);
            *(_QWORD *)(v0 + 96) = *v11;
            *v11 = 0x8000000000000000;
            sub_1008258FC(v0 + 104, 39, v57);
            *v11 = *(_QWORD *)(v0 + 96);
LABEL_40:
            swift_bridgeObjectRelease();
            swift_endAccess(v0 + 136);
            v58 = v0 + 160;
            v59 = &qword_1013E0230;
            goto LABEL_41;
          }
          if ((v14 != 1802723693 || v13 != 0xE400000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(1802723693, 0xE400000000000000, v14, v13, 0) & 1) == 0)
          {
            v64 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v64, v0 + 200);
            *(_OWORD *)(inited + 16) = *(_OWORD *)v0;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v14;
            *(_QWORD *)(inited + 40) = v13;
            swift_bridgeObjectRetain(v13);
            swift_setDeallocating(inited);
            v66 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, 1, v66);
            goto LABEL_42;
          }
          v60 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          if (*v60 == &off_1014086A0)
            v61 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          else
            v61 = 0;
          swift_beginAccess(v61 + qword_101480ED0, v0 + 160, 32, 0);
          type metadata accessor for CRLImageItemCRDTData(0);
          swift_retain(v60);
          v62 = sub_1004B804C(&qword_1013F8AC8);
          v63 = *(_QWORD *)(v0 + 40);
          CRRegister.wrappedValue.getter(v62);
          swift_endAccess(v0 + 160);
          swift_release(v60);
          sub_1008CE0BC(v63, *(_QWORD *)(v0 + 32));
          v58 = v63;
          v59 = &qword_1013F8AC0;
LABEL_41:
          sub_1004CB800(v58, v59);
LABEL_42:
          v12 += 2;
          if (!--v9)
          {
            swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
            swift_bridgeObjectRelease();
            return;
          }
        }
        v16 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
        v17 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
        if (v17)
        {
          v18 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
        }
        else
        {
          v19 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v20 = *v19;
          v21 = swift_conformsToProtocol2(*v19, &protocol descriptor for CRLStyleableData);
          if (!v21)
            goto LABEL_56;
          *(_QWORD *)(v0 + 160) = v19;
          (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
          sub_1004C4938(v0 + 272, v0 + 504, (uint64_t *)&unk_1013F1530);
          if (sub_1004F276C(v0 + 504) == 1)
          {
            *(_OWORD *)(v0 + 160) = 0u;
            *(_OWORD *)(v0 + 176) = 0u;
LABEL_27:
            swift_beginAccess(v11, v0 + 136, 33, 0);
            sub_1004CB7BC(v0 + 160, v0 + 104, &qword_1013E0230);
            v43 = swift_isUniquelyReferenced_nonNull_native(*v11);
            v44 = *v11;
            *(_QWORD *)(v0 + 96) = *v11;
            *v11 = 0x8000000000000000;
            v46 = sub_100843260(15);
            v47 = *(_QWORD *)(v44 + 16);
            v48 = (v45 & 1) == 0;
            v49 = v47 + v48;
            if (__OFADD__(v47, v48))
            {
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              type metadata accessor for CRLChangeProperty(0);
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v67);
              __break(1u);
              JUMPOUT(0x1008D282CLL);
            }
            v50 = v45;
            if (*(_QWORD *)(v44 + 24) >= v49)
            {
              if ((v43 & 1) == 0)
                sub_10082C8D0();
            }
            else
            {
              sub_100814B68(v49, v43);
              v51 = sub_100843260(15);
              if ((v50 & 1) != (v52 & 1))
                goto LABEL_57;
              v46 = v51;
            }
            v53 = *(_QWORD **)(v0 + 96);
            if ((v50 & 1) != 0)
            {
              sub_100582338(v0 + 104, v53[7] + 32 * v46, &qword_1013E0230);
            }
            else
            {
              v53[(v46 >> 6) + 8] |= 1 << v46;
              *(_QWORD *)(v53[6] + 8 * v46) = 15;
              sub_1004C4938(v0 + 104, v53[7] + 32 * v46, &qword_1013E0230);
              v54 = v53[2];
              v55 = __OFADD__(v54, 1);
              v56 = v54 + 1;
              if (v55)
                goto LABEL_55;
              v53[2] = v56;
            }
            *v11 = v53;
            goto LABEL_40;
          }
          v33 = *(_OWORD *)(v0 + 712);
          *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 696);
          *(_OWORD *)(v0 + 944) = v33;
          *(_QWORD *)(v0 + 960) = *(_QWORD *)(v0 + 728);
          v34 = *(_OWORD *)(v0 + 648);
          *(_OWORD *)(v0 + 864) = *(_OWORD *)(v0 + 632);
          *(_OWORD *)(v0 + 880) = v34;
          v35 = *(_OWORD *)(v0 + 680);
          *(_OWORD *)(v0 + 896) = *(_OWORD *)(v0 + 664);
          *(_OWORD *)(v0 + 912) = v35;
          v36 = *(_OWORD *)(v0 + 584);
          *(_OWORD *)(v0 + 800) = *(_OWORD *)(v0 + 568);
          *(_OWORD *)(v0 + 816) = v36;
          v37 = *(_OWORD *)(v0 + 616);
          *(_OWORD *)(v0 + 832) = *(_OWORD *)(v0 + 600);
          *(_OWORD *)(v0 + 848) = v37;
          v38 = *(_OWORD *)(v0 + 520);
          *(_OWORD *)(v0 + 736) = *(_OWORD *)(v0 + 504);
          *(_OWORD *)(v0 + 752) = v38;
          v39 = *(_OWORD *)(v0 + 552);
          *(_OWORD *)(v0 + 768) = *(_OWORD *)(v0 + 536);
          *(_OWORD *)(v0 + 784) = v39;
          v40 = sub_1008BEA4C(v0 + 736, 0);
          sub_1008D3994((_QWORD *)(v0 + 272), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
          v41 = *(void **)(v2 + v16);
          *(_QWORD *)(v2 + v16) = v40;
          v18 = v40;

          v17 = 0;
        }
        *(_QWORD *)(v0 + 184) = sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
        *(_QWORD *)(v0 + 160) = v18;
        v42 = v17;
        goto LABEL_27;
      }
    }
  }
  else
  {
    swift_getObjectType(v4);
    sub_10077C7C0(v5, v3, v1, v4, v2);
  }
}

void sub_1008D2854()
{
  uint64_t v0;

}

id sub_1008D2890()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1008D290C()
{
  return type metadata accessor for CRLImageItem(0);
}

uint64_t type metadata accessor for CRLImageItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F8AB0;
  if (!qword_1013F8AB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLImageItem);
  return result;
}

uint64_t sub_1008D2950(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = &unk_100F15760;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 1248);
}

uint64_t sub_1008D29A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _UNKNOWN ****v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_UNKNOWN *****)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 == &off_1014086A0)
    v7 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v7 = 0;
  swift_beginAccess(v7 + qword_101480ED0, v12, 32, 0);
  swift_retain(v6);
  v8 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v8);
  swift_endAccess(v12);
  swift_release(v6);
  sub_1004B8460((uint64_t)v5, a1, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLImageItemAssetData);
  v9 = type metadata accessor for CRLAssetData(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
}

void sub_1008D2AD0(void *a1, void *a2, uint64_t a3, id a4, void *a5, uint64_t a6)
{
  id v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  double width;
  double height;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGPoint v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  CGFloat v60;
  CGPoint v61;
  CGAffineTransform v62;
  CGSize v63;
  CGPoint v64;
  CGPoint v65;
  CGSize v66;

  if (a5)
  {
    v12 = a5;
  }
  else
  {
    objc_msgSend(a4, "size");
    v12 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:", 0.0, 0.0, v13, v14);
  }
  v15 = a5;
  objc_msgSend(v12, "transformedBounds");
  v17 = v16;
  v19 = v18;
  v20 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v21 = objc_msgSend(v20, "providerForAsset:shouldValidate:", a3, 1);

  objc_msgSend(v21, "naturalSize");
  width = v63.width;
  height = v63.height;
  v66.width = 0.0;
  v66.height = 0.0;
  if (!CGSizeEqualToSize(v63, v66))
  {
    v17 = sub_100062E78(1, width, height, v17, v19);
    v19 = v24;
  }
  v25 = fmax(v17, 1.0);
  v26 = fmax(v19, 1.0);
  objc_msgSend(a1, "setSize:", v25, v26);
  objc_msgSend(v12, "center");
  v28 = v27;
  v30 = v29;
  objc_msgSend(a4, "transform");
  v64.x = v28;
  v64.y = v30;
  v31 = CGPointApplyAffineTransform(v64, &v62);
  objc_msgSend(a1, "setCenter:", v31.x, v31.y);
  objc_msgSend(a1, "size");
  v32 = sub_10005FDDC();
  objc_msgSend(a2, "setCenter:", sub_100061400(v32, v33, v34, v35));
  v36 = (void *)objc_opt_self(CRLImageFaceAnalyzer);
  objc_msgSend(a2, "transformedBounds");
  v38 = v37;
  v40 = v39;
  objc_msgSend(a2, "center");
  objc_msgSend(v36, "maskCenterForFacesInImageData:imageSize:maskSize:defaultCenter:assetOwner:", a3, a6, v25, v26, v38, v40, v41, v42);
  v44 = v43;
  v46 = v45;
  objc_msgSend(a2, "center");
  if (!sub_10005FE60(v47, v48, v44, v46))
  {
    objc_msgSend(a2, "setCenter:", v44, v46);
    v49 = sub_10005FDDC();
    v53 = sub_100061400(v49, v50, v51, v52);
    v55 = sub_1000603B8(v53, v54, v44);
    objc_msgSend(v12, "center");
    v58 = sub_1000603D0(v56, v57, v55);
    v60 = v59;
    objc_msgSend(a4, "transform");
    v65.x = v58;
    v65.y = v60;
    v61 = CGPointApplyAffineTransform(v65, &v62);
    objc_msgSend(a1, "setCenter:", v61.x, v61.y);
  }
  if (!objc_msgSend(a1, "heightValid") || !objc_msgSend(a1, "widthValid"))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"adjustIncoming(newImageGeometry:newMaskGeometry:newImageData:targetImageGeometry:targetMaskGeometry:assetOwner:)", 112, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 512, "returning an image geometry with invalid height/width.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"adjustIncoming(newImageGeometry:newMaskGeometry:newImageData:targetImageGeometry:targetMaskGeometry:assetOwner:)", 112, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2u, 512, (uint64_t)"returning an image geometry with invalid height/width.", 54, 2u);
  }

}

uint64_t sub_1008D2EB8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _UNKNOWN ****v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unsigned __int8 *v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  _BYTE *v29;
  id v30;
  void *v31;
  _BYTE v33[12];
  unsigned int v34;
  id v35;
  _BYTE v36[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v2);
  v4 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for CRLMaskInfoData(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v33[-v10];
  v12 = OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo])
  {
    v13 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v13 == &off_1014086A0)
      v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v14 = 0;
    swift_beginAccess(v14 + qword_101480ED0, v36, 32, 0);
    type metadata accessor for CRLImageItemCRDTData(0);
    swift_retain(v13);
    v15 = sub_1004B804C(&qword_1013F8AC8);
    CRRegister.wrappedValue.getter(v15);
    swift_endAccess(v36);
    v16 = swift_release(v13);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v16) == 1)
    {
      sub_1004CB800((uint64_t)v4, &qword_1013F8AC0);
    }
    else
    {
      sub_1004B84E0((uint64_t)v4, (uint64_t)v11, type metadata accessor for CRLMaskInfoData);
      sub_1004B8460((uint64_t)v11, (uint64_t)v9, type metadata accessor for CRLMaskInfoData);
      v35 = objc_allocWithZone((Class)CRLMaskInfo);
      v17 = &v9[*(int *)(v5 + 20)];
      v18 = *(float *)v17;
      v19 = *((float *)v17 + 1);
      v20 = *((float *)v17 + 2);
      v21 = *((float *)v17 + 3);
      v22 = *((float *)v17 + 4);
      v23 = v17[20];
      v24 = v17[21];
      v34 = v17[22];
      v25 = v17[23];
      v26 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
      v27 = v0;
      v28 = objc_msgSend(v26, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v23, v24, v34, v25, v18, v19, v20, v21, v22);
      v29 = sub_1009352D4(v9);
      v30 = objc_msgSend(v35, "initWithImageItem:geometry:pathSource:", v27, v28, v29);

      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMaskInfoData);
      v31 = *(void **)&v1[v12];
      *(_QWORD *)&v1[v12] = v30;

      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLMaskInfoData);
    }
  }
  return *(_QWORD *)&v1[v12];
}

id sub_1008D3194(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  CGImage *v7;
  CGImage *v8;
  id v9;
  double Width;
  double Height;
  double v12;
  double v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGFloat x;
  CGFloat y;
  CGFloat v26;
  CGFloat MinY;
  CGFloat v29;
  CGFloat v30;
  CGAffineTransform v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  v2 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v3 = objc_msgSend(v2, "providerForAsset:shouldValidate:", a1, 1);

  v4 = objc_opt_self(CRLBitmapImageProvider);
  v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
  if (v5)
  {
    v6 = v5;
    v7 = (CGImage *)objc_msgSend(v5, "CGImageOfLargestSafeSize");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "tracedPathForImage:alphaThreshold:pointSpacing:", v7, 0.5, 2.0);
      if (v9)
      {
        Width = (double)(uint64_t)CGImageGetWidth(v8);
        Height = (double)(uint64_t)CGImageGetHeight(v8);
        objc_msgSend(v6, "naturalSize");
        if (v12 != Width || v13 != Height)
        {
          CGAffineTransformMakeScale(&v31, v12 / Width, v13 / Height);
          v15 = *(_OWORD *)&v31.a;
          v16 = *(_OWORD *)&v31.c;
          v17 = *(_OWORD *)&v31.tx;
LABEL_12:
          *(_OWORD *)&v31.a = v15;
          *(_OWORD *)&v31.c = v16;
          *(_OWORD *)&v31.tx = v17;
          objc_msgSend(v9, "transformUsingAffineTransform:", &v31);
          goto LABEL_13;
        }
        sub_1003F6270((CGAffineTransform *)objc_msgSend(v6, "orientation"), 0, (uint64_t)&v31, 0.0, 0.0, 1.0, 1.0);
        a = v31.a;
        b = v31.b;
        c = v31.c;
        d = v31.d;
        tx = v31.tx;
        ty = v31.ty;
        if (!CGAffineTransformIsIdentity(&v31))
        {
          v32.origin.x = sub_10005FDDC();
          v31.a = a;
          v31.b = b;
          v31.c = c;
          v31.d = d;
          v31.tx = tx;
          v31.ty = ty;
          v33 = CGRectApplyAffineTransform(v32, &v31);
          x = v33.origin.x;
          y = v33.origin.y;
          v29 = v33.size.height;
          v30 = v33.size.width;
          v31.a = a;
          v31.b = b;
          v31.c = c;
          v31.d = d;
          v31.tx = tx;
          v31.ty = ty;
          objc_msgSend(v9, "transformUsingAffineTransform:", &v31);
          v34.origin.x = x;
          v34.origin.y = y;
          v34.size.width = v30;
          v34.size.height = v29;
          v26 = -CGRectGetMinX(v34);
          v35.origin.x = x;
          v35.origin.y = y;
          v35.size.width = v30;
          v35.size.height = v29;
          MinY = CGRectGetMinY(v35);
          CGAffineTransformMakeTranslation(&v31, v26, -MinY);
          v15 = *(_OWORD *)&v31.a;
          v16 = *(_OWORD *)&v31.c;
          v17 = *(_OWORD *)&v31.tx;
          goto LABEL_12;
        }
      }
LABEL_13:

      return v9;
    }
  }

  return 0;
}

void sub_1008D3420(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  char v16;
  _UNKNOWN ****v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  id v22;
  id v23;
  double v24;
  float v25;
  double v26;
  float v27;
  double v28;
  float v29;
  double v30;
  float v31;
  double v32;
  float v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  _UNKNOWN ****v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  _QWORD *Strong;
  void *v47;
  char v48;
  void *v49;
  CKRecordID v50;
  Swift::String v51;
  char *v52;
  uint64_t v53;
  id v54;
  _BYTE v55[24];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = &unk_1013F1000;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v14 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v15 = v14, v16 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x2F0))(), v15, (v16 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v50, v51);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v17 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v17 == &off_1014086A0)
        v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v18 = 0;
      v53 = v18;
      v19 = type metadata accessor for CRLMaskInfoData(0);
      *(_QWORD *)&v12[*(int *)(v19 + 24)] = _swiftEmptyDictionarySingleton;
      v20 = a1;
      *(_QWORD *)&v21 = swift_retain(v17).n128_u64[0];
      v54 = v20;
      sub_10092BFC8(objc_msgSend(v20, "pathSource", v21), (uint64_t)v12);
      v22 = objc_msgSend(v20, "geometry");
      v52 = v6;
      v23 = v22;
      objc_msgSend(v22, "position");
      v25 = v24;
      v27 = v26;
      objc_msgSend(v23, "size");
      v29 = v28;
      v31 = v30;
      objc_msgSend(v23, "angle");
      v33 = v32;
      v34 = objc_msgSend(v23, "widthValid");
      v35 = objc_msgSend(v23, "heightValid");
      v36 = objc_msgSend(v23, "horizontalFlip");
      LOBYTE(v20) = objc_msgSend(v23, "verticalFlip");

      v37 = &v12[*(int *)(v19 + 20)];
      *(float *)v37 = v25;
      *((float *)v37 + 1) = v27;
      *((float *)v37 + 2) = v29;
      *((float *)v37 + 3) = v31;
      *((float *)v37 + 4) = v33;
      v37[20] = v34;
      v37[21] = v35;
      v37[22] = v36;
      v37[23] = (char)v20;
      *((_QWORD *)v37 + 3) = _swiftEmptyDictionarySingleton;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
      sub_1004CB7BC((uint64_t)v12, (uint64_t)v9, &qword_1013F8AC0);
      swift_beginAccess(v53 + qword_101480ED0, v55, 33, 0);
      v38 = (uint64_t)v52;
      sub_1004CB7BC((uint64_t)v9, (uint64_t)v52, &qword_1013F8AC0);
      type metadata accessor for CRLImageItemCRDTData(0);
      v39 = sub_1004B804C(&qword_1013F8AC8);
      CRRegister.wrappedValue.setter(v38, v39, v40);
      sub_1004CB800((uint64_t)v9, &qword_1013F8AC0);
      swift_endAccess(v55);
      v13 = (_QWORD *)&unk_1013F1000;
      sub_1004CB800((uint64_t)v12, &qword_1013F8AC0);
      swift_release(v17);

    }
    else
    {
      v41 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v41 == &off_1014086A0)
        v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v42 = 0;
      v43 = type metadata accessor for CRLMaskInfoData(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v12, 1, 1, v43);
      sub_1004CB7BC((uint64_t)v12, (uint64_t)v9, &qword_1013F8AC0);
      swift_beginAccess(v42 + qword_101480ED0, v55, 33, 0);
      sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, &qword_1013F8AC0);
      type metadata accessor for CRLImageItemCRDTData(0);
      swift_retain(v41);
      v44 = sub_1004B804C(&qword_1013F8AC8);
      CRRegister.wrappedValue.setter(v6, v44, v45);
      sub_1004CB800((uint64_t)v9, &qword_1013F8AC0);
      swift_endAccess(v55);
      sub_1004CB800((uint64_t)v12, &qword_1013F8AC0);
      swift_release(v41);
    }
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + v13[49]);
    if (!Strong
      || (v47 = Strong,
          v48 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v47,
          (v48 & 1) == 0))
    {
      v49 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo) = 0;

    }
  }
}

_QWORD *sub_1008D3994(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28]);
  return a1;
}

uint64_t sub_1008D3A08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CRLImageItemCRDTData(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008D3A48()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_1008D3B14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[14])
  {
    swift_bridgeObjectRelease(v0[8]);
    swift_bridgeObjectRelease(v0[11]);
    swift_bridgeObjectRelease(v0[13]);
    swift_bridgeObjectRelease(v0[14]);
    v1 = v0[20];
    if (v1)
    {
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(v0[22]);
    }
    swift_bridgeObjectRelease(v0[25]);
    v2 = v0[27];
    if (v2)
    {
      swift_bridgeObjectRelease(v2);
      swift_bridgeObjectRelease(v0[29]);
    }
    swift_bridgeObjectRelease(v0[30]);
  }
  if (v0[41])
  {
    swift_bridgeObjectRelease(v0[35]);
    swift_bridgeObjectRelease(v0[38]);
    swift_bridgeObjectRelease(v0[40]);
    swift_bridgeObjectRelease(v0[41]);
    swift_bridgeObjectRelease(v0[45]);
    swift_bridgeObjectRelease(v0[46]);
  }
  swift_bridgeObjectRelease(v0[48]);
  swift_bridgeObjectRelease(v0[49]);
  return swift_deallocObject(v0, 400, 7);
}

uint64_t sub_1008D3BD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008D3BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008D3C0C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008D3C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1008D3C74(void (*a1)(char *, _QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1005533F4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1008D3CC0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1008D3CE4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  sub_1008CAB84(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1008D3CF4(uint64_t a1)
{
  sub_1008D3D58(a1, (void **)&kCAMediaTimingFunctionDefault, &qword_10147FD68);
}

void sub_1008D3D08()
{
  qword_10147FD70 = 0x4024000000000000;
}

void sub_1008D3D18()
{
  qword_10147FD78 = 0;
}

void sub_1008D3D24()
{
  qword_10147FD80 = 0x3FF0000000000000;
}

void sub_1008D3D34()
{
  qword_10147FD88 = 0x4059000000000000;
}

void sub_1008D3D44(uint64_t a1)
{
  sub_1008D3D58(a1, (void **)&kCAMediaTimingFunctionLinear, &qword_10147FD90);
}

void sub_1008D3D58(uint64_t a1, void **a2, _QWORD *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *a2;
  v5 = (void *)objc_opt_self(CAMediaTimingFunction);
  v6 = v4;
  v7 = objc_msgSend(v5, "functionWithName:", v6);

  *a3 = v7;
}

void sub_1008D3DC0()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  double m11;
  double m12;
  double m13;
  double m14;
  id v20;
  id v21;
  void *v22;
  double v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  id v32;
  id v33;
  void *v34;
  double v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  id v44;
  id v45;
  void *v46;
  double v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  CGAffineTransform m;
  CATransform3D v62;

  v1 = v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor);
  if (Strong)
  {

    v3 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v5, "removeFromSuperview");
      v6 = *(void **)(v0 + v3);
      *(_QWORD *)(v0 + v3) = 0;

    }
    v7 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView;
    v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v9, "removeFromSuperview");
      v10 = *(void **)(v0 + v7);
      *(_QWORD *)(v0 + v7) = 0;

    }
    v11 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView;
    v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v13, "removeFromSuperview");
      v14 = *(void **)(v0 + v11);
      *(_QWORD *)(v0 + v11) = 0;

    }
    if (qword_1013DCB58 != -1)
      swift_once(&qword_1013DCB58, sub_1006185A4);
    v15 = (id)qword_10147ECB0;
    sub_1007051A0(v0, (uint64_t)&v62);

    m11 = v62.m11;
    m12 = v62.m12;
    m13 = v62.m13;
    m14 = v62.m14;
    v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v62.m11, v62.m12, v62.m13, v62.m14);
    v21 = objc_msgSend(v20, "layer");
    v22 = (void *)swift_unknownObjectWeakLoadStrong(v1);

    if (v22)
    {
      v23 = sub_1008D44B8();
      CGAffineTransformMakeRotation((CGAffineTransform *)&v62, v23);
      *(_OWORD *)&m.a = *(_OWORD *)&v62.m11;
      *(_OWORD *)&m.c = *(_OWORD *)&v62.m13;
      *(_OWORD *)&m.tx = *(_OWORD *)&v62.m21;
      CATransform3DMakeAffineTransform(&v62, &m);
      v24 = *(_OWORD *)&v62.m11;
      v25 = *(_OWORD *)&v62.m13;
      v26 = *(_OWORD *)&v62.m21;
      v27 = *(_OWORD *)&v62.m23;
      v28 = *(_OWORD *)&v62.m31;
      v29 = *(_OWORD *)&v62.m33;
      v30 = *(_OWORD *)&v62.m41;
      v31 = *(_OWORD *)&v62.m43;
    }
    else
    {
      v24 = *(_OWORD *)&CATransform3DIdentity.m11;
      v25 = *(_OWORD *)&CATransform3DIdentity.m13;
      v26 = *(_OWORD *)&CATransform3DIdentity.m21;
      v27 = *(_OWORD *)&CATransform3DIdentity.m23;
      v28 = *(_OWORD *)&CATransform3DIdentity.m31;
      v29 = *(_OWORD *)&CATransform3DIdentity.m33;
      v30 = *(_OWORD *)&CATransform3DIdentity.m41;
      v31 = *(_OWORD *)&CATransform3DIdentity.m43;
    }
    *(_OWORD *)&v62.m11 = v24;
    *(_OWORD *)&v62.m13 = v25;
    *(_OWORD *)&v62.m21 = v26;
    *(_OWORD *)&v62.m23 = v27;
    *(_OWORD *)&v62.m31 = v28;
    *(_OWORD *)&v62.m33 = v29;
    *(_OWORD *)&v62.m41 = v30;
    *(_OWORD *)&v62.m43 = v31;
    objc_msgSend(v21, "setTransform:", &v62);

    objc_msgSend(v20, "setUserInteractionEnabled:", 0);
    v32 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", m11, m12, m13, m14);
    v33 = objc_msgSend(v32, "layer");
    v34 = (void *)swift_unknownObjectWeakLoadStrong(v1);

    if (v34)
    {
      v35 = sub_1008D44B8();
      CGAffineTransformMakeRotation((CGAffineTransform *)&v62, v35);
      *(_OWORD *)&m.a = *(_OWORD *)&v62.m11;
      *(_OWORD *)&m.c = *(_OWORD *)&v62.m13;
      *(_OWORD *)&m.tx = *(_OWORD *)&v62.m21;
      CATransform3DMakeAffineTransform(&v62, &m);
      v36 = *(_OWORD *)&v62.m11;
      v37 = *(_OWORD *)&v62.m13;
      v38 = *(_OWORD *)&v62.m21;
      v39 = *(_OWORD *)&v62.m23;
      v40 = *(_OWORD *)&v62.m31;
      v41 = *(_OWORD *)&v62.m33;
      v42 = *(_OWORD *)&v62.m41;
      v43 = *(_OWORD *)&v62.m43;
    }
    else
    {
      v36 = *(_OWORD *)&CATransform3DIdentity.m11;
      v37 = *(_OWORD *)&CATransform3DIdentity.m13;
      v38 = *(_OWORD *)&CATransform3DIdentity.m21;
      v39 = *(_OWORD *)&CATransform3DIdentity.m23;
      v40 = *(_OWORD *)&CATransform3DIdentity.m31;
      v41 = *(_OWORD *)&CATransform3DIdentity.m33;
      v42 = *(_OWORD *)&CATransform3DIdentity.m41;
      v43 = *(_OWORD *)&CATransform3DIdentity.m43;
    }
    *(_OWORD *)&v62.m11 = v36;
    *(_OWORD *)&v62.m13 = v37;
    *(_OWORD *)&v62.m21 = v38;
    *(_OWORD *)&v62.m23 = v39;
    *(_OWORD *)&v62.m31 = v40;
    *(_OWORD *)&v62.m33 = v41;
    *(_OWORD *)&v62.m41 = v42;
    *(_OWORD *)&v62.m43 = v43;
    objc_msgSend(v33, "setTransform:", &v62);

    objc_msgSend(v32, "setUserInteractionEnabled:", 0);
    v44 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", m11, m12, m13, m14);
    v45 = objc_msgSend(v44, "layer");
    v46 = (void *)swift_unknownObjectWeakLoadStrong(v1);

    if (v46)
    {
      v47 = sub_1008D44B8();
      CGAffineTransformMakeRotation((CGAffineTransform *)&v62, v47);
      *(_OWORD *)&m.a = *(_OWORD *)&v62.m11;
      *(_OWORD *)&m.c = *(_OWORD *)&v62.m13;
      *(_OWORD *)&m.tx = *(_OWORD *)&v62.m21;
      CATransform3DMakeAffineTransform(&v62, &m);
      v48 = *(_OWORD *)&v62.m11;
      v49 = *(_OWORD *)&v62.m13;
      v50 = *(_OWORD *)&v62.m21;
      v51 = *(_OWORD *)&v62.m23;
      v52 = *(_OWORD *)&v62.m31;
      v53 = *(_OWORD *)&v62.m33;
      v54 = *(_OWORD *)&v62.m41;
      v55 = *(_OWORD *)&v62.m43;
    }
    else
    {
      v48 = *(_OWORD *)&CATransform3DIdentity.m11;
      v49 = *(_OWORD *)&CATransform3DIdentity.m13;
      v50 = *(_OWORD *)&CATransform3DIdentity.m21;
      v51 = *(_OWORD *)&CATransform3DIdentity.m23;
      v52 = *(_OWORD *)&CATransform3DIdentity.m31;
      v53 = *(_OWORD *)&CATransform3DIdentity.m33;
      v54 = *(_OWORD *)&CATransform3DIdentity.m41;
      v55 = *(_OWORD *)&CATransform3DIdentity.m43;
    }
    *(_OWORD *)&v62.m11 = v48;
    *(_OWORD *)&v62.m13 = v49;
    *(_OWORD *)&v62.m21 = v50;
    *(_OWORD *)&v62.m23 = v51;
    *(_OWORD *)&v62.m31 = v52;
    *(_OWORD *)&v62.m33 = v53;
    *(_OWORD *)&v62.m41 = v54;
    *(_OWORD *)&v62.m43 = v55;
    objc_msgSend(v45, "setTransform:", &v62);

    objc_msgSend(v44, "setUserInteractionEnabled:", 0);
    v56 = *(void **)(v0 + v11);
    *(_QWORD *)(v0 + v11) = v20;
    v57 = v20;

    v58 = *(void **)(v0 + v3);
    *(_QWORD *)(v0 + v3) = v32;
    v59 = v32;

    v60 = *(void **)(v0 + v7);
    *(_QWORD *)(v0 + v7) = v44;

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setupDecoratorViews()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2, 25, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupDecoratorViews()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2u, 25, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_1008D4294()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "textInputResponder"));
  if (v1)
  {
    v2 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
    if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction))
    {
      v6 = v1;
      v3 = objc_msgSend(objc_allocWithZone((Class)UITextSelectionDisplayInteraction), "initWithTextInput:delegate:", v6, v6);
      v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
      if (v4)
        objc_msgSend(v4, "addInteraction:", v3);
      objc_msgSend(v3, "setActivated:", 1);
      objc_msgSend(v3, "layoutManagedSubviews");
      v5 = *(id *)(v0 + v2);
      *(_QWORD *)(v0 + v2) = v3;

      v1 = v5;
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"addSelectionManager()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2, 76, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSelectionManager()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2u, 76, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_1008D4424()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
    if (v3)
    {
      objc_msgSend(v3, "removeInteraction:", v2);
      v4 = *(id *)(v0 + v1);
    }
    else
    {
      v4 = v2;
    }
    v5 = v4;
    *(_QWORD *)(v0 + v1) = 0;

  }
}

double sub_1008D44B8()
{
  uint64_t v0;
  uint64_t Strong;
  double v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  __int128 v10;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor);
  v2 = 0.0;
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
    if (v4
      && (v5 = v4,
          v6 = objc_msgSend(v4, "layoutForInfo:", *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]), v5, v6))
    {
      v7 = objc_opt_self(CRLWPShapeLayout);
      v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
      if (v8)
      {
        objc_msgSend(v8, "transformInRoot");
        v2 = sub_1000791EC((double *)&v10);
      }

    }
    else
    {

    }
  }
  return v2;
}

void sub_1008D45B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  unsigned int v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  double m13;
  double m14;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  double v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  id v45;
  void *v46;
  double v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  void *v56;
  id v57;
  void *v58;
  double v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  CGAffineTransform m;
  CATransform3D v77;

  v1 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView))
  {
    v2 = v0;
    v3 = v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor;
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor);
    if (Strong)
    {
      v5 = (char *)Strong;
      v6 = swift_unknownObjectWeakLoadStrong(v3);
      if (v6)
      {
        v7 = (void *)v6;
        sub_100736D9C();
        if (!v8)
        {
LABEL_12:

          goto LABEL_13;
        }
        v9 = objc_msgSend(v8, "selectedTextRange");

        if (v9)
        {
          if (objc_msgSend(v9, "isEmpty"))
          {
            v10 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
            v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
            if (v11)
            {
              v12 = objc_msgSend(v11, "cursorView");
              v13 = objc_msgSend(v12, "isBlinking");

              v14 = *(void **)(v2 + v10);
              if (v13)
              {
                if (v14)
                {
                  v15 = objc_msgSend(v14, "cursorView");
                  objc_msgSend(v15, "resetBlinkAnimation");

                  v9 = v15;
                }
              }
              else if (v14)
              {
                v74 = objc_msgSend(v14, "cursorView");
                objc_msgSend(v74, "setBlinking:", 1);

              }
            }
            goto LABEL_15;
          }
          v7 = v9;
          goto LABEL_12;
        }
      }
LABEL_13:
      v16 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
      if (!v16)
        goto LABEL_16;
      v9 = objc_msgSend(v16, "cursorView");
      objc_msgSend(v9, "setBlinking:", 0);
LABEL_15:

LABEL_16:
      v17 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v17, "begin");
      v75 = v17;
      objc_msgSend(v17, "setDisableActions:", 1);
      if (qword_1013DCB58 != -1)
        swift_once(&qword_1013DCB58, sub_1006185A4);
      v18 = (id)qword_10147ECB0;
      sub_1007051A0(v2, (uint64_t)&v77);

      m13 = v77.m13;
      m14 = v77.m14;
      v21 = *(void **)(v2 + v1);
      if (v21)
      {
        v22 = (void *)qword_10147ECB0;
        v23 = v21;
        v24 = v22;
        sub_1007051A0(v2, (uint64_t)&v77);

        objc_msgSend(v23, "setFrame:", v77.m11, v77.m12, v77.m13, v77.m14);
        v25 = *(void **)(v2 + v1);
      }
      else
      {
        v25 = 0;
      }
      objc_msgSend(v25, "setBounds:", 0.0, 0.0, m13, m14);
      v26 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView;
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView), "setBounds:", 0.0, 0.0, m13, m14);
      v27 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView;
      v28 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView);
      if (v28)
      {
        v29 = (void *)qword_10147ECB0;
        v30 = v28;
        v31 = v29;
        sub_1007051A0(v2, (uint64_t)&v77);

        objc_msgSend(v30, "setFrame:", v77.m11, v77.m12, v77.m13, v77.m14);
      }
      v32 = *(void **)(v2 + v1);
      if (v32)
      {
        v33 = objc_msgSend(v32, "layer");
        v34 = (void *)swift_unknownObjectWeakLoadStrong(v3);

        if (v34)
        {
          v35 = sub_1008D44B8();
          CGAffineTransformMakeRotation((CGAffineTransform *)&v77, v35);
          *(_OWORD *)&m.a = *(_OWORD *)&v77.m11;
          *(_OWORD *)&m.c = *(_OWORD *)&v77.m13;
          *(_OWORD *)&m.tx = *(_OWORD *)&v77.m21;
          CATransform3DMakeAffineTransform(&v77, &m);
          v36 = *(_OWORD *)&v77.m11;
          v37 = *(_OWORD *)&v77.m13;
          v38 = *(_OWORD *)&v77.m21;
          v39 = *(_OWORD *)&v77.m23;
          v40 = *(_OWORD *)&v77.m31;
          v41 = *(_OWORD *)&v77.m33;
          v42 = *(_OWORD *)&v77.m41;
          v43 = *(_OWORD *)&v77.m43;
        }
        else
        {
          v36 = *(_OWORD *)&CATransform3DIdentity.m11;
          v37 = *(_OWORD *)&CATransform3DIdentity.m13;
          v38 = *(_OWORD *)&CATransform3DIdentity.m21;
          v39 = *(_OWORD *)&CATransform3DIdentity.m23;
          v40 = *(_OWORD *)&CATransform3DIdentity.m31;
          v41 = *(_OWORD *)&CATransform3DIdentity.m33;
          v42 = *(_OWORD *)&CATransform3DIdentity.m41;
          v43 = *(_OWORD *)&CATransform3DIdentity.m43;
        }
        *(_OWORD *)&v77.m11 = v36;
        *(_OWORD *)&v77.m13 = v37;
        *(_OWORD *)&v77.m21 = v38;
        *(_OWORD *)&v77.m23 = v39;
        *(_OWORD *)&v77.m31 = v40;
        *(_OWORD *)&v77.m33 = v41;
        *(_OWORD *)&v77.m41 = v42;
        *(_OWORD *)&v77.m43 = v43;
        objc_msgSend(v33, "setTransform:", &v77);

      }
      v44 = *(void **)(v2 + v26);
      if (v44)
      {
        v45 = objc_msgSend(v44, "layer");
        v46 = (void *)swift_unknownObjectWeakLoadStrong(v3);

        if (v46)
        {
          v47 = sub_1008D44B8();
          CGAffineTransformMakeRotation((CGAffineTransform *)&v77, v47);
          *(_OWORD *)&m.a = *(_OWORD *)&v77.m11;
          *(_OWORD *)&m.c = *(_OWORD *)&v77.m13;
          *(_OWORD *)&m.tx = *(_OWORD *)&v77.m21;
          CATransform3DMakeAffineTransform(&v77, &m);
          v48 = *(_OWORD *)&v77.m11;
          v49 = *(_OWORD *)&v77.m13;
          v50 = *(_OWORD *)&v77.m21;
          v51 = *(_OWORD *)&v77.m23;
          v52 = *(_OWORD *)&v77.m31;
          v53 = *(_OWORD *)&v77.m33;
          v54 = *(_OWORD *)&v77.m41;
          v55 = *(_OWORD *)&v77.m43;
        }
        else
        {
          v48 = *(_OWORD *)&CATransform3DIdentity.m11;
          v49 = *(_OWORD *)&CATransform3DIdentity.m13;
          v50 = *(_OWORD *)&CATransform3DIdentity.m21;
          v51 = *(_OWORD *)&CATransform3DIdentity.m23;
          v52 = *(_OWORD *)&CATransform3DIdentity.m31;
          v53 = *(_OWORD *)&CATransform3DIdentity.m33;
          v54 = *(_OWORD *)&CATransform3DIdentity.m41;
          v55 = *(_OWORD *)&CATransform3DIdentity.m43;
        }
        *(_OWORD *)&v77.m11 = v48;
        *(_OWORD *)&v77.m13 = v49;
        *(_OWORD *)&v77.m21 = v50;
        *(_OWORD *)&v77.m23 = v51;
        *(_OWORD *)&v77.m31 = v52;
        *(_OWORD *)&v77.m33 = v53;
        *(_OWORD *)&v77.m41 = v54;
        *(_OWORD *)&v77.m43 = v55;
        objc_msgSend(v45, "setTransform:", &v77);

      }
      v56 = *(void **)(v2 + v27);
      if (v56)
      {
        v57 = objc_msgSend(v56, "layer");
        v58 = (void *)swift_unknownObjectWeakLoadStrong(v3);

        if (v58)
        {
          v59 = sub_1008D44B8();
          CGAffineTransformMakeRotation((CGAffineTransform *)&v77, v59);
          *(_OWORD *)&m.a = *(_OWORD *)&v77.m11;
          *(_OWORD *)&m.c = *(_OWORD *)&v77.m13;
          *(_OWORD *)&m.tx = *(_OWORD *)&v77.m21;
          CATransform3DMakeAffineTransform(&v77, &m);
          v60 = *(_OWORD *)&v77.m11;
          v61 = *(_OWORD *)&v77.m13;
          v62 = *(_OWORD *)&v77.m21;
          v63 = *(_OWORD *)&v77.m23;
          v64 = *(_OWORD *)&v77.m31;
          v65 = *(_OWORD *)&v77.m33;
          v66 = *(_OWORD *)&v77.m41;
          v67 = *(_OWORD *)&v77.m43;
        }
        else
        {
          v60 = *(_OWORD *)&CATransform3DIdentity.m11;
          v61 = *(_OWORD *)&CATransform3DIdentity.m13;
          v62 = *(_OWORD *)&CATransform3DIdentity.m21;
          v63 = *(_OWORD *)&CATransform3DIdentity.m23;
          v64 = *(_OWORD *)&CATransform3DIdentity.m31;
          v65 = *(_OWORD *)&CATransform3DIdentity.m33;
          v66 = *(_OWORD *)&CATransform3DIdentity.m41;
          v67 = *(_OWORD *)&CATransform3DIdentity.m43;
        }
        *(_OWORD *)&v77.m11 = v60;
        *(_OWORD *)&v77.m13 = v61;
        *(_OWORD *)&v77.m21 = v62;
        *(_OWORD *)&v77.m23 = v63;
        *(_OWORD *)&v77.m31 = v64;
        *(_OWORD *)&v77.m33 = v65;
        *(_OWORD *)&v77.m41 = v66;
        *(_OWORD *)&v77.m43 = v67;
        objc_msgSend(v57, "setTransform:", &v77);

      }
      objc_msgSend(v75, "commit");
      v68 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction), "setNeedsSelectionUpdate");
      objc_msgSend(*(id *)(v2 + v68), "layoutManagedSubviews");
      v69 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController], "selectionForEditor:", v5);
      if (v69)
      {
        v70 = v69;
        v71 = objc_opt_self(CRLWPSelection);
        v72 = (void *)swift_dynamicCastObjCClass(v70, v71);
        if (v72)
        {
          if (objc_msgSend(v72, "type") == (id)3)
            goto LABEL_43;
          v73 = *(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                          + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
          if (!v73)
          {
            __break(1u);
            return;
          }
          if (*(_QWORD *)(v73 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
          {
LABEL_43:
            sub_1008D4BCC();

LABEL_46:
            return;
          }
        }

      }
      sub_1008D4BD4();
      goto LABEL_46;
    }
  }
}

void sub_1008D4BCC()
{
  sub_1008D4BDC(1);
}

void sub_1008D4BD4()
{
  sub_1008D4BDC(0);
}

void sub_1008D4BDC(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
  if (v3)
  {
    v4 = objc_msgSend(v3, "handleViews");
    v5 = sub_1004B804C(&qword_1013F8B88);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v12 = v6;
      else
        v12 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        v8 = 0;
        v9 = a1 & 1;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
            v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
          else
            v10 = *(id *)(v6 + 8 * v8 + 32);
          v11 = v10;
          ++v8;
          objc_msgSend(v10, "setHidden:", v9);

        }
        while (v7 != v8);
      }
    }
    swift_bridgeObjectRelease_n(v6, 2);
  }
}

void sub_1008D4D6C()
{
  uint64_t v0;

}

id sub_1008D4D7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionViewController_i();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSelectionViewController_i()
{
  return objc_opt_self(_TtC8Freeform28CRLSelectionViewController_i);
}

uint64_t sub_1008D4DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
    v4 = type metadata accessor for CRLURLItemCommandProvider();
    v2 = swift_allocObject(v4, 32, 7);
    v5 = swift_unknownObjectWeakInit(v2 + 16);
    *(_QWORD *)(v2 + 24) = 0;
    swift_unknownObjectWeakAssign(v5, Strong);

    v6 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v2;
    swift_retain(v2);
    swift_release(v6);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_1008D4E70()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLBoardCommandProvider()
{
  return objc_opt_self(_TtC8Freeform23CRLBoardCommandProvider);
}

unint64_t sub_1008D4EBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F9290);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_100842FAC();
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D4FC4(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F9280, &qword_1013F9288, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D4FE0(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F4FF0, &qword_1013F9180, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D4FFC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_1004CB7BC(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_10050CB14(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5124(uint64_t a1)
{
  return sub_1008D5C3C(a1, &qword_1013F9218);
}

unint64_t sub_1008D5130(uint64_t a1)
{
  return sub_1008D5C3C(a1, &qword_1013F9210);
}

unint64_t sub_1008D513C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1004B804C(&qword_1013E7570);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F4EA8);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013E7570);
    result = sub_100842EFC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_OWORD *)(v8[7] + 16 * v17) = *(_OWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D52D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18[8];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v17 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v17);
    return (unint64_t)v4;
  }
  sub_1004B804C(&qword_1013F5158);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    goto LABEL_9;
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1004CB7BC(v7, (uint64_t)v18, &qword_1013F9190);
    v8 = v18[0];
    v9 = v19;
    v10 = v20;
    result = sub_10084303C(v18[0], v19, v20);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v13 = v4[6] + 24 * result;
    *(_BYTE *)v13 = v8;
    *(_QWORD *)(v13 + 8) = v9;
    *(_QWORD *)(v13 + 16) = v10;
    result = sub_1004DB728(&v21, v4[7] + 40 * result);
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_12;
    v4[2] = v16;
    v7 += 64;
    if (!--v5)
    {
      swift_release(v4);
      v17 = a1;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D5420(uint64_t a1)
{
  return sub_1008D728C(a1, (uint64_t *)&unk_101405F40, &qword_1013F4F30);
}

unint64_t sub_1008D5434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4EF8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100842E98(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1004B804C(&qword_1013F9128);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F4FE0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F9128);
    result = sub_100842EFC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7] + 24 * v17;
    v21 = *((_QWORD *)v10 + 2);
    *(_OWORD *)v20 = *(_OWORD *)v10;
    *(_QWORD *)(v20 + 16) = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D56EC(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F4FE8, (uint64_t (*)(id))sub_100843270);
}

unint64_t sub_1008D5700(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F5020);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    v10 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100842E98(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5814(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F5178, (uint64_t (*)(id))sub_100843350);
}

unint64_t sub_1008D5828(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4F78);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1004CB7BC(v7, (uint64_t)v16, &qword_1013F9110);
    result = sub_1008432BC((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10050CB14(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5968(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1004B804C(&qword_101405DE0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F4F18);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)v5 + *(int *)(v2 + 48);
  v26 = a1;
  v27 = v10;
  v11 = v7 + 64;
  v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v12, (uint64_t)v5, &qword_101405DE0);
    v14 = *v5;
    v15 = v5[1];
    result = sub_100842E98(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v8[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v8[7];
    v21 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    result = sub_1004C4938(v27, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t *)&unk_1013E1A50);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v12 += v13;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void sub_1008D5B0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2
    && (sub_1004B804C(&qword_1013F5070),
        v3 = static _DictionaryStorage.allocate(capacity:)(v2),
        v4 = (_QWORD *)v3,
        (v5 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain(v3);
    v6 = (unint64_t *)(a1 + 48);
    while (1)
    {
      v7 = *((_BYTE *)v6 - 16);
      v8 = *(v6 - 1);
      v9 = *v6;
      sub_1004BE310(v8, *v6);
      sub_10084342C(v7);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v4 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
      *(_BYTE *)(v4[6] + v10) = v7;
      v12 = (uint64_t *)(v4[7] + 16 * v10);
      *v12 = v8;
      v12[1] = v9;
      v13 = v4[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v6 += 3;
      v4[2] = v15;
      if (!--v5)
      {
        swift_release(v4);
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(a1);
  }
}

unint64_t sub_1008D5C1C(uint64_t a1)
{
  return sub_1008D7168(a1, &qword_1013F4FA0, (uint64_t (*)(id))sub_100843538);
}

unint64_t sub_1008D5C30(uint64_t a1)
{
  return sub_1008D5C3C(a1, &qword_1013F4E98);
}

unint64_t sub_1008D5C3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_100842E98(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5D50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  char v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4F68);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *(_BYTE *)v6;
    v8 = *(v6 - 1);
    result = sub_100843668((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    *(_BYTE *)(v4[7] + result) = v7;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5E4C(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F4F98, &qword_1013F91B0, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D5E68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F2128);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1004CB7BC(v7, (uint64_t)&v16, &qword_1013F2130);
    v8 = v16;
    v9 = v17;
    result = sub_100842E98(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10050CB14(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D5F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  __int128 v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F51C8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 72);
  while (1)
  {
    v7 = *(_OWORD *)(v6 - 3);
    v18 = *(_OWORD *)(v6 - 5);
    v19 = v7;
    v8 = *v6;
    v20 = (uint64_t)*(v6 - 1);
    sub_1008E1C80((uint64_t)&v18);
    v9 = v8;
    result = sub_1008437B0((uint64_t)&v18);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = v4[6] + 40 * result;
    v13 = v18;
    v14 = v19;
    *(_QWORD *)(v12 + 32) = v20;
    *(_OWORD *)v12 = v13;
    *(_OWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4[2] = v17;
    v6 += 6;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D60CC(uint64_t a1)
{
  return sub_1008D6130(a1, &qword_1013F9238, &qword_1013F51B0, (uint64_t (*)(char *))sub_100843264, type metadata accessor for CRLBoardIdentifier);
}

unint64_t sub_1008D60F0(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F9270, &qword_1013F9278, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D610C(uint64_t a1)
{
  return sub_1008D6130(a1, &qword_1013F9240, &qword_1013F4E18, (uint64_t (*)(char *))sub_100843760, type metadata accessor for CRLBoardPreviewImageCache.Item);
}

unint64_t sub_1008D6130(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t (*v34)(char *);

  v33 = a2;
  v34 = a4;
  v8 = sub_1004B804C(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
    v14 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v14;
  }
  sub_1004B804C(a3);
  v13 = static _DictionaryStorage.allocate(capacity:)(v12);
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    goto LABEL_9;
  v16 = *(int *)(v8 + 48);
  v17 = a1;
  v18 = v13 + 64;
  v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v32 = v17;
  v20 = v17 + v19;
  v21 = *(_QWORD *)(v9 + 72);
  swift_retain(v13);
  while (1)
  {
    sub_1004CB7BC(v20, (uint64_t)v11, v33);
    result = v34(v11);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v18 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = v14[6];
    v26 = a5(0);
    result = sub_1004B84E0((uint64_t)v11, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, a5);
    *(_QWORD *)(v14[7] + 8 * v24) = *(_QWORD *)&v11[v16];
    v27 = v14[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_12;
    v14[2] = v29;
    v20 += v21;
    if (!--v15)
    {
      swift_release(v14);
      v30 = v32;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D62C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1004B804C(&qword_1013F9150);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F4E58);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F9150);
    result = sub_100843264((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for CRLBoardIdentifier(0);
    result = sub_1004B84E0((uint64_t)v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardIdentifier);
    v20 = (_QWORD *)(v8[7] + 16 * v17);
    v21 = *((_QWORD *)v10 + 1);
    *v20 = *(_QWORD *)v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D6464(uint64_t a1)
{
  return sub_1008D6954(a1, &qword_1013F9148, &qword_1013F4E48);
}

unint64_t sub_1008D6478(uint64_t a1)
{
  return sub_1008D64B0(a1, &qword_1013F9140, &qword_1013F4E50, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
}

unint64_t sub_1008D6494(uint64_t a1)
{
  return sub_1008D64B0(a1, &qword_1013F9138, &qword_1013F4E30, type metadata accessor for CRLBoardViewModelMetadata);
}

unint64_t sub_1008D64B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;

  v32 = a2;
  v7 = sub_1004B804C(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v13;
  }
  sub_1004B804C(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v31 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_1004CB7BC(v18, (uint64_t)v10, v32);
    result = sub_100843264((uint64_t)v10);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = v13[6];
    v24 = type metadata accessor for CRLBoardIdentifier(0);
    sub_1004B84E0((uint64_t)v10, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, type metadata accessor for CRLBoardIdentifier);
    v25 = v13[7];
    v26 = a4(0);
    result = sub_1004B84E0(v15, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v22, a4);
    v27 = v13[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_12;
    v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v30 = v31;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D665C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1004B804C(&qword_1013F9130);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F4E28);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F9130);
    result = sub_1008436B8((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    result = sub_1004B84E0((uint64_t)v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D67F4(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F9260, &qword_1013F9268, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D6810(uint64_t a1)
{
  return sub_1008D7440(a1, &qword_1013F9258);
}

unint64_t sub_1008D681C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F5130);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_retain(v7);
    result = sub_100843894((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D6924(uint64_t a1)
{
  return sub_1008D64B0(a1, &qword_1013F9248, &qword_1013F4E20, type metadata accessor for CRLBoardEntity);
}

unint64_t sub_1008D6940(uint64_t a1)
{
  return sub_1008D6954(a1, &qword_1013F9250, &qword_1013F4E60);
}

unint64_t sub_1008D6954(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1004B804C(a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
    v12 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v12;
  }
  sub_1004B804C(a3);
  v11 = static _DictionaryStorage.allocate(capacity:)(v10);
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    goto LABEL_9;
  v14 = *(int *)(v6 + 48);
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v7 + 72);
  swift_retain(v11);
  while (1)
  {
    sub_1004CB7BC(v17, (uint64_t)v9, a2);
    result = sub_100843264((uint64_t)v9);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = type metadata accessor for CRLBoardIdentifier(0);
    result = sub_1004B84E0((uint64_t)v9, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v12[7] + 8 * v21) = *(_QWORD *)&v9[v14];
    v24 = v12[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_12;
    v12[2] = v26;
    v17 += v18;
    if (!--v13)
    {
      swift_release(v12);
      v27 = v29;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D6AE0(uint64_t a1)
{
  return sub_1008D6954(a1, &qword_1013F9230, &qword_1013F4EE0);
}

unint64_t sub_1008D6AF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F9220);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    v9 = swift_bridgeObjectRetain(v7);
    result = sub_100842FAC(v8, v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v7;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D6BFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F5010);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_100842E98(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D6D1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4E78);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v8 = *(v6 - 1);
    v7 = *v6;
    swift_bridgeObjectRetain(*v6);
    result = sub_100849E04();
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (_QWORD *)(v4[7] + 16 * result);
    *v11 = v8;
    v11[1] = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v14;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D6E10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C((uint64_t *)&unk_1013FF9D0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100842E98(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D6F20(uint64_t a1)
{
  return sub_1008D8074(a1, &qword_1013F9160, &qword_1013F5018, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
}

unint64_t sub_1008D6F3C(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F50C8, (uint64_t (*)(id))sub_10084393C);
}

unint64_t sub_1008D6F50(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F5168, (uint64_t (*)(id))sub_10084393C);
}

unint64_t sub_1008D6F64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_1004B804C(&qword_1013F9208);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F5160);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v29 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F9208);
    result = sub_100842EFC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7] + 48 * v17;
    v21 = *((_QWORD *)v10 + 5);
    v22 = *(_OWORD *)(v10 + 8);
    v23 = *(_OWORD *)(v10 + 24);
    *(_QWORD *)v20 = *(_QWORD *)v10;
    *(_OWORD *)(v20 + 8) = v22;
    *(_OWORD *)(v20 + 24) = v23;
    *(_QWORD *)(v20 + 40) = v21;
    v24 = v8[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_12;
    v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v27 = v29;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D711C(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F9118, &qword_1013F9120, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D7138(uint64_t a1)
{
  return sub_1008D7B3C(a1, &qword_1013F0400, &qword_1013F92E8, (uint64_t (*)(_QWORD))sub_100843980);
}

unint64_t sub_1008D7154(uint64_t a1)
{
  return sub_1008D7168(a1, &qword_1013F51E0, (uint64_t (*)(id))sub_100843A6C);
}

unint64_t sub_1008D7168(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void **v9;
  void *v10;
  id v11;
  id v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(a2);
  v6 = static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v7;
  }
  swift_retain(v6);
  v9 = (void **)(a1 + 40);
  while (1)
  {
    v10 = *v9;
    v11 = *(v9 - 1);
    v12 = v10;
    result = a3(v11);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = 8 * result;
    *(_QWORD *)(v7[6] + v15) = v11;
    *(_QWORD *)(v7[7] + v15) = v12;
    v16 = v7[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v7[2] = v18;
    v9 += 2;
    if (!--v8)
    {
      swift_release(v7);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D7278(uint64_t a1)
{
  return sub_1008D728C(a1, &qword_1013F9200, &qword_1013F5148);
}

unint64_t sub_1008D728C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1004B804C(a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
    v12 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v12;
  }
  sub_1004B804C(a3);
  v11 = static _DictionaryStorage.allocate(capacity:)(v10);
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    goto LABEL_9;
  v14 = *(int *)(v6 + 48);
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v7 + 72);
  swift_retain(v11);
  while (1)
  {
    sub_1004CB7BC(v17, (uint64_t)v9, a2);
    result = sub_100842EFC((uint64_t)v9);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v9, v23);
    *(_QWORD *)(v12[7] + 8 * v21) = *(_QWORD *)&v9[v14];
    v24 = v12[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_12;
    v12[2] = v26;
    v17 += v18;
    if (!--v13)
    {
      swift_release(v12);
      v27 = v29;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D7418(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F91F0, &qword_1013F91F8, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D7434(uint64_t a1)
{
  return sub_1008D7440(a1, &qword_1013F5110);
}

unint64_t sub_1008D7440(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    result = sub_100842E98(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D7554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = sub_1004B804C(&qword_1013F2170);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F50E0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F2170);
    v15 = *v5;
    result = sub_100843894(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for CRLZoneSyncResultScenarios(0);
    result = sub_1004B84E0(v10, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, type metadata accessor for CRLZoneSyncResultScenarios);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D76F0(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F91E0, &qword_1013F91E8, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D770C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F9358);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v15 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100842E98(v7, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v4[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    *(_OWORD *)(v4[7] + 16 * result) = v15;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D7828(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4FF8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1004CB7BC(v6, (uint64_t)v17, &qword_1013F92F0);
    result = sub_1008432BC((uint64_t)v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = v4[6] + 40 * result;
    v10 = v17[0];
    v11 = v17[1];
    *(_QWORD *)(v9 + 32) = v18;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    v12 = (_OWORD *)(v4[7] + 32 * result);
    v13 = v20;
    *v12 = v19;
    v12[1] = v13;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D7958(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1004B804C(&qword_1013F9350);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_1004B804C(&qword_1013F5140);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F9350);
    result = sub_100842EFC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    result = sub_10062E5D8(v10, v8[7] + 56 * v17);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D7AF8(uint64_t a1)
{
  return sub_1008D728C(a1, &qword_1013F9348, &qword_1013F50B8);
}

unint64_t sub_1008D7B0C(uint64_t a1)
{
  return sub_1008D728C(a1, &qword_1013F9340, &qword_1013F50B0);
}

unint64_t sub_1008D7B20(uint64_t a1)
{
  return sub_1008D7B3C(a1, &qword_1013F58F8, &qword_1013F92E0, (uint64_t (*)(_QWORD))sub_100843BAC);
}

unint64_t sub_1008D7B3C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);

  v31 = a4;
  v7 = sub_1004B804C(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v13;
  }
  sub_1004B804C(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = &v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v30 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_1004CB7BC(v18, (uint64_t)v10, a2);
    v20 = *v10;
    result = v31(*v10);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v13[6] + result) = v20;
    v24 = v13[7];
    v25 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v15, v25);
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v29 = v30;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D7CD4(uint64_t a1)
{
  return sub_1008D7B3C(a1, &qword_1013F8990, &qword_1013F92D8, (uint64_t (*)(_QWORD))sub_100843C60);
}

unint64_t sub_1008D7CF0(uint64_t a1)
{
  return sub_1008D4FFC(a1, &qword_1013F91C0, &qword_1013F91C8, (uint64_t (*)(uint64_t))sub_100842FAC);
}

unint64_t sub_1008D7D0C(uint64_t a1)
{
  return sub_1008D7B3C(a1, &qword_1013F92C8, &qword_1013F92D0, (uint64_t (*)(_QWORD))sub_100843DD0);
}

unint64_t sub_1008D7D28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4F90);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 64);
  while (1)
  {
    v7 = (void *)*(v6 - 4);
    v8 = (void *)*(v6 - 3);
    v9 = *(v6 - 2);
    v10 = *((unsigned __int8 *)v6 - 8);
    v11 = *v6;
    sub_1004DD884(v7, v8, v9, *((_BYTE *)v6 - 8));
    swift_bridgeObjectRetain(v11);
    result = sub_100843E70((uint64_t)v7, v8, v9, v10);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = v4[6] + 32 * result;
    *(_QWORD *)v14 = v7;
    *(_QWORD *)(v14 + 8) = v8;
    *(_QWORD *)(v14 + 16) = v9;
    *(_BYTE *)(v14 + 24) = v10;
    *(_QWORD *)(v4[7] + 8 * result) = v11;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4[2] = v17;
    v6 += 5;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D7E74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = sub_1004B804C(&qword_1013F92B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F92C0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F92B8);
    v15 = *v5;
    result = sub_100843EF4(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D800C(uint64_t a1)
{
  return sub_1008D6130(a1, &qword_1013F9170, &qword_1013F9178, (uint64_t (*)(char *))sub_100843264, type metadata accessor for CRLBoardIdentifier);
}

unint64_t sub_1008D8030(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F4FA8, (uint64_t (*)(id))sub_100844028);
}

unint64_t sub_1008D8044(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F4F70, (uint64_t (*)(id))sub_10084406C);
}

unint64_t sub_1008D8058(uint64_t a1)
{
  return sub_1008D8074(a1, &qword_1013F9188, &qword_1013F4F58, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

unint64_t sub_1008D8074(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;

  v32 = a2;
  v7 = sub_1004B804C(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v13;
  }
  sub_1004B804C(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v31 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_1004CB7BC(v18, (uint64_t)v10, v32);
    result = sub_100842EFC((uint64_t)v10);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = v13[6];
    v24 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v10, v24);
    v25 = v13[7];
    v26 = a4(0);
    result = sub_1004B84E0(v15, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v22, a4);
    v27 = v13[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_12;
    v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v30 = v31;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1008D8220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = sub_1004B804C(&qword_1013F91A8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4F88);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1004CB7BC(v13, (uint64_t)v5, &qword_1013F91A8);
    result = sub_100843264((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for CRLBoardIdentifier(0);
    result = sub_1004B84E0((uint64_t)v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardIdentifier);
    v20 = (_QWORD *)(v8[7] + 16 * v17);
    v21 = *((_QWORD *)v10 + 1);
    *v20 = *(_QWORD *)v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D83C0(uint64_t a1)
{
  return sub_1008D83D4(a1, &qword_1013F4F08, (uint64_t (*)(id))sub_1008440B0);
}

unint64_t sub_1008D83D4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(a2);
  v6 = static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v7;
  }
  swift_retain(v6);
  v9 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v10 = *v9;
    v11 = (id)*(v9 - 1);
    swift_bridgeObjectRetain(v10);
    result = a3(v11);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = 8 * result;
    *(_QWORD *)(v7[6] + v14) = v11;
    *(_QWORD *)(v7[7] + v14) = v10;
    v15 = v7[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v7[2] = v17;
    v9 += 2;
    if (!--v8)
    {
      swift_release(v7);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D84E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1004B804C(&qword_1013F4EF0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1004CB7BC(v6, (uint64_t)v17, &qword_1013F9168);
    result = sub_1008432BC((uint64_t)v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = v4[6] + 40 * result;
    v10 = v17[0];
    v11 = v17[1];
    *(_QWORD *)(v9 + 32) = v18;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    v12 = v4[7] + 24 * result;
    v13 = v20;
    *(_OWORD *)v12 = v19;
    *(_QWORD *)(v12 + 16) = v13;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 64;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008D8624(uint64_t a1)
{
  return sub_1008D7B3C(a1, &qword_1013F9298, &qword_1013F92A0, sub_100844158);
}

Swift::Int _s8Freeform21CRLUIPropertyNotifierC14PropertyFilterV23__derived_struct_equalsySbAE_AEtFZ_0(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    Hasher.init(_seed:)(v21, *(_QWORD *)(a2 + 40));
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

Swift::Int _s8Freeform21CRLUIPropertyNotifierC10KindFilterV23__derived_struct_equalsySbAE_AEtFZ_0(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt32 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v12);
    Hasher.init(_seed:)(v21, *(_QWORD *)(a2 + 40));
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_DWORD *)(v19 + 4 * v18) == v16)
      goto LABEL_7;
  }
}

void sub_1008D8A00(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  Swift::Int v18;
  id v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  int64_t v30;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      if (a2 < 0)
        v6 = a2;
      else
        v6 = a2 & 0xFFFFFFFFFFFFFF8;
      __CocoaSet.isEqual(to:)(v6, v5);
    }
    else
    {
      sub_1008DE2A0(v5, a2);
    }
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1008DE2A0(v7, a1);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v28 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  type metadata accessor for CRLBoardItem(0);
  v11 = 0;
  v29 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v29)
      return;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v29)
        return;
      v16 = *(_QWORD *)(v28 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v29)
          return;
        v16 = *(_QWORD *)(v28 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v20 = NSObject._rawHashValue(seed:)(v18);
    v21 = -1 << *(_BYTE *)(a2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_46;
    v30 = v11;
    v23 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
    v24 = static NSObject.== infix(_:_:)(v23, v19);

    if ((v24 & 1) == 0)
    {
      v25 = ~v21;
      while (1)
      {
        v22 = (v22 + 1) & v25;
        if (((*(_QWORD *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          break;
        v26 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
        v27 = static NSObject.== infix(_:_:)(v26, v19);

        if ((v27 & 1) != 0)
          goto LABEL_22;
      }
LABEL_46:

      return;
    }
LABEL_22:

    v11 = v30;
  }
  v17 = v15 + 3;
  if (v17 >= v29)
    return;
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v29)
      return;
    v16 = *(_QWORD *)(v28 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

void sub_1008D8CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t i;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  _QWORD v110[10];

  v109 = (int *)_s17CategoryViewModelVMa(0);
  __chkstk_darwin(v109);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v7 = (char *)&v92 - v6;
  __chkstk_darwin(v8);
  v106 = (uint64_t)&v92 - v9;
  __chkstk_darwin(v10);
  __chkstk_darwin((char *)&v92 - v11);
  v13 = (char *)&v92 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v92 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v92 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v92 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v92 - v24;
  __chkstk_darwin(v26);
  v32 = (char *)&v92 - v31;
  if (a1 != a2 && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v101 = v30;
    v33 = 0;
    v34 = a1 + 56;
    v35 = 1 << *(_BYTE *)(a1 + 32);
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v37 = v36 & *(_QWORD *)(a1 + 56);
    v38 = (unint64_t)(v35 + 63) >> 6;
    v104 = a2 + 56;
    v105 = a2;
    v107 = v29;
    v108 = v27;
    v102 = v7;
    v96 = a1;
    v95 = v28;
    v99 = v19;
    v94 = v32;
    v93 = a1 + 56;
    v92 = v38;
    if (v37)
      goto LABEL_7;
LABEL_8:
    v40 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
    }
    else
    {
      if (v40 >= v38)
        return;
      v41 = *(_QWORD *)(v34 + 8 * v40);
      v42 = v33 + 1;
      if (v41)
        goto LABEL_21;
      v42 = v33 + 2;
      if (v33 + 2 >= v38)
        return;
      v41 = *(_QWORD *)(v34 + 8 * v42);
      if (v41)
        goto LABEL_21;
      v42 = v33 + 3;
      if (v33 + 3 >= v38)
        return;
      v41 = *(_QWORD *)(v34 + 8 * v42);
      if (v41)
        goto LABEL_21;
      v43 = v33 + 4;
      if (v33 + 4 >= v38)
        return;
      v41 = *(_QWORD *)(v34 + 8 * v43);
      if (v41)
      {
        v42 = v33 + 4;
LABEL_21:
        v97 = (v41 - 1) & v41;
        v98 = v42;
        for (i = __clz(__rbit64(v41)) + (v42 << 6); ; i = __clz(__rbit64(v37)) | (v33 << 6))
        {
          v44 = *(_QWORD *)(a1 + 48);
          v103 = *(_QWORD *)(v28 + 72);
          sub_1004B8460(v44 + v103 * i, (uint64_t)v32, _s17CategoryViewModelVMa);
          sub_1004B84E0((uint64_t)v32, (uint64_t)v25, _s17CategoryViewModelVMa);
          Hasher.init(_seed:)(v110, *(_QWORD *)(v105 + 40));
          v45 = type metadata accessor for UUID(0);
          v46 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          dispatch thunk of Hashable.hash(into:)(v110, v45, v46);
          v47 = v109;
          v48 = &v25[v109[5]];
          v49 = *(_QWORD *)v48;
          v50 = *((_QWORD *)v48 + 1);
          swift_bridgeObjectRetain(v50);
          String.hash(into:)(v110, v49, v50);
          swift_bridgeObjectRelease(v50);
          v51 = &v25[v47[6]];
          v52 = *((_QWORD *)v51 + 1);
          if (v52)
          {
            v53 = *(_QWORD *)v51;
            Hasher._combine(_:)(1u);
            swift_bridgeObjectRetain(v52);
            String.hash(into:)(v110, v53, v52);
            swift_bridgeObjectRelease(v52);
          }
          else
          {
            Hasher._combine(_:)(0);
          }
          v54 = v109;
          v55 = &v25[v109[7]];
          v56 = *(_QWORD *)v55;
          v57 = *((_QWORD *)v55 + 1);
          swift_bridgeObjectRetain(v57);
          String.hash(into:)(v110, v56, v57);
          swift_bridgeObjectRelease(v57);
          Hasher._combine(_:)(*(_QWORD *)&v25[v54[8]]);
          v58 = Hasher._finalize()();
          v59 = -1 << *(_BYTE *)(v105 + 32);
          v60 = v58 & ~v59;
          v61 = v108;
          if (((*(_QWORD *)(v104 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
          {
LABEL_60:
            sub_1004B84A4((uint64_t)v25, _s17CategoryViewModelVMa);
            return;
          }
          v100 = ~v59;
          while (1)
          {
            sub_1004B8460(*(_QWORD *)(v105 + 48) + v60 * v103, (uint64_t)v22, _s17CategoryViewModelVMa);
            v65 = static UUID.== infix(_:_:)(v22);
            sub_1004B8460((uint64_t)v22, (uint64_t)v19, _s17CategoryViewModelVMa);
            sub_1004B8460((uint64_t)v25, (uint64_t)v16, _s17CategoryViewModelVMa);
            if ((v65 & 1) == 0)
            {
              sub_1004B84A4((uint64_t)v19, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v16, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v22, (uint64_t)v13, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v25, v61, _s17CategoryViewModelVMa);
LABEL_28:
              sub_1004B84A4(v61, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v13, _s17CategoryViewModelVMa);
              v62 = v106;
              goto LABEL_29;
            }
            v66 = v109[5];
            v67 = *(_QWORD *)&v19[v66];
            v68 = *(_QWORD *)&v19[v66 + 8];
            v69 = &v16[v66];
            v70 = *((_QWORD *)v69 + 1);
            if (v67 == *(_QWORD *)v69 && v68 == v70)
            {
              sub_1004B84A4((uint64_t)v19, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v16, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v22, (uint64_t)v13, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v25, v61, _s17CategoryViewModelVMa);
            }
            else
            {
              v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, *(_QWORD *)v69, v70, 0);
              sub_1004B84A4((uint64_t)v19, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v16, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v22, (uint64_t)v13, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v25, v61, _s17CategoryViewModelVMa);
              if ((v72 & 1) == 0)
                goto LABEL_28;
            }
            v73 = v16;
            v74 = v109[6];
            v75 = &v13[v74];
            v76 = *(_QWORD *)&v13[v74 + 8];
            v77 = (_QWORD *)(v61 + v74);
            v78 = v61;
            v79 = v77[1];
            if (!v76)
            {
              swift_bridgeObjectRetain(v77[1]);
              sub_1004B84A4(v78, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v13, _s17CategoryViewModelVMa);
              v16 = v73;
              if (v79)
              {
                swift_bridgeObjectRelease(v79);
                v62 = v106;
                goto LABEL_50;
              }
              goto LABEL_48;
            }
            if (!v79)
            {
              swift_bridgeObjectRetain(v76);
              sub_1004B84A4(v108, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v13, _s17CategoryViewModelVMa);
              swift_bridgeObjectRelease(v76);
              v62 = v106;
              v16 = v73;
LABEL_50:
              v19 = v99;
LABEL_29:
              sub_1004B8460((uint64_t)v22, v62, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v25, (uint64_t)v7, _s17CategoryViewModelVMa);
LABEL_30:
              sub_1004B84A4(v62, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v7, _s17CategoryViewModelVMa);
              v63 = v101;
              sub_1004B8460((uint64_t)v22, v101, _s17CategoryViewModelVMa);
              v64 = v107;
              sub_1004B8460((uint64_t)v25, v107, _s17CategoryViewModelVMa);
              goto LABEL_31;
            }
            if (*(_QWORD *)v75 == *v77 && v76 == v79)
            {
              swift_bridgeObjectRetain(v76);
              sub_1004B84A4(v108, _s17CategoryViewModelVMa);
              sub_1004B84A4((uint64_t)v13, _s17CategoryViewModelVMa);
              swift_bridgeObjectRelease(v76);
              v16 = v73;
LABEL_48:
              v62 = v106;
              sub_1004B8460((uint64_t)v22, v106, _s17CategoryViewModelVMa);
              sub_1004B8460((uint64_t)v25, (uint64_t)v7, _s17CategoryViewModelVMa);
              v19 = v99;
              goto LABEL_52;
            }
            v80 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v75, v76, *v77, v77[1], 0);
            swift_bridgeObjectRetain(v76);
            sub_1004B84A4(v108, _s17CategoryViewModelVMa);
            sub_1004B84A4((uint64_t)v13, _s17CategoryViewModelVMa);
            swift_bridgeObjectRelease(v76);
            v62 = v106;
            sub_1004B8460((uint64_t)v22, v106, _s17CategoryViewModelVMa);
            sub_1004B8460((uint64_t)v25, (uint64_t)v7, _s17CategoryViewModelVMa);
            v16 = v73;
            v19 = v99;
            if ((v80 & 1) == 0)
              goto LABEL_30;
LABEL_52:
            v81 = v109[7];
            v82 = *(_QWORD *)(v62 + v81);
            v83 = *(_QWORD *)(v62 + v81 + 8);
            v84 = &v7[v81];
            v85 = *((_QWORD *)v84 + 1);
            if (v82 == *(_QWORD *)v84 && v83 == v85)
              break;
            v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v83, *(_QWORD *)v84, v85, 0);
            v87 = v62;
            v88 = v86;
            sub_1004B84A4(v87, _s17CategoryViewModelVMa);
            sub_1004B84A4((uint64_t)v7, _s17CategoryViewModelVMa);
            v63 = v101;
            sub_1004B8460((uint64_t)v22, v101, _s17CategoryViewModelVMa);
            v64 = v107;
            sub_1004B8460((uint64_t)v25, v107, _s17CategoryViewModelVMa);
            if ((v88 & 1) != 0)
              goto LABEL_56;
LABEL_31:
            sub_1004B84A4(v64, _s17CategoryViewModelVMa);
            sub_1004B84A4(v63, _s17CategoryViewModelVMa);
            sub_1004B84A4((uint64_t)v22, _s17CategoryViewModelVMa);
LABEL_32:
            v60 = (v60 + 1) & v100;
            v7 = v102;
            v61 = v108;
            if (((*(_QWORD *)(v104 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
              goto LABEL_60;
          }
          sub_1004B84A4(v62, _s17CategoryViewModelVMa);
          sub_1004B84A4((uint64_t)v7, _s17CategoryViewModelVMa);
          v63 = v101;
          sub_1004B8460((uint64_t)v22, v101, _s17CategoryViewModelVMa);
          sub_1004B8460((uint64_t)v25, v107, _s17CategoryViewModelVMa);
LABEL_56:
          v89 = v109;
          v90 = *(_QWORD *)(v63 + v109[8]);
          sub_1004B84A4(v63, _s17CategoryViewModelVMa);
          v91 = *(_QWORD *)(v107 + v89[8]);
          sub_1004B84A4(v107, _s17CategoryViewModelVMa);
          sub_1004B84A4((uint64_t)v22, _s17CategoryViewModelVMa);
          if (v90 != v91)
            goto LABEL_32;
          sub_1004B84A4((uint64_t)v25, _s17CategoryViewModelVMa);
          a1 = v96;
          v28 = v95;
          v7 = v102;
          v32 = v94;
          v34 = v93;
          v33 = v98;
          v38 = v92;
          v37 = v97;
          if (!v97)
            goto LABEL_8;
LABEL_7:
          v97 = (v37 - 1) & v37;
          v98 = v33;
        }
      }
      while (1)
      {
        v42 = v43 + 1;
        if (__OFADD__(v43, 1))
          break;
        if (v42 >= v38)
          return;
        v41 = *(_QWORD *)(v34 + 8 * v42);
        ++v43;
        if (v41)
          goto LABEL_21;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1008D9630(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t i;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  _QWORD v34[9];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v31 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v32 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v33 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v32)
      return 1;
    v11 = *(_QWORD *)(v31 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v32)
        return 1;
      v11 = *(_QWORD *)(v31 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v32)
          return 1;
        v11 = *(_QWORD *)(v31 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v32)
            return 1;
          v11 = *(_QWORD *)(v31 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v33 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    Hasher.init(_seed:)(v34, *(_QWORD *)(a2 + 40));
    swift_bridgeObjectRetain(v16);
    String.hash(into:)(v34, v17, v16);
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = v22[1];
    v24 = *v22 == v17 && v23 == v16;
    if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v22, v23, v17, v16, 0) & 1) == 0)
    {
      v25 = ~v19;
      for (i = v20 + 1; ; i = v27 + 1)
      {
        v27 = i & v25;
        if (((*(_QWORD *)(v7 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v21 + 16 * v27);
        v29 = v28[1];
        v30 = *v28 == v17 && v29 == v16;
        if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v17, v16, 0) & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease(v16);
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease(v16);
    result = v14;
    v3 = v33;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v32)
    return 1;
  v11 = *(_QWORD *)(v31 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v32)
      return 1;
    v11 = *(_QWORD *)(v31 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1008D98D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  Swift::Int v18;
  id v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  int64_t v30;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      if (a2 < 0)
        v6 = a2;
      else
        v6 = a2 & 0xFFFFFFFFFFFFFF8;
      __CocoaSet.isEqual(to:)(v6, v5);
    }
    else
    {
      sub_1008DE2A0(v5, a2);
    }
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1008DE2A0(v7, a1);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v28 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v11 = 0;
  v29 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_41;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v15 >= v29)
      return;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v29)
        return;
      v16 = *(_QWORD *)(v28 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v29)
          return;
        v16 = *(_QWORD *)(v28 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v29)
            return;
          v16 = *(_QWORD *)(v28 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_40:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_41:
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v20 = NSObject._rawHashValue(seed:)(v18);
    v21 = -1 << *(_BYTE *)(a2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_48;
    v30 = v11;
    v23 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
    v24 = static NSObject.== infix(_:_:)(v23, v19);

    if ((v24 & 1) == 0)
    {
      v25 = ~v21;
      while (1)
      {
        v22 = (v22 + 1) & v25;
        if (((*(_QWORD *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          break;
        v26 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
        v27 = static NSObject.== infix(_:_:)(v26, v19);

        if ((v27 & 1) != 0)
          goto LABEL_22;
      }
LABEL_48:

      return;
    }
LABEL_22:

    v11 = v30;
  }
  v17 = v15 + 4;
  if (v17 >= v29)
    return;
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_40;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v29)
      return;
    v16 = *(_QWORD *)(v28 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_40;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_1008D9BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v35 - v9;
  result = __chkstk_darwin(v8);
  v13 = (char *)&v35 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v36 = a1;
  v37 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v38 = (unint64_t)(v16 + 63) >> 6;
  v41 = a2 + 56;
  v35 = (char *)&v35 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v39 = (v18 - 1) & v18;
  v40 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v42;
    v25 = *(_QWORD *)(v42 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    v27 = *(_QWORD *)(a2 + 40);
    v28 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(a2 + 32);
    v31 = v29 & ~v30;
    if (((*(_QWORD *)(v41 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v4);
      return 0;
    }
    v32 = ~v30;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v31 * v25, v4);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10);
      v34 = *(void (**)(char *, uint64_t))(v42 + 8);
      v34(v7, v4);
      if ((v33 & 1) != 0)
        break;
      v31 = (v31 + 1) & v32;
      if (((*(_QWORD *)(v41 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
      {
        v34(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v34)(v10, v4);
    v13 = v35;
    a1 = v36;
    v18 = v39;
    v14 = v40;
    if (v39)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v38)
      return 1;
    v21 = *(_QWORD *)(v37 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v38)
        return 1;
      v21 = *(_QWORD *)(v37 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v38)
          return 1;
        v21 = *(_QWORD *)(v37 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v38)
            return 1;
          v21 = *(_QWORD *)(v37 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v39 = (v21 - 1) & v21;
    v40 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v38)
    return 1;
  v21 = *(_QWORD *)(v37 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v38)
      return 1;
    v21 = *(_QWORD *)(v37 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1008D9F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v11;
  _QWORD v12[9];

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v2 = *(_QWORD *)(a1 + 56);
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v11 = (unint64_t)(v3 + 63) >> 6;
    if ((v4 & v2) != 0)
    {
      v5 = __clz(__rbit64(v4 & v2));
      goto LABEL_23;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v6 = *(_QWORD *)(a1 + 64);
      v7 = 1;
      if (v6)
        goto LABEL_22;
      v7 = 2;
      if (v11 > 2)
      {
        v6 = *(_QWORD *)(a1 + 72);
        if (v6)
          goto LABEL_22;
        v7 = 3;
        if (v11 > 3)
        {
          v6 = *(_QWORD *)(a1 + 80);
          if (v6)
            goto LABEL_22;
          v7 = 4;
          if (v11 > 4)
          {
            v6 = *(_QWORD *)(a1 + 88);
            if (!v6)
            {
              v8 = 5;
              if (v11 > 5)
              {
                v6 = *(_QWORD *)(a1 + 96);
                if (v6)
                {
                  v7 = 5;
                  goto LABEL_22;
                }
                while (1)
                {
                  v7 = v8 + 1;
                  if (__OFADD__(v8, 1))
                  {
                    __break(1u);
                    JUMPOUT(0x1008DA404);
                  }
                  if (v7 >= v11)
                    break;
                  v6 = *(_QWORD *)(a1 + 56 + 8 * v7);
                  ++v8;
                  if (v6)
                    goto LABEL_22;
                }
              }
              return 1;
            }
LABEL_22:
            v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_23:
            v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + 16 * v5 + 8);
            Hasher.init(_seed:)(v12, *(_QWORD *)(a2 + 40));
            __asm { BR              X8 }
          }
        }
      }
    }
    return 1;
  }
  return 0;
}

void sub_1008DA424()
{
  _QWORD *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  int v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v1 = *(_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x70));
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v2);
  v3 = *(_QWORD *)((swift_isaMask & *v0) + 0x88);
  v4 = *(void **)((char *)v0 + v3);
  if (!v4 || (v5 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x90), v6 = v5[8], v6 == 255))
  {
    os_unfair_lock_unlock(v2);
  }
  else
  {
    v7 = *(_QWORD *)v5;
    *(_QWORD *)((char *)v0 + v3) = 0;
    v8 = v4;
    sub_1006CF244(v7, v6);

    v9 = *(_QWORD *)v5;
    *(_QWORD *)v5 = 0;
    v10 = v5[8];
    v5[8] = -1;
    sub_1006CF25C(v9, v10);
    v11 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x98));
    swift_beginAccess(v11, v14, 1, 0);
    v12 = *v11;
    *v11 = 0;
    swift_release(v12);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
    if ((v6 & 1) != 0)
    {
      objc_msgSend(v8, "removeObserver:forChangeSourceOfClass:", v0, swift_getObjCClassFromMetadata(v7, v13));

    }
    else
    {
      sub_1006CD8A8(v7, 0);
      objc_msgSend(v8, "removeObserver:forChangeSource:", v0, v7);

      sub_1006CF25C(v7, v6);
      sub_1006CF25C(v7, v6);
    }
  }
}

id CRLUIPropertyNotifier.__allocating_init(parent:)(void *a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  double v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  v4 = &v3[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier];
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier]);
  v5 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(_QWORD *)&v3[v5] = sub_1008E06F8(_swiftEmptyArrayStorage, &qword_1013F5090);
  *(_QWORD *)&v6 = swift_unknownObjectWeakAssign(v4, a1).n128_u64[0];
  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, "init", v6);

  return v7;
}

id CRLUIPropertyNotifier.init(parent:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  double v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  v4 = &v1[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier]);
  v5 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(_QWORD *)&v1[v5] = sub_1008E06F8(_swiftEmptyArrayStorage, &qword_1013F5090);
  *(_QWORD *)&v6 = swift_unknownObjectWeakAssign(v4, a1).n128_u64[0];
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, "init", v6);

  return v7;
}

void CRLUIPropertyNotifier.init()()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier]);
  v1 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(_QWORD *)&v0[v1] = sub_1008E06F8(_swiftEmptyArrayStorage, &qword_1013F5090);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLUIPropertyNotifier.swift", 36, 2, 44, 0);
  __break(1u);
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeKind:seed:)(Swift::UInt a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t inited;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE v23[40];

  v10 = sub_1004B804C(&qword_1013F8C98);
  inited = swift_initStackObject(v10, v23);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_DWORD *)(inited + 32) = a2;
  v12 = sub_1004B89D8(inited);
  swift_setDeallocating(inited);
  v13 = sub_1008DB0FC(a1, v12, (void (*)(_OWORD *, uint64_t, __n128))sub_1008DF914, &qword_1013F9338);
  v14 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v15 = swift_allocObject(v14, 24, 7);
  v16 = swift_weakInit(v15 + 16, 0);
  swift_weakAssign(v16, v13);
  swift_retain(a3);
  swift_retain(a4);
  v17 = ObjectIdentifier.hashValue.getter(v15);
  sub_1008DC994(a3, a4, a5, v17);
  swift_release(a4);
  swift_release(a3);
  v22 = v15;
  v18 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v20 = AnyCancellable.init<A>(_:)(&v22, v14, v19);
  swift_bridgeObjectRelease();
  swift_release(v13);
  return v20;
}

Swift::Int CRLUIPropertyNotifier.KindFilter.init(kind:)(int a1)
{
  uint64_t v2;
  uint64_t inited;
  Swift::Int v4;
  _BYTE v6[40];

  v2 = sub_1004B804C(&qword_1013F8C98);
  inited = swift_initStackObject(v2, v6);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_DWORD *)(inited + 32) = a1;
  v4 = sub_1004B89D8(inited);
  swift_setDeallocating(inited);
  return v4;
}

uint64_t CRLUIPropertyNotifier.registerProperty<A>(for:changeFilter:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v10 = sub_1008DB8A8(a1, a2, a6, a7);
  v11 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v12 = swift_allocObject(v11, 24, 7);
  v13 = swift_weakInit(v12 + 16, 0);
  swift_weakAssign(v13, v10);
  swift_retain(a3);
  swift_retain(a4);
  v14 = ObjectIdentifier.hashValue.getter(v12);
  sub_1008DC994(a3, a4, a5, v14);
  swift_release(a4);
  swift_release(a3);
  v19 = v12;
  v15 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v17 = AnyCancellable.init<A>(_:)(&v19, v11, v16);
  swift_release(v10);
  return v17;
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeKinds:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008DADE0(a1, a2, a3, a4, a5, (void (*)(_OWORD *, uint64_t, __n128))sub_1008DF914, &qword_1013F9338);
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeProperty:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t inited;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE v23[40];

  v10 = sub_1004B804C(&qword_1013F8CA8);
  inited = swift_initStackObject(v10, v23);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = a2;
  v12 = sub_1004B8B18(inited);
  swift_setDeallocating(inited);
  v13 = sub_1008DB0FC(a1, v12, (void (*)(_OWORD *, uint64_t, __n128))sub_1008DF7AC, &qword_1013F9330);
  v14 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v15 = swift_allocObject(v14, 24, 7);
  v16 = swift_weakInit(v15 + 16, 0);
  swift_weakAssign(v16, v13);
  swift_retain(a3);
  swift_retain(a4);
  v17 = ObjectIdentifier.hashValue.getter(v15);
  sub_1008DC994(a3, a4, a5, v17);
  swift_release(a4);
  swift_release(a3);
  v22 = v15;
  v18 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v20 = AnyCancellable.init<A>(_:)(&v22, v14, v19);
  swift_bridgeObjectRelease();
  swift_release(v13);
  return v20;
}

Swift::Int CRLUIPropertyNotifier.PropertyFilter.init(property:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t inited;
  Swift::Int v4;
  _BYTE v6[40];

  v2 = sub_1004B804C(&qword_1013F8CA8);
  inited = swift_initStackObject(v2, v6);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = a1;
  v4 = sub_1004B8B18(inited);
  swift_setDeallocating(inited);
  return v4;
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeProperties:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1008DADE0(a1, a2, a3, a4, a5, (void (*)(_OWORD *, uint64_t, __n128))sub_1008DF7AC, &qword_1013F9330);
}

uint64_t sub_1008DADE0(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_OWORD *, uint64_t, __n128), uint64_t *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  swift_bridgeObjectRetain(a2);
  v14 = sub_1008DB0FC(a1, a2, a6, a7);
  v15 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v16 = swift_allocObject(v15, 24, 7);
  v17 = swift_weakInit(v16 + 16, 0);
  swift_weakAssign(v17, v14);
  swift_retain(a3);
  swift_retain(a4);
  v18 = ObjectIdentifier.hashValue.getter(v16);
  sub_1008DC994(a3, a4, a5, v18);
  swift_release(a4);
  swift_release(a3);
  v23 = v16;
  v19 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v21 = AnyCancellable.init<A>(_:)(&v23, v15, v20);
  swift_bridgeObjectRelease();
  swift_release(v14);
  return v21;
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:where:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v12 = type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v14 = a2;
  v14[1] = a3;
  swift_retain(a3);
  UUID.init()(v15);
  v16 = sub_1008DB358(a1, (uint64_t)v14);
  v17 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v18 = swift_allocObject(v17, 24, 7);
  v19 = swift_weakInit(v18 + 16, 0);
  swift_weakAssign(v19, v16);
  swift_retain(a4);
  swift_retain(a5);
  v20 = ObjectIdentifier.hashValue.getter(v18);
  sub_1008DC994(a4, a5, a6, v20);
  swift_release(a5);
  swift_release(a4);
  v26 = v18;
  v21 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v23 = AnyCancellable.init<A>(_:)(&v26, v17, v22);
  swift_release(v16);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  return v23;
}

uint64_t CRLUIPropertyNotifier.CustomFilter.init(filter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  *a3 = a1;
  a3[1] = a2;
  v3 = type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  return UUID.init()(v3);
}

uint64_t sub_1008DB0FC(Swift::UInt a1, uint64_t a2, void (*a3)(_OWORD *, uint64_t, __n128), uint64_t *a4)
{
  char *v4;
  void *v7;
  __n128 v10;
  Swift::Int v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  void *v20;
  id v21;
  _OWORD v23[4];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v7 = v4;
  Hasher.init()(v23);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  v10 = swift_bridgeObjectRetain(a2);
  a3(v23, a2, v10);
  swift_bridgeObjectRelease();
  v27 = v23[2];
  v28 = v23[3];
  v29 = v24;
  v25 = v23[0];
  v26 = v23[1];
  v11 = Hasher.finalize()();
  v12 = &v4[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers];
  swift_beginAccess(v12, v23, 32, 0);
  v13 = *(_QWORD *)v12;
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_100842E60(v11), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_endAccess(v23);
    swift_retain(v16);
  }
  else
  {
    swift_endAccess(v23);
    v17 = sub_1004B804C(a4);
    swift_allocObject(v17, 104, 7);
    swift_bridgeObjectRetain(a2);
    swift_unknownObjectRetain(a1);
    v18 = v7;
    v16 = sub_1008E0CDC(a1, a2, (uint64_t)v18, a3);
    swift_unknownObjectRelease(a1);

    Strong = swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier]);
    if (Strong)
    {
      v20 = (void *)Strong;
      swift_unknownObjectRetain(a1);
      v21 = v20;
      sub_1008DBCD8(v16, v21, a1, 256);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(a1);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_bridgeObjectRelease();
    }
  }
  return v16;
}

uint64_t sub_1008DB358(Swift::UInt a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  void *v23;
  id v24;
  uint64_t v26;
  _OWORD v27[4];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v2;
  v6 = type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  Hasher.init()(v27);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v27, v12, v13);
  v31 = v27[2];
  v32 = v27[3];
  v33 = v28;
  v29 = v27[0];
  v30 = v27[1];
  v14 = Hasher.finalize()();
  v15 = &v2[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers];
  swift_beginAccess(v15, v27, 32, 0);
  v16 = *(_QWORD *)v15;
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_100842E60(v14), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_retain(v19);
  }
  else
  {
    v19 = 0;
  }
  swift_endAccess(v27);
  sub_1004B8460(a2, (uint64_t)v11, type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  if (!v19)
  {
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
    v20 = sub_1004B804C(&qword_1013F9328);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    swift_unknownObjectRetain(a1);
    v21 = v3;
    v19 = sub_1008E0DD8(a1, (uint64_t)v8, (uint64_t)v21);
    swift_unknownObjectRelease(a1);

    Strong = swift_unknownObjectWeakLoadStrong(&v21[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier]);
    if (Strong)
    {
      v23 = (void *)Strong;
      swift_unknownObjectRetain(a1);
      v24 = v23;
      sub_1008DBCD8(v19, v24, a1, 256);
      swift_unknownObjectRelease(a1);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  return v19;
}

uint64_t sub_1008DB648(Swift::UInt a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t Strong;
  void *v13;
  id v14;
  _OWORD v16[4];
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1;
  Hasher.init()(&v18);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  v25 = v20;
  v26 = v21;
  v27 = v22;
  v23 = v18;
  v24 = v19;
  v4 = Hasher.finalize()();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess(v5, &v18, 32, 0);
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_100842E60(v4), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_endAccess(&v18);
    swift_retain(v9);
  }
  else
  {
    swift_endAccess(&v18);
    v10 = sub_1004B804C(&qword_1013F9308);
    v9 = swift_allocObject(v10, 96, 7);
    Hasher.init()(v16);
    Hasher._combine(_:)(a1);
    Hasher._combine(_:)(1uLL);
    v20 = v16[2];
    v21 = v16[3];
    v22 = v17;
    v18 = v16[0];
    v19 = v16[1];
    v11 = Hasher.finalize()();
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_QWORD *)(v9 + 80) = 0;
    *(_QWORD *)(v9 + 88) = v11;
    swift_unknownObjectWeakInit(v9 + 16);
    *(_QWORD *)(v9 + 24) = sub_1008E04B8(_swiftEmptyArrayStorage);
    *(_QWORD *)(v9 + 32) = 0;
    *(_BYTE *)(v9 + 40) = 1;
    swift_unknownObjectWeakAssign(v9 + 16, v2);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier);
    if (Strong)
    {
      v13 = (void *)Strong;
      swift_unknownObjectRetain(a1);
      v14 = v13;
      sub_1008DBCD8(v9, v14, a1, 256);
      swift_unknownObjectRelease(a1);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
  return v9;
}

uint64_t *sub_1008DB8A8(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  Swift::Int v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  _BYTE v22[24];

  v5 = v4;
  ObjectType = swift_getObjectType(v4);
  v11 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(ObjectType);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = sub_1008DC6AC(a1, a2, a3, a4);
  v15 = &v4[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers];
  swift_beginAccess(v15, v22, 32, 0);
  v16 = *(_QWORD *)v15;
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_100842E60(v14), (v18 & 1) != 0))
  {
    v19 = *(uint64_t **)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_retain(v19);
  }
  else
  {
    v19 = 0;
  }
  swift_endAccess(v22);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a3);
  if (!v19)
    v19 = sub_1008DC748(a1, (uint64_t)v13, v5, a3, a4);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, a3);
  return v19;
}

uint64_t CRLUIPropertyNotifier.registerProperty(forAllChangeRecordsOn:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = sub_1008DB648(a1);
  v8 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v9 = swift_allocObject(v8, 24, 7);
  v10 = swift_weakInit(v9 + 16, 0);
  swift_weakAssign(v10, v7);
  swift_retain(a2);
  swift_retain(a3);
  v11 = ObjectIdentifier.hashValue.getter(v9);
  sub_1008DC994(a2, a3, a4, v11);
  swift_release(a3);
  swift_release(a2);
  v16 = v9;
  v12 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v14 = AnyCancellable.init<A>(_:)(&v16, v8, v13);
  swift_release(v7);
  return v14;
}

uint64_t CRLUIPropertyNotifier.registerProperty<A>(updatePublisher:seed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a6, a5, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Output);
  v14 = swift_getAssociatedTypeWitness(255, a6, a5, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Failure);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a6, a5, v14, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
  type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber(0, AssociatedTypeWitness, v14, AssociatedConformanceWitness);
  v16 = sub_1008E0FA8(v6);
  sub_1008DC12C(v16, a1, a5, a6);
  v17 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v18 = swift_allocObject(v17, 24, 7);
  v19 = swift_weakInit(v18 + 16, 0);
  swift_weakAssign(v19, v16);
  swift_retain(a2);
  swift_retain(a3);
  swift_retain(v16);
  v20 = ObjectIdentifier.hashValue.getter(v18);
  sub_1008DC994(a2, a3, a4, v20);
  swift_release(v16);
  swift_release(a3);
  swift_release(a2);
  v25 = v18;
  v21 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v23 = AnyCancellable.init<A>(_:)(&v25, v17, v22);
  swift_release(v16);
  return v23;
}

void sub_1008DBCD8(uint64_t a1, void *a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;
  uint64_t (*v9)(void);
  uint64_t v10;
  _QWORD *v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _BYTE *v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  _BYTE v22[24];

  v9 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 192);
  v10 = v9();
  v11 = (_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers, v22, 32, 0);
  if (*(_QWORD *)(*v11 + 16))
  {
    sub_100842E60(v10);
    v13 = v12;
    v14 = swift_endAccess(v22);
    if ((v13 & 1) != 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260, "Should not add identical subscribers.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSubscriber(_:for:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 260, (uint64_t)"Should not add identical subscribers.", 37, 2u);
    }
  }
  else
  {
    v14 = swift_endAccess(v22);
  }
  v15 = ((uint64_t (*)(uint64_t))v9)(v14);
  swift_beginAccess(v11, v22, 33, 0);
  swift_retain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  v21 = *v11;
  *v11 = 0x8000000000000000;
  sub_100827C90(a1, v15, isUniquelyReferenced_nonNull_native);
  *v11 = v21;
  swift_bridgeObjectRelease();
  swift_endAccess(v22);
  v17 = objc_allocWithZone((Class)sub_1004B804C(&qword_1013F9310));
  v17[*(_QWORD *)((swift_isaMask & *(_QWORD *)v17) + 0x138)] = HIBYTE(a4) & 1;
  swift_retain(a1);
  v18 = a2;
  v19 = a4 & 1;
  sub_1006CD8A8(a3, v19);
  v20 = sub_1008E0958(v18, a3, v19, a1);
  swift_release(a1);
  sub_1008DFD9C(v20, a1);

}

uint64_t sub_1008DBF10(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[3];

  v3 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 192);
  v4 = v3();
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers, v17, 32, 0);
  if (*(_QWORD *)(*v5 + 16))
  {
    sub_100842E60(v4);
    v7 = v6;
    v8 = swift_endAccess(v17);
    if ((v7 & 1) != 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260, "Should not add identical subscribers.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSubscriber(_:for:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 260, (uint64_t)"Should not add identical subscribers.", 37, 2u);
    }
  }
  else
  {
    v8 = swift_endAccess(v17);
  }
  v9 = ((uint64_t (*)(uint64_t))v3)(v8);
  swift_beginAccess(v5, v17, 33, 0);
  swift_retain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
  v16 = *v5;
  *v5 = 0x8000000000000000;
  sub_100827C90(a1, v9, isUniquelyReferenced_nonNull_native);
  *v5 = v16;
  swift_bridgeObjectRelease();
  swift_endAccess(v17);
  v17[0] = a1;
  v11 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v12 = sub_1004B7878((unint64_t *)&qword_1013FE290, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v13 = sub_1004B804C(&qword_1013F92F8);
  v14 = sub_1004CBA30(&qword_1013F9300, &qword_1013F92F8, (uint64_t)&unk_100F15C60);
  return dispatch thunk of Publisher.receive<A>(subscriber:)(v17, v13, v14, v11, v12);
}

uint64_t sub_1008DC12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  _QWORD *v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v20;
  _QWORD v21[3];

  v8 = *(uint64_t **)a1;
  v9 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 192);
  v10 = v9();
  v11 = (_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers, v21, 32, 0);
  if (*(_QWORD *)(*v11 + 16))
  {
    sub_100842E60(v10);
    v13 = v12;
    v14 = swift_endAccess(v21);
    if ((v13 & 1) != 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260, "Should not add identical subscribers.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSubscriber(_:for:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 260, (uint64_t)"Should not add identical subscribers.", 37, 2u);
    }
  }
  else
  {
    v14 = swift_endAccess(v21);
  }
  v15 = ((uint64_t (*)(uint64_t))v9)(v14);
  swift_beginAccess(v11, v21, 33, 0);
  swift_retain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  v20 = *v11;
  *v11 = 0x8000000000000000;
  sub_100827C90(a1, v15, isUniquelyReferenced_nonNull_native);
  *v11 = v20;
  swift_bridgeObjectRelease();
  swift_endAccess(v21);
  v21[0] = a1;
  v17 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber(0, v8[27], v8[28], v8[29]);
  WitnessTable = swift_getWitnessTable(&unk_100F15C60, v17);
  return dispatch thunk of Publisher.receive<A>(subscriber:)(v21, v17, WitnessTable, a3, a4);
}

uint64_t CRLUIPropertyNotifier.registerProperty(notification:object:seed:)(uint64_t a1, Swift::UInt a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = sub_1008DC44C(a2, a1);
  v9 = type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  v10 = swift_allocObject(v9, 24, 7);
  v11 = swift_weakInit(v10 + 16, 0);
  swift_weakAssign(v11, v8);
  swift_retain(a3);
  swift_retain(a4);
  v12 = ObjectIdentifier.hashValue.getter(v10);
  sub_1008DC994(a3, a4, a5, v12);
  swift_release(a4);
  swift_release(a3);
  v17 = v10;
  v13 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = sub_1004B7878(&qword_1013F8CA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription, (uint64_t)&unk_100F15CE0);
  v15 = AnyCancellable.init<A>(_:)(&v17, v9, v14);
  swift_release(v8);
  return v15;
}

uint64_t sub_1008DC44C(Swift::UInt a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  _OWORD v22[4];
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v3 = v2;
  v6 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()(v22);
  if (a1)
    Hasher._combine(_:)(a1);
  else
    Hasher._combine(_:)(0);
  Hasher._combine(_:)(2uLL);
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  String.hash(into:)(v22, v10, v11);
  swift_bridgeObjectRelease();
  v26 = v22[2];
  v27 = v22[3];
  v28 = v23;
  v24 = v22[0];
  v25 = v22[1];
  v12 = Hasher.finalize()();
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers, v22, 32, 0);
  v14 = *v13;
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_100842E60(v12), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    swift_endAccess(v22);
    swift_retain(v17);
  }
  else
  {
    swift_endAccess(v22);
    v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    NSNotificationCenter.publisher(for:object:)(a2, a1);

    v19 = sub_1004B804C(&qword_1013F92F8);
    v17 = swift_allocObject(v19, 88, 7);
    *(_OWORD *)(v17 + 48) = 0u;
    *(_OWORD *)(v17 + 64) = 0u;
    *(_QWORD *)(v17 + 80) = 0;
    swift_unknownObjectWeakInit(v17 + 16);
    *(_QWORD *)(v17 + 24) = sub_1008E04B8(_swiftEmptyArrayStorage);
    *(_QWORD *)(v17 + 32) = 0;
    *(_BYTE *)(v17 + 40) = 1;
    swift_unknownObjectWeakAssign(v17 + 16, v3);
    *(_QWORD *)(v17 + 32) = v12;
    *(_BYTE *)(v17 + 40) = 0;
    sub_1008DBF10(v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v17;
}

uint64_t CRLUIPropertyNotifier.subscriberCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers, v3, 0, 0);
  return *(_QWORD *)(*(_QWORD *)v1 + 16);
}

Swift::Int sub_1008DC6AC(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v8[4];
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  Hasher.init()(v8);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  dispatch thunk of Hashable.hash(into:)(v8, a3, *(_QWORD *)(a4 + 16));
  v12 = v8[2];
  v13 = v8[3];
  v14 = v9;
  v10 = v8[0];
  v11 = v8[1];
  return Hasher.finalize()();
}

uint64_t *sub_1008DC748(Swift::UInt a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t Strong;
  void *v12;
  id v13;

  v8 = type metadata accessor for CRLUIPropertyNotifier.ChangeSubscriber(0, a4, a5, a4);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_unknownObjectRetain(a1);
  v9 = a3;
  v10 = sub_1008E0BB0(a1, a2, (uint64_t)v9);
  swift_unknownObjectRelease(a1);

  Strong = swift_unknownObjectWeakLoadStrong(&v9[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier]);
  if (Strong)
  {
    v12 = (void *)Strong;
    swift_unknownObjectRetain(a1);
    v13 = v12;
    sub_1008DBCD8((uint64_t)v10, v13, a1, 256);
    swift_unknownObjectRelease(a1);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  return v10;
}

uint64_t sub_1008DC8C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 192))();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers, v12, 33, 0);
  v4 = sub_100842E60(v2);
  if ((v5 & 1) != 0)
  {
    v6 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v8 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100830148();
      v8 = v11;
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v6);
    sub_10051A3F8(v6, v8);
    *v3 = v8;
    swift_release(v9);
    swift_bridgeObjectRelease();
  }
  return swift_endAccess(v12);
}

uint64_t sub_1008DC994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[24];

  swift_beginAccess(v4 + 3, v12, 33, 0);
  swift_retain(a1);
  swift_retain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4[3]);
  v11 = v4[3];
  v4[3] = 0x8000000000000000;
  sub_100827DE0(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
  v4[3] = v11;
  swift_bridgeObjectRelease();
  result = swift_endAccess(v12);
  if (!*(_QWORD *)(v4[3] + 16))
    return (*(uint64_t (**)(uint64_t))(*v4 + 184))(result);
  return result;
}

void sub_1008DCA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v2 = v1;
  v3 = ObjectIdentifier.hashValue.getter(a1);
  v4 = (uint64_t *)(v1 + 24);
  swift_beginAccess(v1 + 24, v17, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16) && (sub_100842E60(v3), (v5 & 1) != 0))
  {
    swift_beginAccess(v4, v16, 33, 0);
    v6 = sub_100842E60(v3);
    if ((v7 & 1) != 0)
    {
      v8 = v6;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
      v10 = *v4;
      v15 = *v4;
      *v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100830154();
        v10 = v15;
      }
      v11 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 24 * v8);
      v12 = *v11;
      v13 = v11[1];
      sub_10051BFB8(v8, v10);
      *v4 = v10;
      swift_release(v13);
      swift_bridgeObjectRelease();
      swift_release(v12);
    }
    v14 = swift_endAccess(v16);
    if (!*(_QWORD *)(*v4 + 16))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 184))(v14);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"removeProperty(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 340, "Unknown subscriber.", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"removeProperty(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2u, 340, (uint64_t)"Unknown subscriber.", 19, 2u);
  }
}

void sub_1008DCC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *Strong;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong
    && (v11 = *(_QWORD *)&Strong[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount],
        Strong,
        v11))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v21 = static OS_dispatch_queue.main.getter(v12);
    aBlock[4] = sub_1008E1C60;
    v23 = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_1012866F0;
    v13 = _Block_copy(aBlock);
    v14 = v23;
    swift_retain(v1);
    v15 = swift_release(v14);
    static DispatchQoS.unspecified.getter(v15);
    aBlock[0] = _swiftEmptyArrayStorage;
    v16 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v18 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
    v19 = (void *)v21;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_1008DCE48(v1);
  }
}

void sub_1008DCE48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  swift_beginAccess(a1 + 24, v24, 0, 0);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(v2);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v7)
      goto LABEL_23;
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_23;
      v17 = *(_QWORD *)(v3 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_23;
        v17 = *(_QWORD *)(v3 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v7)
            goto LABEL_23;
          v17 = *(_QWORD *)(v3 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 24 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v20 = v12;
    v21 = v13;
    v22 = v14;
    swift_retain(v12);
    swift_retain(v13);
    v15 = sub_1004B804C(&qword_1013F91D8);
    Binding.wrappedValue.getter(&v23);
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v19 = v23 + 1;
    Binding.wrappedValue.setter(&v19, v15);
    swift_release(v13);
    swift_release(v12);
  }
  v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_23:
    swift_release(v2);
    return;
  }
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    v17 = *(_QWORD *)(v3 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1008DD030()
{
  uint64_t v0;
  uint64_t Strong;
  id v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = (id)Strong;
    sub_1008DC8C0(v0);

  }
}

uint64_t sub_1008DD084()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 40) != 1)
    return *(_QWORD *)(v0 + 32);
  result = ObjectIdentifier.hashValue.getter(v0);
  *(_QWORD *)(v0 + 32) = result;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_1008DD0BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 41, 7);
}

uint64_t sub_1008DD0E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 184))();
}

uint64_t sub_1008DD110(_QWORD *a1)
{
  uint64_t **v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[40];
  _BYTE v18[24];
  _BYTE v19[24];
  uint64_t v20;

  v4 = *v1;
  v3 = v1 + 6;
  swift_beginAccess(v3, v18, 0, 0);
  v5 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status(0, v4[27], v4[28], v4[29]);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 16))(v19, v3, v5);
  v7 = v20;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v19, v5);
  if (v7)
  {
    v9 = a1[3];
    v8 = a1[4];
    sub_1004BB5A4(a1, v9);
    return dispatch thunk of Cancellable.cancel()(v9, *(_QWORD *)(v8 + 8));
  }
  else
  {
    sub_1004E90B0((uint64_t)a1, (uint64_t)v19);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v17, v19, v5);
    v11 = swift_beginAccess(v3, v16, 33, 0);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t, __n128))(v6 + 40))(v3, v17, v5, v11);
    swift_endAccess(v16);
    v12 = a1[3];
    v13 = a1[4];
    v14 = sub_1004BB5A4(a1, v12);
    v15 = static Subscribers.Demand.unlimited.getter(v14);
    return dispatch thunk of Subscription.request(_:)(v15, v12, v13);
  }
}

uint64_t sub_1008DD238()
{
  sub_1008DCC10();
  return static Subscribers.Demand.none.getter();
}

void sub_1008DD24C()
{
  uint64_t **v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __n128 v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];
  __int128 v11;
  unint64_t v12;
  _QWORD v13[3];
  __int128 v14;

  v1 = (uint64_t)v0;
  v3 = v0 + 6;
  v2 = *v0;
  swift_beginAccess(v3, v10, 0, 0);
  v4 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status(0, v2[27], v2[28], v2[29]);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(__int128 *, _QWORD *, uint64_t))(v5 + 16))(&v11, v3, v4);
  if (v12 > 1)
  {
    sub_1004DB728(&v11, (uint64_t)v13);
    v6 = v14;
    sub_1004BB5A4(v13, v14);
    dispatch thunk of Cancellable.cancel()(v6, *(_QWORD *)(*((_QWORD *)&v6 + 1) + 8));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
  }
  else
  {
    (*(void (**)(__int128 *, uint64_t))(v5 + 8))(&v11, v4);
  }
  memset(v13, 0, sizeof(v13));
  v14 = xmmword_100F02C20;
  v7 = swift_beginAccess(v3, &v11, 33, 0);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v5 + 40))(v3, v13, v4, v7);
  swift_endAccess(&v11);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1008DC8C0(v1);

  }
}

uint64_t sub_1008DD37C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status(0, *(_QWORD *)(*(_QWORD *)v0 + 216), *(_QWORD *)(*(_QWORD *)v0 + 224), *(_QWORD *)(*(_QWORD *)v0 + 232));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + 48, v1);
}

uint64_t **sub_1008DD3B8()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = *v0;
  swift_unknownObjectWeakDestroy(v0 + 2);
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status(0, v1[27], v1[28], v1[29]);
  (*(void (**)(uint64_t **, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + 6, v2);
  return v0;
}

uint64_t sub_1008DD418()
{
  uint64_t **v0;

  v0 = sub_1008DD3B8();
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t sub_1008DD434(_QWORD *a1)
{
  return sub_1008DD110(a1);
}

uint64_t sub_1008DD454()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 280))();
}

uint64_t sub_1008DD47C()
{
  return sub_1008E1B3C();
}

uint64_t sub_1008DD49C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 320));
}

uint64_t sub_1008DD4AC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = v2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 296);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(a1);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, (uint64_t)v3 + *(_QWORD *)(v6 + 312), v7, v9);
  LOBYTE(v6) = (*(uint64_t (**)(void *, uint64_t))(*(_QWORD *)(v6 + 304) + 24))(a2, v7);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if ((v6 & 1) == 0)
    return static Subscribers.Demand.none.getter(v12);
  swift_unknownObjectRetain(a1);
  v13 = a2;
  sub_1008DCC10();
  v15 = static Subscribers.Demand.none.getter(v14);

  swift_unknownObjectRelease(a1);
  return v15;
}

uint64_t sub_1008DD5A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 296) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 312));
}

uint64_t *sub_1008DD5BC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_unknownObjectWeakDestroy(v0 + 2);
  swift_bridgeObjectRelease();
  sub_1008E1C20((uint64_t)(v0 + 6));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 312));
  return v0;
}

uint64_t sub_1008DD610()
{
  uint64_t *v0;

  v0 = sub_1008DD5BC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1008DD630(uint64_t a1)
{
  return sub_1008DD4AC(*(_QWORD *)a1, *(void **)(a1 + 8));
}

double sub_1008DD63C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;

  v1 = *v0;
  Strong = swift_weakLoadStrong(*v0 + 16);
  if (Strong)
  {
    v4 = Strong;
    sub_1008DCA64(v1);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

uint64_t CRLUIPropertyNotifier.AllChanges.description.getter()
{
  return 0x746C6966206F6E28;
}

Swift::Int CRLUIPropertyNotifier.AllChanges.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  return Hasher._finalize()();
}

Swift::Int sub_1008DD70C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  return Hasher._finalize()();
}

Swift::Int sub_1008DD73C()
{
  Swift::Int result;

  result = sub_1004B89D8((uint64_t)&off_101265370);
  static CRLUIPropertyNotifier.KindFilter.invalidation = result;
  return result;
}

uint64_t *CRLUIPropertyNotifier.KindFilter.invalidation.unsafeMutableAddressor()
{
  if (qword_1013DD438 != -1)
    swift_once(&qword_1013DD438, sub_1008DD73C);
  return &static CRLUIPropertyNotifier.KindFilter.invalidation;
}

double static CRLUIPropertyNotifier.KindFilter.invalidation.getter()
{
  double result;

  if (qword_1013DD438 != -1)
    swift_once(&qword_1013DD438, sub_1008DD73C);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static CRLUIPropertyNotifier.KindFilter.invalidation).n128_u64[0];
  return result;
}

BOOL CRLUIPropertyNotifier.KindFilter.accepts(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100623170(*(_DWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind), a2);
}

unint64_t CRLUIPropertyNotifier.KindFilter.description.getter(uint64_t a1)
{
  Swift::String v2;
  unint64_t result;
  uint64_t v4;
  __n128 v5;
  Swift::String v6;
  Swift::String v7;
  int v8;
  unint64_t v9;
  unint64_t v10;

  if (*(_QWORD *)(a1 + 16) != 1)
  {
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v9 = 0xD000000000000010;
    v10 = 0x8000000100FDD940;
    type metadata accessor for CRLChangeKind(0);
    sub_1004B7878(&qword_1013F8CB0, (uint64_t (*)(uint64_t))type metadata accessor for CRLChangeKind, (uint64_t)&unk_100EF21BC);
    v5 = swift_bridgeObjectRetain(a1);
    v6._countAndFlagsBits = Set.description.getter(v5);
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v9 = 0;
  v10 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v2._object = (void *)0x8000000100FDD960;
  v2._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v2);
  result = sub_100857CF8(a1);
  if ((result & 0x100000000) == 0)
  {
    v8 = result;
    type metadata accessor for CRLChangeKind(0);
    _print_unlocked<A, B>(_:_:)(&v8, &v9, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
LABEL_5:
    v7._countAndFlagsBits = 41;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t CRLUIPropertyNotifier.KindFilter.hash(into:)(uint64_t a1, uint64_t a2)
{
  return sub_1008DDBCC(a1, a2, (void (*)(uint64_t, uint64_t))sub_1008DF914);
}

Swift::Int CRLUIPropertyNotifier.KindFilter.hashValue.getter(uint64_t a1)
{
  return sub_1008DDC20(a1, (void (*)(_QWORD *, uint64_t))sub_1008DF914);
}

BOOL sub_1008DD96C(uint64_t a1)
{
  uint64_t *v1;

  return sub_100623170(*(_DWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind), *v1);
}

Swift::Int sub_1008DD984(uint64_t a1, uint64_t a2)
{
  return sub_1008DDD20(a1, a2, (void (*)(_QWORD *, uint64_t))sub_1008DF914);
}

uint64_t sub_1008DD990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008DDD84(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1008DF914);
}

Swift::Int sub_1008DD99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008DDDD4(a1, a2, a3, (void (*)(_QWORD *, uint64_t))sub_1008DF914);
}

unint64_t sub_1008DD9A8()
{
  uint64_t *v0;

  return CRLUIPropertyNotifier.KindFilter.description.getter(*v0);
}

Swift::Int sub_1008DD9B0(Swift::Int *a1, uint64_t *a2)
{
  return _s8Freeform21CRLUIPropertyNotifierC10KindFilterV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, *a2);
}

BOOL CRLUIPropertyNotifier.PropertyFilter.accepts(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (uint64_t *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
                 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v4);
  v6 = sub_1008DE43C(v5, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1008DEAA4);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  swift_release(v6);
  return v7 != 0;
}

uint64_t CRLUIPropertyNotifier.PropertyFilter.description.getter(uint64_t a1)
{
  Swift::String v2;
  uint64_t result;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if (*(_QWORD *)(a1 + 16) != 1)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    v11 = 40;
    v12 = 0xE100000000000000;
    type metadata accessor for CRLChangeProperty(0);
    sub_1004B7878(&qword_1013F8CB8, (uint64_t (*)(uint64_t))type metadata accessor for CRLChangeProperty, (uint64_t)&unk_100EF217C);
    v8 = swift_bridgeObjectRetain(a1);
    v9._countAndFlagsBits = Set.description.getter(v8);
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = 0x8000000100FDD980;
    v7 = 0x1000000000000011;
    goto LABEL_5;
  }
  v11 = 0;
  v12 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v2._countAndFlagsBits = 40;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  result = sub_100857C80(a1);
  if ((v4 & 1) == 0)
  {
    v10 = result;
    type metadata accessor for CRLChangeProperty(0);
    _print_unlocked<A, B>(_:_:)(&v10, &v11, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v6 = 0x8000000100FDD9A0;
    v7 = 0xD000000000000010;
LABEL_5:
    String.append(_:)(*(Swift::String *)&v7);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t CRLUIPropertyNotifier.PropertyFilter.hash(into:)(uint64_t a1, uint64_t a2)
{
  return sub_1008DDBCC(a1, a2, (void (*)(uint64_t, uint64_t))sub_1008DF7AC);
}

uint64_t sub_1008DDBCC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain(a2);
  a3(a1, a2);
  return swift_bridgeObjectRelease(a2);
}

Swift::Int CRLUIPropertyNotifier.PropertyFilter.hashValue.getter(uint64_t a1)
{
  return sub_1008DDC20(a1, (void (*)(_QWORD *, uint64_t))sub_1008DF7AC);
}

Swift::Int sub_1008DDC20(uint64_t a1, void (*a2)(_QWORD *, uint64_t))
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  swift_bridgeObjectRetain(a1);
  a2(v5, a1);
  swift_bridgeObjectRelease(a1);
  return Hasher._finalize()();
}

BOOL sub_1008DDC78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v2 = *v1;
  v3 = (uint64_t *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
                 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v4);
  v6 = sub_1008DE43C(v5, v2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1008DEAA4);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  swift_release(v6);
  return v7 != 0;
}

Swift::Int sub_1008DDD14(uint64_t a1, uint64_t a2)
{
  return sub_1008DDD20(a1, a2, (void (*)(_QWORD *, uint64_t))sub_1008DF7AC);
}

Swift::Int sub_1008DDD20(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  _QWORD v7[9];

  v5 = *v3;
  Hasher.init(_seed:)(v7, 0);
  swift_bridgeObjectRetain(v5);
  a3(v7, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1008DDD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008DDD84(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1008DF7AC);
}

uint64_t sub_1008DDD84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v7;

  v7 = *v4;
  swift_bridgeObjectRetain(v7);
  a4(a1, v7);
  return swift_bridgeObjectRelease(v7);
}

Swift::Int sub_1008DDDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008DDDD4(a1, a2, a3, (void (*)(_QWORD *, uint64_t))sub_1008DF7AC);
}

Swift::Int sub_1008DDDD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  _QWORD v8[9];

  v6 = *v4;
  Hasher.init(_seed:)(v8, a1);
  swift_bridgeObjectRetain(v6);
  a4(v8, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

uint64_t sub_1008DDE28()
{
  uint64_t *v0;

  return CRLUIPropertyNotifier.PropertyFilter.description.getter(*v0);
}

Swift::Int sub_1008DDE30(Swift::Int *a1, uint64_t *a2)
{
  return _s8Freeform21CRLUIPropertyNotifierC14PropertyFilterV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t CRLUIPropertyNotifier.CustomFilter.filter.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain(v0[1]);
  return v1;
}

uint64_t CRLUIPropertyNotifier.CustomFilter.accepts(_:)()
{
  uint64_t (**v0)(void);

  return (*v0)() & 1;
}

uint64_t static CRLUIPropertyNotifier.CustomFilter.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + *(int *)(type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0) + 20);
  return static UUID.== infix(_:_:)(v1);
}

uint64_t CRLUIPropertyNotifier.CustomFilter.hash(into:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

unint64_t CRLUIPropertyNotifier.CustomFilter.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_1004B7878(&qword_1013E49E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 10558;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  return 0xD000000000000017;
}

Swift::Int CRLUIPropertyNotifier.CustomFilter.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_1008DE074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static UUID.== infix(_:_:)(a1 + *(int *)(a3 + 20));
}

uint64_t AnyCancellable.init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject(&unk_101286408, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  return dispatch thunk of AnyCancellable.__allocating_init(_:)(sub_1008E1010, v2);
}

uint64_t sub_1008DE0C4(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v11, 0, 0);
  v3 = *(_QWORD *)(a1 + 16);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    swift_beginAccess(v2, &v10, 1, 0);
    v9 = *v2;
    *v2 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v9);
  }
  if (v3 < 0)
    v8 = *(_QWORD *)(a1 + 16);
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v4 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain(v7);
      }
      AnyCancellable.cancel()();
      swift_release(v7);
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t AnyCancellable.init(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v5 + 32) = a1;
  v9 = v5;
  specialized Array._endMutation()(v5);
  swift_retain(a1);
  sub_100620DA8(a2);
  v6 = swift_allocObject(&unk_101286408, 24, 7);
  *(_QWORD *)(v6 + 16) = v9;
  v7 = dispatch thunk of AnyCancellable.__allocating_init(_:)(sub_1008E1010, v6);
  swift_release(a1);
  return v7;
}

void sub_1008DE2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != __CocoaSet.count.getter(a1))
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = __CocoaSet.contains(_:)();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1008DE3F0(uint64_t a1, uint64_t a2)
{
  return sub_1008DE43C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1008DE660);
}

uint64_t sub_1008DE43C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v5 = isStackAllocationSafe;
  v6 = *(_BYTE *)(a2 + 32);
  v7 = v6 & 0x3F;
  v8 = (1 << v6) + 63;
  v9 = v8 >> 6;
  v10 = 8 * (v8 >> 6);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v8 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    v11 = a3((char *)&v14 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, v5, a2);
    swift_release(a2);
  }
  else
  {
    v12 = (void *)swift_slowAlloc(v10, -1);
    bzero(v12, v10);
    v11 = a3((char *)v12, v9, v5, a2);
    swift_release(a2);
    swift_slowDealloc(v12, -1, -1);
  }
  return v11;
}

uint64_t sub_1008DE5C8(uint64_t a1, uint64_t a2)
{
  return sub_1008DE43C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1008DED04);
}

uint64_t sub_1008DE614(uint64_t a1, uint64_t a2)
{
  return sub_1008DE43C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1008DF130);
}

void sub_1008DE660(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  int64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  BOOL v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  int64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v43 = a2;
  v45 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v54 = (char *)&v43 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 64);
  v46 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v47 = (unint64_t)(v16 + 63) >> 6;
  v52 = a4 + 56;
  v53 = a4;
  v49 = a3;
  v19 = swift_bridgeObjectRetain(a3);
  v44 = 0;
  v20 = 0;
  v48 = v14;
  while (v18)
  {
    v22 = __clz(__rbit64(v18));
    v23 = (v18 - 1) & v18;
    v24 = v22 | (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v7 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    v29(v14, *(_QWORD *)(v49 + 48) + v28 * v24, v6, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
      goto LABEL_37;
    v50 = v23;
    v51 = v20;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v54, v14, v6);
    v30 = v53;
    v31 = *(_QWORD *)(v53 + 40);
    v32 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v33 = dispatch thunk of Hashable._rawHashValue(seed:)(v31, v6, v32);
    v34 = -1 << *(_BYTE *)(v30 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)(v52 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
    {
      v36 = ~v34;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v29)(v10, *(_QWORD *)(v53 + 48) + v35 * v28, v6);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v37 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v54);
        v21 = *(void (**)(char *, uint64_t))(v7 + 8);
        v21(v10, v6);
        if ((v37 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v52 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_6;
      }
      v21(v54, v6);
      v38 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v39 = *(unint64_t *)((char *)v45 + v38);
      *(unint64_t *)((char *)v45 + v38) = v39 | (1 << v35);
      v14 = v48;
      v18 = v50;
      v20 = v51;
      if ((v39 & (1 << v35)) == 0)
      {
        v25 = __OFADD__(v44++, 1);
        if (v25)
          goto LABEL_40;
      }
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t))(v7 + 8);
LABEL_6:
      v21(v54, v6);
      v14 = v48;
      v18 = v50;
      v20 = v51;
    }
  }
  v25 = __OFADD__(v20++, 1);
  if (v25)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v20 >= v47)
    goto LABEL_36;
  v26 = *(_QWORD *)(v46 + 8 * v20);
  if (v26)
  {
LABEL_21:
    v23 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v20 << 6);
    goto LABEL_22;
  }
  v27 = v20 + 1;
  if (v20 + 1 >= v47)
    goto LABEL_36;
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
    goto LABEL_20;
  v27 = v20 + 2;
  if (v20 + 2 >= v47)
    goto LABEL_36;
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
    goto LABEL_20;
  v27 = v20 + 3;
  if (v20 + 3 >= v47)
    goto LABEL_36;
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
    goto LABEL_20;
  v27 = v20 + 4;
  if (v20 + 4 >= v47)
  {
LABEL_36:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v14, 1, 1, v6, v19);
LABEL_37:
    swift_release(v49);
    v40 = v43;
    v41 = v44;
    v42 = v53;
    swift_retain(v53);
    sub_100CD7E88(v45, v40, v41, v42);
    return;
  }
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
  {
LABEL_20:
    v20 = v27;
    goto LABEL_21;
  }
  while (1)
  {
    v20 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v20 >= v47)
      goto LABEL_36;
    v26 = *(_QWORD *)(v46 + 8 * v20);
    ++v27;
    if (v26)
      goto LABEL_21;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

Swift::Int sub_1008DEAA4(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  Swift::UInt v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t i;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31[9];
  int64_t v32;

  v6 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 64;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(a3 + 64);
  v32 = (unint64_t)(v10 + 63) >> 6;
  v13 = a4 + 56;
LABEL_5:
  v30 = v7;
  while (v12)
  {
    v18 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v19 = v18 | (v8 << 6);
LABEL_26:
    v23 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v19);
    Hasher.init(_seed:)(v31, *(_QWORD *)(a4 + 40));
    Hasher._combine(_:)(v23);
    result = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(a4 + 32);
    v25 = result & ~v24;
    v14 = v25 >> 6;
    v15 = 1 << v25;
    if (((1 << v25) & *(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v26 = *(_QWORD *)(a4 + 48);
      if (*(_QWORD *)(v26 + 8 * v25) == v23)
      {
LABEL_7:
        v16 = v14;
        v17 = v6[v14];
        v6[v16] = v15 | v17;
        if ((v15 & v17) == 0)
        {
          v7 = v30 + 1;
          if (!__OFADD__(v30, 1))
            goto LABEL_5;
          __break(1u);
LABEL_35:
          swift_retain(a4);
          return sub_100CD84BC(v6, a2, v30, a4);
        }
      }
      else
      {
        for (i = v25 + 1; ; i = v28 + 1)
        {
          v28 = i & ~v24;
          if (((*(_QWORD *)(v13 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            break;
          if (*(_QWORD *)(v26 + 8 * v28) == v23)
          {
            v14 = v28 >> 6;
            v15 = 1 << v28;
            goto LABEL_7;
          }
        }
      }
    }
  }
  v20 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v20 >= v32)
    goto LABEL_35;
  v21 = *(_QWORD *)(v9 + 8 * v20);
  ++v8;
  if (v21)
    goto LABEL_25;
  v8 = v20 + 1;
  if (v20 + 1 >= v32)
    goto LABEL_35;
  v21 = *(_QWORD *)(v9 + 8 * v8);
  if (v21)
    goto LABEL_25;
  v8 = v20 + 2;
  if (v20 + 2 >= v32)
    goto LABEL_35;
  v21 = *(_QWORD *)(v9 + 8 * v8);
  if (v21)
    goto LABEL_25;
  v8 = v20 + 3;
  if (v20 + 3 >= v32)
    goto LABEL_35;
  v21 = *(_QWORD *)(v9 + 8 * v8);
  if (v21)
  {
LABEL_25:
    v12 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v8 << 6);
    goto LABEL_26;
  }
  v22 = v20 + 4;
  if (v22 >= v32)
    goto LABEL_35;
  v21 = *(_QWORD *)(v9 + 8 * v22);
  if (v21)
  {
    v8 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v8 >= v32)
      goto LABEL_35;
    v21 = *(_QWORD *)(v9 + 8 * v8);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1008DED04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  unint64_t i;
  unint64_t v35;
  id v36;
  char v37;
  unint64_t v38;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  _QWORD v49[5];
  void *v50;

  v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v5 = a3;
    else
      v5 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v6 = __CocoaSet.makeIterator()(v5);
    v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v8 = sub_1008E1BC8();
    v9 = Set.Iterator.init(_cocoa:)(v49, v6, v7, v8);
    v4 = v49[0];
    v43 = v49[1];
    v10 = v49[2];
    v11 = v49[3];
    v12 = v49[4];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a3 + 32);
    v43 = a3 + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain(a3);
    v11 = 0;
  }
  v41 = 0;
  v42 = (unint64_t)(v10 + 64) >> 6;
  v46 = a4 + 56;
  v45 = v4;
LABEL_11:
  v16 = v11;
  v17 = v12;
  while (v4 < 0)
  {
    v19 = __CocoaSet.Iterator.next()(v9);
    if (!v19)
      goto LABEL_48;
    v20 = v19;
    v48 = v19;
    v21 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v50, &v48, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = v50;
    swift_unknownObjectRelease(v20);
    v11 = v16;
    v12 = v17;
    if (!v22)
      goto LABEL_48;
LABEL_36:
    v26 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
    v27 = -1 << *(_BYTE *)(a4 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = 1 << v28;
    if (((1 << v28) & *(_QWORD *)(v46 + 8 * (v28 >> 6))) == 0)
      goto LABEL_12;
    sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v31 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v28);
    v32 = static NSObject.== infix(_:_:)(v31, v22);

    if ((v32 & 1) != 0)
    {

LABEL_44:
      v4 = v45;
      v38 = a1[v29];
      a1[v29] = v30 | v38;
      v16 = v11;
      v17 = v12;
      if ((v30 & v38) == 0)
      {
        if (!__OFADD__(v41++, 1))
          goto LABEL_11;
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      v33 = ~v27;
      for (i = v28 + 1; ; i = v35 + 1)
      {
        v35 = i & v33;
        if (((*(_QWORD *)(v46 + (((i & v33) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v33)) & 1) == 0)
          break;
        v36 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v35);
        v37 = static NSObject.== infix(_:_:)(v36, v22);

        if ((v37 & 1) != 0)
        {

          v29 = v35 >> 6;
          v30 = 1 << v35;
          goto LABEL_44;
        }
      }
LABEL_12:

      v16 = v11;
      v4 = v45;
      v17 = v12;
    }
  }
  if (v17)
  {
    v12 = (v17 - 1) & v17;
    v18 = __clz(__rbit64(v17)) | (v16 << 6);
    v11 = v16;
LABEL_35:
    v22 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    if (!v22)
      goto LABEL_48;
    goto LABEL_36;
  }
  v23 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v23 >= v42)
      goto LABEL_48;
    v24 = *(_QWORD *)(v43 + 8 * v23);
    v11 = v16 + 1;
    if (!v24)
    {
      v11 = v16 + 2;
      if (v16 + 2 >= v42)
        goto LABEL_48;
      v24 = *(_QWORD *)(v43 + 8 * v11);
      if (!v24)
      {
        v11 = v16 + 3;
        if (v16 + 3 >= v42)
          goto LABEL_48;
        v24 = *(_QWORD *)(v43 + 8 * v11);
        if (!v24)
        {
          v11 = v16 + 4;
          if (v16 + 4 >= v42)
            goto LABEL_48;
          v24 = *(_QWORD *)(v43 + 8 * v11);
          if (!v24)
          {
            v11 = v16 + 5;
            if (v16 + 5 >= v42)
              goto LABEL_48;
            v24 = *(_QWORD *)(v43 + 8 * v11);
            if (!v24)
            {
              v25 = v16 + 6;
              while (v42 != v25)
              {
                v24 = *(_QWORD *)(v43 + 8 * v25++);
                if (v24)
                {
                  v11 = v25 - 1;
                  goto LABEL_34;
                }
              }
LABEL_48:
              sub_1004D284C(v4);
              swift_retain(a4);
              sub_100CD84B0(a1, a2, v41, a4);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v12 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v11 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_1008DF130(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  unint64_t i;
  unint64_t v36;
  id v37;
  char v38;
  unint64_t v39;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  _QWORD v50[5];
  void *v51;

  v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v5 = a3;
    else
      v5 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v6 = __CocoaSet.makeIterator()(v5);
    v7 = type metadata accessor for CRLCollaborationParticipant(0);
    v8 = sub_1004B7878((unint64_t *)&unk_1013E8E30, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&protocol conformance descriptor for NSObject);
    v9 = Set.Iterator.init(_cocoa:)(v50, v6, v7, v8);
    v4 = v50[0];
    v44 = v50[1];
    v10 = v50[2];
    v11 = v50[3];
    v12 = v50[4];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a3 + 32);
    v44 = a3 + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain(a3);
    v11 = 0;
  }
  v42 = 0;
  v43 = (unint64_t)(v10 + 64) >> 6;
  v47 = a4 + 56;
  v46 = v4;
LABEL_11:
  v16 = v11;
  v17 = v12;
  while (v4 < 0)
  {
    v20 = __CocoaSet.Iterator.next()(v9);
    if (!v20)
      goto LABEL_48;
    v21 = v20;
    v49 = v20;
    v22 = type metadata accessor for CRLCollaborationParticipant(0);
    swift_unknownObjectRetain(v21);
    swift_dynamicCast(&v51, &v49, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
    v23 = v51;
    swift_unknownObjectRelease(v21);
    v11 = v16;
    v18 = v17;
    if (!v23)
      goto LABEL_48;
LABEL_36:
    v27 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
    v28 = -1 << *(_BYTE *)(a4 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    v31 = 1 << v29;
    if (((1 << v29) & *(_QWORD *)(v47 + 8 * (v29 >> 6))) == 0)
      goto LABEL_12;
    type metadata accessor for CRLCollaborationParticipant(0);
    v32 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v29);
    v33 = static NSObject.== infix(_:_:)(v32, v23);

    if ((v33 & 1) != 0)
    {

LABEL_44:
      v4 = v46;
      v39 = a1[v30];
      a1[v30] = v31 | v39;
      v16 = v11;
      v12 = v18;
      v17 = v18;
      if ((v31 & v39) == 0)
      {
        if (!__OFADD__(v42++, 1))
          goto LABEL_11;
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      v34 = ~v28;
      for (i = v29 + 1; ; i = v36 + 1)
      {
        v36 = i & v34;
        if (((*(_QWORD *)(v47 + (((i & v34) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v34)) & 1) == 0)
          break;
        v37 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v36);
        v38 = static NSObject.== infix(_:_:)(v37, v23);

        if ((v38 & 1) != 0)
        {

          v30 = v36 >> 6;
          v31 = 1 << v36;
          goto LABEL_44;
        }
      }
LABEL_12:

      v16 = v11;
      v4 = v46;
      v17 = v18;
    }
  }
  if (v17)
  {
    v18 = (v17 - 1) & v17;
    v19 = __clz(__rbit64(v17)) | (v16 << 6);
    v11 = v16;
LABEL_35:
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v19);
    if (!v23)
      goto LABEL_48;
    goto LABEL_36;
  }
  v24 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v24 >= v43)
      goto LABEL_48;
    v25 = *(_QWORD *)(v44 + 8 * v24);
    v11 = v16 + 1;
    if (!v25)
    {
      v11 = v16 + 2;
      if (v16 + 2 >= v43)
        goto LABEL_48;
      v25 = *(_QWORD *)(v44 + 8 * v11);
      if (!v25)
      {
        v11 = v16 + 3;
        if (v16 + 3 >= v43)
          goto LABEL_48;
        v25 = *(_QWORD *)(v44 + 8 * v11);
        if (!v25)
        {
          v11 = v16 + 4;
          if (v16 + 4 >= v43)
            goto LABEL_48;
          v25 = *(_QWORD *)(v44 + 8 * v11);
          if (!v25)
          {
            v11 = v16 + 5;
            if (v16 + 5 >= v43)
              goto LABEL_48;
            v25 = *(_QWORD *)(v44 + 8 * v11);
            if (!v25)
            {
              v26 = v16 + 6;
              while (v43 != v26)
              {
                v25 = *(_QWORD *)(v44 + 8 * v26++);
                if (v25)
                {
                  v11 = v26 - 1;
                  goto LABEL_34;
                }
              }
LABEL_48:
              sub_1004D284C(v4);
              swift_retain(a4);
              sub_100CD9390(a1, a2, v42, a4);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v18 = (v25 - 1) & v25;
    v19 = __clz(__rbit64(v25)) + (v11 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_1008DF544(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::UInt v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  void *v24;
  id v25;
  Swift::Int v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[6];

  v3 = *((_QWORD *)a1 + 8);
  v4 = a1[1];
  v33 = *a1;
  v34 = v4;
  v5 = a1[3];
  v35 = a1[2];
  v36 = v5;
  v37 = v3;
  v6 = Hasher._finalize()();
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = type metadata accessor for CRLBoardItem(0);
    v10 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v11 = Set.Iterator.init(_cocoa:)(v38, v8, v9, v10);
    a2 = v38[0];
    v12 = v38[1];
    v13 = v38[2];
    v14 = v38[3];
    v15 = v38[4];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a2 + 32);
    v12 = a2 + 56;
    v13 = ~v16;
    v17 = -v16;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v15 = v18 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain(a2);
    v14 = 0;
  }
  v19 = 0;
  v20 = (unint64_t)(v13 + 64) >> 6;
  while (a2 < 0)
  {
    v29 = __CocoaSet.Iterator.next()(v11);
    if (!v29)
      goto LABEL_29;
    v31 = v29;
    v30 = type metadata accessor for CRLBoardItem(0);
    swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v30, 7);
    v24 = v32;
    if (!v32)
      goto LABEL_30;
    v23 = v14;
    v21 = v15;
LABEL_13:
    v26 = NSObject._rawHashValue(seed:)(v6);

    v19 ^= v26;
    v14 = v23;
    v15 = v21;
  }
  if (v15)
  {
    v21 = (v15 - 1) & v15;
    v22 = __clz(__rbit64(v15)) | (v14 << 6);
    v23 = v14;
LABEL_12:
    v24 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v22);
    v32 = v24;
    v25 = v24;
    if (!v24)
      goto LABEL_30;
    goto LABEL_13;
  }
  v23 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v23 >= v20)
      goto LABEL_29;
    v27 = *(_QWORD *)(v12 + 8 * v23);
    if (!v27)
    {
      v23 = v14 + 2;
      if (v14 + 2 >= v20)
        goto LABEL_29;
      v27 = *(_QWORD *)(v12 + 8 * v23);
      if (!v27)
      {
        v28 = v14 + 3;
        while (v20 != v28)
        {
          v27 = *(_QWORD *)(v12 + 8 * v28++);
          if (v27)
          {
            v23 = v28 - 1;
            goto LABEL_25;
          }
        }
LABEL_29:
        v32 = 0;
LABEL_30:
        sub_1004D284C(a2);
        Hasher._combine(_:)(v19);
        return;
      }
    }
LABEL_25:
    v21 = (v27 - 1) & v27;
    v22 = __clz(__rbit64(v27)) + (v23 << 6);
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1008DF7AC(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  Swift::Int v6;
  Swift::UInt v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::UInt v16;
  unint64_t v18;
  int64_t v19;
  uint64_t v20[9];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v3 = *((_QWORD *)a1 + 8);
  v4 = a1[1];
  v21 = *a1;
  v22 = v4;
  v5 = a1[3];
  v23 = a1[2];
  v24 = v5;
  v25 = v3;
  v6 = Hasher._finalize()();
  v7 = 0;
  v8 = 0;
  v9 = a2 + 56;
  v10 = 1 << *(_BYTE *)(a2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v8++, 1))
      goto LABEL_19;
    if (v8 >= v13)
    {
LABEL_17:
      Hasher._combine(_:)(v7);
      return;
    }
    v18 = *(_QWORD *)(v9 + 8 * v8);
    if (!v18)
      break;
LABEL_16:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_5:
    v16 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v15);
    Hasher.init(_seed:)(v20, v6);
    Hasher._combine(_:)(v16);
    v7 ^= Hasher._finalize()();
  }
  v19 = v8 + 1;
  if (v8 + 1 >= v13)
    goto LABEL_17;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    ++v8;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v13)
      goto LABEL_17;
    v18 = *(_QWORD *)(v9 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_1008DF914(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  Swift::Int v6;
  Swift::UInt v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::UInt32 v16;
  unint64_t v18;
  int64_t v19;
  uint64_t v20[9];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v3 = *((_QWORD *)a1 + 8);
  v4 = a1[1];
  v21 = *a1;
  v22 = v4;
  v5 = a1[3];
  v23 = a1[2];
  v24 = v5;
  v25 = v3;
  v6 = Hasher._finalize()();
  v7 = 0;
  v8 = 0;
  v9 = a2 + 56;
  v10 = 1 << *(_BYTE *)(a2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v8++, 1))
      goto LABEL_19;
    if (v8 >= v13)
    {
LABEL_17:
      Hasher._combine(_:)(v7);
      return;
    }
    v18 = *(_QWORD *)(v9 + 8 * v8);
    if (!v18)
      break;
LABEL_16:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_5:
    v16 = *(_DWORD *)(*(_QWORD *)(a2 + 48) + 4 * v15);
    Hasher.init(_seed:)(v20, v6);
    Hasher._combine(_:)(v16);
    v7 ^= Hasher._finalize()();
  }
  v19 = v8 + 1;
  if (v8 + 1 >= v13)
    goto LABEL_17;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    ++v8;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v13)
      goto LABEL_17;
    v18 = *(_QWORD *)(v9 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_1008DFA7C(__int128 *a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Swift::UInt v18;
  int64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  int64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[9];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v4 = (int *)_s17CategoryViewModelVMa(0);
  v41 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - v8;
  v10 = *((_QWORD *)a1 + 8);
  v11 = a1[1];
  v44 = *a1;
  v45 = v11;
  v12 = a1[2];
  v13 = a1[3];
  v37[1] = a1;
  v46 = v12;
  v47 = v13;
  v48 = v10;
  v40 = Hasher._finalize()();
  v14 = *(_QWORD *)(a2 + 56);
  v39 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v42 = a2;
  swift_bridgeObjectRetain(a2);
  v18 = 0;
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v24 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v25 = v24 | (v19 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v19++, 1))
      goto LABEL_22;
    if (v19 >= v38)
    {
LABEL_20:
      swift_release(v42);
      Hasher._combine(_:)(v18);
      return;
    }
    v27 = *(_QWORD *)(v39 + 8 * v19);
    if (!v27)
      break;
LABEL_17:
    v17 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_18:
    sub_1004B8460(*(_QWORD *)(v42 + 48) + *(_QWORD *)(v41 + 72) * v25, (uint64_t)v9, _s17CategoryViewModelVMa);
    sub_1004B84E0((uint64_t)v9, (uint64_t)v6, _s17CategoryViewModelVMa);
    Hasher.init(_seed:)(v43, v40);
    v29 = type metadata accessor for UUID(0);
    v30 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v43, v29, v30);
    v31 = &v6[v4[5]];
    v32 = *(_QWORD *)v31;
    v33 = *((_QWORD *)v31 + 1);
    swift_bridgeObjectRetain(v33);
    String.hash(into:)(v43, v32, v33);
    swift_bridgeObjectRelease();
    v34 = &v6[v4[6]];
    v35 = *((_QWORD *)v34 + 1);
    if (v35)
    {
      v36 = *(_QWORD *)v34;
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v35);
      String.hash(into:)(v43, v36, v35);
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v20 = &v6[v4[7]];
    v21 = *(_QWORD *)v20;
    v22 = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v43, v21, v22);
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(*(_QWORD *)&v6[v4[8]]);
    v23 = Hasher._finalize()();
    sub_1004B84A4((uint64_t)v6, _s17CategoryViewModelVMa);
    v18 ^= v23;
  }
  v28 = v19 + 1;
  if (v19 + 1 >= v38)
    goto LABEL_20;
  v27 = *(_QWORD *)(v39 + 8 * v28);
  if (v27)
  {
    ++v19;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v19 >= v38)
      goto LABEL_20;
    v27 = *(_QWORD *)(v39 + 8 * v19);
    ++v28;
    if (v27)
      goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_1008DFD9C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];
  _BYTE v11[40];
  _BYTE v12[24];
  _BYTE v13[24];
  uint64_t v14;
  _QWORD v15[5];

  v15[3] = sub_1004B804C(&qword_1013F9310);
  v15[4] = sub_1004CBA30(&qword_1013F9318, &qword_1013F9310, (uint64_t)&unk_100F05688);
  v15[0] = a1;
  v4 = a2 + 48;
  swift_beginAccess(v4, v12, 0, 0);
  sub_1004CB7BC(v4, (uint64_t)v13, &qword_1013F91D0);
  v5 = v14;
  v6 = a1;
  sub_1008E1C20((uint64_t)v13);
  if (v5)
  {
    sub_1008DA424();
  }
  else
  {
    sub_1004E90B0((uint64_t)v15, (uint64_t)v13);
    sub_1004C4938((uint64_t)v13, (uint64_t)v11, &qword_1013F91D0);
    swift_beginAccess(v4, v10, 33, 0);
    sub_1008E1CA8((uint64_t)v11, v4);
    v7 = swift_endAccess(v10);
    v8 = static Subscribers.Demand.unlimited.getter(v7);
    sub_1006CDFFC(v8);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
}

unint64_t sub_1008DFEA8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F5180);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_100843260(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_100843260(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008DFF9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t result;
  char v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  __int128 v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F91A0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v14 = *(_OWORD *)(a1 + 32);
  result = sub_100842E60(*(_QWORD *)(a1 + 32));
  if ((v5 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(result);
    return (unint64_t)v3;
  }
  v6 = (__int128 *)(a1 + 48);
  v7 = v1 - 1;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v8 = *((_QWORD *)&v14 + 1);
    *(_QWORD *)(v3[6] + 8 * result) = v14;
    *(_QWORD *)(v3[7] + 8 * result) = *((_QWORD *)&v14 + 1);
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    result = *((_QWORD *)&v14 + 1);
    v3[2] = v11;
    if (!v7)
      goto LABEL_8;
    v12 = *v6++;
    v14 = v12;
    swift_bridgeObjectRetain(v8);
    result = sub_100842E60(v12);
    --v7;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E00A0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F9198);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = sub_100842E60(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain(v4);
    result = sub_100842E60(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E019C(_QWORD *a1)
{
  return sub_1008E06F8(a1, &qword_1013F5090);
}

unint64_t sub_1008E01A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013F4E68);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = a1 + 32; ; i += 40)
    {
      sub_1004CB7BC(i, (uint64_t)&v11, &qword_1013F9158);
      v5 = v11;
      result = sub_100843260(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      result = sub_1004C4938((uint64_t)&v12, v3[7] + 32 * result, &qword_1013E0230);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1008E02BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  void *v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F9228);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = sub_1008438E0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = (void *)*v8;
    v14 = v5;
    result = sub_1008438E0(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E03B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t result;
  char v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  __int128 v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F4E70);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v14 = *(_OWORD *)(a1 + 32);
  result = sub_100842E60(*(_QWORD *)(a1 + 32));
  if ((v5 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(result);
    return (unint64_t)v3;
  }
  v6 = (__int128 *)(a1 + 48);
  v7 = v1 - 1;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v8 = *((_QWORD *)&v14 + 1);
    *(_QWORD *)(v3[6] + 8 * result) = v14;
    *(_QWORD *)(v3[7] + 8 * result) = *((_QWORD *)&v14 + 1);
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    result = *((_QWORD *)&v14 + 1);
    v3[2] = v11;
    if (!v7)
      goto LABEL_8;
    v12 = *v6++;
    v14 = v12;
    swift_retain(v8);
    result = sub_100842E60(v12);
    --v7;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E04B8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F5098);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  result = sub_100842E60(v5);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v4);
    swift_retain(v6);
    return (unint64_t)v3;
  }
  v10 = a1 + 11;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v11 = (_QWORD *)(v3[7] + 24 * result);
    *v11 = v4;
    v11[1] = v6;
    v11[2] = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    if (!--v1)
      goto LABEL_8;
    v15 = v10 + 4;
    v5 = *(v10 - 3);
    v16 = *(v10 - 2);
    v17 = *(v10 - 1);
    v7 = *v10;
    swift_retain(v4);
    swift_retain(v6);
    result = sub_100842E60(v5);
    v10 = v15;
    v6 = v17;
    v4 = v16;
    if ((v18 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E05E0(double *a1)
{
  uint64_t v1;
  _QWORD *v3;
  double v4;
  double v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  double *v9;
  double *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  double *v14;
  double v15;
  char v16;

  v1 = *((_QWORD *)a1 + 2);
  if (!v1)
    return (unint64_t)_swiftEmptyDictionarySingleton;
  sub_1004B804C(&qword_1013F91B8);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v6 = *((_QWORD *)a1 + 5);
  v5 = a1[6];
  result = sub_100843D38(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(*(_QWORD *)&v5);
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(double *)(v3[6] + 8 * result) = v4;
    v10 = (double *)(v3[7] + 16 * result);
    *(_QWORD *)v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v6 = *((_QWORD *)v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain(*(_QWORD *)&v5);
    result = sub_100843D38(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E06EC(_QWORD *a1)
{
  return sub_1008E06F8(a1, (uint64_t *)&unk_101405F30);
}

unint64_t sub_1008E06F8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v2 = a1[2];
  if (!v2)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_1004B804C(a2);
  v4 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v6 = a1[4];
  v5 = a1[5];
  result = sub_100842E60(v6);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v5);
    return (unint64_t)v4;
  }
  v9 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v4[6] + v10) = v6;
    *(_QWORD *)(v4[7] + v10) = v5;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v4[2] = v13;
    if (!--v2)
      goto LABEL_8;
    v14 = v9 + 2;
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_retain(v5);
    result = sub_100842E60(v6);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1008E07F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1004B804C(&qword_1013F92A8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_1004B804C(&qword_1013F92B0);
    v7 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v6);
    v8 = &v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1004CB7BC(v9, (uint64_t)v5, &qword_1013F92A8);
      v11 = *v5;
      result = sub_1008440F4(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v7[6] + result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for DisplayRepresentation(0);
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

id sub_1008E0958(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  objc_super v29;
  _BYTE v30[24];

  v9 = *(_QWORD *)((swift_isaMask & *v4) + 0x70);
  v10 = type metadata accessor for CRLUnfairLock();
  v11 = swift_allocObject(v10, 24, 7);
  v12 = v4;
  v13 = (_DWORD *)swift_slowAlloc(4, -1);
  *v13 = 0;
  *(_QWORD *)(v11 + 16) = v13;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)((char *)v4 + v9) = v11;
  v14 = *(_QWORD *)((swift_isaMask & *v12) + 0x78);
  v15 = type metadata accessor for CRLUnfairRecursiveLock();
  v16 = swift_allocObject(v15, 24, 7);
  v17 = (_QWORD *)swift_slowAlloc(8, -1);
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)((char *)v12 + v14) = v16;
  v18 = *(_QWORD *)((swift_isaMask & *v12) + 0x88);
  *(_QWORD *)((char *)v12 + v18) = 0;
  v19 = (char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x90);
  *(_QWORD *)v19 = 0;
  v19[8] = -1;
  v20 = (_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x98));
  *v20 = 0;
  *(_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x80)) = 0;
  v21 = *(void **)((char *)v12 + v18);
  *(_QWORD *)((char *)v12 + v18) = a1;
  v22 = a1;

  v23 = *(_QWORD *)v19;
  *(_QWORD *)v19 = a2;
  v24 = v19[8];
  v19[8] = a3 & 1;
  sub_1006CD8A8(a2, a3 & 1);
  sub_1006CF25C(v23, v24);
  swift_beginAccess(v20, v30, 1, 0);
  v25 = *v20;
  *v20 = a4;
  swift_retain(a4);

  swift_release(v25);
  v29.receiver = v12;
  v29.super_class = (Class)sub_1004B804C(&qword_1013F9320);
  v27 = objc_msgSendSuper2(&v29, "init");
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v22, "addObserver:forChangeSourceOfClass:", v27, swift_getObjCClassFromMetadata(a2, v26));

  }
  else
  {
    objc_msgSend(v22, "addObserver:forChangeSource:", v27, a2);

    sub_1006CED34(a2, 0);
  }
  return v27;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.PropertySubscription()
{
  return objc_opt_self(_TtCC8Freeform21CRLUIPropertyNotifierP33_BA1A216F6CED8A690F545ADB83AEB73320PropertySubscription);
}

uint64_t *sub_1008E0BB0(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3;
  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))((uint64_t)v4 + *(_QWORD *)(*v4 + 312), a2, v9);
  type metadata accessor for CRLUIPropertyNotifier();
  v10 = *(_QWORD *)(v8 + 304);
  swift_retain(v4);
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 320)) = sub_1008DC6AC(a1, a2, v9, v10);
  swift_release(v4);
  v4[10] = 0;
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  swift_unknownObjectWeakInit(v4 + 2);
  v4[3] = sub_1008E04B8(_swiftEmptyArrayStorage);
  v4[4] = 0;
  *((_BYTE *)v4 + 40) = 1;
  swift_unknownObjectWeakAssign(v4 + 2, a3);
  return v4;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.CustomFilter(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F9058;
  if (!qword_1013F9058)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUIPropertyNotifier.CustomFilter);
  return result;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLUIPropertyNotifier.PublisherSubscriber);
}

uint64_t sub_1008E0CDC(Swift::UInt a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, uint64_t, __n128))
{
  uint64_t v4;
  __n128 v9;
  _OWORD v11[4];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  *(_QWORD *)(v4 + 88) = a2;
  Hasher.init()(v11);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain(a2);
  v9 = swift_retain(v4);
  a4(v11, a2, v9);
  v15 = v11[2];
  v16 = v11[3];
  v17 = v12;
  v13 = v11[0];
  v14 = v11[1];
  *(_QWORD *)(v4 + 96) = Hasher.finalize()();
  swift_release(v4);
  *(_QWORD *)(v4 + 80) = 0;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  swift_unknownObjectWeakInit(v4 + 16);
  *(_QWORD *)(v4 + 24) = sub_1008E04B8(_swiftEmptyArrayStorage);
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 1;
  swift_unknownObjectWeakAssign(v4 + 16, a3);
  return v4;
}

uint64_t sub_1008E0DD8(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[4];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  sub_1004B8460(a2, v3 + *(_QWORD *)(*(_QWORD *)v3 + 312), type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  Hasher.init()(v10);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter(0);
  v7 = type metadata accessor for UUID(0);
  v8 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  swift_retain(v3);
  dispatch thunk of Hashable.hash(into:)(v10, v7, v8);
  v14 = v10[2];
  v15 = v10[3];
  v16 = v11;
  v12 = v10[0];
  v13 = v10[1];
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 320)) = Hasher.finalize()();
  swift_release(v3);
  *(_QWORD *)(v3 + 80) = 0;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  swift_unknownObjectWeakInit(v3 + 16);
  *(_QWORD *)(v3 + 24) = sub_1008E04B8(_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = 1;
  swift_unknownObjectWeakAssign(v3 + 16, a3);
  sub_1004B84A4(a2, type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  return v3;
}

uint64_t sub_1008E0F40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  swift_unknownObjectWeakInit(v1 + 16);
  *(_QWORD *)(v1 + 24) = sub_1008E04B8(_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  swift_unknownObjectWeakAssign(v1 + 16, a1);
  return v1;
}

uint64_t sub_1008E0FA8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber(0, v1[27], v1[28], v1[29]);
  swift_allocObject(v3, 88, 7);
  return sub_1008E0F40(a1);
}

uint64_t sub_1008E0FEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008E1010()
{
  uint64_t v0;

  return sub_1008DE0C4(v0);
}

uint64_t sub_1008E1018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008E11F4(a1, a2, a3, (uint64_t (*)(void))sub_1008E102C, (uint64_t (*)(void))sub_1008E1070);
}

unint64_t sub_1008E102C()
{
  unint64_t result;

  result = qword_1013F8CC0;
  if (!qword_1013F8CC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.AllChanges, &type metadata for CRLUIPropertyNotifier.AllChanges);
    atomic_store(result, (unint64_t *)&qword_1013F8CC0);
  }
  return result;
}

unint64_t sub_1008E1070()
{
  unint64_t result;

  result = qword_1013F8CC8;
  if (!qword_1013F8CC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.AllChanges, &type metadata for CRLUIPropertyNotifier.AllChanges);
    atomic_store(result, (unint64_t *)&qword_1013F8CC8);
  }
  return result;
}

unint64_t sub_1008E10B8()
{
  unint64_t result;

  result = qword_1013F8CD0;
  if (!qword_1013F8CD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.AllChanges, &type metadata for CRLUIPropertyNotifier.AllChanges);
    atomic_store(result, (unint64_t *)&qword_1013F8CD0);
  }
  return result;
}

uint64_t sub_1008E10FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008E11F4(a1, a2, a3, (uint64_t (*)(void))sub_1008E1110, (uint64_t (*)(void))sub_1008E1154);
}

unint64_t sub_1008E1110()
{
  unint64_t result;

  result = qword_1013F8CD8;
  if (!qword_1013F8CD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.KindFilter, &type metadata for CRLUIPropertyNotifier.KindFilter);
    atomic_store(result, (unint64_t *)&qword_1013F8CD8);
  }
  return result;
}

unint64_t sub_1008E1154()
{
  unint64_t result;

  result = qword_1013F8CE0;
  if (!qword_1013F8CE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.KindFilter, &type metadata for CRLUIPropertyNotifier.KindFilter);
    atomic_store(result, (unint64_t *)&qword_1013F8CE0);
  }
  return result;
}

unint64_t sub_1008E119C()
{
  unint64_t result;

  result = qword_1013F8CE8;
  if (!qword_1013F8CE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.KindFilter, &type metadata for CRLUIPropertyNotifier.KindFilter);
    atomic_store(result, (unint64_t *)&qword_1013F8CE8);
  }
  return result;
}

uint64_t sub_1008E11E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008E11F4(a1, a2, a3, (uint64_t (*)(void))sub_1008E1224, (uint64_t (*)(void))sub_1008E1268);
}

uint64_t sub_1008E11F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1008E1224()
{
  unint64_t result;

  result = qword_1013F8CF0;
  if (!qword_1013F8CF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.PropertyFilter, &type metadata for CRLUIPropertyNotifier.PropertyFilter);
    atomic_store(result, (unint64_t *)&qword_1013F8CF0);
  }
  return result;
}

unint64_t sub_1008E1268()
{
  unint64_t result;

  result = qword_1013F8CF8;
  if (!qword_1013F8CF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.PropertyFilter, &type metadata for CRLUIPropertyNotifier.PropertyFilter);
    atomic_store(result, (unint64_t *)&qword_1013F8CF8);
  }
  return result;
}

unint64_t sub_1008E12B0()
{
  unint64_t result;

  result = qword_1013F8D00;
  if (!qword_1013F8D00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLUIPropertyNotifier.PropertyFilter, &type metadata for CRLUIPropertyNotifier.PropertyFilter);
    atomic_store(result, (unint64_t *)&qword_1013F8D00);
  }
  return result;
}

uint64_t sub_1008E12F4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013F8D08, type metadata accessor for CRLUIPropertyNotifier.CustomFilter, (uint64_t)&protocol conformance descriptor for CRLUIPropertyNotifier.CustomFilter);
  result = sub_1004B7878(&qword_1013F8D10, type metadata accessor for CRLUIPropertyNotifier.CustomFilter, (uint64_t)&protocol conformance descriptor for CRLUIPropertyNotifier.CustomFilter);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1008E1350()
{
  return sub_1004B7878(&qword_1013F8D18, type metadata accessor for CRLUIPropertyNotifier.CustomFilter, (uint64_t)&protocol conformance descriptor for CRLUIPropertyNotifier.CustomFilter);
}

uint64_t type metadata accessor for CRLUIPropertyNotifier()
{
  return objc_opt_self(_TtC8Freeform21CRLUIPropertyNotifier);
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.AnySubscriber()
{
  return objc_opt_self(_TtCC8Freeform21CRLUIPropertyNotifierP33_BA1A216F6CED8A690F545ADB83AEB73313AnySubscriber);
}

uint64_t sub_1008E13BC(uint64_t a1)
{
  const char *v2;

  v2 = "(";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 240);
}

uint64_t sub_1008E13FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 296));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 312);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.ChangeSubscriber(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLUIPropertyNotifier.ChangeSubscriber);
}

ValueMetadata *type metadata accessor for CRLUIPropertyNotifier.AllChanges()
{
  return &type metadata for CRLUIPropertyNotifier.AllChanges;
}

ValueMetadata *type metadata accessor for CRLUIPropertyNotifier.KindFilter()
{
  return &type metadata for CRLUIPropertyNotifier.KindFilter;
}

ValueMetadata *type metadata accessor for CRLUIPropertyNotifier.PropertyFilter()
{
  return &type metadata for CRLUIPropertyNotifier.PropertyFilter;
}

_QWORD *initializeBufferWithCopyOfBuffer for CRLUIPropertyNotifier.CustomFilter(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain(v6);
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CRLUIPropertyNotifier.CustomFilter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for CRLUIPropertyNotifier.CustomFilter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for CRLUIPropertyNotifier.CustomFilter(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008E1750);
}

uint64_t sub_1008E1750(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008E17D8);
}

char *sub_1008E17D8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1008E184C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_1008E18C4(_QWORD *a1)
{
  if (a1[3] >= 0xFFFFFFFFuLL)
    return (_QWORD *)_s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return a1;
}

uint64_t initializeWithCopy for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_1004EA5C8((_QWORD *)a1, a2);
  return a1;
}

uint64_t assignWithTake for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1008E1A1C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t sub_1008E1A70(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_1008E1AD4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1008E1AEC(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLUIPropertyNotifier.PublisherSubscriber.Status);
}

uint64_t sub_1008E1B24(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100F15C38, a1);
}

uint64_t sub_1008E1B34(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 232);
}

uint64_t sub_1008E1B3C()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  _QWORD v5[3];
  __int128 v6;

  v1 = *v0;
  sub_1008DD24C();
  memset(v5, 0, sizeof(v5));
  v6 = xmmword_100F02C20;
  swift_beginAccess(v0 + 6, v4, 33, 0);
  v2 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status(0, v1[27], v1[28], v1[29]);
  (*(void (**)(uint64_t **, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 40))(v0 + 6, v5, v2);
  return swift_endAccess(v4);
}

unint64_t sub_1008E1BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1778;
  if (!qword_1013E1778)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1778);
  }
  return result;
}

uint64_t sub_1008E1C20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F91D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1008E1C60()
{
  uint64_t v0;

  sub_1008DCE48(v0);
}

uint64_t sub_1008E1C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008E1C78(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008E1C80(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 24);
  return a1;
}

uint64_t sub_1008E1CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F91D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CRLTipStencilLibraryFull()
{
  return &type metadata for CRLTipStencilLibraryFull;
}

uint64_t sub_1008E1D00(uint64_t a1)
{
  return sub_1008E1D98(a1, qword_10147FDA0, 0xD000000000000019, 0x8000000100FB9650);
}

uint64_t sub_1008E1D24(uint64_t a1)
{
  return sub_1008E1D98(a1, qword_10147FDB8, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_1008E1D48(uint64_t a1)
{
  return sub_1008E1D98(a1, qword_10147FDD0, 0x746361706D6F632BLL, 0xEE0074756F79614CLL);
}

uint64_t sub_1008E1D74(uint64_t a1)
{
  return sub_1008E1D98(a1, qword_10147FDE8, 0xD000000000000013, 0x8000000100FB9610);
}

uint64_t sub_1008E1D98(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipStencilLibraryFull, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipStencilLibraryFull, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1008E1E38()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v0, qword_10147FE00);
  sub_1004F2A1C(v0, (uint64_t)qword_10147FE00);
  return Tips.Event.init<>(id:)(0xD000000000000026, 0x8000000100FDDC90);
}

uint64_t sub_1008E1EA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[15];
  char v16;

  v4 = sub_1004B804C(&qword_1013E6DF8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C(&qword_1013E6E00);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1004CBA30(&qword_1013E6E08, &qword_1013E6E00, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v8, v12);
  v16 = 0;
  static PredicateExpressions.build_Arg<A>(_:)(&v16, &type metadata for Bool);
  a2[3] = sub_1004B804C(&qword_1013E6E10);
  a2[4] = sub_1005EA7E4();
  sub_10050D1B0(a2);
  v13 = sub_1004CBA30(&qword_1013E6E30, &qword_1013E6DF8, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v11, v7, v8, v4, v12, v13, &protocol witness table for Bool);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1008E2034@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  __chkstk_darwin(v3);
  v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v62 = v6;
  v7 = __chkstk_darwin(v5);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.DonationTimeRange(0, v7);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E6D88);
  v50 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E6D90);
  v51 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1013E6D98);
  v23 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  v55 = v23;
  __chkstk_darwin(v22);
  v49 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v12, v25);
  KeyPath = swift_getKeyPath("0FS");
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v12, v25);
  v27 = swift_release(KeyPath);
  v28 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
  static Tips.DonationTimeRange.day.getter(v28);
  v29 = type metadata accessor for Tips.EmptyDonation(0);
  v30 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v31 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v32 = sub_1005EA664();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)(v18, v11, v29, v16, v30, v31, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v16);
  v33 = swift_getKeyPath(byte_100F15E38);
  v34 = sub_1004CBA30(&qword_1013E6DB8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
  v35 = v49;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, v33, v19, v34);
  v36 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v21, v19, v36);
  v63 = 1;
  v37 = v56;
  static PredicateExpressions.build_Arg<A>(_:)(&v63, &type metadata for Int);
  v39 = v57;
  v38 = v58;
  v40 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v59);
  v41 = sub_1004B804C(&qword_1013E6DC0);
  v42 = v60;
  v60[3] = v41;
  v42[4] = sub_1005EA6E4();
  sub_10050D1B0(v42);
  v43 = sub_1004CBA30(&qword_1013E6DE8, &qword_1013E6D98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v44 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v45 = v54;
  v46 = v61;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v35, v37, v39, v54, v61, v43, v44, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v35, v45);
}

uint64_t sub_1008E24A8()
{
  return sub_1005EA90C();
}

uint64_t sub_1008E24D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054FAB4();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1008E2510()
{
  unint64_t result;

  result = qword_1013F9360;
  if (!qword_1013F9360)
  {
    result = swift_getWitnessTable(&unk_100F15D4C, &type metadata for CRLTipStencilLibraryFull);
    atomic_store(result, (unint64_t *)&qword_1013F9360);
  }
  return result;
}

unint64_t sub_1008E2554(uint64_t a1)
{
  unint64_t result;

  result = sub_10054FAB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008E2578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44[24];
  char v45[24];
  char v46[24];
  char v47[24];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v42 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v43 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Tips.Rule(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD440 != -1)
    swift_once(&qword_1013DD440, sub_1008E1D00);
  v11 = sub_1004F2A1C(v2, (uint64_t)qword_10147FDA0);
  v12 = swift_beginAccess(v11, v47, 0, 0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13(v6, v11, v2, v12);
  Tips.Rule.init<A>(_:_:)(v6, sub_1008E1E9C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v41 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (qword_1013DD448 != -1)
    swift_once(&qword_1013DD448, sub_1008E1D24);
  v15 = sub_1004F2A1C(v2, (uint64_t)qword_10147FDB8);
  v16 = swift_beginAccess(v15, v46, 0, 0);
  v13(v6, v15, v2, v16);
  Tips.Rule.init<A>(_:_:)(v6, sub_1008E1E9C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v17 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DD458 != -1)
    swift_once(&qword_1013DD458, sub_1008E1D74);
  v18 = sub_1004F2A1C(v2, (uint64_t)qword_10147FDE8);
  v19 = swift_beginAccess(v18, v45, 0, 0);
  v13(v6, v18, v2, v19);
  Tips.Rule.init<A>(_:_:)(v6, sub_1008E1E9C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v20 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DD450 != -1)
    swift_once(&qword_1013DD450, sub_1008E1D48);
  v21 = sub_1004F2A1C(v2, (uint64_t)qword_10147FDD0);
  v22 = swift_beginAccess(v21, v44, 0, 0);
  v13(v6, v21, v2, v22);
  Tips.Rule.init<A>(_:_:)(v6, sub_1008E1E9C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v23 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DD460 != -1)
    swift_once(&qword_1013DD460, sub_1008E1E38);
  v24 = sub_1004F2A1C(v0, (uint64_t)qword_10147FE00);
  v25 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v24, v0);
  v26 = type metadata accessor for Tips.EmptyDonation(0);
  v27 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v28 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v25, sub_1008E2034, 0, v26, v27, v28);
  v29 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  v30 = static Tips.RuleBuilder.buildPartialBlock(first:)(v41);
  v31 = swift_bridgeObjectRelease();
  v32 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v30, v17, v31);
  swift_bridgeObjectRelease();
  v33 = swift_bridgeObjectRelease();
  v34 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v32, v20, v33);
  swift_bridgeObjectRelease();
  v35 = swift_bridgeObjectRelease();
  v36 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v34, v23, v35);
  swift_bridgeObjectRelease();
  v37 = swift_bridgeObjectRelease();
  v38 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v36, v29, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v38;
}

void sub_1008E2A70(uint64_t a1, CGRect *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  CGFloat a;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  double x;
  double v29;
  double y;
  double v31;
  double width;
  double v33;
  double height;
  id v35;
  id v36;
  double v37;
  double v38;
  double v39;
  int64_t v40;
  uint64_t v41;
  CGAffineTransform v42;
  _QWORD v43[6];
  uint64_t v44;
  CGRect v45;
  CGRect v46;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_1004F6160();
    v7 = sub_1004F619C();
    v8 = Set.Iterator.init(_cocoa:)(v43, v5, v6, v7);
    v3 = v43[0];
    v41 = v43[1];
    v9 = v43[2];
    v10 = v43[3];
    v11 = v43[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v41 = a1 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v9 = v13;
    v10 = 0;
  }
  v40 = (unint64_t)(v9 + 64) >> 6;
  while (v3 < 0)
  {
    v19 = __CocoaSet.Iterator.next()(v8);
    if (!v19)
      goto LABEL_39;
    v20 = v19;
    v44 = v19;
    v21 = sub_1004F6160();
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v42, &v44, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    a = v42.a;
    swift_unknownObjectRelease(v20);
    v18 = v10;
    v16 = v11;
    if (a == 0.0)
      goto LABEL_39;
LABEL_35:
    v26 = objc_msgSend(*(id *)&a, "layout");
    objc_msgSend(v26, "frameForMiniFormatterPositioning");
    x = v27;
    y = v29;
    width = v31;
    height = v33;

    v35 = objc_msgSend(*(id *)&a, "layout");
    v36 = objc_msgSend(v35, "parent");

    if (v36)
    {
      objc_msgSend(v36, "transformInRoot");
      v45.origin.x = x;
      v45.origin.y = y;
      v45.size.width = width;
      v45.size.height = height;
      v46 = CGRectApplyAffineTransform(v45, &v42);
      x = v46.origin.x;
      y = v46.origin.y;
      width = v46.size.width;
      height = v46.size.height;

    }
    if (!CGRectIsNull(*a2))
    {
      x = sub_100060C2C(a2->origin.x, a2->origin.y, a2->size.width, a2->size.height, x, y, width, height);
      y = v37;
      width = v38;
      height = v39;
    }
    a2->origin.x = x;
    a2->origin.y = y;
    a2->size.width = width;
    a2->size.height = height;

    v10 = v18;
    v11 = v16;
  }
  if (v11)
  {
    v16 = (v11 - 1) & v11;
    v17 = __clz(__rbit64(v11)) | (v10 << 6);
    v18 = v10;
LABEL_34:
    a = COERCE_DOUBLE(*(id *)(*(_QWORD *)(v3 + 48) + 8 * v17));
    if (a == 0.0)
      goto LABEL_39;
    goto LABEL_35;
  }
  v23 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v23 >= v40)
      goto LABEL_39;
    v24 = *(_QWORD *)(v41 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v40)
        goto LABEL_39;
      v24 = *(_QWORD *)(v41 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v40)
          goto LABEL_39;
        v24 = *(_QWORD *)(v41 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v40)
            goto LABEL_39;
          v24 = *(_QWORD *)(v41 + 8 * v18);
          if (!v24)
          {
            v18 = v10 + 5;
            if (v10 + 5 >= v40)
              goto LABEL_39;
            v24 = *(_QWORD *)(v41 + 8 * v18);
            if (!v24)
            {
              v25 = v10 + 6;
              while (v40 != v25)
              {
                v24 = *(_QWORD *)(v41 + 8 * v25++);
                if (v24)
                {
                  v18 = v25 - 1;
                  goto LABEL_33;
                }
              }
LABEL_39:
              sub_1004D284C(v3);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

void sub_1008E2E2C(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(unsigned __int8 *)(v1 + 56);
  *(_BYTE *)(v1 + 56) = a1;
  if (v2 != (a1 & 1))
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
    if (Strong)
    {
      v7 = (id)Strong;
      v4 = swift_unknownObjectWeakLoadStrong(v1 + 32);
      if (v4)
      {
        v5 = v4;
        v6 = *(_QWORD *)(v1 + 16);
        swift_bridgeObjectRetain(v6);
        sub_10070EEB0();
        swift_bridgeObjectRelease(v6);

        swift_unknownObjectRelease(v5);
      }
      else
      {

      }
    }
  }
}

void sub_1008E2EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinY;
  double MaxY;
  double v33;
  double v34;
  char v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  double v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  double v53;
  double v54;
  double v55;
  CGFloat v56;
  CGFloat v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  CGFloat v67;
  double v68;
  double v69;
  CGFloat v70;
  double v71;
  double v72;
  CGFloat v73;
  double v74;
  BOOL v75;
  double v76;
  double v77;
  double v78;
  double v79;
  CGFloat v80;
  double v81;
  double v82;
  void *v83;
  double v84;
  double v85;
  double v86;
  CGFloat v87;
  CGFloat v88;
  CGFloat v89;
  double v90;
  CGFloat recta;
  CGFloat rect;
  CGFloat rect_8a;
  CGFloat rect_8;
  double rect_16;
  double rect_24a;
  CGFloat rect_24;
  double v98;
  double v99;
  double v100;
  double v101;
  id v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(v1);
  v3 = (void *)sub_100857EA4(v2);
  v102 = objc_msgSend(v3, "interactiveCanvasController", swift_bridgeObjectRelease(v1).n128_f64[0]);

  if (v102)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 24);
    if (Strong)
    {
      v5 = (void *)Strong;
      v6 = *(_QWORD *)(v0 + 16);
      swift_bridgeObjectRetain(v6);
      v8 = sub_1008E3598(v7);
      v10 = v9;
      v12 = v11;
      v14 = v13;
      swift_bridgeObjectRelease(v6);
      v15 = swift_unknownObjectWeakLoadStrong(v0 + 32);
      if (!v15
        || (v16 = *(_BYTE *)(v15 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingOut),
            swift_unknownObjectRelease(v15),
            (v16 & 1) == 0))
      {
        v17 = *(_QWORD *)(v0 + 16);
        swift_bridgeObjectRetain(v17);
        v19 = (void *)sub_100857EA4(v18);
        v20 = objc_msgSend(v19, "interactiveCanvasController", swift_bridgeObjectRelease(v17).n128_f64[0]);

        if (v20)
        {
          objc_msgSend(v20, "visibleScaledRectForCanvasUI");
          v22 = v21;
          v24 = v23;
          v26 = v25;
          rect_8a = v27;
          objc_msgSend(v20, "convertUnscaledToBoundsRect:", v8, v10, v12, v14);
          v98 = v10;
          v100 = v8;
          recta = v103.origin.x;
          y = v103.origin.y;
          rect_16 = v14;
          rect_24a = v12;
          width = v103.size.width;
          height = v103.size.height;
          MinY = CGRectGetMinY(v103);
          v104.origin.x = v22;
          v104.origin.y = v24;
          v104.size.width = v26;
          v104.size.height = rect_8a;
          v90 = MinY - CGRectGetMinY(v104);
          v105.origin.x = v22;
          v105.origin.y = v24;
          v105.size.width = v26;
          v105.size.height = rect_8a;
          MaxY = CGRectGetMaxY(v105);
          v106.origin.x = recta;
          v106.origin.y = y;
          v106.size.width = width;
          v12 = rect_24a;
          v10 = v98;
          v106.size.height = height;
          v14 = rect_16;
          v33 = CGRectGetMaxY(v106);

          v34 = MaxY - v33;
          v8 = v100;
          v35 = v34 <= v90 + 1.0;
        }
        else
        {
          v35 = 0;
        }
        sub_1008E2E2C(v35);
      }
      objc_msgSend(v102, "convertUnscaledToBoundsRect:", v8, v10, v12, v14, *(_QWORD *)&v90);
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;
      objc_msgSend(v102, "visibleScaledRectForCanvasUI");
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v51 = v50;
      objc_msgSend(v5, "frame");
      v99 = v52;
      v101 = v53;
      rect_24 = v37;
      v107.origin.x = v37;
      v54 = v39;
      v107.origin.y = v39;
      v55 = v41;
      v107.size.width = v41;
      v56 = v43;
      v107.size.height = v43;
      v113.origin.x = v45;
      v113.origin.y = v47;
      v113.size.width = v49;
      v113.size.height = v51;
      v108 = CGRectIntersection(v107, v113);
      v114.origin.x = v45;
      v114.origin.y = v47;
      v114.size.width = v49;
      v114.size.height = v51;
      if (CGRectEqualToRect(v108, v114))
      {
        v109.origin.x = v45;
        v109.origin.y = v47;
        v109.size.width = v49;
        v109.size.height = v51;
        v57 = v99;
        v58 = CGRectGetMidX(v109) + v99 * -0.5;
        v59 = v45;
        v60 = v49;
        v61 = v45;
        v62 = v47;
        v63 = v49;
        v64 = v51;
        if (*(_BYTE *)(v0 + 56) == 1)
          v65 = CGRectGetMinY(*(CGRect *)&v61);
        else
          v65 = CGRectGetMaxY(*(CGRect *)&v61);
        v78 = v65 - *(double *)(v0 + 48) - v101;
        v72 = v51;
      }
      else
      {
        rect_8 = v51;
        rect = v55;
        v66 = rect_24;
        v67 = v54;
        v68 = v54;
        v69 = v55;
        v70 = v56;
        if (*(_BYTE *)(v0 + 56) == 1)
        {
          v71 = CGRectGetMinY(*(CGRect *)&v66);
          v59 = v45;
          v110.origin.x = v45;
          v110.origin.y = v47;
          v60 = v49;
          v110.size.width = v49;
          v72 = rect_8;
          v110.size.height = rect_8;
          v73 = CGRectGetMinY(v110);
          v74 = *(double *)(v0 + 48);
          v75 = v101 + v74 < v71 - v73;
          v76 = v71 + v74;
          v77 = v71 - v74 - v101;
        }
        else
        {
          v79 = CGRectGetMaxY(*(CGRect *)&v66);
          v59 = v45;
          v111.origin.x = v45;
          v111.origin.y = v47;
          v60 = v49;
          v111.size.width = v49;
          v72 = rect_8;
          v111.size.height = rect_8;
          v80 = CGRectGetMaxY(v111);
          v81 = *(double *)(v0 + 48);
          v75 = v101 + v81 < v80 - v79;
          v76 = v79 - v81 - v101;
          v77 = v79 + v81;
        }
        if (v75)
          v82 = v77;
        else
          v82 = v76;
        v112.origin.x = rect_24;
        v112.origin.y = v67;
        v112.size.width = rect;
        v112.size.height = v56;
        v57 = v99;
        v58 = CGRectGetMidX(v112) + v99 * -0.5;
        v78 = v82;
      }
      if (sub_100060BF8(v60, v72))
      {
        v83 = v102;
        v102 = v5;
      }
      else
      {
        v84 = sub_100063854(5.0);
        v86 = sub_1008E3670(v59, v47, v60, v72, v84, v85);
        objc_msgSend(v5, "setFrame:", sub_100061AD8(v58, v78, v57, v101, v86, v87, v88, v89));
        v83 = v5;
      }

    }
  }
}

BOOL sub_1008E33D4(double a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t Strong;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxY;
  double v23;
  double v24;
  double v26;
  double MinY;
  double v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v4 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain(v4);
  v6 = (void *)sub_100857EA4(v5);
  v7 = objc_msgSend(v6, "interactiveCanvasController", swift_bridgeObjectRelease(v4).n128_f64[0]);

  if (!v7)
    return 0;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 24);
  if (Strong)
  {
    v9 = (void *)Strong;
    v28 = a2;
    objc_msgSend(v7, "visibleScaledRectForCanvasUI");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(v9, "frame");
    x = v29.origin.x;
    y = v29.origin.y;
    width = v29.size.width;
    height = v29.size.height;
    MinY = CGRectGetMinY(v29);
    v30.origin.x = v11;
    v30.origin.y = v13;
    v30.size.width = v15;
    v30.size.height = v17;
    v26 = CGRectGetMinY(v30);
    v31.origin.x = v11;
    v31.origin.y = v13;
    v31.size.width = v15;
    v31.size.height = v17;
    MaxY = CGRectGetMaxY(v31);
    v32.origin.x = x;
    v32.origin.y = y;
    v32.size.width = width;
    v32.size.height = height;
    v23 = CGRectGetMaxY(v32);

    if ((*(_BYTE *)(v2 + 56) & 1) != 0)
      v24 = MinY - v26;
    else
      v24 = MaxY - v23;
    return v24 >= v28;
  }
  else
  {

    return 0;
  }
}

uint64_t sub_1008E3544()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy(v0 + 24);
  sub_1004CBB0C(v0 + 32);
  return swift_deallocClassInstance(v0, 57, 7);
}

uint64_t type metadata accessor for CRLMiniFormatterPositionHelper()
{
  return objc_opt_self(_TtC8Freeform30CRLMiniFormatterPositionHelper);
}

double sub_1008E3598(uint64_t a1)
{
  uint64_t v1;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v8;

  v1 = a1;
  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v8.origin.x = CGRectNull.origin.x;
  v8.origin.y = y;
  v8.size.width = width;
  v8.size.height = height;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(uint64_t *)(a1 + 16) < 1)
      return x;
    goto LABEL_5;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  if (__CocoaSet.count.getter(a1) >= 1)
  {
LABEL_5:
    sub_1008E2A70(v1, &v8);
    x = v8.origin.x;
    if (CGRectIsNull(v8))
      return 0.0;
  }
  return x;
}

double sub_1008E3670(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

unint64_t sub_1008E3690()
{
  unint64_t result;

  result = qword_1013F94B8;
  if (!qword_1013F94B8)
  {
    result = swift_getWitnessTable(&unk_100F15F40, &type metadata for CRLOpenBoardsOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_1013F94B8);
  }
  return result;
}

unint64_t sub_1008E36DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F94C0;
  if (!qword_1013F94C0)
  {
    v1 = sub_1004CB6A4(qword_1013F94C8);
    sub_10069AE70();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F94C0);
  }
  return result;
}

uint64_t sub_1008E3740(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return swift_task_switch(sub_1008E3758, 0, 0);
}

uint64_t sub_1008E3758(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  AppDependency.wrappedValue.getter(a1);
  v1[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v1[6] = &off_10129B490;
  v1[11] = sub_1004BB5A4(v1 + 2, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
  v1[12] = sub_1004BB5A4(v1 + 2, v1[5]);
  v2 = type metadata accessor for MainActor(0);
  v1[13] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008E3800, v3, v4);
}

uint64_t sub_1008E3800()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[12];
  swift_release(v0[13]);
  v2 = (uint64_t *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess(v2, v0 + 7, 0, 0);
  v3 = *v2;
  v0[14] = *v2;
  swift_bridgeObjectRetain(v3);
  return swift_task_switch(sub_1008E3874, 0, 0);
}

uint64_t sub_1008E3874()
{
  _QWORD *v0;
  uint64_t *v1;
  double *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (uint64_t *)v0[11];
  v2 = sub_1005FFE34(v0[14]);
  v0[15] = v2;
  swift_bridgeObjectRelease();
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc(dword_10140AD1C);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_1008E38EC;
  return sub_100C14E20((uint64_t)v2, v3);
}

uint64_t sub_1008E38EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 128);
  v5 = *v2;
  *(_QWORD *)(v5 + 136) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_1008E3984, 0, 0);
  swift_release(*(_QWORD *)(v5 + 120));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v5 + 16));
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_1008E3984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 120));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008E39C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch(sub_1008E39DC, 0, 0);
}

uint64_t sub_1008E39DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  AppDependency.wrappedValue.getter(a1);
  v1[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v1[6] = &off_10129B490;
  v1[15] = sub_1004BB5A4(v1 + 2, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
  v1[16] = sub_1004BB5A4(v1 + 2, v1[5]);
  v2 = type metadata accessor for MainActor(0);
  v1[17] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008E3A84, v3, v4);
}

uint64_t sub_1008E3A84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[16];
  swift_release(v0[17]);
  v2 = (uint64_t *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess(v2, v0 + 7, 0, 0);
  v3 = *v2;
  v0[18] = *v2;
  swift_bridgeObjectRetain(v3);
  return swift_task_switch(sub_1008E3AF8, 0, 0);
}

uint64_t sub_1008E3AF8()
{
  _QWORD *v0;
  uint64_t *v1;
  double *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (uint64_t *)v0[15];
  v2 = sub_1005FFE34(v0[18]);
  v0[19] = v2;
  swift_bridgeObjectRelease();
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc(dword_10140AD1C);
  v0[20] = v4;
  *v4 = v0;
  v4[1] = sub_1008E3B70;
  return sub_100C14E20((uint64_t)v2, v3);
}

uint64_t sub_1008E3B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 160);
  v3[21] = a1;
  v3[22] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1008E3CAC;
  }
  else
  {
    swift_release(v3[19]);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3 + 2);
    v5 = sub_1008E3BF0;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1008E3BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 104);
  if (*(_QWORD *)(v1 + 16) == 1)
  {
    v3 = type metadata accessor for CRLBoardEntity(0);
    v4 = *(_QWORD *)(v3 - 8);
    sub_1005112BC(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    v5 = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for CRLBoardEntity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_1008E3CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_errorRelease(v1);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v2 = *(_QWORD *)(v0 + 104);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 80, 0, 0);
  v3 = (id)static OS_os_log.appIntents;
  v5 = static os_log_type_t.debug.getter(v4);
  sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "No open boards found.", 21, 2, (uint64_t)_swiftEmptyArrayStorage);

  v6 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008E3DA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1013F94EC);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100617FE0;
  v4[10] = v3;
  return swift_task_switch(sub_1008E3758, 0, 0);
}

uint64_t sub_1008E3E04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1013F94E4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  v5[13] = a1;
  v5[14] = v4;
  return swift_task_switch(sub_1008E39DC, 0, 0);
}

ValueMetadata *type metadata accessor for CRLOpenBoardsOptionsProvider()
{
  return &type metadata for CRLOpenBoardsOptionsProvider;
}

void sub_1008E4404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t (*v34)(void);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void (*v48)(__n128);
  __n128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double (*v55)(char *, uint64_t);
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  double (*v99)(char *, uint64_t);
  uint64_t v100;
  id v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  char v106[32];
  uint64_t v107;

  v78 = a2;
  v93 = a1;
  v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3);
  v92 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for UUID(0);
  v91 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v90 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v89 = (char *)&v77 - v7;
  __chkstk_darwin(v8);
  v88 = (char *)&v77 - v9;
  if (qword_1013DD8B8 != -1)
LABEL_46:
    swift_once(&qword_1013DD8B8, sub_100A06704);
  swift_beginAccess(&static OS_os_log.boardItemLifecycle, v106, 0, 0);
  v10 = (id)static OS_os_log.boardItemLifecycle;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v12, "🟢 CRLCommandInsertBoardItems commit() begin", 46, 0, (uint64_t)_swiftEmptyArrayStorage);

  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_boardItemsByIndex);
  v14 = *(_QWORD *)(v13 + 64);
  v79 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v81 = v2;
  v82 = OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_container;
  v87 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v80 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(v13);
  v18 = 0;
  v86 = xmmword_100F05060;
  v83 = v13;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v20 = (v17 - 1) & v17;
      v21 = v19 | (v18 << 6);
      if (!*(_QWORD *)(v13 + 16))
        goto LABEL_42;
      goto LABEL_27;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_45;
    if (v22 >= v80)
    {
LABEL_41:
      swift_release(v13);
      sub_100745390(v13, v78);
      return;
    }
    v23 = *(_QWORD *)(v79 + 8 * v22);
    ++v18;
    if (!v23)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v80)
        goto LABEL_41;
      v23 = *(_QWORD *)(v79 + 8 * v18);
      if (!v23)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v80)
          goto LABEL_41;
        v23 = *(_QWORD *)(v79 + 8 * v18);
        if (!v23)
        {
          v18 = v22 + 3;
          if (v22 + 3 >= v80)
            goto LABEL_41;
          v23 = *(_QWORD *)(v79 + 8 * v18);
          if (!v23)
          {
            v18 = v22 + 4;
            if (v22 + 4 >= v80)
              goto LABEL_41;
            v23 = *(_QWORD *)(v79 + 8 * v18);
            if (!v23)
              break;
          }
        }
      }
    }
LABEL_26:
    v20 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v18 << 6);
    if (!*(_QWORD *)(v13 + 16))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
LABEL_27:
    v2 = v13;
    v25 = sub_100842E60(*(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v21));
    if ((v26 & 1) == 0)
      goto LABEL_43;
    v84 = v20;
    v85 = v18;
    v2 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v25);
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v76 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v25);
      else
        v76 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v25));
      v27 = _CocoaArrayWrapper.endIndex.getter(v76);
      if (!v27)
        goto LABEL_5;
    }
    else
    {
      v27 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v25));
      if (!v27)
        goto LABEL_5;
    }
    if (v27 < 1)
      goto LABEL_44;
    v28 = 0;
    v96 = *(char **)(v81 + v82);
    v94 = v2 & 0xC000000000000001;
    v95 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v97 = v27;
    v98 = v2;
    do
    {
      if (v94)
        v29 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v2);
      else
        v29 = *(id *)(v2 + 8 * v28 + 32);
      v30 = v29;
      v100 = v28 + 1;
      v31 = (void *)static OS_os_log.boardItemLifecycle;
      v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v32, &v105);
      *(_OWORD *)(inited + 16) = v86;
      v34 = *(uint64_t (**)(void))((swift_isaMask & *v30) + 0x88);
      v103 = v31;
      v35 = v88;
      v36 = v34();
      v37 = UUID.uuidString.getter(v36);
      v39 = v38;
      v99 = *(double (**)(char *, uint64_t))(v91 + 8);
      v99(v35, v107);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v40 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v40;
      *(_QWORD *)(inited + 32) = v37;
      v102 = inited + 32;
      *(_QWORD *)(inited + 40) = v39;
      v41 = v30;
      v101 = v41;
      v42 = objc_msgSend(v41, "description");
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v45 = v44;

      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v40;
      *(_QWORD *)(inited + 72) = v43;
      *(_QWORD *)(inited + 80) = v45;
      v46 = v96;
      v47 = *(_QWORD *)&v96[v95];
      v48 = *(void (**)(__n128))(*(_QWORD *)v47 + 256);
      v49 = swift_retain(v47);
      v50 = v89;
      v48(v49);
      swift_release(v47);
      v52 = UUID.uuidString.getter(v51);
      v54 = v53;
      v55 = v99;
      v99(v50, v107);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v40;
      *(_QWORD *)(inited + 112) = v52;
      *(_QWORD *)(inited + 120) = v54;
      v56 = v46;
      v57 = objc_msgSend(v56, "description");
      v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v60 = v59;

      *(_QWORD *)(inited + 176) = &type metadata for String;
      *(_QWORD *)(inited + 184) = v40;
      *(_QWORD *)(inited + 152) = v58;
      *(_QWORD *)(inited + 160) = v60;
      v61 = *(_QWORD *)(v93 + v87);
      v62 = v61 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v61 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v104, 0, 0);
      v63 = v62;
      v64 = v92;
      sub_1004D48C8(v63, v92);
      swift_retain(v61);
      v65 = sub_1004B804C(&qword_1013E1A80);
      v66 = v90;
      CRRegister.wrappedValue.getter(v65);
      sub_1004D490C(v64);
      swift_release(v61);
      v68 = UUID.uuidString.getter(v67);
      v70 = v69;
      v71.n128_f64[0] = v55(v66, v107);
      *(_QWORD *)(inited + 216) = &type metadata for String;
      *(_QWORD *)(inited + 224) = v40;
      *(_QWORD *)(inited + 192) = v68;
      *(_QWORD *)(inited + 200) = v70;
      v72 = static os_log_type_t.default.getter(v71);
      v73 = v103;
      sub_100A06EBC((uint64_t)v103, &_mh_execute_header, v72, "🟢 CRLCommandInsertBoardItems commit() add new %{public}@%{public}@ to parent %{public}@%{public}@. Board: %{public}@", 119, 0, inited);
      swift_setDeallocating(inited);
      v74 = *(_QWORD *)(inited + 16);
      v75 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v102, v74, v75);

      v28 = v100;
      v2 = v98;
    }
    while (v97 != v100);
LABEL_5:
    swift_bridgeObjectRelease();
    v13 = v83;
    v17 = v84;
    v18 = v85;
  }
  v24 = v22 + 5;
  if (v24 >= v80)
    goto LABEL_41;
  v23 = *(_QWORD *)(v79 + 8 * v24);
  if (v23)
  {
    v18 = v24;
    goto LABEL_26;
  }
  while (1)
  {
    v18 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v18 >= v80)
      goto LABEL_41;
    v23 = *(_QWORD *)(v79 + 8 * v18);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1008E4B68()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_boardItemsByIndex));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_actionString
                                             + 8));
}

id sub_1008E4BA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandInsertBoardItems();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandInsertBoardItems()
{
  return objc_opt_self(_TtC8Freeform26CRLCommandInsertBoardItems);
}

uint64_t sub_1008E4C44()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_actionString);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

id sub_1008E4C80(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t *v5;
  void *v6;
  char *v7;
  id v8;
  NSString v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_super v18;

  v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_actionString];
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = v2;
  v8 = objc_msgSend(v6, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  *v5 = v13;
  v5[1] = v15;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_container] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_boardItemsByIndex] = a2;
  v16 = a1;

  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for CRLCommandInsertBoardItems();
  return objc_msgSendSuper2(&v18, "init");
}

double *sub_1008E4DE4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v3;
  v8 = sub_1004B804C(&qword_1013F9618);
  __chkstk_darwin(v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  v11 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v32 = (uint64_t)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v29 = (uint64_t)v28 - v14;
  v15 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v15 + 16) = a2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v17 = a2;
  swift_bridgeObjectRetain(a1);
  for (; v16; v16 = _CocoaArrayWrapper.endIndex.getter(v25))
  {
    v28[0] = v15;
    v28[1] = v5;
    v18 = _swiftEmptyArrayStorage;
    v30 = a1;
    v31 = a1 & 0xC000000000000001;
    v19 = 4;
    v5 = v16;
    while (1)
    {
      v15 = v19 - 4;
      v20 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, a1) : *(id *)(a1 + 8 * v19);
      a1 = (uint64_t)v20;
      v21 = v19 - 3;
      if (__OFADD__(v15, 1))
        break;
      sub_1008E50B8(v20, (uint64_t)v10);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v33) == 1)
      {
        sub_1004CB800((uint64_t)v10, &qword_1013F9618);
      }
      else
      {
        v22 = v29;
        sub_1004B84E0((uint64_t)v10, v29, type metadata accessor for CRLSELibraryViewModeItemNode);
        sub_1004B84E0(v22, v32, type metadata accessor for CRLSELibraryViewModeItemNode);
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
          v18 = (double *)sub_100D10FA4(0, *((_QWORD *)v18 + 2) + 1, 1, (unint64_t)v18);
        v24 = *((_QWORD *)v18 + 2);
        v23 = *((_QWORD *)v18 + 3);
        if (v24 >= v23 >> 1)
          v18 = (double *)sub_100D10FA4(v23 > 1, v24 + 1, 1, (unint64_t)v18);
        *((_QWORD *)v18 + 2) = v24 + 1;
        sub_1004B84E0(v32, (uint64_t)v18+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v24, type metadata accessor for CRLSELibraryViewModeItemNode);
      }
      a1 = v30;
      ++v19;
      if (v21 == v5)
      {
        swift_bridgeObjectRelease(v30);
        v15 = v28[0];
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    v26 = a2;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  v18 = _swiftEmptyArrayStorage;
LABEL_23:

  swift_release(v15);
  return v18;
}

uint64_t sub_1008E50B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v65;
  uint64_t (*v66)(_QWORD, _QWORD, _QWORD);
  uint64_t v67;
  uint64_t v68;
  char v69;
  int *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;

  v106 = a2;
  v107 = 0;
  v3 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v99 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v6);
  v90 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v88 = (uint64_t *)((char *)&v84 - v9);
  v10 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v10);
  v93 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v91 = *(_QWORD *)(v12 - 8);
  v92 = v12;
  __chkstk_darwin(v12);
  v89 = (uint64_t)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v14);
  v100 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v16);
  v101 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  __chkstk_darwin(v18);
  v94 = (uint64_t)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v20);
  v95 = (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1004B804C(&qword_1013F95B8);
  __chkstk_darwin(v28);
  v105 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v84 - v31;
  v33 = sub_1004B804C(&qword_1013F9618);
  __chkstk_darwin(v33);
  v35 = (char *)&v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  v96 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v97 = v36;
  v96(v35, 1, 1);
  v103 = v4;
  v104 = v3;
  v37 = *(_QWORD **)(v4 + 56);
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v37)(v32, 1, 1, v3);
  v98 = a1;
  sub_1004B8460((uint64_t)a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v27, v25);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004CB800((uint64_t)v32, &qword_1013F95B8);
      sub_1004B84E0((uint64_t)v27, (uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v39 = sub_1004B804C(&qword_1013E1790);
      v40 = (char *)&loc_1008E54B8
          + *((int *)qword_1008E5B58
            + (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v24, 5, v39));
      __asm { BR              X10 }
    }
    v42 = (uint64_t *)&v27[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
    v44 = *v42;
    v43 = v42[1];
    v86 = v44;
    v87 = v43;
    v45 = (uint64_t)v27;
    v46 = v95;
    sub_1004B84E0(v45, v95, type metadata accessor for CRLBoardIdentifier);
    v47 = type metadata accessor for UUID(0);
    v48 = v94;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v94, v46, v47);
    v49 = (uint64_t *)(v46 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v50 = *v49;
    v51 = v49[1];
    v52 = (_QWORD *)(v48 + *(int *)(v18 + 20));
    *v52 = v50;
    v52[1] = v51;
    sub_1004B8460(v48, v101, type metadata accessor for CRLSEBoardIdentifierStorage);
    v53 = type metadata accessor for Date(0);
    v84 = *(_QWORD *)(v53 - 8);
    v54 = v100;
    v85 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
    v85(v100, 1, 1, v53);
    swift_bridgeObjectRetain(v51);
    v55 = v93;
    v56 = v107;
    sub_100C9F8F8(v46, v93);
    if (v56)
    {
      v88 = v37;
      swift_errorRelease(v56);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v55, 1, 1, v92);
      sub_1004B84A4(v48, type metadata accessor for CRLSEBoardIdentifierStorage);
      sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
      sub_1004CB800(v55, &qword_1013E4690);
      v57 = 0;
      v107 = 0;
      v59 = v103;
      v58 = v104;
      v60 = (uint64_t)v105;
      v61 = v87;
LABEL_17:
      sub_1004CB800((uint64_t)v32, &qword_1013F95B8);
      v70 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      v71 = &v32[v70[12]];
      v72 = v70[16];
      v73 = (uint64_t)&v32[v70[20]];
      sub_1004B84E0(v101, (uint64_t)v32, type metadata accessor for CRLSEBoardIdentifier);
      *v71 = v86;
      v71[1] = v61;
      v32[v72] = v57;
      sub_1004C4938(v100, v73, &qword_1013E04F0);
      swift_storeEnumTagMultiPayload(v32, v58, 2);
      ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v88)(v32, 0, 1, v58);
      v68 = v106;
      goto LABEL_18;
    }
    v107 = 0;
    v62 = v92;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v91 + 56))(v55, 0, 1, v92);
    v63 = v89;
    sub_1004B84E0(v55, v89, type metadata accessor for CRLBoardViewModelMetadata);
    v93 = v63 + *(int *)(v62 + 28);
    v64 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v88;
    sub_1004CB7BC(v93, (uint64_t)v88, &qword_1013F5478);
    v65 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    v66 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v65 - 8) + 48);
    LODWORD(v91) = v66(v64, 1, v65) != 1;
    sub_1004CB800((uint64_t)v64, &qword_1013F5478);
    sub_1004CB800(v54, &qword_1013E04F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v54, v63 + *(int *)(v62 + 24), v53);
    v85(v54, 0, 1, v53);
    v67 = v90;
    sub_1004CB7BC(v93, v90, &qword_1013F5478);
    if (v66(v67, 1, v65) == 1)
    {
      v88 = v37;
      sub_1004CB800(v67, &qword_1013F5478);
      sub_1004B84A4(v63, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4(v94, type metadata accessor for CRLSEBoardIdentifierStorage);
      sub_1004B84A4(v95, type metadata accessor for CRLBoardIdentifier);
LABEL_16:
      v59 = v103;
      v58 = v104;
      v60 = (uint64_t)v105;
      v61 = v87;
      v57 = v91;
      goto LABEL_17;
    }
    v69 = *(_BYTE *)(v67 + 24);
    sub_1004B84A4(v67, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    sub_1004B84A4(v63, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4(v94, type metadata accessor for CRLSEBoardIdentifierStorage);
    sub_1004B84A4(v95, type metadata accessor for CRLBoardIdentifier);
    if ((v69 & 1) != 0)
    {
      v88 = v37;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease(v87);
    sub_1004CB800(v54, &qword_1013E04F0);
    sub_1004B84A4(v101, type metadata accessor for CRLSEBoardIdentifier);
    v60 = (uint64_t)v105;
    v68 = v106;
    v59 = v103;
    v58 = v104;
  }
  else
  {
    sub_1004CB800((uint64_t)v32, &qword_1013F95B8);
    v41 = *v27;
    if (*v27)
    {
      if (v41 != 1)
        LOBYTE(v41) = 2;
      *v32 = v41;
    }
    else
    {
      *v32 = 0;
    }
    v59 = v103;
    v58 = v104;
    v60 = (uint64_t)v105;
    v68 = v106;
    swift_storeEnumTagMultiPayload(v32, v104, 0);
    ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v37)(v32, 0, 1, v58);
  }
LABEL_18:
  sub_1004CB7BC((uint64_t)v32, v60, &qword_1013F95B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v60, 1, v58) == 1)
  {
    sub_1004CB800((uint64_t)v32, &qword_1013F95B8);
    sub_1004CB800(v60, &qword_1013F95B8);
  }
  else
  {
    v74 = v99;
    sub_1004B84E0(v60, v99, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_1004CB800((uint64_t)v35, &qword_1013F9618);
    sub_1004B8460(v74, (uint64_t)v35, type metadata accessor for CRLSELibraryViewModel.Item);
    v75 = v97;
    *(_QWORD *)&v35[*(int *)(v97 + 20)] = _swiftEmptyArrayStorage;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v96)(v35, 0, 1, v75);
    v76 = objc_msgSend(v98, "children");
    v77 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
    v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v76, v77);

    v79 = v102;
    v80 = v68;
    v81 = sub_1008E4DE4(v78, v79, &unk_101286A78);
    swift_bridgeObjectRelease(v78);
    sub_1004B84A4(v74, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_1004CB800((uint64_t)v32, &qword_1013F95B8);

    v82 = *(int *)(v75 + 20);
    swift_bridgeObjectRelease(*(_QWORD *)&v35[v82]);
    *(_QWORD *)&v35[v82] = v81;
    v68 = v80;
  }
  sub_1004CB7BC((uint64_t)v35, v68, &qword_1013F9618);
  return sub_1004CB800((uint64_t)v35, &qword_1013F9618);
}

void sub_1008E5B70()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  double *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  char *v12;
  double v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32[112];
  id aBlock[5];
  _QWORD *v34;

  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary]
                 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  v2 = v0;
  swift_bridgeObjectRetain(v1);
  v4 = sub_1008E4DE4(v3, v2, (uint64_t)&unk_101286A50);
  swift_bridgeObjectRelease(v1);
  v5 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "initWithFilePresenter:", v2);
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform13CRLSEImporter_librarySnapshotURL);
  v7 = v6;
  v8 = swift_allocObject(&unk_1012869D8, 32, 7);
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v2;
  v9 = (_QWORD *)swift_allocObject(&unk_101286A00, 32, 7);
  v9[2] = sub_1008EBCF8;
  v9[3] = v8;
  aBlock[4] = sub_10078E48C;
  v34 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_10062EDE4;
  aBlock[3] = &unk_101286A18;
  v10 = _Block_copy(aBlock);
  v11 = v34;
  v12 = v2;
  swift_retain(v9);
  *(_QWORD *)&v13 = swift_release(v11).n128_u64[0];
  aBlock[0] = 0;
  objc_msgSend(v5, "coordinateWritingItemAtURL:options:error:byAccessor:", v7, 0, aBlock, v10, v13);
  _Block_release(v10);

  v14 = aBlock[0];
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v9, "", 83, 112, 102, 1);
  swift_release(v9);
  if ((v7 & 1) != 0)
  {
    __break(1u);
LABEL_8:
    swift_once(&qword_1013DD758, sub_100A02698);
    goto LABEL_4;
  }
  if (!v14)
  {
    swift_release(v8);
    goto LABEL_6;
  }
  v15 = qword_1013DD758;
  v9 = v14;
  if (v15 != -1)
    goto LABEL_8;
LABEL_4:
  swift_beginAccess(&static OS_os_log.crlSharingExtension, aBlock, 0, 0);
  v16 = (void *)static OS_os_log.crlSharingExtension;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v17, v32);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v19 = v9;
  v20 = v16;
  v21 = sub_10089E8F8();
  v23 = v22;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v24 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 32) = v21;
  *(_QWORD *)(inited + 40) = v23;
  v31 = v19;
  v25 = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
  v26 = v19;
  v27 = String.init<A>(reflecting:)(&v31, v25);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v24;
  *(_QWORD *)(inited + 72) = v27;
  *(_QWORD *)(inited + 80) = v28;
  v29 = static os_log_type_t.error.getter(v27);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v29, "Failed to write library snapshot data due to file coordination error : %{public}@ <%@>", 86, 2, inited);

  swift_setDeallocating(inited);
  v30 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v30);
  swift_release(v8);

  v5 = v20;
LABEL_6:

}

double sub_1008E5ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  double result;
  _QWORD v14[4];

  v5 = type metadata accessor for PropertyListEncoder(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter(100);
  v14[0] = a2;
  v7 = sub_1004B804C((uint64_t *)&unk_1013F9600);
  v8 = sub_1008EBD10();
  v10 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v14, v7, v8, v9);
  v12 = v11;
  Data.write(to:options:)(a3 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_librarySnapshotURL, 0, v10, v11);
  sub_1004BBBC8(v10, v12);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_1008E6138()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *object;
  NSString v14;
  NSURL *v15;
  id v16;
  NSURL *v17;
  void *v18;
  void *v19;
  unsigned int v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  void *v26;
  void *v27;
  NSURL *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  _QWORD *v34;
  char *v35;
  double v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  _QWORD *v61;
  char v62[112];
  id aBlock[5];
  _QWORD *v64;
  char v65[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "initWithFilePresenter:", v1);
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemURL];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemURL], v65, 0, 0);
  sub_1004CB7BC(v10, (uint64_t)v4, &qword_1013E04D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {

    sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
    return;
  }
  v60 = v9;
  v59 = v6;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v11 = (void *)objc_opt_self(NSFileManager);
  v12 = objc_msgSend(v11, "defaultManager");
  object = URL.path(percentEncoded:)(1)._object;
  v14 = String._bridgeToObjectiveC()();
  LOBYTE(object) = objc_msgSend(v12, "fileExistsAtPath:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  if ((object & 1) == 0)
  {
    v16 = objc_msgSend(v11, "defaultManager");
    URL._bridgeToObjectiveC()(v17);
    v19 = v18;
    aBlock[0] = 0;
    v20 = objc_msgSend(v16, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v18, 1, 0, aBlock);

    v21 = aBlock[0];
    if (v20)
    {
      v22 = aBlock[0];
    }
    else
    {
      v23 = aBlock[0];
      v24 = _convertNSErrorToError(_:)(v21);

      swift_willThrow(v25);
      swift_errorRelease(v24);
    }
  }
  URL._bridgeToObjectiveC()(v15);
  v27 = v26;
  URL._bridgeToObjectiveC()(v28);
  v30 = v29;
  v31 = swift_allocObject(&unk_101286960, 24, 7);
  *(_QWORD *)(v31 + 16) = v1;
  v32 = (_QWORD *)swift_allocObject(&unk_101286988, 32, 7);
  v32[2] = sub_1008EBB88;
  v32[3] = v31;
  aBlock[4] = sub_10054E858;
  v64 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_1008E73E0;
  aBlock[3] = &unk_1012869A0;
  v33 = _Block_copy(aBlock);
  v34 = v64;
  v35 = v1;
  swift_retain(v32);
  *(_QWORD *)&v36 = swift_release(v34).n128_u64[0];
  aBlock[0] = 0;
  v37 = v60;
  objc_msgSend(v60, "coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:", v27, 0, v30, 0, aBlock, v33, v36);
  _Block_release(v33);

  v38 = aBlock[0];
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation(v32, "", 83, 154, 133, 1);
  v39 = swift_release(v32);
  if ((v27 & 1) != 0)
  {
    __break(1u);
LABEL_14:
    swift_once(&qword_1013DD758, sub_100A02698);
    goto LABEL_10;
  }
  if (!v38)
  {
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v8, v5, v39);

    goto LABEL_12;
  }
  v57 = v31;
  v58 = v5;
  v40 = qword_1013DD758;
  v32 = v38;
  if (v40 != -1)
    goto LABEL_14;
LABEL_10:
  swift_beginAccess(&static OS_os_log.crlSharingExtension, aBlock, 0, 0);
  v41 = (void *)static OS_os_log.crlSharingExtension;
  v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v42, v62);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v44 = v32;
  v45 = v41;
  v46 = sub_10089E8F8();
  v48 = v47;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v49 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v49;
  *(_QWORD *)(inited + 32) = v46;
  *(_QWORD *)(inited + 40) = v48;
  v61 = v44;
  v50 = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
  v51 = v44;
  v52 = String.init<A>(reflecting:)(&v61, v50);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v49;
  *(_QWORD *)(inited + 72) = v52;
  *(_QWORD *)(inited + 80) = v53;
  v54 = static os_log_type_t.error.getter(v52);
  sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v54, "Failed to import sharing extension content due to file coordination error: %{public}@ <%@>", 90, 2, inited);

  swift_setDeallocating(inited);
  v55 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v55);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v58);
  v31 = v57;
LABEL_12:
  swift_release(v31);

}

double sub_1008E66B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  NSURL *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  double *v26;
  id v27;
  id v28;
  uint64_t v29;
  __n128 v30;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *object;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double result;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  __n128 v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double *v101;
  uint64_t v102;
  unint64_t v103;
  __n128 v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  double *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v123;
  char *v124;
  __int128 v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  double *v132;
  double *v133;
  uint64_t v134[3];
  uint64_t v135;
  _QWORD v136[3];
  uint64_t v137;
  uint64_t v138;
  char v139[24];
  char v140[112];
  id v141[3];

  v129 = a3;
  v3 = sub_1004B804C(&qword_1013F95B8);
  __chkstk_darwin(v3);
  v115 = (uint64_t)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v118 = (uint64_t)&v109 - v6;
  v7 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v116 = *(_QWORD *)(v7 - 8);
  v117 = v7;
  __chkstk_darwin(v7);
  v114 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v131 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v128 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v127 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v120 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (char *)objc_opt_self(NSFileManager);
  v20 = objc_msgSend(v19, "defaultManager");
  URL._bridgeToObjectiveC()(v21);
  v23 = v22;
  v141[0] = 0;
  v24 = objc_msgSend(v20, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v22, 0, 4, v141);

  v25 = v141[0];
  v121 = v13;
  v119 = v14;
  v130 = v11;
  if (v24)
  {
    v26 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v13);
    v27 = v25;

  }
  else
  {
    v28 = v141[0];
    v29 = _convertNSErrorToError(_:)(v25);

    swift_willThrow(v30);
    if (qword_1013DD758 != -1)
      swift_once(&qword_1013DD758, sub_100A02698);
    swift_beginAccess(&static OS_os_log.crlSharingExtension, v141, 0, 0);
    v31 = (void *)static OS_os_log.crlSharingExtension;
    v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v32, v140);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v29, &v137, v136);
    v34 = v136[1];
    v35 = v136[2];
    v36 = v31;
    v37 = Error.publicDescription.getter(v34, v35);
    v39 = v38;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v40 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v40;
    *(_QWORD *)(inited + 32) = v37;
    v126 = inited + 32;
    *(_QWORD *)(inited + 40) = v39;
    swift_getErrorValue(v29, &v135, v134);
    v41 = Error.fullDescription.getter(v134[1]);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v40;
    *(_QWORD *)(inited + 72) = v41;
    *(_QWORD *)(inited + 80) = v42;
    v43 = static os_log_type_t.error.getter(v41);
    sub_100A06EBC((uint64_t)v36, &_mh_execute_header, v43, "Error loading contents of import directory: %{public}@ <%@>", 59, 2, inited);
    swift_setDeallocating(inited);
    v44 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v126, 2, v44);

    swift_errorRelease(v29);
    v26 = _swiftEmptyArrayStorage;
    v14 = v119;
  }
  v126 = *((_QWORD *)v26 + 2);
  if (v126)
  {
    v45 = v19;
    if (qword_1013DD758 != -1)
LABEL_25:
      swift_once(&qword_1013DD758, sub_100A02698);
    swift_beginAccess(&static OS_os_log.crlSharingExtension, v139, 0, 0);
    v46 = (void *)static OS_os_log.crlSharingExtension;
    v112 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v47 = swift_initStackObject(v112, &v138);
    v125 = xmmword_100EF5E40;
    *(_OWORD *)(v47 + 16) = xmmword_100EF5E40;
    v113 = v26;
    v48 = *((_QWORD *)v26 + 2);
    *(_QWORD *)(v47 + 56) = &type metadata for Int;
    *(_QWORD *)(v47 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v47 + 32) = v48;
    v49 = v46;
    v51 = static os_log_type_t.debug.getter(v50);
    sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v51, "Begin import of %d items", 24, 2, v47);
    swift_setDeallocating(v47);
    v52 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v47 + 32, 1, v52);

    v53 = type metadata accessor for PropertyListDecoder(0);
    swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
    v54 = PropertyListDecoder.init()();
    v55 = objc_msgSend(v45, "defaultManager");
    v56 = v129 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_pendingBoardsURL;
    object = URL.path(percentEncoded:)(0)._object;
    v58 = String._bridgeToObjectiveC()();
    LODWORD(object) = objc_msgSend(v55, "fileExistsAtPath:", v58, swift_bridgeObjectRelease(object).n128_f64[0]);

    v110 = v56;
    v111 = v52;
    if ((_DWORD)object)
    {
      v59 = v54;
      v60 = Data.init(contentsOf:options:)(v56, 0);
      v61 = (uint64_t)v120;
      v64 = v63;
      v65 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v60;
      v66 = sub_1004B804C(&qword_1013F95D8);
      v67 = sub_1008EBC50();
      v122 = v65;
      v123 = v64;
      dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v66, v65, v64, v66, v67, v68);
      swift_release(v59);
      sub_1004BBBC8((uint64_t)v122, v123);
      v108 = v133;
    }
    else
    {
      swift_release(v54);
      v108 = _swiftEmptyArrayStorage;
      v61 = (uint64_t)v120;
    }
    v69 = sub_100AF8964((uint64_t)v108);
    v70 = swift_bridgeObjectRelease(v108);
    v45 = 0;
    v133 = (double *)v69;
    v26 = (double *)((char *)v113
                   + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
    v123 = *(_QWORD *)(v14 + 72);
    v124 = v18;
    *(_QWORD *)&v125 = *(_QWORD *)(v14 + 16);
    v71 = v121;
    ((void (*)(char *, double *, uint64_t, __n128))v125)(v18, v26, v121, v70);
    while (1)
    {
      v73 = v45 + 1;
      if (__OFADD__(v45, 1))
      {
        __break(1u);
        goto LABEL_25;
      }
      v122 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v122(v18, 0, 1, v71);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v71) == 1)
        goto LABEL_23;
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v61, v18, v71);
      v74 = v14;
      v75 = v71;
      sub_1008E74C0(v61);
      v77 = URL.lastPathComponent.getter(v76);
      v79 = v78;
      v80 = v61;
      v81 = v131;
      UUID.init(uuidString:)(v77, v78, v82);
      v83 = v79;
      v84 = v128;
      v85 = swift_bridgeObjectRelease(v83);
      v86 = v81;
      v87 = v130;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v84 + 48))(v86, 1, v130, v85) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v80, v75);
        sub_1004CB800(v131, (uint64_t *)&unk_1013E1A50);
        v71 = v75;
        v14 = v74;
        v61 = v80;
      }
      else
      {
        v88 = v127;
        v89 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 32))(v127, v131, v87);
        v90 = (uint64_t)v133;
        __chkstk_darwin(v89);
        *(&v109 - 2) = (uint64_t)v88;
        swift_bridgeObjectRetain(v90);
        v91 = v84;
        v92 = v118;
        sub_100C9D708((uint64_t (*)(char *))sub_1008EBC34, v90, v118);
        v93 = swift_bridgeObjectRelease(v90);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v116 + 48))(v92, 1, v117, v93) == 1)
        {
          v94 = v119;
          v61 = (uint64_t)v120;
          v95 = v121;
          (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v127, v130);
          v96 = v92;
          v71 = v95;
          v14 = v94;
          sub_1004CB800(v96, &qword_1013F95B8);
        }
        else
        {
          v97 = v114;
          sub_1004B84E0(v92, v114, type metadata accessor for CRLSELibraryViewModel.Item);
          v98 = v115;
          sub_100B283EC(v97, v115);
          sub_1004CB800(v98, &qword_1013F95B8);
          sub_1004B84A4(v97, type metadata accessor for CRLSELibraryViewModel.Item);
          v14 = v119;
          v61 = (uint64_t)v120;
          v71 = v121;
          (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v127, v130);
        }
      }
      ++v45;
      v18 = v124;
      v26 = (double *)((char *)v26 + v123);
      if (v73 == (char *)v126)
        break;
      ((void (*)(char *, double *, uint64_t, __n128))v125)(v124, v26, v71, v72);
    }
    v122(v124, 1, 1, v71);
LABEL_23:
    swift_bridgeObjectRelease(v113);
    v99 = type metadata accessor for PropertyListEncoder(0);
    swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
    v100 = PropertyListEncoder.init()();
    dispatch thunk of PropertyListEncoder.outputFormat.setter(100);
    v101 = v133;
    v132 = v133;
    v102 = sub_1004B804C(&qword_1013F95C0);
    v103 = sub_1008EBBB8();
    v105 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(&v132, v102, v103, v104);
    v107 = v106;
    swift_bridgeObjectRelease(v101);
    Data.write(to:options:)(v110, 0, v105, v107);
    sub_1004BBBC8(v105, v107);
    *(_QWORD *)&result = swift_release(v100).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  return result;
}

uint64_t sub_1008E7270(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char v12;
  _QWORD v14[2];

  v2 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v4, type metadata accessor for CRLSELibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v4, v2) == 3)
  {
    v9 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    v10 = swift_bridgeObjectRelease(*(_QWORD *)&v4[*(int *)(v9 + 48) + 8]);
    v11 = (uint64_t)&v4[*(int *)(v9 + 64)];
    (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 32))(v8, v4, v5, v10);
    sub_1004CB800(v11, &qword_1013E04F0);
    v12 = static UUID.== infix(_:_:)(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLSELibraryViewModel.Item);
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1008E73E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *);
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v16 - v11;
  v13 = *(void (**)(char *, char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v13(v12, v10);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_1008E74C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t inited;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  char v88[72];
  char v89[32];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v74 = (uint64_t)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F9570);
  __chkstk_darwin(v4);
  v76 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for CRLSEImportManifest(0);
  v77 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v69 = v6;
  v70 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v73 = (uint64_t)&v68 - v8;
  v9 = type metadata accessor for URL.DirectoryHint(0);
  v83 = *(_QWORD *)(v9 - 8);
  v84 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  __chkstk_darwin(v12);
  v72 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - v15;
  v17 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v85 = PropertyListDecoder.init()();
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v89, 0, 0);
  v18 = (void *)static OS_os_log.crlSharingExtension;
  v79 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v79, v88);
  v78 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v20 = v18;
  v21 = URL.relativeString.getter();
  v23 = v22;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v80 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v80;
  *(_QWORD *)(inited + 32) = v21;
  v24 = inited + 32;
  *(_QWORD *)(inited + 40) = v23;
  v25 = a1;
  v27 = static os_log_type_t.debug.getter(v26);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v27, "Beginning Import for %@", 23, 2, inited);
  swift_setDeallocating(inited);
  v28 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v24, 1, v28);

  strcpy((char *)v87, "Manifest.plist");
  HIBYTE(v87[1]) = -18;
  v30 = v83;
  v29 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v11, enum case for URL.DirectoryHint.inferFromPath(_:), v84);
  sub_1004D292C();
  URL.appending<A>(path:directoryHint:)(v87, v11, &type metadata for String);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v29);
  swift_bridgeObjectRelease(v87[1]);
  v31 = v16;
  v32 = Data.init(contentsOf:options:)(v16, 0);
  v34 = v33;
  v35 = sub_1004B7878(&qword_1013F9580, type metadata accessor for CRLSEImportManifest, (uint64_t)&unk_100F0FD98);
  v37 = v75;
  v36 = (uint64_t)v76;
  v84 = v32;
  v38 = v85;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v75, v32, v34, v75, v35, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v36, 0, 1, v37);
  v42 = v73;
  sub_1004B84E0(v36, v73, type metadata accessor for CRLSEImportManifest);
  v43 = (void *)static OS_os_log.crlSharingExtension;
  v44 = swift_initStackObject(v79, &v86);
  *(_OWORD *)(v44 + 16) = v78;
  v45 = v43;
  v46 = URL.relativeString.getter();
  v47 = v80;
  *(_QWORD *)(v44 + 56) = &type metadata for String;
  *(_QWORD *)(v44 + 64) = v47;
  *(_QWORD *)(v44 + 32) = v46;
  *(_QWORD *)(v44 + 40) = v48;
  v50 = static os_log_type_t.debug.getter(v49);
  sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v50, "Manifest file loaded %@", 23, 2, v44);
  swift_setDeallocating(v44);
  swift_arrayDestroy(v44 + 32, 1, v28);

  v51 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v74, 1, 1, v51);
  v52 = v42;
  v53 = v70;
  sub_1004B8460(v52, v70, type metadata accessor for CRLSEImportManifest);
  v54 = v81;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
  v83 = v34;
  v56 = v82;
  v55(v72, v25, v82);
  v57 = *(unsigned __int8 *)(v77 + 80);
  v58 = v38;
  v59 = (v57 + 32) & ~v57;
  v60 = (v69 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = *(unsigned __int8 *)(v54 + 80);
  v62 = (v61 + v60 + 8) & ~v61;
  v63 = swift_allocObject(&unk_101286920, v62 + v68, v57 | v61 | 7);
  *(_QWORD *)(v63 + 16) = 0;
  *(_QWORD *)(v63 + 24) = 0;
  sub_1004B84E0(v53, v63 + v59, type metadata accessor for CRLSEImportManifest);
  v65 = v71;
  v64 = v72;
  *(_QWORD *)(v63 + v60) = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v63 + v62, v64, v56);
  v66 = v65;
  v67 = sub_100521B98(v74, (uint64_t)&unk_1013F9590, v63);
  sub_1004BBBC8(v84, v83);
  swift_release(v58);
  swift_release(v67);
  sub_1004B84A4(v73, type metadata accessor for CRLSEImportManifest);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v54 + 8))(v31, v56, v40);
}

uint64_t sub_1008E7BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v6[87] = a6;
  v6[86] = a5;
  v6[85] = a4;
  v7 = sub_1004B804C(&qword_1013F5478);
  v6[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E4690);
  v6[89] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v6[90] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[91] = v10;
  v6[92] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Folder(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[93] = swift_task_alloc(v11);
  v6[94] = swift_task_alloc(v11);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v6[95] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v6[96] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[97] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[98] = swift_task_alloc(v15);
  v6[99] = swift_task_alloc(v15);
  v6[100] = swift_task_alloc(v15);
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[101] = swift_task_alloc(v16);
  v6[102] = swift_task_alloc(v16);
  v6[103] = swift_task_alloc(v16);
  return swift_task_switch(sub_1008E7D68, 0, 0);
}

uint64_t sub_1008E7D68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0[97];
  v2 = v0[96];
  v3 = v0[95];
  sub_1004CB7BC(v0[85], v3, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v4 = v0[103];
    v5 = v0[99];
    v6 = v0[94];
    v7 = v0[86];
    v8 = v0[85];
    v9 = sub_1004CB800(v0[95], (uint64_t *)&unk_1013E1A50);
    UUID.init()(v9);
    sub_10067AFD0(v5, 0, 0xE000000000000000, v4);
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary);
    v0[104] = v10;
    v11 = *(void **)(v10 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    v0[105] = (uint64_t)v11;
    v12 = (uint64_t *)(v8 + *(int *)(type metadata accessor for CRLSEImportManifest(0) + 24));
    v13 = *v12;
    v14 = v12[1];
    v15 = sub_1004B804C(&qword_1013E1790);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v16(v6, 1, 5, v15);
    sub_1006326BC(v13, v14, v6, 0, (uint64_t)v11, 0);
    v0[106] = v17;
    v0[107] = v18;
    v28 = v0[93];
    sub_1004B84A4(v0[94], type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v16(v28, 1, 5, v15);
    v29 = type metadata accessor for MainActor(0);
    v0[110] = static MainActor.shared.getter(v29);
    v30 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
    v0[111] = v30;
    v0[112] = v31;
    v32 = v30;
    v33 = v31;
    v34 = sub_1008E89AC;
    v35 = v32;
  }
  else
  {
    v19 = v0[100];
    v20 = v0[98];
    v21 = v0[97];
    v22 = v0[96];
    v23 = v0[85];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v19, v0[95], v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v19, v22);
    v24 = (uint64_t *)(v23 + *(int *)(type metadata accessor for CRLSEImportManifest(0) + 20));
    v25 = v24[1];
    if (v25)
    {
      v26 = *v24;
      v27 = v24[1];
    }
    else
    {
      v26 = 0;
      v27 = 0xE000000000000000;
    }
    v36 = v0[103];
    v37 = v0[102];
    v38 = v0[101];
    v39 = v0[98];
    v40 = v0[86];
    swift_bridgeObjectRetain(v25);
    sub_10067AFD0(v39, v26, v27, v37);
    sub_1004B84E0(v37, v36, type metadata accessor for CRLBoardIdentifier);
    v0[108] = *(_QWORD *)(v40 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary);
    sub_1004B8460(v36, v38, type metadata accessor for CRLBoardIdentifier);
    v41 = type metadata accessor for MainActor(0);
    v0[109] = static MainActor.shared.getter(v41);
    v42 = dispatch thunk of Actor.unownedExecutor.getter(v41, &protocol witness table for MainActor);
    v44 = v43;
    v34 = sub_1008E82F0;
    v35 = v42;
    v33 = v44;
  }
  return swift_task_switch(v34, v35, v33);
}

uint64_t sub_1008E82F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[101];
  v2 = v0[89];
  swift_release(v0[109]);
  sub_100C9F8F8(v1, v2);
  sub_1004B84A4(v0[101], type metadata accessor for CRLBoardIdentifier);
  return swift_task_switch(sub_1008E83D0, 0, 0);
}

uint64_t sub_1008E83D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSURL *v31;
  void *v32;
  void *v33;
  unsigned int v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  __n128 v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 704);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 728) + 56))(v3, 0, 1, v2);
  sub_1004B84E0(v3, v1, type metadata accessor for CRLBoardViewModelMetadata);
  sub_1004CB7BC(v1 + *(int *)(v2 + 28), v4, &qword_1013F5478);
  v5 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  v7 = *(_QWORD *)(v0 + 704);
  if (v6 == 1)
  {
    sub_1004CB800(v7, &qword_1013F5478);
LABEL_4:
    v9 = *(_QWORD *)(v0 + 800);
    v10 = *(_QWORD *)(v0 + 776);
    v11 = *(_QWORD *)(v0 + 768);
    sub_1004B84A4(*(_QWORD *)(v0 + 736), type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_QWORD *)(v0 + 928) = *(_QWORD *)(v0 + 864);
    v12 = *(_QWORD *)(v0 + 680);
    v13 = type metadata accessor for CRLSEImportManifest(0);
    *(_QWORD *)(v0 + 936) = sub_1008EB168(*(_QWORD *)(v12 + *(int *)(v13 + 28)));
    *(_QWORD *)(v0 + 944) = v14;
    v15 = (_QWORD *)swift_task_alloc(dword_10140E224);
    *(_QWORD *)(v0 + 952) = v15;
    *v15 = v0;
    v15[1] = sub_1008E9070;
    return sub_100CA2984(*(_QWORD *)(v0 + 824));
  }
  v8 = *(_BYTE *)(v7 + 24);
  sub_1004B84A4(v7, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  if ((v8 & 1) != 0)
    goto LABEL_4;
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 544, 0, 0);
  v17 = (void *)static OS_os_log.crlSharingExtension;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v0 + 240);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v20 = v17;
  v21 = UUID.uuidString.getter(v20);
  v23 = v22;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v24 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 32) = v21;
  *(_QWORD *)(inited + 40) = v23;
  v25 = URL.relativeString.getter();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v24;
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(inited + 80) = v26;
  v28 = static os_log_type_t.debug.getter(v27);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v28, "Can't import content to read-only board (%@), deleting %@", 57, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v29);

  v30 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v31);
  v33 = v32;
  *(_QWORD *)(v0 + 672) = 0;
  v34 = objc_msgSend(v30, "removeItemAtURL:error:", v32, v0 + 672);

  v35 = *(void **)(v0 + 672);
  v36 = *(_QWORD *)(v0 + 824);
  v37 = *(_QWORD *)(v0 + 800);
  v38 = *(_QWORD *)(v0 + 776);
  v39 = *(_QWORD *)(v0 + 768);
  v40 = *(_QWORD *)(v0 + 736);
  if (v34)
  {
    v41 = v35;
    sub_1004B84A4(v40, type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_1004B84A4(v36, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v42 = v35;
    v43 = _convertNSErrorToError(_:)(v35);

    swift_willThrow(v44);
    sub_1004B84A4(v40, type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_1004B84A4(v36, type metadata accessor for CRLBoardIdentifier);
    if (qword_1013DD758 != -1)
      swift_once(&qword_1013DD758, sub_100A02698);
    swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 496, 0, 0);
    v45 = (void *)static OS_os_log.crlSharingExtension;
    v46 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v47 = swift_initStackObject(v46, v0 + 128);
    *(_OWORD *)(v47 + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v43, v0 + 664, v0 + 568);
    v48 = *(_QWORD *)(v0 + 576);
    v49 = *(_QWORD *)(v0 + 584);
    v50 = v45;
    v51 = Error.publicDescription.getter(v48, v49);
    *(_QWORD *)(v47 + 56) = &type metadata for String;
    *(_QWORD *)(v47 + 64) = v24;
    *(_QWORD *)(v47 + 32) = v51;
    *(_QWORD *)(v47 + 40) = v52;
    swift_getErrorValue(v43, v0 + 656, v0 + 616);
    v53 = Error.fullDescription.getter(*(_QWORD *)(v0 + 624));
    *(_QWORD *)(v47 + 96) = &type metadata for String;
    *(_QWORD *)(v47 + 104) = v24;
    *(_QWORD *)(v47 + 72) = v53;
    *(_QWORD *)(v47 + 80) = v54;
    v55 = static os_log_type_t.error.getter(v53);
    sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v55, "Error importing sharing extension content %{public}@ <%@>", 57, 2, v47);
    swift_setDeallocating(v47);
    v56 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v47 + 32, 2, v56);

    sub_1008EAE5C();
    swift_errorRelease(v43);
  }
  v57 = *(_QWORD *)(v0 + 816);
  v58 = *(_QWORD *)(v0 + 808);
  v59 = *(_QWORD *)(v0 + 800);
  v60 = *(_QWORD *)(v0 + 792);
  v61 = *(_QWORD *)(v0 + 784);
  v62 = *(_QWORD *)(v0 + 760);
  v63 = *(_QWORD *)(v0 + 752);
  v64 = *(_QWORD *)(v0 + 744);
  v65 = *(_QWORD *)(v0 + 736);
  v66 = *(_QWORD *)(v0 + 712);
  v67 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 824));
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008E89AC()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;

  if (qword_1013DD748 != -1)
    swift_once(&qword_1013DD748, sub_100A023E8);
  swift_beginAccess(&static OS_os_log.crlBoardLibrary, v0 + 65, 0, 0);
  v1 = (void *)static OS_os_log.crlBoardLibrary;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v0 + 53);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = v1;
  v5 = UUID.uuidString.getter(v4);
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v9, "Creating new board with Board UUID (%@).", 40, 2, inited);
  swift_setDeallocating(inited);
  v10 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v10);

  v11 = (uint64_t **)swift_task_alloc(dword_10140E154);
  v0[113] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_1008E8B44;
  return sub_100CB0070(v0[103], v0[93], v0[106], v0[107], 0);
}

uint64_t sub_1008E8B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 904);
  *(_QWORD *)(*(_QWORD *)v2 + 912) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[112];
    v7 = v4[111];
    v8 = sub_1008E8C04;
  }
  else
  {
    v4[115] = a1;
    v6 = v4[112];
    v7 = v4[111];
    v8 = sub_1008E8F28;
  }
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_1008E8C04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 744);
  swift_release(*(_QWORD *)(v0 + 880));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008E8C94, 0, 0);
}

uint64_t sub_1008E8C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 824);

  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 912);
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 496, 0, 0);
  v3 = (void *)static OS_os_log.crlSharingExtension;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v2, v0 + 664, v0 + 568);
  v6 = *(_QWORD *)(v0 + 576);
  v7 = *(_QWORD *)(v0 + 584);
  v8 = v3;
  v9 = Error.publicDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  swift_getErrorValue(v2, v0 + 656, v0 + 616);
  v13 = Error.fullDescription.getter(*(_QWORD *)(v0 + 624));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = v14;
  v15 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v15, "Error importing sharing extension content %{public}@ <%@>", 57, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v16);

  sub_1008EAE5C();
  swift_errorRelease(v2);
  v17 = *(_QWORD *)(v0 + 816);
  v18 = *(_QWORD *)(v0 + 808);
  v19 = *(_QWORD *)(v0 + 800);
  v20 = *(_QWORD *)(v0 + 792);
  v21 = *(_QWORD *)(v0 + 784);
  v22 = *(_QWORD *)(v0 + 760);
  v23 = *(_QWORD *)(v0 + 752);
  v24 = *(_QWORD *)(v0 + 744);
  v25 = *(_QWORD *)(v0 + 736);
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 824));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008E8F28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 744);
  swift_release(*(_QWORD *)(v0 + 880));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008E8FB8, 0, 0);
}

uint64_t sub_1008E8FB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 920);

  *(_QWORD *)(v0 + 928) = *(_QWORD *)(v0 + 832);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = type metadata accessor for CRLSEImportManifest(0);
  *(_QWORD *)(v0 + 936) = sub_1008EB168(*(_QWORD *)(v2 + *(int *)(v3 + 28)));
  *(_QWORD *)(v0 + 944) = v4;
  v5 = (_QWORD *)swift_task_alloc(dword_10140E224);
  *(_QWORD *)(v0 + 952) = v5;
  *v5 = v0;
  v5[1] = sub_1008E9070;
  return sub_100CA2984(*(_QWORD *)(v0 + 824));
}

uint64_t sub_1008E9070(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 952);
  *(_QWORD *)(v3 + 960) = a1;
  *(_QWORD *)(v3 + 968) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = sub_1008E9BD0;
  }
  else
  {
    v5 = sub_1008E9140;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1008E9140()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  id v23;

  v1 = v0[121];
  v2 = v0[117];
  v3 = *(void **)(*(_QWORD *)(v0[120] + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
  v0[122] = v3;
  v4 = v3;
  v5 = (uint64_t)sub_1008EA5F4(v2, (uint64_t)v4);
  v0[123] = v1;
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 74, 0, 0);
  v6 = (void *)static OS_os_log.crlSharingExtension;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[124] = v7;
  inited = swift_initStackObject(v7, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v22 = v5;
    else
      v22 = v5 & 0xFFFFFFFFFFFFFF8;
    v23 = v6;
    swift_bridgeObjectRetain(v5);
    v9 = _CocoaArrayWrapper.endIndex.getter(v22);
    v11 = swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = v6;
  }
  v12 = v0[117];
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v9;
  v13 = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v13;
  v14 = static os_log_type_t.debug.getter(v11);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v14, "%d of %d Text items imported", 28, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  v0[125] = v15;
  swift_arrayDestroy(inited + 32, 2, v15);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v18 = v5;
    else
      v18 = v5 & 0xFFFFFFFFFFFFFF8;
    v19 = type metadata accessor for CRLBoardItem(0);
    swift_bridgeObjectRetain(v5);
    v17 = _bridgeCocoaArray<A>(_:)(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = swift_bridgeObjectRetain(v5);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v16);
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardItem(0);
    v17 = v5;
  }
  v0[126] = v17;
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)swift_task_alloc(dword_1013F959C);
  v0[127] = v20;
  *v20 = v0;
  v20[1] = sub_1008E93F4;
  v20[54] = v0[118];
  v20[55] = v4;
  return swift_task_switch(sub_1008EB654, 0, 0);
}

uint64_t sub_1008E93F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1016);
  *(_QWORD *)(*(_QWORD *)v1 + 1024) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008E9488, 0, 0);
}

uint64_t sub_1008E9488()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v3;

  v3 = v0[126];
  sub_10061EAC8(v0[128]);
  v0[129] = v3;
  v1 = (_QWORD *)swift_task_alloc(dword_101409BB4);
  v0[130] = v1;
  *v1 = v0;
  v1[1] = sub_1008E9524;
  return sub_100C00668(v3);
}

uint64_t sub_1008E9524()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1040));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008E95B0, 0, 0);
}

uint64_t sub_1008E95B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 1048) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008E964C, v2, v3);
}

uint64_t sub_1008E964C()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)();

  v1 = v0[123];
  v2 = (char *)v0[120];
  swift_release(v0[131]);
  sub_100CA2F0C(v2);
  v0[132] = v1;
  if (v1)
    v3 = sub_1008E9E58;
  else
    v3 = sub_1008E96FC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008E96FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  NSURL *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 1000);
  v2 = (void *)static OS_os_log.crlSharingExtension;
  inited = swift_initStackObject(*(_QWORD *)(v0 + 992), v0 + 352);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = v2;
  v5 = URL.relativeString.getter();
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v8 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  v10 = static os_log_type_t.debug.getter(v9);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v10, "Shared content imported, deleting %@", 36, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v1);

  v11 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  *(_QWORD *)(v0 + 648) = 0;
  LODWORD(inited) = objc_msgSend(v11, "removeItemAtURL:error:", v13, v0 + 648);

  v15 = *(void **)(v0 + 648);
  v16 = *(void **)(v0 + 976);
  v17 = *(void **)(v0 + 960);
  v18 = *(_QWORD *)(v0 + 824);
  if ((_DWORD)inited)
  {
    v19 = v15;
    sub_1004B84A4(v18, type metadata accessor for CRLBoardIdentifier);

  }
  else
  {
    v20 = v15;
    v21 = _convertNSErrorToError(_:)(v15);

    swift_willThrow(v22);
    sub_1004B84A4(v18, type metadata accessor for CRLBoardIdentifier);
    if (qword_1013DD758 != -1)
      swift_once(&qword_1013DD758, sub_100A02698);
    swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 496, 0, 0);
    v23 = (void *)static OS_os_log.crlSharingExtension;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v25 = swift_initStackObject(v24, v0 + 128);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v21, v0 + 664, v0 + 568);
    v26 = *(_QWORD *)(v0 + 576);
    v27 = *(_QWORD *)(v0 + 584);
    v28 = v23;
    v29 = Error.publicDescription.getter(v26, v27);
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = v8;
    *(_QWORD *)(v25 + 32) = v29;
    *(_QWORD *)(v25 + 40) = v30;
    swift_getErrorValue(v21, v0 + 656, v0 + 616);
    v31 = Error.fullDescription.getter(*(_QWORD *)(v0 + 624));
    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = v8;
    *(_QWORD *)(v25 + 72) = v31;
    *(_QWORD *)(v25 + 80) = v32;
    v33 = static os_log_type_t.error.getter(v31);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v33, "Error importing sharing extension content %{public}@ <%@>", 57, 2, v25);
    swift_setDeallocating(v25);
    v34 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 32, 2, v34);

    sub_1008EAE5C();
    swift_errorRelease(v21);
  }
  v35 = *(_QWORD *)(v0 + 816);
  v36 = *(_QWORD *)(v0 + 808);
  v37 = *(_QWORD *)(v0 + 800);
  v38 = *(_QWORD *)(v0 + 792);
  v39 = *(_QWORD *)(v0 + 784);
  v40 = *(_QWORD *)(v0 + 760);
  v41 = *(_QWORD *)(v0 + 752);
  v42 = *(_QWORD *)(v0 + 744);
  v43 = *(_QWORD *)(v0 + 736);
  v45 = *(_QWORD *)(v0 + 712);
  v46 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 824));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008E9AD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[100];
  v2 = v0[97];
  v3 = v0[96];
  v4 = v0[89];
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[91] + 56))(v4, 1, 1, v0[90]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1004CB800(v4, &qword_1013E4690);
  v0[116] = v0[108];
  v5 = v0[85];
  v6 = type metadata accessor for CRLSEImportManifest(0);
  v0[117] = sub_1008EB168(*(_QWORD *)(v5 + *(int *)(v6 + 28)));
  v0[118] = v7;
  v8 = (_QWORD *)swift_task_alloc(dword_10140E224);
  v0[119] = v8;
  *v8 = v0;
  v8[1] = sub_1008E9070;
  return sub_100CA2984(v0[103]);
}

uint64_t sub_1008E9BD0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  sub_1004B84A4(*(_QWORD *)(v0 + 824), type metadata accessor for CRLBoardIdentifier);
  v1 = *(_QWORD *)(v0 + 968);
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 496, 0, 0);
  v2 = (void *)static OS_os_log.crlSharingExtension;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v1, v0 + 664, v0 + 568);
  v5 = *(_QWORD *)(v0 + 576);
  v6 = *(_QWORD *)(v0 + 584);
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  swift_getErrorValue(v1, v0 + 656, v0 + 616);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 624));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v14, "Error importing sharing extension content %{public}@ <%@>", 57, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  sub_1008EAE5C();
  swift_errorRelease(v1);
  v16 = *(_QWORD *)(v0 + 816);
  v17 = *(_QWORD *)(v0 + 808);
  v18 = *(_QWORD *)(v0 + 800);
  v19 = *(_QWORD *)(v0 + 792);
  v20 = *(_QWORD *)(v0 + 784);
  v21 = *(_QWORD *)(v0 + 760);
  v22 = *(_QWORD *)(v0 + 752);
  v23 = *(_QWORD *)(v0 + 744);
  v24 = *(_QWORD *)(v0 + 736);
  v26 = *(_QWORD *)(v0 + 712);
  v27 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 824));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008E9E58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 960);
  v2 = *(_QWORD *)(v0 + 824);

  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  v3 = *(_QWORD *)(v0 + 1056);
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 496, 0, 0);
  v4 = (void *)static OS_os_log.crlSharingExtension;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v3, v0 + 664, v0 + 568);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 584);
  v9 = v4;
  v10 = Error.publicDescription.getter(v7, v8);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  swift_getErrorValue(v3, v0 + 656, v0 + 616);
  v14 = Error.fullDescription.getter(*(_QWORD *)(v0 + 624));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = v15;
  v16 = static os_log_type_t.error.getter(v14);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v16, "Error importing sharing extension content %{public}@ <%@>", 57, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v17);

  sub_1008EAE5C();
  swift_errorRelease(v3);
  v18 = *(_QWORD *)(v0 + 816);
  v19 = *(_QWORD *)(v0 + 808);
  v20 = *(_QWORD *)(v0 + 800);
  v21 = *(_QWORD *)(v0 + 792);
  v22 = *(_QWORD *)(v0 + 784);
  v23 = *(_QWORD *)(v0 + 760);
  v24 = *(_QWORD *)(v0 + 752);
  v25 = *(_QWORD *)(v0 + 744);
  v26 = *(_QWORD *)(v0 + 736);
  v28 = *(_QWORD *)(v0 + 712);
  v29 = *(_QWORD *)(v0 + 704);
  swift_task_dealloc(*(_QWORD *)(v0 + 824));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1008EA430()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSEImporter(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1008EA510()
{
  return type metadata accessor for CRLSEImporter(0);
}

uint64_t type metadata accessor for CRLSEImporter(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F9560;
  if (!qword_1013F9560)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSEImporter);
  return result;
}

void sub_1008EA554(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v6 = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    v9 = v7;
    sub_10067E7A0(319);
    if (v5 <= 0x3F)
    {
      v10 = *(_QWORD *)(v4 - 8) + 64;
      v11 = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 6, &v6, a1 + 80);
    }
  }
}

double *sub_1008EA5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double *result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[248];
  _QWORD v33[32];
  double *v34;

  v5 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for AttributedString(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v13)
  {
    v26[0] = v2;
    v34 = _swiftEmptyArrayStorage;
    v31 = v10;
    specialized ContiguousArray.reserveCapacity(_:)(v13);
    v15 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v30 = sub_1004B8930(0, (unint64_t *)&qword_1013F95A0, NSAttributedString_ptr);
    v29 = (id)objc_opt_self(CRLPathSource);
    sub_10054F488((uint64_t)v32);
    sub_1004C4938((uint64_t)v32, (uint64_t)v33, &qword_1013E1B50);
    v16 = *(_QWORD *)(v9 + 72);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v28 = v16;
    v26[1] = a2;
    do
    {
      v27(v12, v15, v31);
      v17 = (char *)NSAttributedString.init(_:)(v12);
      v18 = objc_msgSend(v29, "pathSourceForShapeType:naturalSize:", 0, sub_100479D94(0));
      v19 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
      v20 = v18;
      v21 = sub_100CF4294(0, 0, v18, 0, 0, 0, 1, 0, 1, (_QWORD *)1, (void *)1, (void *)1, (void *)1, v17, v7, v33, 0, 0, 0);

      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013F1500);
      v22 = type metadata accessor for CRLWPShapeItem(0);
      v23 = swift_dynamicCastClassUnconditional(v21, v22, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v24 = *((_QWORD *)v34 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
      v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v23);
      specialized ContiguousArray._endMutation()(v25);
      v15 += v28;
      --v13;
    }
    while (v13);
    return v34;
  }
  return result;
}

id sub_1008EA898(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void (*v16)(__n128);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  char *v20;
  void (*v21)(char *, uint64_t);
  __n128 v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, __n128);
  __n128 v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  uint64_t v28;
  __n128 v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  NSString v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t inited;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  objc_class *v57;
  id v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  unsigned int v63;
  uint64_t v64;
  char *v65;
  void (*v66)(__n128);
  char *v67;
  char *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  objc_super v72;
  char v73[72];
  _QWORD v74[4];

  v69 = a2;
  v71 = a1;
  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v68 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL.DirectoryHint(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  v70 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v67 = &v2[OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemURL];
  v16 = *(void (**)(__n128))(v15 + 56);
  v65 = (char *)&v61 - v17;
  v66 = v16;
  v16(v14);
  v74[0] = 0x74726F706D49;
  v74[1] = 0xE600000000000000;
  v18 = enum case for URL.DirectoryHint.inferFromPath(_:);
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v19)(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_1004D292C();
  v20 = v2;
  v62 = v20;
  URL.appending<A>(path:directoryHint:)(v74, v8, &type metadata for String);
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  v22 = swift_bridgeObjectRelease(v74[1]);
  strcpy((char *)v74, "ImportFailures");
  HIBYTE(v74[1]) = -18;
  v23 = v18;
  v63 = v18;
  v19(v8, v18, v5, v22);
  v24 = v19;
  URL.appending<A>(path:directoryHint:)(v74, v8, &type metadata for String);
  v21(v8, v5);
  v25 = swift_bridgeObjectRelease(v74[1]);
  v26 = &v20[OBJC_IVAR____TtC8Freeform13CRLSEImporter_importFailureURL];
  v27 = *(void (**)(char *, char *, uint64_t, __n128))(v70 + 32);
  v28 = v64;
  v27(v26, v12, v64, v25);
  strcpy((char *)v74, "Snapshot.plist");
  HIBYTE(v74[1]) = -18;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v8, v23, v5);
  URL.appending<A>(path:directoryHint:)(v74, v8, &type metadata for String);
  v21(v8, v5);
  v29 = swift_bridgeObjectRelease(v74[1]);
  v30 = v62;
  v27(&v62[OBJC_IVAR____TtC8Freeform13CRLSEImporter_librarySnapshotURL], v12, v28, v29);
  v74[0] = 0xD000000000000013;
  v74[1] = 0x8000000100FDE380;
  ((void (*)(char *, _QWORD, uint64_t))v24)(v8, v63, v5);
  URL.appending<A>(path:directoryHint:)(v74, v8, &type metadata for String);
  v31 = v8;
  v32 = v65;
  v33 = v5;
  v34 = v28;
  v35 = v70;
  v21(v31, v33);
  v36 = swift_bridgeObjectRelease(v74[1]);
  v27(&v30[OBJC_IVAR____TtC8Freeform13CRLSEImporter_pendingBoardsURL], v12, v34, v36);
  v37 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v68, v32, v34);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v66)(v37, 0, 1, v34);
  v38 = (uint64_t)v67;
  swift_beginAccess(v67, v74, 33, 0);
  sub_10067E7F4(v37, v38);
  swift_endAccess(v74);
  v39 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v40 = OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemOperationQueue;
  *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemOperationQueue] = v39;
  v41 = v39;
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setName:", v42);

  objc_msgSend(*(id *)&v30[v40], "setMaxConcurrentOperationCount:", 1);
  objc_msgSend(*(id *)&v30[v40], "setQualityOfService:", 17);
  v43 = v69;
  *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary] = v69;
  v44 = v43;
  v45 = v30;

  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v74, 0, 0);
  v46 = (void *)static OS_os_log.crlSharingExtension;
  v47 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v47, v73);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v49 = v46;
  v50 = URL.relativePath.getter();
  v51 = v32;
  v53 = v52;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v50;
  *(_QWORD *)(inited + 40) = v53;
  v55 = static os_log_type_t.debug.getter(v54);
  sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v55, "Container URL %@", 16, 2, inited);
  swift_setDeallocating(inited);
  v56 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v56);

  v57 = (objc_class *)type metadata accessor for CRLSEImporter(0);
  v72.receiver = v45;
  v72.super_class = v57;
  v58 = objc_msgSendSuper2(&v72, "init");
  v59 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v59(v71, v34);
  v59((uint64_t)v51, v34);
  return v58;
}

id sub_1008EAE5C()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v9 = 0;
  v4 = objc_msgSend(v0, "removeItemAtURL:error:", v2, &v9);

  if (v4)
    return v9;
  v8 = v9;
  v6 = v9;
  v7 = _convertNSErrorToError(_:)(v8);

  swift_willThrow();
  return (id)swift_errorRelease(v7);
}

uint64_t sub_1008EAF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(type metadata accessor for CRLSEImportManifest(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v12 = *(_QWORD *)(v1 + 64);
  v13 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v13 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v3, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v3, v7);
  v9 = (v12 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + v5 + 8) & ~v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v10, v13);
  return swift_deallocObject(v0, v10 + v6, v2 | v5 | 7);
}

uint64_t sub_1008EB0A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for CRLSEImportManifest(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1013F958C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1004CF80C;
  return sub_1008E7BB8(a1, v9, v10, v11, v12, v13);
}

double *sub_1008EB168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v45[2];
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  double *v58;
  double *v59;

  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v56 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v55 = (char *)v45 - v9;
  v10 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for AttributedString(0);
  v13 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v54 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v53 = (char *)v45 - v16;
  v17 = type metadata accessor for CRLSEManifestItem(0);
  __chkstk_darwin(v17);
  v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
    return _swiftEmptyArrayStorage;
  v47 = v12;
  v57 = v13;
  v22 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v49 = *(_QWORD *)(v18 + 72);
  v45[1] = a1;
  swift_bridgeObjectRetain(a1);
  v58 = _swiftEmptyArrayStorage;
  v59 = _swiftEmptyArrayStorage;
  v51 = v5;
  v52 = v4;
  v23 = v46;
  v50 = v17;
  v48 = v20;
  do
  {
    v24 = v21;
    v25 = v4;
    v26 = v5;
    sub_1004B8460(v22, (uint64_t)v20, type metadata accessor for CRLSEManifestItem);
    v27 = v23;
    v28 = (uint64_t)v47;
    sub_1004CB7BC((uint64_t)&v20[*(int *)(v17 + 24)], (uint64_t)v47, &qword_1013E5380);
    v29 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v28, 1, v27) == 1)
    {
      sub_1004CB800(v28, &qword_1013E5380);
      v23 = v27;
      v5 = v26;
      v4 = v25;
      v30 = v24;
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
      v32 = v53;
      v31(v53, v28, v27);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v54, v32, v27);
      v23 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) != 0)
        v33 = (unint64_t)v58;
      else
        v33 = sub_100D1163C(0, *((_QWORD *)v58 + 2) + 1, 1, (unint64_t)v58);
      v30 = v24;
      v35 = *(_QWORD *)(v33 + 16);
      v34 = *(_QWORD *)(v33 + 24);
      if (v35 >= v34 >> 1)
        v33 = sub_100D1163C(v34 > 1, v35 + 1, 1, v33);
      *(_QWORD *)(v33 + 16) = v35 + 1;
      v36 = v57;
      v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v58 = (double *)v33;
      v31((char *)(v33 + v37 + *(_QWORD *)(v57 + 72) * v35), (uint64_t)v54, v27);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v53, v27);
      v5 = v51;
      v4 = v52;
      v17 = v50;
    }
    v20 = v48;
    sub_1004CB7BC((uint64_t)&v48[*(int *)(v17 + 28)], (uint64_t)v4, &qword_1013E04D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSEManifestItem);
      sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
    }
    else
    {
      v38 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v39 = v55;
      v38(v55, v4, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v56, v39, v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) != 0)
        v40 = (unint64_t)v59;
      else
        v40 = sub_100D0FAC8(0, *((_QWORD *)v59 + 2) + 1, 1, (unint64_t)v59);
      v42 = *(_QWORD *)(v40 + 16);
      v41 = *(_QWORD *)(v40 + 24);
      if (v42 >= v41 >> 1)
        v40 = sub_100D0FAC8(v41 > 1, v42 + 1, 1, v40);
      v23 = v46;
      *(_QWORD *)(v40 + 16) = v42 + 1;
      v43 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v59 = (double *)v40;
      v5 = v51;
      v38((char *)(v40 + v43 + *(_QWORD *)(v6 + 72) * v42), v56, v51);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v55, v5);
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSEManifestItem);
      v4 = v52;
      v17 = v50;
    }
    v22 += v49;
    v21 = v30 - 1;
  }
  while (v21);
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_1008EB63C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 432) = a1;
  *(_QWORD *)(v2 + 440) = a2;
  return swift_task_switch(sub_1008EB654, 0, 0);
}

uint64_t sub_1008EB654()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  Class isa;
  id v6;

  v1 = v0[54];
  v2 = (void *)v0[55];
  v3 = objc_allocWithZone((Class)CRLMultipleItemImporter);
  type metadata accessor for URL(0);
  swift_bridgeObjectRetain(v1);
  v4 = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v3, "initWithURLs:boardItemFactory:", isa, v4, swift_bridgeObjectRelease().n128_f64[0]);
  v0[56] = v6;

  v0[2] = v0;
  v0[3] = sub_1008EB760;
  v0[42] = swift_continuation_init(v0 + 2, 0);
  v0[38] = _NSConcreteStackBlock;
  v0[39] = 0x40000000;
  v0[40] = sub_1005495C4;
  v0[41] = &unk_101286938;
  objc_msgSend(v6, "importBoardItemsWithCompletionHandler:", v0 + 38);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1008EB760()
{
  return swift_task_switch(sub_1008EB7AC, 0, 0);
}

uint64_t sub_1008EB7AC()
{
  _QWORD *v0;
  void *v1;
  void **v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  v1 = (void *)v0[56];
  v2 = (void **)&static OS_os_log.crlSharingExtension;
  swift_beginAccess(&static OS_os_log.crlSharingExtension, v0 + 43, 0, 0);
  v3 = (void *)static OS_os_log.crlSharingExtension;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v3;
  v7 = objc_msgSend(v1, "boardItems");
  v40 = type metadata accessor for CRLBoardItem(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v40);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v39 = v8;
    else
      v39 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v50 = v0;
  v10 = (void *)v0[56];
  v11 = v0[54];
  v12 = swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v9;
  v13 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v13;
  v14 = static os_log_type_t.debug.getter(v12);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v14, "%d of %d URL items imported", 27, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  v16 = objc_msgSend(v10, "errors");
  v17 = sub_1004B804C(&qword_1013E0210);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v49 = v18;
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v44 = v0 + 46;
    v45 = v0 + 10;
    v42 = v0 + 52;
    v43 = v0 + 49;
    v41 = v0 + 53;
    swift_bridgeObjectRetain(v18);
    v20 = 0;
    v47 = v15;
    v48 = v4;
    v46 = v19;
    do
    {
      v21 = *(_QWORD *)(v49 + 8 * v20++ + 32);
      v22 = *v2;
      v23 = swift_initStackObject(v4, v45);
      *(_OWORD *)(v23 + 16) = xmmword_100EF5A10;
      swift_getErrorValue(v21, v42, v44);
      v24 = v2;
      v25 = v50[47];
      v26 = v50[48];
      swift_errorRetain(v21);
      v27 = v22;
      v28 = Error.publicDescription.getter(v25, v26);
      v30 = v29;
      *(_QWORD *)(v23 + 56) = &type metadata for String;
      v31 = sub_1004CFC2C();
      *(_QWORD *)(v23 + 64) = v31;
      *(_QWORD *)(v23 + 32) = v28;
      *(_QWORD *)(v23 + 40) = v30;
      v2 = v24;
      v0 = v50;
      swift_getErrorValue(v21, v41, v43);
      v32 = Error.fullDescription.getter(v50[50]);
      *(_QWORD *)(v23 + 96) = &type metadata for String;
      *(_QWORD *)(v23 + 104) = v31;
      v4 = v48;
      *(_QWORD *)(v23 + 72) = v32;
      *(_QWORD *)(v23 + 80) = v33;
      v34 = static os_log_type_t.error.getter(v32);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v34, "Error creating board items from sharing extension content %{public}@ <%@>", 73, 2, v23);
      swift_setDeallocating(v23);
      swift_arrayDestroy(v23 + 32, 2, v47);

      swift_errorRelease(v21);
    }
    while (v46 != v20);
    swift_bridgeObjectRelease();
  }
  v35 = (void *)v0[56];
  v36 = objc_msgSend(v35, "boardItems", swift_bridgeObjectRelease().n128_f64[0]);
  v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v40);

  return ((uint64_t (*)(uint64_t))v0[1])(v37);
}

double sub_1008EBB88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1008E66B4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1008EBB90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008EBBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008EBBB0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1008EBBB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F95C8;
  if (!qword_1013F95C8)
  {
    v1 = sub_1004CB6A4(&qword_1013F95C0);
    sub_1004B7878(&qword_1013F95D0, type metadata accessor for CRLSELibraryViewModel.Item, (uint64_t)&unk_100EFFED0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F95C8);
  }
  return result;
}

uint64_t sub_1008EBC34(uint64_t a1)
{
  return sub_1008E7270(a1) & 1;
}

unint64_t sub_1008EBC50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F95E0;
  if (!qword_1013F95E0)
  {
    v1 = sub_1004CB6A4(&qword_1013F95D8);
    sub_1004B7878(&qword_1013E9518, type metadata accessor for CRLSELibraryViewModel.Item, (uint64_t)&unk_100EFFEF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F95E0);
  }
  return result;
}

uint64_t sub_1008EBCCC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1008EBCF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1008E5ED8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1008EBD00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1008EBD10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9538;
  if (!qword_1013E9538)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F9600);
    sub_1004B7878(&qword_1013F9610, type metadata accessor for CRLSELibraryViewModeItemNode, (uint64_t)&unk_100F00050);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E9538);
  }
  return result;
}

uint64_t sub_1008EBD8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1008EBDB0()
{
  sub_1008E6138();
}

uint64_t sub_1008EBEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD v9[4];
  _BYTE v10[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(v3, v10, 0, 0);
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_100843260(a1), (v6 & 1) != 0))
  {
    sub_1004F370C(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)v9);
    v7 = 1;
  }
  else
  {
    v7 = 0;
    memset(v9, 0, 24);
    v9[3] = 1;
  }
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013DFC00);
  return v7;
}

id sub_1008EC02C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void *v10;
  _QWORD v12[3];
  uint64_t v13;

  a4(v12, a3);
  v4 = v13;
  if (!v13)
    return 0;
  v5 = sub_1004BB5A4(v12, v13);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
  v10 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v9, v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  return v10;
}

double sub_1008EC0FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];
  _BYTE v12[32];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(v5, v11, 0, 0);
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_100843260(a1), (v8 & 1) != 0))
  {
    sub_1004F370C(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)v12);
    *(_QWORD *)(a2 + 24) = sub_1004B804C(&qword_1013E0230);
    v9 = swift_allocObject(&unk_101286AF8, 48, 7);
    *(_QWORD *)a2 = v9;
    sub_1004C4938((uint64_t)v12, v9 + 16, &qword_1013E0230);
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1008EC278(void (*a1)(uint64_t, _OWORD *, char *))
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  char v19;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  char v24[24];

  v19 = 0;
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v24, 0, 0);
  v4 = *v3;
  v18 = v4 + 64;
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(v4);
  v9 = 0;
  do
  {
    if (!v7)
    {
      v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
      }
      if (v13 >= v8)
        goto LABEL_24;
      v14 = *(_QWORD *)(v18 + 8 * v13);
      if (v14)
        goto LABEL_10;
      v15 = v9 + 2;
      ++v9;
      if (v13 + 1 >= v8)
        goto LABEL_24;
      v14 = *(_QWORD *)(v18 + 8 * v15);
      if (!v14)
      {
        v9 = v13 + 1;
        if (v13 + 2 >= v8)
          goto LABEL_24;
        v14 = *(_QWORD *)(v18 + 8 * (v13 + 2));
        if (v14)
        {
          v13 += 2;
          goto LABEL_10;
        }
        v15 = v13 + 3;
        v9 = v13 + 2;
        if (v13 + 3 >= v8)
          goto LABEL_24;
        v14 = *(_QWORD *)(v18 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            v13 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_29;
            if (v13 >= v8)
              break;
            v14 = *(_QWORD *)(v18 + 8 * v13);
            ++v15;
            if (v14)
              goto LABEL_10;
          }
          v9 = v8 - 1;
LABEL_24:
          v7 = 0;
          memset(v20, 0, sizeof(v20));
          v21 = 1;
          goto LABEL_25;
        }
      }
      v13 = v15;
LABEL_10:
      v7 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v13 << 6);
      v9 = v13;
      goto LABEL_6;
    }
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v9 << 6);
LABEL_6:
    v12 = *(_QWORD *)(v4 + 56);
    *(_QWORD *)&v20[0] = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11);
    sub_1004F370C(v12 + 32 * v11, (uint64_t)v20 + 8);
LABEL_25:
    sub_1004C4938((uint64_t)v20, (uint64_t)&v22, &qword_1013F9650);
    if (v23[3] == 1)
      break;
    v16 = v22;
    sub_1004C4938((uint64_t)v23, (uint64_t)v20, &qword_1013E0230);
    a1(v16, v20, &v19);
    sub_1004CB800((uint64_t)v20, &qword_1013E0230);
  }
  while (v19 != 1);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

id sub_1008EC574()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPropertyMap();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLPropertyMap()
{
  return objc_opt_self(_TtC8Freeform14CRLPropertyMap);
}

uint64_t sub_1008EC5D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1008EC600(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  _QWORD v33[3];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];
  char v39[24];

  v32 = 0;
  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v39, 0, 0);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 64);
  v27 = *v3 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v29 = (uint64_t)v35 + 8;
  v31 = v38;
  v28 = (unint64_t)(v6 + 63) >> 6;
  v26 = v28 - 1;
  v30 = v4;
  swift_bridgeObjectRetain(v4);
  v9 = 0;
  do
  {
    if (!v8)
    {
      v19 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
      }
      if (v19 >= v28)
        goto LABEL_26;
      v20 = *(_QWORD *)(v27 + 8 * v19);
      if (v20)
        goto LABEL_12;
      v21 = v9 + 2;
      ++v9;
      if (v19 + 1 >= v28)
        goto LABEL_26;
      v20 = *(_QWORD *)(v27 + 8 * v21);
      if (!v20)
      {
        v9 = v19 + 1;
        if (v19 + 2 >= v28)
          goto LABEL_26;
        v20 = *(_QWORD *)(v27 + 8 * (v19 + 2));
        if (v20)
        {
          v19 += 2;
          goto LABEL_12;
        }
        v21 = v19 + 3;
        v9 = v19 + 2;
        if (v19 + 3 >= v28)
          goto LABEL_26;
        v20 = *(_QWORD *)(v27 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v19 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_32;
            if (v19 >= v28)
              break;
            v20 = *(_QWORD *)(v27 + 8 * v19);
            ++v21;
            if (v20)
              goto LABEL_12;
          }
          v9 = v26;
LABEL_26:
          v8 = 0;
          memset(v35, 0, sizeof(v35));
          v36 = 1;
          goto LABEL_27;
        }
      }
      v19 = v21;
LABEL_12:
      v8 = (v20 - 1) & v20;
      v17 = __clz(__rbit64(v20)) + (v19 << 6);
      v9 = v19;
      goto LABEL_8;
    }
    v16 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v17 = v16 | (v9 << 6);
LABEL_8:
    v18 = *(_QWORD *)(v30 + 56);
    *(_QWORD *)&v35[0] = *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * v17);
    sub_1004F370C(v18 + 32 * v17, v29);
LABEL_27:
    sub_1004C4938((uint64_t)v35, (uint64_t)&v37, &qword_1013F9650);
    if (v38[3] == 1)
      break;
    v22 = v37;
    sub_1004C4938((uint64_t)v31, (uint64_t)v35, &qword_1013E0230);
    sub_1004F370C((uint64_t)v35, (uint64_t)v33);
    v23 = v34;
    if (v34)
    {
      v10 = sub_1004BB5A4(v33, v34);
      v11 = *(_QWORD *)(v23 - 8);
      v12 = __chkstk_darwin(v10);
      v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
      v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v23);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v23);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
    }
    else
    {
      v15 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(a2 + 16))(a2, v22, v15, &v32);
    swift_unknownObjectRelease(v15);
    sub_1004CB800((uint64_t)v35, &qword_1013E0230);
  }
  while ((v32 & 1) == 0);
  *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  return result;
}

double sub_1008EC988()
{
  double result;

  sub_100757E04(&_mh_execute_header, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47, "Requesting value for invalid property", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boxedValue(for:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2u, 47, (uint64_t)"Requesting value for invalid property", 37, 2u);
  *(_QWORD *)&result = swift_unknownObjectRetain(0).n128_u64[0];
  return result;
}

id sub_1008ECD58()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStyle();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPStyle()
{
  return objc_opt_self(_TtC8Freeform10CRLWPStyle);
}

Class sub_1008ECDA8(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  int v4;
  id v5;
  double v6;
  id v7;
  double v8;
  uint64_t v9;
  Class isa;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v1);
    v3 = (int *)(a1 + 32);
    do
    {
      v4 = *v3++;
      v5 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v6) = v4;
      v7 = objc_msgSend(v5, "initWithFloat:", v6);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      --v1;
    }
    while (v1);
  }
  sub_10067AC6C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return isa;
}

Class sub_1008ECE98(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned int v4;
  id v5;
  double v6;
  uint64_t v7;
  Class isa;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v1);
    v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v4 = *v3++;
      v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v4);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
      v6 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v6, v5);
      specialized ContiguousArray._endMutation()(v7);
      --v1;
    }
    while (v1);
  }
  sub_10067AC6C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return isa;
}

UIImage *sub_1008ECF80(void *a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  UIImage *v24;

  objc_msgSend(a1, "size");
  v4 = v3;
  objc_msgSend(v1, "size");
  if (v4 <= v5)
    v4 = v5;
  objc_msgSend(a1, "size");
  v7 = v6;
  objc_msgSend(v1, "size");
  if (v7 > v8)
    v8 = v7;
  v9 = v4;
  UIGraphicsBeginImageContextWithOptions(*(CGSize *)(&v8 - 1), 0, 0.0);
  objc_msgSend(v1, "size");
  v11 = v10 * 0.5;
  objc_msgSend(a1, "size");
  v13 = v11 - v12 * 0.5;
  objc_msgSend(v1, "size");
  v15 = v14 * 0.5;
  objc_msgSend(a1, "size");
  v17 = v15 - v16 * 0.5;
  objc_msgSend(a1, "size");
  v19 = v18;
  objc_msgSend(a1, "size");
  objc_msgSend(a1, "drawInRect:", v13, v17, v19, v20);
  objc_msgSend(v1, "size");
  v22 = v21;
  objc_msgSend(v1, "size");
  objc_msgSend(v1, "drawInRect:", 0.0, 0.0, v22, v23);
  v24 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  return v24;
}

uint64_t sub_1008ED0E4(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  objc_super v13;
  objc_super v14;

  v3 = type metadata accessor for CRLTextInputModifierKeyMask();
  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  v5 = (char *)objc_allocWithZone((Class)v3);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v4;
  v14.receiver = v5;
  v14.super_class = (Class)v3;
  v6 = a1;
  v7 = (char *)objc_msgSendSuper2(&v14, "init");
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v8;
  v10 = (char *)objc_allocWithZone((Class)v3);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v9;
  v13.receiver = v10;
  v13.super_class = (Class)v3;
  v11 = objc_msgSendSuper2(&v13, "init");

  LOBYTE(v3) = static NSObject.== infix(_:_:)(v11, v6);
  return v3 & 1;
}

id sub_1008ED1B4(void *a1)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  objc_super v16;
  objc_super v17;
  objc_super v18;

  v3 = *v1;
  v4 = *(_QWORD *)((char *)*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  v5 = type metadata accessor for CRLTextInputModifierKeyMask();
  v6 = (char *)objc_allocWithZone((Class)v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v4;
  v18.receiver = v6;
  v18.super_class = (Class)v5;
  v7 = v3;
  v8 = (char *)objc_msgSendSuper2(&v18, "init");
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  v10 = *(_QWORD *)((_BYTE *)a1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v9;
  v11 = (char *)objc_allocWithZone((Class)v5);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v10;
  v17.receiver = v11;
  v17.super_class = (Class)v5;
  v12 = objc_msgSendSuper2(&v17, "init");

  v13 = (char *)objc_allocWithZone((Class)v5);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v16.receiver = v13;
  v16.super_class = (Class)v5;
  v14 = objc_msgSendSuper2(&v16, "init");
  LOBYTE(v5) = static NSObject.== infix(_:_:)(v12, v14);

  if ((v5 & 1) != 0)
  {

    return 0;
  }
  else
  {
    sub_1008ED560(a1);
  }
  return v12;
}

BOOL sub_1008ED2D0(_QWORD *a1, void *a2)
{
  void **v2;
  void **v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  objc_super v23;
  objc_super v24;
  objc_super v25;

  v3 = v2;
  v5 = (char *)*v2;
  v6 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  v7 = *(_QWORD *)((char *)*v2 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  v8 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v7;
  v25.receiver = v9;
  v25.super_class = v8;
  v10 = v5;
  v11 = (char *)objc_msgSendSuper2(&v25, "init");
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  v13 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  v14 = *(_QWORD *)((_BYTE *)a2 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v12;
  v15 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v14;
  v24.receiver = v15;
  v24.super_class = v8;
  v16 = objc_msgSendSuper2(&v24, "init");

  v17 = static NSObject.== infix(_:_:)(v16, a2);
  if ((v17 & 1) == 0)
  {

    v18 = *(_QWORD *)&v5[v6];
    v16 = a2;

    v19 = *(_QWORD *)((char *)a2 + v13) | v18;
    v20 = (char *)objc_allocWithZone(v8);
    *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v19;
    v23.receiver = v20;
    v23.super_class = v8;
    *v3 = objc_msgSendSuper2(&v23, "init");
  }
  *a1 = v16;
  return (v17 & 1) == 0;
}

id sub_1008ED408(void *a1)
{
  void **v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  objc_super v23;
  objc_super v24;
  objc_super v25;
  objc_super v26;

  v3 = (char *)*v1;
  v4 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  v5 = *(_QWORD *)((char *)*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  v6 = type metadata accessor for CRLTextInputModifierKeyMask();
  v7 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v5;
  v26.receiver = v7;
  v26.super_class = (Class)v6;
  v8 = v3;
  v9 = (char *)objc_msgSendSuper2(&v26, "init");
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  v11 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  v12 = *(_QWORD *)((_BYTE *)a1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v10;
  v13 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v12;
  v25.receiver = v13;
  v25.super_class = (Class)v6;
  v14 = objc_msgSendSuper2(&v25, "init");

  v15 = *(_QWORD *)&v3[v4];
  v16 = a1;

  v17 = *(_QWORD *)((char *)a1 + v11) | v15;
  v18 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v17;
  v24.receiver = v18;
  v24.super_class = (Class)v6;
  v19 = objc_msgSendSuper2(&v24, "init");

  *v1 = v19;
  v20 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v23.receiver = v20;
  v23.super_class = (Class)v6;
  v21 = objc_msgSendSuper2(&v23, "init");
  LOBYTE(v6) = static NSObject.== infix(_:_:)(v14, v21);

  if ((v6 & 1) != 0)
  {

    return 0;
  }
  return v14;
}

void sub_1008ED560(void *a1)
{
  void **v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  objc_super v20;
  objc_super v21;
  objc_super v22;

  v3 = (char *)*v1;
  v4 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  v5 = *(_QWORD *)((char *)*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  v6 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v5;
  v22.receiver = v7;
  v22.super_class = v6;
  v8 = v3;
  v9 = a1;
  v10 = (char *)objc_msgSendSuper2(&v22, "init");
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  v12 = (char *)v9;

  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] ^ v11;
  v14 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v13;
  v21.receiver = v14;
  v21.super_class = v6;
  v15 = objc_msgSendSuper2(&v21, "init");

  v16 = *(_QWORD *)&v3[v4];
  v17 = *(_QWORD *)((_BYTE *)v15 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v16;
  v18 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v17;
  v20.receiver = v18;
  v20.super_class = v6;
  v19 = objc_msgSendSuper2(&v20, "init");

  *v1 = v19;
}

id sub_1008ED684()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, "init");
  qword_10147FE40 = (uint64_t)result;
  return result;
}

id sub_1008ED6F4()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, "init");
  qword_10147FE48 = (uint64_t)result;
  return result;
}

id sub_1008ED768()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 2;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, "init");
  qword_10147FE50 = (uint64_t)result;
  return result;
}

id sub_1008ED7DC()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 4;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, "init");
  qword_10147FE58 = (uint64_t)result;
  return result;
}

id sub_1008ED850()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 8;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, "init");
  qword_10147FE60 = (uint64_t)result;
  return result;
}

void sub_1008ED8C4(uint64_t a1)
{
  sub_1008ED928(a1, &qword_1013DD478, (void **)&qword_10147FE50, &qword_10147FE68, (uint64_t)sub_1008ED768);
}

void sub_1008ED904(uint64_t a1)
{
  sub_1008ED928(a1, &qword_1013DD480, (void **)&qword_10147FE58, &qword_10147FE70, (uint64_t)sub_1008ED7DC);
}

void sub_1008ED928(uint64_t a1, _QWORD *a2, void **a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t inited;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[48];

  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v9, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5560;
  if (*a2 != -1)
    swift_once(a2, a5);
  v11 = *a3;
  *(_QWORD *)(inited + 32) = *a3;
  v12 = qword_1013DD470;
  v13 = v11;
  if (v12 != -1)
    v13 = (id)swift_once(&qword_1013DD470, sub_1008ED6F4);
  v14 = (void *)qword_10147FE48;
  *(_QWORD *)(inited + 40) = qword_10147FE48;
  specialized Array._endMutation()(v13);
  v15 = v14;
  sub_1008EE05C(inited);
  v17 = v16;
  swift_bridgeObjectRelease();
  *a4 = v17;
}

void sub_1008EDA14(uint64_t a1)
{
  sub_1008ED928(a1, &qword_1013DD488, (void **)&qword_10147FE60, &qword_10147FE78, (uint64_t)sub_1008ED850);
}

BOOL sub_1008EDA68(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  _BYTE v8[24];
  uint64_t v9;

  ObjectType = swift_getObjectType(v1);
  sub_1004F370C(a1, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) != 0)
    {
      v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
      v5 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

      return v4 == v5;
    }
  }
  else
  {
    sub_1004D28EC((uint64_t)v8);
  }
  return 0;
}

id sub_1008EDBA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTextInputModifierKeyMask();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLTextInputModifierKeyMask()
{
  return objc_opt_self(_TtC8Freeform27CRLTextInputModifierKeyMask);
}

id sub_1008EDBFC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id result;
  objc_super v7;

  v3 = *a1;
  v4 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  result = objc_msgSendSuper2(&v7, "init");
  *a2 = result;
  return result;
}

uint64_t sub_1008EDC5C(uint64_t a1)
{
  uint64_t WitnessTable;
  unint64_t v3;

  WitnessTable = swift_getWitnessTable(&unk_100F1613C, a1);
  v3 = sub_1004B7BE8();
  return OptionSet<>.init()(a1, WitnessTable, v3);
}

uint64_t sub_1008EDCAC(char **a1)
{
  return sub_1008ED0E4(*a1) & 1;
}

void sub_1008EDCD4(id *a1, uint64_t a2, uint64_t a3)
{
  sub_1008EDD3C(a1, a2, a3, (void (*)(id *, uint64_t, uint64_t))&OptionSet.union(_:));
}

void sub_1008EDCE0(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100F1613C, a2);
  OptionSet.intersection(_:)(a1, a2, WitnessTable);

}

void sub_1008EDD30(id *a1, uint64_t a2, uint64_t a3)
{
  sub_1008EDD3C(a1, a2, a3, (void (*)(id *, uint64_t, uint64_t))&OptionSet.symmetricDifference(_:));
}

void sub_1008EDD3C(id *a1, uint64_t a2, uint64_t a3, void (*a4)(id *, uint64_t, uint64_t))
{
  id *v4;
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100F1613C, a2);
  a4(a1, a2, WitnessTable);

}

BOOL sub_1008EDDA0(_QWORD *a1, void **a2)
{
  void *v2;
  BOOL v3;

  v2 = *a2;
  v3 = sub_1008ED2D0(a1, *a2);

  return v3;
}

id sub_1008EDDD0@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1008ED1B4(*a1);
  *a2 = result;
  return result;
}

void sub_1008EDDF8(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;

  v3 = *a1;
  v4 = sub_1008ED408(*a1);

  *a2 = v4;
}

void sub_1008EDE34(id *a1, uint64_t a2, uint64_t a3)
{
  sub_1008EDE98(a1, a2, a3, (void (*)(id *, uint64_t, uint64_t, unint64_t))&OptionSet<>.formUnion(_:));
}

uint64_t sub_1008EDE40(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  unint64_t v5;

  WitnessTable = swift_getWitnessTable(&unk_100F1613C, a2);
  v5 = sub_1004B7BE8();
  return OptionSet<>.formIntersection(_:)(a1, a2, WitnessTable, v5);
}

void sub_1008EDE8C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_1008EDE98(a1, a2, a3, (void (*)(id *, uint64_t, uint64_t, unint64_t))&OptionSet<>.formSymmetricDifference(_:));
}

void sub_1008EDE98(id *a1, uint64_t a2, uint64_t a3, void (*a4)(id *, uint64_t, uint64_t, unint64_t))
{
  uint64_t WitnessTable;
  unint64_t v8;

  WitnessTable = swift_getWitnessTable(&unk_100F1613C, a2);
  v8 = sub_1004B7BE8();
  a4(a1, a2, WitnessTable, v8);

}

void sub_1008EDEF8()
{
  id *v0;

  SetAlgebra.subtracting(_:)();

}

void sub_1008EDF24(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
}

void sub_1008EDF3C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_1008EE05C(a1);
  v4 = v3;
  swift_bridgeObjectRelease();
  *a2 = v4;
}

uint64_t sub_1008EDF90()
{
  return sub_1008EE020(&qword_1013F96B0, (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_1008EDFB4()
{
  return sub_1008EE020(&qword_1013F96B8, (uint64_t)&unk_100F1600C);
}

uint64_t sub_1008EDFD8()
{
  return sub_1008EE020(&qword_1013F96C0, (uint64_t)&unk_100F1603C);
}

uint64_t sub_1008EDFFC()
{
  return sub_1008EE020(&qword_1013F96C8, (uint64_t)&unk_100F16074);
}

uint64_t sub_1008EE020(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CRLTextInputModifierKeyMask();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1008EE05C(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  ValueWitnessTable *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;
  ValueWitnessTable *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;
  objc_super v31;
  objc_super v32;
  objc_super v33;

  v2 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = &value witness table for CRLUIPropertyNotifier.CustomFilter;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v33.receiver = v3;
  v33.super_class = v2;
  v5 = (char *)objc_msgSendSuper2(&v33, "init");
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v25 = a1;
    else
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
    if (!v6)
      return;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      return;
  }
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v26 = a1 & 0xC000000000000001;
    v27 = v6;
    v28 = a1;
    do
    {
      if (v26)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v29 = *(_QWORD *)&v4[18].flags;
      v10 = *(_QWORD *)&v5[v29];
      v11 = (char *)objc_allocWithZone(v2);
      *(_QWORD *)&v11[*(_QWORD *)&v4[18].flags] = v10;
      v32.receiver = v11;
      v32.super_class = v2;
      v12 = v4;
      v13 = v5;
      v14 = (char *)objc_msgSendSuper2(&v32, "init");
      v15 = *(_QWORD *)&v14[*(_QWORD *)&v4[18].flags];

      v16 = *(_QWORD *)&v12[18].flags;
      v17 = *(_QWORD *)((_BYTE *)v9 + v16) & v15;
      v18 = (char *)objc_allocWithZone(v2);
      *(_QWORD *)&v18[*(_QWORD *)&v12[18].flags] = v17;
      v31.receiver = v18;
      v31.super_class = v2;
      v19 = objc_msgSendSuper2(&v31, "init");

      v20 = static NSObject.== infix(_:_:)(v19, v9);
      if ((v20 & 1) == 0)
      {
        v21 = *(_QWORD *)&v5[v29];
        v22 = v9;

        v23 = *(_QWORD *)((char *)v9 + v16) | v21;
        v24 = (char *)objc_allocWithZone(v2);
        *(_QWORD *)&v24[*(_QWORD *)&v12[18].flags] = v23;
        v30.receiver = v24;
        v30.super_class = v2;
        v13 = (char *)objc_msgSendSuper2(&v30, "init");

      }
      v4 = v12;

      ++v7;
      v5 = v13;
      a1 = v28;
    }
    while (v27 != v7);
  }
}

id sub_1008EE258(int a1)
{
  objc_class *v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  char *v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  objc_super v51;
  objc_super v52;
  objc_super v53;
  objc_super v54;
  objc_super v55;
  objc_super v56;
  objc_super v57;
  objc_super v58;
  objc_super v59;

  v2 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v59.receiver = v3;
  v59.super_class = v2;
  v4 = objc_msgSendSuper2(&v59, "init");
  v5 = v4;
  if ((*(_QWORD *)&a1 & 0x30000) != 0)
  {
    v6 = qword_1013DD470;
    v7 = (char *)v4;
    if (v6 != -1)
      swift_once(&qword_1013DD470, sub_1008ED6F4);
    v8 = (void *)qword_10147FE48;
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    v10 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v9;
    v52.receiver = v10;
    v52.super_class = v2;
    v11 = v8;
    v12 = (char *)objc_msgSendSuper2(&v52, "init");
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    v14 = (char *)v11;

    v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v13;
    v16 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v15;
    v51.receiver = v16;
    v51.super_class = v2;
    v5 = objc_msgSendSuper2(&v51, "init");

  }
  if ((a1 & 0x80000) != 0)
  {
    v17 = qword_1013DD478;
    v18 = (char *)v5;
    if (v17 != -1)
      swift_once(&qword_1013DD478, sub_1008ED768);
    v19 = (void *)qword_10147FE50;
    v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    v21 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v20;
    v54.receiver = v21;
    v54.super_class = v2;
    v22 = v19;
    v23 = (char *)objc_msgSendSuper2(&v54, "init");
    v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    v25 = (char *)v22;

    v26 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v24;
    v27 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v26;
    v53.receiver = v27;
    v53.super_class = v2;
    v5 = objc_msgSendSuper2(&v53, "init");

    if ((a1 & 0x40000) == 0)
    {
LABEL_7:
      if ((a1 & 0x100000) == 0)
        return v5;
      goto LABEL_15;
    }
  }
  else if ((a1 & 0x40000) == 0)
  {
    goto LABEL_7;
  }
  v28 = qword_1013DD488;
  v29 = (char *)v5;
  if (v28 != -1)
    swift_once(&qword_1013DD488, sub_1008ED850);
  v30 = (void *)qword_10147FE60;
  v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  v32 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v31;
  v56.receiver = v32;
  v56.super_class = v2;
  v33 = v30;
  v34 = (char *)objc_msgSendSuper2(&v56, "init");
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  v36 = (char *)v33;

  v37 = *(_QWORD *)&v36[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v35;
  v38 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v37;
  v55.receiver = v38;
  v55.super_class = v2;
  v5 = objc_msgSendSuper2(&v55, "init");

  if ((a1 & 0x100000) != 0)
  {
LABEL_15:
    v39 = qword_1013DD480;
    v40 = (char *)v5;
    if (v39 != -1)
      swift_once(&qword_1013DD480, sub_1008ED7DC);
    v41 = (void *)qword_10147FE58;
    v42 = *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    v43 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v42;
    v58.receiver = v43;
    v58.super_class = v2;
    v44 = v41;
    v45 = (char *)objc_msgSendSuper2(&v58, "init");
    v46 = *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    v47 = (char *)v44;

    v48 = *(_QWORD *)&v47[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v46;
    v49 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v49[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v48;
    v57.receiver = v49;
    v57.super_class = v2;
    v5 = objc_msgSendSuper2(&v57, "init");

  }
  return v5;
}

uint64_t sub_1008EE5F8()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_boardIdentifier);
  sub_1004BBBC8(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1008EE664()
{
  return type metadata accessor for CRLFreehandDrawingBucketDatabaseRow(0);
}

uint64_t type metadata accessor for CRLFreehandDrawingBucketDatabaseRow(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F96F8;
  if (!qword_1013F96F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFreehandDrawingBucketDatabaseRow);
  return result;
}

uint64_t sub_1008EE6A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_100F161A8;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100F161C0;
    v4[5] = &unk_100F161C0;
    v4[6] = &unk_100F161D8;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingBucketUnsyncedChanges()
{
  return &type metadata for CRLFreehandDrawingBucketUnsyncedChanges;
}

unint64_t sub_1008EE758()
{
  unint64_t result;

  result = qword_1013F9810;
  if (!qword_1013F9810)
  {
    result = swift_getWitnessTable(&unk_100F16248, &type metadata for CRLFreehandDrawingBucketUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F9810);
  }
  return result;
}

unint64_t sub_1008EE7A0()
{
  unint64_t result;

  result = qword_1013F9818;
  if (!qword_1013F9818)
  {
    result = swift_getWitnessTable("q\n7", &type metadata for CRLFreehandDrawingBucketUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F9818);
  }
  return result;
}

unint64_t sub_1008EE7E8()
{
  unint64_t result;

  result = qword_1013F9820;
  if (!qword_1013F9820)
  {
    result = swift_getWitnessTable(&unk_100F16270, &type metadata for CRLFreehandDrawingBucketUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F9820);
  }
  return result;
}

unint64_t sub_1008EE830()
{
  unint64_t result;

  result = qword_1013F9828;
  if (!qword_1013F9828)
  {
    result = swift_getWitnessTable(&unk_100F162A8, &type metadata for CRLFreehandDrawingBucketUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013F9828);
  }
  return result;
}

uint64_t sub_1008EE874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;

  v38 = a8;
  v40 = a12;
  v39 = a11;
  v37 = a10;
  v35 = a7;
  v36 = a9;
  v18 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E1B3C(a1, (uint64_t)v20);
  v21 = type metadata accessor for CRLFreehandDrawingBucketDatabaseRow(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(_OWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData) = xmmword_100F062D0;
  *(_OWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData) = xmmword_100F062D0;
  sub_1004DB5FC((uint64_t)v20, v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_boardIdentifier);
  *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketIndex) = a2;
  v23 = (_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData);
  *v23 = a3;
  v23[1] = a4;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_unsyncedChanges) = a5;
  v24 = (_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData);
  v25 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData);
  v26 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData + 8);
  v27 = v35;
  *v24 = a6;
  v24[1] = v27;
  sub_1004BE2FC(v25, v26);
  v28 = (_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData);
  v29 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData);
  v30 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData + 8);
  v31 = v36;
  *v28 = v38;
  v28[1] = v31;
  sub_1004BE2FC(v29, v30);
  v32 = v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions;
  v33 = v39;
  *(_OWORD *)v32 = v37;
  *(_OWORD *)(v32 + 16) = v33;
  *(_QWORD *)(v32 + 32) = v40;
  sub_1004BBB8C(a1);
  return v22;
}

void sub_1008EEA04(void *a1)
{
  Class isa;

  type metadata accessor for CRLBoardItem(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setTemporaryAdditionalBoardItemsToDisplay:", isa);

}

id sub_1008EEB9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLShapeLibraryPopoverHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLShapeLibraryPopoverHelper()
{
  return objc_opt_self(_TtC8Freeform28CRLShapeLibraryPopoverHelper);
}

void sub_1008EEBEC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t (*v25)(void);
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void);
  _QWORD *v37;
  uint64_t (*v38)(void);
  uint64_t (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, __n128);
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)();
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t (*v77)(void);
  _QWORD *v78;
  void *v79;
  id v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  id v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  Class isa;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  _QWORD *v104;
  void *v105;
  _QWORD *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(void);
  uint64_t v115;
  void *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t (*v124)(void);
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  id v132;
  void *v133;
  _QWORD *v134;
  void *v135;
  void **v136;
  uint64_t v137;
  double (*v138)(uint64_t);
  void *v139;
  void (*v140)();
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[31];
  _QWORD v146[2];
  char v147;
  int v148;
  int v149;
  char v150;
  void (*v151)();
  uint64_t v152;
  uint64_t v153;
  _QWORD v154[2];
  char v155;
  int v156;
  int v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v117 = a2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v5);
  v130 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v129);
  v121 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v122 = (char *)&v115 - v10;
  v118 = a1;
  v11 = objc_msgSend(a1, "allShapeItems", v9);
  v12 = type metadata accessor for CRLShapeItem(0);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v91 = v13;
    else
      v91 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v91);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v15 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v14 || (v16 = (char *)objc_msgSend(a3, "editingCoordinator", v15)) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"changeShape(forEditor:shapePathSource:interactiveCanvasController:)", 67, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLShapeLibraryPopoverHelper.swift", 104, 2, 45, "Could not create a temporary board item for the animation.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"changeShape(forEditor:shapePathSource:interactiveCanvasController:)", 67, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLShapeLibraryPopoverHelper.swift", 104, 2u, 45, (uint64_t)"Could not create a temporary board item for the animation.", 58, 2u);
    objc_msgSend(v118, "changeShapeToUsePathSource:", v117);
    return;
  }
  v17 = v16;
  v128 = *(id *)&v16[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

  v143 = (uint64_t)_swiftEmptyArrayStorage;
  v144 = (uint64_t)_swiftEmptyArrayStorage;
  v18 = objc_msgSend(v118, "allShapeItems");
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v12);

  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_7;
LABEL_44:
    *(_QWORD *)&v89 = swift_bridgeObjectRelease().n128_u64[0];
    v90 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_45:
    objc_msgSend(v118, "changeShapeToUsePathSource:", v117, v89);
    if ((unint64_t)v90 >> 62)
    {
      if (v90 < 0)
        v108 = v90;
      else
        v108 = v90 & 0xFFFFFFFFFFFFFF8;
      v109 = type metadata accessor for CRLBoardItem(0);
      swift_bridgeObjectRetain(v90);
      _bridgeCocoaArray<A>(_:)(v108, v109);
    }
    else
    {
      swift_bridgeObjectRetain_n(v90, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v93);
      type metadata accessor for CRLBoardItem(0);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardItem(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a3, "setTemporaryAdditionalBoardItemsToDisplay:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    v95 = v144;
    if ((unint64_t)v144 >> 62)
    {
      if (v144 < 0)
        v110 = v144;
      else
        v110 = v144 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v144);
      v111 = sub_1004B804C(&qword_1013E0670);
      v97 = _bridgeCocoaArray<A>(_:)(v110, v111);
      swift_bridgeObjectRelease();
    }
    else
    {
      v96 = swift_bridgeObjectRetain(v144);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v96);
      v97 = v95;
    }
    swift_bridgeObjectRelease();
    v98 = v143;
    if ((unint64_t)v143 >> 62)
    {
      if (v143 < 0)
        v112 = v143;
      else
        v112 = v143 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v143);
      v113 = sub_1004B804C(&qword_1013E0670);
      v100 = _bridgeCocoaArray<A>(_:)(v112, v113);
      swift_bridgeObjectRelease();
    }
    else
    {
      v99 = swift_bridgeObjectRetain(v143);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v99);
      v100 = v98;
    }
    swift_bridgeObjectRelease();
    v101 = swift_allocObject(&unk_101286DC0, 24, 7);
    *(_QWORD *)(v101 + 16) = a3;
    v102 = a3;
    v103 = objc_msgSend(v102, "canvas");
    v104 = (_QWORD *)swift_allocObject(&unk_101286DE8, 56, 7);
    v104[2] = v97;
    v104[3] = v102;
    v104[4] = v100;
    v104[5] = sub_1008F01DC;
    v104[6] = v101;
    v140 = sub_100757D8C;
    v141 = v104;
    v136 = _NSConcreteStackBlock;
    v137 = *(_QWORD *)"";
    v138 = sub_1005D2FC0;
    v139 = &unk_101286E00;
    v105 = _Block_copy(&v136);
    v106 = v141;
    v107 = v102;
    swift_bridgeObjectRetain(v97);
    swift_bridgeObjectRetain(v100);
    swift_retain(v101);
    objc_msgSend(v103, "afterLayoutIncludingLayers:performBlock:", 1, v105, swift_release(v106).n128_f64[0]);
    _Block_release(v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release(v101);

    return;
  }
  if (v19 < 0)
    v92 = v19;
  else
    v92 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v19);
  v20 = _CocoaArrayWrapper.endIndex.getter(v92);
  swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_44;
LABEL_7:
  v116 = a3;
  if (v20 >= 1)
  {
    v21 = 0;
    v22 = v19 & 0xC000000000000001;
    v126 = v20;
    v127 = v19;
    v125 = v19 & 0xC000000000000001;
    do
    {
      if (v22)
        v23 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
      else
        v23 = *(id *)(v19 + 8 * v21 + 32);
      v24 = v23;
      if (((*(uint64_t (**)(void))((swift_isaMask & *v23) + 0x530))() & 1) != 0)
      {
        v135 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v24) + 0x478))();
        v25 = *(uint64_t (**)(void))((swift_isaMask & *v24) + 0xE0);
        v26 = v24;
        v27 = (void *)v25();

        objc_msgSend(v27, "position");
        v29 = v28;
        v31 = v30;

        v32 = v26;
        v33 = (void *)v25();

        objc_msgSend(v33, "angle");
        v35 = v34;

        v36 = *(uint64_t (**)(void))((swift_isaMask & *v32) + 0x420);
        v37 = v32;
        v134 = (_QWORD *)v36();

        v133 = (void *)sub_100923670();
        v38 = *(uint64_t (**)(void))((swift_isaMask & *v37) + 0x4C0);
        if ((v38() & 1) != 0)
        {
          v39 = 0;
        }
        else
        {
          v124 = v38;
          v40 = *(_QWORD **)((char *)v37 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v41 = *v40;
          v42 = swift_conformsToProtocol2(*v40, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
          if (!v42)
            goto LABEL_65;
          v43 = v42;
          v44 = *(void (**)(uint64_t, uint64_t, __n128))(v42 + 16);
          v45 = swift_retain(v40);
          v46 = (uint64_t)v122;
          v44(v41, v43, v45);
          swift_release(v40);
          v47 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
          CRRegister.wrappedValue.getter(v47);
          v48 = (uint64_t)v136;
          v49 = v137;
          v50 = (uint64_t)v138;
          v51 = (uint64_t)v139;
          v53 = (uint64_t)v140;
          v52 = (uint64_t)v141;
          v123 = v142;
          sub_1008F0238(v46);
          if (v52)
          {
            v119 = v48;
            v120 = v49;
            v154[0] = v48;
            v154[1] = v49;
            v155 = v50 & 1;
            v156 = HIDWORD(v50);
            v157 = v51;
            v158 = BYTE4(v51) & 1;
            v159 = v53;
            v160 = v52;
            v54 = v123;
            v161 = v123;
            sub_1004D524C();
            v39 = (uint64_t (*)(void))sub_100785FD4((uint64_t)v154);
            sub_1004C41DC(v119, v120, v50, v51, v53, v52, v54);
          }
          else
          {
            v39 = 0;
          }
          v38 = v124;
        }
        v55 = v38();
        v131 = v21;
        v132 = v37;
        if ((v55 & 1) != 0)
        {
          v56 = 0;
        }
        else
        {
          v124 = v39;
          v57 = *(_QWORD **)((char *)v37 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v58 = *v57;
          v59 = swift_conformsToProtocol2(*v57, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
          if (!v59)
            goto LABEL_66;
          v60 = v59;
          v61 = *(void (**)(uint64_t, uint64_t, __n128))(v59 + 16);
          v62 = swift_retain(v57);
          v63 = (uint64_t)v121;
          v61(v58, v60, v62);
          swift_release(v57);
          v64 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
          CRRegister.wrappedValue.getter(v64);
          v65 = (uint64_t)v136;
          v66 = v137;
          v67 = (uint64_t)v138;
          v68 = (uint64_t)v139;
          v70 = v140;
          v69 = (uint64_t)v141;
          v123 = v142;
          sub_1008F0238(v63);
          if (v69)
          {
            v146[0] = v65;
            v146[1] = v66;
            v147 = v67 & 1;
            v148 = HIDWORD(v67);
            v149 = v68;
            v150 = BYTE4(v68) & 1;
            v151 = v70;
            v152 = v69;
            v71 = v123;
            v153 = v123;
            sub_1004D524C();
            v72 = sub_100785FD4((uint64_t)v146);
            v73 = (uint64_t)v70;
            v56 = v72;
            sub_1004C41DC(v65, v66, v67, v68, v73, v69, v71);
          }
          else
          {
            v56 = 0;
          }
          v39 = v124;
        }
        v74 = type metadata accessor for CRLWPStorageCRDTData(0);
        v75 = v130;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v130, 1, 1, v74);
        sub_10054F488((uint64_t)&v136);
        sub_1008F0274((uint64_t)&v136, (uint64_t)v145);
        v114 = v39;
        v76 = v133;
        v77 = v39;
        v78 = v134;
        v79 = v135;
        v80 = sub_100CF4294(3, 0, v135, 1, v29, v31, 0, v35, 0, v134, v133, v114, v56, 0, v75, v145, 0, 0, 0);
        sub_1008F02BC((uint64_t)v75);

        v81 = v80;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
        v83 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v82 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v83 >= v82 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
        v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
        specialized Array._endMutation()(v84);
        v85 = v132;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v85);
        v87 = *(_QWORD *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v86 = *(_QWORD *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v21 = v131;
        if (v87 >= v86 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1);
        v88 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v87, v85);
        specialized Array._endMutation()(v88);

        v22 = v125;
        v20 = v126;
        v19 = v127;
      }
      else
      {

      }
      ++v21;
    }
    while (v20 != v21);
    *(_QWORD *)&v89 = swift_bridgeObjectRelease().n128_u64[0];
    v90 = v144;
    a3 = v116;
    goto LABEL_45;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void sub_1008EF6AC(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double v27;
  double v28;
  double v29;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  double v39;
  double v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  Class isa;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  double v56;
  CGFloat r1;
  CGFloat v58;
  id v59;
  CGFloat v60;
  id v61;
  id v62;
  CGPoint v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v2 = objc_msgSend(a1, "interactiveCanvasController");
  if (v2)
  {
    v62 = v2;
    v3 = objc_msgSend(v2, "layerHost");
    if (v3)
    {
      v4 = v3;
      if ((objc_msgSend(v3, "respondsToSelector:", "asiOSCVC") & 1) == 0)
      {

        swift_unknownObjectRelease(v4);
        return;
      }
      v61 = objc_msgSend(v4, "asiOSCVC");
      v5 = objc_msgSend(v62, "editorController", swift_unknownObjectRelease(v4).n128_f64[0]);
      if (v5
        && (v6 = v5, v7 = objc_msgSend(v5, "selectionPath"), v6, v7))
      {
        v59 = v7;
        v8 = objc_msgSend(v62, "infosForSelectionPath:", v59);
        v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

        v10 = sub_1005FEFFC(v9);
        swift_bridgeObjectRelease();
        v11 = sub_1005B989C((uint64_t)v10);

        swift_release(v10);
        if (v11)
        {
          v62 = v62;
          v12 = sub_1005C5238((uint64_t)v11, v62);
          swift_bridgeObjectRelease();

          sub_100AF7B80((uint64_t)v12);
          v14 = v13;

          swift_bridgeObjectRelease();
          v15 = sub_1008E3598(v14);
          v17 = v16;
          v19 = v18;
          v21 = v20;
          swift_bridgeObjectRelease();
          objc_msgSend(v62, "convertUnscaledToBoundsRect:", v15, v17, v19, v21);
          v23 = v22;
          v58 = v25;
          v60 = v24;
          r1 = v26;
          v27 = sub_100061400(v24, v25, v26, v22);
          v29 = v28;
          objc_msgSend(v62, "visibleScaledRectForCanvasUI");
          x = v64.origin.x;
          y = v64.origin.y;
          width = v64.size.width;
          height = v64.size.height;
          v34 = v27;
          v63.x = v27;
          v63.y = v29;
          if (!CGRectContainsPoint(v64, v63))
          {
            v65.origin.y = v58;
            v65.origin.x = v60;
            v65.size.width = r1;
            v65.size.height = v23;
            v67.origin.x = x;
            v67.origin.y = y;
            v67.size.width = width;
            v67.size.height = height;
            v66 = CGRectIntersection(v65, v67);
            v35 = v66.origin.x;
            v36 = v66.origin.y;
            v37 = v66.size.width;
            v38 = v66.size.height;
            if (CGRectIsNull(v66))
            {
              objc_msgSend(v61, "lastTapPoint");
              objc_msgSend(v62, "convertUnscaledToBoundsPoint:");
            }
            else
            {
              v39 = sub_100061400(v35, v36, v37, v38);
            }
            v34 = v39;
            v29 = v40;
          }
          v42 = objc_msgSend(objc_allocWithZone((Class)CRLiOSShapeLibraryViewController), "initWithDelegate:shouldChangeSelectedShapes:", v61, 1);
          v43 = objc_msgSend(a1, "boardItems");
          v44 = type metadata accessor for CRLBoardItem(0);
          v45 = sub_10058528C();
          static Set._unconditionallyBridgeFromObjectiveC(_:)(v43, v44, v45);

          isa = Set._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v42, "setAssociatedBoardItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

          objc_msgSend(v42, "setShowLinesInLibrary:", 0);
          objc_msgSend(v42, "setModalPresentationStyle:", 7);
          v47 = objc_msgSend(v42, "popoverPresentationController");
          if (v47)
          {
            v48 = v47;
            v49 = objc_msgSend(v61, "canvasView");
            objc_msgSend(v48, "setSourceView:", v49);

          }
          v50 = objc_msgSend(v42, "popoverPresentationController", *(_QWORD *)&r1, *(_QWORD *)&v58);
          if (v50)
          {
            v51 = v50;
            objc_msgSend(v50, "setSourceRect:", v34, v29, 1.0, 1.0);

          }
          v52 = objc_msgSend(v42, "popoverPresentationController");
          objc_msgSend(v52, "setCanOverlapSourceViewRect:", 1);

          objc_msgSend(v61, "presentViewController:animated:completion:", v42, 1, 0);
          v53 = objc_msgSend(v62, "layerHost");
          if (v53
            && (v54 = v53,
                v55 = objc_msgSend(v53, "miniFormatterPresenter"),
                *(_QWORD *)&v56 = swift_unknownObjectRelease(v54).n128_u64[0],
                v55))
          {
            objc_msgSend(v55, "dismissMiniFormatter", v56);

            swift_unknownObjectRelease(v55);
          }
          else
          {

          }
          goto LABEL_24;
        }

        v41 = v59;
      }
      else
      {

        v41 = v61;
      }
LABEL_25:

      return;
    }
LABEL_24:
    v41 = v62;
    goto LABEL_25;
  }
}

void sub_1008EFC18(void *a1, double a2, double a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  Class isa;
  id v35;
  void *v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  _BYTE v49[40];
  uint64_t v50;

  v6 = objc_msgSend(a1, "interactiveCanvasController");
  if (!v6)
    return;
  v47 = v6;
  v7 = objc_msgSend(v6, "layerHost");
  if (!v7)
  {
    v18 = v47;
LABEL_11:

    return;
  }
  v8 = v7;
  if ((objc_msgSend(v7, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {

    swift_unknownObjectRelease(v8);
    return;
  }
  v46 = objc_msgSend(v8, "asiOSCVC");
  v9 = objc_msgSend(a1, "anyConnectionLine", swift_unknownObjectRelease(v8).n128_f64[0]);
  v10 = objc_msgSend(v9, "connectionLineInfo");

  if (!v10)
  {

    v18 = v46;
    goto LABEL_11;
  }
  v11 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v11, v49);
  *(_OWORD *)(inited + 16) = xmmword_100EEF400;
  *(_QWORD *)(inited + 32) = v10;
  v50 = inited;
  specialized Array._endMutation()(inited);
  v13 = v50;
  if ((unint64_t)v50 >> 62)
  {
    if (v50 < 0)
      v19 = v50;
    else
      v19 = v50 & 0xFFFFFFFFFFFFFF8;
    v20 = v10;
    swift_bridgeObjectRetain(v13);
    v21 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_7;
  }
  else
  {
    v14 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v10;
    if (v14)
    {
LABEL_7:
      sub_1004B5FB0(v13);
      v17 = v16;
      goto LABEL_17;
    }
  }
  v17 = &_swiftEmptySetSingleton;
LABEL_17:
  *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
  v50 = (uint64_t)v17;
  v23 = objc_msgSend(v47, "layoutForInfo:", v10, v22);
  if (v23)
  {
    v24 = v23;
    v25 = objc_opt_self(CRLConnectionLineAbstractLayout);
    v26 = (void *)swift_dynamicCastObjCClass(v24, v25);
    if (v26)
    {
      v27 = objc_msgSend(v26, "connectedFrom");
      if (!v27)
      {
        __break(1u);
        return;
      }
      v28 = v27;
      v29 = objc_msgSend(v27, "info");

      if (v29)
      {
        v30 = type metadata accessor for CRLBoardItem(0);
        v31 = swift_dynamicCastClass(v29, v30);
        if (v31)
        {
          v32 = (void *)v31;
          swift_unknownObjectRetain(v29);
          sub_100AD7814((Swift::Int *)&v48, v32);
          swift_unknownObjectRelease(v29);

          goto LABEL_25;
        }
        swift_unknownObjectRelease(v29);
      }
    }

  }
LABEL_25:
  v33 = objc_msgSend(objc_allocWithZone((Class)CRLiOSShapeLibraryViewController), "initWithDelegate:unscaledPopoverAnchorPoint:", v46, a2, a3);
  type metadata accessor for CRLBoardItem(0);
  sub_10058528C();
  isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v33, "setAssociatedBoardItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v33, "setShowLinesInLibrary:", 0);
  objc_msgSend(v33, "setModalPresentationStyle:", 7);
  v35 = objc_msgSend(v33, "popoverPresentationController");
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v46, "canvasView");
    objc_msgSend(v36, "setSourceView:", v37);

  }
  objc_msgSend(v47, "convertUnscaledToBoundsPoint:", a2, a3);
  v39 = v38;
  v41 = v40;
  v42 = objc_msgSend(v33, "popoverPresentationController");
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "setSourceRect:", v39, v41, 1.0, 1.0);

  }
  v44 = objc_msgSend(v33, "popoverPresentationController");
  if (v44)
  {
    v45 = v44;
    objc_msgSend(v44, "setCanOverlapSourceViewRect:", 1);

  }
  objc_msgSend(v46, "presentViewController:animated:completion:", v33, 1, 0);

}

void sub_1008F0088(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  if (a1)
  {
    v1 = objc_msgSend(a1, "interactiveCanvasController");
    if (v1)
    {
      v9 = v1;
      v2 = objc_msgSend(v1, "layerHost");
      if (!v2)
      {
LABEL_11:

        return;
      }
      v3 = v2;
      if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v4 = objc_msgSend(v3, "asiOSCVC");
        swift_unknownObjectRelease(v3);
        v5 = objc_msgSend(v4, "presentedViewController");
        if (v5)
        {
          v6 = v5;
          v7 = objc_opt_self(CRLiOSShapeLibraryViewController);
          v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
          if (v8)
          {
            if ((objc_msgSend(v8, "isBeingDismissed") & 1) == 0)
              objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);
          }

        }
        goto LABEL_11;
      }

      swift_unknownObjectRelease(v3);
    }
  }
}

uint64_t sub_1008F01B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1008F01DC()
{
  uint64_t v0;

  sub_1008EEA04(*(void **)(v0 + 16));
}

uint64_t sub_1008F01E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1008F0220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008F0230(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008F0238(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008F0274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E1B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008F02BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1008F0448()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFollowBorderHighlightView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLFollowBorderHighlightView()
{
  return objc_opt_self(_TtC8Freeform28CRLFollowBorderHighlightView);
}

void sub_1008F04D0()
{
  char *v0;
  id v1;
  char *v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  double v36;
  double v37;
  void *v38;
  double v39;
  double v40;
  void *v41;
  void *v42;
  double v43;
  double v44;
  id v45;
  id v46;
  id v47;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_color], "UIColor");
  objc_msgSend(v1, "set");

  v2 = &v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_delegate];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_delegate]);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "rectForBorder");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    swift_unknownObjectRelease(v4);
    v13 = &v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
    *(_QWORD *)v13 = v6;
    *((_QWORD *)v13 + 1) = v8;
    *((_QWORD *)v13 + 2) = v10;
    *((_QWORD *)v13 + 3) = v12;
  }
  v14 = (double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
  v15 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
  v16 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect + 8];
  v17 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect + 16];
  v18 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect + 24];
  v19 = (void *)objc_opt_self(CRLBezierPath);
  v20 = objc_msgSend(v19, "bezierPathWithRect:", v15, v16, v17, v18);
  v21 = *v14;
  v22 = v14[1];
  v23 = v14[2];
  v24 = v14[3];
  v25 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_width];
  v26 = sub_100063854(v25);
  v28 = sub_1008E3670(v21, v22, v23, v24, v26, v27);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v35 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  v36 = 16.0;
  v37 = 16.0;
  if (v35)
  {
    v38 = v35;
    if (objc_msgSend(v35, "isPresentingCompactScenesNavigator")
      && (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
    {
      objc_msgSend(v38, "displayCornerRadius");
      v40 = v39;
      swift_unknownObjectRelease(v38);
      v37 = v40 - v25;
    }
    else
    {
      swift_unknownObjectRelease(v38);
    }
  }
  v41 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (v41)
  {
    v42 = v41;
    if (objc_msgSend(v41, "isPresentingCompactScenesNavigator")
      && (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
    {
      objc_msgSend(v42, "displayCornerRadius");
      v44 = v43;
      swift_unknownObjectRelease(v42);
      v36 = v44 - v25;
    }
    else
    {
      swift_unknownObjectRelease(v42);
    }
  }
  v45 = objc_msgSend(v19, "bezierPathWithRoundedRect:upperRightRadius:lowerRightRadius:lowerLeftRadius:upperLeftRadius:useLegacyCorners:keepNoOpElements:", 0, 0, v28, v30, v32, v34, 16.0, v37, v36, 16.0);
  if (v20)
    v46 = objc_msgSend(v20, "subtractBezierPath:", v45);
  else
    v46 = 0;
  v47 = v46;
  objc_msgSend(v46, "fill");
  objc_msgSend(v0, "setIsAccessibilityElement:", 0);

}

uint64_t sub_1008F07BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE *v27;
  __n128 v28;
  uint64_t v29;
  _QWORD v31[3];
  void *v32;
  SCNetworkReachabilityFlags flags[6];

  v2 = v1;
  v32 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[2] = sub_100503E34();
  static DispatchQoS.unspecified.getter(v13);
  *(_QWORD *)flags = _swiftEmptyArrayStorage;
  v14 = sub_1008F13E8();
  v15 = sub_1004B804C(&qword_1013FF6B0);
  v16 = sub_1008F1430();
  dispatch thunk of SetAlgebra.init<A>(_:)(flags, v15, v16, v7, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  v17 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x8000000100FDEA70, v12, v9, v6, 0);
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 48) = 1;
  v18 = v32;
  *(_QWORD *)(v2 + 16) = v32;
  *(_QWORD *)(v2 + 24) = v17;
  flags[0] = 0;
  v19 = v18;
  if (SCNetworkReachabilityGetFlags((SCNetworkReachabilityRef)v19, flags))
  {
    v20 = flags[0];
    v21 = sub_1004B804C(&qword_1013F9A68);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    *(_QWORD *)(v2 + 72) = CurrentValueSubject.init(_:)(flags);
    LOBYTE(flags[0]) = (v20 & 2) != 0;
    v22 = sub_1004B804C(&qword_1013E6108);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v23 = CurrentValueSubject.init(_:)(flags);

    *(_QWORD *)(v2 + 80) = v23;
  }
  else
  {
    if (qword_1013DD720 != -1)
      swift_once(&qword_1013DD720, sub_100A01CD8);
    swift_beginAccess(&static OS_os_log.crlNetworkReachability, flags, 0, 0);
    v24 = (id)static OS_os_log.crlNetworkReachability;
    v25 = static os_log_type_t.error.getter();
    sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v25, "Failed to retrieve flags from network reachability listener.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

    v26 = sub_1005D29C8();
    swift_allocError(&type metadata for CRLNetworkReachabilityListenerError, v26, 0, 0);
    *v27 = 0;
    swift_willThrow(v28);

    v29 = type metadata accessor for CRLNetworkReachabilityListener();
    swift_deallocPartialClassInstance(v2, v29, 88, 7);
  }
  return v2;
}

uint64_t sub_1008F0AFC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2, 63, "CRLNetworkReachabilityListener.stop() was not called. CRLNetworkReachabilityListenerContextInfo will leak.", 106, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2u, 63, (uint64_t)"CRLNetworkReachabilityListener.stop() was not called. CRLNetworkReachabilityListenerContextInfo will leak.", 106, 2u);
  }

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for CRLNetworkReachabilityListener()
{
  return objc_opt_self(_TtC8Freeform30CRLNetworkReachabilityListener);
}

void sub_1008F0C14(uint64_t a1)
{
  _QWORD *v1;
  const __SCNetworkReachability *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  __n128 v11;
  __n128 v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  SCNetworkReachabilityFlags flags[6];
  SCNetworkReachabilityContext context;

  v1 = (_QWORD *)(a1 + 48);
  if (*(_QWORD *)(a1 + 48) != 1)
    return;
  v3 = *(const __SCNetworkReachability **)(a1 + 16);
  if (SCNetworkReachabilitySetDispatchQueue(v3, *(dispatch_queue_t *)(a1 + 24)))
  {
    v4 = type metadata accessor for CRLNetworkReachabilityListenerContextInfo();
    v5 = (char *)swift_allocObject(v4, 24, 7);
    v6 = swift_weakInit(v5 + 16, 0);
    swift_weakAssign(v6, a1);
    context.version = 0;
    context.info = v5;
    memset(&context.retain, 0, 24);
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = v5;
    v1[1] = 0;
    v1[2] = 0;
    *v1 = 0;
    swift_retain(v5);
    if (SCNetworkReachabilitySetCallback(v3, (SCNetworkReachabilityCallBack)sub_1008F0F5C, &context))
    {
      flags[0] = 0;
      if (SCNetworkReachabilityGetFlags(v3, flags))
      {
        sub_1008F12BC(flags[0]);
      }
      else
      {
        if (qword_1013DD720 != -1)
          swift_once(&qword_1013DD720, sub_100A01CD8);
        swift_beginAccess(&static OS_os_log.crlNetworkReachability, flags, 0, 0);
        v19 = (id)static OS_os_log.crlNetworkReachability;
        v20 = static os_log_type_t.error.getter();
        sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v20, "Failed to retrieve flags from network reachability listener.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
      swift_release(v5);
      return;
    }
    if (qword_1013DD720 != -1)
      swift_once(&qword_1013DD720, sub_100A01CD8);
    swift_beginAccess(&static OS_os_log.crlNetworkReachability, flags, 0, 0);
    v13 = (id)static OS_os_log.crlNetworkReachability;
    v14 = static os_log_type_t.error.getter();
    sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v14, "Failed to set callback for network reachability listener.", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

    v15 = sub_1005D29C8();
    swift_allocError(&type metadata for CRLNetworkReachabilityListenerError, v15, 0, 0);
    *v16 = 1;
    swift_willThrow(v17);
    v12 = swift_release(v5);
  }
  else
  {
    if (qword_1013DD720 != -1)
      swift_once(&qword_1013DD720, sub_100A01CD8);
    swift_beginAccess(&static OS_os_log.crlNetworkReachability, &context, 0, 0);
    v7 = (id)static OS_os_log.crlNetworkReachability;
    v8 = static os_log_type_t.error.getter();
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v8, "Failed to set target queue for network reachability listener.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

    v9 = sub_1005D29C8();
    swift_allocError(&type metadata for CRLNetworkReachabilityListenerError, v9, 0, 0);
    *v10 = 1;
    swift_willThrow(v11);
  }
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    v18 = *(_QWORD *)(a1 + 40);
    if (v18)
      v12 = swift_release(v18);
    *(v1 - 2) = 0;
    *(v1 - 1) = 0;
    *v1 = 1;
    v1[1] = 0;
    v1[2] = 0;
  }
  swift_willThrow(v12);
}

double sub_1008F0F5C(void *a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  id v9;
  double result;

  if (a3)
  {
    v6 = a3 + 16;
    swift_retain(a3);
    Strong = swift_weakLoadStrong(v6);
    if (Strong)
    {
      v8 = Strong;
      v9 = a1;
      sub_1008F12BC(a2);

      swift_release(v8);
    }
    *(_QWORD *)&result = swift_release(a3).n128_u64[0];
  }
  return result;
}

void sub_1008F0FD0(_QWORD *a1)
{
  uint64_t v2;
  const __SCNetworkReachability *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v9;
  __n128 v10;
  _BYTE v11[24];

  if (a1[6] != 1)
  {
    v2 = a1[5];
    v3 = (const __SCNetworkReachability *)a1[2];
    if (SCNetworkReachabilitySetCallback(v3, 0, 0))
    {
      if (v2)
        swift_release(v2);
      a1[4] = 0;
      a1[5] = 0;
      a1[6] = 1;
      a1[7] = 0;
      a1[8] = 0;
      if (!SCNetworkReachabilitySetDispatchQueue(v3, 0))
      {
        if (qword_1013DD720 != -1)
          swift_once(&qword_1013DD720, sub_100A01CD8);
        swift_beginAccess(&static OS_os_log.crlNetworkReachability, v11, 0, 0);
        v4 = (id)static OS_os_log.crlNetworkReachability;
        v5 = static os_log_type_t.error.getter(v4);
        sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v5, "Failed to clear target queue for network reachability listener.", 63, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
    }
    else
    {
      if (qword_1013DD720 != -1)
        swift_once(&qword_1013DD720, sub_100A01CD8);
      swift_beginAccess(&static OS_os_log.crlNetworkReachability, v11, 0, 0);
      v6 = (id)static OS_os_log.crlNetworkReachability;
      v7 = static os_log_type_t.error.getter(v6);
      sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v7, "Failed to clear callback for network reachability listener.", 59, 2, (uint64_t)_swiftEmptyArrayStorage);

      v8 = sub_1005D29C8();
      swift_allocError(&type metadata for CRLNetworkReachabilityListenerError, v8, 0, 0);
      *v9 = 2;
      swift_willThrow(v10);
    }
  }
}

double sub_1008F11A4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  double result;

  if (*(_QWORD *)(a1 + 48) != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"isReachablePublisher", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2, 148, "Cannot access publisher once started.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isReachablePublisher", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2u, 148, (uint64_t)"Cannot access publisher once started.", 37, 2u);
  }
  v4 = *(_QWORD *)(a1 + 80);
  *a2 = v4;
  *(_QWORD *)&result = swift_retain(v4).n128_u64[0];
  return result;
}

uint64_t sub_1008F1294()
{
  return CurrentValueSubject.value.getter();
}

_QWORD *sub_1008F12BC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  _QWORD *result;
  _QWORD *v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + 24);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v11 = CurrentValueSubject.value.getter(&v15, result);
    if ((_DWORD)v15 != a1)
    {
      v14 = a1;
      v11 = (_QWORD *)CurrentValueSubject.value.setter(&v14);
    }
    v12 = a1 & 2;
    result = CurrentValueSubject.value.getter((uint64_t *)((char *)&v13 + 7), v11);
    if (HIBYTE(v13) != v12 >> 1)
    {
      BYTE6(v13) = v12 >> 1;
      return (_QWORD *)CurrentValueSubject.value.setter((char *)&v13 + 6);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CRLNetworkReachabilityListenerContextInfo()
{
  return objc_opt_self(_TtC8FreeformP33_8FEF7F75B41FDE481D5241A446FF242C41CRLNetworkReachabilityListenerContextInfo);
}

unint64_t sub_1008F13E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E3A70;
  if (!qword_1013E3A70)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1013E3A70);
  }
  return result;
}

unint64_t sub_1008F1430()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E3A78;
  if (!qword_1013E3A78)
  {
    v1 = sub_1004CB6A4(&qword_1013FF6B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E3A78);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLNetworkReachabilityListenerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1008F14C8 + 4 * byte_100F16425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1008F14FC + 4 * byte_100F16420[v4]))();
}

uint64_t sub_1008F14FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008F1504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008F150CLL);
  return result;
}

uint64_t sub_1008F1518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008F1520);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1008F1524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008F152C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLNetworkReachabilityListenerError()
{
  return &type metadata for CRLNetworkReachabilityListenerError;
}

unint64_t sub_1008F154C()
{
  unint64_t result;

  result = qword_1013F9A70;
  if (!qword_1013F9A70)
  {
    result = swift_getWitnessTable(&unk_100F16564, &type metadata for CRLNetworkReachabilityListenerError);
    atomic_store(result, (unint64_t *)&qword_1013F9A70);
  }
  return result;
}

uint64_t sub_1008F1654@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _UNKNOWN ****v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  void *v20;
  os_unfair_lock_s *v21;
  id v22;
  _BYTE v25[24];

  v3 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v6);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v9 == &off_101407908)
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v10 = 0;
  swift_beginAccess(v10 + qword_101480E60, v25, 32, 0);
  swift_retain(v9);
  v11 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v11);
  swift_endAccess(v25);
  swift_release(v9);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFileItemAtomicDataStruct);
  v12 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 16));
  v14 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v15 = *(void **)&v12[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v15)
  {
    v16 = *(id *)&v12[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v17 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v18 = v12;
    v19 = sub_100C7EE84((uint64_t)v18);

    v20 = *(void **)&v12[v14];
    *(_QWORD *)&v12[v14] = v19;
    v16 = v19;

    v15 = 0;
  }
  v21 = *(os_unfair_lock_s **)(v13 + 16);
  v22 = v15;
  os_unfair_lock_unlock(v21);
  sub_100C7857C((uint64_t)v8, 0, 3, 0, a1);

  return sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLAssetData);
}

Class sub_1008F1888()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  _UNKNOWN ****v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, char *);
  _UNKNOWN ****v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _DWORD *v44;
  uint64_t v45;
  char *v46;
  id v47;
  void *v48;
  os_unfair_lock_s *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  objc_super v60;
  _BYTE v61[24];

  v59 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v59);
  v2 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - v7;
  v9 = type metadata accessor for UUID(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v55 - v15;
  v17 = OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload;
  v18 = *(char **)&v0[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload];
  if (v18)
  {
    v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    v56 = v14;
    v57 = v13;
    sub_1004BB5A4(&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v20);
    v21 = *(void (**)(uint64_t, uint64_t))(v19 + 24);
    v58 = v18;
    v21(v20, v19);
    v22 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v22 == &off_101407908)
      v23 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v23 = 0;
    swift_beginAccess(v23 + qword_101480E60, v61, 32, 0);
    swift_retain(v22);
    v24 = sub_1004B804C(&qword_1013F1870);
    CRRegister.wrappedValue.getter(v24);
    swift_endAccess(v61);
    swift_release(v22);
    sub_1004B8460((uint64_t)&v2[*(int *)(v59 + 20)], (uint64_t)v8, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLFileItemAtomicDataStruct);
    v25 = v56;
    v26 = v57;
    (*(void (**)(char *, char *, char *))(v56 + 16))(v11, v8, v57);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLAssetData);
    v27 = static UUID.== infix(_:_:)(v16);
    v28 = *(void (**)(char *, char *))(v25 + 8);
    v28(v11, v26);
    v28(v16, v26);
    if ((v27 & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"metadataPayload", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 49, "Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"metadataPayload", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2u, 49, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u);
    }
    return (Class)v58;
  }
  else
  {
    v30 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v30 == &off_101407908)
      v31 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v31 = 0;
    swift_beginAccess(v31 + qword_101480E60, v61, 32, 0);
    swift_retain(v30);
    v32 = sub_1004B804C(&qword_1013F1870);
    CRRegister.wrappedValue.getter(v32);
    swift_endAccess(v61);
    swift_release(v30);
    sub_1004B8460((uint64_t)&v2[*(int *)(v59 + 20)], (uint64_t)v5, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLFileItemAtomicDataStruct);
    v59 = (uint64_t)v0;
    v33 = (char *)objc_msgSend(v0, "store");
    v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 16));
    v35 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    v36 = *(void **)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v36)
    {
      v37 = *(id *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      v58 = (char *)type metadata accessor for CRLAssetManager();
      v38 = (char *)objc_allocWithZone((Class)v58);
      v39 = &v38[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit(&v38[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
      v40 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      v41 = type metadata accessor for CRLUnfairLock();
      v42 = swift_allocObject(v41, 24, 7);
      v57 = v33;
      v43 = v38;
      v44 = (_DWORD *)swift_slowAlloc(4, -1);
      *v44 = 0;
      *(_QWORD *)(v42 + 16) = v44;
      atomic_thread_fence(memory_order_acq_rel);
      *(_QWORD *)&v38[v40] = v42;
      *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      v45 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(_QWORD *)&v43[v45] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
      *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      v46 = v57;
      swift_unknownObjectWeakAssign(v39, v57);

      v60.receiver = v43;
      v60.super_class = (Class)v58;
      v47 = objc_msgSendSuper2(&v60, "init");

      v48 = *(void **)&v33[v35];
      *(_QWORD *)&v33[v35] = v47;
      v37 = v47;

      v36 = 0;
    }
    v49 = *(os_unfair_lock_s **)(v34 + 16);
    v50 = v36;
    os_unfair_lock_unlock(v49);

    v51 = v59;
    v52 = (void *)sub_100CF7F90(v5, v59, v37);

    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLAssetData);
    v53 = *(void **)(v51 + v17);
    *(_QWORD *)(v51 + v17) = v52;
    v54 = v52;

    return (Class)v54;
  }
}

char *sub_1008F1DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  void *v41;
  char *v42;
  objc_class *v43;
  id v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_super v54;
  _BYTE v55[32];
  _BYTE v56[24];
  _BYTE v57[32];
  char *v58;

  v53 = a4;
  v49 = a2;
  v5 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v50 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v47 = (uint64_t)v46 - v14;
  __chkstk_darwin(v15);
  v48 = (uint64_t)v46 - v16;
  __chkstk_darwin(v17);
  v52 = (uint64_t)v46 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)v46 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)v46 - v23;
  v51 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_100BC3878(1);
  swift_release(v25);
  v27 = (char *)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v57, 0, 0);
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_release(v26);
  v29 = (uint64_t)v58;
  sub_100BC3B18(v53);
  if (v29)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v53 = 0;
    v46[1] = v8;
    v30 = v52;
    sub_1004CB7BC(v49, v52, (uint64_t *)&unk_1013E1A50);
    v58 = v24;
    v31 = (uint64_t)v24;
    v32 = v48;
    sub_1004CB7BC(v31, v48, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33) == 1)
    {
      v35 = (uint64_t)v21;
      sub_1004C4938(v32, (uint64_t)v21, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v52, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v52, v33);
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v35 = (uint64_t)v21;
      v36(v21, 0, 1, v33);
    }
    v37 = v47;
    sub_1004CB7BC(v35, v47, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v56, 33, 0);
    v38 = v50;
    sub_1004CB7BC(v37, v50, (uint64_t *)&unk_1013E1A50);
    v39 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v55, v28);
    sub_100582338(v38, v40, (uint64_t *)&unk_1013E1A50);
    v39(v55, 0);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v56);
    sub_1004CB800(v35, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v41 = *(void **)(v51 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v42 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem(0));
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v41;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v26;
    v43 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v54.receiver = v42;
    v54.super_class = v43;
    v44 = v41;
    v27 = (char *)objc_msgSendSuper2(&v54, "init");
    sub_1004CB800((uint64_t)v58, (uint64_t *)&unk_1013E1A50);
  }
  return v27;
}

id sub_1008F22A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  char *v20;
  objc_class *v21;
  id v22;
  objc_super v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = v0;
  v2 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (**(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_101407908)
    v8 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v8 = 0;
  v9 = (uint64_t)v8 + *(_QWORD *)(*v8 + 632);
  swift_beginAccess(v9, v26, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v7, (uint64_t *)&unk_1013F02C0);
  v10 = (uint64_t)v8 + qword_101480E60;
  swift_beginAccess((char *)v8 + qword_101480E60, v25, 0, 0);
  sub_1004B8460(v10, (uint64_t)v4, type metadata accessor for CRLFileItemCRDTData);
  v11 = v8[4];
  v12 = v8[5];
  v15 = v8 + 2;
  v14 = v8[2];
  v13 = v15[1];
  v16 = type metadata accessor for CRLFileItemData(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  sub_1004B84E0((uint64_t)v4, v17 + qword_101480E60, type metadata accessor for CRLFileItemCRDTData);
  sub_1004C4938((uint64_t)v7, v17 + *(_QWORD *)(*(_QWORD *)v17 + 632), (uint64_t *)&unk_1013F02C0);
  v18 = sub_1005E1000(v13, v11, v12, v14);
  v19 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v20 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem(0));
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v19;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v18;
  v21 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v24.receiver = v20;
  v24.super_class = v21;
  v22 = v19;
  return objc_msgSendSuper2(&v24, "init");
}

uint64_t sub_1008F24C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  _UNKNOWN ****v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  CKRecordID v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _QWORD v34[3];
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1004B804C(&qword_1013F9AC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLFileItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v30 = a1;
    swift_unknownObjectRetain(a1);
    v29 = sub_100B0C360(v15, v2);
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 != &off_101407908)
      v16 = 0;
    v17 = (uint64_t)v16 + qword_101480E60;
    swift_beginAccess((char *)v16 + qword_101480E60, v33, 0, 0);
    sub_1004B8460(v17, (uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
    v18 = *(_UNKNOWN *****)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 != &off_101407908)
      v18 = 0;
    v19 = (uint64_t)v18 + qword_101480E60;
    swift_beginAccess((char *)v18 + qword_101480E60, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    v20 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    CRStruct_1.actionUndoingDifference(from:)(v6, v4, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
    v21 = sub_1004B804C(&qword_1013F9AC8);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_1013F9AC0);
      memset(v34, 0, sizeof(v34));
      v35 = 1;
    }
    else
    {
      v35 = v21;
      v23 = sub_10050D1B0(v34);
      (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 32))(v23, v12, v21);
    }
    v24 = v29;
    swift_beginAccess(v29 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v31, 33, 0);
    sub_10083DA20((uint64_t)v34, 6);
    swift_endAccess(v31);
    swift_unknownObjectRelease(v30);
    return v24;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 88, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2u, 88, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1008F2854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  _UNKNOWN ****v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  double *v39;
  uint64_t result;
  CKRecordID v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  _BYTE v52[24];
  _BYTE v53[24];

  v3 = sub_1004B804C(&qword_1013F53E8);
  v48 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v46 = (uint64_t)&v44 - v7;
  v47 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v47);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = sub_1004B804C(&qword_1013F53F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  v19 = type metadata accessor for CRLFileItem(0);
  v20 = swift_dynamicCastClass(a1, v19);
  if (v20)
  {
    v21 = v20;
    v49 = v3;
    v50 = v18;
    v45 = v5;
    v22 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v21, v22))
    {
      v23 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v23 != &off_101407908)
        v23 = 0;
      v24 = (uint64_t)v23 + qword_101480E60;
      swift_beginAccess((char *)v23 + qword_101480E60, v53, 0, 0);
      sub_1004B8460(v24, (uint64_t)v12, type metadata accessor for CRLFileItemCRDTData);
      v25 = *(_UNKNOWN *****)(v21 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v25 != &off_101407908)
        v25 = 0;
      v26 = (uint64_t)v25 + qword_101480E60;
      swift_beginAccess((char *)v25 + qword_101480E60, v52, 0, 0);
      sub_1004B8460(v26, (uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
      v27 = sub_1004B7878(&qword_1013F9AD8, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29CEC);
      swift_unknownObjectRetain(a1);
      v28 = (uint64_t)v50;
      CRType.observableDifference(from:)(v9, v47, v27);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFileItemCRDTData);
      sub_1004CB7BC(v28, (uint64_t)v15, &qword_1013F53F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v15, 1, v49) == 1)
      {
        v29 = &qword_1013F53F0;
        v30 = (uint64_t)v15;
      }
      else
      {
        v31 = v46;
        sub_1004C4938((uint64_t)v15, v46, &qword_1013E9C40);
        v32 = (uint64_t)v45;
        sub_1004CB7BC(v31, (uint64_t)v45, &qword_1013E9C40);
        v33 = type metadata accessor for CRValueObservableDifference(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) != 1)
        {
          sub_1004CB800(v32, &qword_1013E9C40);
          v34 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v38 = *((_QWORD *)v34 + 2);
          v37 = *((_QWORD *)v34 + 3);
          if (v38 >= v37 >> 1)
            v34 = (double *)sub_100D0EF94((_QWORD *)(v37 > 1), v38 + 1, 1, v34);
          *((_QWORD *)v34 + 2) = v38 + 1;
          v39 = &v34[2 * v38];
          v39[4] = 3.58302061e160;
          v39[5] = -3.91910665e202;
          sub_1004CB800(v31, &qword_1013F53E8);
          if (*((_QWORD *)v34 + 2))
            goto LABEL_12;
          goto LABEL_16;
        }
        sub_1004CB800(v31, &qword_1013F53E8);
        v29 = &qword_1013E9C40;
        v30 = v32;
      }
      sub_1004CB800(v30, v29);
      v34 = _swiftEmptyArrayStorage;
      if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      {
LABEL_12:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v51 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v34, 6, isUniquelyReferenced_nonNull_native);
        v36 = v51;
        swift_unknownObjectRelease(a1);
        swift_bridgeObjectRelease();
LABEL_17:
        sub_1004CB800(v28, &qword_1013F53F0);
        return (uint64_t)v36;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(a1);
      v36 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 100, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2u, 100, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v41, *(Swift::String *)&v42);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_1008F2E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F9AC0);
  __chkstk_darwin(v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v28[-v9 - 8];
  v11 = sub_1004B804C(&qword_1013F9AC8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v28, 0, 0);
    v16 = *v15;
    if (!*(_QWORD *)(v16 + 16))
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 1;
LABEL_8:
      v19 = (uint64_t *)&unk_1013DFC00;
      v20 = &v29;
LABEL_9:
      sub_1004CB800((uint64_t)v20, v19);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_10:
      sub_1004CB800((uint64_t)v10, &qword_1013F9AC0);
      return;
    }
    swift_bridgeObjectRetain(v16);
    v17 = sub_1008431EC(6);
    if ((v18 & 1) != 0)
    {
      sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v29, &qword_1013E0230);
    }
    else
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 1;
    }
    swift_bridgeObjectRelease();
    if (v32 == 1)
      goto LABEL_8;
    sub_1004C4938((uint64_t)&v29, (uint64_t)v33, &qword_1013E0230);
    if (!v34)
    {
      v19 = &qword_1013E0230;
      v20 = (uint64_t *)v33;
      goto LABEL_9;
    }
    v21 = swift_dynamicCast(v10, v33, (char *)&type metadata for Any + 8, v11, 6);
    v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    v22(v10, v21 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      goto LABEL_10;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v23 == &off_101407908)
      v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v24 = 0;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
    v22(v7, 0, 1, v11);
    swift_beginAccess(v24 + qword_101480E60, v33, 33, 0);
    v25 = type metadata accessor for CRLFileItemCRDTData(0);
    v26 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    swift_retain(v23);
    CRStruct_1.apply(_:)(v7, v25, v26);
    swift_endAccess(v33);
    swift_release(v23);
    sub_1004CB800((uint64_t)v7, &qword_1013F9AC0);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1008F3178(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_1008F31E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _BYTE v32[32];
  _BYTE v33[24];
  _BYTE v34[24];
  void *v35;
  uint64_t v36;

  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x61746144656C6966, 0xE800000000000000, 0);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      v7 = OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload;
      v8 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      swift_bridgeObjectRetain(v4);
      v9 = (_QWORD *)(v4 + 40);
      do
      {
        v11 = *(v9 - 1);
        v10 = *v9;
        v12 = v11 == 0x614463696D6F7461 && v10 == 0xEA00000000006174;
        if (v12
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x614463696D6F7461, 0xEA00000000006174, *(v9 - 1), *v9, 0) & 1) != 0)
        {
          v13 = *(void **)(v0 + v7);
          *(_QWORD *)(v0 + v7) = 0;

          v35 = &type metadata for Bool;
          v34[0] = 1;
          swift_beginAccess(v8, v33, 33, 0);
          sub_1004CB7BC((uint64_t)v34, (uint64_t)v32, &qword_1013E0230);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
          v15 = *v8;
          v31 = (_QWORD *)*v8;
          *v8 = 0x8000000000000000;
          v17 = sub_100843260(49);
          v18 = *(_QWORD *)(v15 + 16);
          v19 = (v16 & 1) == 0;
          v20 = v18 + v19;
          if (__OFADD__(v18, v19))
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            type metadata accessor for CRLChangeProperty(0);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v30);
            __break(1u);
            JUMPOUT(0x1008F3674);
          }
          v21 = v16;
          if (*(_QWORD *)(v15 + 24) >= v20)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_10082C8D0();
          }
          else
          {
            sub_100814B68(v20, isUniquelyReferenced_nonNull_native);
            v22 = sub_100843260(49);
            if ((v21 & 1) != (v23 & 1))
              goto LABEL_27;
            v17 = v22;
          }
          if ((v21 & 1) != 0)
          {
            sub_100582338((uint64_t)v32, v31[7] + 32 * v17, &qword_1013E0230);
          }
          else
          {
            v31[(v17 >> 6) + 8] |= 1 << v17;
            *(_QWORD *)(v31[6] + 8 * v17) = 49;
            sub_1004C4938((uint64_t)v32, v31[7] + 32 * v17, &qword_1013E0230);
            v24 = v31[2];
            v25 = __OFADD__(v24, 1);
            v26 = v24 + 1;
            if (v25)
              goto LABEL_26;
            v31[2] = v26;
          }
          *v8 = v31;
          swift_bridgeObjectRelease();
          swift_endAccess(v33);
          sub_1004CB800((uint64_t)v34, &qword_1013E0230);
        }
        else
        {
          v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v27, &v36);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v11;
          *(_QWORD *)(inited + 40) = v10;
          swift_bridgeObjectRetain(v10);
          swift_setDeallocating(inited);
          v29 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v29);
        }
        v9 += 2;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_getObjectType(v2);
    sub_10077C7C0(v1, v4, v3, v2, v0);
  }
}

double *sub_1008F378C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0;
  sub_100A2C75C((uint64_t)v3);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E3620);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v10 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v9 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v9 + 32) = UTType.identifier.getter(v9);
    *(_QWORD *)(v9 + 40) = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (double *)v9;
}

void sub_1008F39D0(_QWORD *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  double v5;
  double v6;
  id v7;
  _QWORD v8[4];

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xE0))();
  v2 = objc_msgSend(v1, "copy");

  _bridgeAnyObjectToAny(_:)(v8, v2);
  swift_unknownObjectRelease(v2);
  v3 = sub_1008F4664();
  if (swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v3, 6))
  {
    v4 = v7;
    objc_msgSend(v7, "size");
    if (!sub_100060BF8(v5, v6))
      sub_100776700(v4);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 177, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2u, 177, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_1008F3C00()
{
  uint64_t v0;

}

id sub_1008F3C10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1008F3C54()
{
  return type metadata accessor for CRLFileItem(0);
}

uint64_t type metadata accessor for CRLFileItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F9AA8;
  if (!qword_1013F9AA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFileItem);
  return result;
}

uint64_t sub_1008F3C98(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1000);
}

uint64_t sub_1008F3CE8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _UNKNOWN ****v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_UNKNOWN *****)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 == &off_101407908)
    v7 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v7 = 0;
  swift_beginAccess(v7 + qword_101480E60, v12, 32, 0);
  swift_retain(v6);
  v8 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v8);
  swift_endAccess(v12);
  swift_release(v6);
  sub_1004B8460((uint64_t)v5, a1, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFileItemAtomicDataStruct);
  v9 = type metadata accessor for CRLAssetData(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
}

uint64_t sub_1008F3E14()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

id sub_1008F3EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  id v35;
  double v36;
  float v37;
  double v38;
  float v39;
  double v40;
  float v41;
  double v42;
  float v43;
  double v44;
  float v45;
  unsigned int v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  objc_class *v71;
  id v72;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  objc_super v101;
  char v102;
  _OWORD v103[8];
  _BYTE v104[136];

  v99 = a4;
  v100 = a3;
  v96 = a1;
  v7 = sub_1004B804C(&qword_1013F1870);
  v91 = *(_QWORD *)(v7 - 8);
  v92 = v7;
  __chkstk_darwin(v7);
  v90 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v89);
  v93 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v95 = (uint64_t)&v74 - v11;
  v87 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v87);
  v86 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v85 = (uint64_t)&v74 - v14;
  __chkstk_darwin(v15);
  v94 = (uint64_t)&v74 - v16;
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v81 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v80);
  v88 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v98 = (uint64_t)&v74 - v22;
  v23 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v23);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v74 - v27;
  v78 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v78);
  v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v97 = (uint64_t)&v74 - v33;
  if (a5)
    v34 = a5;
  else
    v34 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v28, a2, v17, v32);
  v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v77(v28, 0, 1, v17);
  v84 = a5;
  v35 = v34;
  objc_msgSend(v35, "position");
  v37 = v36;
  v39 = v38;
  objc_msgSend(v35, "size");
  v41 = v40;
  v43 = v42;
  objc_msgSend(v35, "angle");
  v45 = v44;
  v76 = objc_msgSend(v35, "widthValid");
  v46 = objc_msgSend(v35, "heightValid");
  v83 = a2;
  v75 = v46;
  v47 = objc_msgSend(v35, "horizontalFlip");
  v48 = objc_msgSend(v35, "verticalFlip");
  v82 = v18;
  v49 = v48;

  v79 = v17;
  sub_1004CB7BC((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1013E1A50);
  v77(v30, 1, 1, v17);
  v50 = v78;
  *(_QWORD *)&v30[*(int *)(v78 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338((uint64_t)v25, (uint64_t)v30, (uint64_t *)&unk_1013E1A50);
  v51 = &v30[*(int *)(v50 + 20)];
  *(float *)v51 = v37;
  *((float *)v51 + 1) = v39;
  *((float *)v51 + 2) = v41;
  *((float *)v51 + 3) = v43;
  *((float *)v51 + 4) = v45;
  v51[20] = v76;
  v51[21] = v75;
  v51[22] = v47;
  v51[23] = v49;
  *((_QWORD *)v51 + 3) = _swiftEmptyDictionarySingleton;
  v52 = v97;
  sub_1004B84E0((uint64_t)v30, v97, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(v52, (uint64_t)v30, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v103);
  v53 = sub_1004C4938((uint64_t)v103, (uint64_t)v104, (uint64_t *)&unk_1013F02D0);
  v54 = (uint64_t)v81;
  UUID.init()(v53);
  v55 = v98;
  sub_100D5EF54(v54, (uint64_t)v30, 0, 0, 0, 0xE000000000000000, (uint64_t)v104, v98);
  v102 = 1;
  v56 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v102, v56, v57);
  v58 = v94;
  sub_1004B8460(v100, v94, type metadata accessor for CRLAssetData);
  v59 = v87;
  sub_1004B8460(v99, v58 + *(int *)(v87 + 20), type metadata accessor for CRLAssetData);
  *(_QWORD *)(v58 + *(int *)(v59 + 24)) = _swiftEmptyDictionarySingleton;
  v60 = v85;
  sub_1004B8460(v58, v85, type metadata accessor for CRLFileItemAtomicDataStruct);
  v61 = (uint64_t)v93;
  *(_QWORD *)&v93[*(int *)(v89 + 20)] = _swiftEmptyDictionarySingleton;
  v62 = v86;
  sub_1004B8460(v60, v86, type metadata accessor for CRLFileItemAtomicDataStruct);
  v63 = sub_1004B7878(&qword_1013F9AB8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29EBC);
  v64 = v90;
  CRRegister.init(_:)(v62, v59, v63);
  sub_1004B84A4(v60, type metadata accessor for CRLFileItemAtomicDataStruct);
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v61, v64, v92);
  v65 = v95;
  sub_1004B84E0(v61, v95, type metadata accessor for CRLFileItemCRDTData);
  v66 = v88;
  sub_1004CB7BC(v55, v88, (uint64_t *)&unk_1013F02C0);
  sub_1004B8460(v65, v61, type metadata accessor for CRLFileItemCRDTData);
  v67 = type metadata accessor for CRLFileItemData(0);
  v68 = swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
  sub_1004B84E0(v61, v68 + qword_101480E60, type metadata accessor for CRLFileItemCRDTData);
  sub_1004C4938(v66, v68 + *(_QWORD *)(*(_QWORD *)v68 + 632), (uint64_t *)&unk_1013F02C0);
  v69 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  v70 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem(0));
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v96;
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v69;
  v71 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v101.receiver = v70;
  v101.super_class = v71;
  v72 = objc_msgSendSuper2(&v101, "init");

  sub_1004B84A4(v99, type metadata accessor for CRLAssetData);
  sub_1004B84A4(v100, type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v79);
  sub_1004B84A4(v65, type metadata accessor for CRLFileItemCRDTData);
  sub_1004B84A4(v58, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_1004CB800(v98, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v97, type metadata accessor for CRLBoardItemParentAffinity);
  return v72;
}

unint64_t sub_1008F4664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F1360;
  if (!qword_1013F1360)
  {
    v1 = objc_opt_self(CRLCanvasInfoGeometry);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F1360);
  }
  return result;
}

_QWORD *sub_1008F46A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  sub_1004BE310(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for CRLRealTimeOpaqueChangeRecord(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  sub_1004BE310(v3, v4);
  v5 = a1[1];
  v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1004BBBC8(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLRealTimeOpaqueChangeRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_1004BBBC8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLRealTimeOpaqueChangeRecord(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeOpaqueChangeRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeOpaqueChangeRecord()
{
  return &type metadata for CRLRealTimeOpaqueChangeRecord;
}

unint64_t sub_1008F4828(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

uint64_t sub_1008F4838(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  char v20;

  v18 = a4;
  v8 = sub_1004B804C(&qword_1013F9AF0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v12);
  v14 = sub_1008F4CEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys, &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys, v14, v12, v13);
  LOBYTE(v19[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(a2);
  if (!v4)
  {
    v19[0] = a3;
    v19[1] = v18;
    v20 = 1;
    v15 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v19, &v20, v8, &type metadata for Data, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1008F4974()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C796170;
  else
    return 0xD000000000000010;
}

uint64_t sub_1008F49B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008F4A94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008F49D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008F4CEC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008F4A00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008F4CEC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008F4A28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1008F4B80(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1008F4A54(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1008F4838(a1, *v1, v1[1], v1[2]);
}

void sub_1008F4A70(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    sub_1007B38CC(a1[1], a1[2]);
}

uint64_t sub_1008F4A94(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char v6;

  if (a1 == 0xD000000000000010)
  {
    v4 = 0x8000000100FDEDE0;
    if (a2 == 0x8000000100FDEDE0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FDEDE0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64616F6C796170, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1008F4B80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = sub_1004B804C(&qword_1013F9AE0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_1008F4CEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys, &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys, v9, v7, v8);
  if (!v1)
  {
    LOBYTE(v14) = 0;
    v7 = KeyedDecodingContainer.decode(_:forKey:)(&v14, v3);
    v13 = 1;
    v10 = sub_100587AC0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v13, v3, &type metadata for Data, v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v7;
}

unint64_t sub_1008F4CEC()
{
  unint64_t result;

  result = qword_1013F9AE8;
  if (!qword_1013F9AE8)
  {
    result = swift_getWitnessTable(&unk_100F167F8, &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F9AE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeOpaqueChangeRecord.ProtobufCodingError()
{
  return &type metadata for CRLRealTimeOpaqueChangeRecord.ProtobufCodingError;
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeOpaqueChangeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1008F4D8C + 4 * byte_100F16625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1008F4DC0 + 4 * byte_100F16620[v4]))();
}

uint64_t sub_1008F4DC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008F4DC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008F4DD0);
  return result;
}

uint64_t sub_1008F4DDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008F4DE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1008F4DE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008F4DF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeOpaqueChangeRecord.CodingKeys()
{
  return &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys;
}

unint64_t sub_1008F4E10()
{
  unint64_t result;

  result = qword_1013F9AF8;
  if (!qword_1013F9AF8)
  {
    result = swift_getWitnessTable(&unk_100F16790, &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F9AF8);
  }
  return result;
}

unint64_t sub_1008F4E58()
{
  unint64_t result;

  result = qword_1013F9B00;
  if (!qword_1013F9B00)
  {
    result = swift_getWitnessTable("9\v7", &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F9B00);
  }
  return result;
}

unint64_t sub_1008F4EA0()
{
  unint64_t result;

  result = qword_1013F9B08;
  if (!qword_1013F9B08)
  {
    result = swift_getWitnessTable(&unk_100F16728, &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F9B08);
  }
  return result;
}

void sub_1008F4F94()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 520.0, 77.0);
  objc_msgSend(v0, "setView:", v1);

  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  objc_msgSend(v2, "setDirectionalLayoutMargins:", 12.0, 16.0, 12.0, 12.0);

  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "layer");

  LODWORD(v7) = 1041865114;
  objc_msgSend(v6, "setShadowOpacity:", v7);

  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "layer");

  objc_msgSend(v10, "setShadowRadius:", 12.0);
  v11 = objc_msgSend(v0, "view");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "layer");

    objc_msgSend(v13, "setShadowOffset:", 0.0, 1.0);
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1008F5190()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id result;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  objc_class *v39;
  _QWORD v40[4];
  objc_super v41;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for CRLiOSFeatureHintController();
  v41.receiver = v0;
  v41.super_class = v2;
  objc_msgSendSuper2(&v41, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = result;
  v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_textHolder];
  objc_msgSend(result, "addSubview:", v7);

  objc_msgSend(v7, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_titleLabel]);
  objc_msgSend(v7, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_subtitleLabel]);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = result;
  v39 = v2;
  v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_closeButton];
  objc_msgSend(result, "addSubview:", v9);

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend(result, "layoutMarginsGuide");

    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v13 = swift_allocObject(v12, 80, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EF8FC0;
    v14 = objc_msgSend(v7, "leadingAnchor");
    v15 = objc_msgSend(v11, "leadingAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v13 + 32) = v16;
    v17 = objc_msgSend(v7, "topAnchor");
    v18 = objc_msgSend(v11, "topAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v13 + 40) = v19;
    v20 = objc_msgSend(v7, "bottomAnchor");
    v21 = objc_msgSend(v11, "bottomAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    *(_QWORD *)(v13 + 48) = v22;
    v23 = objc_msgSend(v9, "leadingAnchor");
    v24 = objc_msgSend(v7, "trailingAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 12.0);

    *(_QWORD *)(v13 + 56) = v25;
    v26 = objc_msgSend(v9, "topAnchor");
    v27 = objc_msgSend(v11, "topAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

    *(_QWORD *)(v13 + 64) = v28;
    v29 = objc_msgSend(v9, "trailingAnchor");
    v30 = objc_msgSend(v11, "trailingAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    *(_QWORD *)(v13 + 72) = v31;
    specialized Array._endMutation()(v32);
    v33 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_1004DD8D8();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    sub_1008F56D4();
    v35 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
    v36 = swift_allocObject(v35, 64, 7);
    *(_OWORD *)(v36 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v36 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v36 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(_QWORD *)(v36 + 48) = type metadata accessor for UITraitVerticalSizeClass(0);
    *(_QWORD *)(v36 + 56) = &protocol witness table for UITraitVerticalSizeClass;
    v40[3] = v39;
    v40[0] = v1;
    v37 = v1;
    v38 = UIViewController.registerForTraitChanges(_:target:action:)(v36, v40, "updatePreferredContentSize");
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease(v38);
    return (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0(v40);
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_1008F56D4()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  unsigned __int8 v5;
  void *v6;
  id v7;
  void *v8;
  NSString v9;
  id result;
  void *v11;
  double v12;
  void *v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGRect v25;

  v1 = v0;
  v2 = objc_msgSend(v0, "presentingViewController");
  if (!v2)
    goto LABEL_11;
  v3 = v2;
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = objc_msgSend(v4, "crl_isCompactWidth");

  if ((v5 & 1) != 0)
    goto LABEL_9;
  v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_subtitleLabel];
  v7 = objc_msgSend(v6, "text");
  if (!v7)
    goto LABEL_9;
  v8 = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

  v9 = String._bridgeToObjectiveC()();
  result = objc_msgSend(v6, "font", swift_bridgeObjectRelease().n128_f64[0]);
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  v11 = result;
  v12 = sub_100B5DB68(result);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v13 = result;
  v14 = objc_msgSend(result, "window");

  if (!v14)
  {
LABEL_9:
    v14 = v3;
LABEL_10:

LABEL_11:
    v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_subtitleLabel];
    objc_msgSend(v6, "setNumberOfLines:", 0);
    objc_msgSend(v6, "invalidateIntrinsicContentSize");
    goto LABEL_12;
  }
  objc_msgSend(v14, "bounds");
  if (v12 + 12.0 + 44.0 >= CGRectGetWidth(v25))
  {

    goto LABEL_10;
  }
  objc_msgSend(v6, "setNumberOfLines:", 1);
  objc_msgSend(v6, "invalidateIntrinsicContentSize");

LABEL_12:
  v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_titleLabel];
  objc_msgSend(v15, "intrinsicContentSize");
  v17 = v16;
  objc_msgSend(v6, "intrinsicContentSize");
  if (v17 > v18)
    v18 = v17;
  v19 = v18 + 16.0 + 12.0;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_closeButton], "intrinsicContentSize");
  v21 = v19 + v20 + 12.0 + 20.0;
  objc_msgSend(v6, "intrinsicContentSize");
  v23 = v22 + 24.0;
  objc_msgSend(v15, "intrinsicContentSize");
  return objc_msgSend(v1, "setPreferredContentSize:", v21, v23 + v24);
}

id sub_1008F59DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSFeatureHintController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSFeatureHintController()
{
  return objc_opt_self(_TtC8Freeform27CRLiOSFeatureHintController);
}

NSString sub_1008F5A8C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FEB8 = (uint64_t)result;
  return result;
}

uint64_t sub_1008F5AC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD v4[3];
  char v5;
  uint64_t v6;

  v1 = *(_BYTE *)(v0 + 24);
  v4[2] = *(_QWORD *)(v0 + 16);
  v5 = v1;
  v2 = sub_1004B804C(&qword_1013F9CE8);
  OS_dispatch_queue.sync<A>(execute:)(sub_1008F976C, v4, v2);
  return v6;
}

void sub_1008F5CC0()
{
  uint64_t v0;
  char *v1;
  char v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = *(char **)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  v3 = *(NSObject **)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
  v4 = swift_allocObject(&unk_101287458, 25, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = v2;
  v5 = swift_allocObject(&unk_101287480, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1008F9750;
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = sub_1005B72B0;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = *(_QWORD *)"";
  v9[2] = sub_100618D24;
  v9[3] = &unk_101287498;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = v1;
  swift_retain(v5);
  swift_release(v7);
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v5, "", 89, 9382, 25, 1);
  swift_release(v4);
  swift_release(v5);
  if ((v3 & 1) != 0)
    __break(1u);
}

double sub_1008F5DF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  __n128 v18;
  _QWORD *v19;
  _QWORD *v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;

  v23 = a1;
  v2 = type metadata accessor for CKSyncEngine.State.Serialization(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = PropertyListDecoder.init()();
  v11 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + 24))
    v12 = 6;
  else
    v12 = 5;
  swift_storeEnumTagMultiPayload(v8, v6, v12);
  v25 = v11;
  v26 = v8;
  v13 = sub_1004B804C(&qword_1013F9CE0);
  OS_dispatch_queue.sync<A>(execute:)(sub_1008F9714, v24, v13);
  v15 = v27;
  v14 = v28;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  if (v14 >> 60 == 15)
  {
    v16 = (_OWORD *)v23;
    *(_QWORD *)(v23 + 32) = 0;
    *v16 = 0u;
    v16[1] = 0u;
  }
  else
  {
    sub_1004BE310(v15, v14);
    v17 = sub_1004B7878(&qword_1013E7DD0, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v2, v15, v14, v2, v17, v18);
    v19 = (_QWORD *)v23;
    *(_QWORD *)(v23 + 24) = v2;
    v19[4] = sub_1004B7878(&qword_1013E7D90, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
    v20 = sub_10050D1B0(v19);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 32))(v20, v5, v2);
    sub_1004BE2FC(v15, v14);
    sub_1004BE2FC(v15, v14);
  }
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

double sub_1008F61E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PropertyListEncoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = PropertyListEncoder.init()();
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_1004BB5A4(a1, v9);
  v13 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v11, v9, *(_QWORD *)(v10 + 16), v12);
  v15 = v14;
  v16 = *(_QWORD *)(v2 + 16);
  if (*(_BYTE *)(v2 + 24))
    v17 = 6;
  else
    v17 = 5;
  v18 = swift_storeEnumTagMultiPayload(v6, v4, v17);
  __chkstk_darwin(v18);
  *(&v20 - 4) = v16;
  *(&v20 - 3) = v13;
  *(&v20 - 2) = v15;
  *(&v20 - 1) = (uint64_t)v6;
  sub_1004BE310(v13, v15);
  OS_dispatch_queue.sync<A>(execute:)(sub_1008F96F8, &v20 - 6, (char *)&type metadata for () + 8);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  sub_1004BBBC8(v13, v15);
  sub_1004BBBC8(v13, v15);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_1008F64E0(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t i;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  uint64_t v68;
  __n128 v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSString *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  double v94;
  uint64_t v95;
  unint64_t v96;
  id v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  __n128 v102;
  void (*v103)(char *, uint64_t, __n128);
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v117;
  __n128 v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  __n128 v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  int64_t v131;
  void (*v132)(char *, char *, uint64_t);
  NSString *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  _QWORD *v152;
  uint64_t v153;
  int64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  int64_t v162;
  void **v163;
  _QWORD aBlock[5];
  uint64_t v165;

  v140 = a2;
  v147 = type metadata accessor for DispatchWorkItemFlags(0);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for DispatchQoS(0);
  v143 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v142 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v139);
  v138 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v150 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v151 = (char *)&v131 - v12;
  __chkstk_darwin(v13);
  v149 = (char *)&v131 - v14;
  v15 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v15);
  v137 = (uint64_t)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v136 = (uint64_t)&v131 - v18;
  __chkstk_darwin(v19);
  v135 = (uint64_t)&v131 - v20;
  __chkstk_darwin(v21);
  v148 = (uint64_t)&v131 - v22;
  v23 = type metadata accessor for CRLZoneSyncResultScenarios(0);
  v158 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v134 = (uint64_t)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v131 - v26;
  v28 = sub_1004B804C(&qword_1013F9CB8);
  __chkstk_darwin(v28);
  v30 = (int64_t *)((char *)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  v33 = (void **)((char *)&v131 - v32);
  v34 = *(_QWORD *)(a1 + 64);
  v153 = a1 + 64;
  v35 = 1 << *(_BYTE *)(a1 + 32);
  v36 = -1;
  if (v35 < 64)
    v36 = ~(-1 << v35);
  v37 = v36 & v34;
  v133 = CKCurrentUserDefaultName;
  v154 = (unint64_t)(v35 + 63) >> 6;
  v131 = v154 - 1;
  v159 = a1;
  swift_bridgeObjectRetain(a1);
  v162 = 0;
  v152 = _swiftEmptyDictionarySingleton;
  v38 = (uint64_t *)&unk_1013F9CC0;
  v156 = v9;
  v157 = v27;
  v163 = v33;
  v160 = v30;
  v155 = v8;
  if (!v37)
    goto LABEL_6;
LABEL_4:
  v39 = v9;
  v40 = __clz(__rbit64(v37));
  v37 &= v37 - 1;
  v41 = v40 | (v162 << 6);
LABEL_5:
  v42 = *(_QWORD *)(v159 + 56);
  v43 = *(void **)(*(_QWORD *)(v159 + 48) + 8 * v41);
  *v30 = v43;
  v44 = v42 + *(_QWORD *)(v158 + 72) * v41;
  v45 = sub_1004B804C(v38);
  sub_1004B8460(v44, (uint64_t)v30 + *(int *)(v45 + 48), type metadata accessor for CRLZoneSyncResultScenarios);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v30, 0, 1, v45);
  v46 = v43;
  v33 = v163;
  while (1)
  {
    sub_1008F94D4((uint64_t)v30, (uint64_t)v33);
    v51 = v38;
    v52 = sub_1004B804C(v38);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v33, 1, v52) == 1)
    {
      swift_release(v159);
      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v119 = (void *)static OS_dispatch_queue.main.getter(v118);
      v120 = swift_allocObject(&unk_101287408, 40, 7);
      *(_QWORD *)(v120 + 16) = v152;
      *(_BYTE *)(v120 + 24) = v140 & 1;
      v121 = v141;
      *(_QWORD *)(v120 + 32) = v141;
      aBlock[4] = sub_1008F96E8;
      v165 = v120;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_101287420;
      v122 = _Block_copy(aBlock);
      v123 = v165;
      swift_retain(v121);
      v124 = swift_release(v123);
      v125 = v142;
      static DispatchQoS.unspecified.getter(v124);
      aBlock[0] = _swiftEmptyArrayStorage;
      v126 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v127 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v128 = sub_100503E88();
      v129 = v145;
      v130 = v147;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v127, v128, v147, v126);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v125, v129, v122);
      _Block_release(v122);

      (*(void (**)(char *, uint64_t))(v146 + 8))(v129, v130);
      (*(void (**)(char *, uint64_t))(v143 + 8))(v125, v144);
      return;
    }
    v53 = *v33;
    sub_1004B84E0((uint64_t)v33 + *(int *)(v52 + 48), (uint64_t)v27, type metadata accessor for CRLZoneSyncResultScenarios);
    v54 = objc_msgSend(v53, "zoneName");
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    v58._countAndFlagsBits = 0x5F6472616F42;
    v58._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v58))
    {
      if ((v57 & 0x2000000000000000) != 0)
        v59 = HIBYTE(v57) & 0xF;
      else
        v59 = v55 & 0xFFFFFFFFFFFFLL;
      v60 = 7;
      if (((v57 >> 60) & ((v55 & 0x800000000000000) == 0)) != 0)
        v60 = 11;
      if (!v59)
      {
LABEL_41:
        v69 = swift_bridgeObjectRelease();
        v8 = v155;
        v9 = v156;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v156 + 56))(v155, 1, 1, v161, v69);
LABEL_46:
        sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
        sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLZoneSyncResultScenarios);

        goto LABEL_47;
      }
      v61 = v60 | (v59 << 16);
      for (i = v61; ; i = v63)
      {
        v63 = String.index(before:)(i, v55, v57);
        v64 = String.subscript.getter(v63, v55, v57);
        if (v64 == 95 && v65 == 0xE100000000000000)
          break;
        v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, 95, 0xE100000000000000, 0);
        swift_bridgeObjectRelease();
        if ((v67 & 1) != 0)
          goto LABEL_43;
        v27 = v157;
        if (v63 < 0x4000)
          goto LABEL_41;
      }
      swift_bridgeObjectRelease();
LABEL_43:
      v70 = String.index(after:)(v63, v55, v57);
      if (4 * v59 < v70 >> 14)
        goto LABEL_63;
      v71 = String.subscript.getter(v70, v61, v55, v57);
      v73 = v72;
      v75 = v74;
      v77 = v76;
      v78 = swift_bridgeObjectRelease();
      v79 = static String._fromSubstring(_:)(v71, v73, v75, v77, v78);
      v81 = v80;
      v82 = swift_bridgeObjectRelease();
      v8 = v155;
      UUID.init(uuidString:)(v79, v81, v82);
      v68 = v161;
      v9 = v156;
      v27 = v157;
    }
    else
    {
      v9 = v39;
      v68 = v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v8, 1, 1, v161);
    }
    v83 = swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v8, 1, v68, v83) == 1)
      goto LABEL_46;
    v84 = v149;
    v132 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v132(v149, v8, v68);
    v85 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v85(v151, v84, v68);
    v86 = objc_msgSend(v53, "ownerName");
    v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
    v89 = v88;

    v90 = v133;
    v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
    if (v87 != v92)
      goto LABEL_52;
    if (v89 == v91)
    {
      swift_bridgeObjectRelease_n(v89, 2);
    }
    else
    {
LABEL_52:
      v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v89, v92, v91, 0);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v94 = swift_bridgeObjectRelease().n128_u64[0];
      if ((v93 & 1) == 0)
      {
        v97 = objc_msgSend(v53, "ownerName", v94);
        v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
        v96 = v98;

        goto LABEL_55;
      }
    }
    v95 = 0;
    v96 = 0xE000000000000000;
LABEL_55:
    v85(v150, v151, v68);
    v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
    if (v95 == v100 && v96 == v99)
    {
      swift_bridgeObjectRelease();
LABEL_59:
      v102 = swift_bridgeObjectRelease();
      v95 = 0;
      v96 = 0xE000000000000000;
      goto LABEL_60;
    }
    v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v95, v96, v100, v99, 0);
    v102 = swift_bridgeObjectRelease();
    if ((v101 & 1) != 0)
      goto LABEL_59;
LABEL_60:
    v103 = *(void (**)(char *, uint64_t, __n128))(v156 + 8);
    v103(v151, v68, v102);
    v104 = (uint64_t)v138;
    v132(v138, v150, v68);
    v105 = (uint64_t *)(v104 + *(int *)(v139 + 20));
    *v105 = v95;
    v105[1] = v96;
    v106 = v136;
    sub_1004B84E0(v104, v136, type metadata accessor for CRLBoardIdentifierStorage);
    v107 = v106;
    v108 = v135;
    sub_1004B84E0(v107, v135, type metadata accessor for CRLBoardIdentifier);
    ((void (*)(char *, uint64_t))v103)(v149, v68);
    v109 = v108;
    v110 = v148;
    sub_1004B84E0(v109, v148, type metadata accessor for CRLBoardIdentifier);
    v111 = v110;
    v112 = v137;
    sub_1004B8460(v111, v137, type metadata accessor for CRLBoardIdentifier);
    v113 = (uint64_t)v157;
    v114 = v134;
    sub_1004B8460((uint64_t)v157, v134, type metadata accessor for CRLZoneSyncResultScenarios);
    v115 = v152;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v152);
    aBlock[0] = v115;
    v117 = v114;
    v27 = (char *)v113;
    v9 = v156;
    sub_1008288E4(v117, v112, isUniquelyReferenced_nonNull_native);
    v152 = (_QWORD *)aBlock[0];
    swift_bridgeObjectRelease();
    sub_1004B84A4(v112, type metadata accessor for CRLBoardIdentifier);

    sub_1004B84A4(v148, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLZoneSyncResultScenarios);
LABEL_47:
    v30 = v160;
    v33 = v163;
    v38 = v51;
    if (v37)
      goto LABEL_4;
LABEL_6:
    v47 = v162 + 1;
    if (__OFADD__(v162, 1))
      break;
    if (v47 < v154)
    {
      v48 = *(_QWORD *)(v153 + 8 * v47);
      if (v48)
        goto LABEL_9;
      v49 = v162 + 2;
      ++v162;
      if (v47 + 1 < v154)
      {
        v48 = *(_QWORD *)(v153 + 8 * v49);
        if (v48)
          goto LABEL_12;
        v162 = v47 + 1;
        if (v47 + 2 < v154)
        {
          v48 = *(_QWORD *)(v153 + 8 * (v47 + 2));
          if (v48)
          {
            v47 += 2;
            goto LABEL_9;
          }
          v49 = v47 + 3;
          v162 = v47 + 2;
          if (v47 + 3 < v154)
          {
            v48 = *(_QWORD *)(v153 + 8 * v49);
            if (!v48)
            {
              while (1)
              {
                v47 = v49 + 1;
                if (__OFADD__(v49, 1))
                  goto LABEL_64;
                if (v47 >= v154)
                {
                  v162 = v131;
                  goto LABEL_23;
                }
                v48 = *(_QWORD *)(v153 + 8 * v47);
                ++v49;
                if (v48)
                  goto LABEL_9;
              }
            }
LABEL_12:
            v47 = v49;
LABEL_9:
            v39 = v9;
            v37 = (v48 - 1) & v48;
            v41 = __clz(__rbit64(v48)) + (v47 << 6);
            v162 = v47;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v39 = v9;
    v50 = sub_1004B804C(v38);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v30, 1, 1, v50);
    v37 = 0;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

void sub_1008F7114(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;

  v6 = sub_1004B804C(&qword_1013F7600);
  inited = swift_initStackObject(v6, &v13);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = 0xD000000000000026;
  *(_QWORD *)(inited + 40) = 0x8000000100FDF0B0;
  v8 = sub_1004B804C(&qword_1013F9CD8);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0xD000000000000029;
  *(_QWORD *)(inited + 88) = 0x8000000100FDF0E0;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = a2;
  swift_bridgeObjectRetain(a1);
  v9 = sub_1008D5E68(inited);
  v10 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD4A8 != -1)
    swift_once(&qword_1013DD4A8, sub_1008F5A8C);
  v11 = qword_10147FEB8;
  sub_100C9BC14(v9);
  swift_bridgeObjectRelease();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "postNotificationName:object:userInfo:", v11, a3, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_1008F729C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unsigned __int8 *v34;
  int v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  int v43;
  id v44;
  __n128 v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int64_t v60;
  void **v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD v68[4];

  v4 = a2;
  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F9CB8);
  __chkstk_darwin(v8);
  v10 = (unint64_t *)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v56 - v12);
  if (v4 != 2)
  {
LABEL_41:
    sub_1008F64E0(a1, 1);
    return;
  }
  v64 = v7;
  v14 = *(_QWORD *)(a1 + 64);
  v59 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  v56 = v18 - 1;
  swift_bridgeObjectRetain(a1);
  v19 = v17;
  v20 = 0;
  v60 = v18;
  v58 = v18 - 5;
  v21 = type metadata accessor for CRLZoneSyncResultScenarios;
  v57 = a1 + 104;
  v62 = a1;
  v63 = (char *)&type metadata for () + 8;
  v65 = v2;
  v61 = v13;
  while (1)
  {
    if (v19)
    {
      v66 = (v19 - 1) & v19;
      v67 = v20;
      v22 = __clz(__rbit64(v19)) | (v20 << 6);
      goto LABEL_9;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v28 >= v60)
    {
      v30 = v20;
    }
    else
    {
      v29 = *(_QWORD *)(v59 + 8 * v28);
      if (v29)
        goto LABEL_13;
      v30 = v20 + 1;
      if ((uint64_t)(v20 + 2) < v60)
      {
        v29 = *(_QWORD *)(v59 + 8 * (v20 + 2));
        if (v29)
        {
          v28 = v20 + 2;
          goto LABEL_13;
        }
        v30 = v20 + 2;
        if ((uint64_t)(v20 + 3) < v60)
        {
          v29 = *(_QWORD *)(v59 + 8 * (v20 + 3));
          if (v29)
          {
            v28 = v20 + 3;
LABEL_13:
            v66 = (v29 - 1) & v29;
            v67 = v28;
            v22 = __clz(__rbit64(v29)) + (v28 << 6);
LABEL_9:
            v23 = *(_QWORD *)(a1 + 56);
            v24 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v22);
            *v10 = v24;
            v25 = v23
                + *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLZoneSyncResultScenarios(0) - 8) + 72) * v22;
            v26 = sub_1004B804C(&qword_1013F9CC0);
            sub_1004B8460(v25, (uint64_t)v10 + *(int *)(v26 + 48), v21);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 0, 1, v26);
            v27 = v24;
            goto LABEL_16;
          }
          v28 = v20 + 4;
          v30 = v20 + 3;
          if ((uint64_t)(v20 + 4) < v60)
          {
            v29 = *(_QWORD *)(v59 + 8 * v28);
            if (v29)
              goto LABEL_13;
            while (v58 != v20)
            {
              v29 = *(_QWORD *)(v57 + 8 * v20++);
              if (v29)
              {
                v28 = v20 + 4;
                goto LABEL_13;
              }
            }
            v30 = v56;
          }
        }
      }
    }
    v31 = sub_1004B804C(&qword_1013F9CC0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
    v66 = 0;
    v67 = v30;
LABEL_16:
    sub_1008F94D4((uint64_t)v10, (uint64_t)v13);
    v32 = sub_1004B804C(&qword_1013F9CC0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v13, 1, v32) == 1)
    {
      swift_release(a1);
      goto LABEL_41;
    }
    v33 = *v13;
    v34 = (unsigned __int8 *)v13 + *(int *)(v32 + 48);
    v35 = *v34;
    sub_1004B84A4((uint64_t)v34, v21);
    if (v35 == 1)
    {
      v36 = v10;
      v37 = v21;
      v38 = type metadata accessor for TaskPriority(0);
      v39 = *(_QWORD *)(v38 - 8);
      v40 = (uint64_t)v64;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v64, 1, 1, v38);
      v41 = (_QWORD *)swift_allocObject(&unk_1012873E0, 48, 7);
      v41[2] = 0;
      v42 = v41 + 2;
      v41[3] = 0;
      v41[4] = v2;
      v41[5] = v33;
      v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38);
      swift_retain(v2);
      v44 = v33;
      if (v43 == 1)
      {
        sub_1004CB800(v40, &qword_1013E01F0);
        v46 = 0;
      }
      else
      {
        v47 = TaskPriority.rawValue.getter(v45);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
        v46 = v47;
      }
      v21 = v37;
      v10 = v36;
      v13 = v61;
      v48 = *v42;
      if (*v42)
      {
        v49 = v41[3];
        ObjectType = swift_getObjectType(*v42);
        swift_unknownObjectRetain(v48);
        v51 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v49);
        v53 = v52;
        swift_unknownObjectRelease(v48);
      }
      else
      {
        v51 = 0;
        v53 = 0;
      }
      a1 = v62;
      if (v53 | v51)
      {
        v68[0] = 0;
        v68[1] = 0;
        v54 = v68;
        v68[2] = v51;
        v68[3] = v53;
      }
      else
      {
        v54 = 0;
      }
      v55 = swift_task_create(v46 | 0x1C00, v54, v63, &unk_1013F9CD0);

      swift_release(v55);
      v2 = v65;
    }
    else
    {

    }
    v19 = v66;
    v20 = v67;
  }
  __break(1u);
}

uint64_t sub_1008F7774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1008F778C, 0, 0);
}

uint64_t sub_1008F778C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = *(_QWORD *)(v0[2] + 16);
  v3 = swift_task_alloc(32);
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_100619BA8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000002FLL, 0x8000000100FDF080, sub_1008F96B4, v3, (char *)&type metadata for () + 8);
}

void sub_1008F7830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  Swift::String v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t i;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  double v95;
  id v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  __n128 v101;
  void (*v102)(char *, uint64_t, __n128);
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  NSObject *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  char *v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t inited;
  _QWORD *v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  int64_t v157;
  unint64_t v158;
  uint64_t v159;
  NSString *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  int64_t v168;
  uint64_t *v169;
  char *v170;
  _QWORD aBlock[5];
  uint64_t v172;
  char v173[8];
  uint64_t v174;
  uint64_t v175;
  char v176[8];
  char v177[8];
  void *v178;

  v156 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v156);
  v155 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v162 = (char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v154 = (char *)&v142 - v11;
  __chkstk_darwin(v12);
  v161 = (char *)&v142 - v13;
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  v146 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v144 = (uint64_t)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v149 = (uint64_t)&v142 - v17;
  __chkstk_darwin(v18);
  v153 = (uint64_t)&v142 - v19;
  __chkstk_darwin(v20);
  v152 = (uint64_t)&v142 - v21;
  v145 = v22;
  __chkstk_darwin(v23);
  v159 = (uint64_t)&v142 - v24;
  v25 = type metadata accessor for CRLZoneSyncResultScenarios(0);
  v163 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v151 = (uint64_t)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v142 - v28;
  v30 = sub_1004B804C(&qword_1013F9CB8);
  __chkstk_darwin(v30);
  v32 = (uint64_t *)((char *)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33);
  v35 = (uint64_t (*)(uint64_t))((char *)&v142 - v34);
  v178 = &_swiftEmptySetSingleton;
  v36 = *(_QWORD *)(a1 + 64);
  v148 = a1 + 64;
  v37 = 1 << *(_BYTE *)(a1 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v160 = CKCurrentUserDefaultName;
  v157 = (unint64_t)(v37 + 63) >> 6;
  v143 = v157 - 1;
  v164 = a1;
  swift_bridgeObjectRetain(a1);
  v168 = 0;
  v165 = v6;
  v167 = v7;
  v166 = v8;
  v150 = v35;
  v170 = v29;
  v169 = v32;
  while (1)
  {
    if (v39)
    {
      v42 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      v43 = v42 | (v168 << 6);
LABEL_8:
      v44 = *(_QWORD *)(v164 + 56);
      v1 = *(_QWORD *)(*(_QWORD *)(v164 + 48) + 8 * v43);
      *v32 = v1;
      v45 = v44 + *(_QWORD *)(v163 + 72) * v43;
      v46 = sub_1004B804C(&qword_1013F9CC0);
      sub_1004B8460(v45, (uint64_t)v32 + *(int *)(v46 + 48), type metadata accessor for CRLZoneSyncResultScenarios);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v32, 0, 1, v46);
      v47 = (id)v1;
      goto LABEL_27;
    }
    v48 = v168 + 1;
    if (__OFADD__(v168, 1))
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, aBlock, 0, 0);
      v128 = (void *)static OS_os_log.dataSync;
      v129 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v129, v177);
      v131 = (_QWORD *)inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      if (*((_BYTE *)v35 + 24))
        v132 = 0x5320646572616853;
      else
        v132 = 0x2065746176697250;
      if (*((_BYTE *)v35 + 24))
        v133 = 0xEC00000065706F63;
      else
        v133 = 0xED000065706F6353;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v134 = sub_1004CFC2C();
      v131[8] = v134;
      v131[4] = v132;
      v131[5] = v133;
      swift_getErrorValue(v1, v176, v173);
      v135 = v174;
      v136 = v175;
      v137 = v128;
      v138 = Error.localizedDescription.getter(v135, v136);
      v131[12] = &type metadata for String;
      v131[13] = v134;
      v131[9] = v138;
      v131[10] = v139;
      v140 = static os_log_type_t.error.getter(v138);
      sub_100A06EBC((uint64_t)v137, &_mh_execute_header, v140, "<%{public}@> Failed to remove board identifiers from sync reset boards with error %@", 84, 2, (uint64_t)v131);
      swift_setDeallocating(v131);
      v141 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v131 + 4, 2, v141);

      swift_errorRelease(v1);
LABEL_76:
      sub_1008F64E0(v164, 0);
      return;
    }
    if (v48 < v157)
    {
      v49 = *(_QWORD *)(v148 + 8 * v48);
      if (v49)
        goto LABEL_12;
      v50 = v168 + 2;
      ++v168;
      if (v48 + 1 < v157)
      {
        v49 = *(_QWORD *)(v148 + 8 * v50);
        if (v49)
          goto LABEL_15;
        v168 = v48 + 1;
        if (v48 + 2 < v157)
        {
          v49 = *(_QWORD *)(v148 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
            goto LABEL_12;
          }
          v50 = v48 + 3;
          v168 = v48 + 2;
          if (v48 + 3 < v157)
            break;
        }
      }
    }
LABEL_26:
    v51 = sub_1004B804C(&qword_1013F9CC0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v32, 1, 1, v51);
    v39 = 0;
LABEL_27:
    sub_1008F94D4((uint64_t)v32, (uint64_t)v35);
    v52 = sub_1004B804C(&qword_1013F9CC0);
    if ((*(unsigned int (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v35, 1, v52) == 1)
    {
      swift_release(v164);
      v125 = (uint64_t)v178;
      __chkstk_darwin(v126);
      *(&v142 - 2) = v127;
      *(&v142 - 1) = v125;
      OS_dispatch_queue.sync<A>(execute:)(sub_1008F951C, &v142 - 4, (char *)&type metadata for () + 8);
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
    v53 = *(void **)v35;
    sub_1004B84E0((uint64_t)v35 + *(int *)(v52 + 48), (uint64_t)v29, type metadata accessor for CRLZoneSyncResultScenarios);
    v54 = objc_msgSend(v53, "zoneName");
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    v58._countAndFlagsBits = 0x5F6472616F42;
    v58._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v58))
    {
      v59 = v39;
      if ((v57 & 0x2000000000000000) != 0)
        v60 = HIBYTE(v57) & 0xF;
      else
        v60 = v55 & 0xFFFFFFFFFFFFLL;
      v61 = 7;
      if (((v57 >> 60) & ((v55 & 0x800000000000000) == 0)) != 0)
        v61 = 11;
      if (!v60)
      {
LABEL_4:
        v40 = swift_bridgeObjectRelease();
        v41 = v166;
        v6 = v165;
        v7 = v167;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v166 + 56))(v165, 1, 1, v167, v40);
        v8 = v41;
        goto LABEL_5;
      }
      v62 = v61 | (v60 << 16);
      for (i = v62; ; i = v64)
      {
        v64 = String.index(before:)(i, v55, v57);
        v65 = String.subscript.getter(v64, v55, v57);
        if (v65 == 95 && v66 == 0xE100000000000000)
          break;
        v1 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v66, 95, 0xE100000000000000, 0);
        swift_bridgeObjectRelease();
        if ((v1 & 1) != 0)
          goto LABEL_45;
        if (v64 < 0x4000)
          goto LABEL_4;
      }
      swift_bridgeObjectRelease();
LABEL_45:
      v1 = 4 * v60;
      v68 = String.index(after:)(v64, v55, v57);
      if (4 * v60 < v68 >> 14)
        goto LABEL_78;
      v69 = String.subscript.getter(v68, v62, v55, v57);
      v71 = v70;
      v73 = v72;
      v75 = v74;
      v76 = swift_bridgeObjectRelease();
      v1 = static String._fromSubstring(_:)(v69, v71, v73, v75, v76);
      v78 = v77;
      v79 = swift_bridgeObjectRelease();
      v6 = v165;
      UUID.init(uuidString:)(v1, v78, v79);
      v7 = v167;
      v39 = v59;
      v8 = v166;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    v80 = swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v80) == 1)
    {
LABEL_5:
      sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
      v29 = v170;
      sub_1004B84A4((uint64_t)v170, type metadata accessor for CRLZoneSyncResultScenarios);

      v32 = v169;
    }
    else
    {
      v158 = v39;
      v81 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v82 = v161;
      v81(v161, v6, v7);
      v83 = v7;
      v84 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v85 = v154;
      v84(v154, v82, v83);
      v86 = objc_msgSend(v53, "ownerName");
      v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
      v89 = v88;

      v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
      if (v87 == v91 && v89 == v90)
      {
        swift_bridgeObjectRelease_n(v89, 2);
        v92 = 0;
        v93 = 0xE000000000000000;
        v35 = type metadata accessor for CRLBoardIdentifier;
      }
      else
      {
        v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v89, v91, v90, 0);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v95 = swift_bridgeObjectRelease().n128_u64[0];
        v35 = type metadata accessor for CRLBoardIdentifier;
        if ((v94 & 1) != 0)
        {
          v92 = 0;
          v93 = 0xE000000000000000;
        }
        else
        {
          v96 = objc_msgSend(v53, "ownerName", v95);
          v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
          v93 = v97;

        }
      }
      v84(v162, v85, v167);
      v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
      if (v92 == v99 && v93 == v98)
      {
        swift_bridgeObjectRelease();
        v32 = v169;
      }
      else
      {
        v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v93, v99, v98, 0);
        v101 = swift_bridgeObjectRelease();
        v32 = v169;
        if ((v100 & 1) == 0)
          goto LABEL_59;
      }
      v101 = swift_bridgeObjectRelease();
      v92 = 0;
      v93 = 0xE000000000000000;
LABEL_59:
      v7 = v167;
      v102 = *(void (**)(char *, uint64_t, __n128))(v166 + 8);
      v102(v85, v167, v101);
      v103 = (uint64_t)v155;
      v81(v155, v162, v7);
      v104 = (uint64_t *)(v103 + *(int *)(v156 + 20));
      *v104 = v92;
      v104[1] = v93;
      v105 = v153;
      sub_1004B84E0(v103, v153, type metadata accessor for CRLBoardIdentifierStorage);
      v106 = v105;
      v107 = v152;
      sub_1004B84E0(v106, v152, type metadata accessor for CRLBoardIdentifier);
      ((void (*)(char *, uint64_t))v102)(v161, v7);
      v108 = v159;
      sub_1004B84E0(v107, v159, type metadata accessor for CRLBoardIdentifier);
      v29 = v170;
      if ((v170[2] & 1) != 0)
      {
        v109 = *(char **)(v147 + 16);
        v110 = *(NSObject **)&v109[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
        v111 = v149;
        sub_1004B8460(v108, v149, type metadata accessor for CRLBoardIdentifier);
        v112 = *(unsigned __int8 *)(v146 + 80);
        v113 = (v112 + 32) & ~v112;
        v114 = swift_allocObject(&unk_101287368, v113 + v145, v112 | 7);
        *(_BYTE *)(v114 + 16) = 1;
        *(_QWORD *)(v114 + 24) = v109;
        sub_1004B84E0(v111, v114 + v113, type metadata accessor for CRLBoardIdentifier);
        v1 = swift_allocObject(&unk_101287390, 32, 7);
        *(_QWORD *)(v1 + 16) = sub_1008F95C4;
        *(_QWORD *)(v1 + 24) = v114;
        aBlock[4] = sub_1005B71BC;
        v172 = v1;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_100618D24;
        aBlock[3] = &unk_1012873A8;
        v115 = _Block_copy(aBlock);
        v116 = v172;
        v117 = v109;
        swift_retain(v1);
        swift_release(v116);
        dispatch_sync(v110, v115);
        _Block_release(v115);
        LOBYTE(v110) = swift_isEscapingClosureAtFileLocation(v1, "", 89, 9467, 25, 1);
        swift_release(v114);
        swift_release(v1);
        if ((v110 & 1) != 0)
          goto LABEL_79;
        v29 = v170;
        v118 = v170[2];
        v1 = v151;
        sub_1004B8460((uint64_t)v170, v151, type metadata accessor for CRLZoneSyncResultScenarios);
        v32 = v169;
        if ((v118 & 1) != 0)
        {

          sub_1004B84A4(v1, type metadata accessor for CRLZoneSyncResultScenarios);
          v6 = v165;
          v8 = v166;
          goto LABEL_66;
        }
      }
      else
      {
        v1 = v151;
        sub_1004B8460((uint64_t)v170, v151, type metadata accessor for CRLZoneSyncResultScenarios);
      }
      v119 = *(_BYTE *)(v1 + 1);
      sub_1004B84A4(v1, type metadata accessor for CRLZoneSyncResultScenarios);
      v6 = v165;
      v8 = v166;
      if ((v119 & 1) != 0)
      {

LABEL_66:
        v39 = v158;
        sub_1004B84A4(v159, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLZoneSyncResultScenarios);
        v35 = v150;
      }
      else
      {
        v120 = v159;
        v1 = v144;
        v121 = v166;
        sub_1004B8460(v159, v144, type metadata accessor for CRLBoardIdentifier);
        v122 = v149;
        sub_100AD7844(v149, v1);

        v123 = v122;
        v29 = v170;
        sub_1004B84A4(v123, type metadata accessor for CRLBoardIdentifier);
        v124 = v120;
        v32 = v169;
        v8 = v121;
        sub_1004B84A4(v124, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLZoneSyncResultScenarios);
        v35 = v150;
        v39 = v158;
      }
    }
  }
  v49 = *(_QWORD *)(v148 + 8 * v50);
  if (v49)
  {
LABEL_15:
    v48 = v50;
LABEL_12:
    v39 = (v49 - 1) & v49;
    v43 = __clz(__rbit64(v49)) + (v48 << 6);
    v168 = v48;
    goto LABEL_8;
  }
  while (1)
  {
    v48 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v48 >= v157)
    {
      v168 = v143;
      goto LABEL_26;
    }
    v49 = *(_QWORD *)(v148 + 8 * v48);
    ++v50;
    if (v49)
      goto LABEL_12;
  }
  __break(1u);
}

Swift::Int sub_1008F87B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[28];

  v1 = v0;
  v5[2] = *(_QWORD *)(v0 + 16);
  v5[3] = sub_1001E9730();
  v2 = sub_1004B804C(&qword_1013E0238);
  OS_dispatch_queue.sync<A>(execute:)(sub_1008F94BC, v5, v2);
  v3 = v5[23];
  swift_retain(v1);
  return sub_1008F8C98(v3, v1);
}

uint64_t sub_1008F89D4(id *a1, uint64_t a2)
{
  id v2;
  char v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  char v22;
  id v23;
  unint64_t v24;
  char v26;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 24);
  v4 = objc_msgSend(*a1, "ownerName");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  v10 = v8;
  v12 = v5 == v9 && v7 == v8;
  if ((v3 & 1) != 0)
  {
    if (v12)
    {
      swift_bridgeObjectRelease_n(v7, 2);
    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v10);
      if ((v13 & 1) == 0)
      {
        v19 = objc_msgSend(v2, "ownerName");
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v15 = v20;

        if (v14)
          goto LABEL_19;
        goto LABEL_17;
      }
    }
    v14 = 0;
    v15 = 0xE000000000000000;
LABEL_17:
    if (v15 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease(0xE000000000000000);
      v21 = 0;
      return v21 & 1;
    }
LABEL_19:
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0, 0xE000000000000000, 0);
    swift_bridgeObjectRelease(v15);
    v21 = v22 ^ 1;
    return v21 & 1;
  }
  if (v12)
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v10);
    if ((v16 & 1) == 0)
    {
      v23 = objc_msgSend(v2, "ownerName");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v18 = v24;

      if (v17)
        goto LABEL_24;
      goto LABEL_21;
    }
  }
  v17 = 0;
  v18 = 0xE000000000000000;
LABEL_21:
  if (v18 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease(0xE000000000000000);
    v21 = 1;
    return v21 & 1;
  }
LABEL_24:
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0, 0xE000000000000000, 0);
  swift_bridgeObjectRelease(v18);
  return v26 & 1;
}

uint64_t sub_1008F8BF0()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for CRLDatabaseSyncDataSource()
{
  return objc_opt_self(_TtC8Freeform25CRLDatabaseSyncDataSource);
}

uint64_t sub_1008F8C34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1013F9CB0 + dword_1013F9CB0);
  v3 = (_QWORD *)swift_task_alloc(unk_1013F9CB4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return v5(a1);
}

Swift::Int sub_1008F8C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  Swift::Int result;
  char v12;
  id v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;

  v3 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = &_swiftEmptySetSingleton;
    v29 = &_swiftEmptySetSingleton;
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain(a2);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = __CocoaSet.Iterator.next()(v7);
    if (v8)
    {
      v10 = v8;
      v5 = (void *)sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
      do
      {
        v27 = v10;
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
        v12 = sub_1008F89D4(&v28, a2);
        if (v3)
        {
          swift_release(v7);

          v25 = v29;
          swift_release_n(a2, 2, v26);
          swift_release(v25);
          return (Swift::Int)v5;
        }
        v13 = v28;
        if ((v12 & 1) != 0)
        {
          v14 = v29;
          v15 = v29[2];
          if (v29[3] <= v15)
          {
            sub_100AE1048(v15 + 1);
            v14 = v29;
          }
          result = NSObject._rawHashValue(seed:)(v14[5]);
          v16 = v14 + 7;
          v17 = -1 << *((_BYTE *)v14 + 32);
          v18 = result & ~v17;
          v19 = v18 >> 6;
          if (((-1 << v18) & ~v14[(v18 >> 6) + 7]) != 0)
          {
            v20 = __clz(__rbit64((-1 << v18) & ~v14[(v18 >> 6) + 7])) | v18 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v21 = 0;
            v22 = (unint64_t)(63 - v17) >> 6;
            do
            {
              if (++v19 == v22 && (v21 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v23 = v19 == v22;
              if (v19 == v22)
                v19 = 0;
              v21 |= v23;
              v24 = v16[v19];
            }
            while (v24 == -1);
            v20 = __clz(__rbit64(~v24)) + (v19 << 6);
          }
          *(_QWORD *)((char *)v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
          *(_QWORD *)(v14[6] + 8 * v20) = v13;
          ++v14[2];
        }
        else
        {

        }
        v10 = __CocoaSet.Iterator.next()(result);
      }
      while (v10);
      v5 = v29;
    }
    swift_release_n(a2, 2, v9);
    swift_release(v7);
  }
  else
  {
    v5 = (void *)sub_1008F90E8(a1, a2);
    swift_release(a2);
  }
  return (Swift::Int)v5;
}

void sub_1008F8F04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  char v18;
  uint64_t v21;
  int64_t v22;
  id v23;

  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v21 = 0;
  v22 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v13 = v12 | (v7 << 6);
LABEL_17:
    v23 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v13);
    v17 = v23;
    v18 = sub_1008F89D4(&v23, a4);

    if (v4)
      return;
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = __OFADD__(v21++, 1);
      if (v14)
        goto LABEL_30;
    }
  }
  v14 = __OFADD__(v7++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v22)
    goto LABEL_26;
  v15 = *(_QWORD *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  v16 = v7 + 1;
  if (v7 + 1 >= v22)
    goto LABEL_26;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 2;
  if (v7 + 2 >= v22)
    goto LABEL_26;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 3;
  if (v7 + 3 >= v22)
  {
LABEL_26:
    swift_retain(a3);
    sub_100CD84B0(a1, a2, v21, a3);
    return;
  }
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v22)
      goto LABEL_26;
    v15 = *(_QWORD *)(v8 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1008F90E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  v3 = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n(a2, 2);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v9, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v18 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain(a2);
    sub_1008F8F04((unint64_t *)((char *)&v18 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    v12 = v11;
    swift_release(a1);
    v13 = swift_release(a2);
    if (v3)
      swift_willThrow(v13);
    swift_release_n(a2, 2, v13);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v9, -1);
    bzero(v14, v9);
    swift_retain(a2);
    sub_1008F8F04((unint64_t *)v14, v8, a1, a2);
    v12 = v15;
    swift_release(a1);
    swift_release(a2);
    swift_slowDealloc(v14, -1, -1);
    swift_release_n(a2, 2, v16);
  }
  return v12;
}

uint64_t sub_1008F92AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = v1;
  return swift_task_switch(sub_1008F92C4, 0, 0);
}

uint64_t sub_1008F92C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 112))
  {
    v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
    v2 = swift_task_alloc(32);
    *(_QWORD *)(v2 + 16) = v1;
    OS_dispatch_queue.sync<A>(execute:)(sub_1008F94A4, v2, (char *)&type metadata for () + 8);
    swift_task_dealloc(v2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1008F94A4()
{
  uint64_t v0;

  sub_100AD32B8(*(void **)(v0 + 16));
}

sqlite3_stmt **sub_1008F94BC@<X0>(sqlite3_stmt ***a1@<X8>)
{
  uint64_t v1;

  return sub_100A9C75C(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1008F94D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F9CB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1008F951C()
{
  uint64_t v0;

  return sub_100ACF864(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1008F9534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

double sub_1008F95C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  return sub_100ACF7E8(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1008F95F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008F9608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008F9618(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008F9620()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1008F9654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1013F9CCC);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1004CF80C;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_1008F778C, 0, 0);
}

double sub_1008F96B4(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB2908(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_1008F96BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1008F96E8()
{
  uint64_t v0;

  sub_1008F7114(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1008F96F8()
{
  sub_100AAF880();
}

uint64_t sub_1008F9714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100AAFA0C(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1008F972C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

double sub_1008F9750()
{
  uint64_t v0;

  return sub_100ACB92C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1008F975C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1008F976C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100AC03BC(*(_BYTE *)(v1 + 24), a1);
}

void sub_1008F9798(uint64_t a1, uint64_t a2, float a3)
{
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  double *v9;
  double *v10;
  int64_t v11;
  double v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v17;
  double v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  unint64_t v28;
  unint64_t v29;
  double v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 >= v6)
    v8 = *(_QWORD *)(a1 + 16);
  else
    v8 = *(_QWORD *)(a2 + 16);
  sub_100600708(0, v8, 0);
  v31 = v7;
  v33 = a2;
  v34 = a1;
  v32 = v6;
  if (v8)
  {
    v9 = (double *)(a1 + 32);
    v10 = (double *)(a2 + 32);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    v11 = v8;
    while (v6)
    {
      if (!v7)
        goto LABEL_26;
      v12 = *v9;
      v13 = *v10;
      v15 = _swiftEmptyArrayStorage[2];
      v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
        sub_100600708(v14 > 1, v15 + 1, 1);
      v16 = sub_10006191C(v12, v13, a3);
      _swiftEmptyArrayStorage[2] = v15 + 1;
      *(double *)&_swiftEmptyArrayStorage[v15 + 4] = v16;
      --v7;
      --v6;
      ++v10;
      ++v9;
      if (!--v11)
        goto LABEL_13;
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
LABEL_13:
    if (v32 <= v31)
    {
LABEL_24:
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v34);
      return;
    }
    v17 = 0;
    v18 = a3;
    if (v8 <= v31)
      v19 = v31;
    else
      v19 = v8;
    v20 = v19 - v8;
    v21 = v32 - v8;
    v22 = v31 - v8;
    v23 = 8 * v8 + 32;
    v24 = v34 + v23;
    v25 = v33 + v23;
    while (v21 != v17)
    {
      if (v22 == v17)
        goto LABEL_24;
      if (v20 == v17)
        goto LABEL_28;
      v26 = *(double *)(v24 + 8 * v17);
      v27 = *(double *)(v25 + 8 * v17);
      v29 = _swiftEmptyArrayStorage[2];
      v28 = _swiftEmptyArrayStorage[3];
      if (v29 >= v28 >> 1)
        sub_100600708(v28 > 1, v29 + 1, 1);
      v30 = sub_10006191C(v26, v27, v18);
      _swiftEmptyArrayStorage[2] = v29 + 1;
      *(double *)&_swiftEmptyArrayStorage[v29 + 4] = v30;
      if (v21 == ++v17)
        goto LABEL_24;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_1008F99D0(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v3;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  CGFloat v35;
  CGFloat tx;
  CGFloat ty;
  CGFloat m43;
  CGFloat m44;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  CGFloat m21;
  CGFloat m22;
  uint64_t v52;
  uint64_t v53;
  const void *v54;
  CFTypeID v55;
  uint64_t v56;
  uint64_t v57;
  CGFloat m11;
  CGFloat v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  __int128 v82;
  CGFloat v83;
  __int128 v84;
  CGFloat v85;
  __int128 v86;
  CGFloat v87;
  __int128 v88;
  CGFloat v89;
  __int128 v90;
  CGFloat v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  CGFloat v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  CGAffineTransform v99;
  CGAffineTransform m;
  CATransform3D v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  _BYTE v115[24];
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  _BYTE v130[24];
  uint64_t v131;

  sub_1004F370C(v3, (uint64_t)&v117);
  if (!*((_QWORD *)&v118 + 1))
    goto LABEL_6;
  if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) == 0)
    goto LABEL_7;
  v7 = *(double *)&v102;
  sub_1004F370C(a1, (uint64_t)&v117);
  if (*((_QWORD *)&v118 + 1))
  {
    if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
    {
      v8 = sub_10006191C(v7, *(double *)&v102, a3);
      *(_QWORD *)(a2 + 24) = &type metadata for CGFloat;
      *(double *)a2 = v8;
      return;
    }
  }
  else
  {
LABEL_6:
    sub_1004D28EC((uint64_t)&v117);
  }
LABEL_7:
  sub_1004F370C(v3, (uint64_t)&v117);
  if (!*((_QWORD *)&v118 + 1))
  {
LABEL_12:
    sub_1004D28EC((uint64_t)&v117);
    goto LABEL_13;
  }
  type metadata accessor for CGPoint(0);
  v10 = v9;
  if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v12 = *((double *)&v102 + 1);
    v11 = *(double *)&v102;
    sub_1004F370C(a1, (uint64_t)&v117);
    if (*((_QWORD *)&v118 + 1))
    {
      if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
        goto LABEL_23;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_13:
  sub_1004F370C(v3, (uint64_t)&v117);
  if (!*((_QWORD *)&v118 + 1))
    goto LABEL_18;
  type metadata accessor for CGRect(0);
  v14 = v13;
  if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    goto LABEL_19;
  v15 = v102;
  v16 = v103;
  sub_1004F370C(a1, (uint64_t)&v117);
  if (*((_QWORD *)&v118 + 1))
  {
    if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, v14, 6) & 1) != 0)
    {
      v17 = sub_100061AA8(*(double *)&v15, *((double *)&v15 + 1), *(double *)&v16, *((double *)&v16 + 1), *(double *)&v102, *((double *)&v102 + 1), *(double *)&v103, *((double *)&v103 + 1), a3);
      v19 = v18;
      v21 = v20;
      v23 = v22;
      *(_QWORD *)(a2 + 24) = v14;
      v24 = (double *)swift_allocObject(&unk_1012875F8, 48, 7);
      *(_QWORD *)a2 = v24;
      v24[2] = v17;
      *((_QWORD *)v24 + 3) = v19;
      *((_QWORD *)v24 + 4) = v21;
      *((_QWORD *)v24 + 5) = v23;
      return;
    }
  }
  else
  {
LABEL_18:
    sub_1004D28EC((uint64_t)&v117);
  }
LABEL_19:
  sub_1004F370C(v3, (uint64_t)&v117);
  if (!*((_QWORD *)&v118 + 1))
  {
LABEL_24:
    sub_1004D28EC((uint64_t)&v117);
    goto LABEL_25;
  }
  type metadata accessor for CGSize(0);
  v10 = v25;
  if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, v25, 6) & 1) != 0)
  {
    v12 = *((double *)&v102 + 1);
    v11 = *(double *)&v102;
    sub_1004F370C(a1, (uint64_t)&v117);
    if (*((_QWORD *)&v118 + 1))
    {
      if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
      {
LABEL_23:
        v26 = sub_100061A8C(v11, v12, *(double *)&v102, *((double *)&v102 + 1), a3);
        *(_QWORD *)(a2 + 24) = v10;
        *(double *)a2 = v26;
        *(_QWORD *)(a2 + 8) = v27;
        return;
      }
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_25:
  sub_1004F370C(v3, (uint64_t)&v117);
  if (!*((_QWORD *)&v118 + 1))
    goto LABEL_30;
  if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, &type metadata for Float, 6) & 1) == 0)
    goto LABEL_31;
  v28 = *(float *)&v102;
  sub_1004F370C(a1, (uint64_t)&v117);
  if (*((_QWORD *)&v118 + 1))
  {
    if ((swift_dynamicCast(&v102, &v117, (char *)&type metadata for Any + 8, &type metadata for Float, 6) & 1) != 0)
    {
      v29 = (float)((float)(1.0 - a3) * v28) + (float)(*(float *)&v102 * a3);
      *(_QWORD *)(a2 + 24) = &type metadata for Float;
      *(float *)a2 = v29;
      return;
    }
  }
  else
  {
LABEL_30:
    sub_1004D28EC((uint64_t)&v117);
  }
LABEL_31:
  sub_1004F370C(v3, (uint64_t)v130);
  if (!v131)
  {
    v41 = v130;
LABEL_41:
    sub_1004D28EC((uint64_t)v41);
    goto LABEL_42;
  }
  type metadata accessor for CATransform3D(0);
  v31 = v30;
  if ((swift_dynamicCast(&v117, v130, (char *)&type metadata for Any + 8, v30, 6) & 1) != 0)
  {
    v32 = v117;
    v33 = v118;
    v34 = v119;
    v35 = v120;
    v95 = v121;
    v91 = v122;
    v89 = v123;
    v87 = v124;
    v85 = v125;
    v83 = v126;
    v80 = v128;
    v81 = v127;
    v79 = v129;
    sub_1004F370C(a1, (uint64_t)v115);
    if (v116)
    {
      if ((swift_dynamicCast(&v102, v115, (char *)&type metadata for Any + 8, v31, 6) & 1) != 0)
      {
        v77 = *((double *)&v102 + 1);
        v78 = *(double *)&v102;
        v75 = *((double *)&v103 + 1);
        v76 = *(double *)&v103;
        v73 = *((double *)&v104 + 1);
        v74 = *(double *)&v104;
        v71 = v106;
        v72 = v105;
        v69 = v108;
        v70 = v107;
        v67 = v110;
        v68 = v109;
        v65 = v112;
        v66 = v111;
        v63 = v114;
        v64 = v113;
        *(_OWORD *)&v101.m11 = v32;
        *(_OWORD *)&v101.m13 = v33;
        *(_OWORD *)&v101.m21 = v34;
        v101.m23 = v35;
        v101.m24 = v95;
        v101.m31 = v91;
        v101.m32 = v89;
        v101.m33 = v87;
        v101.m34 = v85;
        v101.m41 = v83;
        v101.m42 = v81;
        v101.m43 = v80;
        v101.m44 = v79;
        if (!CATransform3DIsAffine(&v101))
          goto LABEL_37;
        v101.m11 = v78;
        v101.m12 = v77;
        v101.m13 = v76;
        v101.m14 = v75;
        v101.m21 = v74;
        v101.m22 = v73;
        v101.m23 = v72;
        v101.m24 = v71;
        v101.m31 = v70;
        v101.m32 = v69;
        v101.m33 = v68;
        v101.m34 = v67;
        v101.m41 = v66;
        v101.m42 = v65;
        v101.m43 = v64;
        v101.m44 = v63;
        if (!CATransform3DIsAffine(&v101))
        {
LABEL_37:
          sub_100757E04(&_mh_execute_header, (uint64_t)"interpolate(with:by:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerPropertyValueInterpolatable.swift", 142, 2, 92, "Cannot interpolate between non-affine transforms. Only 2D transforms are currently supported. Output transform may be different than expected.", 142, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"interpolate(with:by:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerPropertyValueInterpolatable.swift", 142, 2u, 92, (uint64_t)"Cannot interpolate between non-affine transforms. Only 2D transforms are currently supported. Output transform may be different than expected.", 142, 2u);
        }
        *(_OWORD *)&v101.m11 = v32;
        *(_OWORD *)&v101.m13 = v33;
        *(_OWORD *)&v101.m21 = v34;
        v101.m23 = v35;
        v101.m24 = v95;
        v101.m31 = v91;
        v101.m32 = v89;
        v101.m33 = v87;
        v101.m34 = v85;
        v101.m41 = v83;
        v101.m42 = v81;
        v101.m43 = v80;
        v101.m44 = v79;
        CATransform3DGetAffineTransform(&m, &v101);
        v92 = *(_OWORD *)&m.c;
        v96 = *(_OWORD *)&m.a;
        tx = m.tx;
        ty = m.ty;
        v101.m11 = v78;
        v101.m12 = v77;
        v101.m13 = v76;
        v101.m14 = v75;
        v101.m21 = v74;
        v101.m22 = v73;
        v101.m23 = v72;
        v101.m24 = v71;
        v101.m31 = v70;
        v101.m32 = v69;
        v101.m33 = v68;
        v101.m34 = v67;
        v101.m41 = v66;
        v101.m42 = v65;
        v101.m43 = v64;
        v101.m44 = v63;
        CATransform3DGetAffineTransform(&m, &v101);
        *(_OWORD *)&v101.m11 = v96;
        *(_OWORD *)&v101.m13 = v92;
        v101.m21 = tx;
        v101.m22 = ty;
        sub_100079C64((__int128 *)&v101, &m, (uint64_t)&v99, a3);
        m = v99;
        CATransform3DMakeAffineTransform(&v101, &m);
        v93 = *(_OWORD *)&v101.m13;
        v97 = *(_OWORD *)&v101.m11;
        v88 = *(_OWORD *)&v101.m23;
        v90 = *(_OWORD *)&v101.m21;
        v84 = *(_OWORD *)&v101.m33;
        v86 = *(_OWORD *)&v101.m31;
        v82 = *(_OWORD *)&v101.m41;
        m43 = v101.m43;
        m44 = v101.m44;
        *(_QWORD *)(a2 + 24) = v31;
        v40 = swift_allocObject(&unk_1012875D0, 144, 7);
        *(_QWORD *)a2 = v40;
        *(_OWORD *)(v40 + 16) = v97;
        *(_OWORD *)(v40 + 32) = v93;
        *(_OWORD *)(v40 + 48) = v90;
        *(_OWORD *)(v40 + 64) = v88;
        *(_OWORD *)(v40 + 80) = v86;
        *(_OWORD *)(v40 + 96) = v84;
        *(_OWORD *)(v40 + 112) = v82;
        *(CGFloat *)(v40 + 128) = m43;
        *(CGFloat *)(v40 + 136) = m44;
        return;
      }
      goto LABEL_42;
    }
    v41 = v115;
    goto LABEL_41;
  }
LABEL_42:
  sub_1004F370C(v3, (uint64_t)&v102);
  if (!*((_QWORD *)&v103 + 1))
    goto LABEL_47;
  type metadata accessor for CGAffineTransform(0);
  v43 = v42;
  if ((swift_dynamicCast(&v117, &v102, (char *)&type metadata for Any + 8, v42, 6) & 1) == 0)
    goto LABEL_48;
  v44 = v117;
  v45 = v118;
  v46 = v119;
  sub_1004F370C(a1, (uint64_t)&v102);
  if (*((_QWORD *)&v103 + 1))
  {
    if ((swift_dynamicCast(&v117, &v102, (char *)&type metadata for Any + 8, v43, 6) & 1) != 0)
    {
      v47 = v117;
      v48 = v118;
      v49 = v119;
      v117 = v44;
      v118 = v45;
      v119 = v46;
      v102 = v47;
      v103 = v48;
      v104 = v49;
      sub_100079C64(&v117, &v102, (uint64_t)&v101, a3);
      v94 = *(_OWORD *)&v101.m13;
      v98 = *(_OWORD *)&v101.m11;
      m21 = v101.m21;
      m22 = v101.m22;
      *(_QWORD *)(a2 + 24) = v43;
      v52 = swift_allocObject(&unk_1012875A8, 64, 7);
      *(_QWORD *)a2 = v52;
      *(_OWORD *)(v52 + 16) = v98;
      *(_OWORD *)(v52 + 32) = v94;
      *(CGFloat *)(v52 + 48) = m21;
      *(CGFloat *)(v52 + 56) = m22;
      return;
    }
  }
  else
  {
LABEL_47:
    sub_1004D28EC((uint64_t)&v102);
  }
LABEL_48:
  v53 = sub_1004B804C(&qword_1013E0230);
  v54 = (const void *)Optional._bridgeToObjectiveC()(v53);
  v55 = CFGetTypeID(v54);
  swift_unknownObjectRelease(v54);
  if (v55 == CGColorGetTypeID())
  {
    sub_1004F370C(v3, (uint64_t)&v102);
    if (*((_QWORD *)&v103 + 1))
    {
      sub_10050CB14(&v102, &v117);
      type metadata accessor for CGColor(0);
      v57 = v56;
      swift_dynamicCast(&v101, &v117, (char *)&type metadata for Any + 8, v56, 7);
      m11 = v101.m11;
      sub_1004F370C(a1, (uint64_t)&v102);
      if (*((_QWORD *)&v103 + 1))
      {
        sub_10050CB14(&v102, &v117);
        swift_dynamicCast(&v101, &v117, (char *)&type metadata for Any + 8, v57, 7);
        v59 = v101.m11;
        sub_1008FA40C(*(void **)&v101.m11, a3);
        v61 = v60;
        *(_QWORD *)(a2 + 24) = v57;

        *(_QWORD *)a2 = v61;
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    if (lroundf(a3) < 1)
      v62 = v3;
    else
      v62 = a1;
    sub_1008FA3C0(v62, a2);
  }
}

uint64_t sub_1008FA3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    *(_QWORD *)(a2 + 24) = v3;
    (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  }
  else
  {
    v4 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v4;
  }
  return a2;
}

void sub_1008FA40C(void *a1, float a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CGColorSpace *v10;
  CGColorSpace *v11;
  CGColorSpace *v12;
  CGColorSpace *v13;
  uint64_t v14;
  uint64_t v15;
  CGColorRef v16;
  id v17;
  CGColor *v18;
  CGColorRef color;

  ObjectType = swift_getObjectType(v2);
  v6 = CGColorRef.components.getter();
  if (!v6)
    goto LABEL_10;
  v7 = v6;
  v8 = CGColorRef.components.getter();
  if (!v8)
  {
    swift_bridgeObjectRelease(v7);
LABEL_10:
    if (lroundf(a2) <= 0)
    {
      v18 = color;
    }
    else
    {
      swift_dynamicCastUnknownClassUnconditional(a1, ObjectType, 0, 0, 0);
      v17 = a1;
    }
    return;
  }
  v9 = v8;
  v10 = CGColorGetColorSpace(color);
  v11 = CGColorGetColorSpace((CGColorRef)a1);
  if (lroundf(a2) <= 0)
    v12 = v10;
  else
    v12 = v11;
  v13 = v12;

  if (v13)
  {
    sub_1008F9798(v7, v9, a2);
    v15 = v14;
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v7);
    v16 = CGColorCreate(v13, (const CGFloat *)(v15 + 32));

    swift_bridgeObjectRelease(v15);
    if (v16)
    {
      swift_dynamicCastUnknownClassUnconditional(v16, ObjectType, 0, 0, 0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1008FA594()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1008FA5A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1008FA5B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

_QWORD *destroy for InterpolatableAny(_QWORD *a1)
{
  if (a1[3])
    return (_QWORD *)_s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return a1;
}

uint64_t initializeWithCopy for InterpolatableAny(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    *(_QWORD *)(a1 + 24) = v3;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for InterpolatableAny(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    return a1;
  }
  if (!v4)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_10071E968((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for InterpolatableAny(uint64_t a1, _OWORD *a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpolatableAny(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InterpolatableAny(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InterpolatableAny()
{
  return &type metadata for InterpolatableAny;
}

id sub_1008FA7E8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLApplicationCoordinator()), "init");
  qword_1013F9CF0 = (uint64_t)result;
  return result;
}

void sub_1008FA854()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "applicationWillEnterForeground", UIApplicationWillEnterForegroundNotification, 0);
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "applicationDidBecomeActive", UIApplicationDidBecomeActiveNotification, 0);
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "applicationDidEnterBackground", UIApplicationDidEnterBackgroundNotification, 0);
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "applicationWillTerminate", UIApplicationWillTerminateNotification, 0);

}

id sub_1008FAA14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLApplicationCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLApplicationCoordinator()
{
  return objc_opt_self(_TtC8Freeform25CRLApplicationCoordinator);
}

uint64_t sub_1008FAA68()
{
  id v0;
  NSString v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[24];
  uint64_t v19;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForInfoDictionaryKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(&v16, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_1004D28A4((uint64_t)&v16, (uint64_t)v18);
  if (v19)
  {
    if (swift_dynamicCast(&v14, v18, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      v4 = v14;
      v3 = v15;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1004D28EC((uint64_t)v18);
  }
  v3 = 0xE100000000000000;
  v4 = 63;
LABEL_9:
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v0, "objectForInfoDictionaryKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(&v16, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_1004D28A4((uint64_t)&v16, (uint64_t)v18);
  if (!v19)
  {
    sub_1004D28EC((uint64_t)v18);
    goto LABEL_16;
  }
  if (!swift_dynamicCast(&v14, v18, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_16:
    v7 = 0xE100000000000000;
    v8 = 63;
    goto LABEL_17;
  }
  v8 = v14;
  v7 = v15;
LABEL_17:
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v10 = swift_allocObject(v9, 152, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EF5550;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(v10 + 32) = v4;
  *(_QWORD *)(v10 + 40) = v3;
  *(_QWORD *)(v10 + 96) = &type metadata for String;
  *(_QWORD *)(v10 + 104) = v11;
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 72) = v8;
  *(_QWORD *)(v10 + 80) = v7;
  *(_QWORD *)(v10 + 136) = &type metadata for String;
  *(_QWORD *)(v10 + 144) = v11;
  *(_QWORD *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = 0xE000000000000000;
  v12 = String.init(format:_:)(0x2529402528204025, 0xE900000000000040, v10);

  return v12;
}

unint64_t sub_1008FACC4()
{
  unint64_t result;

  result = qword_1013F9D38;
  if (!qword_1013F9D38)
  {
    result = swift_getWitnessTable(&unk_100F16AB0, &type metadata for CRLRenameBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F9D38);
  }
  return result;
}

uint64_t sub_1008FAD08()
{
  return sub_1004CBA30(&qword_1013F9D40, &qword_1013EDD88, (uint64_t)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1008FAD34()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1008FAD64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  void (*v65)(char *, uint64_t, uint64_t);
  unsigned int v66;
  uint64_t v67;
  char *v68;
  unsigned int v69;
  void (*v70)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  void (*v73)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t *v83;
  _QWORD v84[2];
  _QWORD v85[7];

  v83 = a1;
  v1 = sub_1004B804C(&qword_1013E6B70);
  __chkstk_darwin(v1);
  v77 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for InputConnectionBehavior(0);
  v76 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v81 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v4);
  v75 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v80 = (char *)&v65 - v7;
  v8 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v8);
  v72 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v10);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  v74 = v23;
  __chkstk_darwin(v23);
  v79 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v78 = (char *)&v65 - v27;
  v71 = sub_1004B804C(&qword_1013E1120);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v30(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter title for board", 25, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6F74206472616F42, 0xEF656D616E657220);
  static Locale.current.getter(v31);
  v66 = v29;
  v32 = v13;
  v67 = v13;
  v30(v16, v29, v13);
  v33 = v30;
  v65 = v30;
  v68 = v12;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for boards", 32, 2);
  v73 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v73(v12, 0, 1, v23);
  v34 = type metadata accessor for CRLBoardEntity(0);
  v35 = v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v72, 1, 1, v34);
  v36 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v36);
  v33(v16, v29, v32);
  v37 = v79;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Prompt for selecting a board from the list", 42, 2);
  v38 = v80;
  IntentDialog.init(_:)(v37);
  v39 = type metadata accessor for IntentDialog(0);
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v70 = v40;
  v40(v38, 0, 1, v39);
  v41 = v75;
  v40(v75, 1, 1, v39);
  v69 = enum case for InputConnectionBehavior.default(_:);
  v76 = *(_QWORD *)(v76 + 104);
  v42 = v81;
  ((void (*)(char *))v76)(v81);
  v43 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v44 = v68;
  v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v78, v68, v35, v38, v41, v42, v43);
  *v83 = v45;
  v75 = (char *)sub_1004B804C(&qword_1013F9D70);
  v46 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v46);
  v47 = v66;
  v48 = v67;
  v49 = v65;
  v65(v16, v66, v67);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter title for new board name", 34, 2);
  v50 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100FDF310);
  static Locale.current.getter(v50);
  v51 = v48;
  v49(v16, v47, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for new board name", 40, 2);
  v52 = v44;
  v73(v44, 0, 1, v74);
  v53 = type metadata accessor for String.IntentInputOptions(0);
  v85[0] = 0;
  v85[1] = 0;
  v54 = v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v77, 1, 1, v53);
  v55 = String.LocalizationValue.init(stringLiteral:)(0x6D616E2074616857, 0xEA00000000003F65);
  static Locale.current.getter(v55);
  v49(v16, v47, v51);
  v56 = v79;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Prompt for providing a custom name for a board", 46, 2);
  v57 = v80;
  IntentDialog.init(_:)(v56);
  v58 = v57;
  v70(v57, 0, 1, v39);
  v59 = v81;
  ((void (*)(char *, _QWORD, uint64_t))v76)(v81, v69, v82);
  v60 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v78, v52, v85, v54, v58, v59);
  v61 = v83;
  v83[1] = v60;
  sub_1004B804C(&qword_1013E1128);
  v84[0] = 0xD00000000000001FLL;
  v84[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v84, &type metadata for String, &protocol witness table for String);
  v62 = type metadata accessor for AppDependencyManager(0);
  v63 = static AppDependencyManager.shared.getter(v62);
  result = AppDependency.__allocating_init(key:manager:)(v85, v63);
  v61[2] = result;
  v61[6] = (uint64_t)&type metadata for CRLRenameBoardIntentPerformer;
  v61[7] = (uint64_t)&off_10127B370;
  return result;
}

uint64_t sub_1008FB5B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[36] = a1;
  v2[37] = v1;
  v3 = type metadata accessor for LocalizedStringResource(0);
  v2[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  v2[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E0270);
  v2[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardEntity(0);
  v2[41] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[42] = swift_task_alloc(v7);
  v2[43] = swift_task_alloc(v7);
  v8 = type metadata accessor for Logger(0);
  v2[44] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[45] = v9;
  v2[46] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1008FB6AC, 0, 0);
}

uint64_t sub_1008FB6AC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = (_QWORD *)v0[43];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 19, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  IntentParameter.wrappedValue.getter(v1);
  v2 = IntentParameter.wrappedValue.getter(v0 + 27);
  v3 = v0[28];
  v0[47] = v0[27];
  v0[48] = v3;
  AppDependency.wrappedValue.getter(v2);
  v0[13] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[14] = &off_10129B490;
  v0[49] = *sub_1004BB5A4(v0 + 10, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
  v4 = type metadata accessor for MainActor(0);
  v0[50] = v4;
  v0[51] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008FB7E0, v5, v6);
}

uint64_t sub_1008FB7E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v1 = v0[48];
  v2 = v0[49];
  v3 = v0[47];
  v4 = v0[40];
  swift_release(v0[51]);
  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = v5;
  v0[52] = sub_100632E3C(v3, v1, 0, v4, (uint64_t)v7);
  v0[53] = v8;
  sub_1004CB800(v0[40], &qword_1013E0270);

  return swift_task_switch(sub_1008FB8D0, 0, 0);
}

uint64_t sub_1008FB8D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[43];
  v2 = v0[41];
  v3 = sub_1004BB5A4(v0 + 10, v0[13]);
  v4 = v1 + *(int *)(v2 + 40);
  v0[54] = static MainActor.shared.getter(v3);
  v5 = (_QWORD *)swift_task_alloc(dword_10140E174);
  v0[55] = v5;
  *v5 = v0;
  v5[1] = sub_1008FB958;
  return sub_100CA5AE8(v4, v0[52], v0[53], 0);
}

uint64_t sub_1008FB958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 440);
  *(_QWORD *)(*v3 + 448) = v2;
  swift_task_dealloc(v6);
  v7 = *(_QWORD *)(v5 + 400);
  if (v2)
  {
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    v10 = v9;
    v11 = sub_1008FBBCC;
  }
  else
  {
    *(_QWORD *)(v5 + 456) = a2;
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    v10 = v12;
    v11 = sub_1008FBA00;
  }
  return swift_task_switch(v11, v8, v10);
}

uint64_t sub_1008FBA00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 432));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008FBA48, 0, 0);
}

uint64_t sub_1008FBA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(uint64_t, _QWORD);
  __n128 v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 416);
  v1 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 368);
  v14 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD **)(v0 + 336);
  v15 = *(_QWORD *)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 328);
  sub_1005761B8(v4);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 80));
  v6 = (void (*)(uint64_t, _QWORD))IntentParameter.wrappedValue.modify(v0 + 120);
  *(_QWORD *)(v0 + 200) = v2;
  *(_QWORD *)(v0 + 208) = v1;
  _IntentUpdatableEntityProperty.wrappedValue.setter(v0 + 200, v7);
  v6(v0 + 120, 0);
  v8 = IntentParameter.wrappedValue.getter(v5);
  v9 = IntentParameter.projectedValue.getter(v8);
  *(_QWORD *)(v0 + 280) = v9;
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v11 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v5, v0 + 280, v13, &type metadata for CRLOpenBoardIntent, v10, v11);
  swift_release(v9);
  sub_1005761B8((uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v15);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008FBBCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 432));
  return swift_task_switch(sub_1008FBC08, 0, 0);
}

uint64_t sub_1008FBC08()
{
  uint64_t *v0;

  swift_bridgeObjectRelease();
  v0[58] = v0[56];
  sub_1005761B8(v0[43]);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008FBC60, 0, 0);
}

uint64_t sub_1008FBC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  NSObject *v10;
  __n128 v11;
  os_log_type_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 464);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 80));
  *(_QWORD *)(v0 + 264) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  v3 = swift_dynamicCast(v0 + 176, v0 + 264, v2, &type metadata for CRLBoardTitleValidator.Error, 0);
  v4 = *(_QWORD *)(v0 + 464);
  if (v3)
  {
    v5 = *(uint64_t **)(v0 + 296);
    swift_errorRelease(*(_QWORD *)(v0 + 464));
    v6 = *(_QWORD *)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_BYTE *)(v0 + 192);
    sub_1008FC8D8(v5, v0 + 16);
    sub_1005E5784(v6, v7, v8);
    v9 = sub_1005E5784(v6, v7, v8);
    v10 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.debug.getter(v11);
    if (os_log_type_enabled(v10, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v52 = (uint64_t *)swift_slowAlloc(8, -1);
      v53 = swift_slowAlloc(32, -1);
      v54 = v53;
      *(_DWORD *)v13 = 136315394;
      IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 232));
      *(_QWORD *)(v0 + 248) = sub_100BF0F1C(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 248, v0 + 256, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease();
      sub_1008FC90C((_QWORD *)(v0 + 16));
      *(_WORD *)(v13 + 12) = 2112;
      v14 = sub_100633B60();
      v15 = swift_allocError(&type metadata for CRLBoardTitleValidator.Error, v14, 0, 0);
      *(_QWORD *)v16 = v6;
      *(_QWORD *)(v16 + 8) = v7;
      *(_BYTE *)(v16 + 16) = v8;
      sub_1005E5784(v6, v7, v8);
      v17 = _swift_stdlib_bridgeErrorToNSError(v15);
      *(_QWORD *)(v0 + 256) = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 256, v0 + 264, v13 + 14, v13 + 22);
      *v52 = v17;
      sub_1005E579C(v6, v7, v8);
      sub_1005E579C(v6, v7, v8);
      _os_log_impl((void *)&_mh_execute_header, v10, v12, "Tried to rename board with invalid title: %s - %@", (uint8_t *)v13, 0x16u);
      v18 = sub_1004B804C(&qword_1013E53A8);
      swift_arrayDestroy(v52, 1, v18);
      swift_slowDealloc(v52, -1, -1);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      sub_1008FC90C((_QWORD *)(v0 + 16));
      sub_1005E579C(v6, v7, v8);
      v19 = sub_1005E579C(v6, v7, v8);
    }
    v30 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 368);
    v31 = *(_QWORD *)(v0 + 352);
    v33 = *(_QWORD *)(v0 + 304);
    v32 = *(_QWORD *)(v0 + 312);
    v34 = IntentParameter.projectedValue.getter(v19);
    sub_100631970(v6, v7, v8);
    sub_1005E579C(v6, v7, v8);
    IntentDialog.init(_:)(v33);
    v35 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v32, 0, 1, v35);
    v36 = type metadata accessor for AppIntentError(0);
    v37 = sub_1004B7878(&qword_1013E3458, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v36, v37, 0, 0);
    IntentParameter.needsValueError(_:)(v32);
    swift_release(v34);
    sub_1004CB800(v32, &qword_1013E1110);
    swift_willThrow(v38);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    swift_errorRelease(*(_QWORD *)(v0 + 264));
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 264));
    swift_errorRetain(v4);
    v20 = swift_errorRetain(v4);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 464);
    if (v23)
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v25 = 138412290;
      swift_errorRetain(v24);
      v27 = _swift_stdlib_bridgeErrorToNSError(v24);
      *(_QWORD *)(v0 + 272) = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 272, v0 + 280, v25 + 4, v25 + 12);
      *v26 = v27;
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Error renaming the board: %@", v25, 0xCu);
      v28 = sub_1004B804C(&qword_1013E53A8);
      swift_arrayDestroy(v26, 1, v28);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_errorRelease(v24);
      swift_errorRelease(v24);
    }
    v39 = *(_QWORD *)(v0 + 464);
    v41 = *(_QWORD *)(v0 + 360);
    v40 = *(_QWORD *)(v0 + 368);
    v42 = *(_QWORD *)(v0 + 352);
    v43 = type metadata accessor for _PrebuiltAppIntentError(0);
    v44 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
    swift_allocError(v43, v44, 0, 0);
    v45.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
    swift_willThrow(v45);
    swift_errorRelease(v39);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
  }
  v47 = *(_QWORD *)(v0 + 336);
  v46 = *(_QWORD *)(v0 + 344);
  v49 = *(_QWORD *)(v0 + 312);
  v48 = *(_QWORD *)(v0 + 320);
  v50 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008FC230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147FEC0);
  sub_1004F2A1C(v10, (uint64_t)qword_10147FEC0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x4220656D616E6552, 0xEC0000006472616FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_1008FC3C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013F9D80);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013F9D88);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1008FACC4();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 2, &type metadata for CRLRenameBoardIntent, v6);
  v7._countAndFlagsBits = 0x20656D616E6552;
  v7._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F16BA8);
  v9 = sub_1004B804C(&qword_1013F9D90);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(byte_100F16BD0);
  v12 = sub_1004B804C(&qword_1013F9D98);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLRenameBoardIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLRenameBoardIntent, v6);
}

uint64_t sub_1008FC584()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100F16BF8);
  qword_10147FED8 = result;
  return result;
}

void (*sub_1008FC5A8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1008FC5F0;
}

_QWORD *sub_1008FC5F4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  _QWORD v4[2];

  result = IntentParameter.wrappedValue.getter(v4);
  v3 = v4[1];
  *a1 = v4[0];
  a1[1] = v3;
  return result;
}

uint64_t sub_1008FC62C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD v3[2];

  v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  return IntentParameter.wrappedValue.setter(v3);
}

void (*sub_1008FC660(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1008FC5F0;
}

double sub_1008FC6A8()
{
  double result;

  if (qword_1013DD4C0 != -1)
    swift_once(&qword_1013DD4C0, sub_1008FC584);
  *(_QWORD *)&result = swift_retain(qword_10147FED8).n128_u64[0];
  return result;
}

unint64_t sub_1008FC6EC()
{
  unint64_t result;

  result = qword_1013F9D48;
  if (!qword_1013F9D48)
  {
    result = swift_getWitnessTable(&unk_100F16B40, &type metadata for CRLRenameBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F9D48);
  }
  return result;
}

unint64_t sub_1008FC734()
{
  unint64_t result;

  result = qword_1013F9D50;
  if (!qword_1013F9D50)
  {
    result = swift_getWitnessTable(&unk_100F16B68, &type metadata for CRLRenameBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F9D50);
  }
  return result;
}

uint64_t sub_1008FC778(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10112B2C0, 1) + 8);
}

uint64_t sub_1008FC79C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112B298, 1);
}

uint64_t sub_1008FC7AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DD4B8 != -1)
    swift_once(&qword_1013DD4B8, sub_1008FC230);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147FEC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1008FC820(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013F9D7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_1008FB5B0(a1);
}

uint64_t sub_1008FC874(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008FACC4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLRenameBoardIntent()
{
  return &type metadata for CRLRenameBoardIntent;
}

uint64_t sub_1008FC8AC()
{
  return sub_1004CBA30(&qword_1013F9D60, &qword_1013F9D68, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1008FC8D8(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for CRLRenameBoardIntent(a2, a1);
  return a2;
}

_QWORD *sub_1008FC90C(_QWORD *a1)
{
  destroy for CRLRenameBoardIntent(a1);
  return a1;
}

uint64_t sub_1008FC938@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1008FC960@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1008FC988@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

id sub_1008FC994()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  float v4;
  float v5;
  float v6;
  float v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  _BYTE v15[40];
  _BYTE v16[40];

  v1 = sub_1004B804C((uint64_t *)&unk_1013FF9C0);
  inited = swift_initStackObject(v1, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = 0;
  v3 = swift_initStackObject(v1, v15);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v3 + 32) = 0;
  objc_msgSend(v0, "getControlPointAtIndex:values:", 0, inited + 32);
  objc_msgSend(v0, "getControlPointAtIndex:values:", 1, v3 + 32);
  v4 = 1.0 - *(float *)(v3 + 32);
  v5 = 1.0 - *(float *)(v3 + 36);
  v6 = 1.0 - *(float *)(inited + 32);
  v7 = 1.0 - *(float *)(inited + 36);
  v8 = objc_allocWithZone((Class)CAMediaTimingFunction);
  *(float *)&v9 = v4;
  *(float *)&v10 = v5;
  *(float *)&v11 = v6;
  *(float *)&v12 = v7;
  v13 = objc_msgSend(v8, "initWithControlPoints::::", v9, v10, v11, v12);
  swift_bridgeObjectRelease(inited);
  swift_bridgeObjectRelease(v3);
  return v13;
}

CGFloat sub_1008FCABC(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  CGFloat result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  CATransform3D v19;
  CATransform3D b;
  CATransform3D a;

  v3 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v3;
  v4 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v4;
  v5 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v5;
  v6 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v6;
  v7 = a2[1];
  *(_OWORD *)&b.m11 = *a2;
  *(_OWORD *)&b.m13 = v7;
  v8 = a2[3];
  *(_OWORD *)&b.m21 = a2[2];
  *(_OWORD *)&b.m23 = v8;
  v9 = a2[5];
  *(_OWORD *)&b.m31 = a2[4];
  *(_OWORD *)&b.m33 = v9;
  v10 = a2[7];
  *(_OWORD *)&b.m41 = a2[6];
  *(_OWORD *)&b.m43 = v10;
  CATransform3DConcat(&v19, &a, &b);
  result = v19.m11;
  v12 = *(_OWORD *)&v19.m13;
  v13 = *(_OWORD *)&v19.m21;
  v14 = *(_OWORD *)&v19.m23;
  v15 = *(_OWORD *)&v19.m31;
  v16 = *(_OWORD *)&v19.m33;
  v17 = *(_OWORD *)&v19.m41;
  v18 = *(_OWORD *)&v19.m43;
  *a1 = *(_OWORD *)&v19.m11;
  a1[1] = v12;
  a1[2] = v13;
  a1[3] = v14;
  a1[4] = v15;
  a1[5] = v16;
  a1[6] = v17;
  a1[7] = v18;
  return result;
}

__n128 sub_1008FCB50@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  id v10;
  const CATransform3D *v11;
  __n128 result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[8];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __n128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v6 = *(_OWORD *)&CATransform3DIdentity.m33;
  v20[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v20[5] = v6;
  v7 = *(_OWORD *)&CATransform3DIdentity.m43;
  v20[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v20[7] = v7;
  v8 = *(_OWORD *)&CATransform3DIdentity.m13;
  v20[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v20[1] = v8;
  v9 = *(_OWORD *)&CATransform3DIdentity.m23;
  v20[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v20[3] = v9;
  v10 = objc_msgSend(a1, "ancestorSharedWithLayer:", a2);

  if (v10)
  {
    v11 = (const CATransform3D *)v20;
    CALayerMapGeometry(a1, a2, sub_1008FCABC, sub_1008FCABC, v20);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"transform(fromLayer:toLayer:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationMath.swift", 107, 2, 135, "layerForApplying must be related to repLayer to add insertion animation. Falling back to using the identity transform; animation may appear incorrect.",
      150,
      2u,
      (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"transform(fromLayer:toLayer:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationMath.swift", 107, 2u, 135, (uint64_t)"layerForApplying must be related to repLayer to add insertion animation. Falling back to using the identity transform; animation may appear incorrect.",
      150,
      2u);
    v11 = &CATransform3DIdentity;
  }
  result = *(__n128 *)&v11->m31;
  v13 = *(_OWORD *)&v11->m33;
  v24 = result;
  v25 = v13;
  v15 = *(_OWORD *)&v11->m43;
  v26 = *(_OWORD *)&v11->m41;
  v14 = v26;
  v27 = v15;
  v17 = *(_OWORD *)&v11->m13;
  v21 = *(_OWORD *)&v11->m11;
  v16 = v21;
  v22 = v17;
  v19 = *(_OWORD *)&v11->m23;
  v23 = *(_OWORD *)&v11->m21;
  v18 = v23;
  *(__n128 *)(a3 + 64) = result;
  *(_OWORD *)(a3 + 80) = v13;
  *(_OWORD *)(a3 + 96) = v14;
  *(_OWORD *)(a3 + 112) = v15;
  *(_OWORD *)a3 = v16;
  *(_OWORD *)(a3 + 16) = v17;
  *(_OWORD *)(a3 + 32) = v18;
  *(_OWORD *)(a3 + 48) = v19;
  return result;
}

__n128 sub_1008FCCF0@<Q0>(double *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  CGFloat m44;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  __n128 result;
  CGFloat m24;
  CGFloat m23;
  CGFloat m22;
  CGFloat m21;
  CGFloat m14;
  CGFloat m13;
  CGFloat m12;
  CGFloat m11;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v63;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  __int128 v80;
  __int128 v81;
  CGFloat v82;
  __int128 v83;
  __int128 v84;
  CGFloat v85;
  __int128 v86;
  __int128 v87;
  CGFloat v88;
  __int128 v89;
  __int128 v90;
  CGFloat v91;
  __int128 v92;
  __int128 v93;
  CGFloat v94;
  __int128 v95;
  __int128 v96;
  CGFloat v97;
  __int128 v98;
  __int128 v99;
  CGFloat v100;
  CGFloat v101;
  __n128 v102;
  CGFloat m43;
  CGFloat v104;
  __int128 v105;
  CGFloat m42;
  CGFloat v107;
  __int128 v108;
  CGFloat m41;
  CGFloat v110;
  __int128 v111;
  CGFloat m34;
  CGFloat v113;
  __int128 v114;
  CGFloat m33;
  CGFloat v116;
  __int128 v117;
  CGFloat m32;
  CGFloat v119;
  __int128 v120;
  CGFloat m31;
  CGFloat v122;
  __int128 v123;
  CATransform3D v124;
  CATransform3D b;
  CATransform3D a;
  CATransform3D v127;

  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v15 = a1[4];
  v16 = a1[5];
  v76 = a1[7];
  v79 = a1[6];
  v72 = a1[9];
  v73 = a1[8];
  v70 = a1[11];
  v71 = a1[10];
  v68 = a1[13];
  v69 = a1[12];
  v66 = a1[15];
  v67 = a1[14];
  v17 = a2;
  if (!a2)
    v17 = a3;
  v18 = a2;
  objc_msgSend(a3, "anchorPoint");
  v20 = v19;
  v22 = v21;
  objc_msgSend(a3, "bounds");
  v24 = sub_100060FCC(v20, v22, v23);
  CATransform3DMakeTranslation(&v127, v24, v25, 1.0);
  v97 = v11;
  v94 = v12;
  v91 = v13;
  v88 = v14;
  v85 = v15;
  v82 = v16;
  if ((a4 & 1) != 0)
  {
    m12 = CATransform3DIdentity.m12;
    m11 = CATransform3DIdentity.m11;
    m14 = CATransform3DIdentity.m14;
    m13 = CATransform3DIdentity.m13;
    m22 = CATransform3DIdentity.m22;
    m21 = CATransform3DIdentity.m21;
    m24 = CATransform3DIdentity.m24;
    m23 = CATransform3DIdentity.m23;
    m31 = CATransform3DIdentity.m31;
    m32 = CATransform3DIdentity.m32;
    m33 = CATransform3DIdentity.m33;
    m34 = CATransform3DIdentity.m34;
    m41 = CATransform3DIdentity.m41;
    m42 = CATransform3DIdentity.m42;
    m43 = CATransform3DIdentity.m43;
    m44 = CATransform3DIdentity.m44;
  }
  else
  {
    v27 = v127.m11;
    v28 = v127.m12;
    v29 = v127.m13;
    v30 = v127.m14;
    v31 = v127.m21;
    v32 = v127.m22;
    v33 = v127.m23;
    v34 = v127.m24;
    v122 = v127.m31;
    v119 = v127.m32;
    v116 = v127.m33;
    v113 = v127.m34;
    v110 = v127.m41;
    v107 = v127.m42;
    v104 = v127.m43;
    v100 = v127.m44;
    sub_1008FCB50(a3, (uint64_t)v17, (uint64_t)&v127);
    a.m11 = v27;
    a.m12 = v28;
    a.m13 = v29;
    a.m14 = v30;
    a.m21 = v31;
    a.m22 = v32;
    a.m23 = v33;
    a.m24 = v34;
    a.m31 = v122;
    a.m32 = v119;
    a.m33 = v116;
    a.m34 = v113;
    a.m41 = v110;
    a.m42 = v107;
    a.m43 = v104;
    a.m44 = v100;
    b = v127;
    CATransform3DConcat(&v124, &a, &b);
    m12 = v124.m12;
    m11 = v124.m11;
    m14 = v124.m14;
    m13 = v124.m13;
    m22 = v124.m22;
    m21 = v124.m21;
    m24 = v124.m24;
    m23 = v124.m23;
    m31 = v124.m31;
    m32 = v124.m32;
    m33 = v124.m33;
    m34 = v124.m34;
    m41 = v124.m41;
    m42 = v124.m42;
    m43 = v124.m43;
    m44 = v124.m44;
  }
  v101 = m44;
  objc_msgSend(v17, "bounds");
  objc_msgSend(v17, "bounds");
  if (v35 > 0.001)
    v36 = v35;
  else
    v36 = 0.001;
  objc_msgSend(v17, "bounds");
  objc_msgSend(v17, "bounds");
  objc_msgSend(v17, "bounds");
  objc_msgSend(v17, "bounds");
  if (v37 > 0.001)
    v38 = v37;
  else
    v38 = 0.001;
  CATransform3DMakeTranslation(&a, -(v36 * a6), -(v38 * a7), 1.0);
  v39 = a.m11;
  v40 = a.m12;
  v41 = a.m13;
  v42 = a.m14;
  v43 = a.m21;
  v44 = a.m22;
  v45 = a.m23;
  v46 = a.m24;
  v61 = a.m32;
  v63 = a.m31;
  v59 = a.m34;
  v60 = a.m33;
  v57 = a.m42;
  v58 = a.m41;
  v56 = a.m43;
  v65 = a.m44;
  b.m11 = v97;
  b.m12 = v94;
  b.m13 = v91;
  b.m14 = v88;
  b.m21 = v85;
  b.m22 = v82;
  b.m23 = v79;
  b.m24 = v76;
  b.m31 = v73;
  b.m32 = v72;
  b.m33 = v71;
  b.m34 = v70;
  b.m41 = v69;
  b.m42 = v68;
  b.m43 = v67;
  b.m44 = v66;
  CATransform3DConcat(&v124, &a, &b);
  v95 = *(_OWORD *)&v124.m13;
  v98 = *(_OWORD *)&v124.m11;
  v89 = *(_OWORD *)&v124.m23;
  v92 = *(_OWORD *)&v124.m21;
  v83 = *(_OWORD *)&v124.m33;
  v86 = *(_OWORD *)&v124.m31;
  v80 = *(_OWORD *)&v124.m41;
  v74 = v124.m44;
  v77 = v124.m43;
  a.m11 = v39;
  a.m12 = v40;
  a.m13 = v41;
  a.m14 = v42;
  a.m21 = v43;
  a.m22 = v44;
  a.m23 = v45;
  a.m24 = v46;
  a.m31 = v63;
  a.m32 = v61;
  a.m33 = v60;
  a.m34 = v59;
  a.m41 = v58;
  a.m42 = v57;
  a.m43 = v56;
  a.m44 = v65;
  CATransform3DInvert(&b, &a);
  *(_OWORD *)&a.m11 = v98;
  *(_OWORD *)&a.m13 = v95;
  *(_OWORD *)&a.m21 = v92;
  *(_OWORD *)&a.m23 = v89;
  *(_OWORD *)&a.m31 = v86;
  *(_OWORD *)&a.m33 = v83;
  *(_OWORD *)&a.m41 = v80;
  a.m43 = v77;
  a.m44 = v74;
  CATransform3DConcat(&v124, &a, &b);
  a.m11 = m11;
  a.m12 = m12;
  a.m13 = m13;
  a.m14 = m14;
  a.m21 = m21;
  a.m22 = m22;
  a.m23 = m23;
  a.m24 = m24;
  a.m31 = m31;
  a.m32 = m32;
  a.m33 = m33;
  a.m34 = m34;
  a.m41 = m41;
  a.m42 = m42;
  a.m43 = m43;
  a.m44 = v101;
  b = v124;
  CATransform3DConcat(&v124, &a, &b);
  v99 = *(_OWORD *)&v124.m11;
  v96 = *(_OWORD *)&v124.m13;
  v93 = *(_OWORD *)&v124.m21;
  v90 = *(_OWORD *)&v124.m23;
  v87 = *(_OWORD *)&v124.m31;
  v84 = *(_OWORD *)&v124.m33;
  v81 = *(_OWORD *)&v124.m41;
  v78 = v124.m43;
  v75 = v124.m44;
  a.m11 = m11;
  a.m12 = m12;
  a.m13 = m13;
  a.m14 = m14;
  a.m21 = m21;
  a.m22 = m22;
  a.m23 = m23;
  a.m24 = m24;
  a.m31 = m31;
  a.m32 = m32;
  a.m33 = m33;
  a.m34 = m34;
  a.m41 = m41;
  a.m42 = m42;
  a.m43 = m43;
  a.m44 = v101;
  CATransform3DInvert(&b, &a);
  *(_OWORD *)&a.m11 = v99;
  *(_OWORD *)&a.m13 = v96;
  *(_OWORD *)&a.m21 = v93;
  *(_OWORD *)&a.m23 = v90;
  *(_OWORD *)&a.m31 = v87;
  *(_OWORD *)&a.m33 = v84;
  *(_OWORD *)&a.m41 = v81;
  a.m43 = v78;
  a.m44 = v75;
  CATransform3DConcat(&v124, &a, &b);
  a = v124;
  CATransform3DGetAffineTransform((CGAffineTransform *)&b, &a);
  CATransform3DMakeAffineTransform(&a, (CGAffineTransform *)&b);
  v120 = *(_OWORD *)&a.m13;
  v123 = *(_OWORD *)&a.m11;
  v114 = *(_OWORD *)&a.m23;
  v117 = *(_OWORD *)&a.m21;
  v108 = *(_OWORD *)&a.m33;
  v111 = *(_OWORD *)&a.m31;
  v102 = *(__n128 *)&a.m43;
  v105 = *(_OWORD *)&a.m41;

  *a5 = v123;
  a5[1] = v120;
  a5[2] = v117;
  a5[3] = v114;
  a5[4] = v111;
  a5[5] = v108;
  result = v102;
  a5[6] = v105;
  a5[7] = v102;
  return result;
}

void sub_1008FD4FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v3)
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
}

id sub_1008FD588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDirtyBoard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandDirtyBoard()
{
  return objc_opt_self(_TtC8Freeform20CRLCommandDirtyBoard);
}

uint64_t sub_1008FD5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  _BYTE v18[24];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(v2 + 32, v18, 32, 0);
  v12 = *(_QWORD *)(v2 + 32);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_100842EFC(a1), (v14 & 1) != 0))
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v12 + 56) + *(_QWORD *)(v6 + 72) * v13, v5);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v15, 1, v5);
  swift_endAccess(v18);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v8, v5);
    return sub_1004C1F2C((uint64_t)v11);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v11, v5);
  }
}

uint64_t sub_1008FD76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t);
  _BYTE v26[24];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = __chkstk_darwin(v12);
  v15 = &v26[-v14 - 8];
  if (*(_BYTE *)(v2 + 16) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16))(a2, a1, v5, v13);
  v16 = v2 + 24;
  v17 = swift_beginAccess(v2 + 24, v26, 32, 0);
  v18 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v18 + 16) || (v19 = sub_100842EFC(a1), (v20 & 1) == 0))
  {
    v21 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    v21(v15, 1, 1, v5, v17);
    goto LABEL_8;
  }
  (*(void (**)(_BYTE *, unint64_t, uint64_t))(v6 + 16))(v15, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v6 + 72) * v19, v5);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v21)(v15, 0, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
  {
LABEL_8:
    sub_1004C1F2C((uint64_t)v15);
    v23 = swift_endAccess(v26);
    UUID.init()(v23);
    v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
    v24(v8, a1, v5);
    v24(v11, a2, v5);
    ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v21)(v11, 0, 1, v5);
    swift_beginAccess(v16, v26, 33, 0);
    sub_10083DD84((uint64_t)v11, (uint64_t)v8);
    v24(v8, a2, v5);
    v24(v11, a2, v5);
    ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v21)(v11, 0, 1, v5);
    sub_10083DD84((uint64_t)v11, (uint64_t)v8);
    return swift_endAccess(v26);
  }
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v15, v5);
  return swift_endAccess(v26);
}

uint64_t sub_1008FD9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  sub_1006D127C();
  v23 = a2;
  result = dispatch thunk of static Equatable.== infix(_:_:)(a1, a2);
  if ((result & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, v9);
    swift_beginAccess(v3 + 32, v24, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 32));
    v25 = *(_QWORD *)(v3 + 32);
    *(_QWORD *)(v3 + 32) = 0x8000000000000000;
    sub_1006D26D0((uint64_t)v12, a1, isUniquelyReferenced_nonNull_native, (uint64_t)v8);
    v18 = *(_QWORD *)(v3 + 32);
    *(_QWORD *)(v3 + 32) = v25;
    swift_bridgeObjectRelease(v18);
    swift_endAccess(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      return sub_1004C1F2C((uint64_t)v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v15, v23) & 1) != 0)
      {
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      }
      else
      {
        v19 = sub_100577444();
        swift_allocError(&type metadata for CRLSerializationError, v19, 0, 0);
        *v20 = 13;
        swift_willThrow(v21);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      }
    }
  }
  return result;
}

uint64_t sub_1008FDC10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLUUIDRemapHelper()
{
  return objc_opt_self(_TtC8Freeform18CRLUUIDRemapHelper);
}

void sub_1008FDC5C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FEE0 = v4;
  *(_QWORD *)algn_10147FEE8 = v6;
}

void sub_1008FDD2C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FEF0 = v4;
  *(_QWORD *)algn_10147FEF8 = v6;
}

NSString sub_1008FDDFC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FF00 = (uint64_t)result;
  return result;
}

void sub_1008FDE30()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FF08 = v4;
  unk_10147FF10 = v6;
}

void sub_1008FDF08()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FF18 = v4;
  unk_10147FF20 = v6;
}

double sub_1008FDFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t inited;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _BYTE v64[72];
  _QWORD aBlock[3];
  void *ObjectType;
  void (*v67)(uint64_t);
  uint64_t v68;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v63 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - v11;
  v13 = type metadata accessor for CRLBoardIdentifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v62 = (uint64_t)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v58 - v18;
  v20 = objc_msgSend(*(id *)(v0 + 16), "share", v17);
  v21 = objc_msgSend(v20, "recordID");

  v22 = objc_msgSend(v21, "zoneID");
  sub_100B38068((uint64_t)v12);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1004CB800((uint64_t)v12, &qword_1013E0270);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, aBlock, 0, 0);
    v23 = (id)static OS_os_log.shareState;
    v24 = static os_log_type_t.error.getter(v23);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v24, "Could not extract board identifier from share metadata.", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    v61 = v15;
    sub_1004B84E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    sub_1004E1B3C((uint64_t)v19, (uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    sub_100581550((uint64_t)v9, (uint64_t)v6);
    v26 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier, aBlock, 33, 0);
    sub_100582338((uint64_t)v6, v26, &qword_1013E0270);
    swift_endAccess(aBlock);
    v27 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v28 = (uint64_t)v19;
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    v29 = qword_101480E38;
    v30 = *(_QWORD *)(v1 + 24);
    v31 = swift_allocObject(&unk_1012878C0, 24, 7);
    swift_weakInit(v31 + 16, v1);
    v32 = (uint64_t)v19;
    v33 = v62;
    sub_1004E1B3C(v32, v62);
    v34 = *(unsigned __int8 *)(v14 + 80);
    v59 = ~v34;
    v35 = (v34 + 24) & ~v34;
    v60 = v34 | 7;
    v36 = swift_allocObject(&unk_1012878E8, v35 + v61, v34 | 7);
    *(_QWORD *)(v36 + 16) = v31;
    sub_1004B84E0(v33, v36 + v35, type metadata accessor for CRLBoardIdentifier);
    v67 = sub_10090034C;
    v68 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100568280;
    ObjectType = &unk_101287900;
    v37 = _Block_copy(aBlock);
    v38 = objc_msgSend(v27, "addObserverForName:object:queue:usingBlock:", v29, v30, 0, v37, swift_release(v68).n128_f64[0]);
    _Block_release(v37);

    ObjectType = (void *)swift_getObjectType(v38);
    aBlock[0] = v38;
    sub_1008FF878((uint64_t)aBlock);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, aBlock, 0, 0);
    v39 = (void *)static OS_os_log.shareState;
    v40 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v40, v64);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v42 = v39;
    v43 = sub_10067AD38();
    v45 = v44;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v43;
    *(_QWORD *)(inited + 40) = v45;
    v47 = static os_log_type_t.default.getter(v46);
    sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v47, "Started listening for a CRLBoardLibraryProvidingDidUpdateSnapshot notification that contains the identifier for the board we are trying to join: %@.", 148, 2, inited);
    swift_setDeallocating(inited);
    v48 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v48);

    v49 = type metadata accessor for TaskPriority(0);
    v50 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v63, 1, 1, v49);
    v51 = swift_allocObject(&unk_1012878C0, 24, 7);
    swift_weakInit(v51 + 16, v1);
    sub_1004E1B3C(v28, v33);
    type metadata accessor for MainActor(0);
    swift_retain(v51);
    v53 = static MainActor.shared.getter(v52);
    v54 = (v34 + 40) & v59;
    v55 = (_QWORD *)swift_allocObject(&unk_101287938, v54 + v61, v60);
    v55[2] = v53;
    v55[3] = &protocol witness table for MainActor;
    v55[4] = v51;
    sub_1004B84E0(v33, (uint64_t)v55 + v54, type metadata accessor for CRLBoardIdentifier);
    swift_release(v51);
    v56 = sub_100521B98(v50, (uint64_t)&unk_1013FA060, (uint64_t)v55);
    sub_1004B84A4(v28, type metadata accessor for CRLBoardIdentifier);
    v57 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask) = v56;
    *(_QWORD *)&result = swift_release(v57).n128_u64[0];
  }
  return result;
}

void sub_1008FE628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char v54[72];
  char v55[24];
  char v56[32];

  v53 = a1;
  v5 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - v13;
  v16 = type metadata accessor for Notification(0, v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v56, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v21 = Strong;
    v49 = v11;
    v50 = v6;
    v51 = v5;
    v48 = v8;
    v52 = v14;
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v55, 0, 0);
    v22 = (void *)static OS_os_log.shareState;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v54);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = v22;
    v26 = UUID.uuidString.getter(v25);
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    v30 = static os_log_type_t.default.getter(v29);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v30, "Snapshot updated after a share was accepted. Attempting to open accepted shared board with UUID: %@.", 100, 2, inited);
    swift_setDeallocating(inited);
    v31 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v31);

    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v53, v16);
    if (!sub_100BC1960((uint64_t)v19)
      || (v33 = sub_100622DD8(a3, v32),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v33 & 1) == 0))
    {
      v37 = (id)static OS_os_log.shareState;
      v39 = static os_log_type_t.default.getter(v38);
      sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v39, "Snapshot update didn't contain shared board identifier. Skipping.", 65, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_release(v21);

      return;
    }
    v34 = *(id *)(v21 + 24);
    v35 = (uint64_t)v52;
    sub_100C9F8F8(a3, (uint64_t)v52);
    v36 = v51;

    v40 = v50;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v35, 0, 1, v36);
    v41 = (uint64_t)v49;
    sub_1004CB7BC(v35, (uint64_t)v49, &qword_1013E4690);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v36) == 1)
    {
      sub_1004CB800(v41, &qword_1013E4690);
    }
    else
    {
      v42 = (uint64_t)v48;
      sub_1004B84E0(v41, (uint64_t)v48, type metadata accessor for CRLBoardViewModelMetadata);
      if ((*(_BYTE *)(v42 + *(int *)(v36 + 32)) & 1) == 0)
      {
        sub_1008FF9D4();
        v46 = *(_BYTE *)(v21 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen);
        *(_BYTE *)(v21 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) = 1;
        if ((v46 & 1) == 0)
          sub_1008FFAF4();
        swift_release(v21);
        sub_1004B84A4(v42, type metadata accessor for CRLBoardViewModelMetadata);
        goto LABEL_16;
      }
      sub_1004B84A4(v42, type metadata accessor for CRLBoardViewModelMetadata);
    }
    v43 = (id)static OS_os_log.shareState;
    v45 = static os_log_type_t.default.getter(v44);
    sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v45, "Snapshot update contained the board identifier but the board metadata says it's still just an invitation. Keep watching for snapshot updates.", 141, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release(v21);

LABEL_16:
    sub_1004CB800(v35, &qword_1013E4690);
  }
}

uint64_t sub_1008FEA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[17] = a4;
  v5[18] = a5;
  v6 = sub_1004B804C(&qword_1013E04F0);
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E01F0);
  v5[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v5[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[22] = v9;
  v5[23] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[24] = v10;
  v5[25] = v11;
  return swift_task_switch(sub_1008FEB6C, v10, v11);
}

uint64_t sub_1008FEB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 136) + 16;
  swift_beginAccess(v1, v0 + 88, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 208) = Strong;
  if (Strong)
  {
    v3 = Strong;
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v0 + 112, 0, 0);
    v4 = (void *)static OS_os_log.shareState;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v5, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v7 = *(void **)(v3 + 16);
    *(_QWORD *)(inited + 56) = sub_10090043C();
    *(_QWORD *)(inited + 64) = sub_100900478();
    *(_QWORD *)(inited + 32) = v7;
    v8 = v4;
    v9 = v7;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v11, "Accepting share with metadata: %@.", 34, 2, inited);
    swift_setDeallocating(inited);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v12);

    v13 = *(void **)(v3 + 24);
    *(_QWORD *)(v0 + 216) = v13;
    v14 = *(void **)(v3 + 16);
    *(_QWORD *)(v0 + 224) = v14;
    v15 = dword_10140E214;
    v13;
    v16 = v14;
    v17 = (_QWORD *)swift_task_alloc(v15);
    *(_QWORD *)(v0 + 232) = v17;
    *v17 = v0;
    v17[1] = sub_1008FED50;
    return sub_100CA3640((uint64_t)v16, *(_QWORD *)(v0 + 144));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
    v19 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1008FED50(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  void *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 232);
  *(_QWORD *)(v3 + 240) = a1;
  *(_QWORD *)(v3 + 248) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = *(_QWORD *)(v3 + 192);
    v6 = *(_QWORD *)(v3 + 200);
    v7 = sub_1008FF130;
  }
  else
  {
    v8 = *(void **)(v3 + 216);

    v5 = *(_QWORD *)(v3 + 192);
    v6 = *(_QWORD *)(v3 + 200);
    v7 = sub_1008FEDC8;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1008FEDC8()
{
  uint64_t v0;
  __n128 v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v1 = swift_release(*(_QWORD *)(v0 + 184));
  v2 = static Task<>.isCancelled.getter(v1);
  v3 = *(void **)(v0 + 240);
  if ((v2 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 208);
    goto LABEL_15;
  }
  sub_1004E1B3C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
  if (v3)
  {
    sub_1004B84A4(*(_QWORD *)(v0 + 168), type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 208) + 24)
                    + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    v16 = swift_task_alloc(32);
    *(_QWORD *)(v16 + 16) = v14;
    swift_bridgeObjectRetain(v15);
    sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1C0C, v16, v15);
    v18 = v17;
    swift_bridgeObjectRelease();
    swift_task_dealloc(v16);
    sub_1004B84A4(v14, type metadata accessor for CRLBoardIdentifier);

    if (v18)
    {
      v19 = *(_QWORD *)(v0 + 208);
      v20 = (id)static OS_os_log.shareState;
      v22 = static os_log_type_t.default.getter(v21);
      sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v22, "Found an existing board to open.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

      v23 = *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen);
      *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) = 1;
      if ((v23 & 1) == 0)
        sub_1008FFAF4();
      goto LABEL_13;
    }
  }
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 208) + 40);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v0 + 160);
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    v9 = swift_allocObject(&unk_101287848, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    swift_retain(v9);
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_101287988, 40, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v9;
    swift_release(v9);
    v13 = sub_100521BB8(v7, (uint64_t)&unk_1013FA080, (uint64_t)v12);
    swift_release(v13);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 128, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2u, 128, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + 208) + 32))
  {
    v24 = *(_QWORD *)(v0 + 152);
    v25 = sub_100B4AD90(*(_QWORD *)(v0 + 144));
    v26 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v24, 1, 1, v26);
    sub_10079865C(v25, 0, 0, v24, 33);

    sub_1004CB800(v24, &qword_1013E04F0);
  }
LABEL_13:
  v27 = *(_QWORD *)(v0 + 208);
  v28 = *(_BYTE *)(v27 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot);
  *(_BYTE *)(v27 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot) = 1;
  v3 = *(void **)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 208);
  if ((v28 & 1) == 0)
    sub_1008FFAF4();
LABEL_15:
  swift_release(v4);

  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008FF130()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 184));

  Strong = swift_unknownObjectWeakLoadStrong(v3 + 40);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 208);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v0 + 160);
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = swift_allocObject(&unk_101287848, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    swift_retain(v10);
    v11 = swift_errorRetain(v5);
    v12 = static MainActor.shared.getter(v11);
    v13 = (_QWORD *)swift_allocObject(&unk_101287960, 48, 7);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v10;
    v13[5] = v5;
    swift_release(v10);
    v14 = sub_100521B98(v8, (uint64_t)&unk_1013FA078, (uint64_t)v13);
    swift_release(v14);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 136, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2u, 136, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  swift_errorRelease(v5);
  swift_release(v6);
  v15 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1008FF318(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __int128 *v49;
  uint64_t v50;
  _BYTE v51[40];
  uint64_t v52;
  _BYTE v53[24];
  _QWORD v54[5];
  __int128 v55;
  uint64_t v56;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100900190(a1, (uint64_t)&v55);
  if (v56)
  {
    v48 = v5;
    v49 = a1;
    sub_1004DB728(&v55, (uint64_t)v54);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v53, 0, 0);
    v8 = (void *)static OS_os_log.shareState;
    v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v9, &v52);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    sub_1004E90B0((uint64_t)v54, (uint64_t)v51);
    v11 = v8;
    v12 = sub_1004B804C(&qword_1013FA048);
    v13 = String.init<A>(describing:)(v51, v12);
    v15 = v14;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v16 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v16;
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(inited + 40) = v15;
    v17 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier, v51, 0, 0);
    sub_1004CB7BC(v17, (uint64_t)v7, &qword_1013E0270);
    v18 = String.init<A>(describing:)(v7, v48);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v16;
    *(_QWORD *)(inited + 72) = v18;
    *(_QWORD *)(inited + 80) = v19;
    v21 = static os_log_type_t.default.getter(v20);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v21, "Timed out after %@ opening newly-joined board with identifier: %@.", 66, 2, inited);
    swift_setDeallocating(inited);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v22);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v54);
    a1 = v49;
  }
  else
  {
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v54, 0, 0);
    v23 = (void *)static OS_os_log.shareState;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v25 = swift_initStackObject(v24, &v50);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
    v26 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier, v51, 0, 0);
    sub_1004CB7BC(v26, (uint64_t)v7, &qword_1013E0270);
    v27 = v23;
    v28 = String.init<A>(describing:)(v7, v5);
    v30 = v29;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v30;
    v32 = static os_log_type_t.default.getter(v31);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v32, "Received a user-initiated request to cancel opening newly-joined board with identifier: %@.", 91, 2, v25);
    swift_setDeallocating(v25);
    v33 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 32, 1, v33);

  }
  sub_1008FF9D4();
  v34 = OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask;
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask);
  if (v35)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask));
    Task.cancel()();
    swift_release(v35);
    v36 = *(_QWORD *)(v1 + v34);
  }
  else
  {
    v36 = 0;
  }
  *(_QWORD *)(v1 + v34) = 0;
  swift_release(v36);
  sub_100900190(a1, (uint64_t)&v55);
  if (v56)
  {
    sub_1009001F0(&v55);
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 40);
    if (Strong)
    {
      v38 = Strong;
      v39 = type metadata accessor for TaskPriority(0);
      v40 = (uint64_t)v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v47, 1, 1, v39);
      v41 = swift_allocObject(&unk_101287848, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16);
      type metadata accessor for MainActor(0);
      swift_retain(v41);
      v43 = static MainActor.shared.getter(v42);
      v44 = (_QWORD *)swift_allocObject(&unk_101287898, 40, 7);
      v44[2] = v43;
      v44[3] = &protocol witness table for MainActor;
      v44[4] = v41;
      swift_release(v41);
      v45 = sub_100521B98(v40, (uint64_t)&unk_1013FA050, (uint64_t)v44);
      swift_release(v45);
      swift_unknownObjectRelease(v38);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"cancel(reason:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 181, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cancel(reason:)", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2u, 181, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

uint64_t sub_1008FF878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[24];
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v3 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken, v9, 0, 0);
  sub_1004CB7BC(v3, (uint64_t)&v10, &qword_1013E0230);
  if (v11)
  {
    sub_10050CB14(&v10, &v12);
    v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v5 = v13;
    v6 = sub_1004BB5A4(&v12, v13);
    v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    objc_msgSend(v4, "removeObserver:name:object:", v7, qword_101480E38, *(_QWORD *)(v1 + 24));

    swift_unknownObjectRelease(v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v12);
  }
  else
  {
    sub_1004CB800((uint64_t)&v10, &qword_1013E0230);
  }
  swift_beginAccess(v3, &v12, 33, 0);
  sub_100582338(a1, v3, &qword_1013E0230);
  return swift_endAccess(&v12);
}

uint64_t sub_1008FF9D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v1 = v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken, v7, 0, 0);
  sub_1004CB7BC(v1, (uint64_t)&v8, &qword_1013E0230);
  if (!v9)
    return sub_1004CB800((uint64_t)&v8, &qword_1013E0230);
  sub_10050CB14(&v8, &v10);
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = v11;
  v4 = sub_1004BB5A4(&v10, v11);
  v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
  if (qword_1013DDD68 != -1)
    swift_once(&qword_1013DDD68, sub_100BC0B9C);
  objc_msgSend(v2, "removeObserver:name:object:", v5, qword_101480E38, *(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(v5);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v10);
}

void sub_1008FFAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t inited;
  _QWORD *v18;
  Class isa;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _BYTE v32[104];
  _BYTE v33[32];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v31[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v4);
  v6 = (char *)&v31[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v31[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31[-1] - v12;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) == 1
    && *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot) == 1)
  {
    v14 = v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier, v33, 0, 0);
    sub_1004CB7BC(v14, (uint64_t)v6, &qword_1013E0270);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v6, &qword_1013E0270);
    }
    else
    {
      sub_1004B84E0((uint64_t)v6, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      v15 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DD4D8 != -1)
        swift_once(&qword_1013DD4D8, sub_1008FDDFC);
      v30 = qword_10147FF00;
      v16 = sub_1004B804C(&qword_1013E49B0);
      inited = swift_initStackObject(v16, v32);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v31[0] = 0xD000000000000033;
      v31[1] = 0x8000000100FDF5E0;
      AnyHashable.init<A>(_:)(v31, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(inited + 96) = v7;
      v18 = sub_10050D1B0((_QWORD *)(inited + 72));
      sub_1004E1B3C((uint64_t)v13, (uint64_t)v18);
      sub_1008D5828(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v15, "postNotificationName:object:userInfo:", v30, 0, isa, swift_bridgeObjectRelease().n128_f64[0]);

      Strong = swift_unknownObjectWeakLoadStrong(v0 + 40);
      if (Strong)
      {
        v21 = Strong;
        v22 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v3, 1, 1, v22);
        v23 = swift_allocObject(&unk_101287848, 24, 7);
        swift_unknownObjectWeakInit(v23 + 16);
        sub_1004E1B3C((uint64_t)v13, (uint64_t)v10);
        type metadata accessor for MainActor(0);
        swift_retain(v23);
        v25 = static MainActor.shared.getter(v24);
        v26 = *(unsigned __int8 *)(v8 + 80);
        v27 = (v26 + 40) & ~v26;
        v28 = (_QWORD *)swift_allocObject(&unk_101287870, v27 + v9, v26 | 7);
        v28[2] = v25;
        v28[3] = &protocol witness table for MainActor;
        v28[4] = v23;
        sub_1004B84E0((uint64_t)v10, (uint64_t)v28 + v27, type metadata accessor for CRLBoardIdentifier);
        swift_release(v23);
        v29 = sub_100618920((uint64_t)v3, (uint64_t)&unk_1013FA040, (uint64_t)v28);
        swift_unknownObjectRelease(v21);
        swift_release(v29);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"signalReadyToOpenBoardIfNeeded()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 236, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"signalReadyToOpenBoardIfNeeded()", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2u, 236, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    }
  }
}

uint64_t sub_1008FFF68()
{
  id *v0;

  sub_1004CBB0C((uint64_t)(v0 + 5));
  sub_1004CB800((uint64_t)v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier, &qword_1013E0270);
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask));
  sub_1004CB800((uint64_t)v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken, &qword_1013E0230);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1008FFFE8()
{
  return type metadata accessor for CRLAcceptCloudKitShareAttempt(0);
}

uint64_t type metadata accessor for CRLAcceptCloudKitShareAttempt(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F9EC8;
  if (!qword_1013F9EC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAcceptCloudKitShareAttempt);
  return result;
}

void sub_10090002C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\b";
  v4[3] = &unk_100F16D38;
  sub_10058087C(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = "\b";
    v4[6] = &unk_100F16D50;
    v4[7] = &unk_100F16D68;
    v4[8] = &unk_100F16D68;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

uint64_t sub_1009000D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009000FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA5DC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100916210(a1, v5, v6, v7, v8);
}

uint64_t sub_100900190(__int128 *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v3 = *((_QWORD *)a1 + 3);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *a1;
    v6 = a1[1];
    *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
  else
  {
    v4 = *((_QWORD *)a1 + 4);
    *(_QWORD *)(a2 + 24) = v3;
    *(_QWORD *)(a2 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a2);
  }
  return a2;
}

_QWORD *sub_1009001F0(_QWORD *a1)
{
  if (a1[3] >= 0xFFFFFFFFuLL)
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return a1;
}

uint64_t sub_10090022C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FA5EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100916040(a1, v4, v5, v6);
}

uint64_t sub_100900298()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009002BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

void sub_10090034C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  sub_1008FE628(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10090038C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10090039C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1009003A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA05C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1008FEA94(a1, v5, v6, v7, v8);
}

unint64_t sub_10090043C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FA068;
  if (!qword_1013FA068)
  {
    v1 = objc_opt_self(CKShareMetadata);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013FA068);
  }
  return result;
}

unint64_t sub_100900478()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1013FA070;
  if (!qword_1013FA070)
  {
    v1 = sub_10090043C();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013FA070);
  }
  return result;
}

uint64_t sub_1009004C0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_errorRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009004F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA5FC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_1009158D8(a1, v4, v5, v7, v6);
}

uint64_t sub_100900570(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FA5F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100915778(a1, v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for CRLAcceptCloudKitShareAttemptError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100900628 + 4 * byte_100F16CA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10090065C + 4 * asc_100F16CA0[v4]))();
}

uint64_t sub_10090065C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100900664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10090066CLL);
  return result;
}

uint64_t sub_100900678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100900680);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100900684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10090068C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLAcceptCloudKitShareAttemptError()
{
  return &type metadata for CRLAcceptCloudKitShareAttemptError;
}

_QWORD *destroy for CRLAcceptCloudKitShareAttempt.CancelReason(_QWORD *result)
{
  if (result[3] >= 0xFFFFFFFFuLL)
    return (_QWORD *)_s8Freeform26AnyCRLCommandChangeContextVwxx_0(result);
  return result;
}

uint64_t getEnumTagSinglePayload for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAcceptCloudKitShareAttempt.CancelReason()
{
  return &type metadata for CRLAcceptCloudKitShareAttempt.CancelReason;
}

unint64_t sub_10090078C()
{
  unint64_t result;

  result = qword_1013FA088[0];
  if (!qword_1013FA088[0])
  {
    result = swift_getWitnessTable(&unk_100F16E30, &type metadata for CRLAcceptCloudKitShareAttemptError);
    atomic_store(result, qword_1013FA088);
  }
  return result;
}

double destroy for CRLSyncSchedulerConfiguration(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

_QWORD *sub_1009007DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain(v4);
  return a1;
}

_QWORD *sub_100900810(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[2];
  v4 = a1[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t sub_100900850(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for CRLTimeoutTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLTimeoutTask);
}

uint64_t storeEnumTagSinglePayload for CRLTimeoutTaskError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1009008D4 + 4 * byte_100F16E60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1009008F4 + 4 * byte_100F16E65[v4]))();
}

_BYTE *sub_1009008D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1009008F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009008FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100900904(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10090090C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100900914(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLTimeoutTaskError()
{
  return &type metadata for CRLTimeoutTaskError;
}

unint64_t sub_100900934()
{
  unint64_t result;

  result = qword_1013FA110;
  if (!qword_1013FA110)
  {
    result = swift_getWitnessTable(&unk_100F16F04, &type metadata for CRLTimeoutTaskError);
    atomic_store(result, (unint64_t *)&qword_1013FA110);
  }
  return result;
}

id sub_100900978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  void *v30;
  uint64_t v31;
  char v32;
  char v33;
  const char *v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  char v40;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  _QWORD v46[6];
  void *v47;
  Swift::String v48;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    v5 = sub_1005A15B8(&qword_1013FA4E8, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v46, v3, v4, v5);
    v1 = v46[0];
    v43 = v46[1];
    v7 = v46[2];
    v8 = v46[3];
    v9 = v46[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v43 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v42 = (unint64_t)(v7 + 64) >> 6;
  v44 = v8;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v8 << 6);
    goto LABEL_32;
  }
  v21 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x100900FF4);
  }
  if (v21 >= v42)
  {
LABEL_50:
    v19 = 0;
    goto LABEL_52;
  }
  v22 = *(_QWORD *)(v43 + 8 * v21);
  ++v8;
  if (!v22)
  {
    v8 = v21 + 1;
    if (v21 + 1 >= v42)
      goto LABEL_51;
    v22 = *(_QWORD *)(v43 + 8 * v8);
    if (!v22)
    {
      v8 = v21 + 2;
      if (v21 + 2 >= v42)
        goto LABEL_51;
      v22 = *(_QWORD *)(v43 + 8 * v8);
      if (!v22)
      {
        v8 = v21 + 3;
        if (v21 + 3 >= v42)
          goto LABEL_51;
        v22 = *(_QWORD *)(v43 + 8 * v8);
        if (!v22)
        {
          v8 = v21 + 4;
          if (v21 + 4 < v42)
          {
            v22 = *(_QWORD *)(v43 + 8 * v8);
            if (!v22)
            {
              v23 = v44 + 6;
              do
              {
                if (v42 == v23)
                  goto LABEL_50;
                v22 = *(_QWORD *)(v43 + 8 * v23++);
              }
              while (!v22);
              v8 = v23 - 1;
            }
            goto LABEL_31;
          }
LABEL_51:
          v19 = 0;
          goto LABEL_52;
        }
      }
    }
  }
LABEL_31:
  v9 = (v22 - 1) & v22;
  v15 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_32:
  v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
  if (v19)
  {
    while (1)
    {
      v24 = v1;
      v25 = objc_msgSend(v19, "activityType", v20);
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      swift_bridgeObjectRetain(v28);
      v48._countAndFlagsBits = v26;
      v48._object = v28;
      v29 = sub_1008748FC(v48);
      if (v29 != 10)
      {
        v32 = v29;
        swift_bridgeObjectRelease();
        __asm { BR              X9 }
      }
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
      if (v26 == v31 && v28 == v30)
        break;
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v31, v30, 0);
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
        goto LABEL_39;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
      if (v26 == v38 && v28 == v37)
      {
        swift_bridgeObjectRelease_n(v28, 2);
        v1 = v24;
      }
      else
      {
        v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v38, v37, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v1 = v24;
        if ((v39 & 1) == 0)
        {
          v34 = "NSUserActivityTypeBrowsingWeb";
          goto LABEL_40;
        }
      }
      v36 = 0xD00000000000001DLL;
      v35 = 0x8000000100FAA390;
LABEL_46:
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v35, 0xD000000000000027, 0x8000000100FAA2A0, 0);
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
        goto LABEL_52;

      v44 = v8;
      if ((v1 & 0x8000000000000000) == 0)
        goto LABEL_11;
LABEL_13:
      v16 = __CocoaSet.Iterator.next()(v6);
      if (!v16)
        goto LABEL_50;
      v17 = v16;
      v45 = v16;
      v18 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
      swift_unknownObjectRetain(v17);
      swift_dynamicCast(&v47, &v45, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
      v19 = v47;
      *(_QWORD *)&v20 = swift_unknownObjectRelease(v17).n128_u64[0];
      if (!v19)
        goto LABEL_52;
    }
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    v1 = v24;
    v34 = "com.apple.freeform.newBoard";
LABEL_40:
    v35 = (unint64_t)v34 | 0x8000000000000000;
    v36 = 0xD00000000000001ALL;
    goto LABEL_46;
  }
LABEL_52:
  sub_1004D284C(v1);
  return v19;
}

id sub_10090101C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  void *v30;
  uint64_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  _QWORD v45[6];
  void *v46;
  Swift::String v47;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    v5 = sub_1005A15B8(&qword_1013FA4E8, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v45, v3, v4, v5);
    v1 = v45[0];
    v42 = v45[1];
    v7 = v45[2];
    v8 = v45[3];
    v9 = v45[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v42 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v41 = (unint64_t)(v7 + 64) >> 6;
  v43 = v8;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v8 << 6);
    goto LABEL_32;
  }
  v21 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x1009016B4);
  }
  if (v21 >= v41)
  {
LABEL_52:
    v19 = 0;
    goto LABEL_51;
  }
  v22 = *(_QWORD *)(v42 + 8 * v21);
  ++v8;
  if (!v22)
  {
    v8 = v21 + 1;
    if (v21 + 1 >= v41)
      goto LABEL_53;
    v22 = *(_QWORD *)(v42 + 8 * v8);
    if (!v22)
    {
      v8 = v21 + 2;
      if (v21 + 2 >= v41)
        goto LABEL_53;
      v22 = *(_QWORD *)(v42 + 8 * v8);
      if (!v22)
      {
        v8 = v21 + 3;
        if (v21 + 3 >= v41)
          goto LABEL_53;
        v22 = *(_QWORD *)(v42 + 8 * v8);
        if (!v22)
        {
          v8 = v21 + 4;
          if (v21 + 4 < v41)
          {
            v22 = *(_QWORD *)(v42 + 8 * v8);
            if (!v22)
            {
              v23 = v43 + 6;
              do
              {
                if (v41 == v23)
                  goto LABEL_52;
                v22 = *(_QWORD *)(v42 + 8 * v23++);
              }
              while (!v22);
              v8 = v23 - 1;
            }
            goto LABEL_31;
          }
LABEL_53:
          v19 = 0;
          goto LABEL_51;
        }
      }
    }
  }
LABEL_31:
  v9 = (v22 - 1) & v22;
  v15 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_32:
  v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
  if (!v19)
    goto LABEL_51;
  while (1)
  {
    v24 = v1;
    v25 = objc_msgSend(v19, "activityType", v20);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    swift_bridgeObjectRetain(v28);
    v47._countAndFlagsBits = v26;
    v47._object = v28;
    v29 = sub_1008748FC(v47);
    if (v29 != 10)
    {
      v35 = v29;
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
    if (v26 == v31 && v28 == v30)
      break;
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v31, v30, 0);
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_49;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
    if (v26 == v34 && v28 == v33)
    {
      swift_bridgeObjectRelease_n(v28, 2);
      v1 = v24;
LABEL_42:
      v37 = 0xD00000000000001DLL;
      v38 = 0x8000000100FAA390;
      goto LABEL_43;
    }
    v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v34, v33, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v24;
    if ((v36 & 1) != 0)
      goto LABEL_42;
    v38 = 0x8000000100FAA3B0;
    v37 = 0xD00000000000001ALL;
    if (0x8000000100FAA3B0 == 0x8000000100FAA370)
      goto LABEL_50;
LABEL_43:
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, 0xD00000000000001ALL, 0x8000000100FAA370, 0);
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      goto LABEL_51;

    v43 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      goto LABEL_11;
LABEL_13:
    v16 = __CocoaSet.Iterator.next()(v6);
    if (!v16)
      goto LABEL_52;
    v17 = v16;
    v44 = v16;
    v18 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(&v46, &v44, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
    v19 = v46;
    *(_QWORD *)&v20 = swift_unknownObjectRelease(v17).n128_u64[0];
    if (!v19)
      goto LABEL_51;
  }
  swift_bridgeObjectRelease();
LABEL_49:
  swift_bridgeObjectRelease();
  v1 = v24;
LABEL_50:
  swift_bridgeObjectRelease();
LABEL_51:
  sub_1004D284C(v1);
  return v19;
}

id sub_1009016DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  char v34;
  const char *v35;
  void *v36;
  uint64_t v37;
  char v38;
  char v39;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[6];
  void *v46;
  Swift::String v47;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    v5 = sub_1005A15B8(&qword_1013FA4E8, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v45, v3, v4, v5);
    v1 = v45[0];
    v42 = v45[1];
    v7 = v45[2];
    v8 = v45[3];
    v9 = v45[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v42 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v41 = (unint64_t)(v7 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v14 = __CocoaSet.Iterator.next()(v6);
  if (v14)
  {
    v15 = v14;
    v44 = v14;
    v16 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    swift_unknownObjectRetain(v15);
    swift_dynamicCast(&v46, &v44, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
    v17 = v46;
    *(_QWORD *)&v18 = swift_unknownObjectRelease(v15).n128_u64[0];
    v19 = v8;
    v20 = v9;
    if (!v17)
      goto LABEL_50;
    while (1)
    {
      v43 = v20;
      v25 = objc_msgSend(v17, "activityType", v18);
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      swift_bridgeObjectRetain(v28);
      v47._countAndFlagsBits = v26;
      v47._object = v28;
      v29 = sub_1008748FC(v47);
      if (v29 != 10)
      {
        v33 = v29;
        swift_bridgeObjectRelease();
        __asm { BR              X9 }
      }
      v30 = v1;
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
      if (v26 == v32 && v28 == v31)
        break;
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v32, v31, 0);
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
        goto LABEL_39;
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
      if (v26 == v37 && v28 == v36)
      {
        swift_bridgeObjectRelease_n(v28, 2);
        v1 = v30;
LABEL_49:
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v37, v36, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 = v30;
      if ((v38 & 1) != 0)
        goto LABEL_49;
      v35 = "NSUserActivityTypeBrowsingWeb";
LABEL_44:
      v39 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, (unint64_t)v35 | 0x8000000000000000, 0xD00000000000001DLL, 0x8000000100FAA390, 0);
      swift_bridgeObjectRelease();
      if ((v39 & 1) != 0)
        goto LABEL_50;

      v8 = v19;
      v9 = v43;
      if (v1 < 0)
        goto LABEL_11;
LABEL_14:
      if (v9)
      {
        v20 = (v9 - 1) & v9;
        v21 = __clz(__rbit64(v9)) | (v8 << 6);
        v19 = v8;
      }
      else
      {
        v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          JUMPOUT(0x100901D34);
        }
        if (v22 >= v41)
          goto LABEL_47;
        v23 = *(_QWORD *)(v42 + 8 * v22);
        v19 = v8 + 1;
        if (!v23)
        {
          v19 = v8 + 2;
          if (v8 + 2 >= v41)
            goto LABEL_47;
          v23 = *(_QWORD *)(v42 + 8 * v19);
          if (!v23)
          {
            v19 = v8 + 3;
            if (v8 + 3 >= v41)
              goto LABEL_47;
            v23 = *(_QWORD *)(v42 + 8 * v19);
            if (!v23)
            {
              v19 = v8 + 4;
              if (v8 + 4 >= v41)
                goto LABEL_47;
              v23 = *(_QWORD *)(v42 + 8 * v19);
              if (!v23)
              {
                v19 = v8 + 5;
                if (v8 + 5 >= v41)
                  goto LABEL_47;
                v23 = *(_QWORD *)(v42 + 8 * v19);
                if (!v23)
                {
                  v24 = v8 + 6;
                  while (v41 != v24)
                  {
                    v23 = *(_QWORD *)(v42 + 8 * v24++);
                    if (v23)
                    {
                      v19 = v24 - 1;
                      goto LABEL_31;
                    }
                  }
                  goto LABEL_47;
                }
              }
            }
          }
        }
LABEL_31:
        v20 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v19 << 6);
      }
      v17 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v21);
      if (!v17)
        goto LABEL_50;
    }
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    v1 = v30;
    v35 = "com.apple.freeform.newBoard";
    goto LABEL_44;
  }
LABEL_47:
  v17 = 0;
LABEL_50:
  sub_1004D284C(v1);
  return v17;
}

id sub_100901D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  void *v30;
  uint64_t v31;
  char v32;
  char v33;
  const char *v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  char v40;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  _QWORD v46[6];
  void *v47;
  Swift::String v48;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    v5 = sub_1005A15B8(&qword_1013FA4E8, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v46, v3, v4, v5);
    v1 = v46[0];
    v43 = v46[1];
    v7 = v46[2];
    v8 = v46[3];
    v9 = v46[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v43 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v42 = (unint64_t)(v7 + 64) >> 6;
  v44 = v8;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v8 << 6);
    goto LABEL_32;
  }
  v21 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x1009023D8);
  }
  if (v21 >= v42)
  {
LABEL_50:
    v19 = 0;
    goto LABEL_52;
  }
  v22 = *(_QWORD *)(v43 + 8 * v21);
  ++v8;
  if (!v22)
  {
    v8 = v21 + 1;
    if (v21 + 1 >= v42)
      goto LABEL_51;
    v22 = *(_QWORD *)(v43 + 8 * v8);
    if (!v22)
    {
      v8 = v21 + 2;
      if (v21 + 2 >= v42)
        goto LABEL_51;
      v22 = *(_QWORD *)(v43 + 8 * v8);
      if (!v22)
      {
        v8 = v21 + 3;
        if (v21 + 3 >= v42)
          goto LABEL_51;
        v22 = *(_QWORD *)(v43 + 8 * v8);
        if (!v22)
        {
          v8 = v21 + 4;
          if (v21 + 4 < v42)
          {
            v22 = *(_QWORD *)(v43 + 8 * v8);
            if (!v22)
            {
              v23 = v44 + 6;
              do
              {
                if (v42 == v23)
                  goto LABEL_50;
                v22 = *(_QWORD *)(v43 + 8 * v23++);
              }
              while (!v22);
              v8 = v23 - 1;
            }
            goto LABEL_31;
          }
LABEL_51:
          v19 = 0;
          goto LABEL_52;
        }
      }
    }
  }
LABEL_31:
  v9 = (v22 - 1) & v22;
  v15 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_32:
  v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
  if (v19)
  {
    while (1)
    {
      v24 = v1;
      v25 = objc_msgSend(v19, "activityType", v20);
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      swift_bridgeObjectRetain(v28);
      v48._countAndFlagsBits = v26;
      v48._object = v28;
      v29 = sub_1008748FC(v48);
      if (v29 != 10)
      {
        v32 = v29;
        swift_bridgeObjectRelease();
        __asm { BR              X9 }
      }
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
      if (v26 == v31 && v28 == v30)
        break;
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v31, v30, 0);
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
        goto LABEL_39;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
      if (v26 == v38 && v28 == v37)
      {
        swift_bridgeObjectRelease_n(v28, 2);
        v1 = v24;
      }
      else
      {
        v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v38, v37, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v1 = v24;
        if ((v39 & 1) == 0)
        {
          v34 = "NSUserActivityTypeBrowsingWeb";
          goto LABEL_40;
        }
      }
      v36 = 0xD00000000000001DLL;
      v35 = 0x8000000100FAA390;
LABEL_46:
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v35, 0xD000000000000033, 0x8000000100FAA220, 0);
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
        goto LABEL_52;

      v44 = v8;
      if ((v1 & 0x8000000000000000) == 0)
        goto LABEL_11;
LABEL_13:
      v16 = __CocoaSet.Iterator.next()(v6);
      if (!v16)
        goto LABEL_50;
      v17 = v16;
      v45 = v16;
      v18 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
      swift_unknownObjectRetain(v17);
      swift_dynamicCast(&v47, &v45, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
      v19 = v47;
      *(_QWORD *)&v20 = swift_unknownObjectRelease(v17).n128_u64[0];
      if (!v19)
        goto LABEL_52;
    }
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    v1 = v24;
    v34 = "com.apple.freeform.newBoard";
LABEL_40:
    v35 = (unint64_t)v34 | 0x8000000000000000;
    v36 = 0xD00000000000001ALL;
    goto LABEL_46;
  }
LABEL_52:
  sub_1004D284C(v1);
  return v19;
}

double sub_100902400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v5 = sub_1004B804C(&qword_1013FA540);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v8 = a1;
  v8[1] = a2;
  swift_retain(a2);
  UUID.init()(v9);
  v10 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain(v10);
  if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
    v10 = sub_100D11628(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
    v10 = sub_100D11628(v12 > 1, v13 + 1, 1, v10);
  *(_QWORD *)(v10 + 16) = v13 + 1;
  sub_1004C4938((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v13, &qword_1013FA540);
  v14 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v10;
  sub_100902530(v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100902530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_1004B804C(&qword_1013FA540);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FA548);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013FA550);
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - v12;
  __chkstk_darwin(v14);
  v17 = (char *)&v27 - v15;
  v18 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v18 + 16))
  {
    v28 = v6;
    v29 = v16;
    v30 = v1;
    v19 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    sub_1004CB7BC(v18 + v19, (uint64_t)&v27 - v15, &qword_1013FA540);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v21 = 1;
    v20(v17, 0, 1, v3);
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1004CB7BC(a1 + v19, (uint64_t)v13, &qword_1013FA540);
      v21 = 0;
    }
    v20(v13, v21, 1, v3);
    v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1004CB7BC((uint64_t)v17, (uint64_t)v9, &qword_1013FA550);
    sub_1004CB7BC((uint64_t)v13, v22, &qword_1013FA550);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v23((uint64_t)v9, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v13, &qword_1013FA550);
      sub_1004CB800((uint64_t)v17, &qword_1013FA550);
      if (v23(v22, 1, v3) == 1)
      {
        sub_1004CB800((uint64_t)v9, &qword_1013FA550);
        return;
      }
    }
    else
    {
      v24 = v29;
      sub_1004CB7BC((uint64_t)v9, v29, &qword_1013FA550);
      if (v23(v22, 1, v3) != 1)
      {
        v25 = (uint64_t)v28;
        sub_1004C4938(v22, (uint64_t)v28, &qword_1013FA540);
        v26 = static UUID.== infix(_:_:)(v24 + *(int *)(v3 + 44));
        sub_1004CB800(v25, &qword_1013FA540);
        sub_1004CB800((uint64_t)v13, &qword_1013FA550);
        sub_1004CB800((uint64_t)v17, &qword_1013FA550);
        sub_1004CB800(v24, &qword_1013FA540);
        sub_1004CB800((uint64_t)v9, &qword_1013FA550);
        if ((v26 & 1) != 0)
          return;
        goto LABEL_11;
      }
      sub_1004CB800((uint64_t)v13, &qword_1013FA550);
      sub_1004CB800((uint64_t)v17, &qword_1013FA550);
      sub_1004CB800(v24, &qword_1013FA540);
    }
    sub_1004CB800((uint64_t)v9, &qword_1013FA548);
LABEL_11:
    sub_100902870();
  }
}

uint64_t sub_100902870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013FA550);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1004B804C(&qword_1013FA540);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v28 - v16;
  v18 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v18 + 16))
  {
    sub_1004CB7BC(v18 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v6, &qword_1013FA540);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v6, 1, 1, v10, v15);
    sub_100757E04(&_mh_execute_header, (uint64_t)"runNextTask()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTaskQueue.swift", 83, 2, 31, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"runNextTask()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTaskQueue.swift", 83, 2u, 31, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)v6, (uint64_t)v9, &qword_1013FA550);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v19 = &qword_1013FA550;
    v20 = (uint64_t)v9;
  }
  else
  {
    sub_1004C4938((uint64_t)v9, (uint64_t)v17, &qword_1013FA540);
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v3, 1, 1, v21);
    sub_1004CB7BC((uint64_t)v17, (uint64_t)v13, &qword_1013FA540);
    v22 = *(unsigned __int8 *)(v11 + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_allocObject(&unk_1012882C0, v24 + 8, v22 | 7);
    *(_QWORD *)(v25 + 16) = 0;
    *(_QWORD *)(v25 + 24) = 0;
    sub_1004C4938((uint64_t)v13, v25 + v23, &qword_1013FA540);
    *(_QWORD *)(v25 + v24) = v0;
    swift_retain(v0);
    v26 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013FA560, v25);
    swift_release(v26);
    v20 = (uint64_t)v17;
    v19 = &qword_1013FA540;
  }
  return sub_1004CB800(v20, v19);
}

uint64_t sub_100902BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_100902BB8, 0, 0);
}

uint64_t sub_100902BB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = (**(uint64_t (***)(void))(v0 + 16))();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_100902C34;
  return Task.value.getter(v2, v1, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100902C34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_release(*(_QWORD *)(v2 + 32));
    swift_errorRelease(v0);
    v4 = sub_100902D68;
  }
  else
  {
    v4 = sub_100902CA8;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_100902CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v1;
  v7 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain(v7);
  sub_1009A1C2C((uint64_t (*)(unint64_t, __n128))sub_10092256C);
  v5 = *(_QWORD *)(v7 + 16);
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_100CFED5C(v4, v5);
    v6 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = v7;
    sub_100902530(v6);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v3);
    (*(void (**)(void))(v0 + 8))();
  }
}

void sub_100902D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v1;
  v7 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain(v7);
  sub_1009A1C2C((uint64_t (*)(unint64_t, __n128))sub_10092256C);
  v5 = *(_QWORD *)(v7 + 16);
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_100CFED5C(v4, v5);
    v6 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = v7;
    sub_100902530(v6);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v3);
    (*(void (**)(void))(v0 + 8))();
  }
}

NSString sub_100902E20()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FF28 = (uint64_t)result;
  return result;
}

NSString sub_100902E54()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FF30 = (uint64_t)result;
  return result;
}

NSString sub_100902E88()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FF38 = (uint64_t)result;
  return result;
}

NSString sub_100902EBC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FF40 = (uint64_t)result;
  return result;
}

NSString sub_100902EF0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FF48 = (uint64_t)result;
  return result;
}

id sub_100902F24(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD4F0, (void **)&qword_10147FF28, (void **)&qword_10147FF50, (uint64_t)sub_100902E20);
}

id sub_100902F64(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD4F8, (void **)&qword_10147FF30, (void **)&qword_10147FF58, (uint64_t)sub_100902E54);
}

id sub_100902FA4(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD500, (void **)&qword_10147FF38, (void **)&qword_10147FF60, (uint64_t)sub_100902E88);
}

id sub_100902FE4(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD508, (void **)&qword_10147FF40, (void **)&qword_10147FF68, (uint64_t)sub_100902EBC);
}

id sub_100903068()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_1009038CC();
  v1 = objc_msgSend(v0, "presentedViewController");

  if (v1)
  {
    v2 = objc_opt_self(UINavigationController);
    v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
    if (v3)
    {
      v4 = objc_msgSend(v3, "topViewController");

      if (v4)
      {
        v5 = type metadata accessor for CRLiOSBoardViewController(0);
        v6 = swift_dynamicCastClass(v4, v5);
        if (v6)
        {
          v1 = objc_retain(*(id *)(*(_QWORD *)(v6
                                             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));

          return v1;
        }

      }
    }
    else
    {

    }
    return 0;
  }
  return v1;
}

uint64_t sub_100903140()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t result;

  v0 = sub_1009038CC();
  v1 = objc_msgSend(v0, "viewControllerForColumn:", 2);

  if (!v1)
    goto LABEL_7;
  v2 = objc_opt_self(UINavigationController);
  v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"folderGridViewController", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1804, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"folderGridViewController", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1804, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v4 = objc_msgSend(v3, "topViewController");

  if (v4)
  {
    v5 = type metadata accessor for CRLiOSFolderGridViewController(0);
    result = swift_dynamicCastClass(v4, v5);
    if (result)
      return result;

  }
  return 0;
}

uint64_t sub_100903288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  _QWORD v36[2];
  char v37[24];
  char v38[24];

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)v36 - v6;
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  __chkstk_darwin(v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)sub_100903068();
  if (v14)
  {
    v15 = v14;
    v16 = (_QWORD *)(a1 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v38, 0, 0);
    sub_1004B8460(v19, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v18);
    v20 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v20);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
    swift_release(v18);
    v21 = (uint64_t *)(*(_QWORD *)&v15[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v22 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain(v23);
    sub_10067AFD0((uint64_t)v13, v22, v23, a1);
    v24 = *(_QWORD *)&v15[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v24, v37, 0, 0);
    sub_1004B8460(v24, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
    v25 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v25);
    v26 = v36[0];
    v27 = v36[1];
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);

    *v16 = v26;
    v16[1] = v27;
    v28 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v29 = a1;
    v30 = v28;
    v31 = 2;
LABEL_5:
    swift_storeEnumTagMultiPayload(v29, v30, v31);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 0, 1, v28);
  }
  v32 = sub_100903140();
  if (v32)
  {
    v33 = (void *)v32;
    sub_1004B8460(v32 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);

    sub_1004B84E0((uint64_t)v5, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_1004B84E0((uint64_t)v7, a1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v28 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v29 = a1;
    v30 = v28;
    v31 = 1;
    goto LABEL_5;
  }
  v35 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
}

void sub_1009035AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardLibrary;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardLibrary);
  if (v2 != (void *)1)
  {
LABEL_6:
    sub_1004CB968(v2);
    return;
  }
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for CRLiOSAppDelegate();
    v6 = *(void **)(swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
    v7 = v6;
    swift_unknownObjectRelease(v4);
    if (!v6)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibrary", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 74, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibrary", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 74, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v9 = v7;
    sub_1004CB49C(v8);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_10090373C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardPreviewImageCache;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardPreviewImageCache);
  if (v2 != (void *)1)
  {
LABEL_6:
    sub_1004CB968(v2);
    return;
  }
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for CRLiOSAppDelegate();
    v6 = *(void **)(swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache);
    v7 = v6;
    swift_unknownObjectRelease(v4);
    if (!v6)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"boardPreviewImageCache", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 76, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardPreviewImageCache", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 76, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v9 = v7;
    sub_1004CB49C(v8);
    goto LABEL_6;
  }
  __break(1u);
}

id sub_1009038CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UISplitViewController), "initWithStyle:", 1);
    if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
      v5 = 2;
    else
      v5 = 1;
    objc_msgSend(v4, "setPreferredSplitBehavior:", v5);
    sub_10090399C();
    v7 = v6;
    objc_msgSend(v4, "setViewController:forColumn:", v6, 0);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_10090399C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _BYTE *v7;
  char *v8;
  char *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___sidebarViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___sidebarViewController);
  if (v2)
    goto LABEL_4;
  sub_1009035AC();
  if (v3)
  {
    v4 = v3;
    v5 = objc_allocWithZone((Class)UICollectionViewLayout);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "init");
    v7 = objc_allocWithZone((Class)type metadata accessor for CRLiOSSidebarViewController(0));
    v8 = (char *)sub_10091F260((uint64_t)v4, (uint64_t)v6, v7);

    v9 = &v8[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate];
    *((_QWORD *)v9 + 1) = &off_101287D10;
    swift_unknownObjectWeakAssign(v9, v0);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v8;

    v2 = 0;
LABEL_4:
    v11 = v2;
    return;
  }
  __break(1u);
}

uint64_t sub_100903A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = sub_1004B804C(&qword_1013FA358);
  v4 = __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation;
  swift_beginAccess(v9, v15, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v8, &qword_1013FA358);
  swift_beginAccess(v9, v14, 33, 0);
  sub_100922724(a1, v9);
  swift_endAccess(v14);
  sub_1004CB7BC((uint64_t)v8, (uint64_t)v6, &qword_1013FA358);
  v10 = sub_1004B804C(&qword_1013EF328);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10);
  if ((_DWORD)v12 == 1)
  {
    sub_1004CB800((uint64_t)v6, &qword_1013FA358);
  }
  else
  {
    CheckedContinuation.resume(returning:)(v12, v10);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v6, v10);
  }
  sub_1004CB800(a1, &qword_1013FA358);
  return sub_1004CB800((uint64_t)v8, &qword_1013FA358);
}

uint64_t sub_100903BFC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t Strong;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  char v25;

  v1 = v0;
  v2 = sub_1009038CC();
  v3 = objc_msgSend(v2, "presentedViewController");

  if (v3)
  {
    v4 = sub_1009038CC();
    v5 = objc_msgSend(v4, "presentedViewController");

    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController);
    v7 = (void *)Strong;
    if (v5)
    {
      if (!Strong)
      {
        LOBYTE(v3) = 0;
        goto LABEL_9;
      }
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v8 = v5;
      LOBYTE(v3) = static NSObject.== infix(_:_:)(v8, v7);

LABEL_7:
      v5 = v7;
LABEL_9:

      goto LABEL_10;
    }
    if (Strong)
    {
      LOBYTE(v3) = 0;
      goto LABEL_7;
    }
    LOBYTE(v3) = 1;
  }
LABEL_10:
  v9 = sub_1009038CC();
  v10 = objc_msgSend(v9, "presentedViewController");

  if (v10)
  {
    v11 = objc_opt_self(UINavigationController);
    v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
    if (!v12)
      goto LABEL_28;
    v13 = objc_msgSend(v12, "topViewController");

    if (v13)
    {
      v14 = type metadata accessor for CRLiOSBoardViewController(0);
      v15 = (void *)swift_dynamicCastClass(v13, v14);
      if (!v15)
      {

        return v3 & 1;
      }
      v16 = objc_msgSend(v15, "presentedViewController");

      if (v16)
      {

        v17 = sub_1009038CC();
        v10 = objc_msgSend(v17, "presentedViewController");

        if (v10)
        {
          v18 = objc_opt_self(UINavigationController);
          v19 = (void *)swift_dynamicCastObjCClass(v10, v18);
          if (v19)
          {
            v20 = objc_msgSend(v19, "topViewController");

            if (v20)
            {
              v21 = (void *)swift_dynamicCastClass(v20, v14);
              if (v21)
              {
                v10 = objc_msgSend(v21, "presentedViewController");

                goto LABEL_25;
              }

            }
          }
          else
          {

          }
          v10 = 0;
        }
LABEL_25:
        v22 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController);
        v23 = v22;
        if (v10)
        {
          if (v22)
          {
            sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
            v24 = v10;
            v25 = static NSObject.== infix(_:_:)(v24, v23);

            LOBYTE(v3) = v25 | v3;
            return v3 & 1;
          }
LABEL_28:

          return v3 & 1;
        }
        if (v22)

        else
          LOBYTE(v3) = 1;
      }
    }
  }
  return v3 & 1;
}

uint64_t sub_100903EBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[35] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[36] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[37] = v3;
  v1[38] = v4;
  return swift_task_switch(sub_100903F28, v3, v4);
}

uint64_t sub_100903F28()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v25;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "presentedViewController");

  if (!v2)
    goto LABEL_6;
  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
    goto LABEL_5;
  v5 = objc_msgSend(v4, "topViewController");

  if (v5)
  {
    v6 = type metadata accessor for CRLiOSBoardViewController(0);
    v7 = (id)swift_dynamicCastClass(v5, v6);
    v2 = v5;
    if (v7)
      goto LABEL_7;
LABEL_5:

  }
LABEL_6:
  v7 = sub_1009038CC();
LABEL_7:
  *(_QWORD *)(v0 + 312) = v7;
  v8 = objc_msgSend(v7, "presentedViewController");
  *(_QWORD *)(v0 + 320) = v8;
  if (v8)
  {
    v9 = v8;
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 200, 0, 0);
    v10 = (void *)static OS_os_log.sceneManagement;
    v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 328) = v11;
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v13 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    *(_QWORD *)(inited + 56) = v13;
    v14 = sub_1005A15B8(&qword_1013FA598, (unint64_t *)&qword_1013F6620, UIViewController_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 96) = v13;
    *(_QWORD *)(inited + 104) = v14;
    *(_QWORD *)(inited + 64) = v14;
    *(_QWORD *)(inited + 72) = v7;
    v15 = v10;
    v16 = v9;
    v17 = v7;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v19, "Trying to dismiss presentedViewController:%@ of topViewController:%@", 68, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 336) = v20;
    swift_arrayDestroy(inited + 32, 2, v20);

    if (objc_msgSend(v16, "crl_canBeDismissed"))
    {
      v21 = objc_opt_self(_UIStickerPickerViewController);
      v22 = swift_dynamicCastObjCClass(v16, v21) == 0;
      v23 = (_QWORD *)swift_task_alloc(dword_101400534);
      *(_QWORD *)(v0 + 344) = v23;
      *v23 = v0;
      v23[1] = sub_1009041F0;
      return sub_1009DB078(v22);
    }
    v25 = *(_QWORD *)(v0 + 288);

  }
  else
  {
    v25 = *(_QWORD *)(v0 + 288);
  }
  swift_release(v25);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009041F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 344);
  *(_QWORD *)(*v1 + 352) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100904290;
  else
    v4 = sub_100904250;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 296), *(_QWORD *)(v2 + 304));
}

uint64_t sub_100904250()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(void **)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 288);

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_100904290()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 320);
  swift_release(*(_QWORD *)(v0 + 288));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(void **)(v0 + 312);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 224, 0, 0);
  v6 = (void *)static OS_os_log.crlError;
  inited = swift_initStackObject(v4, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 272, v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 264);
  v10 = v6;
  v11 = Error.localizedDescription.getter(v8, v9);
  v13 = v12;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v15 = static os_log_type_t.error.getter(v14);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v15, "Caught error trying to dismiss view controller: %@", 50, 2, inited);

  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v3);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10090440C(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  id v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  double v32;
  char v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  char v46;
  void *v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  id v57;
  _BYTE *v58;
  _BOOL4 v59;
  uint64_t v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  id v65;
  __n128 v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  _BYTE *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _QWORD *v88;
  void *v89;
  _QWORD *v90;
  id v91;
  double v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  id v97;
  __n128 v98;
  id v99;
  __n128 v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  uint64_t v105;
  void *v106;
  void *v107;
  Swift::String v108;
  Swift::Int v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  __n128 v115;
  id v116;
  uint64_t v117;
  void (*v118)(char *, char *, id);
  id v119;
  char *v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  __n128 v129;
  void (*v130)(char *, id, __n128);
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  double v139;
  id v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  char *v145;
  uint64_t v146;
  id v147;
  id v148;
  id v149;
  void *v150;
  id v151;
  _BYTE *v152;
  char v153[24];
  _QWORD aBlock[5];
  _QWORD *v155;
  char v156[72];
  char v157[32];
  char v158[8];

  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)type metadata accessor for URL(0);
  v10 = *(v9 - 1);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v143 - v14;
  v16 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v16);
  v18 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_opt_self(UIWindowScene);
  v20 = (void *)swift_dynamicCastObjCClass(a1, v19);
  if (v20)
  {
    v145 = v15;
    v144 = a2;
    v146 = v10;
    v147 = v9;
    v148 = v18;
    v150 = v20;
    v149 = a1;
    v21 = objc_msgSend(a3, "userActivities");
    v22 = sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    v23 = sub_1005A15B8(&qword_1013FA4E8, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, v22, v23);

    v25 = sub_100900978(v24);
    *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
    v151 = a3;
    if (v25)
      goto LABEL_5;
    v27 = objc_msgSend(a3, "userActivities", v26);
    v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v27, v22, v23);

    v25 = sub_10090101C(v28);
    *(_QWORD *)&v29 = swift_bridgeObjectRelease().n128_u64[0];
    if (v25
      || (v30 = objc_msgSend(v151, "userActivities", v29),
          v31 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v30, v22, v23),
          v30,
          v25 = sub_1009016DC(v31),
          *(_QWORD *)&v32 = swift_bridgeObjectRelease().n128_u64[0],
          v25))
    {
LABEL_5:
      v33 = 0;
LABEL_6:
      v34 = v152;
LABEL_7:
      v35 = (void *)objc_opt_self(CRLWelcomeController);
      v36 = objc_msgSend(v35, "firstLaunchActionForVersion:userDefaultsVersion:", objc_msgSend(v35, "currentVersion"), 0);
      if (v36)
      {
        if (qword_1013DD820 != -1)
          swift_once(&qword_1013DD820, sub_100A04A9C);
        swift_beginAccess(&static OS_os_log.sceneManagement, v157, 0, 0);
        v37 = (void *)static OS_os_log.sceneManagement;
        v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v38, v156);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
        *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
        *(_QWORD *)(inited + 32) = v34;
        v40 = v34;
        v41 = v37;
        v43 = static os_log_type_t.default.getter(v42);
        sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "Scene delegate (%p) will show First Launch. Updating user default.", 66, 2, inited);
        swift_setDeallocating(inited);
        v44 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v44);

        objc_msgSend(v35, "updateUserDefaultsVersion:", 0);
      }
      v45 = v36 != 0;
      if (v36)
        v46 = 1;
      else
        v46 = v33;
      sub_100906D30(v150, v46);
      v48 = v47;
      v152 = (_BYTE *)swift_allocObject(&unk_1012880F0, 17, 7);
      v152[16] = 0;
      v49 = swift_allocObject(&unk_101288118, 48, 7);
      *(_QWORD *)(v49 + 16) = v34;
      *(_QWORD *)(v49 + 24) = v48;
      *(_BYTE *)(v49 + 32) = v45;
      *(_QWORD *)(v49 + 40) = v36;
      v50 = v48;
      v51 = v34;
      v52 = v50;
      v53 = v51;
      sub_1009035AC();
      if (v54)
      {
        v55 = v54;
        v56 = swift_allocObject(&unk_101288140, 65, 7);
        v57 = v151;
        *(_QWORD *)(v56 + 16) = v53;
        *(_QWORD *)(v56 + 24) = v57;
        *(_QWORD *)(v56 + 32) = v25;
        *(_QWORD *)(v56 + 40) = sub_100922200;
        v58 = v152;
        *(_QWORD *)(v56 + 48) = v49;
        *(_QWORD *)(v56 + 56) = v58;
        *(_BYTE *)(v56 + 64) = v45;
        LOBYTE(v58) = v55[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating];
        v150 = v55;
        if ((v58 & 1) != 0)
        {
          v59 = v36 != 0;
          v148 = v25;
          swift_retain(v49);
          v147 = v36;
          v60 = (uint64_t)v152;
          swift_retain_n(v152, 2);
          v61 = v53;
          v62 = v57;
          v63 = (char *)v61;
          v64 = v52;
          v65 = v62;
          sub_10091FF80(v63, v65, v25, v60, v59, v63, v48, v59, (uint64_t)v147);

          swift_release(v56);
          v66 = swift_release(v49);
          swift_release_n(v60, 2, v66);

        }
        else
        {
          v79 = (void *)objc_opt_self(NSNotificationCenter);
          v80 = v25;
          v81 = v53;
          v82 = v57;
          v147 = v80;
          swift_retain(v49);
          v83 = v152;
          swift_retain(v152);
          v151 = v81;
          v148 = v82;
          swift_retain(v49);
          v84 = objc_msgSend(v79, "defaultCenter", swift_retain(v83).n128_f64[0]);
          v85 = swift_allocObject(&unk_101288168, 24, 7);
          *(_QWORD *)(v85 + 16) = 0;
          if (qword_1013DDD68 != -1)
            swift_once(&qword_1013DDD68, sub_100BC0B9C);
          v86 = qword_101480E38;
          v87 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
          v88 = (_QWORD *)swift_allocObject(&unk_101288190, 48, 7);
          v88[2] = v85;
          v88[3] = v84;
          v88[4] = sub_100922254;
          v88[5] = v56;
          aBlock[4] = sub_1005A1B3C;
          v155 = v88;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(_QWORD *)"";
          aBlock[2] = sub_100568280;
          aBlock[3] = &unk_1012881A8;
          v89 = _Block_copy(aBlock);
          v90 = v155;
          swift_retain(v85);
          v91 = v84;
          swift_retain(v56);
          *(_QWORD *)&v92 = swift_release(v90).n128_u64[0];
          v93 = v86;
          v94 = v150;
          v95 = objc_msgSend(v91, "addObserverForName:object:queue:usingBlock:", v93, v150, v87, v89, v92);

          _Block_release(v89);
          swift_beginAccess(v85 + 16, aBlock, 1, 0);
          v96 = *(_QWORD *)(v85 + 16);
          *(_QWORD *)(v85 + 16) = v95;
          swift_release(v85);
          v97 = v147;

          swift_release_n(v49, 2, v98);
          swift_release(v56);
          v99 = v151;

          swift_release_n(v152, 2, v100);
          swift_unknownObjectRelease(v96);
        }
      }
      else
      {

        __break(1u);
      }
      return;
    }
    v101 = v151;
    v102 = objc_msgSend(v151, "shortcutItem", v32);
    if (v102)
    {
      v103 = v102;
      v104 = objc_msgSend(v102, "type");
      v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
      v107 = v106;

      v108._countAndFlagsBits = v105;
      v108._object = v107;
      v109 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265398, v108);
      swift_bridgeObjectRelease();
      if (v109)
      {

        v33 = 0;
        v25 = 0;
        goto LABEL_6;
      }
      v131 = type metadata accessor for TaskPriority(0);
      v132 = (uint64_t)v148;
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v148, 1, 1, v131);
      type metadata accessor for MainActor(0);
      v34 = v152;
      v133 = v152;
      v134 = static MainActor.shared.getter(v133);
      v135 = (_QWORD *)swift_allocObject(&unk_101288208, 40, 7);
      v135[2] = v134;
      v135[3] = &protocol witness table for MainActor;
      v135[4] = v133;
      v136 = sub_100521D40(v132, (uint64_t)&unk_1013FA518, (uint64_t)v135);
      swift_release(v136);

    }
    else
    {
      v110 = objc_msgSend(v101, "URLContexts");
      v111 = sub_1004B8930(0, &qword_1013FA4F0, UIOpenURLContext_ptr);
      v112 = sub_1005A15B8(&qword_1013FA4F8, &qword_1013FA4F0, UIOpenURLContext_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v113 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v110, v111, v112);

      v114 = (void *)sub_1008580E0(v113);
      v115 = swift_bridgeObjectRelease();
      if (v114)
      {
        v116 = objc_msgSend(v114, "URL", v115.n128_f64[0]);

        static URL._unconditionallyBridgeFromObjectiveC(_:)(v116);
        v117 = v146;
        v118 = *(void (**)(char *, char *, id))(v146 + 32);
        v119 = v147;
        v118(v8, v12, v147);
        (*(void (**)(char *, _QWORD, uint64_t, id))(v117 + 56))(v8, 0, 1, v119);
        if ((*(unsigned int (**)(char *, uint64_t, id))(v117 + 48))(v8, 1, v119) != 1)
        {
          v120 = v145;
          v118(v145, v8, v119);
          v121 = type metadata accessor for TaskPriority(0);
          (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v148, 1, 1, v121);
          (*(void (**)(char *, char *, id))(v117 + 16))(v12, v120, v119);
          type metadata accessor for MainActor(0);
          v122 = v152;
          v123 = v152;
          v124 = static MainActor.shared.getter(v123);
          v125 = *(unsigned __int8 *)(v117 + 80);
          v126 = (v125 + 40) & ~v125;
          v127 = (char *)swift_allocObject(&unk_1012881E0, v126 + v11, v125 | 7);
          *((_QWORD *)v127 + 2) = v124;
          *((_QWORD *)v127 + 3) = &protocol witness table for MainActor;
          *((_QWORD *)v127 + 4) = v123;
          v118(&v127[v126], v12, v119);
          v128 = sub_100521B98((uint64_t)v148, (uint64_t)&unk_1013FA508, (uint64_t)v127);
          v129 = swift_release(v128);
          v130 = *(void (**)(char *, id, __n128))(v117 + 8);
          v34 = v122;
          v130(v120, v119, v129);
          goto LABEL_39;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, id, __n128))(v146 + 56))(v8, 1, 1, v147, v115);
      }
      sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
      v137 = objc_msgSend(v151, "userActivities");
      v138 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v137, v22, v23);

      v25 = sub_100901D5C(v138);
      *(_QWORD *)&v139 = swift_bridgeObjectRelease().n128_u64[0];
      if (v25)
      {
        v34 = v152;
      }
      else
      {
        v25 = objc_msgSend(v144, "stateRestorationActivity", v139);
        v34 = v152;
        if (!v25)
        {
          v33 = 0;
          goto LABEL_7;
        }
      }
      if ((sub_1008741F4() & 1) != 0)
      {
        v33 = 1;
        goto LABEL_7;
      }
      if (qword_1013DD6D0 != -1)
        swift_once(&qword_1013DD6D0, sub_100A00E84);
      swift_beginAccess(&static OS_os_log.crlWarning, v153, 0, 0);
      v140 = (id)static OS_os_log.crlWarning;
      v142 = static os_log_type_t.info.getter(v141);
      sub_100A06EBC((uint64_t)v140, &_mh_execute_header, v142, "Skipping user activity from a newer version.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
LABEL_39:
    v33 = 0;
    v25 = 0;
    goto LABEL_7;
  }
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, aBlock, 0, 0);
  v67 = (void *)static OS_os_log.sceneManagement;
  v68 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v69 = swift_initStackObject(v68, v158);
  *(_OWORD *)(v69 + 16) = xmmword_100EF5E40;
  v70 = a1;
  v71 = v67;
  v72 = objc_msgSend(v70, "description");
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
  v75 = v74;

  *(_QWORD *)(v69 + 56) = &type metadata for String;
  v76 = sub_1004CFC2C();
  *(_QWORD *)(v69 + 64) = v76;
  *(_QWORD *)(v69 + 32) = v73;
  *(_QWORD *)(v69 + 40) = v75;
  v77 = static os_log_type_t.error.getter(v76);
  sub_100A06EBC((uint64_t)v71, &_mh_execute_header, v77, "Connecting to unexpected scene: %@", 34, 2, v69);
  swift_setDeallocating(v69);
  v78 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v69 + 32, 1, v78);

}

uint64_t sub_100905230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_1009052BC, v7, v8);
}

uint64_t sub_1009052BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v1 = v0[4];
  v2 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v0[8] = v9;
  v10 = (uint64_t **)swift_task_alloc(dword_1013FA3D4);
  v0[9] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_1009053F0;
  return sub_10090546C(v0[4], v7, v9, 1);
}

uint64_t sub_1009053F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 80) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_100922DC4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_10090546C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  *(_BYTE *)(v5 + 408) = a4;
  *(_QWORD *)(v5 + 184) = a3;
  *(_QWORD *)(v5 + 192) = v4;
  *(_QWORD *)(v5 + 168) = a1;
  *(_QWORD *)(v5 + 176) = a2;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(_QWORD *)(v5 + 200) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 208) = v7;
  *(_QWORD *)(v5 + 216) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FA370);
  *(_QWORD *)(v5 + 224) = v8;
  *(_QWORD *)(v5 + 232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013FA378) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 240) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 248) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 256) = swift_task_alloc(v9);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(_QWORD *)(v5 + 264) = v10;
  *(_QWORD *)(v5 + 272) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 280) = v11;
  *(_QWORD *)(v5 + 288) = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_1013FA264);
  *(_QWORD *)(v5 + 296) = v12;
  *v12 = v5;
  v12[1] = sub_100905590;
  return sub_100903EBC();
}

uint64_t sub_100905590()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 280);
  swift_task_dealloc(*(_QWORD *)(*v0 + 296));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  *(_QWORD *)(v1 + 304) = v3;
  *(_QWORD *)(v1 + 312) = v4;
  return swift_task_switch(sub_100905604, v3, v4);
}

void sub_100905604()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[33];
  v2 = v0[34];
  sub_1004B8460(v0[21], v2, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_storeEnumTagMultiPayload(v2, v1, 1);
  sub_1009035AC();
  v0[40] = v3;
  if (v3)
  {
    v0[41] = static MainActor.shared.getter(v3);
    v4 = (uint64_t **)swift_task_alloc(dword_10140E144);
    v0[42] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = (uint64_t *)sub_1009056B4;
    sub_100CA7010(v0[21], v0[22], v0[23], 0, 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1009056B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 336);
  *(_QWORD *)(*v2 + 344) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 280);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_100905B44;
  }
  else
  {
    *(_QWORD *)(v4 + 352) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_10090575C;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_10090575C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[44];
  v2 = (void *)v0[40];
  swift_release(v0[41]);
  v0[45] = sub_100CAEF60(v1, v2);

  swift_release(v1);
  return swift_task_switch(sub_1009057B4, v0[38], v0[39]);
}

uint64_t sub_1009057B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  void *v33;
  id v34;
  _QWORD *v35;
  _QWORD *v37;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate;
  *(_QWORD *)(v3 + 8) = &off_101287CD0;
  swift_unknownObjectWeakAssign(v3, v2);
  v4 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider);
  v5 = &v4[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  *(_QWORD *)v5 = v2;
  *((_QWORD *)v5 + 1) = &off_101287D00;
  v7 = v4;
  swift_unknownObjectRelease(v6);
  swift_unknownObjectRetain(v2);

  v8 = sub_100903140();
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 208);
  if (v8)
  {
    v12 = (void *)v8;
    sub_1004B8460(v8 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, *(_QWORD *)(v0 + 256), type metadata accessor for CRLBoardLibraryViewModel.Folder);

    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13(v9, 0, 1, v10);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13(*(_QWORD *)(v0 + 256), 1, 1, v10);
  }
  v15 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 224);
  v17 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 200);
  v19 = *(_QWORD *)(v0 + 208);
  sub_1004B8460(*(_QWORD *)(v0 + 168), v15, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v13(v15, 0, 1, v18);
  v20 = v17 + *(int *)(v16 + 48);
  sub_1004CB7BC(v14, v17, &qword_1013FA378);
  sub_1004CB7BC(v15, v20, &qword_1013FA378);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v21(v17, 1, v18) == 1)
  {
    v22 = *(_QWORD *)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 200);
    sub_1004CB800(*(_QWORD *)(v0 + 248), &qword_1013FA378);
    sub_1004CB800(v22, &qword_1013FA378);
    if (v21(v20, 1, v23) == 1)
    {
      sub_1004CB800(*(_QWORD *)(v0 + 232), &qword_1013FA378);
LABEL_11:
      v33 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + 360)
                                 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      *(_QWORD *)(v0 + 384) = v33;
      v34 = v33;
      sub_10053BCC0();
      v35 = (_QWORD *)swift_task_alloc(dword_1013FA354);
      *(_QWORD *)(v0 + 392) = v35;
      *v35 = v0;
      v35[1] = sub_100905E5C;
      return sub_100913730(*(_QWORD *)(v0 + 360), 0, *(_BYTE *)(v0 + 408));
    }
    goto LABEL_9;
  }
  v24 = *(_QWORD *)(v0 + 200);
  sub_1004CB7BC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), &qword_1013FA378);
  v25 = v21(v20, 1, v24);
  v27 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 256);
  v28 = *(_QWORD *)(v0 + 240);
  if (v25 == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 248), &qword_1013FA378);
    sub_1004CB800(v26, &qword_1013FA378);
    sub_1004B84A4(v28, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_9:
    sub_1004CB800(*(_QWORD *)(v0 + 232), &qword_1013FA370);
    goto LABEL_12;
  }
  v29 = *(_QWORD *)(v0 + 232);
  v30 = *(_QWORD *)(v0 + 216);
  sub_1004B84E0(v20, v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100BD0ED4(v28, v30);
  v32 = v31;
  sub_1004B84A4(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1004CB800(v27, &qword_1013FA378);
  sub_1004CB800(v26, &qword_1013FA378);
  sub_1004B84A4(v28, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1004CB800(v29, &qword_1013FA378);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  v37 = (_QWORD *)swift_task_alloc(dword_1013FA334);
  *(_QWORD *)(v0 + 368) = v37;
  *v37 = v0;
  v37[1] = sub_100905D3C;
  return sub_10090BA30(*(_QWORD *)(v0 + 272), 0, 0, 0);
}

uint64_t sub_100905B44()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[40];
  swift_release(v0[41]);

  return swift_task_switch(sub_100905B80, v0[38], v0[39]);
}

uint64_t sub_100905B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 288));
  sub_1004B84A4(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 136, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 160) = v1;
  v6 = v3;
  swift_errorRetain(v1);
  v7 = sub_1004B804C(&qword_1013E0210);
  v8 = String.init<A>(describing:)(v0 + 160, v7);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v12, "Error adding new board: %@", 26, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 248);
  v15 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100905D3C(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 368);
  *(_QWORD *)(*v2 + 376) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 304);
    v7 = *(_QWORD *)(v4 + 312);
    v8 = sub_100906024;
  }
  else
  {

    v6 = *(_QWORD *)(v4 + 304);
    v7 = *(_QWORD *)(v4 + 312);
    v8 = sub_100905DB0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100905DB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 272);
  sub_10090399C();
  v3 = v2;
  sub_100505AEC(v1, 1);

  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + 360)
                            + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(_QWORD *)(v0 + 384) = v4;
  v5 = v4;
  sub_10053BCC0();
  v6 = (_QWORD *)swift_task_alloc(dword_1013FA354);
  *(_QWORD *)(v0 + 392) = v6;
  *v6 = v0;
  v6[1] = sub_100905E5C;
  return sub_100913730(*(_QWORD *)(v0 + 360), 0, *(_BYTE *)(v0 + 408));
}

uint64_t sub_100905E5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 392);
  *(_QWORD *)(*v1 + 400) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009061E8;
  else
    v4 = sub_100905EBC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_100905EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release(*(_QWORD *)(v0 + 288));
  v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v1, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5560;
  *(_QWORD *)(inited + 32) = sub_1009093EC();
  v3 = sub_1009093FC();
  *(_QWORD *)(inited + 40) = v3;
  specialized Array._endMutation()(v3);
  if ((inited & 0xC000000000000001) != 0)
  {
    v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, inited);
    sub_1009099BC(v4);

    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, inited);
  }
  else
  {
    v6 = *(id *)(inited + 32);
    sub_1009099BC(v6);

    v5 = *(id *)(inited + 40);
  }
  v7 = v5;
  v8 = *(void **)(v0 + 384);
  v9 = *(void **)(v0 + 360);
  v10 = *(_QWORD *)(v0 + 272);
  sub_1009099BC(v5);
  swift_bridgeObjectRelease(inited);

  sub_100909650();
  sub_1004B84A4(v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v11 = *(_QWORD *)(v0 + 384);
  v13 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_100906024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 288));
  sub_1004B84A4(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 136, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 160) = v1;
  v6 = v3;
  swift_errorRetain(v1);
  v7 = sub_1004B804C(&qword_1013E0210);
  v8 = String.init<A>(describing:)(v0 + 160, v7);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v12, "Error adding new board: %@", 26, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 248);
  v15 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1009061E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 384);

  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 288));
  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 136, 0, 0);
  v5 = (void *)static OS_os_log.crlDefault;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 160) = v2;
  v8 = v5;
  swift_errorRetain(v2);
  v9 = sub_1004B804C(&qword_1013E0210);
  v10 = String.init<A>(describing:)(v0 + 160, v9);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "Error adding new board: %@", 26, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  swift_errorRelease(v2);
  v17 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1009063C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[2] = v7;
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA524);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_1004DF470;
  return sub_100906434(a5);
}

uint64_t sub_100906434(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[32] = a1;
  v2[33] = v1;
  v3 = sub_1004B804C(&qword_1013E04D0);
  v2[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[35] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[36] = v5;
  v2[37] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E0270) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[38] = swift_task_alloc(v6);
  v2[39] = swift_task_alloc(v6);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v2[40] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[41] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[42] = swift_task_alloc(v9);
  v2[43] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v2[44] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[45] = v11;
  v2[46] = v12;
  return swift_task_switch(sub_100906558, v11, v12);
}

void sub_100906558()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  id v41;
  NSURL *v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  uint64_t v46;
  _QWORD *v47;

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 232, 0, 0);
  v1 = (void *)static OS_os_log.crlDefault;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v0 + 80);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = v1;
  v5 = URL.description.getter();
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v9, "Opening board from URL: %@.", 27, 2, inited);
  swift_setDeallocating(inited);
  v10 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v10);

  sub_1009035AC();
  if (!v11)
  {
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v15 = *(_QWORD *)(v0 + 312);
  sub_100CA4314(0, v15);

  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v16(v15, 1, v13) != 1)
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 344), type metadata accessor for CRLBoardIdentifier);
    v27 = (_QWORD *)swift_task_alloc(dword_1013FA45C);
    *(_QWORD *)(v0 + 376) = v27;
    *v27 = v0;
    v27[1] = sub_100906A90;
    sub_10091CCAC(*(_QWORD *)(v0 + 344));
    return;
  }
  v17 = *(_QWORD *)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 304);
  sub_1004CB800(*(_QWORD *)(v0 + 312), &qword_1013E0270);
  sub_1006307C4(v18);
  if (v16(v18, 1, v17) != 1)
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 336), type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v0 + 216) = &type metadata for CRLFeatureFlags;
    *(_QWORD *)(v0 + 224) = sub_1004DB6DC();
    *(_BYTE *)(v0 + 192) = 17;
    v28 = isFeatureEnabled(_:)(v0 + 192);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 192));
    if ((v28 & 1) != 0)
    {
      v29 = (_QWORD *)swift_task_alloc(dword_1013FA4AC);
      *(_QWORD *)(v0 + 384) = v29;
      *v29 = v0;
      v29[1] = sub_100906B68;
      sub_10090C608(*(_QWORD *)(v0 + 336));
      return;
    }
    v30 = *(_QWORD *)(v0 + 352);
    sub_1004B84A4(*(_QWORD *)(v0 + 336), type metadata accessor for CRLBoardIdentifier);
    v31 = v30;
    goto LABEL_14;
  }
  v19 = sub_1004CB800(*(_QWORD *)(v0 + 304), &qword_1013E0270);
  v20 = sub_100630FEC(v19);
  if (!v21)
  {
    v31 = *(_QWORD *)(v0 + 352);
LABEL_14:
    swift_release(v31);
    goto LABEL_15;
  }
  v22 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 272);
  String.append(_:)(*(Swift::String *)&v20);
  URL.init(string:)(0xD000000000000020, 0x8000000100FE10C0);
  swift_bridgeObjectRelease();
  v25 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v23 + 48))(v24, 1, v22, v25) == 1)
  {
    v26 = *(_QWORD *)(v0 + 272);
    swift_release(*(_QWORD *)(v0 + 352));
    sub_1004CB800(v26, &qword_1013E04D0);
LABEL_15:
    v32 = *(_QWORD *)(v0 + 336);
    v34 = *(_QWORD *)(v0 + 304);
    v33 = *(_QWORD *)(v0 + 312);
    v35 = *(_QWORD *)(v0 + 296);
    v36 = *(_QWORD *)(v0 + 272);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v37 = v0 + 16;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 32))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280));
  v38 = (id)static OS_os_log.crlDefault;
  v40 = static os_log_type_t.default.getter(v39);
  sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v40, "Opening URL to start share acceptance flow.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  v41 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  *(_QWORD *)(v0 + 392) = v41;
  URL._bridgeToObjectiveC()(v42);
  v44 = v43;
  *(_QWORD *)(v0 + 400) = v43;
  sub_1008D711C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1004B7878((unint64_t *)&qword_1013DEE88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF47EC);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v0 + 408) = isa;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = v0 + 416;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_100906C44;
  v46 = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 152) = _NSConcreteStackBlock;
  v47 = (_QWORD *)(v0 + 152);
  v47[1] = 0x40000000;
  v47[2] = sub_10091D2A0;
  v47[3] = &unk_101288220;
  v47[4] = v46;
  objc_msgSend(v41, "openURL:options:completionHandler:", v44, isa, v47);
  swift_continuation_await(v37);
}

uint64_t sub_100906A90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 376));
  return swift_task_switch(sub_100906ADC, *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 368));
}

uint64_t sub_100906ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 344);
  swift_release(*(_QWORD *)(v0 + 352));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100906B68()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 384));
  return swift_task_switch(sub_100906BB4, *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 368));
}

uint64_t sub_100906BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 352));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100906C44()
{
  uint64_t v0;

  return swift_task_switch(sub_100906C88, *(_QWORD *)(*(_QWORD *)v0 + 360), *(_QWORD *)(*(_QWORD *)v0 + 368));
}

uint64_t sub_100906C88()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)(v0 + 400);
  v1 = *(void **)(v0 + 408);
  v3 = *(void **)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 280);
  v7 = swift_release(*(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);

  v8 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100906D30(void *a1, char a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  NSString v49;
  id v50;
  __int128 v51;
  __int128 v52;
  _UNKNOWN **v53;

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v51 - v10;
  objc_msgSend(a1, "setActivityItemsConfigurationSource:", v2, v9);
  v12 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 5, v12);
  sub_1004B8460((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1009035AC();
  if (!v13)
  {
    __break(1u);
    goto LABEL_16;
  }
  v14 = v13;
  sub_10090373C();
  if (!v15)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v15;
  sub_1009035AC();
  if (v17)
  {
    v18 = v17;
    *((_QWORD *)&v52 + 1) = type metadata accessor for CRLBoardLibrary();
    v53 = &off_10129F588;
    *(_QWORD *)&v51 = v18;
  }
  else
  {
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
  }
  v19 = objc_allocWithZone((Class)type metadata accessor for CRLiOSFolderGridViewController(0));
  v20 = v2;
  v21 = (char *)sub_10091F80C((uint64_t)v7, v14, v16, (uint64_t)v20, (uint64_t)&v51, 1, v19);

  v22 = &v21[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider];
  *((_QWORD *)v22 + 1) = &off_101287D00;
  swift_unknownObjectWeakAssign(v22, v20);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v23 = objc_allocWithZone((Class)UINavigationController);
  v24 = objc_msgSend(v23, "initWithRootViewController:", v21, (_QWORD)v51);
  objc_msgSend(v24, "setDelegate:", v20);
  v25 = sub_1009038CC();
  objc_msgSend(v25, "setViewController:forColumn:", v24, 2);

  v26 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack];
  v27 = sub_1004B804C(&qword_1014072D0);
  v28 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 72);
  v31 = *(unsigned __int8 *)(v29 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject(v27, v32 + v30, v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_100EF5E40;
  v34 = v33 + v32;
  sub_1004B8460((uint64_t)&v21[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder], v34, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_storeEnumTagMultiPayload(v34, v28, 1);
  swift_beginAccess(v26 + 16, &v51, 1, 0);
  *(_QWORD *)(v26 + 16) = v33;
  swift_retain(v26);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease();
  v35 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCD00 != -1)
    swift_once(&qword_1013DCD00, sub_10068F12C);
  objc_msgSend(v35, "postNotificationName:object:", qword_10147EF10, v26);

  swift_bridgeObjectRelease();
  swift_release(v26);
  v36 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithWindowScene:", a1);
  v37 = sub_1009038CC();
  objc_msgSend(v36, "setRootViewController:", v37);

  if ((a2 & 1) == 0)
    goto LABEL_12;
  v38 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v39 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v38, "setBackgroundColor:", v39);

  v40 = sub_1009038CC();
  v41 = objc_msgSend(v40, "view");

  if (!v41)
    goto LABEL_17;
  objc_msgSend(v41, "addSubview:", v38);

  v42 = sub_1009038CC();
  v43 = objc_msgSend(v42, "view");

  if (!v43)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_1008900A0(v38, v43);

LABEL_12:
  v44 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  v45 = *(void **)&v20[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window] = v36;
  v46 = v36;

  v47 = *(void **)&v20[v44];
  if (v47)
  {
    v48 = v47;
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v49);

    objc_msgSend(v48, "setTintColor:", v50);
  }
  objc_msgSend(v46, "makeKeyAndVisible");

}

double sub_10090726C(void *a1, void *a2, char a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  double result;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  char v31;
  char v32;
  id v33;
  uint64_t v34;
  NSString v35;
  _BYTE v36[48];
  _BYTE v37[72];
  _BYTE v38[24];

  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, v38, 0, 0);
  v8 = (void *)static OS_os_log.sceneManagement;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v37);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
  *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = a1;
  v11 = v8;
  v12 = a1;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v14, "Scene delegate (%p) performing cleanup", 38, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  objc_msgSend(a2, "removeFromSuperview");
  v16 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v17 = swift_initStackObject(v16, v36);
  *(_OWORD *)(v17 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v17 + 32) = sub_1009093EC();
  v18 = sub_1009093FC();
  *(_QWORD *)(v17 + 40) = v18;
  specialized Array._endMutation()(v18);
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    sub_1009099BC(v19);

    v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v17);
  }
  else
  {
    v21 = *(id *)(v17 + 32);
    sub_1009099BC(v21);

    v20 = *(id *)(v17 + 40);
  }
  v22 = v20;
  sub_1009099BC(v20);

  swift_bridgeObjectRelease();
  result = sub_100909650();
  if ((a3 & 1) == 0 || *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt])
  {
    v24 = sub_1009038CC();
    v25 = objc_msgSend(v24, "presentedViewController");

    if (!v25)
      goto LABEL_15;
    v26 = objc_opt_self(UINavigationController);
    v27 = (void *)swift_dynamicCastObjCClass(v25, v26);
    if (v27)
    {
      v28 = objc_msgSend(v27, "topViewController");

      if (!v28)
        goto LABEL_15;
      v29 = type metadata accessor for CRLiOSBoardViewController(0);
      v30 = (id)swift_dynamicCastClass(v28, v29);
      v25 = v28;
      if (v30)
      {
        sub_100947168();
        if ((v31 & 1) != 0)
        {
LABEL_13:
          sub_1009474EC(v30, 0, 0);
LABEL_17:

          return result;
        }
LABEL_16:
        v33 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v34 = sub_1000717C8();
        v35 = String._bridgeToObjectiveC()();
        objc_msgSend(v33, "setInteger:forKey:", v34, v35);

        goto LABEL_17;
      }
    }

LABEL_15:
    v30 = sub_1009038CC();
    sub_100947168();
    if ((v32 & 1) != 0)
      goto LABEL_13;
    goto LABEL_16;
  }
  if (a4 == 2)
    return sub_100917FF0();
  if (a4 == 1)
    return sub_100917750();
  return result;
}

void sub_1009075E8(char *a1, void *a2, void *a3, void (*a4)(__n128), uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void (*v63)(__n128);
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  void (*v67)(__n128);
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[24];
  uint64_t v71;
  _BYTE v72[24];
  char v73[24];
  char v74[32];

  v67 = a4;
  v13 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void **)&a1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  if (!v17
    || (v18 = objc_msgSend(v17, "rootViewController", v14)) == 0
    || (v19 = v18,
        v20 = objc_msgSend(v18, "crl_windowWrapper"),
        v19,
        !v20)
    || (v21 = objc_msgSend(v20, "newWrapperBeginningIgnoringUserInteractionSafely"), v20, !v21))
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v74, 0, 0);
    v22 = (id)static OS_os_log.crlError;
    v23 = static os_log_type_t.error.getter(v22);
    sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v23, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    v21 = 0;
  }
  v24 = (_BYTE *)(a6 + 16);
  v25 = objc_msgSend(a2, "cloudKitShareMetadata");
  if (v25)
  {
    v26 = v25;
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v72, 0, 0);
    v27 = (void *)static OS_os_log.sceneManagement;
    v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v28, &v68);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = a1;
    v30 = v27;
    v31 = a1;
    v33 = static os_log_type_t.default.getter(v32);
    sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v33, "Scene delegate (%p) accepting CloudKit share", 44, 2, inited);
    swift_setDeallocating(inited);
    v34 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v34);

    sub_10090CFDC(v26);
  }
  else if (a3)
  {
    v35 = qword_1013DD820;
    v36 = a3;
    if (v35 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v72, 0, 0);
    v37 = (void *)static OS_os_log.sceneManagement;
    v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v39 = swift_initStackObject(v38, &v69);
    *(_OWORD *)(v39 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v39 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(v39 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v39 + 32) = a1;
    v40 = a1;
    v41 = v37;
    v43 = static os_log_type_t.default.getter(v42);
    sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "Scene delegate (%p) handling user activity", 42, 2, v39);
    swift_setDeallocating(v39);
    v44 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v39 + 32, 1, v44);

    v45 = (_QWORD *)swift_allocObject(&unk_101288338, 56, 7);
    v45[2] = v40;
    v45[3] = v36;
    v45[4] = v67;
    v45[5] = a5;
    v45[6] = v21;
    v46 = v21;
    v47 = v40;
    v48 = v36;
    swift_retain(a5);
    sub_100902400((uint64_t)sub_10092242C, (uint64_t)v45);

    swift_release(v45);
    swift_beginAccess(v24, v70, 1, 0);
    *v24 = 1;
  }
  else if ((a7 & 1) != 0)
  {
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v72, 0, 0);
    v49 = (void *)static OS_os_log.sceneManagement;
    v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v51 = swift_initStackObject(v50, &v71);
    *(_OWORD *)(v51 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v51 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(v51 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v51 + 32) = a1;
    v52 = a1;
    v53 = v49;
    v55 = static os_log_type_t.default.getter(v54);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v55, "Scene delegate (%p) showing new board before First Launch", 57, 2, v51);
    swift_setDeallocating(v51);
    v56 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v51 + 32, 1, v56);

    v57 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v16, 1, 1, v57);
    type metadata accessor for MainActor(0);
    v58 = v21;
    v59 = v52;
    swift_retain(a5);
    v61 = static MainActor.shared.getter(v60);
    v62 = (_QWORD *)swift_allocObject(&unk_101288310, 64, 7);
    v62[2] = v61;
    v62[3] = &protocol witness table for MainActor;
    v63 = v67;
    v62[4] = v59;
    v62[5] = v63;
    v62[6] = a5;
    v62[7] = v21;
    v64 = sub_100521B98((uint64_t)v16, (uint64_t)&unk_1013FA578, (uint64_t)v62);
    swift_release(v64);
    swift_beginAccess(v24, v70, 1, 0);
    *v24 = 1;
  }
  v65 = swift_beginAccess(v24, v73, 0, 0);
  if (*v24 != 1)
  {
    v67(v65);
    objc_msgSend(v21, "endIgnoringUserInteractionSafely");
  }

}

uint64_t sub_100907C38(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v10 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = a5;
  v15 = a1;
  v16 = a2;
  swift_retain(a4);
  v18 = static MainActor.shared.getter(v17);
  v19 = (_QWORD *)swift_allocObject(&unk_1012882E8, 72, 7);
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v15;
  v19[5] = v16;
  v19[6] = a3;
  v19[7] = a4;
  v19[8] = a5;
  return sub_100521B98((uint64_t)v12, (uint64_t)&unk_1013FA570, (uint64_t)v19);
}

uint64_t sub_100907D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;

  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v10 = type metadata accessor for MainActor(0);
  v8[5] = v10;
  v8[6] = static MainActor.shared.getter(v10);
  v11 = (_QWORD *)swift_task_alloc(dword_1013FA26C);
  v8[7] = v11;
  *v11 = v8;
  v11[1] = sub_100907DCC;
  return sub_10090A1EC(a5);
}

uint64_t sub_100907DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100907E3C, v2, v3);
}

uint64_t sub_100907E3C()
{
  uint64_t v0;
  void *v1;
  void (*v2)(__n128);
  __n128 v3;

  v1 = *(void **)(v0 + 32);
  v2 = *(void (**)(__n128))(v0 + 16);
  v3 = swift_release(*(_QWORD *)(v0 + 48));
  v2(v3);
  objc_msgSend(v1, "endIgnoringUserInteractionSafely");
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100907E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v7[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v7[7] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v7[8] = v10;
  v7[9] = v11;
  return swift_task_switch(sub_100907F20, v10, v11);
}

uint64_t sub_100907F20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v1 = v0[6];
  v2 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v0[10] = v9;
  v10 = (uint64_t **)swift_task_alloc(dword_1013FA3D4);
  v0[11] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_100908058;
  return sub_10090546C(v0[6], v7, v9, 0);
}

uint64_t sub_100908058(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 48);
  swift_task_dealloc(*(_QWORD *)(*v1 + 88));
  swift_bridgeObjectRelease();

  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_1009080D0, *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
}

uint64_t sub_1009080D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(__n128);
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void **)(v0 + 40);
  v3 = *(void (**)(__n128))(v0 + 24);
  v4 = swift_release(*(_QWORD *)(v0 + 56));
  v3(v4);
  objc_msgSend(v2, "endIgnoringUserInteractionSafely");
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009081A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v5[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v5[3] = v7;
  v5[4] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA524);
  v5[5] = v8;
  *v8 = v5;
  v8[1] = sub_100908218;
  return sub_100906434(a5);
}

uint64_t sub_100908218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100908288, v2, v3);
}

uint64_t sub_100908288()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight) = 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_100908380(char *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  char v29[48];
  uint64_t v30;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = __chkstk_darwin(v9);
  v14 = &v29[-v13 - 8];
  a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing] = 1;
  if (a2)
    a2(v12);
  sub_1009035AC();
  if (v15)
  {
    v16 = v15;
    sub_100CA3B44(a1);

    sub_100C1E6AC();
    a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed] = 1;
    sub_100903288((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E3830);
    }
    else
    {
      sub_1004B84E0((uint64_t)v6, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v11, v7) == 2)
      {
        v17 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease(*(_QWORD *)&v11[*(int *)(v17 + 48) + 8]);
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_10090399C();
        v19 = v18;
        sub_100505AEC((uint64_t)v14, 1);

      }
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    v20 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v20, v29);
    *(_OWORD *)(inited + 16) = xmmword_100EF5560;
    *(_QWORD *)(inited + 32) = sub_1009093EC();
    v22 = sub_1009093FC();
    *(_QWORD *)(inited + 40) = v22;
    v30 = inited;
    specialized Array._endMutation()(v22);
    v23 = v30;
    if ((v30 & 0xC000000000000001) != 0)
    {
      v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v30);
      sub_1009099BC(v24);

      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v23);
    }
    else
    {
      v26 = *(id *)(v30 + 32);
      sub_1009099BC(v26);

      v25 = *(id *)(v23 + 40);
    }
    v27 = v25;
    sub_1009099BC(v25);

    swift_bridgeObjectRelease(v23);
    sub_100909650();
  }
  else
  {
    __break(1u);
  }
}

void sub_1009087C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26[24];

  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = (char *)sub_100903068();
  if (v11)
  {
    v12 = v11;
    v25 = a1;
    sub_1009035AC();
    if (!v13)
    {
      __break(1u);
      return;
    }
    v14 = v13;
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_syncPriorityProvider];
    swift_retain(v15);

    v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v26, 0, 0);
    sub_1004B8460(v18, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v17);
    v19 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v19);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    swift_release(v17);
    v20 = (uint64_t *)(*(_QWORD *)&v12[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain(v22);
    sub_10067AFD0((uint64_t)v7, v21, v22, (uint64_t)v10);
    sub_100581210((uint64_t)v10);
    swift_release(v15);

    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    a1 = v25;
  }
  v23 = sub_1009093FC();
  objc_msgSend(v23, "becomeCurrent");

  v24 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD518 != -1)
    swift_once(&qword_1013DD518, sub_100902F24);
  objc_msgSend(v24, "postNotificationName:object:", qword_10147FF50, a1);

}

void sub_100908C18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  id v32;
  id v33;
  _OWORD v34[3];
  _OWORD v35[2];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1009038CC();
  v6 = objc_msgSend(v5, "presentedViewController");

  if (v6)
  {
    v7 = objc_opt_self(UINavigationController);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (!v8)
      goto LABEL_14;
    v9 = objc_msgSend(v8, "topViewController");

    if (!v9)
      goto LABEL_15;
    v10 = type metadata accessor for CRLiOSBoardViewController(0);
    v11 = (void *)swift_dynamicCastClass(v9, v10);
    if (!v11)
    {
LABEL_13:
      v6 = v9;
      goto LABEL_14;
    }
    v12 = objc_msgSend(v11, "presentedViewController");

    if (v12)
    {
      v13 = objc_opt_self(_UIStickerPickerViewController);
      v14 = swift_dynamicCastObjCClass(v12, v13);

      if (v14)
      {
        v15 = sub_1009038CC();
        v6 = objc_msgSend(v15, "presentedViewController");

        if (v6)
        {
          v16 = objc_opt_self(UINavigationController);
          v17 = (void *)swift_dynamicCastObjCClass(v6, v16);
          if (v17)
          {
            v9 = objc_msgSend(v17, "topViewController");

            if (!v9)
              goto LABEL_15;
            v18 = (void *)swift_dynamicCastClass(v9, v10);
            if (v18)
            {
              v6 = objc_msgSend(v18, "presentedViewController");

              if (!v6)
                goto LABEL_15;
              objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 0, 0);
              goto LABEL_14;
            }
            goto LABEL_13;
          }
LABEL_14:

        }
      }
    }
  }
LABEL_15:
  v19 = sub_1009038CC();
  v20 = objc_msgSend(v19, "presentedViewController");

  if (!v20)
    goto LABEL_21;
  v21 = objc_opt_self(UINavigationController);
  v22 = (void *)swift_dynamicCastObjCClass(v20, v21);
  if (!v22)
    goto LABEL_20;
  v23 = objc_msgSend(v22, "topViewController");

  if (!v23)
    goto LABEL_21;
  v24 = type metadata accessor for CRLiOSBoardViewController(0);
  v25 = swift_dynamicCastClass(v23, v24);
  if (v25)
  {
    v26 = v25;
    sub_100C26214((uint64_t)v34);
    v27 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v4, 1, 1, v27);
    v28 = swift_allocObject(&unk_1012880C8, 113, 7);
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0;
    *(_QWORD *)(v28 + 32) = v26;
    v29 = v34[0];
    *(_OWORD *)(v28 + 56) = v34[1];
    v30 = v35[0];
    *(_OWORD *)(v28 + 72) = v34[2];
    *(_OWORD *)(v28 + 88) = v30;
    *(_OWORD *)(v28 + 97) = *(_OWORD *)((char *)v35 + 9);
    *(_OWORD *)(v28 + 40) = v29;
    v20 = v23;
    sub_10092217C(v34, (void (*)(uint64_t, uint64_t))sub_10057939C);
    v31 = sub_1009880C4((uint64_t)v4, (uint64_t)&unk_1013FA4E0, v28);
    swift_release(v31);
    sub_10092217C(v34, (void (*)(uint64_t, uint64_t))sub_1004BE2FC);
    sub_1004CB800((uint64_t)v4, &qword_1013E01F0);
LABEL_20:

    goto LABEL_21;
  }

LABEL_21:
  v32 = sub_1009093EC();
  sub_1009099BC(v32);

  v33 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD530 != -1)
    swift_once(&qword_1013DD530, sub_100902FE4);
  objc_msgSend(v33, "postNotificationName:object:", qword_10147FF68, a1);

}

uint64_t sub_10090900C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_100909098, v7, v8);
}

uint64_t sub_100909098()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v1 = v0[4];
  v2 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v0[8] = v9;
  v10 = (uint64_t **)swift_task_alloc(dword_1013FA3D4);
  v0[9] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_1009091CC;
  return sub_10090546C(v0[4], v7, v9, 1);
}

uint64_t sub_1009091CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 80) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_100909248, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100909248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  *v3 = v1;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1009093EC()
{
  return sub_10090940C(&OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___stateRestorationUserActivity, 0);
}

id sub_1009093FC()
{
  return sub_10090940C(&OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___handoffUserActivity, 2u);
}

id sub_10090940C(uint64_t *a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v17;

  v5 = v2;
  v6 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = *(void **)(v5 + *a1);
  if (v10)
  {
    v11 = *(id *)(v5 + *a1);
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013F8A40, NSUserActivity_ptr);
    v12 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    v13 = sub_10087430C(a2, 1, (uint64_t)v8);
    objc_msgSend(v13, "setDelegate:", v5);
    objc_msgSend(v13, "setNeedsSave:", 1);
    v14 = *(void **)(v5 + v9);
    *(_QWORD *)(v5 + v9) = v13;
    v11 = v13;

    v10 = 0;
  }
  v15 = v10;
  return v11;
}

double sub_100909650()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1009038CC();
  v5 = objc_msgSend(v4, "presentedViewController");

  if (!v5)
    goto LABEL_6;
  v6 = objc_opt_self(UINavigationController);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (!v7)
    goto LABEL_5;
  v8 = objc_msgSend(v7, "topViewController");

  if (v8)
  {
    v9 = type metadata accessor for CRLiOSBoardViewController(0);
    v10 = (id)swift_dynamicCastClass(v8, v9);
    v5 = v8;
    if (v10)
      goto LABEL_7;
LABEL_5:

  }
LABEL_6:
  v10 = sub_1009038CC();
LABEL_7:
  v11 = (void *)sub_10090DD50(v10);
  v13 = v12;

  if (v11)
  {
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
    type metadata accessor for MainActor(0);
    v16 = v11;
    v17 = v0;
    v18 = static MainActor.shared.getter(v17);
    v19 = (_QWORD *)swift_allocObject(&unk_1012880A0, 56, 7);
    v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v16;
    v19[5] = v13;
    v19[6] = v17;
    v20 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013FA4D0, (uint64_t)v19);

    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

uint64_t sub_1009097F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[7] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[8] = v8;
  v6[9] = v9;
  return swift_task_switch(sub_100909864, v8, v9);
}

void sub_100909864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int *v7;

  v1 = v0[4];
  ObjectType = swift_getObjectType(v1);
  v0[2] = v1;
  v0[10] = ObjectType;
  sub_1009035AC();
  v0[11] = v3;
  if (v3)
  {
    v4 = v3;
    v5 = *(int **)(v0[5] + 8);
    v7 = (int *)((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc(v5[1]);
    v0[12] = v6;
    *v6 = v0;
    v6[1] = sub_100909914;
    ((void (*)(uint64_t, _UNKNOWN **, uint64_t, _QWORD))v7)(v4, &off_10129F490, ObjectType, v0[5]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100909914()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));

  return swift_task_switch(sub_100909964, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100909964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_release(*(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 24) = v3;
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 16))(v1, v2, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009099BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  unint64_t v44;
  Class isa;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  void *v47;
  void *v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  Class v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[112];
  uint64_t v73;
  void *v74;
  _BYTE v75[104];

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v71 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v70 = (uint64_t)&v69 - v9;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v69 - v14;
  v16 = objc_msgSend(a1, "activityType");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = sub_100874944(v17, v19);
  v21 = sub_100873F84(v20);
  v23 = v22;
  if (v21 == 0xD00000000000001ALL && v22 == 0x8000000100FAA3B0)
  {
    swift_bridgeObjectRelease(0x8000000100FAA3B0);
LABEL_5:
    return;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0xD00000000000001ALL, 0x8000000100FAA3B0, 0);
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v23).n128_u64[0];
  if ((v24 & 1) != 0)
    goto LABEL_5;
  v26 = objc_msgSend(a1, "activityType", v25);
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  if ((sub_100874944(v27, v29) | 2) != 2)
  {
    goto LABEL_18;
  }
  v30 = sub_1009038CC();
  v31 = objc_msgSend(v30, "presentedViewController");

  if (v31)
  {
    v32 = objc_opt_self(UINavigationController);
    v33 = (void *)swift_dynamicCastObjCClass(v31, v32);
    if (v33)
    {
      v34 = objc_msgSend(v33, "topViewController");

      if (!v34)
        goto LABEL_16;
      v35 = type metadata accessor for CRLiOSBoardViewController(0);
      v36 = (void *)swift_dynamicCastClass(v34, v35);
      if (v36)
      {
        objc_msgSend(v36, "loadViewIfNeeded");
        sub_1009E98A4(a1);
      }
    }
    else
    {
      v34 = v31;
    }

  }
LABEL_16:
  v37 = (void *)sub_100903140();
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v37, "loadViewIfNeeded");
    v39 = sub_1004B804C(&qword_1013E49B0);
    inited = swift_initStackObject(v39, v72);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    sub_100BCB498();
    v73 = v41;
    v74 = v42;
    AnyHashable.init<A>(_:)(&v73, &type metadata for String, &protocol witness table for String);
    v43 = sub_100DA9FF0();
    *(_QWORD *)(inited + 96) = sub_1004B804C(&qword_1013FA4C0);
    *(_QWORD *)(inited + 72) = v43;
    v44 = sub_1008D5828(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "addUserInfoEntriesFromDictionary:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  }
LABEL_18:
  sub_100903288((uint64_t)v15);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v46(v15, 1, v2) == 1)
  {
    sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E3830);
LABEL_25:
    sub_100903288((uint64_t)v13);
    if (v46(v13, 1, v2) == 1)
    {
      sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3830);
    }
    else
    {
      sub_100BCC934(a1);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    v54 = 0;
    goto LABEL_29;
  }
  sub_1009035AC();
  if (!v47)
  {
    __break(1u);
    return;
  }
  v48 = v47;
  v49 = sub_100BCC6EC();

  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if ((v49 & 1) == 0)
    goto LABEL_25;
  v50 = sub_100903140();
  if (v50)
  {
    v51 = (void *)v50;
    sub_1004B8460(v50 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);

    v52 = v70;
    sub_1004B84E0((uint64_t)v8, v70, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v53 = v71;
    sub_1004B8460(v52, v71, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    swift_storeEnumTagMultiPayload(v53, v2, 1);
    sub_100BCC934(a1);
    sub_1004B84A4(v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4(v52, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  v54 = 1;
LABEL_29:
  v55 = sub_1004B804C(&qword_1013E49B0);
  v56 = swift_initStackObject(v55, v75);
  *(_OWORD *)(v56 + 16) = xmmword_100EF5E40;
  v73 = qword_1013FA120;
  v74 = off_1013FA128;
  swift_bridgeObjectRetain(off_1013FA128);
  AnyHashable.init<A>(_:)(&v73, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v56 + 96) = &type metadata for Bool;
  *(_BYTE *)(v56 + 72) = v54;
  v57 = sub_1008D5828(v56);
  v58 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "addUserInfoEntriesFromDictionary:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

  objc_msgSend(a1, "setNeedsSave:", 1);
  v59 = objc_msgSend(a1, "activityType");
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v62 = v61;

  v63 = sub_100874944(v60, v62);
  v64 = sub_100873F84(v63);
  v66 = v65;
  if (v64 == 0xD000000000000027 && v65 == 0x8000000100FAA2A0)
  {
    v67 = swift_bridgeObjectRelease(0x8000000100FAA2A0).n128_u64[0];
LABEL_33:
    objc_msgSend(a1, "becomeCurrent", *(double *)&v67);
    return;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, 0xD000000000000027, 0x8000000100FAA2A0, 0);
  v67 = swift_bridgeObjectRelease(v66).n128_u64[0];
  if ((v68 & 1) != 0)
    goto LABEL_33;
}

uint64_t sub_10090A1EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2[84] = v1;
  v2[83] = a1;
  v3 = sub_1004B804C(&qword_1013E0270);
  v2[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[86] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[87] = v5;
  v2[88] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[89] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v2[90] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[91] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[92] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[93] = swift_task_alloc(v10);
  v2[94] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v2[95] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v2[96] = v12;
  v2[97] = v13;
  return swift_task_switch(sub_10090A328, v12, v13);
}

void sub_10090A328()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(void *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  int v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  NSString v45;
  id v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  id v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  double v94;
  char v95;
  void *v96;
  NSString v97;
  Class isa;
  id v99;
  uint64_t v100;
  void *v101;
  void *v102;
  unsigned __int8 v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  void *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;

  sub_10090399C();
  v2 = v1;
  objc_msgSend(v1, "loadViewIfNeeded");

  if ((sub_10090B73C() & 1) != 0)
  {
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    v3 = *(_QWORD *)(v0 + 712);
    v4 = *(void **)(v0 + 672);
    swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 608, 0, 0);
    v5 = (void *)static OS_os_log.sceneManagement;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v6, v0 + 320);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = v4;
    v8 = v4;
    v9 = v5;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "Scene delete (%p) creating new board instead of restoring a discardable board.", 78, 2, inited);
    swift_setDeallocating(inited);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v12);

    v13 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 5, v13);
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    *(_QWORD *)(v0 + 872) = v20;
    v21 = (_QWORD *)swift_task_alloc(dword_1013FA3D4);
    *(_QWORD *)(v0 + 880) = v21;
    v22 = sub_10090B3F8;
LABEL_5:
    *v21 = v0;
    v21[1] = v22;
    sub_10090546C(*(_QWORD *)(v0 + 712), v18, v20, 1);
    return;
  }
  v23 = *(_QWORD *)(v0 + 736);
  v24 = *(_QWORD *)(v0 + 728);
  v25 = *(_QWORD *)(v0 + 720);
  sub_100874730(v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v24) != 1)
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 720), *(_QWORD *)(v0 + 752), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1009035AC();
    if (!v48)
    {
      __break(1u);
      return;
    }
    v49 = v48;
    v50 = *(_QWORD *)(v0 + 752);
    v51 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
    swift_bridgeObjectRetain(v51);

    v52 = swift_task_alloc(32);
    *(_QWORD *)(v52 + 16) = v50;
    sub_1007C2808(1, (uint64_t (*)(id))sub_100921F90, v52, v51);
    v54 = v53;
    swift_bridgeObjectRelease();
    swift_task_dealloc(v52);
    if (!v54)
    {
      swift_release(*(_QWORD *)(v0 + 760));
      if (qword_1013DD820 != -1)
        swift_once(&qword_1013DD820, sub_100A04A9C);
      v63 = *(_QWORD *)(v0 + 752);
      v64 = *(void **)(v0 + 672);
      swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 536, 0, 0);
      v65 = (void *)static OS_os_log.sceneManagement;
      v66 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v67 = swift_initStackObject(v66, v0 + 208);
      *(_OWORD *)(v67 + 16) = xmmword_100EF5A10;
      *(_QWORD *)(v67 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
      *(_QWORD *)(v67 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v67 + 32) = v64;
      v68 = v64;
      v69 = v65;
      v70 = sub_100BCCD38();
      v72 = v71;
      *(_QWORD *)(v67 + 96) = &type metadata for String;
      *(_QWORD *)(v67 + 104) = sub_1004CFC2C();
      *(_QWORD *)(v67 + 72) = v70;
      *(_QWORD *)(v67 + 80) = v72;
      v74 = static os_log_type_t.default.getter(v73);
      sub_100A06EBC((uint64_t)v69, &_mh_execute_header, v74, "Scene delete (%p) ignoring user activity because item was not found: %@", 71, 2, v67);
      swift_setDeallocating(v67);
      v75 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v67 + 32, 2, v75);

      sub_1004B84A4(v63, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_29:
      v88 = *(_QWORD *)(v0 + 744);
      v89 = *(_QWORD *)(v0 + 720);
      v90 = *(_QWORD *)(v0 + 712);
      v91 = *(_QWORD *)(v0 + 704);
      v92 = *(_QWORD *)(v0 + 680);
      swift_task_dealloc(*(_QWORD *)(v0 + 752));
      swift_task_dealloc(v88);
      swift_task_dealloc(v89);
      swift_task_dealloc(v90);
      swift_task_dealloc(v91);
      swift_task_dealloc(v92);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v55 = *(void **)(v0 + 664);

    v56 = objc_msgSend(v55, "activityType");
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v59 = v58;

    v60 = sub_100874944(v57, v59);
    v61 = sub_100873F84(v60);
    if (v61 == 0xD000000000000027 && v62 == 0x8000000100FAA2A0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, 0xD000000000000027, 0x8000000100FAA2A0, 0);
      *(_QWORD *)&v94 = swift_bridgeObjectRelease().n128_u64[0];
      v95 = 0;
      if ((v93 & 1) == 0)
        goto LABEL_32;
    }
    v96 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v97 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(2);
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v95 = 1;
    objc_msgSend(v96, "sendEventInDomain:lazily:eventPayload:", v97, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

LABEL_32:
    *(_BYTE *)(v0 + 888) = v95;
    v99 = objc_msgSend(*(id *)(v0 + 664), "activityType", v94);
    v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
    v102 = v101;

    v103 = sub_100874944(v100, v102);
    v104 = sub_100873F84(v103);
    if (v104 == 0xD000000000000033 && v105 == 0x8000000100FAA220)
    {
      swift_bridgeObjectRelease();
      v106 = 1;
    }
    else
    {
      v106 = _stringCompareWithSmolCheck(_:_:expecting:)(v104, v105, 0xD000000000000033, 0x8000000100FAA220, 0);
      swift_bridgeObjectRelease();
    }
    *(_BYTE *)(v0 + 889) = v106 & 1;
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    v107 = *(void **)(v0 + 672);
    v108 = *(_QWORD *)(v0 + 664);
    swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 584, 0, 0);
    v109 = (void *)static OS_os_log.sceneManagement;
    v110 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 784) = v110;
    v111 = swift_initStackObject(v110, v0 + 16);
    *(_OWORD *)(v111 + 16) = xmmword_100EF5E30;
    *(_QWORD *)(v111 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(v111 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v111 + 32) = v107;
    *(_QWORD *)(v111 + 96) = &type metadata for Bool;
    *(_QWORD *)(v111 + 104) = &protocol witness table for Bool;
    *(_BYTE *)(v111 + 72) = v106 & 1;
    *(_QWORD *)(v111 + 136) = &type metadata for Bool;
    *(_QWORD *)(v111 + 144) = &protocol witness table for Bool;
    *(_BYTE *)(v111 + 112) = v95;
    v112 = v109;
    v113 = v107;
    v114 = sub_100BCCD38();
    v116 = v115;
    *(_QWORD *)(v111 + 176) = &type metadata for String;
    v117 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 792) = v117;
    *(_QWORD *)(v111 + 184) = v117;
    *(_QWORD *)(v111 + 152) = v114;
    *(_QWORD *)(v111 + 160) = v116;
    v119 = static os_log_type_t.default.getter(v118);
    sub_100A06EBC((uint64_t)v112, &_mh_execute_header, v119, "Scene delete (%p) handling user activity. isStateRestoration = %d, isHandoff = %d, item = %@", 92, 2, v111);
    swift_setDeallocating(v111);
    v120 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 800) = v120;
    swift_arrayDestroy(v111 + 32, 4, v120);

    v121 = (_QWORD *)swift_task_alloc(dword_1013FA334);
    *(_QWORD *)(v0 + 808) = v121;
    *v121 = v0;
    v121[1] = sub_10090B054;
    sub_10090BA30(*(_QWORD *)(v0 + 752), 0, ((v95 | v106) & 1) == 0, v108);
    return;
  }
  v26 = *(void **)(v0 + 664);
  sub_1004CB800(*(_QWORD *)(v0 + 720), (uint64_t *)&unk_1013E3830);
  v27 = objc_msgSend(v26, "activityType");
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = sub_100874944(v28, v30);
  if (v31 != 8)
  {
    if (v31 == 6)
    {
      if (qword_1013DD820 != -1)
        swift_once(&qword_1013DD820, sub_100A04A9C);
      v32 = *(_QWORD *)(v0 + 712);
      v33 = *(void **)(v0 + 672);
      swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 632, 0, 0);
      v34 = (void *)static OS_os_log.sceneManagement;
      v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v36 = swift_initStackObject(v35, v0 + 392);
      *(_OWORD *)(v36 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v36 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
      *(_QWORD *)(v36 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v36 + 32) = v33;
      v37 = v33;
      v38 = v34;
      v40 = static os_log_type_t.default.getter(v39);
      sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v40, "Scene delete (%p) creating new board.", 37, 2, v36);
      swift_setDeallocating(v36);
      v41 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v36 + 32, 1, v41);

      v42 = sub_1004B804C(&qword_1013E1790);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v32, 1, 5, v42);
      v43 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v44 = String._bridgeToObjectiveC()();
      v45 = String._bridgeToObjectiveC()();
      v46 = objc_msgSend(v43, "localizedStringForKey:value:table:", v44, v45, 0);

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v20 = v47;

      *(_QWORD *)(v0 + 824) = v20;
      v21 = (_QWORD *)swift_task_alloc(dword_1013FA3D4);
      *(_QWORD *)(v0 + 832) = v21;
      v22 = sub_10090B210;
      goto LABEL_5;
    }
    swift_release(*(_QWORD *)(v0 + 760));
    goto LABEL_29;
  }
  v76 = *(_QWORD *)(v0 + 696);
  v77 = *(_QWORD *)(v0 + 688);
  v78 = *(_QWORD *)(v0 + 680);
  sub_10090C9F0(*(void **)(v0 + 664), v78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v78, 1, v77) == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 680), &qword_1013E0270);
    v79 = sub_100920650(1u);
    *(_QWORD *)(v0 + 848) = v79;
    v80 = sub_1009038CC();
    v81 = objc_msgSend(v80, "presentedViewController");

    if (v81)
    {
      v82 = objc_opt_self(UINavigationController);
      v83 = (void *)swift_dynamicCastObjCClass(v81, v82);
      if (!v83)
      {
LABEL_25:

        goto LABEL_26;
      }
      v84 = objc_msgSend(v83, "topViewController");

      if (v84)
      {
        v85 = type metadata accessor for CRLiOSBoardViewController(0);
        v86 = (id)swift_dynamicCastClass(v84, v85);
        v81 = v84;
        if (v86)
        {
LABEL_27:
          *(_QWORD *)(v0 + 856) = v86;
          v87 = (_QWORD *)swift_task_alloc(dword_10140053C);
          *(_QWORD *)(v0 + 864) = v87;
          *v87 = v0;
          v87[1] = sub_10090B378;
          sub_1009DAE24((uint64_t)v79, 1);
          return;
        }
        goto LABEL_25;
      }
    }
LABEL_26:
    v86 = sub_1009038CC();
    goto LABEL_27;
  }
  sub_1004B84E0(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 704), type metadata accessor for CRLBoardIdentifier);
  v122 = (_QWORD *)swift_task_alloc(dword_1013FA4AC);
  *(_QWORD *)(v0 + 840) = v122;
  *v122 = v0;
  v122[1] = sub_10090B290;
  sub_10090C608(*(_QWORD *)(v0 + 704));
}

uint64_t sub_10090B054(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 808);
  *(_QWORD *)(*v2 + 816) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 776);
    v7 = *(_QWORD *)(v4 + 768);
    v8 = sub_10090B4FC;
  }
  else
  {

    v6 = *(_QWORD *)(v4 + 776);
    v7 = *(_QWORD *)(v4 + 768);
    v8 = sub_10090B0D0;
  }
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10090B0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 728);
  swift_release(*(_QWORD *)(v0 + 760));
  sub_1004B8460(v1, v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v2, v3) == 2)
  {
    v4 = *(_QWORD *)(v0 + 744);
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84A4(v4, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 752);
    v6 = *(_BYTE *)(v0 + 889) | *(_BYTE *)(v0 + 888);
    sub_1004B84A4(*(_QWORD *)(v0 + 744), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10090399C();
    v8 = v7;
    sub_100505AEC(v5, (v6 & 1) == 0);

  }
  sub_1004B84A4(*(_QWORD *)(v0 + 752), type metadata accessor for CRLBoardLibraryViewModel.Item);
  v9 = *(_QWORD *)(v0 + 744);
  v10 = *(_QWORD *)(v0 + 720);
  v11 = *(_QWORD *)(v0 + 712);
  v12 = *(_QWORD *)(v0 + 704);
  v13 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090B210(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 712);
  swift_task_dealloc(*(_QWORD *)(*v1 + 832));
  swift_bridgeObjectRelease();

  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_100922DE0, *(_QWORD *)(v3 + 768), *(_QWORD *)(v3 + 776));
}

uint64_t sub_10090B290()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 840));
  return swift_task_switch(sub_10090B2E0, *(_QWORD *)(v1 + 768), *(_QWORD *)(v1 + 776));
}

uint64_t sub_10090B2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 704);
  swift_release(*(_QWORD *)(v0 + 760));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 720);
  v4 = *(_QWORD *)(v0 + 712);
  v5 = *(_QWORD *)(v0 + 704);
  v6 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090B378()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(void **)(*v1 + 856);
  swift_task_dealloc(*(_QWORD *)(*v1 + 864));

  if (v0)
  {
    swift_errorRelease(v0);
    v4 = *(_QWORD *)(v2 + 776);
    v5 = *(_QWORD *)(v2 + 768);
    v6 = sub_10090B6A8;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 776);
    v5 = *(_QWORD *)(v2 + 768);
    v6 = sub_100922E3C;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10090B3F8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 712);
  swift_task_dealloc(*(_QWORD *)(*v1 + 880));
  swift_bridgeObjectRelease();

  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_10090B478, *(_QWORD *)(v3 + 768), *(_QWORD *)(v3 + 776));
}

uint64_t sub_10090B478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 760));
  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090B4FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 760));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 816);
  v2 = *(_QWORD *)(v0 + 800);
  v3 = *(_QWORD *)(v0 + 792);
  v4 = *(_QWORD *)(v0 + 784);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 560, 0, 0);
  v5 = (void *)static OS_os_log.crlError;
  inited = swift_initStackObject(v4, v0 + 464);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 656) = v1;
  v7 = v5;
  swift_errorRetain(v1);
  v8 = sub_1004B804C(&qword_1013E0210);
  v9 = String.init<A>(describing:)(v0 + 656, v8);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.debug.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Caught exception trying to show view controller while handling user activity. %@", 80, 2, inited);
  swift_errorRelease(v1);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v2);

  sub_1004B84A4(*(_QWORD *)(v0 + 752), type metadata accessor for CRLBoardLibraryViewModel.Item);
  v13 = *(_QWORD *)(v0 + 744);
  v14 = *(_QWORD *)(v0 + 720);
  v15 = *(_QWORD *)(v0 + 712);
  v16 = *(_QWORD *)(v0 + 704);
  v17 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090B6A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 848);
  swift_release(*(_QWORD *)(v0 + 760));
  sub_100CE39D8(v1);

  v2 = *(_QWORD *)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 720);
  v4 = *(_QWORD *)(v0 + 712);
  v5 = *(_QWORD *)(v0 + 704);
  v6 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090B73C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v25[2];
  _BYTE v26[40];
  __int128 v27;
  __int128 v28;

  v1 = v0;
  v2 = objc_msgSend(v0, "activityType");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = sub_100874944(v3, v5);
  v7 = sub_100873F84(v6);
  if (v7 == 0xD00000000000001BLL && v8 == 0x8000000100FAA350)
    goto LABEL_3;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0xD00000000000001BLL, 0x8000000100FAA350, 0);
  *(_QWORD *)&v11 = swift_bridgeObjectRelease().n128_u64[0];
  result = 0;
  if ((v10 & 1) != 0)
    return result;
  v12 = objc_msgSend(v1, "userInfo", v11);
  if (v12)
  {
    v13 = v12;
    v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v25[0] = qword_1013FA120;
    v25[1] = off_1013FA128;
    swift_bridgeObjectRetain(off_1013FA128);
    AnyHashable.init<A>(_:)(v25, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v14 + 16) && (v15 = sub_1008432BC((uint64_t)v26), (v16 & 1) != 0))
    {
      sub_1004CB6E8(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v27);
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_1004B89A4((uint64_t)v26);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v28 + 1))
    {
      if (swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
        return v26[0];
      goto LABEL_17;
    }
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  sub_1004CB800((uint64_t)&v27, &qword_1013E0230);
LABEL_17:
  v17 = objc_msgSend(v1, "activityType");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = sub_100874944(v18, v20);
  v22 = sub_100873F84(v21);
  if (v22 == 0xD000000000000018 && v23 == 0x8000000100FAA330)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 0;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0xD000000000000018, 0x8000000100FAA330, 0);
  swift_bridgeObjectRelease();
  result = 0;
  if ((v24 & 1) == 0)
  {
    return 0;
  }
  return result;
}

uint64_t sub_10090BA30(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v5 + 96) = a4;
  *(_QWORD *)(v5 + 104) = v4;
  *(_BYTE *)(v5 + 313) = a3;
  *(_BYTE *)(v5 + 312) = a2;
  *(_QWORD *)(v5 + 88) = a1;
  v6 = type metadata accessor for Date(0);
  *(_QWORD *)(v5 + 112) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 120) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 128) = swift_task_alloc(v8);
  *(_QWORD *)(v5 + 136) = swift_task_alloc(v8);
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(_QWORD *)(v5 + 144) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 152) = v10;
  *(_QWORD *)(v5 + 160) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 168) = swift_task_alloc(v11);
  *(_QWORD *)(v5 + 176) = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 184) = v12;
  *(_QWORD *)(v5 + 192) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 200) = v13;
  *(_QWORD *)(v5 + 208) = v14;
  return swift_task_switch(sub_10090BB40, v13, v14);
}

uint64_t sub_10090BB40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = sub_100903BFC();
  if ((v1 & 1) != 0)
  {
    v2 = v0[23];
    v0[27] = static MainActor.shared.getter(v1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    v0[28] = v3;
    v0[29] = v4;
    return swift_task_switch(sub_10090BBE0, v3, v4);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1013FA264);
    v0[33] = v6;
    *v6 = v0;
    v6[1] = sub_10090BD4C;
    return sub_100903EBC();
  }
}

uint64_t sub_10090BBE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v1[13];
  v1[30] = static MainActor.shared.getter(a1);
  v3 = swift_task_alloc(32);
  v1[31] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[32] = v4;
  *v4 = v1;
  v4[1] = sub_10090BC94;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10090BC94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 248);
  v3 = *(_QWORD *)(*v0 + 240);
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10090BCFC, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_10090BCFC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release(*(_QWORD *)(v0 + 216));
  v1 = (_QWORD *)swift_task_alloc(dword_1013FA264);
  *(_QWORD *)(v0 + 264) = v1;
  *v1 = v0;
  v1[1] = sub_10090BD4C;
  return sub_100903EBC();
}

uint64_t sub_10090BD4C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 264));
  return swift_task_switch(sub_10090BD98, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
}

uint64_t sub_10090BD98()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t **v7;

  v1 = v0[20];
  v2 = v0[18];
  sub_1004B8460(v0[11], v1, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 2)
  {
    v3 = v0[20];
    v4 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)(v3 + *(int *)(v4 + 48) + 8));
    v5 = sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
    Date.init()(v5);
    v6 = 0;
  }
  else
  {
    sub_1004B84A4(v0[20], type metadata accessor for CRLBoardLibraryViewModel.Item);
    v6 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[15] + 56))(v0[22], v6, 1, v0[14]);
  v7 = (uint64_t **)swift_task_alloc(dword_1013FA34C);
  v0[34] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_10090BE84;
  return sub_100919BCC(v0[11]);
}

uint64_t sub_10090BE84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 272);
  v3[35] = a1;
  v3[36] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10090C4F0;
  else
    v5 = sub_10090BEEC;
  return swift_task_switch(v5, v3[25], v3[26]);
}

uint64_t sub_10090BEEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;

  v1 = *(void **)(v0 + 280);
  if (!v1)
  {
    v6 = *(_QWORD *)(v0 + 192);
    sub_100757E04(&_mh_execute_header, (uint64_t)"showViewController(for:push:animated:restoringFrom:)", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1515, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showViewController(for:push:animated:restoringFrom:)", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1515, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_release(v6);
    _StringGuts.grow(_:)(57);
    v7._object = (void *)0x8000000100FE01B0;
    v7._countAndFlagsBits = 0xD000000000000037;
    String.append(_:)(v7);
    v8._countAndFlagsBits = sub_100BCCD38();
    object = v8._object;
    String.append(_:)(v8);
    swift_bridgeObjectRelease(object);
    v10 = sub_10092169C();
    swift_allocError(&_s34CRLViewControllerPresentationErrorON, v10, 0, 0);
    *(_QWORD *)v11 = 0;
    *(_QWORD *)(v11 + 8) = 0xE000000000000000;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    *(_BYTE *)(v11 + 32) = 2;
    swift_willThrow(v12);
    v14 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    sub_1004CB800(v13, &qword_1013E04F0);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack);
  if (*(_BYTE *)(v0 + 312) == 1)
  {
    v4 = *(_QWORD *)(v0 + 88);
    swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack));
    sub_10068F160(v4);
    swift_release(v3);
    v5 = *(void **)(v0 + 96);
    if (!v5)
      goto LABEL_10;
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = sub_1004B804C(&qword_1014072D0);
    v22 = *(unsigned __int8 *)(v19 + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject(v21, v23 + *(_QWORD *)(v19 + 72), v22 | 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
    sub_1004B8460(v20, v24 + v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_beginAccess(v3 + 16, v0 + 64, 1, 0);
    v25 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = v24;
    swift_retain(v3);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease(v25);
    v26 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCD00 != -1)
      swift_once(&qword_1013DCD00, sub_10068F12C);
    objc_msgSend(v26, "postNotificationName:object:", qword_10147EF10, v3);
    swift_release(v3);
    swift_bridgeObjectRelease(v24);

    v5 = *(void **)(v0 + 96);
    if (!v5)
      goto LABEL_10;
  }
  v27 = v5;
  objc_msgSend(v1, "restoreUserActivityState:", v27);
  objc_msgSend(v27, "setNeedsSave:", 1);

LABEL_10:
  v28 = (_QWORD *)swift_task_alloc(dword_1013FA354);
  *(_QWORD *)(v0 + 296) = v28;
  *v28 = v0;
  v28[1] = sub_10090C284;
  return sub_100913730((uint64_t)v1, *(_BYTE *)(v0 + 312), *(_BYTE *)(v0 + 313));
}

uint64_t sub_10090C284()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 296);
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10090C578;
  else
    v4 = sub_10090C2E4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

uint64_t sub_10090C2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_release(*(_QWORD *)(v0 + 192));
  v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v1, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5560;
  *(_QWORD *)(inited + 32) = sub_1009093EC();
  v3 = sub_1009093FC();
  *(_QWORD *)(inited + 40) = v3;
  specialized Array._endMutation()(v3);
  if ((inited & 0xC000000000000001) != 0)
  {
    v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, inited);
    sub_1009099BC(v4);

    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, inited);
  }
  else
  {
    v6 = *(id *)(inited + 32);
    sub_1009099BC(v6);

    v5 = *(id *)(inited + 40);
  }
  v7 = v5;
  v9 = (uint64_t *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  sub_1009099BC(v5);
  swift_bridgeObjectRelease(inited);

  sub_100909650();
  sub_1004CB7BC(v8, v10, &qword_1013E04F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1004CB800(*v9, &qword_1013E04F0);
    v9 = (uint64_t *)(v0 + 168);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v16 + 32))(v13, *(_QWORD *)(v0 + 168), v15);
    Date.init()(v17);
    v18 = Date.timeIntervalSince(_:)(v13);
    v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v19(v14, v15);
    sub_100966F38(v18);
    v19(v13, v15);
  }
  v20 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 136);
  sub_1004CB800(*v9, &qword_1013E04F0);
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 280));
}

uint64_t sub_10090C4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 192));
  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  sub_1004CB800(v1, &qword_1013E04F0);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090C578()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 280);
  swift_release(*(_QWORD *)(v0 + 192));

  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  sub_1004CB800(v2, &qword_1013E04F0);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090C608(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[16] = a1;
  v2[17] = v1;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[19] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10090C694, v5, v6);
}

void sub_10090C694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 152));
  v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt))
  {
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 104, 0, 0);
    v3 = (id)static OS_os_log.crlSendACopy;
    v5 = static os_log_type_t.info.getter(v4);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Trying to download multiple shared board copies at the same time; this is unsupported.",
      86,
      2,
      (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
  sub_1009035AC();
  if (v6)
  {
    v7 = v6;
    v36 = v1;
    v8 = *(id *)&v6[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];

    if (qword_1013DCB60 != -1)
      swift_once(&qword_1013DCB60, sub_100637218);
    v9 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = (void *)qword_10147ECC0;
    v12 = type metadata accessor for CRLPublicCloudRecordProvider();
    v13 = swift_allocObject(v12, 24, 7);
    *(_QWORD *)(v13 + 16) = v8;
    v14 = v8;
    v15 = v11;
    v16 = objc_msgSend(v15, "publicCloudDatabase");
    swift_retain(v13);

    sub_1004B8460(v10, v9, type metadata accessor for CRLBoardIdentifier);
    sub_1009035AC();
    v35 = v17;
    if (v17)
    {
      v34 = *(_QWORD *)(v0 + 144);
      v33 = *(void **)(v0 + 136);
      *(_QWORD *)(v0 + 88) = &type metadata for CRLSendACopyBoardDataHandler;
      *(_QWORD *)(v0 + 96) = &off_101296040;
      v18 = (_QWORD *)swift_allocObject(&unk_101288050, 64, 7);
      *(_QWORD *)(v0 + 64) = v18;
      v18[2] = v14;
      v18[3] = v14;
      v18[4] = v13;
      v18[5] = &off_10127F1A8;
      v18[6] = v16;
      v18[7] = v13;
      v19 = type metadata accessor for CRLDownloadSharedCopyAttempt(0);
      v32 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
      v20 = sub_1004CB9AC(v0 + 64, (uint64_t)&type metadata for CRLSendACopyBoardDataHandler);
      v21 = (_OWORD *)swift_task_alloc(48);
      initializeWithCopy for CRLSendACopyBoardDataHandler((uint64_t)v21, v20);
      v23 = v21[1];
      v22 = v21[2];
      *(_OWORD *)(v0 + 16) = *v21;
      *(_OWORD *)(v0 + 32) = v23;
      *(_OWORD *)(v0 + 48) = v22;
      v24 = v14;
      swift_retain_n(v13, 4);
      v25 = v24;
      v26 = v16;
      v27 = v25;
      v3 = v26;
      v28 = sub_10091F04C(v34, v35, (_OWORD *)(v0 + 16), v33, v32);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 64));

      swift_release_n(v13, 2, v29);
      swift_task_dealloc(v21);
      v30 = *(_QWORD *)(v36 + v2);
      *(_QWORD *)(v36 + v2) = v28;
      swift_retain(v28);
      swift_release(v30);
      v31.n128_f64[0] = sub_1006B0B18();
      swift_release_n(v13, 2, v31);

      swift_release(v28);
LABEL_10:

      swift_task_dealloc(*(_QWORD *)(v0 + 144));
      (*(void (**)(void))(v0 + 8))();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10090C9F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[72];
  _BYTE v55[72];
  _QWORD v56[6];

  v4 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  v56[3] = &type metadata for CRLFeatureFlags;
  v56[4] = sub_1004DB6DC();
  LOBYTE(v56[0]) = 17;
  v17 = isFeatureEnabled(_:)(v56);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v56);
  if ((v17 & 1) == 0)
  {
LABEL_13:
    v39 = type metadata accessor for CRLBoardIdentifier(0);
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
    v35 = a2;
    v36 = 1;
    return v34(v35, v36, 1, v39);
  }
  v18 = objc_msgSend(a1, "webpageURL");
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_10;
  }
  v19 = v18;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v9, v13, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_10:
    sub_1004CB800((uint64_t)v9, &qword_1013E04D0);
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v56, 0, 0);
    v37 = (id)static OS_os_log.crlSendACopy;
    v38 = static os_log_type_t.error.getter(v37);
    sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v38, "Missing url for Send-A-Copy", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_13;
  }
  v20(v16, v9, v10);
  if ((sub_100631128() & 1) == 0)
  {
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v56, 0, 0);
    v41 = (void *)static OS_os_log.crlSendACopy;
    v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v42, v55);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v44 = sub_1004B7878(&qword_1013FA4A0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v45 = v41;
    v46 = dispatch thunk of CustomStringConvertible.description.getter(v10, v44);
    v48 = v47;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v49 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v49;
    *(_QWORD *)(inited + 32) = v46;
    *(_QWORD *)(inited + 40) = v48;
    v50 = static os_log_type_t.error.getter(v49);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v50, "Invalidate url for Send-A-Copy %{public}@", 41, 2, inited);
    swift_setDeallocating(inited);
    v51 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v51);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    goto LABEL_13;
  }
  sub_100630920((uint64_t)v6);
  v21 = type metadata accessor for CRLBoardIdentifier(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v21) == 1)
  {
    v53 = v22;
    sub_1004CB800((uint64_t)v6, &qword_1013E0270);
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v56, 0, 0);
    v23 = (void *)static OS_os_log.crlSendACopy;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v25 = swift_initStackObject(v24, v54);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
    v26 = sub_1004B7878(&qword_1013FA4A0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v27 = v23;
    v28 = dispatch thunk of CustomStringConvertible.description.getter(v10, v26);
    v30 = v29;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    v31 = sub_1004CFC2C();
    *(_QWORD *)(v25 + 64) = v31;
    *(_QWORD *)(v25 + 32) = v28;
    *(_QWORD *)(v25 + 40) = v30;
    v32 = static os_log_type_t.error.getter(v31);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v32, "Failed to extract board identifier to download for Send-A-Copy %{public}@", 73, 2, v25);
    swift_setDeallocating(v25);
    v33 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 32, 1, v33);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    v35 = a2;
    v36 = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    sub_1004B84E0((uint64_t)v6, a2, type metadata accessor for CRLBoardIdentifier);
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v35 = a2;
    v36 = 0;
  }
  v39 = v21;
  return v34(v35, v36, 1, v39);
}

void sub_10090CFDC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  id v20;
  char v21[24];

  v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt))
  {
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v21, 0, 0);
    v3 = (id)static OS_os_log.shareState;
    v4 = static os_log_type_t.error.getter(v3);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v4, "Trying to accept multiple CloudKit shares at the same time; this is unsupported.",
      80,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  sub_1009035AC();
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "delegate");

  if (!v9)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v10 = type metadata accessor for CRLiOSAppDelegate();
  v11 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  if (v11)
  {
    v12 = *(void **)(v11 + 32);
    v13 = v12;
  }
  else
  {
    v12 = 0;
  }
  swift_unknownObjectRelease(v9);
  v14 = type metadata accessor for CRLAcceptCloudKitShareAttempt(0);
  v15 = (_QWORD *)swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15[6] = 0;
  swift_unknownObjectWeakInit(v15 + 5);
  v16 = (char *)v15 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask) = 0;
  v18 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken);
  *v18 = 0u;
  v18[1] = 0u;
  *((_BYTE *)v15 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) = 0;
  *((_BYTE *)v15 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot) = 0;
  v15[2] = a1;
  v15[3] = v7;
  v15[4] = v12;
  v15[6] = &off_101287C68;
  swift_unknownObjectWeakAssign(v15 + 5, v1);
  v19 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v15;
  v20 = a1;
  swift_retain(v15);
  swift_release(v19);
  sub_1008FDFD0();
  swift_release(v15);
}

uint64_t sub_10090D244(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[18] = a1;
  v2[19] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[20] = v3;
  v2[21] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[22] = v4;
  v2[23] = v5;
  return swift_task_switch(sub_10090D2B4, v4, v5);
}

uint64_t sub_10090D2B4()
{
  uint64_t *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t **v42;
  uint64_t **v43;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "presentedViewController");

  if (!v2)
    goto LABEL_6;
  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
    goto LABEL_5;
  v5 = objc_msgSend(v4, "topViewController");

  if (!v5)
  {
LABEL_6:
    v7 = sub_1009038CC();
    goto LABEL_7;
  }
  v6 = type metadata accessor for CRLiOSBoardViewController(0);
  v7 = (id)swift_dynamicCastClass(v5, v6);
  v2 = v5;
  if (!v7)
  {
LABEL_5:

    goto LABEL_6;
  }
LABEL_7:
  v0[24] = (uint64_t)v7;
  v8 = v7;
  v9 = sub_1009038CC();
  v10 = objc_msgSend(v9, "presentedViewController");

  v11 = v8;
  if (!v10)
    goto LABEL_23;
  v12 = objc_opt_self(UINavigationController);
  v13 = (void *)swift_dynamicCastObjCClass(v10, v12);
  if (!v13)
  {

    v11 = v10;
    goto LABEL_23;
  }
  v14 = objc_msgSend(v13, "topViewController");

  v11 = v8;
  if (!v14)
    goto LABEL_23;
  v15 = type metadata accessor for CRLiOSBoardViewController(0);
  v16 = swift_dynamicCastClass(v14, v15);

  if (!v16
    || v8 != (id)v16
    || (v17 = sub_1009038CC(),
        v11 = objc_msgSend(v17, "presentedViewController"),
        v17,
        !v11))
  {
LABEL_24:
    v33 = objc_msgSend(v8, "presentedViewController");
    v0[31] = (uint64_t)v33;
    if (v33)
    {
      v24 = v33;
      v34 = sub_1004B8930(0, &qword_10140B940, UIAlertController_ptr);
      if ((objc_msgSend(v24, "isKindOfClass:", swift_getObjCClassFromMetadata(v34, v35)) & 1) != 0
        || (v36 = sub_1004B8930(0, &qword_1013FA480, UIActivityViewController_ptr),
            (objc_msgSend(v24, "isKindOfClass:", swift_getObjCClassFromMetadata(v36, v37)) & 1) != 0)
        || (v38 = sub_1004B8930(0, &qword_1013FA488, &off_101229A90),
            (objc_msgSend(v24, "isKindOfClass:", swift_getObjCClassFromMetadata(v38, v39)) & 1) != 0)
        || (v40 = sub_1004B8930(0, (unint64_t *)&unk_1013FA490, _SWCollaborationDetailViewController_ptr), objc_msgSend(v24, "isKindOfClass:", swift_getObjCClassFromMetadata(v40, v41))))
      {
        v42 = (uint64_t **)swift_task_alloc(dword_101400534);
        v0[32] = (uint64_t)v42;
        *v42 = v0;
        v42[1] = (uint64_t *)sub_10090D8F8;
        return sub_1009DB078(1);
      }
      goto LABEL_30;
    }
    goto LABEL_31;
  }
  v18 = objc_opt_self(UINavigationController);
  v19 = (void *)swift_dynamicCastObjCClass(v11, v18);
  if (!v19)
  {
LABEL_23:

    goto LABEL_24;
  }
  v20 = objc_msgSend(v19, "topViewController");

  if (!v20)
    goto LABEL_24;
  v21 = swift_dynamicCastClass(v20, v15);
  if (!v21)
  {
    v11 = v20;
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController);

  if (!v22)
    goto LABEL_24;
  v23 = sub_1009038CC();
  v24 = objc_msgSend(v23, "presentedViewController");

  if (v24)
  {
    v25 = objc_opt_self(UINavigationController);
    v26 = (void *)swift_dynamicCastObjCClass(v24, v25);
    if (!v26)
    {
LABEL_30:

      goto LABEL_31;
    }
    v27 = objc_msgSend(v26, "topViewController");
    v0[25] = (uint64_t)v27;

    if (v27)
    {
      v28 = swift_dynamicCastClass(v27, v15);
      v0[26] = v28;
      v24 = v27;
      if (v28)
      {
        v29 = v0[20];
        v0[27] = static MainActor.shared.getter(v28);
        v30 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
        v0[28] = v30;
        v0[29] = v31;
        return swift_task_switch(sub_10090D6E8, v30, v31);
      }
      goto LABEL_30;
    }
  }
LABEL_31:
  v43 = (uint64_t **)swift_task_alloc(dword_10140053C);
  v0[34] = (uint64_t)v43;
  *v43 = v0;
  v43[1] = (uint64_t *)sub_10090D9B4;
  return sub_1009DAE24(v0[18], 1);
}

uint64_t sub_10090D6E8()
{
  uint64_t *v0;
  uint64_t **v1;
  void *v3;
  uint64_t **v4;

  if (*(_QWORD *)(v0[26] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController))
  {
    v1 = (uint64_t **)swift_task_alloc(dword_10140B37C);
    v0[30] = (uint64_t)v1;
    *v1 = v0;
    v1[1] = (uint64_t *)sub_10090D844;
    return sub_100C2EFAC();
  }
  else
  {
    v3 = (void *)v0[25];
    swift_release(v0[27]);
    sub_100757E04(&_mh_execute_header, (uint64_t)"dismissUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1928, "Not showing undo menu", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissUndoMenu()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1928, (uint64_t)"Not showing undo menu", 21, 2u);

    v4 = (uint64_t **)swift_task_alloc(dword_10140053C);
    v0[34] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = (uint64_t *)sub_10090D9B4;
    return sub_1009DAE24(v0[18], 1);
  }
}

uint64_t sub_10090D844()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 240));
  return swift_task_switch(sub_10090D890, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_10090D890()
{
  uint64_t *v0;
  void *v1;
  uint64_t **v2;

  v1 = (void *)v0[25];
  swift_release(v0[27]);
  sub_10053C8E8();

  v2 = (uint64_t **)swift_task_alloc(dword_10140053C);
  v0[34] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (uint64_t *)sub_10090D9B4;
  return sub_1009DAE24(v0[18], 1);
}

uint64_t sub_10090D8F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10090DA50;
  else
    v4 = sub_10090D958;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_10090D958()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140053C);
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = sub_10090D9B4;
  return sub_1009DAE24(*(_QWORD *)(v0 + 144), 1);
}

uint64_t sub_10090D9B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 272);
  *(_QWORD *)(*v1 + 280) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10090DBD4;
  else
    v4 = sub_10090DA14;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_10090DA14()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 168);

  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10090DA50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release(*(_QWORD *)(v0 + 168));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(void **)(v0 + 192);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 88, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to present view controller: %@", 50, 2, inited);

  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090DBD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 280);
  swift_release(*(_QWORD *)(v0 + 168));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(void **)(v0 + 192);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 88, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to present view controller: %@", 50, 2, inited);

  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090DD50(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v10;
  void *v11;
  uint64_t v13;

  ObjectType = swift_getObjectType(a1);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLViewAnnotatableContaining))
    v3 = (uint64_t)a1;
  else
    v3 = 0;
  if (!v3)
  {
    v5 = objc_msgSend(a1, "childViewControllers");
    v6 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
      goto LABEL_22;
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
    {
LABEL_16:
      swift_bridgeObjectRelease(v7);
      return 0;
    }
    while (1)
    {
      while (__OFSUB__(v8--, 1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        if (v7 < 0)
          v13 = v7;
        else
          v13 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v7);
        v8 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(v7);
        if (!v8)
          goto LABEL_16;
      }
      if ((v7 & 0xC000000000000001) != 0)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v7);
        goto LABEL_14;
      }
      if ((v8 & 0x8000000000000000) != 0)
        goto LABEL_20;
      if (v8 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_21;
      v10 = *(id *)(v7 + 32 + 8 * v8);
LABEL_14:
      v11 = v10;
      v3 = sub_10090DD50();

      if (v3)
      {
        swift_bridgeObjectRelease(v7);
        return v3;
      }
      if (!v8)
        goto LABEL_16;
    }
  }
  v4 = a1;
  return v3;
}

uint64_t sub_10090DEC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[8] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[10] = v3;
  v1[11] = v4;
  return swift_task_switch(sub_10090DF30, v3, v4);
}

uint64_t sub_10090DF30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;

  v1 = v0[8];
  v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController);
  if (v3)
  {
    v4 = v3;
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentAcceptCloudKitShareAlertController()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 704, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentAcceptCloudKitShareAlertController()", 43, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 704, (uint64_t)"expected nil value, but non-nil found", 37, 2u);

  }
  if (qword_1013DD4E0 != -1)
    swift_once(&qword_1013DD4E0, sub_1008FDE30);
  swift_bridgeObjectRetain(unk_10147FF10);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, 0, 1);
  v0[12] = v6;

  if (qword_1013DD4E8 != -1)
    swift_once(&qword_1013DD4E8, sub_1008FDF08);
  v7 = unk_10147FF20;
  v8 = swift_allocObject(&unk_101287EE8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[6] = sub_100921F88;
  v0[7] = v8;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(_QWORD *)"";
  v0[4] = sub_1004C6194;
  v0[5] = &unk_101288018;
  v10 = _Block_copy(v0 + 2);
  swift_release(v0[7]);
  v11 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v9, 1, v10);
  v0[13] = v11;
  _Block_release(v10);
  swift_release(v8);

  objc_msgSend(v6, "addAction:", v11);
  v12 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v6;
  v13 = v6;

  v14 = (_QWORD *)swift_task_alloc(dword_1013FA274);
  v0[14] = v14;
  *v14 = v0;
  v14[1] = sub_10090E210;
  return sub_10090D244((uint64_t)v13);
}

uint64_t sub_10090E210()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_10090E25C, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_10090E25C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 96);
  v1 = *(void **)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 72));
  sub_100CE39D8(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10090E2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  __int128 v6[2];
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt);
    swift_retain(v5);

    if (v5)
    {
      v7 = 0;
      memset(v6, 0, sizeof(v6));
      sub_1008FF318(v6);
      swift_release(v5);
      sub_1009001F0(v6);
    }
  }
}

uint64_t sub_10090E328()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[18] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[19] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[20] = v3;
  v1[21] = v4;
  return swift_task_switch(sub_10090E394, v3, v4);
}

uint64_t sub_10090E394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController;
  *(_QWORD *)(v0 + 176) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController;
  v3 = *(void **)(v1 + v2);
  if (v3
    || (sub_100757E04(&_mh_execute_header, (uint64_t)"dismissAcceptCloudKitShareAlertController()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 720, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage), sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissAcceptCloudKitShareAlertController()", 43, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87,
          2u,
          720,
          (uint64_t)"invalid nil value found",
          23,
          2u),
        (v3 = *(void **)(v1 + v2)) != 0))
  {
    *(_QWORD *)(v0 + 184) = v3;
    v4 = dword_101400534;
    v3;
    v5 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 192) = v5;
    *v5 = v0;
    v5[1] = sub_10090E4F8;
    return sub_1009DB078(1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 152));
    v7 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(void **)(v8 + v7);
    *(_QWORD *)(v8 + v7) = 0;

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10090E4F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 160);
    v5 = *(_QWORD *)(v2 + 168);
    v6 = sub_10090E564;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 160);
    v5 = *(_QWORD *)(v2 + 168);
    v6 = sub_100922DC0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10090E564()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 152));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 88, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 136, v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to dismiss acceptCloudKitShareAlertController: %@", 69, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10090E6E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  NSString v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36[2];

  v0 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v0);
  v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
  v3 = (void *)static OS_os_log.default.getter();
  v5 = static os_log_type_t.default.getter(v4);
  sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Showing alert: Maximum Boards Reached: iCloud limits the number of boards you can create. Permanently delete one or more boards, then try again.", 144, 2, (uint64_t)_swiftEmptyArrayStorage);

  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = objc_msgSend(v6, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = objc_msgSend(v6, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  v27 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v25, v26, 1);

  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v29 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v28, 0, 0);

  objc_msgSend(v27, "addAction:", v29);
  v30 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v2, 1, 1, v30);
  type metadata accessor for MainActor(0);
  v31 = v36[1];
  v32 = v27;
  v33 = static MainActor.shared.getter(v32);
  v34 = (_QWORD *)swift_allocObject(&unk_101288000, 48, 7);
  v34[2] = v33;
  v34[3] = &protocol witness table for MainActor;
  v34[4] = v31;
  v34[5] = v32;
  v35 = sub_100521B98((uint64_t)v2, (uint64_t)&unk_1013FA470, (uint64_t)v34);

  swift_release(v35);
}

uint64_t sub_10090EAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v5[2] = a5;
  v7 = type metadata accessor for MainActor(0);
  v5[3] = v7;
  v5[4] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA274);
  v5[5] = v8;
  *v8 = v5;
  v8[1] = sub_10090EB4C;
  return sub_10090D244(a5);
}

uint64_t sub_10090EB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10090EBBC, v2, v3);
}

uint64_t sub_10090EBBC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_100CE39D8(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090EBF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[8] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[10] = v3;
  v1[11] = v4;
  return swift_task_switch(sub_10090EC64, v3, v4);
}

uint64_t sub_10090EC64()
{
  _QWORD *v0;
  uint64_t v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;

  if (qword_1013DCDC0 != -1)
    swift_once(&qword_1013DCDC0, sub_1006B3758);
  v1 = *(_QWORD *)algn_10147F088;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10147F088);
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v3 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v2, 0, 1);
  v0[12] = v3;

  if (qword_1013DCDC8 != -1)
    swift_once(&qword_1013DCDC8, sub_1006B3830);
  v4 = v0[8];
  v5 = *(_QWORD *)algn_10147F098;
  v6 = swift_allocObject(&unk_101287EE8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v0[6] = sub_100921ED0;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(_QWORD *)"";
  v0[4] = sub_1004C6194;
  v0[5] = &unk_101287FC8;
  v8 = _Block_copy(v0 + 2);
  swift_release(v0[7]);
  v9 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v7, 1, v8);
  v0[13] = v9;
  _Block_release(v8);
  swift_release(v6);

  objc_msgSend(v3, "addAction:", v9);
  v10 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  v0[14] = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  v11 = *(void **)(v4 + v10);
  *(_QWORD *)(v4 + v10) = v3;
  v12 = v3;

  v13 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  v0[15] = v13;
  *v13 = v0;
  v13[1] = sub_10090EE98;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10090EE98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 120));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 80);
    v4 = *(_QWORD *)(v2 + 88);
    v5 = sub_100922E38;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 80);
    v4 = *(_QWORD *)(v2 + 88);
    v5 = sub_10090EF00;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10090EF00()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v16;

  v1 = *(void **)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 112));
  *(_QWORD *)(v0 + 128) = v1;
  if (!v1)
  {
    v10 = *(id *)(v0 + 96);
    v12 = *(void **)(v0 + 104);
    swift_release(*(_QWORD *)(v0 + 72));
    goto LABEL_12;
  }
  v2 = v1;
  v3 = sub_1009038CC();
  v4 = objc_msgSend(v3, "presentedViewController");

  if (!v4)
    goto LABEL_7;
  v5 = objc_opt_self(UINavigationController);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
    goto LABEL_6;
  v7 = objc_msgSend(v6, "topViewController");

  if (v7)
  {
    v8 = type metadata accessor for CRLiOSBoardViewController(0);
    v9 = (id)swift_dynamicCastClass(v7, v8);
    v4 = v7;
    if (v9)
      goto LABEL_8;
LABEL_6:

  }
LABEL_7:
  v9 = sub_1009038CC();
LABEL_8:
  v10 = objc_msgSend(v9, "presentedViewController");

  if (v10)
  {
    v11 = objc_opt_self(UIAlertController);
    if (swift_dynamicCastObjCClass(v10, v11))
    {
      v12 = *(void **)(v0 + 96);
      v13 = *(void **)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 72);

      swift_release(v14);
LABEL_12:

      return (*(uint64_t (**)(void))(v0 + 8))();
    }

  }
  v16 = (_QWORD *)swift_task_alloc(dword_1013FA274);
  *(_QWORD *)(v0 + 136) = v16;
  *v16 = v0;
  v16[1] = sub_10090F098;
  return sub_10090D244((uint64_t)v2);
}

uint64_t sub_10090F098()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  return swift_task_switch(sub_10090F0E4, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_10090F0E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 96);
  v3 = *(void **)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 72));
  sub_100CE39D8(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10090F138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt);
    swift_retain(v6);

    if (v6)
    {
      sub_1006B2D24();
      *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10090F1A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[18] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[19] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[20] = v3;
  v1[21] = v4;
  return swift_task_switch(sub_10090F214, v3, v4);
}

uint64_t sub_10090F214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  *(_QWORD *)(v0 + 176) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  v3 = *(void **)(v1 + v2);
  if (v3
    || (sub_100757E04(&_mh_execute_header, (uint64_t)"dismissDownloadSharedCopyAlertController()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 773, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage), sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissDownloadSharedCopyAlertController()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87,
          2u,
          773,
          (uint64_t)"invalid nil value found",
          23,
          2u),
        (v3 = *(void **)(v1 + v2)) != 0))
  {
    *(_QWORD *)(v0 + 184) = v3;
    v4 = dword_101400534;
    v3;
    v5 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 192) = v5;
    *v5 = v0;
    v5[1] = sub_10090F378;
    return sub_1009DB078(1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 152));
    v7 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(void **)(v8 + v7);
    *(_QWORD *)(v8 + v7) = 0;

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10090F378()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 160);
    v5 = *(_QWORD *)(v2 + 168);
    v6 = sub_10090F428;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 160);
    v5 = *(_QWORD *)(v2 + 168);
    v6 = sub_10090F3E4;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10090F3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  swift_release(*(_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void **)(v2 + v1);
  *(_QWORD *)(v2 + v1) = 0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090F428()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 152));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 88, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 136, v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to dismiss downloadSharedCopyAlertController: %@", 68, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10090F5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[18] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[19] = v5;
  v3[20] = v6;
  return swift_task_switch(sub_10090F614, v5, v6);
}

uint64_t sub_10090F614()
{
  uint64_t *v0;
  char v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  NSString v11;
  id v12;
  char **v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  char **v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  void *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t **v47;
  uint64_t v49;
  uint64_t *v50;

  v1 = sub_100B02EA0();
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_iPadDevice");
  if (qword_1013DCDD0 != -1)
    swift_once(&qword_1013DCDD0, sub_1006B38F8);
  v3 = *(_QWORD *)algn_10147F0A8;
  if ((v1 & 1) != 0)
  {
    if ((v2 & 1) != 0)
    {
      v4 = qword_1013DCDE8;
      swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0A8);
      if (v4 != -1)
        swift_once(&qword_1013DCDE8, sub_1006B3B68);
      v5 = &qword_10147F0D0;
    }
    else
    {
      v7 = qword_1013DCDD8;
      swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0A8);
      if (v7 != -1)
        swift_once(&qword_1013DCDD8, sub_1006B39C8);
      v5 = &qword_10147F0B0;
    }
  }
  else if ((v2 & 1) != 0)
  {
    v6 = qword_1013DCDF0;
    swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0A8);
    if (v6 != -1)
      swift_once(&qword_1013DCDF0, sub_1006B3C38);
    v5 = &qword_10147F0E0;
  }
  else
  {
    v8 = qword_1013DCDE0;
    swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0A8);
    if (v8 != -1)
      swift_once(&qword_1013DCDE0, sub_1006B3A98);
    v5 = &qword_10147F0C0;
  }
  v50 = v0 + 14;
  v9 = v5[1];
  swift_bridgeObjectRetain(v9);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);
  v0[21] = (uint64_t)v12;

  v0[14] = (uint64_t)_swiftEmptyArrayStorage;
  v13 = (char **)&qword_100EEFFC0[8];
  if ((v1 & 1) == 0)
    goto LABEL_21;
  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v0[12] = (uint64_t)sub_100922E4C;
  v0[13] = 0;
  v0[8] = (uint64_t)_NSConcreteStackBlock;
  v21 = (char **)&qword_100EEFFC0[8];
  v0[9] = *(_QWORD *)"";
  v0[10] = (uint64_t)sub_1004C6194;
  v0[11] = (uint64_t)&unk_101287FA0;
  v22 = _Block_copy(v0 + 8);
  swift_release(v0[13]);
  v23 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v20, 0, v22);
  _Block_release(v22);

  v24 = (unint64_t)v23;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
  v26 = *(char **)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v25 = *(_QWORD *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v26 >= v25 >> 1)
    goto LABEL_50;
  while (1)
  {
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);

    v13 = v21;
LABEL_21:
    v28 = v0[15];
    v29 = v0[16];
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31 = String._bridgeToObjectiveC()();
    v32 = String._bridgeToObjectiveC()();
    v21 = (char **)objc_msgSend(v30, "localizedStringForKey:value:table:", v31, v32, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v34 = v33;

    v35 = swift_allocObject(&unk_101287F60, 32, 7);
    *(_QWORD *)(v35 + 16) = v28;
    *(_QWORD *)(v35 + 24) = v29;
    swift_retain(v29);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    v0[6] = (uint64_t)sub_10054E858;
    v0[7] = v35;
    v0[2] = (uint64_t)_NSConcreteStackBlock;
    v0[3] = (uint64_t)v13[180];
    v0[4] = (uint64_t)sub_1004C6194;
    v0[5] = (uint64_t)&unk_101287F78;
    v37 = _Block_copy(v0 + 2);
    swift_release(v0[7]);
    v26 = (char *)objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v36, 0, v37);
    v0[22] = (uint64_t)v26;
    _Block_release(v37);

    v38 = v26;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
    v24 = *(_QWORD *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v39 = *(_QWORD *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v24 >= v39 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v24 + 1, 1);
    v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v38);
    specialized Array._endMutation()(v40);
    v41 = *v50;
    if ((unint64_t)*v50 >> 62)
    {
      if (v41 < 0)
        v44 = *v50;
      else
        v44 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v41, 2);
      v42 = _CocoaArrayWrapper.endIndex.getter(v44);
      if (!v42)
        goto LABEL_35;
    }
    else
    {
      v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v41, 2);
      if (!v42)
        goto LABEL_35;
    }
    if (v42 < 1)
      break;
    v24 = 0;
    v21 = &selRef__crlaxLastAnnouncedHUDString;
    do
    {
      if ((v41 & 0xC000000000000001) != 0)
        v43 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v41);
      else
        v43 = (char *)*(id *)(v41 + 8 * v24 + 32);
      v26 = v43;
      ++v24;
      objc_msgSend(v12, "addAction:", v43);

    }
    while (v42 != v24);
LABEL_35:
    swift_bridgeObjectRelease_n(v41, 2);
    if ((unint64_t)v41 >> 62)
    {
      if (v41 < 0)
        v49 = v41;
      else
        v49 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v41);
      v45 = (void *)_CocoaArrayWrapper.endIndex.getter(v49);
      swift_bridgeObjectRelease(v41);
      if (!v45)
        goto LABEL_41;
    }
    else
    {
      v45 = *(void **)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v45)
        goto LABEL_41;
    }
    if ((v41 & 0xC000000000000001) != 0)
      goto LABEL_48;
    v25 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25)
    {
      v46 = *(id *)(v41 + 32);
      goto LABEL_40;
    }
    __break(1u);
LABEL_50:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
  }
  __break(1u);
LABEL_48:
  v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
LABEL_40:
  v45 = v46;
LABEL_41:
  objc_msgSend(v12, "setPreferredAction:", v45, swift_bridgeObjectRelease(v41).n128_f64[0]);

  v47 = (uint64_t **)swift_task_alloc(dword_1013FA274);
  v0[23] = (uint64_t)v47;
  *v47 = v0;
  v47[1] = (uint64_t *)sub_10090FD04;
  return sub_10090D244((uint64_t)v12);
}

uint64_t sub_10090FD04()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));
  return swift_task_switch(sub_10090FD50, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_10090FD50()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 168);
  v1 = *(void **)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 144));
  sub_100CE39D8(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10090FD94(char *a1, void *a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  char *v13;
  id v14;
  char v15[24];

  v4 = *(void **)&a1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  if (!v4
    || (v5 = objc_msgSend(v4, "rootViewController")) == 0
    || (v6 = v5, v7 = objc_msgSend(v5, "crl_windowWrapper"), v6, !v7)
    || (v8 = objc_msgSend(v7, "newWrapperBeginningIgnoringUserInteractionSafely"), v7, !v8))
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v15, 0, 0);
    v9 = (id)static OS_os_log.crlError;
    v10 = static os_log_type_t.error.getter(v9);
    sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v10, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    v8 = 0;
  }
  v11 = (_QWORD *)swift_allocObject(&unk_101288450, 40, 7);
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v8;
  v12 = v8;
  v13 = a1;
  v14 = a2;
  sub_100902400((uint64_t)sub_100922E34, (uint64_t)v11);
  swift_release(v11);

}

uint64_t sub_10090FF14(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = a3;
  v11 = a1;
  v12 = a2;
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_101288428, 56, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v11;
  v14[5] = v12;
  v14[6] = a3;
  return sub_100521B98((uint64_t)v8, (uint64_t)&unk_1013FA5B0, (uint64_t)v14);
}

uint64_t sub_100910010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;

  v6[2] = a6;
  v8 = type metadata accessor for MainActor(0);
  v6[3] = v8;
  v6[4] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA26C);
  v6[5] = v9;
  *v9 = v6;
  v9[1] = sub_100910088;
  return sub_10090A1EC(a5);
}

uint64_t sub_100910088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009100F8, v2, v3);
}

uint64_t sub_1009100F8()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "endIgnoringUserInteractionSafely", swift_release(*(_QWORD *)(v0 + 32)).n128_f64[0]);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100910218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v7 + 241) = a7;
  *(_BYTE *)(v7 + 240) = a6;
  *(_QWORD *)(v7 + 168) = a4;
  *(_QWORD *)(v7 + 176) = a5;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 184) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v7 + 192) = v9;
  *(_QWORD *)(v7 + 200) = v10;
  return swift_task_switch(sub_10091028C, v9, v10);
}

uint64_t sub_10091028C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 168) + 16;
  swift_beginAccess(v1, v0 + 88, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 208) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA334);
    *(_QWORD *)(v0 + 216) = v3;
    *v3 = v0;
    v3[1] = sub_100910534;
    return sub_10090BA30(*(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 240), *(_BYTE *)(v0 + 241), 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
    _StringGuts.grow(_:)(84);
    v5._object = (void *)0x8000000100FE0110;
    v5._countAndFlagsBits = 0xD000000000000026;
    String.append(_:)(v5);
    v6._countAndFlagsBits = sub_100BCCD38();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = 0xD00000000000002CLL;
    v7._object = (void *)0x8000000100FE0140;
    String.append(_:)(v7);
    v8 = sub_10092169C();
    v9 = swift_allocError(&_s34CRLViewControllerPresentationErrorON, v8, 0, 0);
    *(_QWORD *)v10 = 0;
    *(_QWORD *)(v10 + 8) = 0xE000000000000000;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 2;
    swift_willThrow(v11);
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v0 + 112, 0, 0);
    v12 = (void *)static OS_os_log.crlError;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_getErrorValue(v9, v0 + 160, v0 + 136);
    v15 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v17 = v12;
    v18 = Error.localizedDescription.getter(v15, v16);
    v20 = v19;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    v22 = static os_log_type_t.debug.getter(v21);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v22, "Caught error trying to show view controller for PPT: %@", 55, 2, inited);
    swift_setDeallocating(inited);
    v23 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v23);

    swift_errorRelease(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100910534(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 216);
  *(_QWORD *)(*v2 + 224) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 192);
    v7 = *(_QWORD *)(v4 + 200);
    v8 = sub_1009105E8;
  }
  else
  {

    *(_QWORD *)(v4 + 232) = a1;
    v6 = *(_QWORD *)(v4 + 192);
    v7 = *(_QWORD *)(v4 + 200);
    v8 = sub_1009105B0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1009105B0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 184));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009105E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 184));

  v2 = *(_QWORD *)(v0 + 224);
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 112, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 160, v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.debug.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to show view controller for PPT: %@", 55, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100910764()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;
  char v15[24];

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUpdateInfoKey];
  strcpy(&v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUpdateInfoKey], "iOSUpdateInfo");
  *((_WORD *)v1 + 7) = -4864;
  v2 = &v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUnsupportedDevicesKey];
  *(_QWORD *)v2 = 0xD000000000000012;
  *((_QWORD *)v2 + 1) = 0x8000000100FE1820;
  v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight] = 0;
  v3 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack;
  v4 = type metadata accessor for CRLNavigationStack();
  v5 = swift_allocObject(v4, 24, 7);
  *(_QWORD *)(v5 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess(v5 + 16, v15, 1, 0);
  *(_QWORD *)(v5 + 16) = _swiftEmptyArrayStorage;
  v6 = v0;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v0[v3] = v5;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardLibrary] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardPreviewImageCache] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___sidebarViewController] = 0;
  v7 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardViewControllerTransitioningDelegate;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewControllerTransitioningDelegate()), "init");
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController]);
  v8 = &v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation];
  v9 = sub_1004B804C(&qword_1013EF328);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_handleUserActivityTaskQueue;
  v11 = sub_1004B804C(&qword_1013FA5A0);
  v12 = swift_allocObject(v11, 24, 7);
  *(_QWORD *)(v12 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[v10] = v12;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___stateRestorationUserActivity] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___handoffUserActivity] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController] = 0;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for CRLiOSSceneDelegate(0);
  return objc_msgSendSuper2(&v14, "init");
}

id sub_1009109B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSSceneDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100910B34()
{
  return type metadata accessor for CRLiOSSceneDelegate(0);
}

uint64_t type metadata accessor for CRLiOSSceneDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FA250;
  if (!qword_1013FA250)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSSceneDelegate);
  return result;
}

void sub_100910B78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = "\b";
  v4[1] = &unk_100F16FD0;
  v4[2] = &unk_100F16FD0;
  v4[3] = &unk_100F16FE8;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = &unk_100F17000;
  v4[6] = &unk_100F17000;
  v4[7] = "\b";
  v4[8] = "\b";
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = &unk_100F17018;
  sub_100910C4C(319);
  if (v3 <= 0x3F)
  {
    v4[11] = *(_QWORD *)(v2 - 8) + 64;
    v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[13] = "\b";
    v4[14] = "\b";
    v4[15] = "\b";
    v4[16] = "\b";
    v4[17] = "\b";
    v4[18] = "\b";
    swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 80);
  }
}

void sub_100910C4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013FA2A0)
  {
    v2 = sub_1004CB6A4(&qword_1013EF328);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013FA2A0);
  }
}

uint64_t sub_100910CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[21] = a4;
  v5[22] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[23] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[24] = v7;
  v5[25] = v8;
  return swift_task_switch(sub_100910D10, v7, v8);
}

uint64_t sub_100910D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 168) + 16;
  swift_beginAccess(v1, v0 + 88, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 208) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA334);
    *(_QWORD *)(v0 + 216) = v3;
    *v3 = v0;
    v3[1] = sub_100910DB4;
    return sub_10090BA30(*(_QWORD *)(v0 + 176), 0, 0, 0);
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 184));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100910DB4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  *(_QWORD *)(*(_QWORD *)v2 + 224) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[24];
    v7 = v4[25];
    v8 = sub_100910E60;
  }
  else
  {
    v9 = (void *)v4[26];

    v6 = v4[24];
    v7 = v4[25];
    v8 = sub_100910E30;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100910E30()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 184));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100910E60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 184));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 224);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 112, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 160, v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to show view controller from sidebar: %@", 60, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100910FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_100911068, v8, v9);
}

uint64_t sub_100911068()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v1 = v0[4];
  v2 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v0[8] = v9;
  v10 = (uint64_t **)swift_task_alloc(dword_1013FA3D4);
  v0[9] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_1009111A0;
  return sub_10090546C(v0[4], v7, v9, 1);
}

uint64_t sub_1009111A0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *(_QWORD *)(*v1 + 32);
  swift_task_dealloc(*(_QWORD *)(*v1 + 72));
  swift_bridgeObjectRelease(v4);

  sub_1004B84A4(v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_100922E48, *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_100911218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;

  v6[23] = a4;
  v6[24] = a6;
  v8 = type metadata accessor for MainActor(0);
  v6[25] = v8;
  v6[26] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA31C);
  v6[27] = v9;
  *v9 = v6;
  v9[1] = sub_100911290;
  return sub_100911628(a5);
}

uint64_t sub_100911290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1009113FC;
  else
    v6 = sub_100911318;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100911318()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;

  objc_msgSend(*(id *)(v0 + 192), "endIgnoringUserInteractionSafely", swift_release(*(_QWORD *)(v0 + 208)).n128_f64[0]);
  *(_QWORD *)(v0 + 112) = &type metadata for CRLFeatureFlags;
  v1 = sub_1004DB6DC();
  *(_BYTE *)(v0 + 88) = 13;
  *(_QWORD *)(v0 + 120) = v1;
  v2 = isFeatureEnabled(_:)(v0 + 88);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  if ((v2 & 1) != 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DD510 != -1)
      swift_once(&qword_1013DD510, sub_100902EF0);
    objc_msgSend(v3, "postNotificationName:object:", qword_10147FF48, *(_QWORD *)(v0 + 184));

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009113FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  swift_release(*(_QWORD *)(v0 + 208));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 224);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlError;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 176, v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Caught error trying to close board view controller: %@", 54, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  objc_msgSend(*(id *)(v0 + 192), "endIgnoringUserInteractionSafely");
  *(_QWORD *)(v0 + 112) = &type metadata for CRLFeatureFlags;
  *(_QWORD *)(v0 + 120) = sub_1004DB6DC();
  *(_BYTE *)(v0 + 88) = 13;
  LOBYTE(v8) = isFeatureEnabled(_:)(v0 + 88);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  if ((v8 & 1) != 0)
  {
    v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DD510 != -1)
      swift_once(&qword_1013DD510, sub_100902EF0);
    objc_msgSend(v14, "postNotificationName:object:", qword_10147FF48, *(_QWORD *)(v0 + 184));

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100911628(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[17] = a1;
  v2[18] = v1;
  v3 = type metadata accessor for CRLBoardCRDTData(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[21] = v5;
  v2[22] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[24] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[25] = v8;
  v2[26] = v9;
  return swift_task_switch(sub_1009116FC, v8, v9);
}

uint64_t sub_1009116FC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  char *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  _QWORD *v42;
  void *v44;
  Swift::String v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  unint64_t v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = objc_msgSend(*(id *)(v0 + 136), "navigationController");
  *(_QWORD *)(v0 + 216) = v1;
  if (!v1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"closeBoard(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1909, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"closeBoard(_:)", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1909, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_19;
  }
  v2 = v1;
  v3 = objc_msgSend(v1, "topViewController");
  if (!v3)
    goto LABEL_17;
  v4 = v3;
  v5 = *(void **)(v0 + 136);
  sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v6 = v5;
  v7 = v4;
  LOBYTE(v4) = static NSObject.== infix(_:_:)(v7, v6);

  if ((v4 & 1) == 0)
  {
LABEL_17:

LABEL_19:
    v44 = *(void **)(v0 + 136);
    swift_release(*(_QWORD *)(v0 + 192));
    _StringGuts.grow(_:)(67);
    v45._object = (void *)0x8000000100FDFF90;
    v45._countAndFlagsBits = 0xD000000000000041;
    String.append(_:)(v45);
    v46 = objc_msgSend(v44, "description");
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v49 = v48;

    v50._countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(v49);
    v51 = sub_10091EFDC();
    swift_allocError(&type metadata for CRLiOSSceneDelegateError, v51, 0, 0);
    *v52 = 0;
    v52[1] = 0xE000000000000000;
    swift_willThrow(v53);
    v54 = *(_QWORD *)(v0 + 176);
    v55 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = v0 + 88;
  if (qword_1013DD820 != -1)
  {
    swift_once(&qword_1013DD820, sub_100A04A9C);
    v8 = v0 + 88;
  }
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 152);
  v56 = *(_QWORD *)(v0 + 168);
  v57 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 136);
  swift_beginAccess(&static OS_os_log.sceneManagement, v8, 0, 0);
  v13 = (void *)static OS_os_log.sceneManagement;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v16 = *(char **)(*(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 112, 0, 0);
  sub_1004B8460(v19, v11, type metadata accessor for CRLBoardCRDTData);
  v20 = v13;
  v21 = v16;
  swift_retain(v18);
  v22 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v22);
  sub_1004B84A4(v11, type metadata accessor for CRLBoardCRDTData);
  swift_release(v18);
  v23 = (uint64_t *)(*(_QWORD *)&v16[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v25 = *v23;
  v24 = v23[1];
  swift_bridgeObjectRetain(v24);
  sub_10067AFD0(v9, v25, v24, v10);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v9, v10, v57);
  v26 = sub_1004B84A4(v10, type metadata accessor for CRLBoardIdentifier);
  v27 = UUID.uuidString.getter(v26);
  v29 = v28;
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v9, v57);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v27;
  *(_QWORD *)(inited + 40) = v29;
  v31 = static os_log_type_t.default.getter(v30);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v31, "Tearing down the board view controller due to close for identifier %{public}@", 77, 2, inited);
  swift_setDeallocating(inited);
  v32 = *(_QWORD *)(inited + 16);
  v33 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v32, v33);

  v34 = sub_100903140();
  if (v34)
  {
    v35 = (_BYTE *)v34;
    sub_100B7C658(0);
    v35[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 0;

  }
  v36 = (char *)objc_msgSend(*(id *)(*(_QWORD *)(v0 + 136)+ OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "textInputResponder");
  if (v36)
  {
    v37 = v36;
    v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
    swift_unknownObjectRetain(v38);

    if (v38)
    {
      objc_msgSend(v38, "setResignFirstResponderWhenKeyboardHides:", 1);
      swift_unknownObjectRelease(v38);
    }
  }
  v39 = *(void **)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (v39)
  {
    v40 = objc_msgSend(v39, "windowScene");
    if (v40)
    {
      v41 = v40;
      if (sub_100C03E5C())
        sub_100C04010((uint64_t)v41);

    }
  }
  *(_QWORD *)(v0 + 224) = sub_1009038CC();
  v42 = (_QWORD *)swift_task_alloc(dword_101400534);
  *(_QWORD *)(v0 + 232) = v42;
  *v42 = v0;
  v42[1] = sub_100911CA8;
  return sub_1009DB078(1);
}

uint64_t sub_100911CA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 200);
    v5 = *(_QWORD *)(v2 + 208);
    v6 = sub_100911DD0;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 200);
    v5 = *(_QWORD *)(v2 + 208);
    v6 = sub_100911D14;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100911D14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v7;
  id v8;

  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 176);
  v5 = *(void **)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(char **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 192));
  v7 = swift_allocObject(&unk_101287D58, 24, 7);
  *(_QWORD *)(v7 + 16) = v5;
  v8 = v5;
  sub_100908380(v6, (void (*)(uint64_t))sub_10091F044);
  swift_release(v7);

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100911DD0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 192));

  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100911E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_100911EC0, v8, v9);
}

uint64_t sub_100911EC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v1 = v0[4];
  v2 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v0[8] = v9;
  v10 = (uint64_t **)swift_task_alloc(dword_1013FA3D4);
  v0[9] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_100911FF8;
  return sub_10090546C(v0[4], v7, v9, 1);
}

uint64_t sub_100911FF8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 32);
  swift_task_dealloc(*(_QWORD *)(*v1 + 72));
  swift_bridgeObjectRelease();

  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_100912070, *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_100912070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  objc_msgSend(*(id *)(v0 + 24), "endIgnoringUserInteractionSafely", swift_release(*(_QWORD *)(v0 + 40)).n128_f64[0]);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009120BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[39] = a5;
  v6[40] = a6;
  v6[38] = a4;
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6[41] = v7;
  v6[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v6[43] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v6[44] = v9;
  v6[45] = v10;
  return swift_task_switch(sub_100912150, v9, v10);
}

uint64_t sub_100912150()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t **v9;
  uint64_t **v11;

  v1 = v0[41];
  v2 = v0[42];
  sub_1004B8460(v0[38], v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 2)
  {
    v3 = v0[42];
    v4 = v0[39];
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)&v5 = swift_beginAccess(v4 + 16, v0 + 19, 0, 0).n128_u64[0];
    v6 = *(void **)(v4 + 16);
    if (v6)
      objc_msgSend(v6, "endIgnoringUserInteractionSafely", v5);
    v7 = v0[39];
    swift_beginAccess(v7 + 16, v0 + 31, 1, 0);
    v8 = *(void **)(v7 + 16);
    *(_QWORD *)(v7 + 16) = 0;

    v9 = (uint64_t **)swift_task_alloc(dword_1013FA404);
    v0[46] = (uint64_t)v9;
    *v9 = v0;
    v9[1] = (uint64_t *)sub_1009122B8;
    return sub_1009128FC(v0[38]);
  }
  else
  {
    sub_1004B84A4(v0[42], type metadata accessor for CRLBoardLibraryViewModel.Item);
    v11 = (uint64_t **)swift_task_alloc(dword_1013FA334);
    v0[48] = (uint64_t)v11;
    *v11 = v0;
    v11[1] = (uint64_t *)sub_100912490;
    return sub_10090BA30(v0[38], 1, 1, 0);
  }
}

uint64_t sub_1009122B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 368);
  *(_QWORD *)(*v1 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10091256C;
  else
    v4 = sub_100912318;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 352), *(_QWORD *)(v2 + 360));
}

uint64_t sub_100912318()
{
  uint64_t *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t **v10;

  v1 = *(void **)(v0[40] + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (!v1
    || (v2 = objc_msgSend(v1, "rootViewController")) == 0
    || (v3 = v2, v4 = objc_msgSend(v2, "crl_windowWrapper"), v3, !v4)
    || (v5 = objc_msgSend(v4, "newWrapperBeginningIgnoringUserInteractionSafely"), v4, !v5))
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v0 + 34, 0, 0);
    v6 = (id)static OS_os_log.crlError;
    v7 = static os_log_type_t.error.getter(v6);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v7, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    v5 = 0;
  }
  v8 = v0[39];
  swift_beginAccess(v8 + 16, v0 + 28, 1, 0);
  v9 = *(void **)(v8 + 16);
  *(_QWORD *)(v8 + 16) = v5;

  v10 = (uint64_t **)swift_task_alloc(dword_1013FA334);
  v0[48] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = (uint64_t *)sub_100912490;
  return sub_10090BA30(v0[38], 1, 1, 0);
}

uint64_t sub_100912490(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 384);
  *(_QWORD *)(*v2 + 392) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 352);
    v7 = *(_QWORD *)(v4 + 360);
    v8 = sub_100912734;
  }
  else
  {

    v6 = *(_QWORD *)(v4 + 352);
    v7 = *(_QWORD *)(v4 + 360);
    v8 = sub_100912504;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100912504()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  swift_release(*(_QWORD *)(v0 + 344));
  v1 = *(_QWORD *)(v0 + 312);
  swift_beginAccess(v1 + 16, v0 + 200, 0, 0);
  v2 = *(void **)(v1 + 16);
  if (v2)
    objc_msgSend(v2, "endIgnoringUserInteractionSafely");
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091256C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  void *v16;

  v1 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 344));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlError;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = sub_100BCCD38();
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  swift_getErrorValue(v1, v0 + 296, v0 + 176);
  v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v11;
  v12 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v12, "Caught error trying to navigate to view model item %@: %@", 57, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)&v15 = swift_beginAccess(v14 + 16, v0 + 200, 0, 0).n128_u64[0];
  v16 = *(void **)(v14 + 16);
  if (v16)
    objc_msgSend(v16, "endIgnoringUserInteractionSafely", v15);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100912734()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  void *v16;

  v1 = *(_QWORD *)(v0 + 392);
  swift_release(*(_QWORD *)(v0 + 344));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlError;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = sub_100BCCD38();
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  swift_getErrorValue(v1, v0 + 296, v0 + 176);
  v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v11;
  v12 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v12, "Caught error trying to navigate to view model item %@: %@", 57, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)&v15 = swift_beginAccess(v14 + 16, v0 + 200, 0, 0).n128_u64[0];
  v16 = *(void **)(v14 + 16);
  if (v16)
    objc_msgSend(v16, "endIgnoringUserInteractionSafely", v15);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009128FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[11] = a1;
  v2[12] = v1;
  v3 = sub_1004B804C(&qword_1013E4690);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v2[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[15] = v5;
  v2[16] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[19] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v2[20] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v9);
  v2[22] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v2[23] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[24] = v11;
  v2[25] = v12;
  return swift_task_switch(sub_100912A10, v11, v12);
}

void sub_100912A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _QWORD *v34;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  sub_1004B8460(*(_QWORD *)(v0 + 88), v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  v4 = *(_QWORD *)(v0 + 144);
  if (EnumCaseMultiPayload != 2)
  {
    swift_release(*(_QWORD *)(v0 + 184));
    sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v0 + 16, 0, 0);
    v8 = (id)static OS_os_log.crlError;
    v9 = static os_log_type_t.error.getter(v8);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v9, "presentOpenBoardErrorAlertIfNeeded(for:) requires item to be a .board", 69, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_7;
  }
  v5 = *(_QWORD *)(v0 + 176);
  sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease();
  sub_1004B84E0(v4, v5, type metadata accessor for CRLBoardIdentifier);
  sub_1009035AC();
  if (!v6)
  {
    __break(1u);
    goto LABEL_22;
  }
  v7 = v6;
  sub_100C9F8F8(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 104));
  v15 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);

  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v16);
  sub_1004B84E0(v17, v14, type metadata accessor for CRLBoardViewModelMetadata);
  if ((*(_BYTE *)(v14 + *(int *)(v16 + 40)) & 1) != 0)
  {
    sub_1004B84A4(*(_QWORD *)(v0 + 128), type metadata accessor for CRLBoardViewModelMetadata);
    if (qword_1013DD6D0 != -1)
      swift_once(&qword_1013DD6D0, sub_100A00E84);
    swift_beginAccess(&static OS_os_log.crlWarning, v0 + 40, 0, 0);
    v18 = (id)static OS_os_log.crlWarning;
    v20 = static os_log_type_t.debug.getter(v19);
    sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "Tried to open unsupported board.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

    v21 = (_QWORD *)swift_task_alloc(dword_1013FA414);
    *(_QWORD *)(v0 + 232) = v21;
    *v21 = v0;
    v21[1] = sub_100913014;
    sub_10091BCD4();
    return;
  }
  sub_1009035AC();
  if (!v22)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v23 = v22;
  v24 = *(_QWORD *)(v0 + 128) + *(int *)(*(_QWORD *)(v0 + 112) + 44);
  if ((*(_BYTE *)(v24 + 8) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 184));

LABEL_17:
    v27 = *(_QWORD *)(v0 + 176);
    sub_1004B84A4(*(_QWORD *)(v0 + 128), type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4(v27, type metadata accessor for CRLBoardIdentifier);
LABEL_7:
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v25 = *(_QWORD *)v24;
  v26 = sub_1001E9730();

  if (v25 < v26)
  {
    swift_release(*(_QWORD *)(v0 + 184));
    goto LABEL_17;
  }
  if (qword_1013DD6D0 != -1)
    swift_once(&qword_1013DD6D0, sub_100A00E84);
  swift_beginAccess(&static OS_os_log.crlWarning, v0 + 64, 0, 0);
  v28 = (id)static OS_os_log.crlWarning;
  v30 = static os_log_type_t.debug.getter(v29);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "Tried to open board which crashed on last open.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

  v31 = sub_100921CE4();
  *(_QWORD *)(v0 + 208) = v31;
  v32 = swift_allocError(&type metadata for CRLBoardLibraryBoardOpenError, v31, 0, 0);
  *(_QWORD *)(v0 + 216) = v32;
  *v33 = 0;
  v34 = (_QWORD *)swift_task_alloc(dword_1013FA3B4);
  *(_QWORD *)(v0 + 224) = v34;
  *v34 = v0;
  v34[1] = sub_100912E78;
  sub_10091C628(*(_QWORD *)(v0 + 88), v32);
}

uint64_t sub_100912E78(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 216);
  v3 = *(_QWORD *)(*v1 + 224);
  *(_BYTE *)(*v1 + 240) = a1;
  swift_task_dealloc(v3);
  swift_errorRelease(v4);
  return swift_task_switch(sub_100912ED8, *(_QWORD *)(v2 + 192), *(_QWORD *)(v2 + 200));
}

uint64_t sub_100912ED8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_BYTE *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 184));
  v2 = *(_QWORD *)(v0 + 128);
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 176);
    sub_1004B84A4(*(_QWORD *)(v0 + 128), type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
    v4 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
  }
  else
  {
    swift_allocError(&type metadata for CRLBoardLibraryBoardOpenError, *(_QWORD *)(v0 + 208), 0, 0);
    *v8 = 0;
    swift_willThrow(v9);
    sub_1004B84A4(v2, type metadata accessor for CRLBoardViewModelMetadata);
    v11 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 104);
    sub_1004B84A4(v10, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100913014()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  return swift_task_switch(sub_100913060, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

void sub_100913060()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  _BYTE *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = objc_msgSend(v1, "BOOLForKey:", CFSTR("CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"));

  if (!v2)
    goto LABEL_4;
  sub_1009035AC();
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 160);
    sub_1004B8460(*(_QWORD *)(v0 + 176), v5, type metadata accessor for CRLBoardIdentifier);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = (v8 + 16) & ~v8;
    v10 = (v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = swift_allocObject(&unk_101287E20, v10 + 8, v8 | 7);
    sub_1004B84E0(v5, v11 + v9, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v11 + v10) = v4;
    v12 = v4;
    sub_100A9EEB8((uint64_t)sub_100921D2C, v11);
    swift_release(v11);

LABEL_4:
    v13 = sub_100921CE4();
    swift_allocError(&type metadata for CRLBoardLibraryBoardOpenError, v13, 0, 0);
    *v14 = 1;
    swift_willThrow(v15);
    v17 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 104);
    sub_1004B84A4(v16, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

void sub_100913210(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NSString v11;
  unint64_t v12;
  Class isa;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v29[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1009038CC();
  v7 = objc_msgSend(v6, "presentedViewController");

  if (!v7)
  {
    v8 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
    if (v9)
    {
      if (objc_msgSend(v9, "isUserInteractionEnabled"))
      {
        v10 = (void *)objc_opt_self(CRLAnalyticsLogger);
        v11 = String._bridgeToObjectiveC()();
        v12 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(4);
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v10, "sendEventInDomain:lazily:eventPayload:", v11, 1, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

        v14 = *(void **)&v1[v8];
        if (!v14
          || (v15 = objc_msgSend(v14, "rootViewController")) == 0
          || (v16 = v15,
              v17 = objc_msgSend(v15, "crl_windowWrapper"),
              v16,
              !v17)
          || (v18 = objc_msgSend(v17, "newWrapperBeginningIgnoringUserInteractionSafely"), v17, !v18))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v29, 0, 0);
          v19 = (id)static OS_os_log.crlError;
          v20 = static os_log_type_t.error.getter(v19);
          sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v20, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v18 = 0;
        }
        v21 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 1, 1, v21);
        type metadata accessor for MainActor(0);
        v22 = v18;
        v23 = v1;
        v24 = a1;
        v25 = static MainActor.shared.getter(v24);
        v26 = (_QWORD *)swift_allocObject(&unk_101287DF8, 56, 7);
        v26[2] = v25;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v23;
        v26[5] = v24;
        v26[6] = v18;
        v27 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013FA3F0, (uint64_t)v26);
        swift_release(v27);

      }
    }
  }
}

uint64_t sub_1009134F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_100913568, v8, v9);
}

uint64_t sub_100913568()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[3] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v0[8] = v8;
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA3D4);
  v0[9] = v9;
  *v9 = v0;
  v9[1] = sub_10091368C;
  return sub_10090546C(v1, v6, v8, 1);
}

uint64_t sub_10091368C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 72));
  swift_bridgeObjectRelease();

  return swift_task_switch(sub_1009136F0, *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_1009136F0()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 32), "endIgnoringUserInteractionSafely", swift_release(*(_QWORD *)(v0 + 40)).n128_f64[0]);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100913730(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 + 81) = a3;
  *(_BYTE *)(v4 + 80) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 32) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 48) = v7;
  return swift_task_switch(sub_1009137A4, v6, v7);
}

uint64_t sub_1009137A4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  _QWORD *v36;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "viewControllerForColumn:", 2);
  *(_QWORD *)(v0 + 56) = v2;

  if (!v2)
    goto LABEL_9;
  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
  {

LABEL_9:
    v20 = *(_QWORD *)(v0 + 32);
    sub_100757E04(&_mh_execute_header, (uint64_t)"show(viewController:push:animated:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1552, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(viewController:push:animated:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1552, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_10:
    v11 = swift_release(v20);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
  }
  v5 = objc_msgSend(v4, "topViewController");
  if (v5)
  {
    v6 = v5;
    v7 = *(void **)(v0 + 16);
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v8 = v7;
    v9 = v6;
    LOBYTE(v6) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v6 & 1) != 0)
    {
      swift_release(*(_QWORD *)(v0 + 32));
      v10 = sub_1009038CC();
      objc_msgSend(v10, "showColumn:", 2);

      return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
    }
  }
  v12 = *(void **)(v0 + 16);
  v13 = type metadata accessor for CRLiOSFolderGridViewController(0);
  v14 = swift_dynamicCastClass(v12, v13);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(_QWORD *)(v0 + 32);
    v17 = *(_BYTE *)(v0 + 81);
    v18 = *(_BYTE *)(v0 + 80);
    v19 = v12;
    swift_release(v16);
    sub_100919FE4(v15, v18, 1, v17);

    return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
  }
  v22 = type metadata accessor for CRLiOSBoardViewController(0);
  v23 = swift_dynamicCastClass(v12, v22);
  if (!v23)
  {
    swift_release(*(_QWORD *)(v0 + 32));

    return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
  }
  v24 = v23;
  v25 = v12;
  v26 = sub_1009038CC();
  v27 = objc_msgSend(v26, "presentedViewController");

  if (!v27)
    goto LABEL_22;
  v28 = objc_opt_self(UINavigationController);
  v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
  if (!v29)
  {
LABEL_21:

    goto LABEL_22;
  }
  v30 = objc_msgSend(v29, "topViewController");

  if (!v30)
    goto LABEL_22;
  v31 = swift_dynamicCastClass(v30, v22);
  if (!v31)
  {
    v27 = v30;
    goto LABEL_21;
  }
  v32 = v31;
  v33 = *(id *)(v0 + 16);
  v34 = v30;
  LOBYTE(v32) = static NSObject.== infix(_:_:)(v32, v24);

  if ((v32 & 1) != 0)
  {
    v20 = *(_QWORD *)(v0 + 32);
    v35 = *(void **)(v0 + 16);

    goto LABEL_10;
  }
LABEL_22:
  v36 = (_QWORD *)swift_task_alloc(dword_1013FA364);
  *(_QWORD *)(v0 + 64) = v36;
  *v36 = v0;
  v36[1] = sub_100913B04;
  return sub_10091A20C(v24, *(_BYTE *)(v0 + 81));
}

uint64_t sub_100913B04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100913BAC;
  else
    v4 = sub_100913B64;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100913B64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v0 + 16);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100913BAC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_100913BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v6;
  v4[9] = v7;
  return swift_task_switch(sub_100913C60, v6, v7);
}

uint64_t sub_100913C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA28C);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_100913D04;
    return sub_10090EBF8();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100913D04()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));

  return swift_task_switch(sub_100913D54, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100913D54()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100913D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 248) = a5;
  *(_QWORD *)(v5 + 168) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 176) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 184) = v7;
  *(_QWORD *)(v5 + 192) = v8;
  return swift_task_switch(sub_100913E08, v7, v8);
}

uint64_t sub_100913E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 168) + 16;
  swift_beginAccess(v1, v0 + 88, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 200) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 208) = sub_100920650(*(_BYTE *)(v0 + 248));
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA294);
    *(_QWORD *)(v0 + 216) = v3;
    *v3 = v0;
    v3[1] = sub_100913EA4;
    return sub_10090F1A8();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100913EA4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));
  return swift_task_switch(sub_100913EF0, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

uint64_t sub_100913EF0()
{
  uint64_t *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t **v8;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "presentedViewController");

  if (!v2)
    goto LABEL_6;
  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
    goto LABEL_5;
  v5 = objc_msgSend(v4, "topViewController");

  if (!v5)
  {
LABEL_6:
    v7 = sub_1009038CC();
    goto LABEL_7;
  }
  v6 = type metadata accessor for CRLiOSBoardViewController(0);
  v7 = (id)swift_dynamicCastClass(v5, v6);
  v2 = v5;
  if (!v7)
  {
LABEL_5:

    goto LABEL_6;
  }
LABEL_7:
  v0[28] = (uint64_t)v7;
  v8 = (uint64_t **)swift_task_alloc(dword_10140053C);
  v0[29] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = (uint64_t *)sub_100913FE8;
  return sub_1009DAE24(v0[26], 1);
}

uint64_t sub_100913FE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 184);
    v5 = *(_QWORD *)(v2 + 192);
    v6 = sub_1009140B4;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 184);
    v5 = *(_QWORD *)(v2 + 192);
    v6 = sub_100914054;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100914054()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(void **)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 176));
  sub_100CE39D8(v1);
  v3 = *(char **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  v5 = swift_release(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_1009140B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  __n128 v18;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 176));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 240);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 112, 0, 0);
  v3 = (void *)static OS_os_log.crlError;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 160, v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Caught error trying to present failed-to-download-shared-copy alert: %@", 71, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v2);
  v16 = *(char **)(v0 + 200);
  v15 = *(void **)(v0 + 208);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt];
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  v18 = swift_release(v17);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v18);
}

uint64_t sub_100914254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v6;
  v4[8] = v7;
  return swift_task_switch(sub_1009142C0, v6, v7);
}

uint64_t sub_1009142C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  char *v6;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController))
    {
      v3 = (_QWORD *)swift_task_alloc(dword_1013FA294);
      *(_QWORD *)(v0 + 80) = v3;
      *v3 = v0;
      v3[1] = sub_100914388;
      return sub_10090F1A8();
    }
    swift_release(*(_QWORD *)(v0 + 48));
    v6 = *(char **)(v0 + 72);
    v5 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt];
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  }
  else
  {
    v5 = *(_QWORD *)(v0 + 48);
  }
  v7 = swift_release(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t sub_100914388()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  return swift_task_switch(sub_1009143D4, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1009143D4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  __n128 v3;

  swift_release(*(_QWORD *)(v0 + 48));
  v1 = *(char **)(v0 + 72);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_100914424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[5] = a4;
  v5[6] = a5;
  v6 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5[7] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v5[8] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[9] = swift_task_alloc(v8);
  v5[10] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[11] = v9;
  v5[12] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[13] = v10;
  v5[14] = v11;
  return swift_task_switch(sub_1009144CC, v10, v11);
}

uint64_t sub_1009144CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 120) = Strong;
  if (!Strong)
  {
    v5 = *(_QWORD *)(v0 + 96);
LABEL_5:
    v7 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    swift_release(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController))
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA294);
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = sub_100914930;
    return sub_10090F1A8();
  }
  v8 = sub_1009038CC();
  v9 = objc_msgSend(v8, "presentedViewController");

  if (!v9)
    goto LABEL_11;
  v10 = objc_opt_self(UINavigationController);
  v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
  if (!v11)
    goto LABEL_10;
  v12 = objc_msgSend(v11, "topViewController");

  if (v12)
  {
    v13 = type metadata accessor for CRLiOSBoardViewController(0);
    v14 = (id)swift_dynamicCastClass(v12, v13);
    v9 = v12;
    if (v14)
      goto LABEL_12;
LABEL_10:

  }
LABEL_11:
  v14 = sub_1009038CC();
LABEL_12:
  v15 = objc_msgSend(v14, "presentedViewController");
  *(_QWORD *)(v0 + 136) = v15;

  if (v15)
  {
    v16 = sub_1004B8930(0, &qword_1013FA480, UIActivityViewController_ptr);
    if ((objc_msgSend(v15, "isKindOfClass:", swift_getObjCClassFromMetadata(v16, v17)) & 1) != 0)
    {
      v18 = sub_1009038CC();
      v19 = objc_msgSend(v18, "presentedViewController");

      if (v19)
      {
        v20 = objc_opt_self(UINavigationController);
        v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
        if (!v21)
        {
LABEL_18:

          goto LABEL_19;
        }
        v22 = objc_msgSend(v21, "topViewController");

        if (v22)
        {
          v23 = type metadata accessor for CRLiOSBoardViewController(0);
          v24 = (id)swift_dynamicCastClass(v22, v23);
          v19 = v22;
          if (v24)
          {
LABEL_20:
            *(_QWORD *)(v0 + 144) = v24;
            v25 = (_QWORD *)swift_task_alloc(dword_101400534);
            *(_QWORD *)(v0 + 152) = v25;
            *v25 = v0;
            v25[1] = sub_100914D64;
            return sub_1009DB078(1);
          }
          goto LABEL_18;
        }
      }
LABEL_19:
      v24 = sub_1009038CC();
      goto LABEL_20;
    }

  }
  v26 = sub_100903BFC();
  if ((v26 & 1) != 0)
  {
    v27 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v26);
    v28 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 176) = v28;
    *(_QWORD *)(v0 + 184) = v29;
    return swift_task_switch(sub_100914FF4, v28, v29);
  }
  v30 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 72);
  v31 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 56);
  v33 = *(_QWORD *)(v0 + 64);
  sub_1004B8460(*(_QWORD *)(v0 + 48), v31, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(v31, v32, type metadata accessor for CRLBoardIdentifier);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = (v35 + 16) & ~v35;
  v37 = (v33 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject(&unk_101288518, v37 + 8, v35 | 7);
  *(_QWORD *)(v0 + 216) = v38;
  sub_1004B84E0(v31, v38 + v36, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v38 + v37) = v30;
  v39 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  v40 = *(_QWORD *)(v30 + v39);
  if (!v40
    || *(_BYTE *)(v40 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) != 1)
  {
    v44 = *(_QWORD *)(v0 + 96);
    v45 = *(_QWORD *)(v0 + 72);
    v46 = (char *)*(id *)(v0 + 120);
    swift_release(v44);
    sub_100915434(v45, v46);
    sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
    v48 = *(_QWORD *)(v0 + 216);
    v47 = *(_QWORD *)(v0 + 224);
    v49 = *(char **)(v0 + 120);
    v5 = *(_QWORD *)&v49[v47];
    *(_QWORD *)&v49[v47] = 0;

    swift_release(v48);
    goto LABEL_5;
  }
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(id *)(v0 + 120);
  sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
  v43 = (_QWORD *)swift_task_alloc(dword_1013FA29C);
  *(_QWORD *)(v0 + 232) = v43;
  *v43 = v0;
  v43[1] = sub_100915304;
  return sub_10090F5A4((uint64_t)sub_100922B88, v38);
}

uint64_t sub_100914930()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return swift_task_switch(sub_10091497C, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_10091497C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "presentedViewController");

  if (!v2)
    goto LABEL_6;
  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
    goto LABEL_5;
  v5 = objc_msgSend(v4, "topViewController");

  if (v5)
  {
    v6 = type metadata accessor for CRLiOSBoardViewController(0);
    v7 = (id)swift_dynamicCastClass(v5, v6);
    v2 = v5;
    if (v7)
      goto LABEL_7;
LABEL_5:

  }
LABEL_6:
  v7 = sub_1009038CC();
LABEL_7:
  v8 = objc_msgSend(v7, "presentedViewController");
  *(_QWORD *)(v0 + 136) = v8;

  if (v8)
  {
    v9 = sub_1004B8930(0, &qword_1013FA480, UIActivityViewController_ptr);
    if ((objc_msgSend(v8, "isKindOfClass:", swift_getObjCClassFromMetadata(v9, v10)) & 1) != 0)
    {
      v11 = sub_1009038CC();
      v12 = objc_msgSend(v11, "presentedViewController");

      if (v12)
      {
        v13 = objc_opt_self(UINavigationController);
        v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
        if (!v14)
        {
LABEL_13:

          goto LABEL_14;
        }
        v15 = objc_msgSend(v14, "topViewController");

        if (v15)
        {
          v16 = type metadata accessor for CRLiOSBoardViewController(0);
          v17 = (id)swift_dynamicCastClass(v15, v16);
          v12 = v15;
          if (v17)
          {
LABEL_15:
            *(_QWORD *)(v0 + 144) = v17;
            v18 = (_QWORD *)swift_task_alloc(dword_101400534);
            *(_QWORD *)(v0 + 152) = v18;
            *v18 = v0;
            v18[1] = sub_100914D64;
            return sub_1009DB078(1);
          }
          goto LABEL_13;
        }
      }
LABEL_14:
      v17 = sub_1009038CC();
      goto LABEL_15;
    }

  }
  v20 = sub_100903BFC();
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v20);
    v22 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 176) = v22;
    *(_QWORD *)(v0 + 184) = v23;
    return swift_task_switch(sub_100914FF4, v22, v23);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 72);
    v25 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 56);
    v27 = *(_QWORD *)(v0 + 64);
    sub_1004B8460(*(_QWORD *)(v0 + 48), v25, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460(v25, v26, type metadata accessor for CRLBoardIdentifier);
    v29 = *(unsigned __int8 *)(v28 + 80);
    v30 = (v29 + 16) & ~v29;
    v31 = (v27 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject(&unk_101288518, v31 + 8, v29 | 7);
    *(_QWORD *)(v0 + 216) = v32;
    sub_1004B84E0(v25, v32 + v30, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v32 + v31) = v24;
    v33 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    v34 = *(_QWORD *)(v24 + v33);
    if (v34
      && *(_BYTE *)(v34 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
    {
      v35 = *(_QWORD *)(v0 + 72);
      v36 = *(id *)(v0 + 120);
      sub_1004B84A4(v35, type metadata accessor for CRLBoardIdentifier);
      v37 = (_QWORD *)swift_task_alloc(dword_1013FA29C);
      *(_QWORD *)(v0 + 232) = v37;
      *v37 = v0;
      v37[1] = sub_100915304;
      return sub_10090F5A4((uint64_t)sub_100922B88, v32);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 96);
      v39 = *(_QWORD *)(v0 + 72);
      v40 = (char *)*(id *)(v0 + 120);
      swift_release(v38);
      sub_100915434(v39, v40);
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      v42 = *(_QWORD *)(v0 + 216);
      v41 = *(_QWORD *)(v0 + 224);
      v43 = *(char **)(v0 + 120);
      v44 = *(_QWORD *)&v43[v41];
      *(_QWORD *)&v43[v41] = 0;

      swift_release(v42);
      v46 = *(_QWORD *)(v0 + 72);
      v45 = *(_QWORD *)(v0 + 80);
      swift_release(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_100914D64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 104);
    v5 = *(_QWORD *)(v2 + 112);
    v6 = sub_1009153C4;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 104);
    v5 = *(_QWORD *)(v2 + 112);
    v6 = sub_100914DD0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100914DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = sub_100903BFC();
  if ((v1 & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 176) = v3;
    *(_QWORD *)(v0 + 184) = v4;
    return swift_task_switch(sub_100914FF4, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 64);
    sub_1004B8460(*(_QWORD *)(v0 + 48), v7, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460(v7, v8, type metadata accessor for CRLBoardIdentifier);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = (v11 + 16) & ~v11;
    v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = swift_allocObject(&unk_101288518, v13 + 8, v11 | 7);
    *(_QWORD *)(v0 + 216) = v14;
    sub_1004B84E0(v7, v14 + v12, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v14 + v13) = v6;
    v15 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    v16 = *(_QWORD *)(v6 + v15);
    if (v16
      && *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
    {
      v17 = *(_QWORD *)(v0 + 72);
      v18 = *(id *)(v0 + 120);
      sub_1004B84A4(v17, type metadata accessor for CRLBoardIdentifier);
      v19 = (_QWORD *)swift_task_alloc(dword_1013FA29C);
      *(_QWORD *)(v0 + 232) = v19;
      *v19 = v0;
      v19[1] = sub_100915304;
      return sub_10090F5A4((uint64_t)sub_100922B88, v14);
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 72);
      v22 = (char *)*(id *)(v0 + 120);
      swift_release(v20);
      sub_100915434(v21, v22);
      sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
      v24 = *(_QWORD *)(v0 + 216);
      v23 = *(_QWORD *)(v0 + 224);
      v25 = *(char **)(v0 + 120);
      v26 = *(_QWORD *)&v25[v23];
      *(_QWORD *)&v25[v23] = 0;

      swift_release(v24);
      v28 = *(_QWORD *)(v0 + 72);
      v27 = *(_QWORD *)(v0 + 80);
      swift_release(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_100914FF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[15];
  v3 = static MainActor.shared.getter(a1);
  v1[24] = v3;
  v4 = swift_task_alloc(32);
  v1[25] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[26] = v5;
  *v5 = v1;
  v5[1] = sub_1009150A8;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000023, 0x8000000100FE01F0, sub_100922DCC, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1009150A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 200);
  v3 = *(_QWORD *)(*v0 + 192);
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100915110, *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 184));
}

uint64_t sub_100915110()
{
  _QWORD *v0;

  swift_release(v0[21]);
  return swift_task_switch(sub_100915148, v0[13], v0[14]);
}

uint64_t sub_100915148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  sub_1004B8460(*(_QWORD *)(v0 + 48), v2, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(v2, v3, type metadata accessor for CRLBoardIdentifier);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = (v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject(&unk_101288518, v8 + 8, v6 | 7);
  *(_QWORD *)(v0 + 216) = v9;
  sub_1004B84E0(v2, v9 + v7, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v9 + v8) = v1;
  v10 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  v11 = *(_QWORD *)(v1 + v10);
  if (v11
    && *(_BYTE *)(v11 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
  {
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(id *)(v0 + 120);
    sub_1004B84A4(v12, type metadata accessor for CRLBoardIdentifier);
    v14 = (_QWORD *)swift_task_alloc(dword_1013FA29C);
    *(_QWORD *)(v0 + 232) = v14;
    *v14 = v0;
    v14[1] = sub_100915304;
    return sub_10090F5A4((uint64_t)sub_100922B88, v9);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 72);
    v18 = (char *)*(id *)(v0 + 120);
    swift_release(v16);
    sub_100915434(v17, v18);
    sub_1004B84A4(v17, type metadata accessor for CRLBoardIdentifier);
    v20 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 224);
    v21 = *(char **)(v0 + 120);
    v22 = *(_QWORD *)&v21[v19];
    *(_QWORD *)&v21[v19] = 0;

    swift_release(v20);
    v24 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 80);
    swift_release(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100915304()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  return swift_task_switch(sub_100915350, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_100915350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(v0 + 96));
  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(char **)(v0 + 120);
  v4 = *(_QWORD *)&v3[v1];
  *(_QWORD *)&v3[v1] = 0;

  swift_release(v2);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  swift_release(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009153C4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 136);
  v2 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);

  swift_release(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100915434(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  char v37[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v37[-v12 - 8];
  v14 = &v37[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48) - 8 - v12];
  sub_1004B8460(a1, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0xE000000000000000;
  swift_storeEnumTagMultiPayload(v13, v7, 2);
  v15 = sub_100903140();
  if (v15)
  {
    v16 = (void *)v15;
    v17 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v18 = *(void **)&a2[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
    if (v18 && objc_msgSend(v18, "isUserInteractionEnabled"))
    {
      v19 = *(void **)&a2[v17];
      if (!v19
        || (v20 = objc_msgSend(v19, "rootViewController")) == 0
        || (v21 = v20,
            v22 = objc_msgSend(v20, "crl_windowWrapper"),
            v21,
            !v22)
        || (v23 = objc_msgSend(v22, "newWrapperBeginningIgnoringUserInteractionSafely"), v22, !v23))
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v37, 0, 0);
        v24 = (id)static OS_os_log.crlError;
        v25 = static os_log_type_t.error.getter(v24);
        sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v25, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        v23 = 0;
      }
      v26 = swift_allocObject(&unk_1012884C8, 24, 7);
      *(_QWORD *)(v26 + 16) = v23;
      v27 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
      sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      type metadata accessor for MainActor(0);
      swift_retain(v26);
      v36 = a2;
      v28 = static MainActor.shared.getter(v36);
      v29 = *(unsigned __int8 *)(v8 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = (v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
      v33 = swift_allocObject(&unk_101288540, v32 + 8, v29 | 7);
      *(_QWORD *)(v33 + 16) = v28;
      *(_QWORD *)(v33 + 24) = &protocol witness table for MainActor;
      sub_1004B84E0((uint64_t)v10, v33 + v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
      *(_QWORD *)(v33 + v31) = v26;
      *(_QWORD *)(v33 + v32) = v36;
      v34 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_1013FA620, v33);
      swift_release(v26);
      swift_release(v34);
    }

  }
  return sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100915778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v6;
  v4[9] = v7;
  return swift_task_switch(sub_1009157E4, v6, v7);
}

uint64_t sub_1009157E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA27C);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_100915888;
    return sub_10090DEC4();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100915888()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));

  return swift_task_switch(sub_100922DD0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1009158D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[44] = a4;
  v5[45] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[46] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[47] = v7;
  v5[48] = v8;
  return swift_task_switch(sub_100915944, v7, v8);
}

uint64_t sub_100915944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  __n128 v39;

  v1 = *(_QWORD *)(v0 + 352) + 16;
  swift_beginAccess(v1, v0 + 248, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 392) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 328) = v3;
    swift_errorRetain(v3);
    v4 = sub_1004B804C(&qword_1013E0210);
    swift_dynamicCast(v0 + 456, v0 + 328, v4, &type metadata for CRLAcceptCloudKitShareAttemptError, 6);
    if (qword_1013DD4C8 != -1)
      swift_once(&qword_1013DD4C8, sub_1008FDC5C);
    v5 = qword_1013DD4D0;
    swift_bridgeObjectRetain(*(_QWORD *)algn_10147FEE8);
    if (v5 != -1)
      swift_once(&qword_1013DD4D0, sub_1008FDD2C);
    swift_bridgeObjectRetain(*(_QWORD *)algn_10147FEF8);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);
    *(_QWORD *)(v0 + 400) = v8;

    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = String._bridgeToObjectiveC()();
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v13, 0, 0);

    objc_msgSend(v8, "addAction:", v14);
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    v15 = *(_QWORD *)(v0 + 360);
    swift_beginAccess(&static OS_os_log.crlError, v0 + 224, 0, 0);
    v16 = (void *)static OS_os_log.crlError;
    v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 408) = v17;
    inited = swift_initStackObject(v17, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v15, v0 + 320, v0 + 200);
    v19 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 216);
    v21 = v16;
    v22 = Error.publicDescription.getter(v19, v20);
    v24 = v23;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v25 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 416) = v25;
    *(_QWORD *)(inited + 64) = v25;
    *(_QWORD *)(inited + 32) = v22;
    *(_QWORD *)(inited + 40) = v24;
    swift_getErrorValue(v15, v0 + 344, v0 + 272);
    v26 = Error.fullDescription.getter(*(_QWORD *)(v0 + 280));
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v25;
    *(_QWORD *)(inited + 72) = v26;
    *(_QWORD *)(inited + 80) = v27;
    v28 = static os_log_type_t.error.getter(v26);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v28, "Could not join or download board. Error: \"%{public}@ <%@>\"", 58, 2, inited);
    swift_setDeallocating(inited);
    v29 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 424) = v29;
    swift_arrayDestroy(inited + 32, 2, v29);

    v30 = sub_1009038CC();
    v31 = objc_msgSend(v30, "presentedViewController");

    if (!v31)
      goto LABEL_13;
    v32 = objc_opt_self(UINavigationController);
    v33 = (void *)swift_dynamicCastObjCClass(v31, v32);
    if (v33)
    {
      v34 = objc_msgSend(v33, "topViewController");

      if (!v34)
      {
LABEL_13:
        v36 = sub_1009038CC();
        goto LABEL_14;
      }
      v35 = type metadata accessor for CRLiOSBoardViewController(0);
      v36 = (id)swift_dynamicCastClass(v34, v35);
      v31 = v34;
      if (v36)
      {
LABEL_14:
        *(_QWORD *)(v0 + 432) = v36;
        v37 = (_QWORD *)swift_task_alloc(dword_10140053C);
        *(_QWORD *)(v0 + 440) = v37;
        *v37 = v0;
        v37[1] = sub_100915E30;
        return sub_1009DAE24((uint64_t)v8, 1);
      }
    }

    goto LABEL_13;
  }
  v39 = swift_release(*(_QWORD *)(v0 + 368));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v39);
}

uint64_t sub_100915E30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 440);
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_100915EFC;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_100915E9C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100915E9C()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(void **)(v0 + 400);
  swift_release(*(_QWORD *)(v0 + 368));
  sub_100CE39D8(v1);
  v2 = *(char **)(v0 + 392);
  v3 = *(void **)(v0 + 400);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  v5 = swift_release(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_100915EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  __n128 v17;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(void **)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 416);
  swift_release(*(_QWORD *)(v0 + 368));

  v6 = (void *)static OS_os_log.crlError;
  inited = swift_initStackObject(v4, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 336, v0 + 296);
  v8 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);
  v10 = v6;
  v11 = Error.localizedDescription.getter(v8, v9);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v12;
  v13 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v13, "Caught error trying to present failed-to-join alert: %@", 55, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v2);

  swift_errorRelease(v1);
  v14 = *(char **)(v0 + 392);
  v15 = *(void **)(v0 + 400);
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  v17 = swift_release(v16);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v17);
}

uint64_t sub_100916040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v6;
  v4[8] = v7;
  return swift_task_switch(sub_1009160AC, v6, v7);
}

uint64_t sub_1009160AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  char *v6;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController))
    {
      v3 = (_QWORD *)swift_task_alloc(dword_1013FA284);
      *(_QWORD *)(v0 + 80) = v3;
      *v3 = v0;
      v3[1] = sub_100916174;
      return sub_10090E328();
    }
    swift_release(*(_QWORD *)(v0 + 48));
    v6 = *(char **)(v0 + 72);
    v5 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  }
  else
  {
    v5 = *(_QWORD *)(v0 + 48);
  }
  v7 = swift_release(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t sub_100916174()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  return swift_task_switch(sub_1009161C0, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1009161C0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  __n128 v3;

  swift_release(*(_QWORD *)(v0 + 48));
  v1 = *(char **)(v0 + 72);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_100916210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[8] = a4;
  v5[9] = a5;
  v6 = sub_1004B804C(&qword_1013E01F0);
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[12] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[13] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[14] = swift_task_alloc(v10);
  v5[15] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v5[16] = v11;
  v5[17] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v5[18] = v12;
  v5[19] = v13;
  return swift_task_switch(sub_1009162E0, v12, v13);
}

uint64_t sub_1009162E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 160) = Strong;
  if (!Strong)
  {
    swift_release(*(_QWORD *)(v0 + 136));
LABEL_5:
    v5 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController))
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FA284);
    *(_QWORD *)(v0 + 168) = v3;
    *v3 = v0;
    v3[1] = sub_1009168C0;
    return sub_10090E328();
  }
  v7 = sub_1009038CC();
  v8 = objc_msgSend(v7, "presentedViewController");

  if (!v8)
    goto LABEL_11;
  v9 = objc_opt_self(UINavigationController);
  v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
  if (!v10)
    goto LABEL_10;
  v11 = objc_msgSend(v10, "topViewController");

  if (v11)
  {
    v12 = type metadata accessor for CRLiOSBoardViewController(0);
    v13 = (id)swift_dynamicCastClass(v11, v12);
    v8 = v11;
    if (v13)
      goto LABEL_12;
LABEL_10:

  }
LABEL_11:
  v13 = sub_1009038CC();
LABEL_12:
  v14 = objc_msgSend(v13, "presentedViewController");
  *(_QWORD *)(v0 + 176) = v14;

  if (v14)
  {
    v15 = sub_1004B8930(0, &qword_1013FA480, UIActivityViewController_ptr);
    if ((objc_msgSend(v14, "isKindOfClass:", swift_getObjCClassFromMetadata(v15, v16)) & 1) != 0)
    {
      v17 = sub_1009038CC();
      v18 = objc_msgSend(v17, "presentedViewController");

      if (v18)
      {
        v19 = objc_opt_self(UINavigationController);
        v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
        if (!v20)
        {
LABEL_18:

          goto LABEL_19;
        }
        v21 = objc_msgSend(v20, "topViewController");

        if (v21)
        {
          v22 = type metadata accessor for CRLiOSBoardViewController(0);
          v23 = (id)swift_dynamicCastClass(v21, v22);
          v18 = v21;
          if (v23)
          {
LABEL_20:
            *(_QWORD *)(v0 + 184) = v23;
            v24 = (_QWORD *)swift_task_alloc(dword_101400534);
            *(_QWORD *)(v0 + 192) = v24;
            *v24 = v0;
            v24[1] = sub_100916E64;
            return sub_1009DB078(1);
          }
          goto LABEL_18;
        }
      }
LABEL_19:
      v23 = sub_1009038CC();
      goto LABEL_20;
    }

  }
  v25 = sub_100903BFC();
  if ((v25 & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 136));
    v29 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 72);
    v32 = (_QWORD *)(v29 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    sub_1004B8460(v31, v29, type metadata accessor for CRLBoardIdentifier);
    *v32 = 0;
    v32[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload(v29, v30, 2);
    v33 = sub_100903140();
    if (v33)
    {
      v34 = (void *)v33;
      v35 = *(_QWORD *)(v0 + 160);
      v36 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      v37 = *(void **)(v35 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v37 && objc_msgSend(v37, "isUserInteractionEnabled"))
      {
        v38 = *(void **)(v35 + v36);
        if (!v38
          || (v39 = objc_msgSend(v38, "rootViewController")) == 0
          || (v40 = v39,
              v41 = objc_msgSend(v39, "crl_windowWrapper"),
              v40,
              !v41)
          || (v42 = objc_msgSend(v41, "newWrapperBeginningIgnoringUserInteractionSafely"), v41, !v42))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v0 + 40, 0, 0);
          v43 = (id)static OS_os_log.crlError;
          v44 = static os_log_type_t.error.getter(v43);
          sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v44, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v42 = 0;
        }
        v45 = *(void **)(v0 + 160);
        v46 = *(_QWORD *)(v0 + 120);
        v47 = *(_QWORD *)(v0 + 112);
        v48 = *(_QWORD *)(v0 + 96);
        v49 = *(_QWORD *)(v0 + 80);
        v63 = *(_QWORD *)(v0 + 104);
        v64 = v49;
        v50 = swift_allocObject(&unk_1012884C8, 24, 7);
        *(_QWORD *)(v50 + 16) = v42;
        v51 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v49, 1, 1, v51);
        sub_1004B8460(v46, v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_retain(v50);
        v52 = v45;
        v53 = static MainActor.shared.getter(v52);
        v54 = *(unsigned __int8 *)(v48 + 80);
        v55 = (v54 + 32) & ~v54;
        v56 = (v63 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
        v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
        v58 = swift_allocObject(&unk_1012884F0, v57 + 8, v54 | 7);
        *(_QWORD *)(v58 + 16) = v53;
        *(_QWORD *)(v58 + 24) = &protocol witness table for MainActor;
        sub_1004B84E0(v47, v58 + v55, type metadata accessor for CRLBoardLibraryViewModel.Item);
        *(_QWORD *)(v58 + v56) = v50;
        *(_QWORD *)(v58 + v57) = v52;
        v59 = sub_100521B98(v64, (uint64_t)&unk_1013FA5E0, v58);
        swift_release(v59);
        swift_release(v50);
      }

    }
    v60 = *(char **)(v0 + 160);
    v61 = *(_QWORD *)(v0 + 120);
    v62 = *(_QWORD *)&v60[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
    *(_QWORD *)&v60[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

    swift_release(v62);
    sub_1004B84A4(v61, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_5;
  }
  v26 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v25);
  v27 = dispatch thunk of Actor.unownedExecutor.getter(v26, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 216) = v27;
  *(_QWORD *)(v0 + 224) = v28;
  return swift_task_switch(sub_10091725C, v27, v28);
}

uint64_t sub_1009168C0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));
  return swift_task_switch(sub_10091690C, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_10091690C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "presentedViewController");

  if (!v2)
    goto LABEL_6;
  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
    goto LABEL_5;
  v5 = objc_msgSend(v4, "topViewController");

  if (v5)
  {
    v6 = type metadata accessor for CRLiOSBoardViewController(0);
    v7 = (id)swift_dynamicCastClass(v5, v6);
    v2 = v5;
    if (v7)
      goto LABEL_7;
LABEL_5:

  }
LABEL_6:
  v7 = sub_1009038CC();
LABEL_7:
  v8 = objc_msgSend(v7, "presentedViewController");
  *(_QWORD *)(v0 + 176) = v8;

  if (v8)
  {
    v9 = sub_1004B8930(0, &qword_1013FA480, UIActivityViewController_ptr);
    if ((objc_msgSend(v8, "isKindOfClass:", swift_getObjCClassFromMetadata(v9, v10)) & 1) != 0)
    {
      v11 = sub_1009038CC();
      v12 = objc_msgSend(v11, "presentedViewController");

      if (v12)
      {
        v13 = objc_opt_self(UINavigationController);
        v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
        if (!v14)
        {
LABEL_13:

          goto LABEL_14;
        }
        v15 = objc_msgSend(v14, "topViewController");

        if (v15)
        {
          v16 = type metadata accessor for CRLiOSBoardViewController(0);
          v17 = (id)swift_dynamicCastClass(v15, v16);
          v12 = v15;
          if (v17)
          {
LABEL_15:
            *(_QWORD *)(v0 + 184) = v17;
            v18 = (_QWORD *)swift_task_alloc(dword_101400534);
            *(_QWORD *)(v0 + 192) = v18;
            *v18 = v0;
            v18[1] = sub_100916E64;
            return sub_1009DB078(1);
          }
          goto LABEL_13;
        }
      }
LABEL_14:
      v17 = sub_1009038CC();
      goto LABEL_15;
    }

  }
  v20 = sub_100903BFC();
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v20);
    v22 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 216) = v22;
    *(_QWORD *)(v0 + 224) = v23;
    return swift_task_switch(sub_10091725C, v22, v23);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 136));
    v24 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 88);
    v26 = *(_QWORD *)(v0 + 72);
    v27 = (_QWORD *)(v24 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    sub_1004B8460(v26, v24, type metadata accessor for CRLBoardIdentifier);
    *v27 = 0;
    v27[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload(v24, v25, 2);
    v28 = sub_100903140();
    if (v28)
    {
      v29 = (void *)v28;
      v30 = *(_QWORD *)(v0 + 160);
      v31 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      v32 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v32 && objc_msgSend(v32, "isUserInteractionEnabled"))
      {
        v33 = *(void **)(v30 + v31);
        if (!v33
          || (v34 = objc_msgSend(v33, "rootViewController")) == 0
          || (v35 = v34,
              v36 = objc_msgSend(v34, "crl_windowWrapper"),
              v35,
              !v36)
          || (v37 = objc_msgSend(v36, "newWrapperBeginningIgnoringUserInteractionSafely"), v36, !v37))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v0 + 40, 0, 0);
          v38 = (id)static OS_os_log.crlError;
          v39 = static os_log_type_t.error.getter(v38);
          sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v39, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v37 = 0;
        }
        v40 = *(void **)(v0 + 160);
        v41 = *(_QWORD *)(v0 + 120);
        v42 = *(_QWORD *)(v0 + 112);
        v43 = *(_QWORD *)(v0 + 96);
        v44 = *(_QWORD *)(v0 + 80);
        v60 = *(_QWORD *)(v0 + 104);
        v61 = v44;
        v45 = swift_allocObject(&unk_1012884C8, 24, 7);
        *(_QWORD *)(v45 + 16) = v37;
        v46 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v44, 1, 1, v46);
        sub_1004B8460(v41, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_retain(v45);
        v47 = v40;
        v48 = static MainActor.shared.getter(v47);
        v49 = *(unsigned __int8 *)(v43 + 80);
        v50 = (v49 + 32) & ~v49;
        v51 = (v60 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
        v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
        v53 = swift_allocObject(&unk_1012884F0, v52 + 8, v49 | 7);
        *(_QWORD *)(v53 + 16) = v48;
        *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
        sub_1004B84E0(v42, v53 + v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
        *(_QWORD *)(v53 + v51) = v45;
        *(_QWORD *)(v53 + v52) = v47;
        v54 = sub_100521B98(v61, (uint64_t)&unk_1013FA5E0, v53);
        swift_release(v54);
        swift_release(v45);
      }

    }
    v55 = *(char **)(v0 + 160);
    v56 = *(_QWORD *)(v0 + 120);
    v57 = *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
    *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

    swift_release(v57);
    sub_1004B84A4(v56, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v58 = *(_QWORD *)(v0 + 112);
    v59 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100916E64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_1009176CC;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_100916ED0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100916ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = sub_100903BFC();
  if ((v1 & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 216) = v3;
    *(_QWORD *)(v0 + 224) = v4;
    return swift_task_switch(sub_10091725C, v3, v4);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 136));
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = (_QWORD *)(v6 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    sub_1004B8460(v8, v6, type metadata accessor for CRLBoardIdentifier);
    *v9 = 0;
    v9[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload(v6, v7, 2);
    v10 = sub_100903140();
    if (v10)
    {
      v11 = (void *)v10;
      v12 = *(_QWORD *)(v0 + 160);
      v13 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      v14 = *(void **)(v12 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v14 && objc_msgSend(v14, "isUserInteractionEnabled"))
      {
        v15 = *(void **)(v12 + v13);
        if (!v15
          || (v16 = objc_msgSend(v15, "rootViewController")) == 0
          || (v17 = v16,
              v18 = objc_msgSend(v16, "crl_windowWrapper"),
              v17,
              !v18)
          || (v19 = objc_msgSend(v18, "newWrapperBeginningIgnoringUserInteractionSafely"), v18, !v19))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v0 + 40, 0, 0);
          v20 = (id)static OS_os_log.crlError;
          v21 = static os_log_type_t.error.getter(v20);
          sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v21, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v19 = 0;
        }
        v22 = *(void **)(v0 + 160);
        v23 = *(_QWORD *)(v0 + 120);
        v24 = *(_QWORD *)(v0 + 112);
        v25 = *(_QWORD *)(v0 + 96);
        v26 = *(_QWORD *)(v0 + 80);
        v42 = *(_QWORD *)(v0 + 104);
        v43 = v26;
        v27 = swift_allocObject(&unk_1012884C8, 24, 7);
        *(_QWORD *)(v27 + 16) = v19;
        v28 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 1, 1, v28);
        sub_1004B8460(v23, v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_retain(v27);
        v29 = v22;
        v30 = static MainActor.shared.getter(v29);
        v31 = *(unsigned __int8 *)(v25 + 80);
        v32 = (v31 + 32) & ~v31;
        v33 = (v42 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
        v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
        v35 = swift_allocObject(&unk_1012884F0, v34 + 8, v31 | 7);
        *(_QWORD *)(v35 + 16) = v30;
        *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
        sub_1004B84E0(v24, v35 + v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
        *(_QWORD *)(v35 + v33) = v27;
        *(_QWORD *)(v35 + v34) = v29;
        v36 = sub_100521B98(v43, (uint64_t)&unk_1013FA5E0, v35);
        swift_release(v36);
        swift_release(v27);
      }

    }
    v37 = *(char **)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 120);
    v39 = *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
    *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

    swift_release(v39);
    sub_1004B84A4(v38, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v40 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10091725C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[20];
  v3 = static MainActor.shared.getter(a1);
  v1[29] = v3;
  v4 = swift_task_alloc(32);
  v1[30] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[31] = v5;
  *v5 = v1;
  v5[1] = sub_100917310;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000023, 0x8000000100FE01F0, sub_100922DCC, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100917310()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 240);
  v3 = *(_QWORD *)(*v0 + 232);
  swift_task_dealloc(*(_QWORD *)(*v0 + 248));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100917378, *(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224));
}

uint64_t sub_100917378()
{
  _QWORD *v0;

  swift_release(v0[26]);
  return swift_task_switch(sub_1009173B0, v0[18], v0[19]);
}

uint64_t sub_1009173B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  swift_release(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)(v1 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
  sub_1004B8460(v3, v1, type metadata accessor for CRLBoardIdentifier);
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload(v1, v2, 2);
  v5 = sub_100903140();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(_QWORD *)(v0 + 160);
    v8 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v9 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v9 && objc_msgSend(v9, "isUserInteractionEnabled"))
    {
      v10 = *(void **)(v7 + v8);
      if (!v10
        || (v11 = objc_msgSend(v10, "rootViewController")) == 0
        || (v12 = v11,
            v13 = objc_msgSend(v11, "crl_windowWrapper"),
            v12,
            !v13)
        || (v14 = objc_msgSend(v13, "newWrapperBeginningIgnoringUserInteractionSafely"), v13, !v14))
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v0 + 40, 0, 0);
        v15 = (id)static OS_os_log.crlError;
        v16 = static os_log_type_t.error.getter(v15);
        sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v16, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        v14 = 0;
      }
      v17 = *(void **)(v0 + 160);
      v18 = *(_QWORD *)(v0 + 120);
      v19 = *(_QWORD *)(v0 + 112);
      v20 = *(_QWORD *)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 80);
      v38 = *(_QWORD *)(v0 + 104);
      v39 = v21;
      v22 = swift_allocObject(&unk_1012884C8, 24, 7);
      *(_QWORD *)(v22 + 16) = v14;
      v23 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
      sub_1004B8460(v18, v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_retain(v22);
      v24 = v17;
      v25 = static MainActor.shared.getter(v24);
      v26 = *(unsigned __int8 *)(v20 + 80);
      v27 = (v26 + 32) & ~v26;
      v28 = (v38 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
      v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
      v30 = swift_allocObject(&unk_1012884F0, v29 + 8, v26 | 7);
      *(_QWORD *)(v30 + 16) = v25;
      *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
      sub_1004B84E0(v19, v30 + v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
      *(_QWORD *)(v30 + v28) = v22;
      *(_QWORD *)(v30 + v29) = v24;
      v31 = sub_100521B98(v39, (uint64_t)&unk_1013FA5E0, v30);
      swift_release(v31);
      swift_release(v22);
    }

  }
  v32 = *(char **)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt];
  *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  swift_release(v34);
  sub_1004B84A4(v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v35 = *(_QWORD *)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009176CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);

  swift_release(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100917750()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  NSString v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  double result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _BYTE v75[152];
  _BYTE v76[72];
  _BYTE v77[32];

  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, v77, 0, 0);
  v1 = (void *)static OS_os_log.sceneManagement;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v76);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
  *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v0;
  v4 = v1;
  v0;
  v6 = static os_log_type_t.default.getter(v5);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "Scene delegate (%p) showing Welcome.", 36, 2, inited);
  swift_setDeallocating(inited);
  v7 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v7);

  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = sub_10091FD04(0x5F656D6F636C6577, 0xED00006E69617262, 0, 0);
  if (v16)
  {
    v17 = v16;
    v18 = sub_10091FD04(0x5F656D6F636C6577, 0xEC00000073636F64, 0, 0);
    if (v18)
    {
      v19 = v18;
      v20 = sub_10091FD04(0x5F656D6F636C6577, 0xEE006E6F73726570, 0, 0);
      if (!v20)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1249, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWelcome()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1249, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

        goto LABEL_11;
      }
      v73 = v20;
      v74 = v13;
      v21 = objc_msgSend(v8, "mainBundle");
      v22 = String._bridgeToObjectiveC()();
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v71 = v26;
      v72 = v25;

      v27 = objc_msgSend(v8, "mainBundle");
      v28 = String._bridgeToObjectiveC()();
      v29 = String._bridgeToObjectiveC()();
      v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v69 = v32;
      v70 = v31;

      v33 = objc_msgSend(v8, "mainBundle");
      v34 = String._bridgeToObjectiveC()();
      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v67 = v38;
      v68 = v37;

      v39 = objc_msgSend(v8, "mainBundle");
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v39, "localizedStringForKey:value:table:", v40, v41, 0);

      v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v66 = v43;

      v44 = objc_msgSend(v8, "mainBundle");
      v45 = String._bridgeToObjectiveC()();
      v46 = String._bridgeToObjectiveC()();
      v47 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, v46, 0);

      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v50 = v49;

      v51 = objc_msgSend(v8, "mainBundle");
      v52 = String._bridgeToObjectiveC()();
      v53 = String._bridgeToObjectiveC()();
      v54 = objc_msgSend(v51, "localizedStringForKey:value:table:", v52, v53, 0);

      v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v57 = v56;

      v58 = sub_1004B804C(&qword_1013FA580);
      v59 = swift_initStackObject(v58, v75);
      *(_OWORD *)(v59 + 16) = xmmword_100EF5550;
      *(_QWORD *)(v59 + 32) = v72;
      *(_QWORD *)(v59 + 40) = v71;
      *(_QWORD *)(v59 + 48) = v65;
      *(_QWORD *)(v59 + 56) = v66;
      *(_QWORD *)(v59 + 64) = v17;
      *(_QWORD *)(v59 + 72) = v70;
      *(_QWORD *)(v59 + 80) = v69;
      *(_QWORD *)(v59 + 88) = v48;
      *(_QWORD *)(v59 + 96) = v50;
      *(_QWORD *)(v59 + 104) = v19;
      *(_QWORD *)(v59 + 112) = v68;
      *(_QWORD *)(v59 + 120) = v67;
      *(_QWORD *)(v59 + 128) = v55;
      *(_QWORD *)(v59 + 136) = v57;
      *(_QWORD *)(v59 + 144) = v73;
      v17 = v17;
      v60 = v19;
      v61 = v73;
      sub_100918FB4(v74, v15, v59);
      swift_setDeallocating(v59);
      v62 = *(_QWORD *)(v59 + 16);
      v63 = sub_1004B804C((uint64_t *)&unk_1013FA588);
      swift_arrayDestroy(v59 + 32, v62, v63);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1248, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWelcome()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1248, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1247, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWelcome()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1247, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
LABEL_11:
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100917FF0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  id v24;
  Class isa;
  unsigned int v26;
  char v27;
  int v28;
  char v29;
  unsigned __int8 *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  id v41;
  NSString v42;
  NSString v43;
  id v44;
  uint64_t v45;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  uint64_t v50;
  id v51;
  NSString v52;
  NSString v53;
  id v54;
  uint64_t v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  id v61;
  NSString v62;
  NSString v63;
  id v64;
  uint64_t v65;
  id v66;
  NSString v67;
  NSString v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  NSString v75;
  NSString v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  NSString v82;
  NSString v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  void *v95;
  NSString v96;
  NSString v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  id v113;
  id v114;
  double result;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  _QWORD v138[3];
  ValueMetadata *v139;
  unint64_t v140;
  _BYTE v141[48];
  _BYTE v142[8];

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v116 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, v142, 0, 0);
  v5 = (void *)static OS_os_log.sceneManagement;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v141);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
  *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v0;
  v8 = v5;
  v136 = v0;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Scene delegate (%p) showing What's New.", 39, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v135 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v139 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  v140 = sub_10054F350();
  LOBYTE(v15) = isFeatureEnabled(_:)(v138);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v138);
  if ((v15 & 1) != 0
    && (v139 = &type metadata for CRLFeatureFlags,
        v140 = sub_1004DB6DC(),
        LOBYTE(v138[0]) = 12,
        v19 = isFeatureEnabled(_:)(v138),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v138),
        (v19 & 1) != 0))
  {
    LODWORD(v137) = objc_msgSend((id)type metadata accessor for ImagePlaygroundViewController(0, v20), "available");
  }
  else
  {
    LODWORD(v137) = 0;
  }
  v139 = &type metadata for CRLFeatureFlags;
  v21 = sub_1004DB6DC();
  v140 = v21;
  LOBYTE(v138[0]) = 13;
  v22 = isFeatureEnabled(_:)(v138);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v138);
  if ((v22 & 1) != 0)
  {
    v23 = (void *)objc_opt_self(CHRecognitionSession);
    v24 = objc_msgSend((id)objc_opt_self(NSLocale), "currentLocale");
    static Locale._unconditionallyBridgeFromObjectiveC(_:)(v24);

    isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v26 = objc_msgSend(v23, "isLocaleSupported:", isa);

  }
  else
  {
    v26 = 0;
  }
  v139 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v140 = sub_10054E910();
  LOBYTE(v138[0]) = 0;
  v27 = isFeatureEnabled(_:)(v138);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v138);
  v28 = 0;
  if ((v27 & 1) != 0)
  {
    v139 = &type metadata for CRLFeatureFlags;
    v140 = v21;
    LOBYTE(v138[0]) = 14;
    v29 = isFeatureEnabled(_:)(v138);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v138);
    if ((v29 & 1) != 0)
    {
      if (qword_1013DD618 != -1)
        swift_once(&qword_1013DD618, sub_1009A4410);
      v30 = (unsigned __int8 *)(qword_1013FF120
                              + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v138, 0, 0);
      v28 = *v30;
    }
    else
    {
      v28 = 0;
    }
  }
  v31 = sub_10091FD04(0xD000000000000026, 0x8000000100FE14A0, 0, 0);
  if (v31)
  {
    v32 = v31;
    v33 = sub_10091FD04(0xD000000000000013, 0x8000000100FB1C20, 1, 0);
    if (v33)
    {
      v34 = v33;
      v35 = sub_10091FD04(0xD000000000000016, 0x8000000100FCCD60, 1, 1);
      if (v35)
      {
        v36 = v35;
        if ((_DWORD)v137)
        {
          v37 = 0x6573697270727573;
          v38 = 0xEB00000000786F62;
          v39 = 0;
        }
        else
        {
          v37 = 0xD000000000000012;
          v38 = 0x8000000100FE14E0;
          v39 = 1;
        }
        v40 = sub_10091FD04(v37, v38, v39, 0);
        v133 = v36;
        v134 = v18;
        if (v40)
        {
          v120 = v34;
          v129 = v26;
          v132 = v40;
          v41 = objc_msgSend(v12, "mainBundle");
          v42 = String._bridgeToObjectiveC()();
          v43 = String._bridgeToObjectiveC()();
          v44 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, v43, 0);

          v130 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v131 = v45;

          v46 = objc_msgSend(v12, "mainBundle");
          v47 = String._bridgeToObjectiveC()();
          v48 = String._bridgeToObjectiveC()();
          v49 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, v48, 0);

          v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
          v128 = v50;

          v51 = objc_msgSend(v12, "mainBundle");
          v52 = String._bridgeToObjectiveC()();
          v53 = String._bridgeToObjectiveC()();
          v54 = objc_msgSend(v51, "localizedStringForKey:value:table:", v52, v53, 0);

          v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v126 = v55;

          v56 = objc_msgSend(v12, "mainBundle");
          v57 = String._bridgeToObjectiveC()();
          v58 = String._bridgeToObjectiveC()();
          v59 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

          v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
          v124 = v60;

          v61 = objc_msgSend(v12, "mainBundle");
          v62 = String._bridgeToObjectiveC()();
          v63 = String._bridgeToObjectiveC()();
          v64 = objc_msgSend(v61, "localizedStringForKey:value:table:", v62, v63, 0);

          v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
          v122 = v65;

          v66 = objc_msgSend(v12, "mainBundle");
          v67 = String._bridgeToObjectiveC()();
          v68 = String._bridgeToObjectiveC()();
          v69 = objc_msgSend(v66, "localizedStringForKey:value:table:", v67, v68, 0);

          v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
          v72 = v71;

          if ((_DWORD)v137)
          {
            v73 = v120;
            if ((v129 | v28) == 1)
            {
              v119 = v70;
              v137 = v72;
              v74 = objc_msgSend(v12, "mainBundle");
              v75 = String._bridgeToObjectiveC()();
              v76 = String._bridgeToObjectiveC()();
              v77 = objc_msgSend(v74, "localizedStringForKey:value:table:", v75, v76, 0);

              v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
              v79 = v78;

              v80 = objc_msgSend(v12, "mainBundle");
              v117 = v79;
LABEL_33:
              v96 = String._bridgeToObjectiveC()();
              v97 = String._bridgeToObjectiveC()();
              v98 = objc_msgSend(v80, "localizedStringForKey:value:table:", v96, v97, 0);
              v94 = v135;
              v99 = v98;

              v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
              v102 = v101;

              v103 = sub_1004B804C(&qword_1013FA580);
              v87 = swift_allocObject(v103, 192, 7);
              *(_OWORD *)(v87 + 16) = xmmword_100EF5E30;
              v104 = v131;
              *(_QWORD *)(v87 + 32) = v130;
              *(_QWORD *)(v87 + 40) = v104;
              v105 = v124;
              *(_QWORD *)(v87 + 48) = v123;
              *(_QWORD *)(v87 + 56) = v105;
              v106 = v127;
              *(_QWORD *)(v87 + 64) = v32;
              *(_QWORD *)(v87 + 72) = v106;
              v107 = v121;
              *(_QWORD *)(v87 + 80) = v128;
              *(_QWORD *)(v87 + 88) = v107;
              *(_QWORD *)(v87 + 96) = v122;
              *(_QWORD *)(v87 + 104) = v73;
              v108 = v126;
              *(_QWORD *)(v87 + 112) = v125;
              *(_QWORD *)(v87 + 120) = v108;
              v109 = v137;
              *(_QWORD *)(v87 + 128) = v119;
              *(_QWORD *)(v87 + 136) = v109;
              v93 = v133;
              v110 = v118;
              *(_QWORD *)(v87 + 144) = v133;
              *(_QWORD *)(v87 + 152) = v110;
              *(_QWORD *)(v87 + 160) = v117;
              *(_QWORD *)(v87 + 168) = v100;
              *(_QWORD *)(v87 + 176) = v102;
              v95 = v132;
              *(_QWORD *)(v87 + 184) = v132;
              v111 = v95;
              goto LABEL_34;
            }
          }
          else
          {
            v73 = v120;
            if ((v129 & v28) == 1)
            {
              v119 = v70;
              v137 = v72;
              v81 = objc_msgSend(v12, "mainBundle");
              v82 = String._bridgeToObjectiveC()();
              v83 = String._bridgeToObjectiveC()();
              v84 = objc_msgSend(v81, "localizedStringForKey:value:table:", v82, v83, 0);

              v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
              v117 = v85;

              v80 = objc_msgSend(v12, "mainBundle");
              goto LABEL_33;
            }
          }
          v86 = sub_1004B804C(&qword_1013FA580);
          v87 = swift_allocObject(v86, 152, 7);
          *(_OWORD *)(v87 + 16) = xmmword_100EF5550;
          v88 = v131;
          *(_QWORD *)(v87 + 32) = v130;
          *(_QWORD *)(v87 + 40) = v88;
          v89 = v124;
          *(_QWORD *)(v87 + 48) = v123;
          *(_QWORD *)(v87 + 56) = v89;
          v90 = v127;
          *(_QWORD *)(v87 + 64) = v32;
          *(_QWORD *)(v87 + 72) = v90;
          v91 = v121;
          *(_QWORD *)(v87 + 80) = v128;
          *(_QWORD *)(v87 + 88) = v91;
          *(_QWORD *)(v87 + 96) = v122;
          *(_QWORD *)(v87 + 104) = v73;
          v92 = v126;
          *(_QWORD *)(v87 + 112) = v125;
          *(_QWORD *)(v87 + 120) = v92;
          *(_QWORD *)(v87 + 128) = v70;
          *(_QWORD *)(v87 + 136) = v72;
          v93 = v133;
          *(_QWORD *)(v87 + 144) = v133;
          v94 = v135;
          v95 = v132;
LABEL_34:
          v112 = v93;
          v113 = v73;
          v114 = v32;
          sub_100918FB4(v94, v134, v87);

          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        sub_100757E04(&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1280, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1280, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1279, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1279, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1278, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1278, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1277, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1277, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
LABEL_35:
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100918FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  NSString v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;

  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v6);

  v8 = objc_allocWithZone((Class)OBWelcomeController);
  swift_bridgeObjectRetain(a2);
  v37 = v7;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithTitle:detailText:icon:", v9, 0, v37, swift_bridgeObjectRelease().n128_f64[0]);

  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    v36 = v10;
    v12 = v10;
    swift_bridgeObjectRetain(a3);
    v13 = (void **)(a3 + 64);
    do
    {
      v14 = (uint64_t)*(v13 - 3);
      v15 = (uint64_t)*(v13 - 1);
      v16 = *v13;
      v13 += 5;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v15);
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRetain(v15);
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "addBulletedListItemWithTitle:description:image:tintColor:", v18, v19, v17, 0, swift_bridgeObjectRelease().n128_f64[0]);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v10 = v36;
  }
  else
  {
    v20 = v10;
  }
  v21 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setTitle:forState:", v26, 0, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v21, "addTarget:action:forControlEvents:", v3, "didTapWelcomeContinueButton:", 64);
  v27 = objc_msgSend(v10, "buttonTray");
  objc_msgSend(v27, "addButton:", v21);

  swift_unknownObjectWeakAssign(v3 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController, v10);
  sub_1009194E0();
  v28 = sub_1009038CC();
  v29 = objc_msgSend(v28, "presentedViewController");

  if (!v29)
    goto LABEL_12;
  v30 = objc_opt_self(UINavigationController);
  v31 = (void *)swift_dynamicCastObjCClass(v29, v30);
  if (!v31)
    goto LABEL_11;
  v32 = objc_msgSend(v31, "topViewController");

  if (v32)
  {
    v33 = type metadata accessor for CRLiOSBoardViewController(0);
    v34 = (id)swift_dynamicCastClass(v32, v33);
    if (v34)
      goto LABEL_13;
    v29 = v32;
LABEL_11:

  }
LABEL_12:
  v34 = sub_1009038CC();
  v32 = v34;
LABEL_13:
  objc_msgSend(v34, "presentViewController:animated:completion:", v10, 1, 0);

  v35 = objc_msgSend(v10, "presentationController");
  if (v35)
  {
    objc_msgSend(v35, "setDelegate:", v3);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"showFirstLaunch(mainTitle:bullets:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1376, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showFirstLaunch(mainTitle:bullets:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1376, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }

}

id sub_100919460(void *a1)
{
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = objc_allocWithZone((Class)UIColor);
  if (v1 == (id)1)
  {
    v3 = 0.517647059;
    v4 = 0.803921569;
    v5 = 0.941176471;
  }
  else
  {
    v3 = 0.278431373;
    v4 = 0.537254902;
    v5 = 0.647058824;
  }
  return objc_msgSend(v2, "initWithRed:green:blue:alpha:", v3, v4, v5, 1.0);
}

void sub_1009194E0()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController);
  if (Strong)
  {
    v24 = Strong;
    v2 = objc_msgSend(Strong, "headerView");
    v3 = objc_msgSend(v2, "subviews");

    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if ((unint64_t)v5 >> 62)
    {
LABEL_18:
      if (v5 < 0)
        v23 = v5;
      else
        v23 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v6 = _CocoaArrayWrapper.endIndex.getter(v23);
      if (v6)
      {
LABEL_4:
        v7 = 4;
        while (1)
        {
          if ((v5 & 0xC000000000000001) != 0)
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5);
          else
            v8 = *(id *)(v5 + 8 * v7);
          v9 = v8;
          v10 = v7 - 3;
          if (__OFADD__(v7 - 4, 1))
          {
            __break(1u);
            goto LABEL_18;
          }
          v11 = objc_opt_self(UIImageView);
          v12 = swift_dynamicCastObjCClass(v9, v11);
          if (v12)
            break;

          ++v7;
          if (v10 == v6)
            goto LABEL_11;
        }
        v14 = (void *)v12;
        swift_bridgeObjectRelease_n(v5, 2);
        v15 = objc_msgSend(v14, "layer");
        objc_msgSend(v15, "setCornerCurve:", kCACornerCurveContinuous);

        v16 = objc_msgSend(v14, "layer");
        objc_msgSend(v16, "setCornerRadius:", 24.0);

        v17 = objc_msgSend(v14, "layer");
        objc_msgSend(v17, "setMasksToBounds:", 1);

        v18 = String._bridgeToObjectiveC()();
        v19 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v18);

        if (v19)
        {
          v20 = objc_msgSend(v14, "layer");
          v21 = objc_msgSend(v19, "CGColor");
          objc_msgSend(v20, "setBorderColor:", v21);

          v22 = objc_msgSend(v14, "layer");
          objc_msgSend(v22, "setBorderWidth:", 1.0);

        }
        v13 = v9;
        goto LABEL_16;
      }
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v5);
      if (v6)
        goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease_n(v5, 2);
    v13 = v24;
LABEL_16:

  }
}

void sub_100919854()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController);
  if (Strong)
  {
    v3 = Strong;
    v11 = objc_msgSend(Strong, "presentationController");

  }
  else
  {
    v11 = 0;
  }
  v4 = swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = swift_allocObject(&unk_101287EE8, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    v7 = swift_allocObject(&unk_101287F10, 32, 7);
    *(_QWORD *)(v7 + 16) = v11;
    *(_QWORD *)(v7 + 24) = v6;
    aBlock[4] = sub_100921EA4;
    v13 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101287F28;
    v8 = _Block_copy(aBlock);
    v9 = v13;
    v10 = v11;
    objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, v8, swift_release(v9).n128_f64[0]);

    _Block_release(v8);
  }
  else
  {

  }
}

void sub_1009199A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  _BYTE v6[24];

  if (a1)
  {
    v3 = a2 + 16;
    swift_beginAccess(a2 + 16, v6, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      objc_msgSend(Strong, "presentationControllerDidDismiss:", a1);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"didTapWelcomeContinueButton(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1404, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didTapWelcomeContinueButton(_:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1404, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_100919B18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1004B804C(&qword_1013FA358);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013EF328);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  return sub_100903A88((uint64_t)v4);
}

uint64_t sub_100919BCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[9] = v7;
  v2[10] = v8;
  return swift_task_switch(sub_100919C9C, v7, v8);
}

uint64_t sub_100919C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  sub_1004B8460(*(_QWORD *)(v0 + 16), v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  if (!EnumCaseMultiPayload)
  {
    swift_release(*(_QWORD *)(v0 + 64));
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewController(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1589, "Library should not be selectable", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewController(for:)", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1589, (uint64_t)"Library should not be selectable", 32, 2u);
    v7 = 0;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    swift_release(*(_QWORD *)(v0 + 64));
    sub_1004B84E0(v4, v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_10091AC74(v5);
    v7 = v6;
    sub_1004B84A4(v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_5:
    v9 = *(_QWORD *)(v0 + 32);
    v8 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = (uint64_t *)(v11 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
  v14 = *v13;
  v15 = v13[1];
  *(_QWORD *)(v0 + 88) = v15;
  sub_1004B84E0(v11, v12, type metadata accessor for CRLBoardIdentifier);
  v16 = (_QWORD *)swift_task_alloc(dword_1013FA36C);
  *(_QWORD *)(v0 + 96) = v16;
  *v16 = v0;
  v16[1] = sub_100919E8C;
  return sub_10091B098(*(_QWORD *)(v0 + 32), v14, v15);
}

uint64_t sub_100919E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  *(_QWORD *)(*(_QWORD *)v2 + 104) = v1;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v6);
  if (v1)
  {
    v7 = v4[9];
    v8 = v4[10];
    v9 = sub_100919F7C;
  }
  else
  {
    v4[14] = a1;
    v7 = v4[9];
    v8 = v4[10];
    v9 = sub_100919F08;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100919F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 64));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_100919F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 64));
  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100919FE4(void *a1, char a2, char a3, char a4)
{
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  id v17;
  uint64_t v18;

  v8 = sub_1009038CC();
  v17 = objc_msgSend(v8, "viewControllerForColumn:", 2);

  if (!v17)
    goto LABEL_7;
  v9 = objc_opt_self(UINavigationController);
  v10 = (void *)swift_dynamicCastObjCClass(v17, v9);
  if (!v10)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"setContentViewController(_:push:show:animated:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1825, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setContentViewController(_:push:show:animated:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2u, 1825, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v11 = v10;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v10, "pushViewController:animated:", a1, a4 & 1);
    if ((a3 & 1) == 0)
    {
LABEL_5:

      return;
    }
  }
  else
  {
    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v13 + 32) = a1;
    v18 = v13;
    specialized Array._endMutation()(v13);
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v14 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "setViewControllers:animated:", isa, a4 & 1, swift_bridgeObjectRelease(v18).n128_f64[0]);

    if ((a3 & 1) == 0)
      goto LABEL_5;
  }
  v16 = sub_1009038CC();
  objc_msgSend(v16, "showColumn:", 2);

}

uint64_t sub_10091A20C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v3 + 312) = a2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v2;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  *(_QWORD *)(v3 + 160) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 168) = v6;
  *(_QWORD *)(v3 + 176) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v3 + 184) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 192) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 200) = v9;
  *(_QWORD *)(v3 + 208) = v10;
  return swift_task_switch(sub_10091A2E4, v9, v10);
}

uint64_t sub_10091A2E4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  NSString v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  Class isa;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v1 = sub_1009038CC();
  v2 = objc_msgSend(v1, "presentedViewController");
  *(_QWORD *)(v0 + 216) = v2;

  if (!v2)
    goto LABEL_11;
  v3 = objc_opt_self(UINavigationController);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  *(_QWORD *)(v0 + 224) = v4;
  if (!v4)
  {

LABEL_11:
    v33 = *(_QWORD *)(v0 + 144);
    v34 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 280) = v34;
    objc_msgSend(v34, "setModalPresentationStyle:", 4);
    objc_msgSend(v34, "setTransitioningDelegate:", *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardViewControllerTransitioningDelegate));
    *(_QWORD *)(v0 + 288) = sub_1009038CC();
    v35 = (_QWORD *)swift_task_alloc(dword_10140053C);
    *(_QWORD *)(v0 + 296) = v35;
    *v35 = v0;
    v35[1] = sub_10091AAAC;
    return sub_1009DAE24((uint64_t)v34, *(_BYTE *)(v0 + 312));
  }
  v5 = sub_1009038CC();
  v6 = objc_msgSend(v5, "presentedViewController");

  if (v6)
  {
    v7 = objc_opt_self(UINavigationController);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (!v8)
    {
      v9 = v6;
LABEL_13:

      goto LABEL_14;
    }
    v9 = objc_msgSend(v8, "topViewController");

    if (v9)
    {
      v10 = type metadata accessor for CRLiOSBoardViewController(0);
      v11 = swift_dynamicCastClass(v9, v10);
      if (v11)
      {
        v56 = (char *)v11;
        if (qword_1013DD820 != -1)
          swift_once(&qword_1013DD820, sub_100A04A9C);
        v12 = *(_QWORD *)(v0 + 176);
        v53 = *(_QWORD *)(v0 + 184);
        v54 = *(_QWORD *)(v0 + 168);
        v13 = *(_QWORD *)(v0 + 152);
        v14 = *(_QWORD *)(v0 + 136);
        v55 = *(_QWORD *)(v0 + 160);
        swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 88, 0, 0);
        v50 = (void *)static OS_os_log.sceneManagement;
        v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v15, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v17 = *(char **)(*(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                       + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
        v51 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
        v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 112, 0, 0);
        sub_1004B8460(v19, v13, type metadata accessor for CRLBoardCRDTData);
        v52 = v50;
        v20 = v17;
        swift_retain(v18);
        v21 = sub_1004B804C(&qword_1013E1A80);
        CRRegister.wrappedValue.getter(v21);
        sub_1004B84A4(v13, type metadata accessor for CRLBoardCRDTData);
        swift_release(v18);
        v22 = (uint64_t *)(*(_QWORD *)&v17[v51] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        v23 = *v22;
        v24 = v22[1];
        swift_bridgeObjectRetain(v24);
        sub_10067AFD0(v12, v23, v24, v53);

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v12, v53, v55);
        v25 = sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
        v26 = UUID.uuidString.getter(v25);
        v28 = v27;
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v12, v55);
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v26;
        *(_QWORD *)(inited + 40) = v28;
        v30 = static os_log_type_t.default.getter(v29);
        sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v30, "Tearing down the outgoing board view controller for identifier %{public}@", 73, 2, inited);
        swift_setDeallocating(inited);
        v31 = *(_QWORD *)(inited + 16);
        v32 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, v31, v32);

        sub_100908380(v56, 0);
      }
      goto LABEL_13;
    }
  }
LABEL_14:
  v37 = *(void **)(v0 + 136);
  v38 = *(_QWORD *)(v0 + 144);
  v39 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "initWithNibName:bundle:", 0, 0);
  *(_QWORD *)(v0 + 232) = v39;
  v40 = objc_msgSend(v39, "navigationItem");
  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v41, 0, 0, 0);

  objc_msgSend(v40, "setBackBarButtonItem:", v42);
  v43 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v37);
  *(_QWORD *)(v0 + 240) = v43;
  objc_msgSend(v43, "setModalPresentationStyle:", 4);
  objc_msgSend(v43, "setTransitioningDelegate:", *(_QWORD *)(v38 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardViewControllerTransitioningDelegate));
  v44 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  *(_QWORD *)(v0 + 248) = v44;
  v45 = swift_allocObject(v44, 48, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v45 + 32) = v39;
  *(_QWORD *)(v45 + 40) = v37;
  v57 = v45;
  specialized Array._endMutation()(v45);
  *(_QWORD *)(v0 + 256) = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v46 = v39;
  v47 = v37;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "setViewControllers:", isa, swift_bridgeObjectRelease(v57).n128_f64[0]);

  v49 = (_QWORD *)swift_task_alloc(dword_10140053C);
  *(_QWORD *)(v0 + 264) = v49;
  *v49 = v0;
  v49[1] = sub_10091A8A4;
  return sub_1009DAE24((uint64_t)v43, *(_BYTE *)(v0 + 312));
}

uint64_t sub_10091A8A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10091ABA4;
  else
    v4 = sub_10091A904;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

id sub_10091A904()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  Class isa;
  uint64_t v9;
  id v10;
  Class v11;
  id result;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 240);
  v4 = *(void **)(v0 + 224);
  v5 = *(void **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 192));
  v6 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v6 + 32) = v3;
  v19 = v6;
  specialized Array._endMutation()(v6);
  v7 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19);
  objc_msgSend(v2, "setViewControllers:", isa);

  v9 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v9 + 32) = v5;
  v20 = v9;
  specialized Array._endMutation()(v9);
  v10 = v5;
  v11 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v4, "setViewControllers:", v11);

  result = objc_msgSend(v2, "view");
  if (result)
  {
    v13 = result;
    v15 = *(void **)(v0 + 232);
    v14 = *(void **)(v0 + 240);
    v16 = *(void **)(v0 + 216);
    objc_msgSend(result, "setHidden:", 1);

    objc_msgSend(v14, "dismissViewControllerAnimated:completion:", 0, 0);
    v17 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10091AAAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 296);
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 200);
    v5 = *(_QWORD *)(v2 + 208);
    v6 = sub_10091AC10;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 200);
    v5 = *(_QWORD *)(v2 + 208);
    v6 = sub_10091AB18;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10091AB18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 192));
  v1 = sub_100903140();
  v2 = *(void **)(v0 + 280);
  if (v1)
  {
    v3 = (_BYTE *)v1;
    sub_100B7C658(1);
    v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 1;

  }
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091ABA4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 192));

  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091AC10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 288);
  swift_release(*(_QWORD *)(v0 + 192));

  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10091AC74(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _UNKNOWN **v46;

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v43 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v40 = (uint64_t)&v40 - v7;
  v8 = sub_1004B804C(&qword_1013FA370);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013FA378);
  v12 = __chkstk_darwin(v11);
  v41 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v40 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v40 - v17;
  v42 = a1;
  sub_1004B8460(a1, (uint64_t)&v40 - v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v20 = 1;
  v19(v18, 0, 1, v3);
  v21 = sub_100903140();
  if (v21)
  {
    v22 = (void *)v21;
    sub_1004B8460(v21 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Folder);

    v20 = 0;
  }
  v19(v16, v20, 1, v3);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v10, &qword_1013FA378);
  sub_1004CB7BC((uint64_t)v16, v23, &qword_1013FA378);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v10, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v16, &qword_1013FA378);
    sub_1004CB800((uint64_t)v18, &qword_1013FA378);
    if (v24(v23, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v10, &qword_1013FA378);
LABEL_10:
      sub_100903140();
      return;
    }
    goto LABEL_8;
  }
  v25 = v41;
  sub_1004CB7BC((uint64_t)v10, v41, &qword_1013FA378);
  if (v24(v23, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v16, &qword_1013FA378);
    sub_1004CB800((uint64_t)v18, &qword_1013FA378);
    sub_1004B84A4(v25, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_8:
    sub_1004CB800((uint64_t)v10, &qword_1013FA370);
    goto LABEL_11;
  }
  v26 = v40;
  sub_1004B84E0(v23, v40, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100BD0ED4(v25, v26);
  v28 = v27;
  sub_1004B84A4(v26, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1004CB800((uint64_t)v16, &qword_1013FA378);
  sub_1004CB800((uint64_t)v18, &qword_1013FA378);
  sub_1004B84A4(v25, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1004CB800((uint64_t)v10, &qword_1013FA378);
  if ((v28 & 1) != 0)
    goto LABEL_10;
LABEL_11:
  v29 = v43;
  sub_1004B8460(v42, v43, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1009035AC();
  if (!v30)
  {
    __break(1u);
    goto LABEL_18;
  }
  v31 = v30;
  sub_10090373C();
  if (!v32)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v33 = v32;
  sub_1009035AC();
  if (v34)
  {
    v35 = v34;
    *((_QWORD *)&v45 + 1) = type metadata accessor for CRLBoardLibrary();
    v46 = &off_10129F588;
    *(_QWORD *)&v44 = v35;
  }
  else
  {
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
  }
  v36 = objc_allocWithZone((Class)type metadata accessor for CRLiOSFolderGridViewController(0));
  v37 = v1;
  v38 = (char *)sub_10091F80C(v29, v31, v33, (uint64_t)v37, (uint64_t)&v44, 1, v36);

  v39 = &v38[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider];
  *((_QWORD *)v39 + 1) = &off_101287D00;
  swift_unknownObjectWeakAssign(v39, v37);
}

uint64_t sub_10091B098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[11] = swift_task_alloc(v7);
  v4[12] = swift_task_alloc(v7);
  v4[13] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v4[14] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[15] = v9;
  v4[16] = v10;
  return swift_task_switch(sub_10091B184, v9, v10);
}

uint64_t sub_10091B184()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (char *)sub_100903068();
  if (!v1)
    goto LABEL_14;
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v37 = *(_QWORD *)(v0 + 96);
  v38 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = v1;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v9 = v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 16, 0, 0);
  sub_1004B8460(v9, v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v8);
  v10 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v10);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v8);
  v11 = (uint64_t *)(*(_QWORD *)&v7[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain(v13);
  sub_10067AFD0(v3, v12, v13, v2);
  LOBYTE(v12) = static UUID.== infix(_:_:)(v2);
  sub_1004B8460(v2, v37, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(v5, v38, type metadata accessor for CRLBoardIdentifier);
  if ((v12 & 1) == 0)
  {
    v23 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 104);
    sub_1004B84A4(*(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v23, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v22, type metadata accessor for CRLBoardIdentifier);
LABEL_13:

LABEL_14:
    v31 = (_QWORD *)swift_task_alloc(dword_1013FA394);
    *(_QWORD *)(v0 + 136) = v31;
    *v31 = v0;
    v31[1] = sub_10091B4F0;
    return sub_10091B654(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  }
  v15 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 96);
  v16 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v17 = *(_QWORD *)(v14 + v16);
  v18 = *(_QWORD *)(v14 + v16 + 8);
  v19 = (_QWORD *)(v15 + v16);
  v20 = v19[1];
  v21 = *(_QWORD *)(v0 + 104);
  if (v17 == *v19 && v18 == v20)
  {
    sub_1004B84A4(v15, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v14, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
    goto LABEL_8;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, *v19, v20, 0);
  sub_1004B84A4(v15, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v14, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
  if ((v24 & 1) == 0)
    goto LABEL_13;
LABEL_8:
  swift_release(*(_QWORD *)(v0 + 112));
  v25 = sub_1009038CC();
  v26 = objc_msgSend(v25, "presentedViewController");

  if (v26)
  {
    v27 = objc_opt_self(UINavigationController);
    v28 = (void *)swift_dynamicCastObjCClass(v26, v27);
    if (v28)
    {
      v29 = objc_msgSend(v28, "topViewController");

      if (v29)
      {
        v30 = type metadata accessor for CRLiOSBoardViewController(0);
        v26 = (id)swift_dynamicCastClass(v29, v30);

        if (!v26)
        goto LABEL_19;
      }

    }
    else
    {

    }
    v26 = 0;
  }
  else
  {

  }
LABEL_19:
  v33 = *(_QWORD *)(v0 + 96);
  v35 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v36 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(id))(v0 + 8))(v26);
}

uint64_t sub_10091B4F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[15];
    v7 = v4[16];
    v8 = sub_10091B5E0;
  }
  else
  {
    v4[19] = a1;
    v6 = v4[15];
    v7 = v4[16];
    v8 = sub_10091B564;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10091B564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10091B5E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091B654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  v5 = sub_1004B804C(&qword_1013E01F0);
  v4[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[23] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[24] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v4[25] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[26] = swift_task_alloc(v9);
  v4[27] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v4[28] = v10;
  v4[29] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[30] = v11;
  v4[31] = v12;
  return swift_task_switch(sub_10091B728, v11, v12);
}

void sub_10091B728()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t **v8;

  v1 = v0[27];
  v2 = v0[23];
  v3 = v0[20];
  v4 = v0[18];
  v5 = v0[19];
  v6 = (uint64_t *)(v1 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
  sub_1004B8460(v4, v1, type metadata accessor for CRLBoardIdentifier);
  *v6 = v5;
  v6[1] = v3;
  swift_storeEnumTagMultiPayload(v1, v2, 2);
  swift_bridgeObjectRetain(v3);
  sub_1009035AC();
  v0[32] = v7;
  if (v7)
  {
    v0[33] = static MainActor.shared.getter(v7);
    v8 = (uint64_t **)swift_task_alloc(dword_10140DFEC);
    v0[34] = (uint64_t)v8;
    *v8 = v0;
    v8[1] = (uint64_t *)sub_10091B804;
    sub_100CAEC2C(v0[18]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10091B804(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 272);
  *(_QWORD *)(*v2 + 280) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 224);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_10091B9F8;
  }
  else
  {
    *(_QWORD *)(v4 + 288) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_10091B8AC;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_10091B8AC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[36];
  v2 = (void *)v0[32];
  swift_release(v0[33]);
  v0[37] = sub_100CAEF60(v1, v2);

  swift_release(v1);
  return swift_task_switch(sub_10091B904, v0[30], v0[31]);
}

uint64_t sub_10091B904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;

  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 232));
  v6 = v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate;
  *(_QWORD *)(v6 + 8) = &off_101287CD0;
  swift_unknownObjectWeakAssign(v6, v5);
  v7 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider);
  v8 = &v7[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  *(_QWORD *)v8 = v5;
  *((_QWORD *)v8 + 1) = &off_101287D00;
  v10 = v7;
  swift_unknownObjectRelease(v9);
  swift_unknownObjectRetain(v5);

  sub_1004B84A4(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10091B9F8()
{
  _QWORD *v0;

  swift_release(v0[33]);
  return swift_task_switch(sub_10091BA30, v0[30], v0[31]);
}

uint64_t sub_10091BA30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(void **)(v0 + 256);
  swift_release(*(_QWORD *)(v0 + 232));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 200);
  v30 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v28 = *(_QWORD *)(v0 + 216);
  v29 = *(void **)(v0 + 168);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 88, 0, 0);
  v5 = (void *)static OS_os_log.crlError;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 136, v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = v5;
  v11 = Error.localizedDescription.getter(v8, v9);
  v13 = v12;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v15 = static os_log_type_t.error.getter(v14);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v15, "Caught error trying to make board view controller: %@", 53, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v16);

  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  sub_1004B8460(v28, v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v18 = v29;
  v19 = swift_errorRetain(v2);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v30 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (v31 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)swift_allocObject(&unk_101287D80, v23 + 8, v21 | 7);
  v24[2] = v20;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v18;
  sub_1004B84E0(v3, (uint64_t)v24 + v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
  *(_QWORD *)((char *)v24 + v23) = v2;
  v25 = sub_100521BD4(v4, (uint64_t)&unk_1013FA3A8, (uint64_t)v24);
  v26 = swift_release(v25);
  swift_willThrow(v26);
  sub_1004B84A4(v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc(v28);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091BCD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[24] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[25] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[26] = v3;
  v1[27] = v4;
  return swift_task_switch(sub_10091BD40, v3, v4);
}

uint64_t sub_10091BD40()
{
  _QWORD *v0;
  char v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  NSString v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  NSString v27;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  NSString v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;

  v1 = sub_10091CA08();
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v7 = (void *)objc_opt_self(UIDevice);
  if (!objc_msgSend(v7, "crl_iPadDevice"))
  {
    if ((v1 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(v7, "crl_iPadDevice");
    v8 = objc_msgSend(v2, "mainBundle");
    goto LABEL_6;
  }
  if ((v1 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v8 = objc_msgSend(v2, "mainBundle");
LABEL_6:
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);
  v0[28] = v14;

  v15 = objc_msgSend(v2, "mainBundle");
  if ((v1 & 1) != 0)
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v0[15] = sub_10091CBA0;
    v0[16] = 0;
    v0[11] = _NSConcreteStackBlock;
    v0[12] = *(_QWORD *)"";
    v0[13] = sub_1004C6194;
    v0[14] = &unk_101287E38;
    v20 = _Block_copy(v0 + 11);
    swift_release(v0[16]);
    v21 = (void *)objc_opt_self(UIAlertAction);
    v22 = objc_msgSend(v21, "actionWithTitle:style:handler:", v19, 0, v20);
    _Block_release(v20);

    objc_msgSend(v14, "addAction:", v22);
    v23 = objc_msgSend(v2, "mainBundle");
    v24 = String._bridgeToObjectiveC()();
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v21, "actionWithTitle:style:handler:", v27, 1, 0, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v14, "addAction:", v28);
  }
  else
  {
    v29 = String._bridgeToObjectiveC()();
    v30 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v15, "localizedStringForKey:value:table:", v29, v30, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v32, 0, 0);

    objc_msgSend(v14, "addAction:", v22);
  }

  v33 = sub_1009038CC();
  v34 = objc_msgSend(v33, "presentedViewController");

  if (!v34)
    goto LABEL_14;
  v35 = objc_opt_self(UINavigationController);
  v36 = (void *)swift_dynamicCastObjCClass(v34, v35);
  if (!v36)
    goto LABEL_13;
  v37 = objc_msgSend(v36, "topViewController");

  if (!v37)
  {
LABEL_14:
    v39 = sub_1009038CC();
    goto LABEL_15;
  }
  v38 = type metadata accessor for CRLiOSBoardViewController(0);
  v39 = (id)swift_dynamicCastClass(v37, v38);
  v34 = v37;
  if (!v39)
  {
LABEL_13:

    goto LABEL_14;
  }
LABEL_15:
  v0[29] = v39;
  v40 = (_QWORD *)swift_task_alloc(dword_10140053C);
  v0[30] = v40;
  *v40 = v0;
  v40[1] = sub_10091C3F8;
  return sub_1009DAE24((uint64_t)v14, 1);
}

uint64_t sub_10091C3F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 208);
    v5 = *(_QWORD *)(v2 + 216);
    v6 = sub_10091C4A4;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 208);
    v5 = *(_QWORD *)(v2 + 216);
    v6 = sub_10091C464;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10091C464()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_100CE39D8(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091C4A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 200));

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(void **)(v0 + 224);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 136, 0, 0);
  v4 = (void *)static OS_os_log.crlError;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 184, v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = v4;
  v10 = Error.localizedDescription.getter(v7, v8);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "Caught error trying to present alert for handling unsupported board: %@", 71, 2, inited);

  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091C628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = v4;
  v3[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[7] = v5;
  v3[8] = v6;
  return swift_task_switch(sub_10091C69C, v5, v6);
}

uint64_t sub_10091C69C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)v0[4];
  v1 = v0[5];
  v3 = swift_allocObject(&unk_101287DA8, 24, 7);
  v0[9] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v0[10] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[11] = v4;
  v0[12] = v5;
  return swift_task_switch(sub_10091C71C, v4, v5);
}

uint64_t sub_10091C71C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v1[9];
  v4 = v1[2];
  v3 = v1[3];
  v5 = static MainActor.shared.getter(a1);
  v1[13] = v5;
  v6 = (_QWORD *)swift_task_alloc(48);
  v1[14] = v6;
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = &unk_1013FA3C0;
  v6[5] = v2;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[15] = v7;
  *v7 = v1;
  v7[1] = sub_10091C7F0;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, v5, &protocol witness table for MainActor, 0xD000000000000035, 0x8000000100FE0340, sub_100921928, v6, &type metadata for Bool);
}

uint64_t sub_10091C7F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  v3 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10091C858, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_10091C858()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(v1);
  *(_BYTE *)(v0 + 129) = *(_BYTE *)(v0 + 128);
  return swift_task_switch(sub_10091C8A0, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_10091C8A0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(unsigned __int8 *)(v0 + 129), v1);
}

uint64_t sub_10091C8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;

  v6[2] = a1;
  v9 = type metadata accessor for MainActor(0);
  v6[3] = v9;
  v6[4] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1013FA3B4);
  v6[5] = v10;
  *v10 = v6;
  v10[1] = sub_10091C954;
  return sub_10091C628(a5, a6);
}

uint64_t sub_10091C954(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10091C9CC, v4, v5);
}

uint64_t sub_10091C9CC()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;
  __n128 v3;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_BYTE **)(v0 + 16);
  v3 = swift_release(*(_QWORD *)(v0 + 32));
  *v2 = v1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10091CA08()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = objc_msgSend((id)objc_opt_self(CRLRemoteDefaults), "sharedDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "dictionaryForKey:", v2);

  if (!v3)
    goto LABEL_8;
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  sub_100B02AA4(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_8;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    v17 = 1;
    return v17 & 1;
  }
  v7 = v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUnsupportedDevicesKey;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUnsupportedDevicesKey);
  v9 = *(_QWORD *)(v7 + 8);
  swift_bridgeObjectRetain(v9);
  v10 = sub_100842E98(v8, v9);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v12 = *(_QWORD **)(*(_QWORD *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_platformString");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  LOBYTE(v13) = sub_100C9DD14(v14, v16, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v13 ^ 1;
  return v17 & 1;
}

id sub_10091CBA0()
{
  return objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "crl_openSoftwareUpdatePane");
}

uint64_t sub_10091CBC4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10091CC30, v4, v5);
}

uint64_t sub_10091CC30()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  void *v3;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (v3)
  {
    v4 = objc_msgSend(v3, "rootViewController", v2.n128_f64[0]);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "presentViewController:animated:completion:", *(_QWORD *)(v0 + 16), 1, 0);

    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10091CCAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[33] = a1;
  v2[34] = v1;
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[35] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[36] = v4;
  v2[37] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v2[38] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[39] = v6;
  v2[40] = v7;
  return swift_task_switch(sub_10091CD40, v6, v7);
}

uint64_t sub_10091CD40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t v29;

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = v0[36];
  v2 = v0[37];
  v3 = v0[34];
  v29 = v0[35];
  v4 = v0[33];
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 26, 0, 0);
  v5 = (void *)static OS_os_log.crlDefault;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[41] = v6;
  inited = swift_initStackObject(v6, v0 + 11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = UUID.uuidString.getter(v8);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  v0[42] = v12;
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "Opening board with UUID: %@.", 28, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  v0[43] = v15;
  swift_arrayDestroy(inited + 32, 1, v15);

  v16 = (_QWORD *)(v2 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
  sub_1004B8460(v4, v2, type metadata accessor for CRLBoardIdentifier);
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload(v2, v29, 2);
  sub_10090399C();
  v18 = v17;
  objc_msgSend(v17, "loadViewIfNeeded");

  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack);
  v20 = sub_1004B804C(&qword_1014072D0);
  v21 = *(unsigned __int8 *)(v1 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v20, v22 + *(_QWORD *)(v1 + 72), v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_100EF5E40;
  v24 = v23 + v22;
  v25 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 5, v25);
  swift_storeEnumTagMultiPayload(v24, v29, 1);
  swift_beginAccess(v19 + 16, v0 + 20, 1, 0);
  *(_QWORD *)(v19 + 16) = v23;
  swift_retain(v19);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v26 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCD00 != -1)
    swift_once(&qword_1013DCD00, sub_10068F12C);
  objc_msgSend(v26, "postNotificationName:object:", qword_10147EF10, v19);
  swift_release(v19);
  swift_bridgeObjectRelease();

  v27 = (_QWORD *)swift_task_alloc(dword_1013FA334);
  v0[44] = v27;
  *v27 = v0;
  v27[1] = sub_10091D06C;
  return sub_10090BA30(v0[37], 1, 1, 0);
}

uint64_t sub_10091D06C(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 352);
  *(_QWORD *)(*v2 + 360) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 312);
    v7 = *(_QWORD *)(v4 + 320);
    v8 = sub_10091D12C;
  }
  else
  {

    v6 = *(_QWORD *)(v4 + 312);
    v7 = *(_QWORD *)(v4 + 320);
    v8 = sub_10091D0E0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10091D0E0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 304));
  v1 = *(_QWORD *)(v0 + 296);
  sub_1004B84A4(v1, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091D12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 304));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 328);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 184, 0, 0);
  v5 = (void *)static OS_os_log.crlError;
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 256, v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 248);
  v9 = v5;
  v10 = Error.localizedDescription.getter(v7, v8);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v11;
  v12 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v12, "Caught error trying to show view controller: %@", 47, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v2);

  swift_errorRelease(v1);
  v13 = *(_QWORD *)(v0 + 296);
  sub_1004B84A4(v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091D2A0(uint64_t a1, char a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  **(_BYTE **)(*(_QWORD *)(v2 + 64) + 40) = a2;
  return swift_continuation_resume(v2);
}

void sub_10091D2B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE v20[24];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack);
  swift_retain(v6);
  sub_10068F74C((uint64_t)v4);
  swift_release(v6);
  sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3830);
  v7 = *(_QWORD *)(a1 + v5);
  swift_beginAccess(v7 + 16, v20, 1, 0);
  if (!*(_QWORD *)(*(_QWORD *)(v7 + 16) + 16))
  {
    v8 = sub_1004B804C(&qword_1014072D0);
    v9 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(_QWORD *)(v10 + 72);
    v12 = *(unsigned __int8 *)(v10 + 80);
    v13 = (v12 + 32) & ~v12;
    v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
    v15 = v14 + v13;
    v16 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 5, v16);
    swift_storeEnumTagMultiPayload(v15, v9, 1);
    v17 = *(_QWORD *)(v7 + 16);
    *(_QWORD *)(v7 + 16) = v14;
    swift_retain(v7);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(v17);
    v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCD00 != -1)
      swift_once(&qword_1013DCD00, sub_10068F12C);
    objc_msgSend(v18, "postNotificationName:object:", qword_10147EF10, v7);
    swift_release(v7);
    swift_bridgeObjectRelease(v14);

  }
}

void sub_10091D4A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id Strong;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  char v25;
  id v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  id v30;
  id v31;
  _BYTE v32[24];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013FA358);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v29 - v9;
  v31 = objc_msgSend(a1, "presentedViewController", v8);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeController);
  if (!v31)
  {
    if (!Strong)
      goto LABEL_6;
LABEL_16:

    return;
  }
  if (!Strong)
  {
    Strong = v31;
    goto LABEL_16;
  }
  v30 = Strong;
  sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v12 = v31;
  v13 = static NSObject.== infix(_:_:)(v12, v30);

  if ((v13 & 1) == 0)
    return;
LABEL_6:
  v14 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation, v32, 0, 0);
  sub_1004CB7BC(v14, (uint64_t)v10, &qword_1013FA358);
  v15 = sub_1004B804C(&qword_1013EF328);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15);
  sub_1004CB800((uint64_t)v10, &qword_1013FA358);
  if (v17 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v6, 1, 1, v15);
    sub_100903A88((uint64_t)v6);
    return;
  }
  v18 = sub_1009038CC();
  v19 = objc_msgSend(v18, "presentedViewController");

  if (!v19)
    goto LABEL_12;
  v20 = objc_opt_self(UINavigationController);
  v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
  if (!v21)
    goto LABEL_11;
  v22 = objc_msgSend(v21, "topViewController");

  if (v22)
  {
    v23 = type metadata accessor for CRLiOSBoardViewController(0);
    v24 = (id)swift_dynamicCastClass(v22, v23);
    v19 = v22;
    if (v24)
      goto LABEL_13;
LABEL_11:

  }
LABEL_12:
  v24 = sub_1009038CC();
LABEL_13:
  sub_100947168();
  if ((v25 & 1) != 0)
  {
    sub_1009474EC(v24, 0, 0);

  }
  else
  {
    v26 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v27 = sub_1000717C8();
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setInteger:forKey:", v27, v28);

  }
}

uint64_t sub_10091D7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[27] = a4;
  v5[28] = a5;
  v6 = sub_1004B804C(&qword_1013E04D0);
  v5[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v5[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[31] = v8;
  v5[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[33] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[34] = v10;
  v5[35] = v11;
  return swift_task_switch(sub_10091D8B0, v10, v11);
}

uint64_t sub_10091D8B0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Class isa;
  id v7;
  _QWORD *v8;

  v1 = (void *)v0[27];
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLQAImportFileDocumentPickerDelegate(0)), "init");
  v0[36] = v2;
  v3 = sub_1004B804C(&qword_1013E7938);
  v4 = type metadata accessor for UTType(0);
  *(_OWORD *)(swift_allocObject(v3, ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v4 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) | 7)+ 16) = xmmword_100EF5E40;
  static UTType.data.getter();
  v5 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initForOpeningContentTypes:asCopy:", isa, 1, swift_bridgeObjectRelease().n128_f64[0]);
  v0[37] = v7;

  objc_msgSend(v7, "setAllowsMultipleSelection:", 0);
  objc_msgSend(v7, "setDelegate:", v2);
  objc_msgSend(v1, "presentViewController:animated:completion:", v7, 1, 0);
  v8 = (_QWORD *)swift_task_alloc(dword_1013E3ADC);
  v0[38] = v8;
  *v8 = v0;
  v8[1] = sub_10091DA18;
  return sub_100581694(v0[29]);
}

uint64_t sub_10091DA18()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 304));
  return swift_task_switch(sub_10091DA64, *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
}

uint64_t sub_10091DA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(void **)(v0 + 288);
    v4 = *(void **)(v0 + 296);
    swift_release(*(_QWORD *)(v0 + 264));

    sub_1004CB800(v3, &qword_1013E04D0);
    v6 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 256), v3, v1);
    v8 = (_QWORD *)swift_task_alloc(dword_1013FA454);
    *(_QWORD *)(v0 + 312) = v8;
    *v8 = v0;
    v8[1] = sub_10091DB44;
    return sub_10091DEC0(*(_QWORD *)(v0 + 256));
  }
}

uint64_t sub_10091DB44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10091DC18;
  else
    v4 = sub_10091DBA4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_10091DBA4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(v0 + 288);
  v1 = *(void **)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 264));

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091DC18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;

  swift_release(*(_QWORD *)(v0 + 264));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 320);
  v22 = *(void **)(v0 + 296);
  v23 = *(_QWORD *)(v0 + 248);
  v24 = *(void **)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(id *)(v0 + 216);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlError;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = URL.path.getter(v5);
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  swift_getErrorValue(v1, v0 + 200, v0 + 152);
  v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v11;
  v12 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v12, "Error loading board from %@: %@", 31, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v13);

  v14 = v1;
  swift_getErrorValue(v1, v0 + 208, v0 + 176);
  Error.localizedDescription.getter(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1);

  objc_msgSend(v21, "presentViewController:animated:completion:", v17, 1, 0);
  sub_100CE39D8(v17);

  swift_errorRelease(v14);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v25);
  v18 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091DEC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[31] = a1;
  v2[32] = v1;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v2[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v2[36] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[37] = v7;
  v2[38] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v2[39] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[40] = v9;
  v2[41] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v2[42] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[43] = v11;
  v2[44] = v12;
  return swift_task_switch(sub_10091DFDC, v11, v12);
}

void sub_10091DFDC()
{
  uint64_t v0;
  char *v1;
  void *v2;
  void *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  _BOOL8 v30;
  objc_class *Assistant;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;

  sub_1009035AC();
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
    *(_QWORD *)(v0 + 360) = v3;
    v4 = v3;

    v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
    *(_QWORD *)(v0 + 368) = v5;
    v6 = qword_1013DD6B8;
    v35 = v5;
    if (v6 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    v7 = *(_QWORD *)(v0 + 320);
    v34 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 248);
    swift_beginAccess(&static OS_os_log.crlDefault, v0 + 184, 0, 0);
    v10 = (void *)static OS_os_log.crlDefault;
    v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 376) = v11;
    inited = swift_initStackObject(v11, v0 + 88);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v13 = v10;
    v14 = URL.absoluteString.getter(v13);
    v16 = v15;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v17 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 384) = v17;
    *(_QWORD *)(inited + 64) = v17;
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(inited + 40) = v16;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v19, "QA Import file %{public}@", 25, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 392) = v20;
    swift_arrayDestroy(inited + 32, 1, v20);

    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v21(v34, v9, v8);
    v22 = qword_1013DDD80;
    v23 = v4;
    v24 = v35;
    if (v22 != -1)
      swift_once(&qword_1013DDD80, sub_100BC9504);
    v25 = *(_QWORD *)(v0 + 328);
    v36 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD *)(v0 + 312);
    v27 = qword_101480E68;
    KeyPath = swift_getKeyPath("@DS");
    v29 = swift_getKeyPath(" DS");
    static Published.subscript.getter((_QWORD *)(v0 + 440), v27, KeyPath, v29);
    swift_release(v29);
    swift_release(KeyPath);
    v30 = (*(_BYTE *)(v0 + 440) & 1) == 0;
    Assistant = (objc_class *)type metadata accessor for CRLBoardFileReadAssistant(0);
    v32 = (char *)objc_allocWithZone(Assistant);
    *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant] = 0;
    v21((uint64_t)&v32[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_url], v25, v26);
    *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_store] = v23;
    *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_context] = v24;
    *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_options] = v30;
    *(_QWORD *)(v0 + 232) = v32;
    *(_QWORD *)(v0 + 240) = Assistant;
    *(_QWORD *)(v0 + 400) = objc_msgSendSuper2((objc_super *)(v0 + 232), "init");
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v25, v26);
    v33 = (_QWORD *)swift_task_alloc(dword_1013E518C);
    *(_QWORD *)(v0 + 408) = v33;
    *v33 = v0;
    v33[1] = sub_10091E2F0;
    sub_1005B3600();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10091E2F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 408);
  v3[52] = a1;
  v3[53] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10091E7E0;
  else
    v5 = sub_10091E358;
  return swift_task_switch(v5, v3[43], v3[44]);
}

void sub_10091E358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 384);
  v45 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  v43 = *(_QWORD *)(v0 + 288);
  v5 = (void *)static OS_os_log.crlDefault;
  inited = swift_initStackObject(*(_QWORD *)(v0 + 376), v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v41 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v42 = v1;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 208, 0, 0);
  sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
  v9 = v5;
  swift_retain(v7);
  v10 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v10);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  v15.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v2 + 8))(v3, v43);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v16, "QA Import read board from file %{public}@, attempting to save.", 62, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v45);

  sub_1009035AC();
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)(v0 + 416);
    v20 = *(_QWORD *)(v0 + 424);
    v21 = *(_QWORD *)(v0 + 272);
    v22 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 5, v22);
    sub_100CA5264(v19, v21);
    if (v20)
    {
      v23 = *(void **)(v0 + 416);
      v24 = *(void **)(v0 + 400);
      v26 = *(void **)(v0 + 360);
      v25 = *(void **)(v0 + 368);
      v27 = *(_QWORD *)(v0 + 336);
      sub_1004B84A4(*(_QWORD *)(v0 + 272), type metadata accessor for CRLBoardLibraryViewModel.Folder);

      swift_release(v27);
      v28 = *(_QWORD *)(v0 + 304);
      v30 = *(_QWORD *)(v0 + 272);
      v29 = *(_QWORD *)(v0 + 280);
      v31 = *(_QWORD *)(v0 + 264);
      swift_task_dealloc(*(_QWORD *)(v0 + 328));
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v31);
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v32 = *(_QWORD *)(v0 + 304);
      v33 = *(_QWORD *)(v0 + 280);
      v34 = *(_QWORD *)(v0 + 264);
      sub_1004B84A4(*(_QWORD *)(v0 + 272), type metadata accessor for CRLBoardLibraryViewModel.Folder);

      v35 = *(_QWORD *)(v42 + v41);
      v36 = v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 160, 0, 0);
      sub_1004B8460(v36, v33, type metadata accessor for CRLBoardCRDTData);
      swift_retain(v35);
      CRRegister.wrappedValue.getter(v10);
      sub_1004B84A4(v33, type metadata accessor for CRLBoardCRDTData);
      swift_release(v35);
      v37 = (uint64_t *)(*(_QWORD *)(v42 + v41) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v39 = *v37;
      v38 = v37[1];
      swift_bridgeObjectRetain(v38);
      sub_10067AFD0(v32, v39, v38, v34);
      v40 = (_QWORD *)swift_task_alloc(dword_1013FA45C);
      *(_QWORD *)(v0 + 432) = v40;
      *v40 = v0;
      v40[1] = sub_10091E6D8;
      sub_10091CCAC(*(_QWORD *)(v0 + 264));
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10091E6D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*v0 + 432));
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  return swift_task_switch(sub_10091E738, *(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 352));
}

uint64_t sub_10091E738()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 400);
  v3 = *(void **)(v0 + 360);
  v2 = *(void **)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 264);

  swift_release(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10091E7E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 400);
  v3 = *(void **)(v0 + 360);
  v2 = *(void **)(v0 + 368);
  swift_release(*(_QWORD *)(v0 + 336));

  v4 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10091E9B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t inited;
  NSString *v33;
  NSString *v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  Class isa;
  id v42;
  uint64_t v43;
  void *v44;
  Class v45;
  uint64_t v46;
  void **aBlock;
  uint64_t v48;
  id (*v49)(uint64_t, void *);
  void *v50;
  void (*v51)(void *@<X0>, _OWORD *@<X8>);
  uint64_t v52;
  _BYTE v53[112];
  _BYTE v54[24];
  _BYTE v55[32];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)sub_100903068();
  if (v11)
  {
    v12 = v11;
    v13 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v15 = v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v55, 0, 0);
    sub_1004B8460(v15, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v14);
    v16 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v16);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    swift_release(v14);
    v17 = (uint64_t *)(*(_QWORD *)&v12[v13] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain(v19);
    sub_10067AFD0((uint64_t)v7, v18, v19, (uint64_t)v10);
    v20 = *(_QWORD *)&v12[v13] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v20, v54, 0, 0);
    sub_1004B8460(v20, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    v21 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v21);
    v22 = (uint64_t)aBlock;
    v23 = v48;
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    v24 = *(void **)(*(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
    v25 = v24;
    sub_1009035AC();
    if (v26)
    {
      v27 = v26;
      v28 = type metadata accessor for CRLBoardShareItemProviderHelper();
      v29 = sub_1009D993C(v24, (uint64_t)v27, (uint64_t)v10, v22, v23, 0, 0xF000000000000000);

      v30 = sub_1005ABCA4((uint64_t)v10, v22, v23, v1, v28);
      v31 = sub_1004B804C(&qword_1013FA428);
      inited = swift_initStackObject(v31, v53);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      *(_QWORD *)(inited + 32) = UIActivityItemsConfigurationMetadataKeyTitle;
      *(_QWORD *)(inited + 40) = v22;
      *(_QWORD *)(inited + 48) = v23;
      *(_QWORD *)(inited + 64) = &type metadata for String;
      *(_QWORD *)(inited + 72) = UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata;
      *(_QWORD *)(inited + 104) = sub_1004B8930(0, (unint64_t *)&unk_1013FA430, LPLinkMetadata_ptr);
      *(_QWORD *)(inited + 80) = v30;
      v33 = UIActivityItemsConfigurationMetadataKeyTitle;
      v34 = UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata;
      v35 = v30;
      v36 = sub_1008D7CF0(inited);
      v37 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v38 = swift_allocObject(v37, 40, 7);
      *(_OWORD *)(v38 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v38 + 32) = v29;
      aBlock = (void **)v38;
      specialized Array._endMutation()(v38);
      v39 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
      sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
      v40 = v29;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v42 = objc_msgSend(v39, "initWithItemProviders:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      v43 = swift_allocObject(&unk_101287E70, 24, 7);
      *(_QWORD *)(v43 + 16) = v36;
      v51 = sub_100921DC8;
      v52 = v43;
      aBlock = _NSConcreteStackBlock;
      v48 = *(_QWORD *)"";
      v49 = sub_10091EEF0;
      v50 = &unk_101287E88;
      v44 = _Block_copy(&aBlock);
      objc_msgSend(v42, "setMetadataProvider:", v44, swift_release(v52).n128_f64[0]);
      _Block_release(v44);
      type metadata accessor for UIActivityItemsConfigurationInteraction(0);
      v45 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v42, "setSupportedInteractions:", v45);

      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10091EE78(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __n128 v5;
  uint64_t v6;
  char v7;
  id v8;

  if (*(_QWORD *)(a2 + 16))
  {
    v8 = a1;
    v6 = sub_100842FAC(v8, v5);
    if ((v7 & 1) != 0)
    {
      sub_1004CB6E8(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }

  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
}

id sub_10091EEF0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(_QWORD *__return_ptr);
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD v14[3];
  uint64_t v15;

  v4 = *(void (**)(_QWORD *__return_ptr))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(v14);
  swift_release(v3);

  v6 = v15;
  if (!v15)
    return 0;
  v7 = sub_1004BB5A4(v14, v15);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
  v12 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
  return v12;
}

unint64_t sub_10091EFDC()
{
  unint64_t result;

  result = qword_1013FA320;
  if (!qword_1013FA320)
  {
    result = swift_getWitnessTable(&unk_100F1710C, &type metadata for CRLiOSSceneDelegateError);
    atomic_store(result, &qword_1013FA320);
  }
  return result;
}

uint64_t sub_10091F020()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10091F044()
{
  uint64_t v0;

  sub_10091D2B4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10091F04C(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _OWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v26[24];

  v10 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v10);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (_QWORD *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler);
  v13[3] = &type metadata for CRLSendACopyBoardDataHandler;
  v13[4] = &off_101296040;
  v14 = (_OWORD *)swift_allocObject(&unk_101288050, 64, 7);
  *v13 = v14;
  v15 = a3[1];
  v14[1] = *a3;
  v14[2] = v15;
  v14[3] = a3[2];
  v16 = a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  v18(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, 1, 1, v17);
  *(_QWORD *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask) = 0;
  *(_BYTE *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) = 0;
  v19 = a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate;
  *(_QWORD *)(v19 + 8) = 0;
  swift_unknownObjectWeakInit(v19);
  v20 = (_OWORD *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken);
  *v20 = 0u;
  v20[1] = 0u;
  *(_BYTE *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen) = 0;
  v21 = (_QWORD *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary);
  *v21 = a2;
  v21[1] = &off_10129F490;
  v22 = a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate;
  *(_QWORD *)(v22 + 8) = &off_101287C90;
  swift_unknownObjectWeakAssign(v22, a4);

  sub_1004B84E0(a1, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  v18((uint64_t)v12, 0, 1, v17);
  v23 = a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  swift_beginAccess(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier, v26, 33, 0);
  sub_100581598((uint64_t)v12, v23);
  swift_endAccess(v26);
  return a5;
}

id sub_10091F260(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  objc_super v11;

  v6 = &a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController] = 0;
  v7 = &a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver] = 0;
  a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 0;
  a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights] = 0;
  v9 = &a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_libraryProvider];
  *v9 = a1;
  v9[1] = &off_10129F490;
  v11.receiver = a3;
  v11.super_class = (Class)type metadata accessor for CRLiOSSidebarViewController(0);
  swift_unknownObjectRetain(a1);
  return objc_msgSendSuper2(&v11, "initWithCollectionViewLayout:", a2);
}

void sub_10091F384(void *a1)
{
  char *v1;
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  _QWORD aBlock[5];
  _QWORD *v44;

  v2 = v1;
  if ((sub_1008741F4() & 1) == 0)
  {
    if (qword_1013DD6D0 != -1)
      swift_once(&qword_1013DD6D0, sub_100A00E84);
    swift_beginAccess(&static OS_os_log.crlWarning, aBlock, 0, 0);
    v5 = (id)static OS_os_log.crlWarning;
    v17 = static os_log_type_t.info.getter(v16);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v17, "Skipping user activity from a newer version.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_20;
  }
  sub_1009035AC();
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject(&unk_101288388, 32, 7);
    *(_QWORD *)(v6 + 16) = v1;
    *(_QWORD *)(v6 + 24) = a1;
    if ((*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) & 1) != 0)
    {
      v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
      if (v7)
      {
        v8 = v2;
        v9 = a1;
        v10 = v8;
        v11 = v9;
        v12 = objc_msgSend(v7, "rootViewController");
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, "crl_windowWrapper");

          if (v14)
          {
            v15 = objc_msgSend(v14, "newWrapperBeginningIgnoringUserInteractionSafely");

            if (v15)
            {
LABEL_19:
              v38 = (_QWORD *)swift_allocObject(&unk_101288400, 40, 7);
              v38[2] = v2;
              v38[3] = a1;
              v38[4] = v15;
              v39 = v15;
              v40 = v2;
              v41 = a1;
              sub_100902400((uint64_t)sub_1009227DC, (uint64_t)v38);
              swift_release(v38);

              swift_release(v6);
LABEL_20:

              return;
            }
          }
        }
      }
      else
      {
        v32 = v2;
        v33 = a1;
        v34 = v32;
        v35 = v33;
      }
      if (qword_1013DD6C8 != -1)
        swift_once(&qword_1013DD6C8, sub_100A00D28);
      swift_beginAccess(&static OS_os_log.crlError, aBlock, 0, 0);
      v36 = (id)static OS_os_log.crlError;
      v37 = static os_log_type_t.error.getter(v36);
      sub_100A06EBC((uint64_t)v36, &_mh_execute_header, v37, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
        90,
        2,
        (uint64_t)_swiftEmptyArrayStorage);

      v15 = 0;
      goto LABEL_19;
    }
    v18 = (void *)objc_opt_self(NSNotificationCenter);
    v19 = v1;
    v20 = a1;
    v42 = v19;
    v21 = v20;
    v22 = objc_msgSend(v18, "defaultCenter");
    v23 = swift_allocObject(&unk_101288168, 24, 7);
    *(_QWORD *)(v23 + 16) = 0;
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    v24 = qword_101480E38;
    v25 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v26 = (_QWORD *)swift_allocObject(&unk_1012883B0, 48, 7);
    v26[2] = v23;
    v26[3] = v22;
    v26[4] = sub_100922798;
    v26[5] = v6;
    aBlock[4] = sub_100922DD4;
    v44 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100568280;
    aBlock[3] = &unk_1012883C8;
    v27 = _Block_copy(aBlock);
    v28 = v44;
    swift_retain(v23);
    v29 = v22;
    swift_retain(v6);
    v30 = objc_msgSend(v29, "addObserverForName:object:queue:usingBlock:", v24, v5, v25, v27, swift_release(v28).n128_f64[0]);

    _Block_release(v27);
    swift_beginAccess(v23 + 16, aBlock, 1, 0);
    v31 = *(_QWORD *)(v23 + 16);
    *(_QWORD *)(v23 + 16) = v30;
    swift_release(v23);
    swift_release(v6);

    swift_unknownObjectRelease(v31);
  }
  else
  {
    __break(1u);
  }
}

id sub_10091F80C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6, _BYTE *a7)
{
  char *v8;
  char *v9;
  _QWORD *v10;
  _OWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  _BYTE *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  id v38;
  objc_super v46;
  _BYTE v47[40];

  v8 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___diffableDataSource] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh] = &_swiftEmptySetSingleton;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver] = 0;
  v10 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete] = 0;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isCurrentlyInMultipleSelectionInteraction] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout] = 0;
  v11 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver];
  *v11 = 0u;
  v11[1] = 0u;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver] = 0;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 0;
  v12 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections];
  v13 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections] = &_swiftEmptySetSingleton;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___layoutBarButtonItem] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone] = 0;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems] = 0;
  v14 = (uint64_t *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone];
  v15 = (void *)objc_opt_self(NSBundle);
  v16 = a7;
  v17 = objc_msgSend(v15, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  *v14 = v21;
  v14[1] = v23;
  v24 = (uint64_t *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_alternateTitleForToolbarItemToSelectAllOrNone];
  v25 = objc_msgSend(v15, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  *v24 = v29;
  v24[1] = v31;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight] = 0;
  v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = 0;
  sub_1004B8460(a1, (uint64_t)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder], type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v32 = &v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
  *v32 = a2;
  v32[1] = &off_10129F490;
  *((_QWORD *)v8 + 1) = &off_101287CB8;
  swift_unknownObjectWeakAssign(v8, a4);
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache] = a3;
  sub_1004CB7BC(a5, (uint64_t)v47, &qword_1013EC598);
  v33 = type metadata accessor for CRLBoardSearchHelper();
  swift_allocObject(v33, 104, 7);
  v34 = a2;
  v35 = a3;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardSearchHelper] = sub_1006B86D0((uint64_t)v47);
  v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout] = a6;
  v36 = &v16[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions];
  *(_WORD *)v36 = 1;
  v36[2] = 0;

  v37 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v46.receiver = v16;
  v46.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController(0);
  v38 = objc_msgSendSuper2(&v46, "initWithCollectionViewLayout:", v37);

  objc_msgSend(v38, "setHidesBottomBarWhenPushed:", 1);
  sub_1004CB800(a5, &qword_1013EC598);
  sub_1004B84A4(a1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return v38;
}

id sub_10091FD04(uint64_t a1, uint64_t a2, char a3, char a4)
{
  NSString v6;
  void *v7;
  char **v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  Class isa;
  void *v20;
  id v21;
  id v22;
  id v23;
  _QWORD v25[5];
  uint64_t v26;

  swift_bridgeObjectRetain(a2);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = (void *)objc_opt_self(UIImage);
  v8 = &selRef_systemImageNamed_;
  if ((a3 & 1) == 0)
    v8 = &selRef_imageNamed_;
  v9 = objc_msgSend(v7, *v8, v6);

  if (!v9)
    return 0;
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemCyanColor");
  v11 = objc_allocWithZone((Class)UIColor);
  v25[4] = sub_100919460;
  v26 = 0;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = *(_QWORD *)"";
  v25[2] = sub_1004B3678;
  v25[3] = &unk_101288350;
  v12 = _Block_copy(v25);
  v13 = objc_msgSend(v11, "initWithDynamicProvider:", v12);
  _Block_release(v12);
  swift_release(v26);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5560;
  if ((a4 & 1) != 0)
  {
    *(_QWORD *)(v15 + 32) = v13;
    *(_QWORD *)(v15 + 40) = v10;
  }
  else
  {
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v13;
  }
  v25[0] = v15;
  specialized Array._endMutation()(v15);
  sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
  v17 = v13;
  v18 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v20 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v21 = objc_msgSend(v20, "configurationWithPaletteColors:", isa);

  v22 = objc_msgSend(v20, "configurationWithScale:", 2);
  v23 = objc_msgSend(v21, "configurationByApplyingConfiguration:", v22);

  v16 = objc_msgSend(v9, "imageWithConfiguration:", v23);
  return v16;
}

double sub_10091FF80(char *a1, void *a2, void *a3, uint64_t a4, int a5, void *a6, void *a7, int a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  _BYTE *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  char *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  double result;
  char *v73;
  int v74;
  uint64_t v75;
  int v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[24];
  uint64_t v82;
  _BYTE v83[24];
  char v84[24];
  char v85[32];

  v74 = a5;
  v16 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v16);
  v73 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_101288248, 48, 7);
  *(_QWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a7;
  v76 = a8;
  *(_BYTE *)(v18 + 32) = a8;
  v75 = a9;
  *(_QWORD *)(v18 + 40) = a9;
  v19 = *(void **)&a1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  v77 = a7;
  v78 = a6;
  if (v19)
  {
    v20 = a7;
    v21 = a6;
    v22 = objc_msgSend(v19, "rootViewController");
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v22, "crl_windowWrapper");

      if (v24)
      {
        v25 = objc_msgSend(v24, "newWrapperBeginningIgnoringUserInteractionSafely");

        if (v25)
          goto LABEL_10;
      }
    }
  }
  else
  {
    v26 = a7;
    v27 = a6;
  }
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  swift_beginAccess(&static OS_os_log.crlError, v85, 0, 0);
  v28 = (id)static OS_os_log.crlError;
  v29 = static os_log_type_t.error.getter(v28);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v29, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
    90,
    2,
    (uint64_t)_swiftEmptyArrayStorage);

  v25 = 0;
LABEL_10:
  v30 = (_BYTE *)(a4 + 16);
  v31 = objc_msgSend(a2, "cloudKitShareMetadata");
  v32 = v78;
  if (v31)
  {
    v33 = v31;
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v83, 0, 0);
    v34 = (void *)static OS_os_log.sceneManagement;
    v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v35, &v79);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = a1;
    v37 = v34;
    v38 = a1;
    v40 = static os_log_type_t.default.getter(v39);
    sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v40, "Scene delegate (%p) accepting CloudKit share", 44, 2, inited);
    swift_setDeallocating(inited);
    v41 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v41);

    sub_10090CFDC(v33);
  }
  else if (a3)
  {
    v42 = qword_1013DD820;
    v43 = a3;
    if (v42 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v83, 0, 0);
    v44 = (void *)static OS_os_log.sceneManagement;
    v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v46 = swift_initStackObject(v45, &v80);
    *(_OWORD *)(v46 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v46 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(v46 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v46 + 32) = a1;
    v47 = a1;
    v48 = v44;
    v50 = static os_log_type_t.default.getter(v49);
    sub_100A06EBC((uint64_t)v48, &_mh_execute_header, v50, "Scene delegate (%p) handling user activity", 42, 2, v46);
    swift_setDeallocating(v46);
    v51 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v46 + 32, 1, v51);

    v52 = (_QWORD *)swift_allocObject(&unk_101288298, 56, 7);
    v52[2] = v47;
    v52[3] = v43;
    v52[4] = sub_100922DC8;
    v52[5] = v18;
    v52[6] = v25;
    v53 = v25;
    v54 = v47;
    v55 = v43;
    swift_retain(v18);
    sub_100902400((uint64_t)sub_10092242C, (uint64_t)v52);

    swift_release(v52);
    swift_beginAccess(v30, v81, 1, 0);
    *v30 = 1;
  }
  else
  {
    if ((v74 & 1) == 0)
      goto LABEL_23;
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v83, 0, 0);
    v56 = (void *)static OS_os_log.sceneManagement;
    v57 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v58 = swift_initStackObject(v57, &v82);
    *(_OWORD *)(v58 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v58 + 56) = type metadata accessor for CRLiOSSceneDelegate(0);
    *(_QWORD *)(v58 + 64) = sub_1004B7878((unint64_t *)&unk_1013FA4B0, type metadata accessor for CRLiOSSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v58 + 32) = a1;
    v59 = a1;
    v60 = v56;
    v62 = static os_log_type_t.default.getter(v61);
    sub_100A06EBC((uint64_t)v60, &_mh_execute_header, v62, "Scene delegate (%p) showing new board before First Launch", 57, 2, v58);
    swift_setDeallocating(v58);
    v63 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v58 + 32, 1, v63);

    v64 = type metadata accessor for TaskPriority(0);
    v65 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v73, 1, 1, v64);
    type metadata accessor for MainActor(0);
    v66 = v25;
    v67 = v59;
    swift_retain(v18);
    v69 = static MainActor.shared.getter(v68);
    v70 = (_QWORD *)swift_allocObject(&unk_101288270, 64, 7);
    v70[2] = v69;
    v70[3] = &protocol witness table for MainActor;
    v70[4] = v67;
    v70[5] = sub_100922DC8;
    v70[6] = v18;
    v70[7] = v25;
    v71 = sub_100521B98(v65, (uint64_t)&unk_1013FA538, (uint64_t)v70);
    swift_release(v71);
    swift_beginAccess(v30, v81, 1, 0);
    *v30 = 1;
  }
  v32 = v78;
LABEL_23:
  swift_beginAccess(v30, v84, 0, 0);
  if ((*v30 & 1) == 0)
    objc_msgSend(v25, "endIgnoringUserInteractionSafely", sub_10090726C(v32, v77, v76 & 1, v75));

  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

id sub_100920650(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  char **v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  NSString v28;
  NSString v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v54;
  _QWORD v55[5];
  uint64_t v56;

  v1 = a1;
  v2 = objc_opt_self(NSBundle);
  v3 = &selRef_isLineSegment;
  v4 = objc_msgSend((id)v2, "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  sub_1006B0990();
  v11 = v10;
  if (v1 != 2)
    goto LABEL_21;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v11);
  LOBYTE(v12) = sub_100B02EA0();
  LOBYTE(v11) = objc_msgSend((id)objc_opt_self(UIDevice), "crl_iPadDevice");
  if (qword_1013DCDF8 != -1)
    goto LABEL_55;
  while (1)
  {
    v9 = *(_QWORD *)algn_10147F0F8;
    if ((v12 & 1) != 0)
    {
      if ((v11 & 1) != 0)
      {
        v13 = qword_1013DCE10;
        swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0F8);
        if (v13 != -1)
          swift_once(&qword_1013DCE10, sub_1006B3F78);
        v14 = &qword_10147F120;
      }
      else
      {
        v17 = qword_1013DCE00;
        swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0F8);
        if (v17 != -1)
          swift_once(&qword_1013DCE00, sub_1006B3DD8);
        v14 = &qword_10147F100;
      }
      v11 = v14[1];
      v18 = objc_msgSend((id)v2, v3[428], swift_bridgeObjectRetain(v11).n128_f64[0]);
      v19 = String._bridgeToObjectiveC()();
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v23 = v22;

      v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
      v55[4] = sub_100922E4C;
      v56 = 0;
      v55[0] = _NSConcreteStackBlock;
      v55[1] = *(_QWORD *)"";
      v55[2] = sub_1004C6194;
      v55[3] = &unk_101288068;
      v25 = _Block_copy(v55);
      swift_release(v56);
      v12 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v24, 0, v25);
      v26 = v25;
      v3 = &selRef_isLineSegment;
      _Block_release(v26);

    }
    else
    {
      if ((v11 & 1) != 0)
      {
        v15 = qword_1013DCE18;
        swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0F8);
        if (v15 != -1)
          swift_once(&qword_1013DCE18, sub_1006B4048);
        v16 = &qword_10147F130;
      }
      else
      {
        v27 = qword_1013DCE08;
        swift_bridgeObjectRetain(*(_QWORD *)algn_10147F0F8);
        if (v27 != -1)
          swift_once(&qword_1013DCE08, sub_1006B3EA8);
        v16 = &qword_10147F110;
      }
      v11 = v16[1];
      swift_bridgeObjectRetain(v11);
LABEL_21:
      v12 = 0;
    }
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v30 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, v29, 1);

    v55[0] = _swiftEmptyArrayStorage;
    if (v12)
    {
      v31 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v33 = *(_QWORD *)((v55[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)((v55[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v33 >= v32 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
      specialized Array._endMutation()(v34);
    }
    v35 = objc_msgSend((id)v2, v3[428], v55[0]);
    v36 = String._bridgeToObjectiveC()();
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v35, "localizedStringForKey:value:table:", v36, v37, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = v39;

    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    v42 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v41, 0, 0);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
    v11 = *(_QWORD *)((v55[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v44 = *(_QWORD *)((v55[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v11 >= v44 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v11 + 1, 1);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v42);
    specialized Array._endMutation()(v45);
    v2 = v55[0];
    v46 = v55[0] >> 62;
    if (v55[0] >> 62)
    {
      if (v55[0] < 0)
        v50 = v55[0];
      else
        v50 = v55[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v55[0], 2);
      v47 = _CocoaArrayWrapper.endIndex.getter(v50);
      if (!v47)
        goto LABEL_40;
    }
    else
    {
      v47 = *(_QWORD *)((v55[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v55[0], 2);
      if (!v47)
        goto LABEL_40;
    }
    if (v47 < 1)
      break;
    v11 = 0;
    v3 = (char **)(v2 & 0xC000000000000001);
    do
    {
      if (v3)
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v2);
      else
        v48 = *(id *)(v2 + 8 * v11 + 32);
      v49 = v48;
      ++v11;
      objc_msgSend(v30, "addAction:", v48);

    }
    while (v47 != v11);
LABEL_40:
    swift_bridgeObjectRelease_n(v2, 2);
    if (v46)
    {
      if (v2 < 0)
        v54 = v2;
      else
        v54 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v51 = (void *)_CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(v2);
      if (!v51)
        goto LABEL_46;
    }
    else
    {
      v51 = *(void **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v51)
        goto LABEL_46;
    }
    if ((v2 & 0xC000000000000001) != 0)
      goto LABEL_53;
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v52 = *(id *)(v2 + 32);
      goto LABEL_45;
    }
    __break(1u);
LABEL_55:
    swift_once(&qword_1013DCDF8, sub_1006B3D08);
  }
  __break(1u);
LABEL_53:
  v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_45:
  v51 = v52;
LABEL_46:
  objc_msgSend(v30, "setPreferredAction:", v51, swift_bridgeObjectRelease(v2).n128_f64[0]);

  return v30;
}

uint64_t sub_100920D64(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  swift_bridgeObjectRetain(a1);
  v17 = (void *)sub_1008580E0(v16);
  v18 = swift_bridgeObjectRelease();
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v18);
    return sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
  }
  v19 = objc_msgSend(v17, "URL", v18.n128_f64[0]);

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v20(v8, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
  v20(v15, v8, v9);
  if ((v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight] & 1) == 0)
  {
    v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight] = 1;
    v22 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    type metadata accessor for MainActor(0);
    v23 = v1;
    v24 = static MainActor.shared.getter(v23);
    v25 = *(unsigned __int8 *)(v10 + 80);
    v26 = (v25 + 40) & ~v25;
    v27 = (char *)swift_allocObject(&unk_1012884A0, v26 + v11, v25 | 7);
    *((_QWORD *)v27 + 2) = v24;
    *((_QWORD *)v27 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v27 + 4) = v23;
    v20(&v27[v26], v12, v9);
    v28 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013FA5D0, (uint64_t)v27);
    v21 = swift_release(v28);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v15, v9, v21);
}

void sub_100921014()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  char v41[24];
  char v42[72];
  char v43[32];

  v0 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1009038CC();
  v40 = (char *)objc_msgSend(v10, "presentedViewController");

  if (v40)
  {
    v11 = objc_opt_self(UINavigationController);
    v12 = (void *)swift_dynamicCastObjCClass(v40, v11);
    if (v12)
    {
      v39 = objc_msgSend(v12, "topViewController");

      if (v39)
      {
        v13 = type metadata accessor for CRLiOSBoardViewController(0);
        v14 = swift_dynamicCastClass(v39, v13);
        if (v14)
        {
          v15 = (char *)v14;
          if (qword_1013DD820 != -1)
            swift_once(&qword_1013DD820, sub_100A04A9C);
          swift_beginAccess(&static OS_os_log.sceneManagement, v43, 0, 0);
          v38 = (id)static OS_os_log.sceneManagement;
          v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v16, v42);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
          v40 = v15;
          v19 = *(char **)(v18 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
          v37 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
          v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
          v21 = v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess(v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v41, 0, 0);
          sub_1004B8460(v21, (uint64_t)v2, type metadata accessor for CRLBoardCRDTData);
          v38 = v38;
          v36 = v19;
          swift_retain(v20);
          v22 = sub_1004B804C(&qword_1013E1A80);
          CRRegister.wrappedValue.getter(v22);
          sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLBoardCRDTData);
          swift_release(v20);
          v23 = (uint64_t *)(*(_QWORD *)&v19[v37] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
          v24 = *v23;
          v25 = v23[1];
          swift_bridgeObjectRetain(v25);
          sub_10067AFD0((uint64_t)v6, v24, v25, (uint64_t)v9);

          (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
          v26 = sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
          v27 = UUID.uuidString.getter(v26);
          v29 = v28;
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v27;
          *(_QWORD *)(inited + 40) = v29;
          v31 = static os_log_type_t.default.getter(v30);
          v32 = v38;
          sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v31, "Tearing down the board view controller after disconnecting the scene for identifier %{public}@", 94, 2, inited);
          swift_setDeallocating(inited);
          v33 = *(_QWORD *)(inited + 16);
          v34 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, v33, v34);

          sub_100908380(v40, 0);
        }
        else
        {

        }
      }
    }
    else
    {

    }
  }
}

double sub_1009213F8(void *a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::Int v12;
  double result;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "type", v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11._countAndFlagsBits = v8;
  v11._object = v10;
  v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012653D0, v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (!v12)
  {
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    type metadata accessor for MainActor(0);
    v15 = v1;
    v16 = static MainActor.shared.getter(v15);
    v17 = (_QWORD *)swift_allocObject(&unk_101288478, 40, 7);
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    v17[4] = v15;
    v18 = sub_100521D40((uint64_t)v6, (uint64_t)&unk_1013FA5C0, (uint64_t)v17);
    *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  }
  return result;
}

void sub_100921530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  _BYTE v18[8];
  _BYTE v19[112];
  _BYTE v20[32];

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  swift_beginAccess(&static OS_os_log.crlError, v20, 0, 0);
  v6 = (void *)static OS_os_log.crlError;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v19);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_getErrorValue(a3, v18, v17);
  v10 = v17[1];
  v11 = v17[2];
  v12 = v6;
  swift_bridgeObjectRetain(a2);
  v13 = Error.localizedDescription.getter(v10, v11);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = v14;
  v15 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v15, "Unable to accept Handoff with type: %@, error: %@.", 50, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v16);

}

unint64_t sub_10092169C()
{
  unint64_t result;

  result = qword_1013FA338;
  if (!qword_1013FA338)
  {
    result = swift_getWitnessTable(&unk_100F1FFC4, &_s34CRLViewControllerPresentationErrorON);
    atomic_store(result, (unint64_t *)&qword_1013FA338);
  }
  return result;
}

uint64_t sub_1009216E0(uint64_t a1)
{
  return sub_100919B18(a1);
}

uint64_t sub_1009216E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  swift_errorRelease(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11, v3 | 7);
}

uint64_t sub_100921828(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1013FA3A4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_10091C8D4(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1009218D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1013FA3BC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return sub_10091CBC4(a1, v4);
}

void sub_100921928(uint64_t a1)
{
  uint64_t v1;

  sub_100A12994(a1, *(_QWORD *)(v1 + 16), *(void ***)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_100921934()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSString v8;
  Class isa;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v24[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  if (v6 && objc_msgSend(v6, "isUserInteractionEnabled", v2) && (sub_100903BFC() & 1) == 0)
  {
    v7 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v8 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(5);
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "sendEventInDomain:lazily:eventPayload:", v8, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

    v10 = *(void **)&v0[v5];
    if (!v10
      || (v11 = objc_msgSend(v10, "rootViewController")) == 0
      || (v12 = v11,
          v13 = objc_msgSend(v11, "crl_windowWrapper"),
          v12,
          !v13)
      || (v14 = objc_msgSend(v13, "newWrapperBeginningIgnoringUserInteractionSafely"), v13, !v14))
    {
      if (qword_1013DD6C8 != -1)
        swift_once(&qword_1013DD6C8, sub_100A00D28);
      swift_beginAccess(&static OS_os_log.crlError, v24, 0, 0);
      v15 = (id)static OS_os_log.crlError;
      v16 = static os_log_type_t.error.getter(v15);
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v16, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
        90,
        2,
        (uint64_t)_swiftEmptyArrayStorage);

      v14 = 0;
    }
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
    type metadata accessor for MainActor(0);
    v18 = v14;
    v19 = v0;
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_101287DD0, 48, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v19;
    v21[5] = v14;
    v22 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013FA3E0, (uint64_t)v21);
    swift_release(v22);

  }
}

uint64_t sub_100921BE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA3CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100911E34(a1, v4, v5, v7, v6);
}

uint64_t sub_100921C64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA3EC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1009134F8(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_100921CE4()
{
  unint64_t result;

  result = qword_1013FA418;
  if (!qword_1013FA418)
  {
    result = swift_getWitnessTable(&unk_100F29750, &type metadata for CRLBoardLibraryBoardOpenError);
    atomic_store(result, (unint64_t *)&qword_1013FA418);
  }
  return result;
}

double sub_100921D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100CBC3E4(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100921D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100921D9C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100921DA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100921DC8(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  sub_10091EE78(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100921DD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA444);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_10091D7F8(a1, v4, v5, v7, v6);
}

uint64_t sub_100921E54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100921E78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100921EA4()
{
  uint64_t v0;

  sub_1009199A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100921EAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100921ED0(uint64_t a1)
{
  uint64_t v1;

  return sub_10090F138(a1, v1);
}

uint64_t sub_100921EDC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100921F10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA46C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_10090EAD4(a1, v4, v5, v7, v6);
}

void sub_100921F88(uint64_t a1)
{
  uint64_t v1;

  sub_10090E2A0(a1, v1);
}

uint64_t sub_100921F90(uint64_t a1)
{
  uint64_t v1;

  return sub_100BD121C(*(_QWORD *)(v1 + 16), a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item);
}

uint64_t sub_100921FAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100921FF0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100922024(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA4CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1009097F4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1009220A4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v1 = *(_QWORD *)(v0 + 88);
  if (v1 >> 60 != 15)
    sub_1004BBBC8(*(_QWORD *)(v0 + 80), v1);
  v2 = *(_QWORD *)(v0 + 104);
  if (v2 >> 60 != 15)
    sub_1004BBBC8(*(_QWORD *)(v0 + 96), v2);
  return swift_deallocObject(v0, 113, 7);
}

uint64_t sub_100922100(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B8F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100C25ED8(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

_QWORD *sub_10092217C(_QWORD *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1[7];
  v5 = a1[8];
  a2(a1[5], a1[6]);
  a2(v4, v5);
  return a1;
}

uint64_t sub_1009221C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1009221D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

double sub_100922200()
{
  uint64_t v0;

  return sub_10090726C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100922210()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 65, 7);
}

void sub_100922254()
{
  uint64_t v0;

  sub_1009075E8(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void (**)(__n128))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
}

uint64_t sub_100922268()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100922294(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA504);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1009063C0(a1, v5, v6, v7, v8);
}

uint64_t sub_10092232C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FA514);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100905230(a1, v4, v5, v6);
}

uint64_t sub_10092239C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1013FA534);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_100907E90(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100922430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1004B804C(&qword_1013FA540);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v7 + 8));
  v8 = v7 + *(int *)(v1 + 44);
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1009224DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_1004B804C(&qword_1013FA540) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc(dword_1013FA55C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1004CF80C;
  v6[2] = v4;
  v6[3] = v5;
  return swift_task_switch(sub_100902BB8, 0, 0);
}

uint64_t sub_10092256C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013FA540);
  return static UUID.== infix(_:_:)(a1 + *(int *)(v2 + 44)) & 1;
}

uint64_t sub_1009225BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100922600(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013FA56C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_100907D50(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100922698()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1009226D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100922714()
{
  uint64_t v0;

  return sub_100907C38(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100922724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FA358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10092276C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100922798()
{
  uint64_t v0;

  sub_10090FD94(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1009227A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009227DC()
{
  void **v0;

  return sub_10090FF14(v0[2], v0[3], v0[4]);
}

uint64_t sub_1009227EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA5AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100910010(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100922870()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1009228A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FA5BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10090900C(a1, v4, v5, v6);
}

uint64_t sub_100922918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100922994(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA5CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1009081A0(a1, v5, v6, v7, v8);
}

uint64_t sub_100922A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1013FA3FC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1004CFD00;
  return sub_1009120BC(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_100922AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100922B88()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100915434(v0 + v2, *(char **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100922BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v10));

  return swift_deallocObject(v0, v11 + 8, v3 | 7);
}

_QWORD *_s18AssetNameRecordKeyVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for CRLiOSSceneDelegateError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *_s18AssetNameRecordKeyVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for CRLiOSSceneDelegateError()
{
  return &type metadata for CRLiOSSceneDelegateError;
}

uint64_t sub_100922E50()
{
  return sub_100922E78((SEL *)&selRef_inferredAccessibilityDescriptionNoShapeNames, (uint64_t (*)(uint64_t, _QWORD))sub_1007776BC);
}

uint64_t sub_100922E64()
{
  return sub_100922E78((SEL *)&selRef_inferredLocalizedAccessibilityDescriptionPlaceholder, (uint64_t (*)(uint64_t, _QWORD))sub_100777BC0);
}

uint64_t sub_100922E78(SEL *a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  _QWORD *v2;
  uint64_t (*v4)(void);
  uint64_t v5;
  char v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v4 = *(uint64_t (**)(void))(**(_QWORD **)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408);
  v5 = v4();
  if ((v6 & 1) != 0 && v5 == 1)
  {
    v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x478))();
    v8 = objc_msgSend(v7, *a1);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    return v9;
  }
  else
  {
    v11 = ((uint64_t (*)(uint64_t))v4)(v5);
    return a2(v11, v12 & 1);
  }
}

uint64_t sub_100922F4C()
{
  _QWORD *v0;
  void *v2;
  id v3;

  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x490))() & 1) != 0)
    return 0;
  v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478))();
  v3 = objc_msgSend(v2, "bezierPath");

  LODWORD(v2) = objc_msgSend(v3, "isLineSegment");
  return v2 ^ 1;
}

uint64_t sub_100922FDC(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType(a1);
  return sub_1009260E8(a1, v1);
}

void sub_100923018(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *ObjectType;

  ObjectType = (_QWORD *)swift_getObjectType(a4);
  sub_10092658C(a1, a2, a3, a4, v5, ObjectType, a5);
}

void sub_100923078(void *a1)
{
  _QWORD *v1;

  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x4C0))() & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"shadow", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 65, "Should not try to set a shadow on a shape in a freehand drawing.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shadow", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 65, (uint64_t)"Should not try to set a shadow on a shape in a freehand drawing.", 64, 2u);
  }
  else
  {
    sub_100776C40(a1);
  }

}

uint64_t sub_100923164()
{
  _QWORD *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  unsigned int v7;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478))();
  v2 = objc_msgSend(v1, "bezierPath");

  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(v2, "isLineSegment");

  if (v6 >= 0.00000001)
    return (v4 >= 0.00000001) & ~v7;
  else
    return 0;
}

uint64_t sub_10092320C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char v6;
  __n128 v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 312);
  v5 = swift_retain(v3);
  v6 = v4(v5);
  v7 = swift_release(v3);
  if ((v6 & 1) != 0)
  {
    v8 = 0;
  }
  else if (((*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x490))(v7) & 1) != 0)
  {
    v9 = *(_QWORD *)((char *)v1 + v2);
    v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 336);
    v11 = swift_retain(v9);
    LOBYTE(v10) = v10(v11);
    swift_release(v9);
    v8 = v10 & (v6 ^ 1);
  }
  else
  {
    v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_1009232C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(__n128);
  __n128 v4;
  __n128 v5;
  uint64_t (*v6)(__n128);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 336);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  v5 = swift_release(v2);
  if ((v3 & 1) != 0
    && ((*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x290))(v5) & 1) == 0)
  {
    return 0;
  }
  v6 = *(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x478);
  v7 = (void *)v6(v5);
  v8 = sub_1004B8930(0, &qword_1013FA708, off_1012297C8);
  v10 = objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata(v8, v9));

  if ((v10 & 1) != 0)
    return 1;
  v12 = (void *)((uint64_t (*)(void))v6)();
  v13 = sub_1004B8930(0, &qword_1013FA710, off_101229888);
  v11 = objc_msgSend(v12, "isKindOfClass:", swift_getObjCClassFromMetadata(v13, v14));

  return (uint64_t)v11;
}

uint64_t sub_1009233F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *v1;
  result = swift_conformsToProtocol2(*v1, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v4 = *(uint64_t (**)(uint64_t))(v2 + 704);
    v5 = swift_retain(v1);
    v6 = v4(v5);
    swift_release(v1);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10092345C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(uint64_t, __n128);
  __n128 v10;
  CKRecordID v11;
  Swift::String v12;

  v2 = v1;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) == 0
    || (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) == 0))
  {
    v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = *v7;
    if (swift_conformsToProtocol2(*v7, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
    {
      v9 = *(void (**)(uint64_t, __n128))(v8 + 712);
      v10 = swift_retain(v7);
      v9(a1, v10);
      swift_release(v7);
      return;
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

id sub_100923600()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478))();
  v2 = objc_msgSend(v1, "bezierPath");

  v3 = objc_msgSend(v2, "isLineSegment");
  return v3;
}

uint64_t sub_100923670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CGColorSpace *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39[24];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;

  v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v5 = *v4;
  result = swift_conformsToProtocol2(*v4, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v7 = result;
    v8 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
    v9 = swift_retain(v4);
    v8(v5, v7, v9);
    swift_release(v4);
    v10 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    CRRegister.wrappedValue.getter(v10);
    v11 = v40;
    v13 = v42;
    v12 = v43;
    v15 = v44;
    v14 = v45;
    v17 = v46;
    v16 = v47;
    v18 = v49;
    v19 = v51;
    v35 = v50;
    v36 = v48;
    v37 = v53;
    v38 = v41;
    v20 = (uint64_t)v3;
    v21 = v52;
    sub_1004B84A4(v20, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (v21)
    {
      v34 = v11;
      sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
      LODWORD(v40) = v13;
      v31 = v13;
      BYTE4(v40) = BYTE4(v13) & 1;
      v33 = v12;
      v41 = v12;
      v42 = v15;
      v22 = v15;
      v32 = v14;
      v43 = v14;
      v44 = v17;
      v23 = v16;
      v45 = v16;
      v25 = v35;
      v24 = v36;
      v46 = v36;
      v47 = v18;
      v48 = v35;
      v49 = v19;
      v50 = (uint64_t)v21;
      v30 = v19;
      swift_bridgeObjectRetain(v19);
      v29 = (uint64_t)v21;
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v26 = sub_1006C52C0((uint64_t)&v40);
      if ((v38 & 1) != 0)
      {
        if (qword_1013DD868 != -1)
          swift_once(&qword_1013DD868, sub_100A05844);
        swift_beginAccess(&static OS_os_log.persistence, v39, 0, 0);
        v27 = (id)static OS_os_log.persistence;
        v28 = static os_log_type_t.info.getter();
        sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v28, "Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
      v21 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v26);

      sub_1004C4174(v34, v38, v31, v33, v22, v32, v17, v23, v24, v18, v25, v30, v29, v37);
    }
    return (uint64_t)v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100923950(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const mach_header_64 *v15;
  unint64_t v16;
  void (*v17)(_BYTE *, _QWORD);
  uint64_t v18;
  __n128 v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  __n128 v24;
  CKRecordID v25;
  Swift::String v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[3];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[32];
  _OWORD v40[7];

  v2 = v1;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) == 0
    || (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) == 0))
  {
    v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = *v7;
    v9 = swift_conformsToProtocol2(*v7, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    v10 = v9;
    if (a1)
    {
      if (v9)
      {
        v11 = a1;
        swift_retain(v7);
        sub_100D3743C(v11, (uint64_t)v40);
        v12 = *(_QWORD *)&v40[0];
        v13 = BYTE8(v40[0]);
        v30 = *(_OWORD *)((char *)&v40[2] + 8);
        v31 = *(_OWORD *)((char *)&v40[1] + 8);
        v28 = *(_OWORD *)((char *)&v40[4] + 8);
        v29 = *(_OWORD *)((char *)&v40[3] + 8);
        v27 = *(_OWORD *)((char *)&v40[5] + 8);
        v14 = *((_QWORD *)&v40[6] + 1);
        v15 = &_mh_execute_header;
        if (!BYTE4(v40[1]))
          v15 = 0;
        v16 = (unint64_t)v15 | LODWORD(v40[1]);
        v17 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 32))(v39, v8, v10);
        v32[0] = v12;
        v32[1] = v13;
        v32[2] = v16;
        v33 = v31;
        v34 = v30;
        v35 = v29;
        v36 = v28;
        v37 = v27;
        v38 = v14;
        v18 = sub_1004B804C((uint64_t *)&unk_1014148A0);
        CRRegister.wrappedValue.setter(v32, v18, v19);
        v17(v39, 0);

        goto LABEL_11;
      }
      __break(1u);
    }
    else if (v9)
    {
      v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v9 + 32);
      v21 = swift_retain(v7);
      v22 = (void (*)(_QWORD *, _QWORD))v20(v32, v8, v10, v21);
      memset(v40, 0, sizeof(v40));
      v23 = sub_1004B804C((uint64_t *)&unk_1014148A0);
      CRRegister.wrappedValue.setter(v40, v23, v24);
      v22(v32, 0);
LABEL_11:
      swift_release(v7);
      return;
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_100923C48()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v2, "isKindOfClass:", swift_getObjCClassFromMetadata(v3, v4)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  return 0;
}

BOOL sub_100923D4C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;

  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x4C0))() & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 158, "Should only ask about being a fill for a freehand drawing on freehand drawing shapes.", 85, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 158, (uint64_t)"Should only ask about being a fill for a freehand drawing on freehand drawing shapes.", 85, 2u);
  }
  v1 = (void *)sub_100923670();
  v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x420))();
  v3 = v2;
  if (v1)
  {
    if (v2)
    {
      if ((objc_msgSend(v2, "isNullStroke") & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 165, "Should not have both fill and stroke.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 165, (uint64_t)"Should not have both fill and stroke.", 37, 2u);
      }

    }
    else
    {

    }
  }
  else if (v2)
  {

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 171, "Should have a fill or a stroke.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 171, (uint64_t)"Should have a fill or a stroke.", 31, 2u);
  }
  return v1 != 0;
}

uint64_t sub_100923FA0()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0;
  if (((*(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x4C0))(v2) & 1) != 0)
    return (uint64_t)v5;
  v6 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v7 = *v6;
  result = swift_conformsToProtocol2(*v6, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v9 = result;
    v10 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
    v11 = swift_retain(v6);
    v10(v7, v9, v11);
    swift_release(v6);
    v12 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    CRRegister.wrappedValue.getter(v12);
    v13 = v21;
    v14 = v22;
    v15 = v23;
    v16 = v24;
    v17 = v25;
    v18 = v26;
    v19 = v27;
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (!v18)
      return 0;
    v21 = v13;
    v22 = v14;
    LOBYTE(v23) = v15 & 1;
    HIDWORD(v23) = HIDWORD(v15);
    LODWORD(v24) = v16;
    BYTE4(v24) = BYTE4(v16) & 1;
    v25 = v17;
    v26 = v18;
    v27 = v19;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
    v5 = sub_100785FD4((uint64_t)&v21);
    sub_1004C41DC(v13, v14, v15, v16, v17, v18, v19);
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_100924148(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *Strong;
  void *v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  const mach_header_64 *v13;
  unint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  __n128 v17;
  uint64_t (*v18)(__int128 *, uint64_t, uint64_t, __n128);
  __n128 v19;
  void (*v20)(__int128 *, _QWORD);
  uint64_t v21;
  __n128 v22;
  CKRecordID v23;
  Swift::String v24;
  id v26[2];
  __int128 v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v2 = v1;
  if (*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) == 0
    || (v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) == 0))
  {
    if (((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x4C0))() & 1) != 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"headLineEnd", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 194, "Should not try to set a line end on a shape in a freehand drawing.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"headLineEnd", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 194, (uint64_t)"Should not try to set a line end on a shape in a freehand drawing.", 66, 2u);

      return;
    }
    v6 = *(_QWORD **)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v7 = *v6;
    v8 = swift_conformsToProtocol2(*v6, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (a1)
    {
      if (v8)
      {
        v9 = a1;
        swift_retain(v6);
        sub_100786178(v9, (uint64_t)&v33);
        v10 = v33;
        *(_OWORD *)v26 = v35;
        v11 = v36;
        v12 = v34 | ((unint64_t)DWORD1(v34) << 32);
        v13 = &_mh_execute_header;
        if (!BYTE12(v34))
          v13 = 0;
        v14 = (unint64_t)v13 | DWORD2(v34);
        v15 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 32))(v32, v7, v8);
        v27 = v10;
        v28 = v12;
        v29 = v14;
        v30 = *(_OWORD *)v26;
        v31 = v11;
        type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
        v16 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
        CRRegister.wrappedValue.setter(&v27, v16, v17);
        v15(v32, 0);

        goto LABEL_13;
      }
      __break(1u);
    }
    else if (v8)
    {
      v18 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t, __n128))(v8 + 32);
      v19 = swift_retain(v6);
      v20 = (void (*)(__int128 *, _QWORD))v18(&v27, v7, v8, v19);
      type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
      v34 = 0u;
      v35 = 0u;
      v36 = 0;
      v33 = 0u;
      v21 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
      CRRegister.wrappedValue.setter(&v33, v21, v22);
      v20(&v27, 0);
LABEL_13:
      swift_release(v6);
      return;
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v23, v24);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_1009244F0()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0;
  if (((*(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x4C0))(v2) & 1) != 0)
    return (uint64_t)v5;
  v6 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v7 = *v6;
  result = swift_conformsToProtocol2(*v6, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v9 = result;
    v10 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
    v11 = swift_retain(v6);
    v10(v7, v9, v11);
    swift_release(v6);
    v12 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    CRRegister.wrappedValue.getter(v12);
    v13 = v21;
    v14 = v22;
    v15 = v23;
    v16 = v24;
    v17 = v25;
    v18 = v26;
    v19 = v27;
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (!v18)
      return 0;
    v21 = v13;
    v22 = v14;
    LOBYTE(v23) = v15 & 1;
    HIDWORD(v23) = HIDWORD(v15);
    LODWORD(v24) = v16;
    BYTE4(v24) = BYTE4(v16) & 1;
    v25 = v17;
    v26 = v18;
    v27 = v19;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
    v5 = sub_100785FD4((uint64_t)&v21);
    sub_1004C41DC(v13, v14, v15, v16, v17, v18, v19);
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_100924698(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *Strong;
  void *v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  const mach_header_64 *v13;
  unint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  __n128 v17;
  uint64_t (*v18)(__int128 *, uint64_t, uint64_t, __n128);
  __n128 v19;
  void (*v20)(__int128 *, _QWORD);
  uint64_t v21;
  __n128 v22;
  CKRecordID v23;
  Swift::String v24;
  id v26[2];
  __int128 v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v2 = v1;
  if (*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) == 0
    || (v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) == 0))
  {
    if (((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x4C0))() & 1) != 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"tailLineEnd", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 222, "Should not try to set a line end on a shape in a freehand drawing.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tailLineEnd", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 222, (uint64_t)"Should not try to set a line end on a shape in a freehand drawing.", 66, 2u);

      return;
    }
    v6 = *(_QWORD **)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v7 = *v6;
    v8 = swift_conformsToProtocol2(*v6, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (a1)
    {
      if (v8)
      {
        v9 = a1;
        swift_retain(v6);
        sub_100786178(v9, (uint64_t)&v33);
        v10 = v33;
        *(_OWORD *)v26 = v35;
        v11 = v36;
        v12 = v34 | ((unint64_t)DWORD1(v34) << 32);
        v13 = &_mh_execute_header;
        if (!BYTE12(v34))
          v13 = 0;
        v14 = (unint64_t)v13 | DWORD2(v34);
        v15 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 32))(v32, v7, v8);
        v27 = v10;
        v28 = v12;
        v29 = v14;
        v30 = *(_OWORD *)v26;
        v31 = v11;
        type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
        v16 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
        CRRegister.wrappedValue.setter(&v27, v16, v17);
        v15(v32, 0);

        goto LABEL_13;
      }
      __break(1u);
    }
    else if (v8)
    {
      v18 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t, __n128))(v8 + 32);
      v19 = swift_retain(v6);
      v20 = (void (*)(__int128 *, _QWORD))v18(&v27, v7, v8, v19);
      type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
      v34 = 0u;
      v35 = 0u;
      v36 = 0;
      v33 = 0u;
      v21 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
      CRRegister.wrappedValue.setter(&v33, v21, v22);
      v20(&v27, 0);
LABEL_13:
      swift_release(v6);
      return;
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v23, v24);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_100924A40()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v0 = swift_allocObject(&unk_101288668, 17, 7);
  *(_BYTE *)(v0 + 16) = 0;
  swift_retain(v0);
  sub_10077454C((uint64_t)sub_10092835C, v0);
  swift_release(v0);
  swift_beginAccess(v0 + 16, v3, 0, 0);
  v1 = *(unsigned __int8 *)(v0 + 16);
  swift_release(v0);
  return v1;
}

void sub_100924AC8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v13;
  void (*v14)(_BYTE *, _QWORD);
  uint64_t v15;
  __n128 v16;
  CKRecordID v17;
  Swift::String v18;
  float v19;
  _BYTE v20[32];

  v2 = v1;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) == 0
    || (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) == 0))
  {
    v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = *v7;
    v9 = swift_conformsToProtocol2(*v7, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (v9)
    {
      v10 = v9;
      v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 32);
      v13 = swift_retain(v7);
      v14 = (void (*)(_BYTE *, _QWORD))v12(v20, v8, v10, v13);
      v11 = a1;
      v19 = v11;
      type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
      v15 = sub_1004B804C(&qword_1013F55A0);
      CRRegister.wrappedValue.setter(&v19, v15, v16);
      v14(v20, 0);
      swift_release(v7);
      return;
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_100924CCC@<X0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, double a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  const mach_header_64 *v21;
  unint64_t v22;
  Swift::String v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  const mach_header_64 *v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  const mach_header_64 *v34;
  unint64_t v35;
  float v36;
  uint64_t result;
  _BYTE v38[232];
  uint64_t v39;
  unsigned __int8 v40;
  unsigned int v41;
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  unsigned __int8 v50;
  unsigned int v51;
  unsigned int v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  unsigned __int8 v57;
  unsigned int v58;
  unsigned int v59;
  char v60;
  uint64_t v61;
  __int128 v62;
  _QWORD v63[3];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  _BYTE v70[232];
  __int128 v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;

  if (a1)
  {
    sub_100D3743C(a1, (uint64_t)&v39);
    v13 = v39;
    v14 = v40;
    v15 = v43;
    v16 = v44;
    v17 = v45;
    v18 = v46;
    v19 = v47;
    v20 = v48;
    v21 = &_mh_execute_header;
    if (!v42)
      v21 = 0;
    v22 = (unint64_t)v21 | v41;
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v22 = 0;
    v19 = 0;
    v15 = 0uLL;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 0uLL;
    v20 = 0uLL;
  }
  v63[0] = v13;
  v63[1] = v14;
  v64 = v15;
  v65 = v16;
  v66 = v17;
  v67 = v18;
  v63[2] = v22;
  v68 = v19;
  v69 = v20;
  if (a2)
  {
    sub_1008BF750(a2, (uint64_t)v70);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v70, v23);
  }
  else
  {
    sub_1004C39E8((uint64_t)v70);
  }
  sub_1004C4938((uint64_t)v70, (uint64_t)v38, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v38, (uint64_t)v70, (uint64_t *)&unk_1013F1530);
  if (a3)
  {
    sub_100786178(a3, (uint64_t)&v49);
    v24 = v49;
    v25 = v54;
    v26 = v55;
    v27 = v50 | ((unint64_t)v51 << 32);
    v28 = &_mh_execute_header;
    if (!v53)
      v28 = 0;
    v29 = (unint64_t)v28 | v52;
  }
  else
  {
    v27 = 0;
    v29 = 0;
    v25 = 0;
    v24 = 0uLL;
    v26 = 0uLL;
  }
  v71 = v24;
  v72 = v27;
  v73 = v29;
  v74 = v25;
  v75 = v26;
  if (a4)
  {
    sub_100786178(a4, (uint64_t)&v56);
    v30 = v56;
    v31 = v61;
    v32 = v62;
    v33 = v57 | ((unint64_t)v58 << 32);
    v34 = &_mh_execute_header;
    if (!v60)
      v34 = 0;
    v35 = (unint64_t)v34 | v59;
  }
  else
  {
    v33 = 0;
    v35 = 0;
    v31 = 0;
    v32 = 0uLL;
    v30 = 0uLL;
  }
  v76 = v30;
  v77 = v33;
  v78 = v35;
  v79 = v31;
  v80 = v32;
  v36 = a5;
  if ((a6 & 1) != 0)
    v36 = 0.0;
  sub_100C085D8((uint64_t)v63, (uint64_t)v70, (uint64_t)&v71, (uint64_t)&v76, a7, v36);
  result = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(a7 + *(int *)(result + 20)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100924F24@<X0>(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, void *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  id v32;
  double v33;
  float v34;
  double v35;
  float v36;
  double v37;
  float v38;
  double v39;
  float v40;
  double v41;
  float v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[8];
  _BYTE v78[136];

  v69 = a5;
  v70 = a3;
  v71 = a4;
  v75 = a6;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = v8;
  __chkstk_darwin(v8);
  v74 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013FA6D8);
  __chkstk_darwin(v12);
  v63 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for CRLShapeItemParentAffinity(0);
  v14 = __chkstk_darwin(v68);
  v73 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v67 = (uint64_t)&v63 - v16;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v63 - v21;
  v72 = (char *)type metadata accessor for CRLBoardItemParentAffinity(0);
  v23 = __chkstk_darwin(v72);
  v76 = (uint64_t)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v63 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v63 - v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v66 = v10;
  v30(v22, a1, v10);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v31(v22, 0, 1, v10);
  v32 = a2;
  objc_msgSend(v32, "position");
  v34 = v33;
  v36 = v35;
  objc_msgSend(v32, "size");
  v38 = v37;
  v40 = v39;
  objc_msgSend(v32, "angle");
  v42 = v41;
  v65 = objc_msgSend(v32, "widthValid");
  v64 = objc_msgSend(v32, "heightValid");
  LOBYTE(a2) = objc_msgSend(v32, "horizontalFlip");
  LOBYTE(v10) = objc_msgSend(v32, "verticalFlip");

  sub_1004CB7BC((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_1013E1A50);
  v31(v27, 1, 1, v66);
  v43 = (uint64_t)v72;
  *(_QWORD *)&v27[*((int *)v72 + 6)] = &_swiftEmptyDictionarySingleton;
  sub_100582338((uint64_t)v20, (uint64_t)v27, (uint64_t *)&unk_1013E1A50);
  v44 = v69;
  v45 = &v27[*(int *)(v43 + 20)];
  *(float *)v45 = v34;
  *((float *)v45 + 1) = v36;
  *((float *)v45 + 2) = v38;
  *((float *)v45 + 3) = v40;
  *((float *)v45 + 4) = v42;
  v45[20] = v65;
  v45[21] = v64;
  v45[22] = (char)a2;
  v45[23] = v10;
  *((_QWORD *)v45 + 3) = &_swiftEmptyDictionarySingleton;
  sub_1005E38D4((uint64_t)v27, (uint64_t)v29);
  sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E1A50);
  v72 = v29;
  v46 = v76;
  sub_1004B8460((uint64_t)v29, v76, type metadata accessor for CRLBoardItemParentAffinity);
  v47 = v67;
  sub_1004B8460(v46, v67, type metadata accessor for CRLBoardItemParentAffinity);
  v48 = (int *)v68;
  v49 = v47 + *(int *)(v68 + 20);
  v50 = v44;
  v51 = v70;
  v52 = v71;
  v53 = v71;
  sub_10092BFC8(v51, v49);
  v54 = v47 + v48[6];
  v55 = type metadata accessor for CRLPKStrokePathData(0);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
  v56(v54, 1, 1, v55);
  v57 = v47 + v48[7];
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = -1;
  *(_QWORD *)(v47 + v48[8]) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = -1;
  if (v52)
  {
    v58 = v63;
    sub_1009A5BB4(v53, v44, v63);
    sub_1004B84A4(v76, type metadata accessor for CRLBoardItemParentAffinity);
    v56(v58, 0, 1, v55);
    sub_100582338(v58, v54, &qword_1013FA6D8);
  }
  else
  {

    sub_1004B84A4(v76, type metadata accessor for CRLBoardItemParentAffinity);
  }
  v59 = v73;
  sub_1004B8460(v47, v73, type metadata accessor for CRLShapeItemParentAffinity);
  sub_1004C3A10(v77);
  v60 = sub_1004C4938((uint64_t)v77, (uint64_t)v78, (uint64_t *)&unk_1013F02D0);
  v61 = (uint64_t)v74;
  UUID.init()(v60);
  sub_100D5EF10(v61, v59, 0, 0, 0, 0xE000000000000000, (uint64_t)v78, v75);
  sub_1004B84A4(v47, type metadata accessor for CRLShapeItemParentAffinity);
  return sub_1004B84A4((uint64_t)v72, type metadata accessor for CRLBoardItemParentAffinity);
}

void *sub_100925454@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  _BYTE v5[608];

  sub_100C8DDCC(v1, 1, v5);
  a1[3] = (uint64_t)&type metadata for CRLShapePresetData;
  a1[4] = sub_10089D2C0();
  v3 = swift_allocObject(&unk_101288690, 616, 7);
  *a1 = v3;
  return memcpy((void *)(v3 + 16), v5, 0x258uLL);
}

id sub_1009257B4(_QWORD *a1, uint64_t a2, SEL *a3, void (*a4)(uint64_t, _QWORD))
{
  uint64_t (*v7)(void);
  uint64_t v8;
  char v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSString v19;

  v7 = *(uint64_t (**)(void))(**(_QWORD **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408);
  v8 = v7();
  if ((v9 & 1) != 0 && v8 == 1)
  {
    v10 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x478);
    v11 = a1;
    v12 = (void *)v10();
    v13 = objc_msgSend(v12, *a3);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

  }
  else
  {
    v16 = ((uint64_t (*)(uint64_t))v7)(v8);
    a4(v16, v17 & 1);
    v15 = v18;
  }
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  return v19;
}

id sub_100925A04(_QWORD *a1, uint64_t a2, SEL *a3)
{
  uint64_t (*v4)(void);
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;

  v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x478);
  v5 = a1;
  v6 = (void *)v4();
  v7 = objc_msgSend(v6, "bezierPath");

  v8 = objc_msgSend(v7, *a3);
  return v8;
}

void *sub_100925CE8(void *result, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  _BYTE v7[24];

  if (result)
  {
    v3 = result;
    v4 = objc_opt_self(CRLShapeLayout);
    result = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (result)
    {
      v5 = (unsigned __int8 *)(a2 + 16);
      v6 = objc_msgSend(result, "isTailEndOnLeft");
      result = (void *)swift_beginAccess(v5, v7, 1, 0);
      *v5 = v6;
    }
  }
  return result;
}

id sub_10092603C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLShapeItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100926070()
{
  return type metadata accessor for CRLShapeItem(0);
}

uint64_t type metadata accessor for CRLShapeItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FA6C8;
  if (!qword_1013FA6C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLShapeItem);
  return result;
}

uint64_t sub_1009260B4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1120);
}

uint64_t sub_1009260E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  double *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  double *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  CKRecordID v38;
  uint64_t v39;
  uint64_t v41;
  _QWORD *v42;

  v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  v10 = sub_1004B804C(&qword_1013FA6E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLShapeItem(0);
  v41 = a1;
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v16 = type metadata accessor for CRLBoardItemBase(0);
    if (!swift_dynamicCastClass(v15, v16))
    {
      swift_unknownObjectRetain(v41);
      sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
      goto LABEL_17;
    }
    v17 = *(_QWORD **)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v18 = *v17;
    v19 = swift_conformsToProtocol2(*v17, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (v19)
    {
      v20 = v19;
      v21 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 16);
      swift_unknownObjectRetain(v41);
      v22 = swift_retain(v17);
      v21(v18, v20, v22);
      swift_release(v17);
      v23 = *(_QWORD **)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v24 = *v23;
      v25 = swift_conformsToProtocol2(*v23, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (v25)
      {
        v26 = v25;
        v27 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 16);
        v28 = swift_retain(v23);
        v27(v24, v26, v28);
        swift_release(v23);
        v29 = sub_100928304();
        CRType.observableDifference(from:)(v6, v4, v29);
        sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v30 = sub_1004B804C(&qword_1013FA6F0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v12, 1, v30) == 1)
        {
          v31 = _swiftEmptyArrayStorage;
          if (!*(_QWORD *)&_swiftEmptyArrayStorage[2])
          {
            swift_unknownObjectRelease(v41);
            swift_bridgeObjectRelease();
            v32 = _swiftEmptyDictionarySingleton;
LABEL_12:
            sub_1004CB800((uint64_t)v12, &qword_1013FA6E0);
            return (uint64_t)v32;
          }
        }
        else
        {
          v31 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v34 = *((_QWORD *)v31 + 2);
          v33 = *((_QWORD *)v31 + 3);
          if (v34 >= v33 >> 1)
            v31 = (double *)sub_100D0EF94((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
          *((_QWORD *)v31 + 2) = v34 + 1;
          v35 = &v31[2 * v34];
          strcpy((char *)v35 + 32, "shapeStyleData");
          *((_BYTE *)v35 + 47) = -18;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v42 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v31, 5, isUniquelyReferenced_nonNull_native);
        v32 = v42;
        swift_unknownObjectRelease(v41);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 325, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 325, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
LABEL_17:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v38, *(Swift::String *)&v39);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_10092658C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  _QWORD *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 *v66;
  char v67;
  void (*v68)(__n128);
  __n128 v69;
  __n128 v70;
  uint64_t v71;
  _QWORD *v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  void (*v82)(void);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, __n128);
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  __int128 v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t, __n128);
  __n128 v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  int v153;
  char v154;
  _QWORD *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(uint64_t, uint64_t, __n128);
  __n128 v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t, __n128);
  __n128 v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t, uint64_t, __n128);
  __n128 v203;
  uint64_t v204;
  __int128 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void (*v226)(uint64_t, uint64_t, __n128);
  __n128 v227;
  uint64_t v228;
  __int128 v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  id v236;
  uint64_t v237;
  uint64_t v238;
  float v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(uint64_t, uint64_t, __n128);
  __n128 v245;
  uint64_t v246;
  float v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void (*v252)(uint64_t, uint64_t, __n128);
  __n128 v253;
  float v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _BYTE v260[4];
  int v261;
  _BYTE *v262;
  __int128 v263;
  uint64_t v264;
  uint64_t *v265;
  _BYTE *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _BYTE *v270;
  _BYTE *v271;
  _BYTE *v272;
  _BYTE *v273;
  _BYTE *v274;
  _BYTE *v275;
  _BYTE *v276;
  _BYTE *v277;
  _BYTE *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _BYTE *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _BYTE *v287;
  __int128 v288;
  uint64_t v289;
  uint64_t v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  _QWORD *v295;
  uint64_t v296;
  _BYTE *v297;
  uint64_t v298;
  uint64_t v299;
  _BYTE *v300;
  uint64_t v301;
  _BYTE *v302;
  uint64_t v303;
  _BYTE *v304;
  unsigned __int8 *v305;
  uint64_t v306;
  _QWORD *v307;
  _OWORD v308[14];
  uint64_t v309;
  _OWORD v310[14];
  uint64_t v311;
  __int128 v312;
  _BYTE v313[24];
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _BYTE *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  __int128 v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  _QWORD v337[29];
  _QWORD v338[29];
  uint64_t v339;
  char v340;
  __int128 v341;
  char v342;
  int v343;
  int v344;
  char v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  __int128 v349;
  char v350;
  uint64_t v351;
  char v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  __int128 v356;
  char v357;
  int v358;
  int v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  __int128 v364;
  char v365;
  int v366;
  int v367;
  char v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  __int128 v372;
  char v373;
  int v374;
  int v375;
  char v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  __int128 v380;
  char v381;
  int v382;
  int v383;
  char v384;
  _BYTE *v385;
  uint64_t v386;
  uint64_t v387;
  _OWORD v388[14];
  uint64_t v389;
  _OWORD v390[14];
  uint64_t v391;
  int v392;
  char v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  _BYTE *v401;
  uint64_t v402;
  uint64_t v403;
  int v404;
  char v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;

  v306 = a7;
  v307 = a5;
  v295 = a6;
  v296 = a1;
  v267 = a4;
  v301 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v301);
  v10 = &v260[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v266 = &v260[-v12];
  __chkstk_darwin(v13);
  v276 = &v260[-v14];
  __chkstk_darwin(v15);
  v277 = &v260[-v16];
  __chkstk_darwin(v17);
  v278 = &v260[-v18];
  __chkstk_darwin(v19);
  v287 = &v260[-v20];
  __chkstk_darwin(v21);
  v23 = &v260[-v22];
  __chkstk_darwin(v24);
  v26 = &v260[-v25];
  __chkstk_darwin(v27);
  v29 = &v260[-v28];
  __chkstk_darwin(v30);
  v32 = &v260[-v31];
  __chkstk_darwin(v33);
  v35 = &v260[-v34];
  __chkstk_darwin(v36);
  v38 = &v260[-v37];
  v39 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v39);
  v305 = &v260[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v41);
  v304 = &v260[-v42];
  v303 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v303);
  v302 = &v260[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v44);
  v300 = &v260[-v45];
  v299 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v299);
  v298 = (uint64_t)&v260[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v47);
  v297 = &v260[-v48];
  v279 = a2;
  if (a3 == 5)
  {
    v274 = v35;
    v275 = v32;
    v272 = v29;
    v273 = v26;
    v271 = v23;
    v74 = type metadata accessor for CRLShapeItem(0);
    v75 = swift_dynamicCastClass(v267, v74);
    if (!v75)
      return;
    v76 = v38;
    v305 = *(unsigned __int8 **)(v75 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v304 = (_BYTE *)swift_conformsToProtocol2(*(_QWORD *)v305, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (!v304)
      goto LABEL_101;
    v77 = *(_QWORD *)(a2 + 16);
    if (!v77)
      return;
    v262 = v10;
    v300 = (_BYTE *)(v296 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    v265 = &v336;
    swift_unknownObjectRetain(v267);
    swift_bridgeObjectRetain(a2);
    swift_retain(v305);
    v78 = (_QWORD *)(a2 + 40);
    v263 = xmmword_100EF5E40;
    v270 = v76;
    while (1)
    {
      v295 = v78;
      v296 = v77;
      v80 = *(v78 - 1);
      v79 = *v78;
      v81 = v80 == 0x7974536570616873 && v79 == 0xEE0061746144656CLL;
      if (v81
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7974536570616873, 0xEE0061746144656CLL, *(v78 - 1), *v78, 0) & 1) != 0)
      {
        break;
      }
      v124 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v125 = swift_allocObject(v124, 72, 7);
      *(_OWORD *)(v125 + 16) = v263;
      *(_QWORD *)(v125 + 56) = &type metadata for String;
      *(_QWORD *)(v125 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v125 + 32) = v80;
      *(_QWORD *)(v125 + 40) = v79;
      swift_bridgeObjectRetain(v79);
      swift_setDeallocating(v125);
      v126 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v125 + 32, 1, v126);
      swift_deallocClassInstance(v125, 32, 7);
LABEL_22:
      v78 = v295 + 2;
      v77 = v296 - 1;
      if (v296 == 1)
      {
        swift_unknownObjectRelease(v267);
        swift_release(v305);
        swift_bridgeObjectRelease();
        return;
      }
    }
    v82 = (void (*)(void))*((_QWORD *)v304 + 2);
    v302 = *(_BYTE **)v305;
    v303 = (uint64_t)v82;
    v82();
    v83 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    CRRegister.wrappedValue.getter(v83);
    v292 = v312;
    v294 = *(_OWORD *)v313;
    v84 = v316;
    v290 = v314;
    *(_QWORD *)&v291 = v317;
    v298 = v318;
    v299 = *(_QWORD *)&v313[16];
    v297 = v319;
    *(_QWORD *)&v293 = v315;
    *((_QWORD *)&v293 + 1) = v320;
    v85 = (uint64_t)v76;
    v86 = v321;
    *((_QWORD *)&v291 + 1) = v322;
    sub_1004B84A4(v85, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    v306 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v87 = *(_QWORD **)((char *)v307 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v88 = *v87;
    v89 = swift_conformsToProtocol2(*v87, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (!v89)
      goto LABEL_92;
    v90 = v89;
    v91 = *(void (**)(uint64_t, uint64_t, __n128))(v89 + 16);
    v92 = swift_retain(v87);
    v93 = (uint64_t)v274;
    v91(v88, v90, v92);
    swift_release(v87);
    CRRegister.wrappedValue.getter(v83);
    v288 = v312;
    v95 = *(_QWORD *)&v313[8];
    v94 = *(_QWORD *)v313;
    v289 = *(_QWORD *)&v313[16];
    v285 = v314;
    v286 = v315;
    v96 = v316;
    v283 = v318;
    v284 = v317;
    v281 = v320;
    v282 = v319;
    v97 = v321;
    v280 = v322;
    sub_1004B84A4(v93, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    v98 = v86;
    v99 = v84;
    if (v86)
    {
      v100 = v299;
      v101 = *((_QWORD *)&v294 + 1);
      v102 = v294;
      v104 = *((_QWORD *)&v292 + 1);
      v103 = v292;
      v105 = v297;
      if (v97)
      {
        v268 = v96;
        v269 = v99;
        *(_QWORD *)&v312 = v292;
        BYTE8(v312) = BYTE8(v292) & 1;
        v106 = v288;
        v339 = v288;
        v340 = BYTE8(v288) & 1;
        v107 = sub_1007C8324();
        swift_bridgeObjectRetain(v293);
        swift_bridgeObjectRetain(v298);
        v108 = *((_QWORD *)&v293 + 1);
        swift_bridgeObjectRetain(*((_QWORD *)&v293 + 1));
        swift_bridgeObjectRetain(v86);
        v109 = *((_QWORD *)&v291 + 1);
        swift_bridgeObjectRetain(*((_QWORD *)&v291 + 1));
        if ((static CRExtensible.== infix(_:_:)(&v312, &v339, &type metadata for CRLFillData.FillType, v107, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)
        {
          v392 = v294;
          v393 = BYTE4(v294) & 1;
          v394 = *((_QWORD *)&v294 + 1);
          v395 = v299;
          v396 = v290;
          v397 = v293;
          v398 = v269;
          v399 = v291;
          v400 = v298;
          v401 = v297;
          v402 = v108;
          v403 = v86;
          v404 = v94;
          v405 = BYTE4(v94) & 1;
          v264 = v95;
          v406 = v95;
          v407 = v289;
          v111 = v285;
          v110 = v286;
          v408 = v285;
          v409 = v286;
          v113 = v283;
          v112 = v284;
          v410 = v268;
          v411 = v284;
          v115 = v281;
          v114 = (uint64_t)v282;
          v412 = v283;
          v413 = (uint64_t)v282;
          v414 = v281;
          v415 = v97;
          if ((sub_1006C5A00((uint64_t)&v392, (uint64_t)&v404) & 1) != 0)
          {
            v116 = *((_QWORD *)&v291 + 1);
            v117 = v280;
            v261 = sub_100C9E04C(*((uint64_t *)&v291 + 1), v280);
            sub_1004C4174(v288, *((uint64_t *)&v288 + 1), v94, v264, v289, v285, v286, v268, v112, v113, v114, v115, v97, v117);
            v258 = v116;
            v118 = v291;
            v119 = v292;
            v120 = v294;
            v121 = v290;
            v122 = v293;
            v123 = v269;
            sub_1004C4174(v292, *((uint64_t *)&v292 + 1), v294, *((uint64_t *)&v294 + 1), v299, v290, v293, v269, v291, v298, (uint64_t)v297, *((uint64_t *)&v293 + 1), v98, v258);
            sub_1004C4174(v119, *((uint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v299, v121, v122, v123, v118, v298, (uint64_t)v297, *((uint64_t *)&v293 + 1), v98, *((uint64_t *)&v291 + 1));
            if ((v261 & 1) != 0)
              goto LABEL_44;
          }
          else
          {
            sub_1004C4174(v288, *((uint64_t *)&v288 + 1), v94, v264, v289, v111, v110, v268, v112, v113, v114, v115, v97, v280);
            v134 = *((_QWORD *)&v291 + 1);
            v135 = v292;
            v136 = v294;
            v137 = v290;
            v138 = v293;
            v139 = v269;
            sub_1004C4174(v292, *((uint64_t *)&v292 + 1), v294, *((uint64_t *)&v294 + 1), v299, v290, v293, v269, v291, v298, (uint64_t)v297, *((uint64_t *)&v293 + 1), v98, *((uint64_t *)&v291 + 1));
            sub_1004C4174(v135, *((uint64_t *)&v135 + 1), v136, *((uint64_t *)&v136 + 1), v299, v137, v138, v139, v291, v298, (uint64_t)v297, *((uint64_t *)&v293 + 1), v98, v134);
          }
        }
        else
        {
          sub_1004C4174(v106, *((uint64_t *)&v106 + 1), v94, v95, v289, v285, v286, v268, v284, v283, (uint64_t)v282, v281, v97, v280);
          v257 = v86;
          v259 = v109;
          v256 = v108;
          v289 = v86;
          v127 = v297;
          v128 = v291;
          v129 = v292;
          v130 = v294;
          v131 = v290;
          v132 = v293;
          v133 = v269;
          sub_1004C4174(v292, *((uint64_t *)&v292 + 1), v294, *((uint64_t *)&v294 + 1), v299, v290, v293, v269, v291, v298, (uint64_t)v297, v256, v257, v259);
          sub_1004C4174(v129, *((uint64_t *)&v129 + 1), v130, *((uint64_t *)&v130 + 1), v299, v131, v132, v133, v128, v298, (uint64_t)v127, *((uint64_t *)&v293 + 1), v289, *((uint64_t *)&v291 + 1));
        }
LABEL_40:
        v140 = sub_100923670();
        if (v140)
        {
          v141 = v140;
          *(_QWORD *)&v313[8] = sub_1004B8930(0, (unint64_t *)&qword_1013F3910, off_101229898);
          *(_QWORD *)&v312 = v141;
        }
        else
        {
          v312 = 0u;
          *(_OWORD *)v313 = 0u;
        }
        sub_1004CB7BC((uint64_t)&v312, (uint64_t)&v339, &qword_1013E0230);
        swift_beginAccess(v300, v338, 33, 0);
        sub_10083DAD8((uint64_t)&v339, 0x14uLL);
        swift_endAccess(v338);
        sub_1004CB800((uint64_t)&v312, &qword_1013E0230);
LABEL_44:
        v142 = (uint64_t)v275;
        ((void (*)(_BYTE *, _BYTE *))v303)(v302, v304);
        v143 = sub_1004B804C(&qword_1013E0A88);
        CRRegister.wrappedValue.getter(v143);
        sub_1004C4938((uint64_t)&v312, (uint64_t)v337, (uint64_t *)&unk_1013F1530);
        sub_1004B84A4(v142, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v144 = *(_QWORD **)((char *)v307 + v306);
        v145 = *v144;
        v146 = swift_conformsToProtocol2(*v144, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v146)
          goto LABEL_93;
        v147 = v146;
        v148 = *(void (**)(uint64_t, uint64_t, __n128))(v146 + 16);
        v149 = swift_retain(v144);
        v150 = (uint64_t)v272;
        v148(v145, v147, v149);
        swift_release(v144);
        CRRegister.wrappedValue.getter(v143);
        sub_1004C4938((uint64_t)&v312, (uint64_t)v338, (uint64_t *)&unk_1013F1530);
        sub_1004B84A4(v150, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004C4938((uint64_t)v337, (uint64_t)&v339, (uint64_t *)&unk_1013F1530);
        if (sub_1004F276C((uint64_t)&v339) == 1)
        {
          sub_1004C4938((uint64_t)v338, (uint64_t)&v312, (uint64_t *)&unk_1013F1530);
          v151 = sub_1004F276C((uint64_t)&v312);
          v152 = (uint64_t)v273;
          if (v151 == 1)
            goto LABEL_55;
        }
        else
        {
          sub_1004C4938((uint64_t)v338, (uint64_t)&v312, (uint64_t *)&unk_1013F1530);
          v153 = sub_1004F276C((uint64_t)&v312);
          v152 = (uint64_t)v273;
          if (v153 != 1)
          {
            sub_1004C4938((uint64_t)v338, (uint64_t)v308, (uint64_t *)&unk_1013F1530);
            v390[12] = v308[12];
            v390[13] = v308[13];
            v391 = v309;
            v390[8] = v308[8];
            v390[9] = v308[9];
            v390[11] = v308[11];
            v390[10] = v308[10];
            v390[4] = v308[4];
            v390[5] = v308[5];
            v390[7] = v308[7];
            v390[6] = v308[6];
            v390[0] = v308[0];
            v390[1] = v308[1];
            v390[3] = v308[3];
            v390[2] = v308[2];
            sub_1004C4938((uint64_t)v337, (uint64_t)v310, (uint64_t *)&unk_1013F1530);
            v388[12] = v310[12];
            v388[13] = v310[13];
            v389 = v311;
            v388[8] = v310[8];
            v388[9] = v310[9];
            v388[11] = v310[11];
            v388[10] = v310[10];
            v388[4] = v310[4];
            v388[5] = v310[5];
            v388[7] = v310[7];
            v388[6] = v310[6];
            v388[0] = v310[0];
            v388[1] = v310[1];
            v388[3] = v310[3];
            v388[2] = v310[2];
            sub_1008D3994(v337, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
            v154 = sub_1008BE12C((uint64_t)v388, (uint64_t)v390);
            sub_1008D3994(v338, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
            sub_1008D3994(v337, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
            sub_1008D3994(v337, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
            if ((v154 & 1) != 0)
              goto LABEL_55;
            goto LABEL_51;
          }
        }
        sub_1004C4938((uint64_t)v337, (uint64_t)&v312, (uint64_t *)&unk_1013F1530);
        sub_1004C4938((uint64_t)v338, (uint64_t)v265, (uint64_t *)&unk_1013F1530);
        sub_1004F2784((uint64_t)&v312);
LABEL_51:
        v155 = v307;
        v156 = *(void **)((char *)v307 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
        *(_QWORD *)((char *)v307 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke) = 0;

        v157 = (*(uint64_t (**)(void))((swift_isaMask & *v155) + 0x420))();
        if (v157)
        {
          v158 = v157;
          *(_QWORD *)&v313[8] = sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
          *(_QWORD *)&v312 = v158;
        }
        else
        {
          v312 = 0u;
          *(_OWORD *)v313 = 0u;
        }
        sub_1004CB7BC((uint64_t)&v312, (uint64_t)v310, &qword_1013E0230);
        swift_beginAccess(v300, v308, 33, 0);
        sub_10083DAD8((uint64_t)v310, 0xFuLL);
        swift_endAccess(v308);
        sub_1004CB800((uint64_t)&v312, &qword_1013E0230);
LABEL_55:
        ((void (*)(_BYTE *, _BYTE *))v303)(v302, v304);
        v159 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
        CRRegister.wrappedValue.getter(v159);
        v292 = v312;
        v293 = *(_OWORD *)&v313[8];
        v298 = *(_QWORD *)v313;
        v160 = v314;
        *(_QWORD *)&v294 = v315;
        sub_1004B84A4(v152, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v161 = *(_QWORD **)((char *)v307 + v306);
        v162 = *v161;
        v163 = swift_conformsToProtocol2(*v161, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v163)
          goto LABEL_94;
        v164 = v163;
        v165 = *(void (**)(uint64_t, uint64_t, __n128))(v163 + 16);
        v166 = swift_retain(v161);
        v167 = (uint64_t)v271;
        v165(v162, v164, v166);
        swift_release(v161);
        v299 = v159;
        CRRegister.wrappedValue.getter(v159);
        v168 = v312;
        *((_QWORD *)&v294 + 1) = *(_QWORD *)&v313[8];
        v169 = *(_QWORD *)v313;
        v297 = *(_BYTE **)&v313[16];
        v170 = v314;
        v171 = v315;
        sub_1004B84A4(v167, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v172 = v160;
        if (v160)
        {
          v173 = (uint64_t)v287;
          if (v170)
          {
            v291 = v168;
            v380 = v168;
            v381 = v169 & 1;
            v382 = HIDWORD(v169);
            v383 = DWORD2(v294);
            v384 = BYTE12(v294) & 1;
            v385 = v297;
            v386 = v170;
            v387 = v171;
            v174 = v292;
            v372 = v292;
            v290 = v171;
            v175 = *((_QWORD *)&v292 + 1);
            v373 = v298 & 1;
            v374 = HIDWORD(v298);
            *((_QWORD *)&v288 + 1) = v169;
            v176 = v293;
            v375 = v293;
            v376 = BYTE4(v293) & 1;
            v377 = *((_QWORD *)&v293 + 1);
            v378 = v172;
            v177 = v294;
            v379 = v294;
            v178 = v172;
            sub_1004C48C4(v292, *((uint64_t *)&v292 + 1), v298, v293, *((uint64_t *)&v293 + 1), v172, v294);
            LODWORD(v289) = sub_100785E54((uint64_t)&v372, (uint64_t)&v380);
            sub_1004C41DC(v291, *((uint64_t *)&v291 + 1), *((uint64_t *)&v288 + 1), *((uint64_t *)&v294 + 1), (uint64_t)v297, v170, v290);
            v179 = v298;
            sub_1004C41DC(v174, v175, v298, v176, *((uint64_t *)&v176 + 1), v178, v177);
            v180 = sub_1004C41DC(v174, v175, v179, v176, *((uint64_t *)&v176 + 1), v178, v177);
            if ((v289 & 1) != 0)
              goto LABEL_68;
            goto LABEL_62;
          }
        }
        else
        {
          v173 = (uint64_t)v287;
          if (!v170)
            goto LABEL_68;
        }
        sub_1004C41DC(v292, *((uint64_t *)&v292 + 1), v298, v293, *((uint64_t *)&v293 + 1), v160, v294);
        v180 = sub_1004C41DC(v168, *((uint64_t *)&v168 + 1), v169, *((uint64_t *)&v294 + 1), (uint64_t)v297, v170, v171);
LABEL_62:
        if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v307) + 0x4C0))(v180) & 1) != 0)
          goto LABEL_66;
        v181 = *(_QWORD **)((char *)v307 + v306);
        v182 = *v181;
        v183 = swift_conformsToProtocol2(*v181, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v183)
          goto LABEL_98;
        v184 = v183;
        v185 = *(void (**)(uint64_t, uint64_t, __n128))(v183 + 16);
        v186 = swift_retain(v181);
        v187 = (uint64_t)v262;
        v185(v182, v184, v186);
        swift_release(v181);
        CRRegister.wrappedValue.getter(v299);
        v188 = v312;
        v190 = *(_QWORD *)&v313[8];
        v189 = *(_QWORD *)v313;
        v191 = *(_QWORD *)&v313[16];
        v192 = v314;
        v193 = v315;
        sub_1004B84A4(v187, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        if (!v192)
        {
LABEL_66:
          v312 = 0u;
          *(_OWORD *)v313 = 0u;
        }
        else
        {
          v364 = v188;
          v365 = v189 & 1;
          v366 = HIDWORD(v189);
          v367 = v190;
          v368 = BYTE4(v190) & 1;
          v369 = v191;
          v370 = v192;
          v371 = v193;
          v194 = sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
          v195 = sub_100785FD4((uint64_t)&v364);
          sub_1004C41DC(v188, *((uint64_t *)&v188 + 1), v189, v190, v191, v192, v193);
          *(_QWORD *)&v313[8] = v194;
          *(_QWORD *)&v312 = v195;
        }
        sub_1004CB7BC((uint64_t)&v312, (uint64_t)v310, &qword_1013E0230);
        swift_beginAccess(v300, v308, 33, 0);
        sub_10083DAD8((uint64_t)v310, 0x15uLL);
        swift_endAccess(v308);
        sub_1004CB800((uint64_t)&v312, &qword_1013E0230);
        v173 = (uint64_t)v287;
LABEL_68:
        ((void (*)(_BYTE *, _BYTE *))v303)(v302, v304);
        v196 = v299;
        CRRegister.wrappedValue.getter(v299);
        v292 = v312;
        v293 = *(_OWORD *)v313;
        v197 = v314;
        *(_QWORD *)&v294 = *(_QWORD *)&v313[16];
        *((_QWORD *)&v294 + 1) = v315;
        sub_1004B84A4(v173, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v198 = *(_QWORD **)((char *)v307 + v306);
        v199 = *v198;
        v200 = swift_conformsToProtocol2(*v198, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v200)
          goto LABEL_95;
        v201 = v200;
        v202 = *(void (**)(uint64_t, uint64_t, __n128))(v200 + 16);
        v203 = swift_retain(v198);
        v204 = (uint64_t)v278;
        v202(v199, v201, v203);
        swift_release(v198);
        CRRegister.wrappedValue.getter(v196);
        v205 = v312;
        v297 = *(_BYTE **)&v313[8];
        v206 = *(_QWORD *)v313;
        v298 = *(_QWORD *)&v313[16];
        v207 = v314;
        v208 = v315;
        sub_1004B84A4(v204, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v209 = v197;
        if (v197)
        {
          v210 = v207;
          if (v207)
          {
            v211 = v293;
            *(_QWORD *)&v291 = *((_QWORD *)&v205 + 1);
            *((_QWORD *)&v291 + 1) = v205;
            v356 = v205;
            v212 = v206;
            v357 = v206 & 1;
            v358 = HIDWORD(v206);
            v359 = (int)v297;
            v360 = BYTE4(v297) & 1;
            v361 = v298;
            v362 = v207;
            v363 = v208;
            v213 = v292;
            v349 = v292;
            v290 = v208;
            v214 = *((_QWORD *)&v292 + 1);
            v350 = v293 & 1;
            v351 = *(_QWORD *)((char *)&v293 + 4);
            v216 = *((_QWORD *)&v293 + 1);
            v215 = v294;
            v352 = BYTE12(v293) & 1;
            v353 = v294;
            v354 = v209;
            v217 = *((_QWORD *)&v294 + 1);
            v355 = *((_QWORD *)&v294 + 1);
            v218 = v210;
            v219 = v209;
            sub_1004C48C4(v292, *((uint64_t *)&v292 + 1), v293, *((uint64_t *)&v293 + 1), v294, v209, *((uint64_t *)&v294 + 1));
            LODWORD(v289) = sub_100785E54((uint64_t)&v349, (uint64_t)&v356);
            sub_1004C41DC(*((uint64_t *)&v291 + 1), v291, v212, (uint64_t)v297, v298, v218, v290);
            sub_1004C41DC(v213, v214, v211, v216, v215, v219, v217);
            v220 = v215;
            v196 = v299;
            v221 = sub_1004C41DC(v213, v214, v211, v216, v220, v219, v217);
            if ((v289 & 1) != 0)
              goto LABEL_81;
LABEL_75:
            if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v307) + 0x4C0))(v221) & 1) != 0)
              goto LABEL_79;
            v222 = *(_QWORD **)((char *)v307 + v306);
            v223 = *v222;
            v224 = swift_conformsToProtocol2(*v222, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
            if (!v224)
              goto LABEL_99;
            v225 = v224;
            v226 = *(void (**)(uint64_t, uint64_t, __n128))(v224 + 16);
            v227 = swift_retain(v222);
            v228 = (uint64_t)v266;
            v226(v223, v225, v227);
            swift_release(v222);
            CRRegister.wrappedValue.getter(v196);
            v229 = v312;
            v231 = *(_QWORD *)&v313[8];
            v230 = *(_QWORD *)v313;
            v232 = *(_QWORD *)&v313[16];
            v233 = v314;
            v234 = v315;
            sub_1004B84A4(v228, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            if (!v233)
            {
LABEL_79:
              v312 = 0u;
              *(_OWORD *)v313 = 0u;
            }
            else
            {
              v341 = v229;
              v342 = v230 & 1;
              v343 = HIDWORD(v230);
              v344 = v231;
              v345 = BYTE4(v231) & 1;
              v346 = v232;
              v347 = v233;
              v348 = v234;
              v235 = sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
              v236 = sub_100785FD4((uint64_t)&v341);
              sub_1004C41DC(v229, *((uint64_t *)&v229 + 1), v230, v231, v232, v233, v234);
              *(_QWORD *)&v313[8] = v235;
              *(_QWORD *)&v312 = v236;
            }
            sub_1004CB7BC((uint64_t)&v312, (uint64_t)v310, &qword_1013E0230);
            swift_beginAccess(v300, v308, 33, 0);
            sub_10083DAD8((uint64_t)v310, 0x16uLL);
            swift_endAccess(v308);
            sub_1004CB800((uint64_t)&v312, &qword_1013E0230);
            goto LABEL_81;
          }
        }
        else
        {
          v210 = v207;
          if (!v207)
          {
LABEL_81:
            v237 = (uint64_t)v277;
            ((void (*)(_BYTE *, _BYTE *))v303)(v302, v304);
            v238 = sub_1004B804C(&qword_1013F55A0);
            CRRegister.wrappedValue.getter(v238);
            v239 = *(float *)&v312;
            sub_1004B84A4(v237, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            v240 = *(_QWORD **)((char *)v307 + v306);
            v241 = *v240;
            v242 = swift_conformsToProtocol2(*v240, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
            if (!v242)
              goto LABEL_96;
            v243 = v242;
            v244 = *(void (**)(uint64_t, uint64_t, __n128))(v242 + 16);
            v245 = swift_retain(v240);
            v246 = (uint64_t)v276;
            v244(v241, v243, v245);
            swift_release(v240);
            CRRegister.wrappedValue.getter(v238);
            v247 = *(float *)&v312;
            sub_1004B84A4(v246, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            if (v239 != v247)
            {
              v248 = *(_QWORD **)((char *)v307 + v306);
              v249 = *v248;
              v250 = swift_conformsToProtocol2(*v248, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
              if (!v250)
                goto LABEL_97;
              v251 = v250;
              v252 = *(void (**)(uint64_t, uint64_t, __n128))(v250 + 16);
              v253 = swift_retain(v248);
              v252(v249, v251, v253);
              swift_release(v248);
              CRRegister.wrappedValue.getter(v238);
              v254 = *(float *)&v312;
              sub_1004B84A4(v237, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              *(_QWORD *)&v313[8] = &type metadata for CGFloat;
              *(double *)&v312 = v254;
              sub_1004CB7BC((uint64_t)&v312, (uint64_t)v310, &qword_1013E0230);
              swift_beginAccess(v300, v308, 33, 0);
              sub_10083DAD8((uint64_t)v310, 0x17uLL);
              swift_endAccess(v308);
              sub_1004CB800((uint64_t)&v312, &qword_1013E0230);
            }
            v76 = v270;
            goto LABEL_22;
          }
        }
        sub_1004C41DC(v292, *((uint64_t *)&v292 + 1), v293, *((uint64_t *)&v293 + 1), v294, v197, *((uint64_t *)&v294 + 1));
        v221 = sub_1004C41DC(v205, *((uint64_t *)&v205 + 1), v206, (uint64_t)v297, v298, v210, v208);
        goto LABEL_75;
      }
    }
    else
    {
      v100 = v299;
      v101 = *((_QWORD *)&v294 + 1);
      v102 = v294;
      v104 = *((_QWORD *)&v292 + 1);
      v103 = v292;
      v105 = v297;
      if (!v97)
        goto LABEL_44;
    }
    *(_QWORD *)&v312 = v103;
    *((_QWORD *)&v312 + 1) = v104;
    *(_QWORD *)v313 = v102;
    *(_QWORD *)&v313[8] = v101;
    *(_QWORD *)&v313[16] = v100;
    v314 = v290;
    v315 = v293;
    v316 = v99;
    v317 = v291;
    v318 = v298;
    v319 = v105;
    v320 = *((_QWORD *)&v293 + 1);
    v321 = v86;
    v322 = *((_QWORD *)&v291 + 1);
    v323 = v288;
    v324 = v94;
    v325 = v95;
    v326 = v289;
    v327 = v285;
    v328 = v286;
    v329 = v96;
    v330 = v284;
    v331 = v283;
    v332 = (uint64_t)v282;
    v333 = v281;
    v334 = v97;
    v335 = v280;
    sub_1007C825C((uint64_t)&v312);
    goto LABEL_40;
  }
  if (a3)
  {
    sub_10077C7C0(v296, a2, a3, v267, (uint64_t)v307);
    return;
  }
  v49 = type metadata accessor for CRLShapeItem(0);
  v50 = swift_dynamicCastClass(v267, v49);
  if (v50)
  {
    *((_QWORD *)&v294 + 1) = v50;
    v51 = *(_QWORD **)(v50 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (!swift_conformsToProtocol2(*v51, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
      goto LABEL_100;
    v52 = *(_QWORD *)(a2 + 16);
    if (!v52)
    {
      v255 = v267;
      swift_unknownObjectRetain(v267);
      swift_retain(v51);
LABEL_89:
      swift_unknownObjectRetain(v255);
      sub_100B0CAF8(v296, a2, 0, *((uint64_t *)&v294 + 1), (uint64_t)v307);
      swift_release(v51);
      swift_unknownObjectRelease_n(v255, 2);
      return;
    }
    v295 = (_QWORD *)(v296 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    swift_unknownObjectRetain(v267);
    swift_retain(v51);
    swift_bridgeObjectRetain(a2);
    v53 = (uint64_t *)(a2 + 40);
    v301 = (uint64_t)v51;
    v54 = v298;
    v55 = v304;
    while (1)
    {
      v56 = *(v53 - 1);
      v57 = *v53;
      v58 = v56 == 0x6641746E65726170 && v57 == 0xEE007974696E6966;
      if (v58
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6641746E65726170, 0xEE007974696E6966, v56, v57, 0) & 1) != 0)
      {
        v306 = v52;
        v59 = *(_QWORD **)((char *)v307 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (!swift_conformsToProtocol2(*v59, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
        {
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
          return;
        }
        v60 = v297;
        (*(void (**)(void))(*v51 + 640))();
        swift_retain(v59);
        v61 = sub_1004B804C((uint64_t *)&unk_101406B00);
        v62 = (uint64_t)v300;
        CRRegister.wrappedValue.getter(v61);
        sub_1004CB800((uint64_t)v60, &qword_1013F5530);
        v63 = v303;
        sub_1004B8460(v62 + *(int *)(v303 + 20), (uint64_t)v55, type metadata accessor for CRLPathSourceData);
        v64 = sub_1004B84A4(v62, type metadata accessor for CRLShapeItemParentAffinity);
        (*(void (**)(uint64_t))(*v59 + 640))(v64);
        v65 = (uint64_t)v302;
        CRRegister.wrappedValue.getter(v61);
        sub_1004CB800(v54, &qword_1013F5530);
        v66 = v305;
        sub_1004B8460(v65 + *(int *)(v63 + 20), (uint64_t)v305, type metadata accessor for CRLPathSourceData);
        sub_1004B84A4(v65, type metadata accessor for CRLShapeItemParentAffinity);
        v67 = sub_1009345F4(v55, v66);
        sub_1004B84A4((uint64_t)v66, type metadata accessor for CRLPathSourceData);
        sub_1004B84A4((uint64_t)v55, type metadata accessor for CRLPathSourceData);
        if ((v67 & 1) == 0)
        {
          v68 = *(void (**)(__n128))(*v59 + 728);
          v69 = swift_retain(v59);
          v68(v69);
          v70 = swift_release(v59);
          v71 = (*(uint64_t (**)(__n128))((swift_isaMask & *v307) + 0x478))(v70);
          *(_QWORD *)&v313[8] = sub_1004B8930(0, (unint64_t *)&qword_1013EC648, off_101229970);
          *(_QWORD *)&v312 = v71;
          v72 = v295;
          swift_beginAccess(v295, v388, 33, 0);
          sub_1004CB7BC((uint64_t)&v312, (uint64_t)v390, &qword_1013E0230);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v72);
          v339 = *v72;
          *v72 = 0x8000000000000000;
          sub_1008258FC((uint64_t)v390, 19, isUniquelyReferenced_nonNull_native);
          *v72 = v339;
          swift_bridgeObjectRelease();
          swift_endAccess(v388);
          sub_1004CB800((uint64_t)&v312, &qword_1013E0230);
        }
        swift_release(v59);
        v51 = (_QWORD *)v301;
        v52 = v306;
      }
      v53 += 2;
      if (!--v52)
      {
        a2 = v279;
        swift_bridgeObjectRelease();
        v255 = v267;
        goto LABEL_89;
      }
    }
  }
}

unint64_t sub_100928304()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FA6E8;
  if (!qword_1013FA6E8)
  {
    v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(255);
    result = swift_getWitnessTable(&unk_100F2E580, v1);
    atomic_store(result, (unint64_t *)&qword_1013FA6E8);
  }
  return result;
}

uint64_t sub_10092834C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void *sub_10092835C(void *a1)
{
  uint64_t v1;

  return sub_100925CE8(a1, v1);
}

uint64_t sub_100928364()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[14])
  {
    swift_bridgeObjectRelease(v0[8]);
    swift_bridgeObjectRelease(v0[11]);
    swift_bridgeObjectRelease(v0[13]);
    swift_bridgeObjectRelease(v0[14]);
    v1 = v0[20];
    if (v1)
    {
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(v0[22]);
    }
    swift_bridgeObjectRelease(v0[25]);
    v2 = v0[27];
    if (v2)
    {
      swift_bridgeObjectRelease(v2);
      swift_bridgeObjectRelease(v0[29]);
    }
    swift_bridgeObjectRelease(v0[30]);
  }
  if (v0[43])
  {
    swift_bridgeObjectRelease(v0[37]);
    swift_bridgeObjectRelease(v0[40]);
    swift_bridgeObjectRelease(v0[42]);
    swift_bridgeObjectRelease(v0[43]);
    swift_bridgeObjectRelease(v0[44]);
  }
  if (v0[55])
  {
    swift_bridgeObjectRelease(v0[49]);
    swift_bridgeObjectRelease(v0[52]);
    swift_bridgeObjectRelease(v0[54]);
    swift_bridgeObjectRelease(v0[55]);
    swift_bridgeObjectRelease(v0[59]);
    swift_bridgeObjectRelease(v0[60]);
  }
  if (v0[67])
  {
    swift_bridgeObjectRelease(v0[62]);
    swift_bridgeObjectRelease(v0[67]);
    swift_bridgeObjectRelease(v0[68]);
  }
  if (v0[74])
  {
    swift_bridgeObjectRelease(v0[69]);
    swift_bridgeObjectRelease(v0[74]);
    swift_bridgeObjectRelease(v0[75]);
  }
  swift_bridgeObjectRelease(v0[76]);
  return swift_deallocObject(v0, 616, 7);
}

unint64_t sub_100928490(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  CGColorSpace *v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;
  void (*v17)(__n128);
  __n128 v18;
  Class isa;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(__n128);
  char *v32;
  __n128 v33;
  char *v34;
  Class v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void (*v47)(__n128);
  _QWORD *v48;
  __n128 v49;
  Class v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  objc_class *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  objc_class *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  char *v81;
  uint64_t v82;
  void (*v83)(void);
  id v84;
  _QWORD *v85;
  char *v86;
  Class v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  void (*v97)(void);
  id v98;
  _QWORD *v99;
  Class v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v107;
  Class v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  id v112;
  id v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _BYTE v118[232];
  _BYTE v119[112];
  uint64_t v120;
  Class v121;
  char v122;
  int v123;
  int v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  objc_class *v130;
  char v131;
  int v132;
  int v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _OWORD v138[14];
  uint64_t v139;
  _OWORD v140[5];
  uint64_t v141;
  _OWORD v142[6];
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  _OWORD v151[14];
  uint64_t v152;
  _OWORD v153[5];
  uint64_t v154;
  _BYTE v155[16];
  _BYTE v156[32];

  v2 = v1;
  v115 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v115 - 8);
  v5 = __chkstk_darwin(v115);
  v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = (unint64_t)_swiftEmptyArrayStorage;
  if (((*(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v1) + 0x528))(v5) & 1) != 0)
  {
    sub_1004C4938((uint64_t)a1 + 232, (uint64_t)v119, &qword_1013F3148);
    sub_1004C4938((uint64_t)v119, (uint64_t)v142, &qword_1013F3148);
    if ((_QWORD)v143)
    {
      v148 = v142[4];
      v149 = v142[5];
      v150 = v143;
      v144 = v142[0];
      v145 = v142[1];
      v146 = v142[2];
      v147 = v142[3];
      sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
      v153[2] = v147;
      v153[3] = v148;
      v153[4] = v149;
      v154 = v150;
      v153[0] = v145;
      v153[1] = v146;
      v140[0] = v145;
      v140[1] = v146;
      v140[3] = v148;
      v140[4] = v149;
      v140[2] = v147;
      v141 = v150;
      v8 = v1;
      sub_1005E4130(v153);
      v9 = sub_1006C52C0((uint64_t)v140);
      sub_1004C4938((uint64_t)&v144, (uint64_t)v155, &qword_1013F3EB8);
      sub_1004C4938((uint64_t)v155, (uint64_t)v156, &qword_1013F3EB8);
      if ((v156[8] & 1) != 0)
      {
        if (qword_1013DD868 != -1)
          swift_once(&qword_1013DD868, sub_100A05844);
        swift_beginAccess(&static OS_os_log.persistence, &v116, 0, 0);
        v10 = (id)static OS_os_log.persistence;
        v12 = static os_log_type_t.info.getter(v11);
        sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v12, "Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
      v13 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v9);

    }
    else
    {
      v14 = v1;
      v13 = 0;
    }
    v15 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetFill(0));
    v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v17 = *(void (**)(__n128))(*(_QWORD *)v16 + 256);
    v18 = swift_retain(v16);
    v17(v18);
    swift_release(v16);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v115);
    v20 = objc_msgSend(v15, "initWithId:fill:", isa, v13);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v20);
    specialized Array._endMutation()(v24);
  }
  v114 = v7;
  sub_1004C4938((uint64_t)a1, (uint64_t)v118, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v118, (uint64_t)v151, (uint64_t *)&unk_1013F1530);
  v25 = sub_1004F276C((uint64_t)v151);
  v112 = a1;
  v26 = v4;
  if (v25 == 1)
  {
    v27 = 0;
  }
  else
  {
    v138[12] = v151[12];
    v138[13] = v151[13];
    v139 = v152;
    v138[8] = v151[8];
    v138[9] = v151[9];
    v138[10] = v151[10];
    v138[11] = v151[11];
    v138[4] = v151[4];
    v138[5] = v151[5];
    v138[6] = v151[6];
    v138[7] = v151[7];
    v138[0] = v151[0];
    v138[1] = v151[1];
    v138[2] = v151[2];
    v138[3] = v151[3];
    v27 = sub_1008BEA4C((uint64_t)v138, 0);
  }
  v28 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetStroke(0));
  v29 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v30 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v31 = *(void (**)(__n128))(*(_QWORD *)v30 + 256);
  v32 = v2;
  v33 = swift_retain(v30);
  v34 = v114;
  v31(v33);
  swift_release(v30);
  v35 = UUID._bridgeToObjectiveC()().super.isa;
  v36 = v2;
  v37 = *(void (**)(char *, uint64_t))(v26 + 8);
  v37(v34, v115);
  v38 = objc_msgSend(v28, "initWithId:stroke:", v35, v27);

  v113 = v32;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
  v41 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v40 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v41 >= v40 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
  v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
  specialized Array._endMutation()(v42);
  v43 = v112;
  v44 = sub_100C8BA78();
  v45 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetShadow(0));
  v110 = v36;
  v111 = v29;
  v46 = *(_QWORD *)&v36[v29];
  v47 = *(void (**)(__n128))(*(_QWORD *)v46 + 256);
  v48 = v113;
  v49 = swift_retain(v46);
  v47(v49);
  swift_release(v46);
  v50 = UUID._bridgeToObjectiveC()().super.isa;
  v37(v34, v115);
  v51 = objc_msgSend(v45, "initWithId:shadow:", v50, v44);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
  v54 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v53 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v54 >= v53 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
  v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v51);
  v56 = specialized Array._endMutation()(v55);
  if ((*((_BYTE *)v43 + 472) & 1) != 0)
  {
    v57 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v48) + 0x478))(v56);
    v58 = objc_msgSend(v57, "bezierPath");

    LODWORD(v57) = objc_msgSend(v58, "isOpen");
    if ((_DWORD)v57)
    {
      v59 = (*(uint64_t (**)(void))((swift_isaMask & *v48) + 0x500))();
      v60 = *((_QWORD *)v43 + 65);
      v109 = v37;
      if ((v59 & 1) != 0)
      {
        if (v60)
        {
          v61 = *((_QWORD *)v43 + 66);
          v62 = *((_QWORD *)v43 + 64);
          v63 = (objc_class *)*((_QWORD *)v43 + 61);
          v64 = *((_QWORD *)v43 + 62);
          v107 = *((_QWORD *)v43 + 63);
          v108 = v63;
          v129 = *((_QWORD *)v43 + 60);
          v65 = v129;
          v130 = v63;
          v131 = v64 & 1;
          v132 = HIDWORD(v64);
          v133 = v107;
          v134 = BYTE4(v107) & 1;
          v135 = v62;
          v136 = v60;
          v137 = v61;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
          swift_bridgeObjectRetain(v65);
          swift_bridgeObjectRetain(v60);
          swift_bridgeObjectRetain(v61);
          v113 = sub_100785FD4((uint64_t)&v129);
          sub_1004C41DC(v65, (uint64_t)v108, v64, v107, v62, v60, v61);
          v66 = *((_QWORD *)v43 + 72);
          if (v66)
          {
LABEL_24:
            v67 = *((_QWORD *)v43 + 73);
            v68 = *((_QWORD *)v43 + 71);
            v69 = *((_QWORD *)v43 + 70);
            v70 = *((_QWORD *)v43 + 69);
            v108 = (Class)*((_QWORD *)v43 + 68);
            v120 = *((_QWORD *)v43 + 67);
            v71 = v120;
            v121 = v108;
            v122 = v70 & 1;
            v123 = HIDWORD(v70);
            v124 = v69;
            v125 = BYTE4(v69) & 1;
            v126 = v68;
            v127 = v66;
            v72 = v68;
            v128 = v67;
            sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
            swift_bridgeObjectRetain(v71);
            swift_bridgeObjectRetain(v66);
            swift_bridgeObjectRetain(v67);
            v73 = sub_100785FD4((uint64_t)&v120);
LABEL_28:
            sub_1004C41DC(v71, (uint64_t)v108, v70, v69, v72, v66, v67);
LABEL_33:
            v79 = v111;
            v108 = (Class)type metadata accessor for CRLCommandSetLineEnd(0);
            v80 = objc_allocWithZone(v108);
            v81 = v110;
            v82 = *(_QWORD *)&v110[v79];
            v83 = *(void (**)(void))(*(_QWORD *)v82 + 256);
            v84 = v73;
            swift_retain(v82);
            v85 = v48;
            v86 = v114;
            v83();
            swift_release(v82);
            v87 = UUID._bridgeToObjectiveC()().super.isa;
            v88 = v115;
            v89 = v109;
            v109(v86, v115);
            v90 = objc_msgSend(v80, "initWithId:lineEnd:chirality:", v87, v84, 0);

            v112 = v84;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
            v93 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v92 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v93 >= v92 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v93 + 1, 1);
            v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v90);
            specialized Array._endMutation()(v94);
            v95 = objc_allocWithZone(v108);
            v96 = *(_QWORD *)&v81[v111];
            v97 = *(void (**)(void))(*(_QWORD *)v96 + 256);
            v98 = v113;
            swift_retain(v96);
            v99 = v85;
            v97();
            swift_release(v96);
            v100 = UUID._bridgeToObjectiveC()().super.isa;
            v89(v86, v88);
            v101 = objc_msgSend(v95, "initWithId:lineEnd:chirality:", v100, v98, 1);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v102);
            v104 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v103 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v104 >= v103 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v103 > 1, v104 + 1, 1);
            v105 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v104, v101);
            specialized Array._endMutation()(v105);

            return v117;
          }
        }
        else
        {
          v113 = 0;
          v66 = *((_QWORD *)v43 + 72);
          if (v66)
            goto LABEL_24;
        }
        v73 = 0;
        goto LABEL_33;
      }
      if (v60)
      {
        v74 = *((_QWORD *)v43 + 66);
        v75 = (objc_class *)*((_QWORD *)v43 + 63);
        v107 = *((_QWORD *)v43 + 64);
        v108 = v75;
        v76 = *((_QWORD *)v43 + 62);
        v113 = (id)*((_QWORD *)v43 + 61);
        v129 = *((_QWORD *)v43 + 60);
        v77 = v129;
        v130 = (objc_class *)v113;
        v131 = v76 & 1;
        v132 = HIDWORD(v76);
        v133 = (int)v75;
        v134 = BYTE4(v75) & 1;
        v135 = v107;
        v136 = v60;
        v137 = v74;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
        swift_bridgeObjectRetain(v77);
        swift_bridgeObjectRetain(v60);
        swift_bridgeObjectRetain(v74);
        v73 = sub_100785FD4((uint64_t)&v129);
        sub_1004C41DC(v77, (uint64_t)v113, v76, (uint64_t)v108, v107, v60, v74);
        v66 = *((_QWORD *)v43 + 72);
        if (v66)
        {
LABEL_27:
          v67 = *((_QWORD *)v43 + 73);
          v78 = *((_QWORD *)v43 + 71);
          v69 = *((_QWORD *)v43 + 70);
          v70 = *((_QWORD *)v43 + 69);
          v108 = (Class)*((_QWORD *)v43 + 68);
          v120 = *((_QWORD *)v43 + 67);
          v71 = v120;
          v121 = v108;
          v122 = v70 & 1;
          v123 = HIDWORD(v70);
          v124 = v69;
          v125 = BYTE4(v69) & 1;
          v126 = v78;
          v127 = v66;
          v72 = v78;
          v128 = v67;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
          swift_bridgeObjectRetain(v71);
          swift_bridgeObjectRetain(v66);
          swift_bridgeObjectRetain(v67);
          v113 = sub_100785FD4((uint64_t)&v120);
          goto LABEL_28;
        }
      }
      else
      {
        v73 = 0;
        v66 = *((_QWORD *)v43 + 72);
        if (v66)
          goto LABEL_27;
      }
      v113 = 0;
      goto LABEL_33;
    }
  }
  return v117;
}

uint64_t *sub_100928F98(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    v12 = (_OWORD *)((char *)v4 + v11);
    v13 = (_OWORD *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
  }
  return v4;
}

_QWORD *sub_10092904C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

_QWORD *sub_1009290D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

_QWORD *sub_100929178(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

_QWORD *sub_100929200(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t sub_100929288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100929294);
}

uint64_t sub_100929294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1009292D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009292E0);
}

uint64_t sub_1009292E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for CRLFollowViewportState(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FA770;
  if (!qword_1013FA770)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFollowViewportState);
  return result;
}

uint64_t sub_100929360(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[3] = " ";
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1009293F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float *v56;
  uint64_t v57;
  float *v58;
  uint64_t v59;
  float v60;
  float v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  float *v67;
  float v68;
  float v69;
  uint64_t v70;
  unint64_t v71;
  _BYTE *v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  double *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  float *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  float *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _OWORD v105[2];
  uint64_t v106;

  v89 = a3;
  v88 = type metadata accessor for CRLFollowViewportState(0);
  __chkstk_darwin(v88);
  v87 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v96 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v95 = (char *)&v81 - v9;
  v10 = sub_1004B804C(&qword_1013FA7B8);
  __chkstk_darwin(v10);
  v103 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLProto_Size(0);
  v93 = *(_QWORD *)(v12 - 8);
  v94 = v12;
  __chkstk_darwin(v12);
  v97 = (float *)((char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v14);
  v91 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for CRLProto_Point(0);
  v102 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v92 = (float *)((char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v17);
  v101 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLProto_Data(0);
  v99 = *(_QWORD *)(v19 - 8);
  v100 = v19;
  __chkstk_darwin(v19);
  v98 = (uint64_t *)((char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v81 - v27;
  v29 = type metadata accessor for BinaryDecodingOptions(0, v26);
  __chkstk_darwin(v29);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (int *)type metadata accessor for CRLProto_FollowViewportState(0);
  __chkstk_darwin(v32);
  v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = 0;
  memset(v105, 0, sizeof(v105));
  v35 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v35);
  v36 = sub_10092A244();
  v37 = v104;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v105, 0, v31, v32, v36);
  if (v37)
    return sub_1004BBBC8(a1, a2);
  v104 = 0;
  v39 = v98;
  v82 = v24;
  v84 = v22;
  v83 = v21;
  v85 = a1;
  v86 = a2;
  v40 = v34;
  v41 = v101;
  sub_1004CB7BC((uint64_t)&v34[v32[7]], v101, (uint64_t *)&unk_1013E16F0);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v41, 1, v100);
  if ((_DWORD)v42 == 1)
  {
    *(_OWORD *)v39 = xmmword_100EF78C0;
    UnknownStorage.init()(v42);
    sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(v41, (uint64_t)v39, type metadata accessor for CRLProto_Data);
  }
  v43 = v102;
  v44 = (uint64_t)v103;
  v45 = *v39;
  v46 = v39[1];
  sub_1004BE310(*v39, v46);
  sub_1004B84A4((uint64_t)v39, type metadata accessor for CRLProto_Data);
  v47 = v28;
  v48 = v104;
  UUID.init(crl_data:)(v45, v46);
  if (v48)
  {
    sub_1004BBBC8(v85, v86);
    v49 = (uint64_t)v40;
  }
  else
  {
    v50 = v40;
    v51 = *v40;
    v52 = v91;
    sub_1004CB7BC((uint64_t)v40 + v32[8], v91, &qword_1013FA7B0);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v52, 1, v90);
    v55 = v93;
    v54 = v94;
    v56 = v92;
    if ((_DWORD)v53 == 1)
    {
      *(_QWORD *)v92 = 0;
      v57 = v52;
      v58 = v56;
      UnknownStorage.init()(v53);
      sub_1004CB800(v57, &qword_1013FA7B0);
    }
    else
    {
      v59 = v52;
      v58 = v92;
      sub_1004B84E0(v59, (uint64_t)v92, type metadata accessor for CRLProto_Point);
    }
    v60 = *v58;
    v61 = v58[1];
    sub_1004B84A4((uint64_t)v58, type metadata accessor for CRLProto_Point);
    sub_1004CB7BC((uint64_t)v50 + v32[9], v44, &qword_1013FA7B8);
    v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v44, 1, v54);
    v63 = (uint64_t)v95;
    v64 = (uint64_t)v96;
    v65 = v83;
    v66 = v84;
    v67 = v97;
    if ((_DWORD)v62 == 1)
    {
      *(_QWORD *)v97 = 0;
      UnknownStorage.init()(v62);
      sub_1004CB800(v44, &qword_1013FA7B8);
    }
    else
    {
      sub_1004B84E0(v44, (uint64_t)v97, type metadata accessor for CRLProto_Size);
    }
    v68 = *v67;
    v69 = v67[1];
    sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLProto_Size);
    v70 = *((_QWORD *)v50 + 1);
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v63, v47, v65);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    sub_1004CB7BC(v63, v64, (uint64_t *)&unk_1013E1A50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65) == 1)
    {
      sub_1004CB800(v64, (uint64_t *)&unk_1013E1A50);
      v71 = sub_100577444();
      swift_allocError(&type metadata for CRLSerializationError, v71, 0, 0);
      *v72 = 0;
      swift_willThrow(v73);
      sub_1004CB800(v63, (uint64_t *)&unk_1013E1A50);
      sub_1004BBBC8(v85, v86);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v65);
      v49 = (uint64_t)v50;
    }
    else
    {
      v104 = (uint64_t)v50;
      v74 = v66;
      v75 = v63;
      v76 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
      v77 = v82;
      v76(v82, v64, v65);
      sub_1004CB800(v75, (uint64_t *)&unk_1013E1A50);
      v78 = v88;
      v79 = v87;
      v76(&v87[*(int *)(v88 + 20)], (uint64_t)v77, v65);
      *(_DWORD *)((char *)v79 + *(int *)(v78 + 24)) = v51;
      v80 = (double *)((char *)v79 + *(int *)(v78 + 28));
      *v80 = v60;
      v80[1] = v61;
      v80[2] = v68;
      v80[3] = v69;
      *v79 = v70;
      sub_1004B84E0((uint64_t)v79, v89, type metadata accessor for CRLFollowViewportState);
      sub_1004BBBC8(v85, v86);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v65);
      v49 = v104;
    }
  }
  return sub_1004B84A4(v49, type metadata accessor for CRLProto_FollowViewportState);
}

BOOL sub_100929BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  float v18;
  float v19;
  _BOOL8 v20;
  uint64_t v22;

  v4 = type metadata accessor for CRLFollowViewportState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  v17 = static UUID.== infix(_:_:)(a1 + *(int *)(v16 + 20));
  sub_100929D90(a1, (uint64_t)v15);
  sub_100929D90(a2, (uint64_t)v12);
  if ((v17 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFollowViewportState);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLFollowViewportState);
    sub_100929D90(a1, (uint64_t)v9);
    sub_100929D90(a2, (uint64_t)v6);
    goto LABEL_5;
  }
  v18 = *(float *)&v15[*(int *)(v4 + 24)];
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLFollowViewportState);
  v19 = *(float *)&v12[*(int *)(v4 + 24)];
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFollowViewportState);
  sub_100929D90(a1, (uint64_t)v9);
  sub_100929D90(a2, (uint64_t)v6);
  if (v18 != v19)
  {
LABEL_5:
    v20 = 0;
    goto LABEL_6;
  }
  v20 = CGRectEqualToRect(*(CGRect *)&v9[*(int *)(v4 + 28)], *(CGRect *)&v6[*(int *)(v4 + 28)]);
LABEL_6:
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLFollowViewportState);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFollowViewportState);
  return v20;
}

uint64_t sub_100929D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLFollowViewportState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100929DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  float64x2_t *v32;
  uint64_t v33;
  float32x2_t *v34;
  float32x2_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float32x2_t *v39;
  float32x2_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __int128 v45;
  char *v46;
  char *v47;
  int *v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v50)(void);
  uint64_t v51;
  uint64_t (*v52)(void);
  float32x2_t *v53;
  uint64_t v54;
  float32x2_t *v55;
  uint64_t v56;
  _QWORD *v57;

  v56 = type metadata accessor for CRLProto_Size(0);
  v52 = *(uint64_t (**)(void))(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (float32x2_t *)((char *)&v45 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  v1 = type metadata accessor for CRLProto_Point(0);
  v54 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v53 = (float32x2_t *)((char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v3);
  v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLProto_Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (__int128 *)((char *)&v45 - v10);
  v12 = (int *)type metadata accessor for CRLProto_FollowViewportState(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  UnknownStorage.init()(v15);
  v16 = (uint64_t)&v14[v12[7]];
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17(v16, 1, 1, v5);
  v18 = *(void (**)(void))(v54 + 56);
  v47 = &v14[v12[8]];
  v54 = v1;
  v50 = v18;
  v18();
  v48 = v12;
  v19 = v12[9];
  v20 = (uint64_t)v46;
  v21 = (uint64_t)&v14[v19];
  v22 = (uint64_t (*)(void))*((_QWORD *)v52 + 7);
  v51 = v21;
  v52 = v22;
  v23 = v22();
  v45 = xmmword_100EF78C0;
  *v11 = xmmword_100EF78C0;
  UnknownStorage.init()(v23);
  sub_1004CB800(v16, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v11, v16, type metadata accessor for CRLProto_Data);
  v49 = v17;
  v17(v16, 0, 1, v5);
  v24 = type metadata accessor for CRLFollowViewportState(0);
  v25 = UUID.crl_data()();
  v27 = v26;
  sub_1004CB7BC(v16, v20, (uint64_t *)&unk_1013E16F0);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5);
  if ((_DWORD)v28 == 1)
  {
    *(_OWORD *)v8 = v45;
    UnknownStorage.init()(v28);
    sub_1004CB800(v20, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(v20, (uint64_t)v8, type metadata accessor for CRLProto_Data);
  }
  sub_1004BBBC8(*(_QWORD *)v8, *((_QWORD *)v8 + 1));
  *(_QWORD *)v8 = v25;
  *((_QWORD *)v8 + 1) = v27;
  sub_1004CB800(v16, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, v16, type metadata accessor for CRLProto_Data);
  v29 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v49)(v16, 0, 1, v5);
  v30 = *(int *)(v24 + 28);
  v31 = v57;
  *(_DWORD *)v14 = *(_DWORD *)((char *)v57 + *(int *)(v24 + 24));
  v32 = (float64x2_t *)((char *)v31 + v30);
  v34 = v53;
  v33 = v54;
  v35 = vcvt_f32_f64(*(float64x2_t *)((char *)v31 + v30));
  UnknownStorage.init()(v29);
  *v34 = v35;
  v36 = (uint64_t)v47;
  sub_1004CB800((uint64_t)v47, &qword_1013FA7B0);
  sub_1004B84E0((uint64_t)v34, v36, type metadata accessor for CRLProto_Point);
  v37 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v50)(v36, 0, 1, v33);
  v38 = v56;
  v39 = v55;
  v40 = vcvt_f32_f64(v32[1]);
  UnknownStorage.init()(v37);
  *v39 = v40;
  v41 = v51;
  sub_1004CB800(v51, &qword_1013FA7B8);
  sub_1004B84E0((uint64_t)v39, v41, type metadata accessor for CRLProto_Size);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v52)(v41, 0, 1, v38);
  *((_QWORD *)v14 + 1) = *v31;
  v42 = sub_10092A244();
  v43 = Message.serializedData(partial:)(0, v48, v42);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_FollowViewportState);
  return v43;
}

unint64_t sub_10092A244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FA7C0;
  if (!qword_1013FA7C0)
  {
    v1 = type metadata accessor for CRLProto_FollowViewportState(255);
    result = swift_getWitnessTable(&unk_100F24780, v1);
    atomic_store(result, (unint64_t *)&qword_1013FA7C0);
  }
  return result;
}

uint64_t destroy for CRLConnectionLinePathSourceData(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[13]);
  return swift_bridgeObjectRelease(a1[15]);
}

uint64_t initializeWithCopy for CRLConnectionLinePathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 60) = *(_QWORD *)(a2 + 60);
  v7 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 92) = *(_QWORD *)(a2 + 92);
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v8;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t assignWithCopy for CRLConnectionLinePathSourceData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  v7 = a2[4];
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
  v9 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  v10 = a2[9];
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v12;
  *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
  *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
  v13 = a2[13];
  v14 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  v15 = a2[15];
  v16 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t assignWithTake for CRLConnectionLinePathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 60) = *(_QWORD *)(a2 + 60);
  v6 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 92) = *(_QWORD *)(a2 + 92);
  v7 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLConnectionLinePathSourceData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLConnectionLinePathSourceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLinePathSourceData()
{
  return &type metadata for CRLConnectionLinePathSourceData;
}

uint64_t *sub_10092A634(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for CRLBezierPathSourceData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for CRLBezierPathSourceData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for CRLBezierPathSourceData()
{
  return &type metadata for CRLBezierPathSourceData;
}

uint64_t *sub_10092A740(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v11 = a3[7];
    v12 = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = v12;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
  }
  return a1;
}

uint64_t sub_10092A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 28)));
}

uint64_t sub_10092A838(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v10 = a3[7];
  v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t sub_10092A8B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = (_DWORD *)(a1 + v10);
  v12 = (_DWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = a3[7];
  v14 = *(_QWORD *)(a2 + v13);
  v15 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_10092A958(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10092A9C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_10092AA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10092AA54);
}

uint64_t sub_10092AA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10092AAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10092AADC);
}

uint64_t sub_10092AADC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLEditableBezierPathSourceData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FA820, (uint64_t)&nominal type descriptor for CRLEditableBezierPathSourceData);
}

uint64_t sub_10092AB68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

_WORD *sub_10092ABE8(_WORD *a1, uint64_t *a2, uint64_t a3)
{
  _WORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_WORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    v8 = a2[4];
    *((_QWORD *)v4 + 3) = a2[3];
    *((_QWORD *)v4 + 4) = v8;
    *((_QWORD *)v4 + 5) = a2[5];
    *((_BYTE *)v4 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)(v4 + 26) = *(_OWORD *)((char *)a2 + 52);
    v9 = a2[9];
    v11 = a2 + 15;
    v10 = a2[15];
    v12 = a2[10];
    *((_QWORD *)v4 + 9) = v9;
    *((_QWORD *)v4 + 10) = v12;
    *((_BYTE *)v4 + 88) = *((_BYTE *)a2 + 88);
    *((_DWORD *)v4 + 23) = *((_DWORD *)a2 + 23);
    *((_QWORD *)v4 + 12) = a2[12];
    v4[52] = *((_WORD *)a2 + 52);
    v13 = a2[14];
    *((_QWORD *)v4 + 14) = v13;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v13);
    if (v10)
    {
      v14 = a2[16];
      v15 = a2[17];
      *((_QWORD *)v4 + 15) = v10;
      *((_QWORD *)v4 + 16) = v14;
      *((_QWORD *)v4 + 17) = v15;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v15);
    }
    else
    {
      *(_OWORD *)(v4 + 60) = *v11;
      *((_QWORD *)v4 + 17) = a2[17];
    }
    *((_QWORD *)v4 + 18) = a2[18];
    *((_QWORD *)v4 + 19) = a2[19];
    *((_BYTE *)v4 + 160) = *((_BYTE *)a2 + 160);
    *(_QWORD *)(v4 + 82) = *(uint64_t *)((char *)a2 + 164);
    v17 = a2[22];
    *((_QWORD *)v4 + 22) = v17;
    v18 = v4 + 92;
    v19 = a2 + 23;
    v20 = a2[25];
    swift_bridgeObjectRetain(v17);
    if (v20)
    {
      *v18 = *v19;
      *((_BYTE *)v4 + 192) = *((_BYTE *)a2 + 192);
      v21 = a2[26];
      v22 = a2[27];
      *((_QWORD *)v4 + 25) = v20;
      *((_QWORD *)v4 + 26) = v21;
      *((_QWORD *)v4 + 27) = v22;
      *((_QWORD *)v4 + 28) = a2[28];
      *((_QWORD *)v4 + 29) = a2[29];
      *((_BYTE *)v4 + 240) = *((_BYTE *)a2 + 240);
      *(_QWORD *)(v4 + 122) = *(uint64_t *)((char *)a2 + 244);
      v24 = a2[32];
      v23 = a2[33];
      *((_QWORD *)v4 + 32) = v24;
      *((_QWORD *)v4 + 33) = v23;
      *((_BYTE *)v4 + 272) = *((_BYTE *)a2 + 272);
      *(_QWORD *)(v4 + 138) = *(uint64_t *)((char *)a2 + 276);
      v25 = a2[36];
      *((_QWORD *)v4 + 36) = v25;
      *((_BYTE *)v4 + 296) = *((_BYTE *)a2 + 296);
      v26 = a2[38];
      *((_QWORD *)v4 + 38) = v26;
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
    }
    else
    {
      v27 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(v4 + 124) = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(v4 + 132) = v27;
      v28 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(v4 + 140) = *(_OWORD *)(a2 + 35);
      *(_OWORD *)(v4 + 148) = v28;
      v29 = *(_OWORD *)(a2 + 25);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_OWORD *)(v4 + 100) = v29;
      v30 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(v4 + 108) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(v4 + 116) = v30;
    }
    v31 = *(int *)(a3 + 52);
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    v35 = *((_QWORD *)v34 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
    {
      v36 = sub_1004B804C(&qword_1013F7920);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v32, v33, v37);
      v38 = v34[5];
      v39 = *(_QWORD *)&v33[v38];
      *(_QWORD *)&v32[v38] = v39;
      *(_QWORD *)&v32[v34[6]] = *(_QWORD *)&v33[v34[6]];
      v40 = v34[7];
      v41 = *(_QWORD *)&v33[v40];
      *(_QWORD *)&v32[v40] = v41;
      v42 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v35 + 56);
      swift_bridgeObjectRetain(v39);
      v43 = swift_bridgeObjectRetain(v41);
      v42(v32, 0, 1, v34, v43);
    }
    v44 = *(int *)(a3 + 56);
    v45 = *(uint64_t *)((char *)a2 + v44);
    *(_QWORD *)((char *)v4 + v44) = v45;
    swift_bridgeObjectRetain(v45);
  }
  return v4;
}

double sub_10092AEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 52);
  v5 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10092AFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v8 = *(_QWORD *)(a2 + 72);
  v10 = a2 + 120;
  v9 = *(_QWORD *)(a2 + 120);
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v12);
  if (v9)
  {
    v13 = *(_QWORD *)(a2 + 128);
    v14 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 120) = v9;
    *(_QWORD *)(a1 + 128) = v13;
    *(_QWORD *)(a1 + 136) = v14;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v10;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(v10 + 16);
  }
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 164) = *(_QWORD *)(a2 + 164);
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v15;
  v16 = (_QWORD *)(a1 + 184);
  v17 = (_QWORD *)(a2 + 184);
  v18 = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain(v15);
  if (v18)
  {
    *v16 = *v17;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v19 = *(_QWORD *)(a2 + 208);
    v20 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 200) = v18;
    *(_QWORD *)(a1 + 208) = v19;
    *(_QWORD *)(a1 + 216) = v20;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
    v22 = *(_QWORD *)(a2 + 256);
    v21 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = v22;
    *(_QWORD *)(a1 + 264) = v21;
    *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
    *(_QWORD *)(a1 + 276) = *(_QWORD *)(a2 + 276);
    v23 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 288) = v23;
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    v24 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v24;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v25;
    v26 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v26;
    v27 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 200) = v27;
    v28 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v28;
  }
  v29 = *(int *)(a3 + 52);
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  v32 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v33 = *((_QWORD *)v32 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_1004B804C(&qword_1013F7920);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v30, v31, v35);
    v36 = v32[5];
    v37 = *(_QWORD *)&v31[v36];
    *(_QWORD *)&v30[v36] = v37;
    *(_QWORD *)&v30[v32[6]] = *(_QWORD *)&v31[v32[6]];
    v38 = v32[7];
    v39 = *(_QWORD *)&v31[v38];
    *(_QWORD *)&v30[v38] = v39;
    v40 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v33 + 56);
    swift_bridgeObjectRetain(v37);
    v41 = swift_bridgeObjectRetain(v39);
    v40(v30, 0, 1, v32, v41);
  }
  v42 = *(int *)(a3 + 56);
  v43 = *(_QWORD *)(a2 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  swift_bridgeObjectRetain(v43);
  return a1;
}

uint64_t sub_10092B2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int *v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, int *);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = (_OWORD *)(a1 + 120);
  v14 = (_OWORD *)(a2 + 120);
  v13 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 120) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
      v15 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 136) = v15;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008ABCA8((_QWORD *)(a1 + 120));
      v17 = *(_QWORD *)(a2 + 136);
      *v12 = *v14;
      *(_QWORD *)(a1 + 136) = v17;
    }
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 120) = v13;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v16;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v16);
  }
  else
  {
    v18 = *v14;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *v12 = v18;
  }
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  v19 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)(a1 + 184);
  v21 = (uint64_t *)(a2 + 184);
  v22 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v22)
    {
      v23 = *v21;
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *v20 = v23;
      v24 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 200) = v24;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      v25 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v25;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
      v26 = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = v26;
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      v27 = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 256) = v27;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(a2 + 264);
      *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = v28;
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      v29 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 288) = v29;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      v30 = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 304) = v30;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008ABCDC((_QWORD *)(a1 + 184));
      v39 = *(_OWORD *)(a2 + 232);
      v41 = *(_OWORD *)v21;
      v40 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v39;
      *(_OWORD *)v20 = v41;
      *(_OWORD *)(a1 + 200) = v40;
      v42 = *(_OWORD *)(a2 + 296);
      v44 = *(_OWORD *)(a2 + 248);
      v43 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v42;
      *(_OWORD *)(a1 + 248) = v44;
      *(_OWORD *)(a1 + 264) = v43;
    }
  }
  else if (v22)
  {
    v31 = *v21;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *v20 = v31;
    v32 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 200) = v32;
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v33 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 216) = v33;
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    v34 = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v34;
    *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
    v35 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 256) = v35;
    v36 = *(_QWORD *)(a2 + 264);
    *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = v36;
    *(_QWORD *)(a1 + 276) = *(_QWORD *)(a2 + 276);
    v37 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 288) = v37;
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    v38 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v38;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
  }
  else
  {
    v45 = *(_OWORD *)v21;
    v46 = *(_OWORD *)(a2 + 200);
    v47 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v47;
    *(_OWORD *)v20 = v45;
    *(_OWORD *)(a1 + 200) = v46;
    v48 = *(_OWORD *)(a2 + 248);
    v49 = *(_OWORD *)(a2 + 264);
    v50 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v50;
    *(_OWORD *)(a1 + 248) = v48;
    *(_OWORD *)(a1 + 264) = v49;
  }
  v51 = *(int *)(a3 + 52);
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v55 = *((_QWORD *)v54 - 1);
  v56 = *(uint64_t (**)(char *, uint64_t, int *))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (!v57)
  {
    if (!v58)
    {
      v70 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v52, v53, v70);
      v71 = v54[5];
      v72 = *(_QWORD *)&v53[v71];
      *(_QWORD *)&v52[v71] = v72;
      swift_bridgeObjectRetain(v72);
      swift_bridgeObjectRelease();
      v73 = v54[6];
      v74 = &v52[v73];
      v75 = &v53[v73];
      *(_DWORD *)v74 = *(_DWORD *)v75;
      *((_DWORD *)v74 + 1) = *((_DWORD *)v75 + 1);
      v76 = v54[7];
      v77 = *(_QWORD *)&v53[v76];
      *(_QWORD *)&v52[v76] = v77;
      swift_bridgeObjectRetain(v77);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1004B84A4((uint64_t)v52, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_20;
  }
  if (v58)
  {
LABEL_20:
    v66 = sub_1004B804C(&qword_1013F7920);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_21;
  }
  v59 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v52, v53, v59);
  v60 = v54[5];
  v61 = *(_QWORD *)&v53[v60];
  *(_QWORD *)&v52[v60] = v61;
  *(_QWORD *)&v52[v54[6]] = *(_QWORD *)&v53[v54[6]];
  v62 = v54[7];
  v63 = *(_QWORD *)&v53[v62];
  *(_QWORD *)&v52[v62] = v63;
  v64 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v55 + 56);
  swift_bridgeObjectRetain(v61);
  v65 = swift_bridgeObjectRetain(v63);
  v64(v52, 0, 1, v54, v65);
LABEL_21:
  v67 = *(int *)(a3 + 56);
  v68 = *(_QWORD *)(a2 + v67);
  *(_QWORD *)(a1 + v67) = v68;
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10092B860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v8 = *(_OWORD *)(a2 + 296);
  v9 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(_OWORD *)(a1 + 264) = v9;
  v10 = *(int *)(a3 + 52);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v13 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_1004B804C(&qword_1013F7920);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    *(_QWORD *)&v11[v13[5]] = *(_QWORD *)&v12[v13[5]];
    *(_QWORD *)&v11[v13[6]] = *(_QWORD *)&v12[v13[6]];
    *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_10092BA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 92) = *(_QWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 120) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1008ABCA8((_QWORD *)(a1 + 120));
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
LABEL_6:
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 164) = *(_QWORD *)(a2 + 164);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(a1 + 184);
  v10 = (_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 200))
  {
    v11 = *(_QWORD *)(a2 + 200);
    if (v11)
    {
      *v9 = *v10;
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v11;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1008ABCDC((_QWORD *)(a1 + 184));
  }
  v12 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v12;
  v13 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v13;
  v14 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 200) = v14;
  v15 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v15;
LABEL_11:
  v16 = *(int *)(a3 + 52);
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v27 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v17, v18, v27);
      *(_QWORD *)&v17[v19[5]] = *(_QWORD *)&v18[v19[5]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v17[v19[6]] = *(_QWORD *)&v18[v19[6]];
      *(_QWORD *)&v17[v19[7]] = *(_QWORD *)&v18[v19[7]];
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_16;
  }
  if (v23)
  {
LABEL_16:
    v25 = sub_1004B804C(&qword_1013F7920);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_17;
  }
  v24 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
  *(_QWORD *)&v17[v19[5]] = *(_QWORD *)&v18[v19[5]];
  *(_QWORD *)&v17[v19[6]] = *(_QWORD *)&v18[v19[6]];
  *(_QWORD *)&v17[v19[7]] = *(_QWORD *)&v18[v19[7]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_17:
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10092BD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10092BDA0);
}

uint64_t sub_10092BDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013F7920);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 52), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 56));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10092BE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10092BE30);
}

uint64_t sub_10092BE30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013F7920);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 52), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 56)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLPathSourceData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FA8B8, (uint64_t)&nominal type descriptor for CRLPathSourceData);
}

void sub_10092BEC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100F172D8;
  v4[1] = &unk_100F172D8;
  v4[2] = &unk_100F172F0;
  v4[3] = &unk_100F172F0;
  v4[4] = &unk_100F17308;
  v4[5] = &unk_100F17308;
  v4[6] = &unk_100F17320;
  v4[7] = &unk_100F17308;
  v4[8] = &unk_100F17338;
  sub_10092BF74(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 11, v4, a1 + 16);
  }
}

void sub_10092BF74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013FA8C8)
  {
    v2 = type metadata accessor for CRLEditableBezierPathSourceData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013FA8C8);
  }
}

uint64_t sub_10092BFC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  unsigned int v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  unsigned int v63;
  double v64;
  double v65;
  double v66;
  double v67;
  unsigned int v68;
  unsigned int v69;
  unint64_t v70;
  uint64_t v71;
  float64x2_t v72;
  float64x2_t v73;
  int8x16_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  float64_t v79;
  float64_t v80;
  float64_t v81;
  float64_t v82;
  uint64_t v83;
  __int128 aBlock;
  double (*v85)(uint64_t, uint64_t, double, double, double, double, double, double);
  void *v86;
  void (*v87)(uint64_t, double, double, double, double, double, double);
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;

  v4 = type metadata accessor for CRLPathSourceData(0);
  *(_QWORD *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + *(int *)(v4 + 56)) = &_swiftEmptyDictionarySingleton;
  *(_BYTE *)a2 = objc_msgSend(a1, "hasHorizontalFlip");
  *(_BYTE *)(a2 + 1) = objc_msgSend(a1, "hasVerticalFlip");
  v5 = objc_msgSend(a1, "localizationKey");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v9;
  v10 = objc_msgSend(a1, "userDefinedName");
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v14;
  v15 = objc_opt_self(CRLPointPathSource);
  v16 = (void *)swift_dynamicCastObjCClass(a1, v15);
  if (v16)
  {
    sub_100935964(v16, (uint64_t)&v89);
    v17 = v89;
    v18 = v90;
    v19 = v92;
    v20 = v93;
    v21 = v94;
    v22 = v91;

    *(_QWORD *)(a2 + 40) = v17;
    *(_QWORD *)(a2 + 48) = v18 | (v22 << 32);
    *(_QWORD *)(a2 + 56) = v19;
    *(_QWORD *)(a2 + 64) = v20;
    *(_QWORD *)(a2 + 72) = v21;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_QWORD *)(a2 + 176) = 0;
    sub_1004C3A10(&aBlock);
    sub_1004C4938((uint64_t)&aBlock, a2 + 184, &qword_1013F6270);
    v23 = *(int *)(v4 + 52);
LABEL_17:
    v37 = a2 + v23;
    v38 = type metadata accessor for CRLEditableBezierPathSourceData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  }
  v83 = v4;
  v24 = objc_opt_self(CRLScalarPathSource);
  v25 = (void *)swift_dynamicCastObjCClass(a1, v24);
  if (v25)
  {
    sub_100935AD8(v25, (uint64_t)&v89);
    v26 = v89;
    v27 = v90;
    v28 = v92;
    v29 = v93;
    v30 = BYTE1(v93);
    v31 = v94;
    v32 = v91;

    *(_QWORD *)(a2 + 88) = v27 | (v32 << 32);
    *(_QWORD *)(a2 + 96) = v28;
    v33 = 256;
    if (!v30)
      v33 = 0;
    *(_QWORD *)(a2 + 104) = v33 | v29;
    *(_QWORD *)(a2 + 112) = v31;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_QWORD *)(a2 + 72) = 0;
    *(_QWORD *)(a2 + 80) = v26;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(_OWORD *)(a2 + 168) = 0u;
    goto LABEL_13;
  }
  v34 = objc_opt_self(CRLConnectionLinePathSource);
  v35 = (void *)swift_dynamicCastObjCClass(a1, v34);
  if (v35)
  {
    sub_100935C6C(v35, (uint64_t)&aBlock);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&aBlock, v36);
    sub_1004C4938((uint64_t)&aBlock, a2 + 184, &qword_1013F6270);
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(_OWORD *)(a2 + 168) = 0u;
    goto LABEL_16;
  }
  v40 = objc_opt_self(CRLBezierPathSource);
  v41 = swift_dynamicCastObjCClass(a1, v40);
  if (v41)
  {
    v42 = (void *)v41;
    v43 = a1;
    v44 = objc_msgSend(v42, "bezierPathWithoutFlips");
    v45 = swift_allocObject(&unk_1012888A8, 24, 7);
    *(_QWORD *)(v45 + 16) = _swiftEmptyArrayStorage;
    v87 = sub_100786C04;
    v88 = v45;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
    v85 = sub_100933E14;
    v86 = &unk_1012888C0;
    v46 = _Block_copy(&aBlock);
    v47 = v88;
    swift_retain(v45);
    objc_msgSend(v44, "iteratePathElementsWithBlock:", v46, swift_release(v47).n128_f64[0]);

    _Block_release(v46);
    swift_beginAccess(v45 + 16, &v89, 0, 0);
    v48 = *(_QWORD *)(v45 + 16);
    swift_bridgeObjectRetain(v48);
    objc_msgSend(v42, "naturalSize", swift_release(v45).n128_f64[0]);
    v50 = v49;
    v52 = v51;

    *(float *)&v53 = v50;
    *(float *)&v54 = v52;
    v55 = v53 | ((unint64_t)v54 << 32);
    sub_1004C36BC(*(_QWORD *)(a2 + 120), *(_QWORD *)(a2 + 128), *(_QWORD *)(a2 + 136));
    *(_QWORD *)(a2 + 120) = v48;
    *(_QWORD *)(a2 + 128) = v55;
    *(_QWORD *)(a2 + 136) = &_swiftEmptyDictionarySingleton;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_QWORD *)(a2 + 176) = 0;
LABEL_13:
    sub_1004C3A10(&aBlock);
    sub_1004C4938((uint64_t)&aBlock, a2 + 184, &qword_1013F6270);
LABEL_16:
    v23 = *(int *)(v83 + 52);
    goto LABEL_17;
  }
  v56 = objc_opt_self(CRLCalloutPathSource);
  v57 = (void *)swift_dynamicCastObjCClass(a1, v56);
  if (v57)
  {
    v58 = v57;
    objc_msgSend(v57, "rawTailPosition");
    v81 = v59;
    v82 = v60;
    objc_msgSend(v58, "tailSize");
    v80 = v61;
    objc_msgSend(v58, "cornerRadius");
    v79 = v62;
    v63 = objc_msgSend(v58, "isTailAtCenter");
    objc_msgSend(v58, "naturalSize");
    v65 = v64;
    v67 = v66;

    *(float *)&v68 = v65;
    *(float *)&v69 = v67;
    v70 = v63 | ((unint64_t)v68 << 32);
    v71 = v69;
    v72.f64[0] = v81;
    v72.f64[1] = v80;
    *(float32x2_t *)&v72.f64[0] = vcvt_f32_f64(v72);
    v73.f64[0] = v82;
    v73.f64[1] = v79;
    v74.i64[0] = LODWORD(v72.f64[0]);
    v74.i64[1] = HIDWORD(v72.f64[0]);
    *(int8x16_t *)(a2 + 144) = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v73), 0x20uLL), v74);
    *(_QWORD *)(a2 + 160) = v70;
    *(_QWORD *)(a2 + 168) = v71;
    *(_QWORD *)(a2 + 176) = &_swiftEmptyDictionarySingleton;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_QWORD *)(a2 + 136) = 0;
    goto LABEL_13;
  }
  v75 = objc_opt_self(CRLEditableBezierPathSource);
  v76 = (void *)swift_dynamicCastObjCClass(a1, v75);
  if (!v76)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 100, "Unknown path source subclass.", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 100, (uint64_t)"Unknown path source subclass.", 29, 2u);

    *(_OWORD *)(a2 + 168) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    sub_1004C3A10(&aBlock);
    sub_1004C4938((uint64_t)&aBlock, a2 + 184, &qword_1013F6270);
    v23 = *(int *)(v4 + 52);
    goto LABEL_17;
  }
  v77 = a2 + *(int *)(v4 + 52);
  sub_10092C9C0(v76, a2 + *(int *)(v83 + 52));
  v78 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
  *(_QWORD *)(a2 + 136) = 0;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  sub_1004C3A10(&aBlock);
  result = sub_1004C4938((uint64_t)&aBlock, a2 + 184, &qword_1013F6270);
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(_QWORD *)(a2 + 176) = 0;
  return result;
}

uint64_t sub_10092C690(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10092C6CC + 4 * byte_100F171C0[a1]))(0xD000000000000011, 0x8000000100FE1DE0);
}

uint64_t sub_10092C6CC()
{
  return 0x6974726556736168;
}

uint64_t sub_10092C6F0()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_10092C714()
{
  return 0x6966654472657375;
}

uint64_t sub_10092C738()
{
  uint64_t v0;

  return v0 - 1;
}

BOOL sub_10092C7B8(char *a1, char *a2)
{
  return qword_100F1A2A0[*a1] == qword_100F1A2A0[*a2];
}

Swift::Int sub_10092C7DC()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1A2A0[v1]);
  return Hasher._finalize()();
}

void sub_10092C828()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1A2A0[*v0]);
}

Swift::Int sub_10092C85C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1A2A0[v2]);
  return Hasher._finalize()();
}

uint64_t sub_10092C8A4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100936034(*a1);
  *a2 = result;
  return result;
}

void sub_10092C8CC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1A2A0[*v1];
}

uint64_t sub_10092C8E4()
{
  unsigned __int8 *v0;

  return sub_10092C690(*v0);
}

uint64_t sub_10092C8EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100936058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10092C910()
{
  char *v0;

  return qword_100F1A2A0[*v0];
}

uint64_t sub_10092C928@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100936034(a1);
  *a2 = result;
  return result;
}

void sub_10092C94C(_QWORD *a1@<X8>)
{
  *a1 = &off_101263D80;
}

uint64_t sub_10092C95C(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10092E320, (uint64_t (*)(void))sub_10092E368);
}

uint64_t sub_10092C970(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10092E368();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10092C998(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10092E368();
  return CodingKey.debugDescription.getter(a1, v2);
}

float sub_10092C9C0@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char **v10;
  _QWORD *v11;
  id v12;
  BOOL v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float *v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  Class isa;
  double v55;
  double v56;
  double v57;
  double v58;
  float result;
  float v60;
  float *v61;
  uint64_t v62;
  int *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  _QWORD *v73;
  void *v74;

  v63 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v64 = a1;
  v65 = a2;
  *(_QWORD *)(a2 + v63[7]) = &_swiftEmptyDictionarySingleton;
  v4 = objc_msgSend(a1, "subpaths");
  v5 = sub_1004B8930(0, &qword_1013FAC20, off_1012297D0);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
    goto LABEL_50;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (v7)
  {
    v8 = 0;
    v9 = v6 & 0xC000000000000001;
    v66 = v6 + 32;
    v67 = v6 & 0xFFFFFFFFFFFFFF8;
    v10 = &selRef_masksToBounds;
    v73 = _swiftEmptyArrayStorage;
    v68 = v7;
    v69 = v6;
    v70 = v6 & 0xC000000000000001;
    while (1)
    {
      if (v9)
      {
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
        v13 = __OFADD__(v8++, 1);
        if (v13)
          goto LABEL_47;
      }
      else
      {
        if (v8 >= *(_QWORD *)(v67 + 16))
          goto LABEL_48;
        v12 = *(id *)(v66 + 8 * v8);
        v13 = __OFADD__(v8++, 1);
        if (v13)
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          if (v6 < 0)
            v62 = v6;
          else
            v62 = v6 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v6);
          v7 = _CocoaArrayWrapper.endIndex.getter(v62);
          swift_bridgeObjectRelease(v6);
          goto LABEL_3;
        }
      }
      v74 = v12;
      v14 = objc_msgSend(v12, v10[274]);
      v15 = sub_1004B8930(0, &qword_1013FAC28, off_1012297B8);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

      if ((unint64_t)v16 >> 62)
      {
        v48 = v16 < 0 ? v16 : v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease(v16);
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v16);
      if (v17 > 1)
        break;
LABEL_6:

      if (v8 == v7)
        goto LABEL_46;
    }
    v72 = v74;
    v18 = objc_msgSend(v72, v10[274]);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v15);

    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v49 = v19;
      else
        v49 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v20 = _CocoaArrayWrapper.endIndex.getter(v49);
      swift_bridgeObjectRelease(v19);
      v71 = v8;
      if (v20)
        goto LABEL_18;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      v71 = v8;
      if (v20)
      {
LABEL_18:
        if (v20 < 1)
          goto LABEL_49;
        v21 = 0;
        v22 = _swiftEmptyArrayStorage;
        do
        {
          if ((v19 & 0xC000000000000001) != 0)
            v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
          else
            v23 = *(id *)(v19 + 8 * v21 + 32);
          v24 = v23;
          objc_msgSend(v23, "inControlPoint");
          v26 = v25;
          v28 = v27;
          objc_msgSend(v24, "nodePoint");
          v30 = v29;
          v32 = v31;
          objc_msgSend(v24, "outControlPoint");
          v34 = v33;
          v36 = v35;
          v37 = (unint64_t)objc_msgSend(v24, "type");
          if (v37 >= 5)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 552, "Unknown bezier node type. Falling back to sharp.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 552, (uint64_t)"Unknown bezier node type. Falling back to sharp.", 48, 2u);
            v38 = 0;
          }
          else
          {
            v38 = qword_100F1A2F8[v37];
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
            v22 = sub_100D0FF7C(0, v22[2] + 1, 1, v22);
          v40 = v22[2];
          v39 = v22[3];
          if (v40 >= v39 >> 1)
            v22 = sub_100D0FF7C((_QWORD *)(v39 > 1), v40 + 1, 1, v22);
          ++v21;
          v41 = v26;
          v42 = v28;
          v43 = v30;
          v44 = v32;
          v45 = v34;
          v22[2] = v40 + 1;
          v46 = (float *)&v22[6 * v40];
          v46[8] = v41;
          v46[9] = v42;
          v47 = v36;
          v46[10] = v43;
          v46[11] = v44;
          v46[12] = v45;
          v46[13] = v47;
          *((_QWORD *)v46 + 7) = v38;
          *((_BYTE *)v46 + 64) = 0;
          *((_QWORD *)v46 + 9) = &_swiftEmptyDictionarySingleton;

        }
        while (v20 != v21);
        goto LABEL_41;
      }
    }
    v22 = _swiftEmptyArrayStorage;
LABEL_41:
    v50 = objc_msgSend(v72, "isClosed", swift_bridgeObjectRelease(v19).n128_f64[0]);

    if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
      v73 = sub_100D100A0(0, v73[2] + 1, 1, v73);
    v7 = v68;
    v6 = v69;
    v8 = v71;
    v52 = v73[2];
    v51 = v73[3];
    if (v52 >= v51 >> 1)
      v73 = sub_100D100A0((_QWORD *)(v51 > 1), v52 + 1, 1, v73);
    v73[2] = v52 + 1;
    v11 = &v73[3 * v52];
    v11[4] = v22;
    *((_BYTE *)v11 + 40) = v50;
    v11[6] = &_swiftEmptyDictionarySingleton;
    v9 = v70;
    v10 = &selRef_masksToBounds;
    goto LABEL_6;
  }
  v73 = _swiftEmptyArrayStorage;
LABEL_46:
  swift_bridgeObjectRelease(v6);
  UUID.init()(v53);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v64, "setPersistedUUID:", isa);

  *(_QWORD *)(v65 + v63[5]) = v73;
  objc_msgSend(v64, "naturalSize");
  v56 = v55;
  v58 = v57;

  result = v56;
  v60 = v58;
  v61 = (float *)(v65 + v63[6]);
  *v61 = result;
  v61[1] = v60;
  return result;
}

BOOL sub_10092CFA4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char v29;
  _QWORD v31[2];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v31[0] = (char *)v31 - v10;
  v11 = sub_1004B804C(&qword_1013F7920);
  __chkstk_darwin(v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_opt_self(CRLEditableBezierPathSource);
  v19 = swift_dynamicCastObjCClass(a1, v18);
  if (!v19)
    return 0;
  v20 = (void *)v19;
  v21 = type metadata accessor for CRLPathSourceData(0);
  sub_100935120(v31[1] + *(int *)(v21 + 52), (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v22 = &qword_1013F7920;
    v23 = (uint64_t)v13;
LABEL_10:
    sub_1004CB800(v23, v22);
    return 0;
  }
  sub_100935168((uint64_t)v13, (uint64_t)v17);
  v24 = a1;
  v25 = objc_msgSend(v20, "persistedUUID");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  v26 = v25;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v27 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v27(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:

    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLEditableBezierPathSourceData);
    v22 = (uint64_t *)&unk_1013E1A50;
    v23 = (uint64_t)v4;
    goto LABEL_10;
  }
  v28 = v31[0];
  v27((char *)v31[0], v4, v5);
  v29 = static UUID.== infix(_:_:)(v28);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v28, v5);
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLEditableBezierPathSourceData);
  return (v29 & 1) != 0;
}

uint64_t sub_10092D270(void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  float v9;
  float v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _BOOL4 v17;
  id v18;
  id v19;
  void *v20;
  float v21;
  float v22;
  id v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  _BOOL4 v29;
  id v30;
  unint64_t v31;
  _BYTE v32[128];
  _BYTE v33[48];
  float v34;
  float v35;
  uint64_t v36;
  float v37;
  float v38;
  uint64_t v39;

  sub_1004C4938(v1 + 184, (uint64_t)v32, &qword_1013F6270);
  sub_1004C4938((uint64_t)v32, (uint64_t)v33, &qword_1013F6270);
  if (sub_1007BD0A0((uint64_t)v33) == 1)
    return 0;
  v4 = objc_opt_self(CRLConnectionLinePathSource);
  result = swift_dynamicCastObjCClass(a1, v4);
  if (result)
  {
    v5 = (void *)result;
    v6 = a1;
    v7 = objc_msgSend(v5, "headMagnet");
    if (v7)
    {
      v8 = v7;
      if (v36)
      {
        v9 = v34;
        v10 = v35;
        v11 = objc_msgSend(v7, "magnetType");
        v12 = sub_1004B804C(&qword_1013FAC40);
        CRExtensible.rawValue.getter(&v31, v12);
        if ((v31 & 0x8000000000000000) != 0 || v11 != (id)v31)
        {

          v17 = 0;
        }
        else
        {
          objc_msgSend(v8, "magnetNormalizedPosition");
          v14 = v13;
          v16 = v15;

          v17 = sub_10005FDF0(v14, v16, v9, v10);
        }
LABEL_14:
        v19 = objc_msgSend(v5, "tailMagnet");
        if (v19)
        {
          v20 = v19;
          if (v39)
          {
            v21 = v37;
            v22 = v38;
            v23 = objc_msgSend(v19, "magnetType", swift_bridgeObjectRetain(v39).n128_f64[0]);
            v24 = sub_1004B804C(&qword_1013FAC40);
            CRExtensible.rawValue.getter(&v31, v24);
            if ((v31 & 0x8000000000000000) != 0 || v23 != (id)v31)
            {
              swift_bridgeObjectRelease();

              v29 = 0;
            }
            else
            {
              objc_msgSend(v20, "magnetNormalizedPosition");
              v26 = v25;
              v28 = v27;
              swift_bridgeObjectRelease();

              v29 = sub_10005FDF0(v26, v28, v21, v22);
            }
            return v17 & v29;
          }

        }
        v30 = objc_msgSend(v5, "tailMagnet");

        if (v30)
          v29 = 0;
        else
          v29 = v39 == 0;
        return v17 & v29;
      }

    }
    v18 = objc_msgSend(v5, "headMagnet");

    if (v18)
      v17 = 0;
    else
      v17 = v36 == 0;
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_10092D53C(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  char v38;
  _QWORD v39[16];
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  _OWORD v44[2];
  uint64_t v45;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FABF0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10092E368();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLPathSourceData.CodingKeys, &type metadata for CRLPathSourceData.CodingKeys, v11, v9, v10);
  v12 = *v3;
  LOBYTE(v40) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v40, v5);
  if (!v2)
  {
    v13 = v3[1];
    LOBYTE(v40) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, &v40, v5);
    v14 = *((_QWORD *)v3 + 1);
    v15 = *((_QWORD *)v3 + 2);
    LOBYTE(v40) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v14, v15, &v40, v5);
    v16 = *((_QWORD *)v3 + 3);
    v17 = *((_QWORD *)v3 + 4);
    LOBYTE(v40) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v40, v5);
    v18 = *((_QWORD *)v3 + 9);
    v19 = *(_OWORD *)(v3 + 56);
    v40 = *(_OWORD *)(v3 + 40);
    v41 = v19;
    v42 = v18;
    LOBYTE(v39[0]) = 4;
    v20 = sub_1009392FC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v40, v39, v5, &type metadata for CRLPointPathSourceData, v20);
    v21 = *((_QWORD *)v3 + 14);
    v22 = *((_OWORD *)v3 + 6);
    v40 = *((_OWORD *)v3 + 5);
    v41 = v22;
    v42 = v21;
    LOBYTE(v39[0]) = 5;
    v23 = sub_100939340();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v40, v39, v5, &type metadata for CRLScalarPathSourceData, v23);
    v24 = *((_QWORD *)v3 + 17);
    v40 = *(_OWORD *)(v3 + 120);
    *(_QWORD *)&v41 = v24;
    LOBYTE(v39[0]) = 6;
    v25 = sub_100932460();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v40, v39, v5, &type metadata for CRLBezierPathSourceData, v25);
    v26 = *((_QWORD *)v3 + 22);
    v27 = *((_OWORD *)v3 + 10);
    v44[0] = *((_OWORD *)v3 + 9);
    v44[1] = v27;
    v45 = v26;
    v43 = 7;
    v28 = sub_100939384();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v44, &v43, v5, &type metadata for CRLCalloutPathSourceData, v28);
    sub_1004C4938((uint64_t)(v3 + 184), (uint64_t)&v40, &qword_1013F6270);
    sub_1004C4938((uint64_t)&v40, (uint64_t)v39, &qword_1013F6270);
    v38 = 8;
    v29 = sub_100933BB4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v39, &v38, v5, &type metadata for CRLConnectionLinePathSourceData, v29);
    v30 = type metadata accessor for CRLPathSourceData(0);
    v31 = &v3[*(int *)(v30 + 52)];
    LOBYTE(v39[0]) = 9;
    v32 = type metadata accessor for CRLEditableBezierPathSourceData(0);
    v33 = sub_1004B7878(&qword_1013FA9A0, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17710);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v31, v39, v5, v32, v33);
    v39[0] = *(_QWORD *)&v3[*(int *)(v30 + 56)];
    v38 = 10;
    v34 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v35 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v39, &v38, v5, v34, v35);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10092D8F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  uint64_t v46;
  _BYTE v47[135];
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;

  v40 = a2;
  v4 = sub_1004B804C(&qword_1013F7920);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1004B804C(&qword_1013FABD0);
  v7 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v12 + 15) = 0;
  *((_QWORD *)v12 + 16) = 0;
  *((_QWORD *)v12 + 17) = 0;
  v43 = v13;
  v52 = *(int *)(v13 + 56);
  *(_QWORD *)&v12[v52] = _swiftEmptyDictionarySingleton;
  v14 = a1[3];
  v15 = a1[4];
  v44 = a1;
  sub_1004BB5A4(a1, v14);
  v16 = sub_10092E368();
  v41 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLPathSourceData.CodingKeys, &type metadata for CRLPathSourceData.CodingKeys, v16, v14, v15);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v44);
    sub_1004C36BC(*((_QWORD *)v12 + 15), *((_QWORD *)v12 + 16), *((_QWORD *)v12 + 17));
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = v6;
    LOBYTE(v49) = 0;
    v17 = v42;
    *v12 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v42) & 1;
    LOBYTE(v49) = 1;
    v12[1] = KeyedDecodingContainer.decode(_:forKey:)(&v49, v17) & 1;
    LOBYTE(v49) = 2;
    *((_QWORD *)v12 + 1) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v49, v17);
    *((_QWORD *)v12 + 2) = v18;
    LOBYTE(v49) = 3;
    *((_QWORD *)v12 + 3) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v49, v17);
    *((_QWORD *)v12 + 4) = v19;
    v47[0] = 4;
    v20 = sub_100939230();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLPointPathSourceData, v47, v17, &type metadata for CRLPointPathSourceData, v20);
    v21 = v51;
    v22 = v50;
    *(_OWORD *)(v12 + 40) = v49;
    *(_OWORD *)(v12 + 56) = v22;
    *((_QWORD *)v12 + 9) = v21;
    v47[0] = 5;
    v23 = sub_100939274();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLScalarPathSourceData, v47, v17, &type metadata for CRLScalarPathSourceData, v23);
    v24 = v51;
    v25 = v50;
    *((_OWORD *)v12 + 5) = v49;
    *((_OWORD *)v12 + 6) = v25;
    *((_QWORD *)v12 + 14) = v24;
    v47[0] = 6;
    v26 = sub_100932418();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLBezierPathSourceData, v47, v17, &type metadata for CRLBezierPathSourceData, v26);
    v27 = v50;
    *(_OWORD *)(v12 + 120) = v49;
    *((_QWORD *)v12 + 17) = v27;
    v47[0] = 7;
    v28 = sub_1009392B8();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLCalloutPathSourceData, v47, v17, &type metadata for CRLCalloutPathSourceData, v28);
    v29 = v51;
    v30 = v50;
    *((_OWORD *)v12 + 9) = v49;
    *((_OWORD *)v12 + 10) = v30;
    *((_QWORD *)v12 + 22) = v29;
    v48 = 8;
    v31 = sub_100933B6C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLConnectionLinePathSourceData, &v48, v17, &type metadata for CRLConnectionLinePathSourceData, v31);
    sub_1004C4938((uint64_t)&v49, (uint64_t)v47, &qword_1013F6270);
    sub_1004C4938((uint64_t)v47, (uint64_t)(v12 + 184), &qword_1013F6270);
    v32 = type metadata accessor for CRLEditableBezierPathSourceData(0);
    LOBYTE(v46) = 9;
    v33 = sub_1004B7878(&qword_1013FA998, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17738);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v32, &v46, v17, v32, v33);
    sub_1004C4938((uint64_t)v39, (uint64_t)&v12[*(int *)(v43 + 52)], &qword_1013F7920);
    v34 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v45 = 10;
    v35 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v34, &v45, v42, v34, v35);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v42);
    v36 = v46;
    v37 = v52;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v12[v37] = v36;
    sub_1004B8460((uint64_t)v12, v40, type metadata accessor for CRLPathSourceData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v44);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLPathSourceData);
  }
}

void sub_10092DF3C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10092D8F0(a1, a2);
}

uint64_t sub_10092DF50(_QWORD *a1)
{
  return sub_10092D53C(a1);
}

uint64_t sub_10092DF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FAC10, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17628);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10092DFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013FA930, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17448);
  v7 = sub_1004B7878(&qword_1013FAC18, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17600);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10092E050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FAC10, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17628);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10092E0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FA978, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17480);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_10092E104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FA978, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17480);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_10092E160(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013FA978, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17480);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10092E1B0()
{
  return sub_1004B7878(&qword_1013FA920, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17350);
}

uint64_t sub_10092E1DC()
{
  return sub_1004B7878(&qword_1013FA928, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17398);
}

uint64_t sub_10092E208()
{
  return sub_1004B7878(&qword_1013FA930, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17448);
}

uint64_t sub_10092E234()
{
  return sub_1004B7878(&qword_1013F7A38, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17420);
}

uint64_t sub_10092E260()
{
  return sub_1004B7878(&qword_1013F7A48, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F173F8);
}

unint64_t sub_10092E290()
{
  unint64_t result;

  result = qword_1013FA938;
  if (!qword_1013FA938)
  {
    result = swift_getWitnessTable(&unk_100F174C8, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA938);
  }
  return result;
}

unint64_t sub_10092E2D8()
{
  unint64_t result;

  result = qword_1013FA940;
  if (!qword_1013FA940)
  {
    result = swift_getWitnessTable(&unk_100F175D8, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA940);
  }
  return result;
}

unint64_t sub_10092E320()
{
  unint64_t result;

  result = qword_1013FA948;
  if (!qword_1013FA948)
  {
    result = swift_getWitnessTable(&unk_100F175A0, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA948);
  }
  return result;
}

unint64_t sub_10092E368()
{
  unint64_t result;

  result = qword_1013FA950;
  if (!qword_1013FA950)
  {
    result = swift_getWitnessTable(&unk_100F17500, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA950);
  }
  return result;
}

unint64_t sub_10092E3B0()
{
  unint64_t result;

  result = qword_1013FA958;
  if (!qword_1013FA958)
  {
    result = swift_getWitnessTable(&unk_100F17578, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA958);
  }
  return result;
}

unint64_t sub_10092E3F8()
{
  unint64_t result;

  result = qword_1013FA960;
  if (!qword_1013FA960)
  {
    result = swift_getWitnessTable(&unk_100F17550, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA960);
  }
  return result;
}

uint64_t sub_10092E43C()
{
  return sub_1006047EC(&qword_1013FA968, &qword_1013FA970);
}

uint64_t sub_10092E460()
{
  return sub_1004B7878(&qword_1013FA978, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17480);
}

id sub_10092E48C(float *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  objc_class *ObjCClassFromMetadata;
  _BYTE v7[16];
  _BYTE v8[16];

  sub_1004C4938((uint64_t)a1, (uint64_t)v7, &qword_1013FAAD8);
  sub_1004C4938((uint64_t)v7, (uint64_t)v8, &qword_1013FAAD8);
  if ((v8[8] & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 317, "Unknown point path source type. Falling back to left single arrow.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 317, (uint64_t)"Unknown point path source type. Falling back to left single arrow.", 66, 2u);
    v4 = 0;
  }
  else
  {
    v4 = qword_100F1A320[v8[0]];
  }
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v1, v3);
  sub_100939404((uint64_t)a1);
  return objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithType:point:naturalSize:", v4, a1[3], a1[4], a1[5], a1[6]);
}

id sub_10092E5D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  _BYTE v9[16];
  _BYTE v10[16];

  sub_1004C4938(a1, (uint64_t)v9, &qword_1013FAAE8);
  sub_1004C4938((uint64_t)v9, (uint64_t)v10, &qword_1013FAAE8);
  if ((v10[8] & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 396, "Unknown scalar path source type. Falling back to rounded rectangle.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 396, (uint64_t)"Unknown scalar path source type. Falling back to rounded rectangle.", 67, 2u);
    v4 = 0;
  }
  else
  {
    v4 = v10[0];
  }
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1, v3)), "initWithType:scalar:naturalSize:continuousCurve:", v4, *(unsigned __int8 *)(a1 + 24), *(float *)(a1 + 12), *(float *)(a1 + 16), *(float *)(a1 + 20));
  v6 = *(unsigned __int8 *)(a1 + 25);
  v7 = v5;
  objc_msgSend(v7, "setShouldShowKnob:", v6);
  sub_100939404(a1);

  return v7;
}

uint64_t sub_10092E734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t result;
  int v18;
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[32];
  _BYTE v22[32];
  _BYTE v23[16];
  _BYTE v24[16];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[16];
  _BYTE v34[16];

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2, a2));
  sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
  v5 = swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
  v7 = sub_100942548(v5, v6);
  v8 = objc_msgSend(v4, "initWithBezierPath:", v7);

  if (!v8)
  {
    sub_100938F64((_QWORD *)a1);
    return (uint64_t)v8;
  }

  sub_1004C4938(a1, (uint64_t)v23, &qword_1013FAAF8);
  sub_1004C4938((uint64_t)v23, (uint64_t)v24, &qword_1013FAAF8);
  if ((v24[8] & 1) != 0)
  {
    v9 = v8;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 794, "Unknown connection line path source type. Falling back to quadratic.", 68, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 794, (uint64_t)"Unknown connection line path source type. Falling back to quadratic.", 68, 2u);
    v10 = 0;
  }
  else
  {
    v10 = v24[0];
    v11 = v8;
  }
  objc_msgSend(v8, "setType:", v10);
  objc_msgSend(v8, "setOutsetTo:", *(float *)(a1 + 44));
  objc_msgSend(v8, "setOutsetFrom:", *(float *)(a1 + 40));
  sub_1004C4938(a1 + 48, (uint64_t)v22, &qword_1013FAB38);
  sub_1004C4938((uint64_t)v22, (uint64_t)&v25, &qword_1013FAB38);
  if (*((_QWORD *)&v26 + 1))
  {
    v27 = v25;
    v28 = v26;
    sub_1004C4938((uint64_t)&v27, (uint64_t)v34, &qword_1013FAC40);
    sub_1004C4938((uint64_t)v34, (uint64_t)&v31, &qword_1013FAC40);
    v12 = sub_1004B804C(&qword_1013FAC40);
    CRExtensible.rawValue.getter(&v29, v12);
    if ((v29 & 0x8000000000000000) != 0)
      goto LABEL_18;
    v13 = objc_msgSend(objc_allocWithZone((Class)CRLConnectionLineMagnet), "initWithType:normalizedPosition:", (_QWORD)v29, *((float *)&v27 + 3), *(float *)&v28);
    objc_msgSend(v8, "setHeadMagnet:", v13);

  }
  else
  {
    objc_msgSend(v8, "setHeadMagnet:", 0);
  }
  sub_1004C4938(a1 + 80, (uint64_t)v21, &qword_1013FAB38);
  sub_1004C4938((uint64_t)v21, (uint64_t)&v29, &qword_1013FAB38);
  if (!*((_QWORD *)&v30 + 1))
  {
    objc_msgSend(v8, "setTailMagnet:", 0);
    sub_100938F64((_QWORD *)a1);
    sub_1004C4938(a1 + 112, (uint64_t)v33, &qword_1013EFCA0);
    sub_1004C4938((uint64_t)v33, (uint64_t)&v31, &qword_1013EFCA0);
    v16 = v31;
    if (v31 == 2)
      goto LABEL_13;
    goto LABEL_15;
  }
  v31 = v29;
  v32 = v30;
  sub_1004C4938((uint64_t)&v31, (uint64_t)v33, &qword_1013FAC40);
  sub_1004C4938((uint64_t)v33, (uint64_t)v19, &qword_1013FAC40);
  v14 = sub_1004B804C(&qword_1013FAC40);
  CRExtensible.rawValue.getter(&v20, v14);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)CRLConnectionLineMagnet), "initWithType:normalizedPosition:", v20, *((float *)&v31 + 3), *(float *)&v32);
    objc_msgSend(v8, "setTailMagnet:", v15);

    sub_100938F64((_QWORD *)a1);
    sub_1004C4938(a1 + 112, (uint64_t)&v20, &qword_1013EFCA0);
    sub_1004C4938((uint64_t)&v20, (uint64_t)v19, &qword_1013EFCA0);
    v16 = v19[0];
    if (v19[0] == 2)
    {
LABEL_13:
      objc_msgSend(v8, "setUserDidSetControlPoint:", 1);
LABEL_16:

      return (uint64_t)v8;
    }
LABEL_15:
    objc_msgSend(v8, "setUserDidSetControlPoint:", v16 & 1);
    goto LABEL_16;
  }
LABEL_18:
  LOBYTE(v18) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v18, 3451, 0);
  __break(1u);
  return result;
}

id sub_10092EBB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  Class isa;
  NSArray v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;

  v2 = v1;
  v5 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  v6 = *(_QWORD *)(a1 + *(int *)(v5 + 20));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    sub_1004B8930(0, &qword_1013FAC20, off_1012297D0);
    swift_bridgeObjectRetain(v6);
    v8 = (uint64_t *)(v6 + 48);
    do
    {
      v9 = *(v8 - 2);
      v10 = *((unsigned __int8 *)v8 - 8);
      v11 = *v8;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v11);
      v12 = sub_1009326C0(v9, v10, v11);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v14 >= v13 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
      v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized Array._endMutation()(v15);
      v8 += 3;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(v6);
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2, v4)), "init");
  isa = UUID._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setPersistedUUID:", isa);

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v19 = _swiftEmptyArrayStorage;
    else
      v19 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v20)
      goto LABEL_9;
LABEL_14:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v21 = objc_msgSend(objc_allocWithZone((Class)CRLBezierSubpath), "init");
    v22 = objc_msgSend((id)objc_opt_self(CRLBezierNode), "bezierNodeWithPoint:", 0.0, 0.0);
    objc_msgSend(v21, "addNode:", v22);

    v23 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v24 = swift_allocObject(v23, 40, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v24 + 32) = v21;
    v27 = v24;
    specialized Array._endMutation()(v24);
    sub_1004B8930(0, &qword_1013FAC20, off_1012297D0);
    v25 = v21;
    v18.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "setSubpaths:", v18.super.isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

    goto LABEL_15;
  }
  if (!*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_9:
  sub_1004B8930(0, &qword_1013FAC20, off_1012297D0);
  v18.super.isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setSubpaths:", v18.super.isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);
LABEL_15:

  objc_msgSend(v16, "setNaturalSize:", *(float *)(a1 + *(int *)(v5 + 24)), *(float *)(a1 + *(int *)(v5 + 24) + 4));
  sub_1004B84A4(a1, type metadata accessor for CRLEditableBezierPathSourceData);
  return v16;
}

unint64_t sub_10092EEE4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1009364F0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10092EF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100935208();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10092EF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100935208();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10092EFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093B8A8, (uint64_t (*)(void))sub_10093B0A0);
}

uint64_t sub_10092EFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_10093B8A8, (uint64_t (*)(void))sub_100935208);
}

uint64_t sub_10092EFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_10093B8A8, (uint64_t (*)(void))sub_100935208);
}

uint64_t sub_10092F010(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_10093B8A8, (uint64_t (*)(void))sub_100935208);
}

BOOL sub_10092F024(char *a1, char *a2)
{
  return qword_100F1A3A0[*a1] == qword_100F1A3A0[*a2];
}

Swift::Int sub_10092F048()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1A3A0[v1]);
  return Hasher._finalize()();
}

void sub_10092F094()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1A3A0[*v0]);
}

Swift::Int sub_10092F0C8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1A3A0[v2]);
  return Hasher._finalize()();
}

void sub_10092F110(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1A3A0[*v1];
}

uint64_t sub_10092F128()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10092F150 + 4 * byte_100F171CB[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_10092F150()
{
  return 0x746E696F70;
}

uint64_t sub_10092F164()
{
  return 0x536C61727574616ELL;
}

unint64_t sub_10092F184()
{
  return 0xD000000000000010;
}

uint64_t sub_10092F1A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100936500(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10092F1C4()
{
  char *v0;

  return qword_100F1A3A0[*v0];
}

void sub_10092F1DC(_QWORD *a1@<X8>)
{
  *a1 = &off_101264060;
}

uint64_t sub_10092F1EC(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10093A09C, (uint64_t (*)(void))sub_10093A0E4);
}

uint64_t sub_10092F200(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A0E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10092F228(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A0E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10092F254(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  _QWORD v21[2];
  _BYTE v22[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FAFA0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093A0E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLPointPathSourceData.CodingKeys, &type metadata for CRLPointPathSourceData.CodingKeys, v11, v9, v10);
  sub_1004C4938((uint64_t)v3, (uint64_t)v22, &qword_1013FAAD8);
  sub_1004C4938((uint64_t)v22, (uint64_t)v21, &qword_1013FAAD8);
  v20 = 0;
  v12 = sub_1004B804C(&qword_1013FAAD8);
  v13 = sub_1008C2438(&qword_1013FAFA8, &qword_1013FAAD8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v20, v5, v12, v13);
  if (!v2)
  {
    v21[0] = *(_QWORD *)((char *)v3 + 12);
    v20 = 1;
    v14 = sub_100786B14();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v20, v5, &type metadata for CRLPointData, v14);
    v21[0] = *(_QWORD *)((char *)v3 + 20);
    v20 = 2;
    v15 = sub_1009390DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v20, v5, &type metadata for CRLSizeData, v15);
    v21[0] = v3[4];
    v20 = 3;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v17 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v20, v5, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10092F460()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10092F468(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10092F490())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10092F4A0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_10092F250(v5, v7) & 1;
}

double sub_10092F4E8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1009366B4(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10092F52C(_QWORD *a1)
{
  return sub_10092F254(a1);
}

uint64_t sub_10092F564(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093BB50();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10092F5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_100939FBC, (uint64_t (*)(void))sub_10093BB94);
}

uint64_t sub_10092F5B8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093BB50();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10092F5F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093A1E0();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_10092F63C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093A1E0();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_10092F680(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A1E0();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10092F6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10093524C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10092F714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10093524C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10092F760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093B864, (uint64_t (*)(void))sub_10093B178);
}

uint64_t sub_10092F774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_10093B864, (uint64_t (*)(void))sub_10093524C);
}

uint64_t sub_10092F798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_10093B864, (uint64_t (*)(void))sub_10093524C);
}

uint64_t sub_10092F7BC(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_10093B864, (uint64_t (*)(void))sub_10093524C);
}

uint64_t sub_10092F7D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10092F7FC + 4 * byte_100F171CF[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_10092F7FC()
{
  return 0x72616C616373;
}

uint64_t sub_10092F810()
{
  return 0x536C61727574616ELL;
}

unint64_t sub_10092F830()
{
  return 0xD000000000000011;
}

uint64_t sub_10092F850()
{
  return 0x6853646C756F6873;
}

unint64_t sub_10092F874()
{
  return 0xD000000000000010;
}

BOOL sub_10092F890(char *a1, char *a2)
{
  return qword_100F1A348[*a1] == qword_100F1A348[*a2];
}

Swift::Int sub_10092F8B4()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1A348[v1]);
  return Hasher._finalize()();
}

void sub_10092F900()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1A348[*v0]);
}

Swift::Int sub_10092F934(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1A348[v2]);
  return Hasher._finalize()();
}

void sub_10092F97C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1A348[*v1];
}

uint64_t sub_10092F994()
{
  unsigned __int8 *v0;

  return sub_10092F7D0(*v0);
}

uint64_t sub_10092F99C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100936904(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10092F9C0()
{
  char *v0;

  return qword_100F1A348[*v0];
}

void sub_10092F9D8(_QWORD *a1@<X8>)
{
  *a1 = &off_101264140;
}

uint64_t sub_10092F9E8(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10093A398, (uint64_t (*)(void))sub_10093A3E0);
}

uint64_t sub_10092F9FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A3E0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10092FA24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A3E0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10092FA50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[2];
  _BYTE v24[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FAFB0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093A3E0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLScalarPathSourceData.CodingKeys, &type metadata for CRLScalarPathSourceData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v24, &qword_1013FAAE8);
  sub_1004C4938((uint64_t)v24, (uint64_t)v23, &qword_1013FAAE8);
  v22 = 0;
  v12 = sub_1004B804C(&qword_1013FAAE8);
  v13 = sub_1008C2438(&qword_1013FAFB8, &qword_1013FAAE8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v23, &v22, v5, v12, v13);
  if (!v2)
  {
    v14 = *(float *)(v3 + 12);
    LOBYTE(v23[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v23, v5, v14);
    v23[0] = *(_QWORD *)(v3 + 16);
    v22 = 2;
    v15 = sub_1009390DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v23, &v22, v5, &type metadata for CRLSizeData, v15);
    v16 = *(unsigned __int8 *)(v3 + 24);
    LOBYTE(v23[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v23, v5);
    v17 = *(unsigned __int8 *)(v3 + 25);
    LOBYTE(v23[0]) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v17, v23, v5);
    v23[0] = *(_QWORD *)(v3 + 32);
    v22 = 5;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v23, &v22, v5, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10092FC94(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_10092FA4C(v5, v7) & 1;
}

double sub_10092FCDC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_100936B9C(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10092FD20(_QWORD *a1)
{
  return sub_10092FA50(a1);
}

uint64_t sub_10092FD58(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093BAC8();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10092FD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093A2B8, (uint64_t (*)(void))sub_10093BB0C);
}

uint64_t sub_10092FDAC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093BAC8();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10092FDE4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093A4DC();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_10092FE30(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093A4DC();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_10092FE74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A4DC();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10092FEB0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  float v13;
  float v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FAFC0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093A6DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLCalloutPathSourceData.CodingKeys, &type metadata for CRLCalloutPathSourceData.CodingKeys, v11, v9, v10);
  v21 = *v3;
  HIBYTE(v20) = 0;
  v12 = sub_100786B14();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, (char *)&v20 + 7, v5, &type metadata for CRLPointData, v12);
  if (!v2)
  {
    v13 = *((float *)v3 + 2);
    LOBYTE(v21) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(&v21, v5, v13);
    v14 = *((float *)v3 + 3);
    LOBYTE(v21) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v21, v5, v14);
    v15 = *((unsigned __int8 *)v3 + 16);
    LOBYTE(v21) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v21, v5);
    v21 = *(uint64_t *)((char *)v3 + 20);
    HIBYTE(v20) = 4;
    v16 = sub_1009390DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, (char *)&v20 + 7, v5, &type metadata for CRLSizeData, v16);
    v21 = v3[4];
    HIBYTE(v20) = 5;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, (char *)&v20 + 7, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1009300B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1009300F0 + 4 * byte_100F171D5[*v0]))(0x69736F506C696174, 0xEC0000006E6F6974);
}

uint64_t sub_1009300F0()
{
  return 0x657A69536C696174;
}

uint64_t sub_100930108()
{
  return 0x615272656E726F63;
}

uint64_t sub_100930128()
{
  return 0x61547265746E6563;
}

uint64_t sub_100930144()
{
  return 0x536C61727574616ELL;
}

unint64_t sub_100930164()
{
  return 0xD000000000000010;
}

uint64_t sub_100930180@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100936E74(a1, a2);
  *a3 = result;
  return result;
}

void sub_1009301A4(_QWORD *a1@<X8>)
{
  *a1 = &off_1012641B8;
}

uint64_t sub_1009301B4(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10093A694, (uint64_t (*)(void))sub_10093A6DC);
}

uint64_t sub_1009301C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A6DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009301F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A6DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100930218(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_10092FEAC(v5, v7) & 1;
}

double sub_100930260@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_100937144(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1009302A4(_QWORD *a1)
{
  return sub_10092FEB0(a1);
}

uint64_t sub_1009302B8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093BA40();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1009302F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093A5B4, (uint64_t (*)(void))sub_10093BA84);
}

uint64_t sub_10093030C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093BA40();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100930344(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093A7D8();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100930390(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093A7D8();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1009303D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A7D8();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10093040C(_QWORD *a1, unint64_t a2, unint64_t a3, float a4, float a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  char v24;
  unint64_t v25;

  v11 = sub_1004B804C(&qword_1013FAB68);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  sub_1004BB5A4(a1, v15);
  v17 = sub_100932580();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBezierPathSourceData.CodingKeys, &type metadata for CRLBezierPathSourceData.CodingKeys, v17, v15, v16);
  v25 = a2;
  v24 = 0;
  v18 = sub_100786A6C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v24, v11, &type metadata for CRLBezierPathData, v18);
  if (!v5)
  {
    v25 = __PAIR64__(LODWORD(a5), LODWORD(a4));
    v24 = 1;
    v19 = sub_1009390DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v24, v11, &type metadata for CRLSizeData, v19);
    v25 = a3;
    v24 = 2;
    v20 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v21 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v24, v11, v20, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

BOOL sub_1009305AC(char *a1, char *a2)
{
  return qword_100F1A3C0[*a1] == qword_100F1A3C0[*a2];
}

Swift::Int sub_1009305D0()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1A3C0[v1]);
  return Hasher._finalize()();
}

void sub_10093061C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1A3C0[*v0]);
}

Swift::Int sub_100930650(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1A3C0[v2]);
  return Hasher._finalize()();
}

void sub_100930698(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1A3C0[*v1];
}

uint64_t sub_1009306B0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x536C61727574616ELL;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x61507265697A6562;
}

uint64_t sub_100930724@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1009373D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100930748()
{
  char *v0;

  return qword_100F1A3C0[*v0];
}

void sub_100930760(_QWORD *a1@<X8>)
{
  *a1 = &off_101264118;
}

uint64_t sub_100930770(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_100932538, (uint64_t (*)(void))sub_100932580);
}

uint64_t sub_100930784(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100932580();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009307AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100932580();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009307D4(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;
  uint64_t v4;
  float v5;
  float v6;
  uint64_t v7;
  BOOL v8;

  v2 = *(float *)(a1 + 8);
  v3 = *(float *)(a1 + 12);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(float *)(a2 + 8);
  v6 = *(float *)(a2 + 12);
  v7 = *(_QWORD *)(a2 + 16);
  if ((sub_100544C38(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0 && (v2 == v5 ? (v8 = v3 == v6) : (v8 = 0), v8))
    return sub_100C9E04C(v4, v7);
  else
    return 0;
}

void sub_100930850(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  float v6;
  int v7;

  v6 = sub_100937564(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(float *)(a2 + 8) = v6;
    *(_DWORD *)(a2 + 12) = v7;
    *(_QWORD *)(a2 + 16) = v5;
  }
}

uint64_t sub_100930880(_QWORD *a1)
{
  uint64_t v1;

  return sub_10093040C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 16), *(float *)(v1 + 8), *(float *)(v1 + 12));
}

uint64_t sub_1009308A0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100939120();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1009308E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1009323D0, (uint64_t (*)(void))sub_100939164);
}

uint64_t sub_1009308F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100939120();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10093092C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093267C();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100930978(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093267C();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1009309BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093267C();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1009309F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10054F0FC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100930A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10054F0FC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100930A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093B7DC, (uint64_t (*)(void))sub_10093B328);
}

uint64_t sub_100930AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_10093B7DC, (uint64_t (*)(void))sub_10054F0FC);
}

uint64_t sub_100930AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_10093B7DC, (uint64_t (*)(void))sub_10054F0FC);
}

uint64_t sub_100930AF8(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_10093B7DC, (uint64_t (*)(void))sub_10054F0FC);
}

BOOL sub_100930B0C(char *a1, char *a2)
{
  return qword_100F1A378[*a1] == qword_100F1A378[*a2];
}

Swift::Int sub_100930B30()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1A378[v1]);
  return Hasher._finalize()();
}

void sub_100930B7C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1A378[*v0]);
}

Swift::Int sub_100930BB0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1A378[v2]);
  return Hasher._finalize()();
}

void sub_100930BF8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1A378[*v1];
}

uint64_t sub_100930C10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100930C4C + 4 * byte_100F171DB[*v0]))(0x6F72746E6F436E69, 0xEE00746E696F506CLL);
}

uint64_t sub_100930C4C()
{
  return 0x6E696F5065646F6ELL;
}

uint64_t sub_100930C68()
{
  return 0x72746E6F4374756FLL;
}

uint64_t sub_100930C8C()
{
  return 1701869940;
}

unint64_t sub_100930C9C()
{
  return 0xD000000000000010;
}

uint64_t sub_100930CB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100937790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100930CDC()
{
  char *v0;

  return qword_100F1A378[*v0];
}

void sub_100930CF4(_QWORD *a1@<X8>)
{
  *a1 = &off_1012643F0;
}

uint64_t sub_100930D04(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10093B568, (uint64_t (*)(void))sub_10093B5B0);
}

uint64_t sub_100930D18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093B5B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100930D40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093B5B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100930D68(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char v19;
  _BYTE v20[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FAFD8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093B5B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys, v11, v9, v10);
  v18 = *v3;
  v19 = 0;
  v12 = sub_100786B14();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v5, &type metadata for CRLPointData, v12);
  if (!v2)
  {
    v18 = v3[1];
    v19 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v5, &type metadata for CRLPointData, v12);
    v18 = v3[2];
    v19 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v5, &type metadata for CRLPointData, v12);
    sub_1004C4938((uint64_t)(v3 + 3), (uint64_t)v20, &qword_1013FAB08);
    sub_1004C4938((uint64_t)v20, (uint64_t)&v18, &qword_1013FAB08);
    v19 = 3;
    v13 = sub_1004B804C(&qword_1013FAB08);
    v14 = sub_1008C2438(&qword_1013FAFE0, &qword_1013FAB08, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v5, v13, v14);
    v18 = v3[5];
    v19 = 4;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v16 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v5, v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100930FB0()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
}

uint64_t sub_100930FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100930FE0())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100930FF0(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100933F28((uint64_t)v7, (uint64_t)v8) & 1;
}

double sub_100931034@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1009379EC(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100931074(_QWORD *a1)
{
  return sub_100930D68(a1);
}

uint64_t sub_1009310AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B754();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1009310EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10093B400();
  v7 = sub_10093B798();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100931148(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B754();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100931180(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B6AC();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1009311CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B6AC();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100931210(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093B6AC();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100931248()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6465736F6C63;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x7365646F6ELL;
}

uint64_t sub_1009312A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100937CA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1009312C4(_QWORD *a1@<X8>)
{
  *a1 = &off_101264418;
}

uint64_t sub_1009312D4(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10093A990, (uint64_t (*)(void))sub_10093A9D8);
}

uint64_t sub_1009312E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A9D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100931310(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093A9D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100931338(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;

  v21 = a3;
  v8 = sub_1004B804C(&qword_1013FAF68);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v12);
  v14 = sub_10093A9D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys, v14, v12, v13);
  v23 = a2;
  v22 = 0;
  v15 = sub_1004B804C(&qword_1013FAF58);
  v16 = sub_10093B6F0(&qword_1013FAF70, &qword_1013FAF58, (void (*)(void))sub_10093B490, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v8, v15, v16);
  if (!v4)
  {
    LOBYTE(v23) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v21 & 1, &v23, v8);
    v23 = a4;
    v22 = 2;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v8, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1009314E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FABA8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100932218();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLEditableBezierPathSourceData.CodingKeys, &type metadata for CRLEditableBezierPathSourceData.CodingKeys, v11, v9, v10);
  LOBYTE(v22) = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v22, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    v22 = *(_QWORD *)(v3 + v14[5]);
    HIBYTE(v21) = 1;
    v15 = sub_1004B804C(&qword_1013FAB90);
    v16 = sub_10093B6F0(&qword_1013FABB0, &qword_1013FAB90, (void (*)(void))sub_1009391EC, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, (char *)&v21 + 7, v5, v15, v16);
    v22 = *(_QWORD *)(v3 + v14[6]);
    HIBYTE(v21) = 2;
    v17 = sub_1009390DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, (char *)&v21 + 7, v5, &type metadata for CRLSizeData, v17);
    v22 = *(_QWORD *)(v3 + v14[7]);
    HIBYTE(v21) = 3;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, (char *)&v21 + 7, v5, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100931714(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  char v36;
  uint64_t v37;

  v29 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v30 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1004B804C(&qword_1013FAB88);
  __chkstk_darwin(v31);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  __chkstk_darwin(v8);
  v33 = *(int *)(v10 + 28);
  v35 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v35[v33] = _swiftEmptyDictionarySingleton;
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_100932218();
  v32 = v7;
  v14 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLEditableBezierPathSourceData.CodingKeys, &type metadata for CRLEditableBezierPathSourceData.CodingKeys, v13, v11, v12);
  if (v14)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = a1;
    LOBYTE(v37) = 0;
    v15 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = v30;
    v17 = v31;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v3, &v37, v31, v3, v15);
    v28[1] = v4;
    v18 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v19 = (uint64_t)v35;
    v18(v35, v16, v3);
    v20 = sub_1004B804C(&qword_1013FAB90);
    v36 = 1;
    v21 = sub_10093B6F0(&qword_1013FAB98, &qword_1013FAB90, (void (*)(void))sub_1009391A8, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v22 = v32;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v36, v17, v20, v21);
    *(_QWORD *)(v19 + *(int *)(v8 + 20)) = v37;
    v36 = 2;
    v23 = sub_100939098();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSizeData, &v36, v17, &type metadata for CRLSizeData, v23);
    *(_QWORD *)(v19 + *(int *)(v8 + 24)) = v37;
    v24 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v36 = 3;
    v25 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v24, &v36, v17, v24, v25);
    MEMORY[8](v22, v17);
    v26 = v37;
    v27 = v33;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v19 + v27) = v26;
    sub_1004B8460(v19, v29, type metadata accessor for CRLEditableBezierPathSourceData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
    sub_1004B84A4(v19, type metadata accessor for CRLEditableBezierPathSourceData);
  }
}

uint64_t sub_100931AC0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_10054270C(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0 || ((v2 ^ v4) & 1) != 0)
    return 0;
  else
    return sub_100C9E04C(v3, v5);
}

uint64_t sub_100931B2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  uint64_t v6;

  result = sub_100937DE8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100931B60(_QWORD *a1)
{
  uint64_t v1;

  return sub_100931338(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_100931B80(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B9B8();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100931BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093A8B0, (uint64_t (*)(void))sub_10093B9FC);
}

uint64_t sub_100931BD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B9B8();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100931C0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093AAD4();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100931C58(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093AAD4();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100931C9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093AAD4();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100931CD4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100931CFC + 4 * byte_100F171E0[*v0]))(1684632949, 0xE400000000000000);
}

uint64_t sub_100931CFC()
{
  return 0x7368746170627573;
}

uint64_t sub_100931D14()
{
  return 0x536C61727574616ELL;
}

unint64_t sub_100931D34()
{
  return 0xD000000000000010;
}

uint64_t sub_100931D50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100938018(a1, a2);
  *a3 = result;
  return result;
}

void sub_100931D74(_QWORD *a1@<X8>)
{
  *a1 = &off_1012643C8;
}

uint64_t sub_100931D84(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1009321D0, (uint64_t (*)(void))sub_100932218);
}

uint64_t sub_100931D98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100932218();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100931DC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100932218();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100931DEC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100931714(a1, a2);
}

uint64_t sub_100931E00(_QWORD *a1)
{
  return sub_1009314E8(a1);
}

uint64_t sub_100931E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FABC0, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17940);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100931E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013FA990, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17760);
  v7 = sub_1004B7878(&qword_1013FABC8, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17918);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100931F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FABC0, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17940);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100931F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FA9E8, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17798);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100931FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FA9E8, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17798);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100932010(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013FA9E8, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17798);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100932060()
{
  return sub_1004B7878(&qword_1013FA980, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17668);
}

uint64_t sub_10093208C()
{
  return sub_1004B7878(&qword_1013FA988, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F176B0);
}

uint64_t sub_1009320B8()
{
  return sub_1004B7878(&qword_1013FA990, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17760);
}

uint64_t sub_1009320E4()
{
  return sub_1004B7878(&qword_1013FA998, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17738);
}

uint64_t sub_100932110()
{
  return sub_1004B7878(&qword_1013FA9A0, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17710);
}

unint64_t sub_100932140()
{
  unint64_t result;

  result = qword_1013FA9A8;
  if (!qword_1013FA9A8)
  {
    result = swift_getWitnessTable(&unk_100F177E0, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA9A8);
  }
  return result;
}

unint64_t sub_100932188()
{
  unint64_t result;

  result = qword_1013FA9B0;
  if (!qword_1013FA9B0)
  {
    result = swift_getWitnessTable(&unk_100F178F0, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA9B0);
  }
  return result;
}

unint64_t sub_1009321D0()
{
  unint64_t result;

  result = qword_1013FA9B8;
  if (!qword_1013FA9B8)
  {
    result = swift_getWitnessTable(&unk_100F178B8, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA9B8);
  }
  return result;
}

unint64_t sub_100932218()
{
  unint64_t result;

  result = qword_1013FA9C0;
  if (!qword_1013FA9C0)
  {
    result = swift_getWitnessTable(&unk_100F17818, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA9C0);
  }
  return result;
}

unint64_t sub_100932260()
{
  unint64_t result;

  result = qword_1013FA9C8;
  if (!qword_1013FA9C8)
  {
    result = swift_getWitnessTable(&unk_100F17890, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA9C8);
  }
  return result;
}

unint64_t sub_1009322A8()
{
  unint64_t result;

  result = qword_1013FA9D0;
  if (!qword_1013FA9D0)
  {
    result = swift_getWitnessTable(&unk_100F17868, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FA9D0);
  }
  return result;
}

uint64_t sub_1009322EC()
{
  return sub_1006047EC(&qword_1013FA9D8, &qword_1013FA9E0);
}

uint64_t sub_100932310()
{
  return sub_1004B7878(&qword_1013FA9E8, type metadata accessor for CRLEditableBezierPathSourceData, (uint64_t)&unk_100F17798);
}

unint64_t sub_100932340()
{
  unint64_t result;

  result = qword_1013FA9F0;
  if (!qword_1013FA9F0)
  {
    result = swift_getWitnessTable(&unk_100F17980, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FA9F0);
  }
  return result;
}

unint64_t sub_100932388()
{
  unint64_t result;

  result = qword_1013FA9F8;
  if (!qword_1013FA9F8)
  {
    result = swift_getWitnessTable(&unk_100F179C8, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FA9F8);
  }
  return result;
}

unint64_t sub_1009323D0()
{
  unint64_t result;

  result = qword_1013FAA00;
  if (!qword_1013FAA00)
  {
    result = swift_getWitnessTable(&unk_100F17A78, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA00);
  }
  return result;
}

unint64_t sub_100932418()
{
  unint64_t result;

  result = qword_1013FAA08;
  if (!qword_1013FAA08)
  {
    result = swift_getWitnessTable(&unk_100F17A50, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA08);
  }
  return result;
}

unint64_t sub_100932460()
{
  unint64_t result;

  result = qword_1013FAA10;
  if (!qword_1013FAA10)
  {
    result = swift_getWitnessTable(&unk_100F17A28, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA10);
  }
  return result;
}

unint64_t sub_1009324A8()
{
  unint64_t result;

  result = qword_1013FAA18;
  if (!qword_1013FAA18)
  {
    result = swift_getWitnessTable(&unk_100F17AF8, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA18);
  }
  return result;
}

unint64_t sub_1009324F0()
{
  unint64_t result;

  result = qword_1013FAA20;
  if (!qword_1013FAA20)
  {
    result = swift_getWitnessTable(&unk_100F17C08, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA20);
  }
  return result;
}

unint64_t sub_100932538()
{
  unint64_t result;

  result = qword_1013FAA28;
  if (!qword_1013FAA28)
  {
    result = swift_getWitnessTable(&unk_100F17BD0, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA28);
  }
  return result;
}

unint64_t sub_100932580()
{
  unint64_t result;

  result = qword_1013FAA30;
  if (!qword_1013FAA30)
  {
    result = swift_getWitnessTable(&unk_100F17B30, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA30);
  }
  return result;
}

unint64_t sub_1009325C8()
{
  unint64_t result;

  result = qword_1013FAA38;
  if (!qword_1013FAA38)
  {
    result = swift_getWitnessTable(&unk_100F17BA8, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA38);
  }
  return result;
}

unint64_t sub_100932610()
{
  unint64_t result;

  result = qword_1013FAA40;
  if (!qword_1013FAA40)
  {
    result = swift_getWitnessTable(&unk_100F17B80, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA40);
  }
  return result;
}

uint64_t sub_100932654()
{
  return sub_1006047EC(&qword_1013FAA48, &qword_1013FAA50);
}

unint64_t sub_10093267C()
{
  unint64_t result;

  result = qword_1013FAA58;
  if (!qword_1013FAA58)
  {
    result = swift_getWitnessTable(&unk_100F17AB0, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA58);
  }
  return result;
}

id sub_1009326C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Class isa;
  id v27;
  id v28;

  v5 = a2;
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3, a2)), "init");
  objc_msgSend(v7, "setClosed:", v5 & 1);
  swift_bridgeObjectRelease(a3);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v27 = v7;
    v28 = (id)objc_opt_self(CRLBezierNode);
    v9 = a1 + 36;
    do
    {
      v10 = *(_QWORD *)(v9 + 20);
      v11 = *(_BYTE *)(v9 + 28);
      v12 = *(_QWORD *)(v9 + 36);
      v13 = *(float *)(v9 + 4);
      v14 = *(float *)(v9 + 8);
      v15 = *(float *)(v9 - 4);
      v16 = *(float *)v9;
      v17 = *(float *)(v9 + 12);
      v18 = *(float *)(v9 + 16);
      swift_bridgeObjectRetain(v12);
      v19 = objc_msgSend(v28, "bezierNodeWithPoint:inControlPoint:outControlPoint:", v13, v14, v15, v16, v17, v18);
      v20 = v19;
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease(v12);
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 639, "Unknown bezier node type. Falling back to sharp.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 639, (uint64_t)"Unknown bezier node type. Falling back to sharp.", 48, 2u);
        objc_msgSend(v20, "setType:", 1);
      }
      else
      {
        if ((_BYTE)v10)
        {
          if (v10 == 1)
            objc_msgSend(v19, "setType:", 2);
          else
            objc_msgSend(v19, "setType:", 3);
        }
        else
        {
          objc_msgSend(v19, "setType:", 1);
        }
        swift_bridgeObjectRelease(v12);
      }
      v21 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v23 >= v22 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
      v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
      specialized Array._endMutation()(v24);

      v9 += 48;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(a1);
    v7 = v27;
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }
  sub_1004B8930(0, &qword_1013FAC28, off_1012297B8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "setNodes:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  return v7;
}

unint64_t sub_1009329D0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100935C5C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1009329F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008732BC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100932A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008732BC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100932AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093B820, (uint64_t (*)(void))sub_10093B250);
}

uint64_t sub_100932AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_10093B820, (uint64_t (*)(void))sub_1008732BC);
}

uint64_t sub_100932AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_10093B820, (uint64_t (*)(void))sub_1008732BC);
}

uint64_t sub_100932AFC(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_10093B820, (uint64_t (*)(void))sub_1008732BC);
}

uint64_t sub_100932B10()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000018;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x795474656E67616DLL;
}

uint64_t sub_100932B7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1009381D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_100932BA0(_QWORD *a1@<X8>)
{
  *a1 = &off_1012642F8;
}

uint64_t sub_100932BB0(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_10093AD64, (uint64_t (*)(void))sub_10093ADAC);
}

uint64_t sub_100932BC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093ADAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100932BEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093ADAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100932C14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD v20[2];
  _BYTE v21[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FAF40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093ADAC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLConnectionLineMagnetData.CodingKeys, &type metadata for CRLConnectionLineMagnetData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v21, &qword_1013FAC40);
  sub_1004C4938((uint64_t)v21, (uint64_t)v20, &qword_1013FAC40);
  v19 = 0;
  v12 = sub_1004B804C(&qword_1013FAC40);
  v13 = sub_1008C2438(&qword_1013FAF48, &qword_1013FAC40, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v19, v5, v12, v13);
  if (!v2)
  {
    v20[0] = *(_QWORD *)(v3 + 12);
    v19 = 1;
    v14 = sub_100786B14();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v19, v5, &type metadata for CRLPointData, v14);
    v20[0] = *(_QWORD *)(v3 + 24);
    v19 = 2;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v16 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v19, v5, v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100932DE0(uint64_t *a1, uint64_t *a2)
{
  char v2;
  float v3;
  float v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  float v8;
  float v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v2 = *((_BYTE *)a1 + 8);
  v3 = *((float *)a1 + 3);
  v4 = *((float *)a1 + 4);
  v5 = a1[3];
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *((float *)a2 + 3);
  v9 = *((float *)a2 + 4);
  v10 = a2[3];
  v18 = *a1;
  v19 = v2;
  v16 = v6;
  v17 = v7;
  v11 = sub_1008732BC();
  v12 = static CRExtensible.== infix(_:_:)(&v18, &v16, &type metadata for CRLConnectionLineMagnetData.MagnetType, v11, &protocol witness table for Int, &protocol witness table for Int);
  v13 = 0;
  if ((v12 & 1) != 0 && v3 == v8 && v4 == v9)
    v13 = sub_100C9E04C(v5, v10);
  return v13 & 1;
}

double sub_100932E94@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];

  sub_100938328(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100932ECC(_QWORD *a1)
{
  return sub_100932C14(a1);
}

uint64_t sub_100932EFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B8EC();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100932F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10093AC84();
  v7 = sub_10093B930();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100932F98(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093B8EC();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100932FD0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093AEA8();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_10093301C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10093AEA8();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100933060(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10093AEA8();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100933098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100935290();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1009330F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100935290();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100933140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_10093B974, (uint64_t (*)(void))sub_10093ABAC);
}

uint64_t sub_100933154(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10093B974();
  v5 = sub_100935290();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1009331BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_10093B974, (uint64_t (*)(void))sub_100935290);
}

uint64_t sub_1009331E0(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_10093B974, (uint64_t (*)(void))sub_100935290);
}

uint64_t sub_1009331F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100933220 + 4 * byte_100F171E4[a1]))(1701869940, 0xE400000000000000);
}

unint64_t sub_100933220()
{
  return 0xD000000000000014;
}

unint64_t sub_1009332B8()
{
  return 0xD000000000000010;
}

BOOL sub_1009332D4(char *a1, char *a2)
{
  return qword_100F1A3D8[*a1] == qword_100F1A3D8[*a2];
}

Swift::Int sub_1009332F8()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1A3D8[v1]);
  return Hasher._finalize()();
}

void sub_100933344()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1A3D8[*v0]);
}

Swift::Int sub_100933378(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1A3D8[v2]);
  return Hasher._finalize()();
}

uint64_t sub_1009333C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100938534(*a1);
  *a2 = result;
  return result;
}

void sub_1009333E8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1A3D8[*v1];
}

uint64_t sub_100933400()
{
  unsigned __int8 *v0;

  return sub_1009331F4(*v0);
}

uint64_t sub_100933408@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100938560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10093342C()
{
  char *v0;

  return qword_100F1A3D8[*v0];
}

uint64_t sub_100933444@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100938534(a1);
  *a2 = result;
  return result;
}

void sub_100933468(_QWORD *a1@<X8>)
{
  *a1 = &off_1012643A0;
}

uint64_t sub_100933478(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_100933C8C, (uint64_t (*)(void))sub_100933CD4);
}

uint64_t sub_10093348C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100933CD4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009334B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100933CD4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009334E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  float v15;
  float v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23;
  char v24;
  _BYTE v25[32];
  _BYTE v26[32];
  _BYTE v27[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FAB28);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100933CD4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLConnectionLinePathSourceData.CodingKeys, &type metadata for CRLConnectionLinePathSourceData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v27, &qword_1013FAAF8);
  sub_1004C4938((uint64_t)v27, (uint64_t)&v22, &qword_1013FAAF8);
  v24 = 0;
  v12 = sub_1004B804C(&qword_1013FAAF8);
  v13 = sub_1008C2438(&qword_1013FAB30, &qword_1013FAAF8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v24, v5, v12, v13);
  if (!v2)
  {
    v22 = *(_OWORD *)(v3 + 16);
    v23 = *(_QWORD *)(v3 + 32);
    v24 = 1;
    v14 = sub_100932460();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v24, v5, &type metadata for CRLBezierPathSourceData, v14);
    v15 = *(float *)(v3 + 40);
    LOBYTE(v22) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v22, v5, v15);
    v16 = *(float *)(v3 + 44);
    LOBYTE(v22) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v22, v5, v16);
    sub_1004C4938(v3 + 48, (uint64_t)v26, &qword_1013FAB38);
    sub_1004C4938((uint64_t)v26, (uint64_t)&v22, &qword_1013FAB38);
    v24 = 4;
    v17 = sub_100938FCC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v22, &v24, v5, &type metadata for CRLConnectionLineMagnetData, v17);
    sub_1004C4938(v3 + 80, (uint64_t)v25, &qword_1013FAB38);
    sub_1004C4938((uint64_t)v25, (uint64_t)&v22, &qword_1013FAB38);
    v24 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v22, &v24, v5, &type metadata for CRLConnectionLineMagnetData, v17);
    v18 = *(unsigned __int8 *)(v3 + 112);
    LOBYTE(v22) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v18, &v22, v5);
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + 120);
    v24 = 7;
    v19 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v20 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v24, v5, v19, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1009337EC(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[8];
  _OWORD v14[8];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[3];
  v14[2] = a2[2];
  v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_1009334DC(v13, v14) & 1;
}

double sub_10093385C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  sub_10093888C(a1, v9);
  if (!v2)
  {
    v5 = v13;
    a2[4] = v12;
    a2[5] = v5;
    v6 = v15;
    a2[6] = v14;
    a2[7] = v6;
    v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    result = *(double *)&v10;
    v8 = v11;
    a2[2] = v10;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_1009338AC(_QWORD *a1)
{
  return sub_1009334E0(a1);
}

uint64_t sub_1009338F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100939010();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100933934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100933B24();
  v7 = sub_100939054();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100933990(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100939010();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1009339C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100933DD0();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100933A14(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100933DD0();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100933A58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100933DD0();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100933A94()
{
  unint64_t result;

  result = qword_1013FAA60;
  if (!qword_1013FAA60)
  {
    result = swift_getWitnessTable(&unk_100F17C98, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA60);
  }
  return result;
}

unint64_t sub_100933ADC()
{
  unint64_t result;

  result = qword_1013FAA68;
  if (!qword_1013FAA68)
  {
    result = swift_getWitnessTable(&unk_100F17CE0, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA68);
  }
  return result;
}

unint64_t sub_100933B24()
{
  unint64_t result;

  result = qword_1013FAA70;
  if (!qword_1013FAA70)
  {
    result = swift_getWitnessTable(&unk_100F17D90, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA70);
  }
  return result;
}

unint64_t sub_100933B6C()
{
  unint64_t result;

  result = qword_1013FAA78;
  if (!qword_1013FAA78)
  {
    result = swift_getWitnessTable(&unk_100F17D68, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA78);
  }
  return result;
}

unint64_t sub_100933BB4()
{
  unint64_t result;

  result = qword_1013FAA80;
  if (!qword_1013FAA80)
  {
    result = swift_getWitnessTable(&unk_100F17D40, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAA80);
  }
  return result;
}

unint64_t sub_100933BFC()
{
  unint64_t result;

  result = qword_1013FAA88;
  if (!qword_1013FAA88)
  {
    result = swift_getWitnessTable(&unk_100F17E10, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA88);
  }
  return result;
}

unint64_t sub_100933C44()
{
  unint64_t result;

  result = qword_1013FAA90;
  if (!qword_1013FAA90)
  {
    result = swift_getWitnessTable(&unk_100F17F20, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA90);
  }
  return result;
}

unint64_t sub_100933C8C()
{
  unint64_t result;

  result = qword_1013FAA98;
  if (!qword_1013FAA98)
  {
    result = swift_getWitnessTable(&unk_100F17EE8, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAA98);
  }
  return result;
}

unint64_t sub_100933CD4()
{
  unint64_t result;

  result = qword_1013FAAA0;
  if (!qword_1013FAAA0)
  {
    result = swift_getWitnessTable(&unk_100F17E48, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAAA0);
  }
  return result;
}

unint64_t sub_100933D1C()
{
  unint64_t result;

  result = qword_1013FAAA8;
  if (!qword_1013FAAA8)
  {
    result = swift_getWitnessTable(&unk_100F17EC0, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAAA8);
  }
  return result;
}

unint64_t sub_100933D64()
{
  unint64_t result;

  result = qword_1013FAAB0;
  if (!qword_1013FAAB0)
  {
    result = swift_getWitnessTable(&unk_100F17E98, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAAB0);
  }
  return result;
}

uint64_t sub_100933DA8()
{
  return sub_1006047EC(&qword_1013FAAB8, &qword_1013FAAC0);
}

unint64_t sub_100933DD0()
{
  unint64_t result;

  result = qword_1013FAAC8;
  if (!qword_1013FAAC8)
  {
    result = swift_getWitnessTable(&unk_100F17DC8, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAAC8);
  }
  return result;
}

double sub_100933E14(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v15;
  void (*v16)(uint64_t, double, double, double, double, double, double);
  double result;

  v16 = *(void (**)(uint64_t, double, double, double, double, double, double))(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  swift_retain(v15);
  v16(a2, a3, a4, a5, a6, a7, a8);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_100933E98(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  float v6;
  float v7;
  float *v8;
  BOOL v9;

  if ((static UUID.== infix(_:_:)(a1) & 1) != 0
    && (v4 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0),
        (sub_100546DB8(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a2 + v4[5])) & 1) != 0)
    && ((v5 = v4[6], v6 = *(float *)(a1 + v5), v7 = *(float *)(a1 + v5 + 4), v8 = (float *)(a2 + v5), v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        v9))
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + v4[7]), *(_QWORD *)(a2 + v4[7]));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100933F28(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  _BYTE v7[16];
  _BYTE v8[16];
  _BYTE v9[16];
  _BYTE v10[16];

  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && *(float *)(a1 + 20) == *(float *)(a2 + 20)
    && (sub_1004C4938(a1 + 24, (uint64_t)v10, &qword_1013FAB08),
        sub_1004C4938((uint64_t)v10, (uint64_t)v8, &qword_1013FAB08),
        sub_1004C4938(a2 + 24, (uint64_t)v9, &qword_1013FAB08),
        sub_1004C4938((uint64_t)v9, (uint64_t)v7, &qword_1013FAB08),
        v4 = sub_10054F0FC(),
        (static CRExtensible.== infix(_:_:)(v8, v7, &type metadata for CRLEditableBezierPathSourceData.NodeType, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0))
  {
    v5 = sub_100C9E04C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40));
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_100934048(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  float v5;
  float v6;
  uint64_t v7;
  float v8;
  float v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  unint64_t v30;
  char v31;
  int v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  _BYTE v40[16];
  _BYTE v41[16];

  sub_1004C4938(a1, (uint64_t)v41, &qword_1013FAAF8);
  sub_1004C4938((uint64_t)v41, (uint64_t)&v38, &qword_1013FAAF8);
  sub_1004C4938(a2, (uint64_t)v40, &qword_1013FAAF8);
  sub_1004C4938((uint64_t)v40, (uint64_t)&v36, &qword_1013FAAF8);
  v4 = sub_100935290();
  if ((static CRExtensible.== infix(_:_:)(&v38, &v36, &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_27;
  v5 = *(float *)(a1 + 24);
  v6 = *(float *)(a1 + 28);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(float *)(a2 + 24);
  v9 = *(float *)(a2 + 28);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = sub_100544C38(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16));
  v12 = 0;
  if ((v11 & 1) != 0 && v5 == v8 && v6 == v9)
  {
    if ((sub_100C9E04C(v7, v10) & 1) == 0
      || *(float *)(a1 + 40) != *(float *)(a2 + 40)
      || *(float *)(a1 + 44) != *(float *)(a2 + 44))
    {
      goto LABEL_27;
    }
    v14 = *(_QWORD *)(a1 + 72);
    v15 = *(_QWORD *)(a2 + 72);
    if (v14)
    {
      if (!v15)
        goto LABEL_27;
      v16 = *(_QWORD *)(a1 + 56);
      v17 = *(_QWORD *)(a2 + 48);
      v18 = *(_QWORD *)(a2 + 56);
      v19 = *(_QWORD *)(a2 + 64);
      v20 = *(float *)(a1 + 64);
      v38 = *(_QWORD *)(a1 + 48);
      v39 = v16 & 1;
      v36 = v17;
      v37 = v18 & 1;
      v21 = sub_1008732BC();
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v15);
      if ((static CRExtensible.== infix(_:_:)(&v38, &v36, &type metadata for CRLConnectionLineMagnetData.MagnetType, v21, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0|| *((float *)&v16 + 1) != *((float *)&v18 + 1)|| v20 != *(float *)&v19)
      {
        goto LABEL_26;
      }
      v22 = sub_100C9E04C(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        goto LABEL_27;
    }
    else if (v15)
    {
      goto LABEL_27;
    }
    v23 = *(_QWORD *)(a1 + 104);
    v24 = *(_QWORD *)(a2 + 104);
    if (!v23)
    {
      if (v24)
        goto LABEL_27;
LABEL_30:
      v33 = *(unsigned __int8 *)(a1 + 112);
      v34 = *(unsigned __int8 *)(a2 + 112);
      if (v33 != 2)
      {
        v12 = 0;
        v35 = (v33 & 1) == 0;
        if (v34 == 2 || ((v35 ^ v34) & 1) == 0)
          return v12 & 1;
LABEL_35:
        v12 = sub_100C9E04C(*(_QWORD *)(a1 + 120), *(_QWORD *)(a2 + 120));
        return v12 & 1;
      }
      if (v34 == 2)
        goto LABEL_35;
LABEL_27:
      v12 = 0;
      return v12 & 1;
    }
    if (!v24)
      goto LABEL_27;
    v25 = *(_QWORD *)(a1 + 88);
    v26 = *(_QWORD *)(a2 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_QWORD *)(a2 + 96);
    v29 = *(float *)(a1 + 96);
    v38 = *(_QWORD *)(a1 + 80);
    v39 = v25 & 1;
    v36 = v26;
    v37 = v27 & 1;
    v30 = sub_1008732BC();
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    if ((static CRExtensible.== infix(_:_:)(&v38, &v36, &type metadata for CRLConnectionLineMagnetData.MagnetType, v30, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0&& *((float *)&v25 + 1) == *((float *)&v27 + 1)&& v29 == *(float *)&v28)
    {
      v31 = sub_100C9E04C(v23, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
        goto LABEL_27;
      goto LABEL_30;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  return v12 & 1;
}

uint64_t sub_100934368(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && *(float *)(a1 + 20) == *(float *)(a2 + 20)
    && *(float *)(a1 + 24) == *(float *)(a2 + 24))
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1009343EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  _BYTE v7[16];
  _BYTE v8[16];
  _BYTE v9[16];
  _BYTE v10[16];

  sub_1004C4938(a1, (uint64_t)v10, &qword_1013FAAE8);
  sub_1004C4938((uint64_t)v10, (uint64_t)v8, &qword_1013FAAE8);
  sub_1004C4938(a2, (uint64_t)v9, &qword_1013FAAE8);
  sub_1004C4938((uint64_t)v9, (uint64_t)v7, &qword_1013FAAE8);
  v4 = sub_10093524C();
  if ((static CRExtensible.== infix(_:_:)(v8, v7, &type metadata for CRLScalarPathSourceData.ScalarPathSourceType, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0&& *(float *)(a1 + 12) == *(float *)(a2 + 12)&& *(float *)(a1 + 16) == *(float *)(a2 + 16)&& *(float *)(a1 + 20) == *(float *)(a2 + 20)&& ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0&& ((*(unsigned __int8 *)(a1 + 25) ^ *(unsigned __int8 *)(a2 + 25)) & 1) == 0)
  {
    v5 = sub_100C9E04C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32));
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1009344F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  _BYTE v7[16];
  _BYTE v8[16];
  _BYTE v9[16];
  _BYTE v10[16];

  sub_1004C4938(a1, (uint64_t)v10, &qword_1013FAAD8);
  sub_1004C4938((uint64_t)v10, (uint64_t)v8, &qword_1013FAAD8);
  sub_1004C4938(a2, (uint64_t)v9, &qword_1013FAAD8);
  sub_1004C4938((uint64_t)v9, (uint64_t)v7, &qword_1013FAAD8);
  v4 = sub_100935208();
  if ((static CRExtensible.== infix(_:_:)(v8, v7, &type metadata for CRLPointPathSourceData.PointPathSourceType, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0&& *(float *)(a1 + 12) == *(float *)(a2 + 12)&& *(float *)(a1 + 16) == *(float *)(a2 + 16)&& *(float *)(a1 + 20) == *(float *)(a2 + 20)&& *(float *)(a1 + 24) == *(float *)(a2 + 24))
  {
    v5 = sub_100C9E04C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32));
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1009345F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  float v54;
  float v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, int *);
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  float v82;
  float *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[8];
  _OWORD v94[8];
  _BYTE v95[128];
  _OWORD v96[8];
  uint64_t v97;
  _QWORD v98[16];
  _QWORD v99[16];
  _BYTE v100[128];
  _OWORD v101[8];
  _QWORD v102[2];
  char v103;
  int v104;
  int v105;
  uint64_t v106;
  _QWORD v107[2];
  char v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  int v114;
  uint64_t v115;
  __int16 v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  int v120;
  uint64_t v121;
  __int16 v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  int v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  int v132;
  uint64_t v133;
  int v134;
  uint64_t v135;

  v4 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FAAD0);
  __chkstk_darwin(v8);
  v92 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F7920);
  __chkstk_darwin(v10);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v85 - v17;
  if (*a1 != *a2 || a1[1] != a2[1])
    goto LABEL_3;
  v21 = *((_QWORD *)a1 + 2);
  v22 = *((_QWORD *)a2 + 2);
  if (v21)
  {
    if (!v22)
      goto LABEL_3;
    v23 = *((_QWORD *)a1 + 1);
    v24 = *((_QWORD *)a2 + 1);
    if (v23 != v24 || v21 != v22)
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v21, v24, v22, 0);
      v19 = 0;
      if ((v25 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v22)
  {
    goto LABEL_3;
  }
  v26 = *((_QWORD *)a1 + 4);
  v27 = *((_QWORD *)a2 + 4);
  if (!v26)
  {
    if (v27)
      goto LABEL_3;
    goto LABEL_19;
  }
  if (!v27)
    goto LABEL_3;
  v28 = *((_QWORD *)a1 + 3);
  v29 = *((_QWORD *)a2 + 3);
  if (v28 == v29 && v26 == v27
    || (v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v26, v29, v27, 0), v19 = 0, (v30 & 1) != 0))
  {
LABEL_19:
    v31 = *((_QWORD *)a1 + 9);
    v32 = *((_QWORD *)a2 + 9);
    if (v31)
    {
      if (!v32)
        goto LABEL_3;
      v33 = *((_QWORD *)a1 + 6);
      v34 = *((_QWORD *)a2 + 5);
      v35 = *((_QWORD *)a2 + 6);
      v36 = *((_QWORD *)a2 + 7);
      v37 = *((_QWORD *)a2 + 8);
      v39 = *((_QWORD *)a1 + 7);
      v38 = *((_QWORD *)a1 + 8);
      v124 = *((_QWORD *)a1 + 5);
      v125 = v33 & 1;
      v126 = HIDWORD(v33);
      v127 = v39;
      v128 = v38;
      v129 = v31;
      v130 = v34;
      v131 = v35 & 1;
      v132 = HIDWORD(v35);
      v133 = v36;
      v134 = v37;
      v135 = v32;
      v90 = v31;
      v91 = v32;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v91);
      LODWORD(v89) = sub_1009344F8((uint64_t)&v124, (uint64_t)&v130);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v89 & 1) == 0)
        goto LABEL_3;
    }
    else if (v32)
    {
      goto LABEL_3;
    }
    v40 = *((_QWORD *)a1 + 14);
    v41 = *((_QWORD *)a2 + 14);
    if (v40)
    {
      if (!v41)
        goto LABEL_3;
      v42 = *((_QWORD *)a1 + 11);
      v43 = *((_QWORD *)a2 + 10);
      v44 = *((_QWORD *)a2 + 11);
      v45 = *((_QWORD *)a2 + 12);
      v46 = *((_QWORD *)a2 + 13);
      v48 = *((_QWORD *)a1 + 12);
      v47 = *((_QWORD *)a1 + 13);
      v112 = *((_QWORD *)a1 + 10);
      v113 = v42 & 1;
      v114 = HIDWORD(v42);
      v115 = v48;
      v116 = v47 & 0x101;
      v117 = v40;
      v118 = v43;
      v119 = v44 & 1;
      v120 = HIDWORD(v44);
      v121 = v45;
      v122 = v46 & 0x101;
      v123 = v41;
      v90 = v40;
      v91 = v41;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v91);
      LODWORD(v89) = sub_1009343EC((uint64_t)&v112, (uint64_t)&v118);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v89 & 1) == 0)
        goto LABEL_3;
    }
    else if (v41)
    {
      goto LABEL_3;
    }
    v50 = *((_QWORD *)a1 + 15);
    v49 = *((_QWORD *)a1 + 16);
    v51 = *((_QWORD *)a1 + 17);
    v52 = *((_QWORD *)a2 + 15);
    v53 = *((_QWORD *)a2 + 17);
    if (v50)
    {
      if (v52)
      {
        v86 = *((_QWORD *)a2 + 16);
        v87 = v52;
        v88 = v53;
        v89 = v50;
        v90 = v49;
        v91 = v51;
        if ((sub_100544C38(v50, v52) & 1) != 0)
        {
          v54 = *(float *)&v86;
          v55 = *(float *)&v90;
          sub_1004C3910(v89, v90, v91);
          sub_1004C3910(v89, v90, v91);
          sub_1004C3910(v87, v86, v88);
          if (v55 == v54 && *((float *)&v90 + 1) == *((float *)&v86 + 1))
          {
            LODWORD(v86) = sub_100C9E04C(v91, v88);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1004C36BC(v89, v90, v91);
            if ((v86 & 1) == 0)
              goto LABEL_3;
LABEL_40:
            v67 = *((_QWORD *)a1 + 22);
            v68 = *((_QWORD *)a2 + 22);
            if (v67)
            {
              if (!v68)
                goto LABEL_3;
              v69 = *((_QWORD *)a2 + 18);
              v70 = *((_QWORD *)a2 + 19);
              v71 = *((_QWORD *)a2 + 20);
              v72 = *((_QWORD *)a2 + 21);
              v73 = *((_QWORD *)a1 + 20);
              v74 = *((_QWORD *)a1 + 21);
              v75 = *((_QWORD *)a1 + 19);
              v102[0] = *((_QWORD *)a1 + 18);
              v102[1] = v75;
              v103 = v73 & 1;
              v104 = HIDWORD(v73);
              v105 = v74;
              v106 = v67;
              v107[0] = v69;
              v107[1] = v70;
              v108 = v71 & 1;
              v109 = HIDWORD(v71);
              v110 = v72;
              v111 = v68;
              v90 = v67;
              v91 = v68;
              swift_bridgeObjectRetain(v67);
              swift_bridgeObjectRetain(v91);
              LODWORD(v89) = sub_100934368((uint64_t)v102, (uint64_t)v107);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v89 & 1) == 0)
                goto LABEL_3;
            }
            else if (v68)
            {
              goto LABEL_3;
            }
            sub_1004C4938((uint64_t)(a1 + 184), (uint64_t)v98, &qword_1013F6270);
            sub_1004C4938((uint64_t)(a2 + 184), (uint64_t)v99, &qword_1013F6270);
            sub_1004C4938((uint64_t)v98, (uint64_t)v100, &qword_1013F6270);
            if (sub_1007BD0A0((uint64_t)v100) == 1)
            {
              sub_1004C4938((uint64_t)v99, (uint64_t)v96, &qword_1013F6270);
              if (sub_1007BD0A0((uint64_t)v96) == 1)
              {
LABEL_51:
                v90 = type metadata accessor for CRLPathSourceData(0);
                sub_100935120((uint64_t)&a1[*(int *)(v90 + 52)], (uint64_t)v18);
                sub_100935120((uint64_t)&a2[*(int *)(v90 + 52)], (uint64_t)v15);
                v76 = *(int *)(v8 + 48);
                v77 = v92;
                v91 = v92 + v76;
                sub_100935120((uint64_t)v18, v92);
                sub_100935120((uint64_t)v15, v91);
                v78 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v5 + 48);
                if (v78(v77, 1, v4) == 1)
                {
                  sub_1004CB800((uint64_t)v15, &qword_1013F7920);
                  sub_1004CB800((uint64_t)v18, &qword_1013F7920);
                  if (v78(v91, 1, v4) == 1)
                  {
                    sub_1004CB800(v92, &qword_1013F7920);
LABEL_54:
                    v19 = sub_100C9E04C(*(_QWORD *)&a1[*(int *)(v90 + 56)], *(_QWORD *)&a2[*(int *)(v90 + 56)]);
                    return v19 & 1;
                  }
                  v79 = &qword_1013FAAD0;
                  goto LABEL_66;
                }
                sub_100935120(v92, (uint64_t)v12);
                if (v78(v91, 1, v4) == 1)
                {
                  v79 = &qword_1013FAAD0;
LABEL_65:
                  sub_1004CB800((uint64_t)v15, &qword_1013F7920);
                  sub_1004CB800((uint64_t)v18, &qword_1013F7920);
                  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_66:
                  sub_1004CB800(v92, v79);
                  goto LABEL_3;
                }
                sub_100935168(v91, (uint64_t)v7);
                if ((static UUID.== infix(_:_:)(v12) & 1) == 0
                  || (sub_100546DB8(*(_QWORD *)&v12[v4[5]], *(_QWORD *)&v7[v4[5]]) & 1) == 0
                  || (v80 = v4[6], v81 = &v12[v80], v82 = *(float *)&v12[v80], v83 = (float *)&v7[v80], v82 != *v83)
                  || *((float *)v81 + 1) != v83[1])
                {
                  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLEditableBezierPathSourceData);
                  v79 = &qword_1013F7920;
                  goto LABEL_65;
                }
                v84 = sub_100C9E04C(*(_QWORD *)&v12[v4[7]], *(_QWORD *)&v7[v4[7]]);
                sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLEditableBezierPathSourceData);
                sub_1004CB800((uint64_t)v15, &qword_1013F7920);
                sub_1004CB800((uint64_t)v18, &qword_1013F7920);
                sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLEditableBezierPathSourceData);
                sub_1004CB800(v92, &qword_1013F7920);
                if ((v84 & 1) != 0)
                  goto LABEL_54;
LABEL_3:
                v19 = 0;
                return v19 & 1;
              }
            }
            else
            {
              sub_1004C4938((uint64_t)v99, (uint64_t)v95, &qword_1013F6270);
              if (sub_1007BD0A0((uint64_t)v95) != 1)
              {
                sub_1004C4938((uint64_t)v98, (uint64_t)v93, &qword_1013F6270);
                v101[4] = v93[4];
                v101[5] = v93[5];
                v101[6] = v93[6];
                v101[7] = v93[7];
                v101[0] = v93[0];
                v101[1] = v93[1];
                v101[2] = v93[2];
                v101[3] = v93[3];
                sub_1004C4938((uint64_t)v99, (uint64_t)v94, &qword_1013F6270);
                v96[4] = v94[4];
                v96[5] = v94[5];
                v96[6] = v94[6];
                v96[7] = v94[7];
                v96[0] = v94[0];
                v96[1] = v94[1];
                v96[2] = v94[2];
                v96[3] = v94[3];
                sub_1009351AC(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100934F88);
                sub_1009351AC(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100934F88);
                LODWORD(v91) = sub_100934048((uint64_t)v101, (uint64_t)v96);
                sub_1009351AC(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009350C4);
                sub_1009351AC(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009350C4);
                if ((v91 & 1) == 0)
                  goto LABEL_3;
                goto LABEL_51;
              }
            }
            sub_1004C4938((uint64_t)v98, (uint64_t)v96, &qword_1013F6270);
            sub_1004C4938((uint64_t)v99, (uint64_t)&v97, &qword_1013F6270);
            sub_1009351AC(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100934F88);
            sub_1009351AC(v99, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100934F88);
            sub_100934FE4((uint64_t)v96);
            goto LABEL_3;
          }
        }
        else
        {
          v62 = v89;
          v63 = v90;
          v64 = v91;
          sub_1004C3910(v89, v90, v91);
          sub_1004C3910(v62, v63, v64);
          sub_1004C3910(v87, v86, v88);
        }
        swift_bridgeObjectRelease();
        v65 = v91;
        swift_bridgeObjectRelease();
        v66 = v89;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1004C36BC(v66, v90, v65);
        goto LABEL_3;
      }
    }
    else if (!v52)
    {
      goto LABEL_40;
    }
    v56 = *((_QWORD *)a1 + 15);
    v57 = *((_QWORD *)a2 + 17);
    v58 = *((_QWORD *)a1 + 16);
    v59 = *((_QWORD *)a2 + 15);
    v60 = *((_QWORD *)a2 + 16);
    v61 = v51;
    sub_1004C3910(v56, v49, v51);
    sub_1004C3910(v59, v60, v57);
    sub_1004C36BC(v56, v58, v61);
    sub_1004C36BC(v59, v60, v57);
    goto LABEL_3;
  }
  return v19 & 1;
}

uint64_t sub_100934F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a16);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

uint64_t sub_100934FE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v13 = *(_OWORD *)(a1 + 208);
  v14 = *(_OWORD *)(a1 + 192);
  v12 = *(_OWORD *)(a1 + 224);
  v10 = *(_QWORD *)(a1 + 240);
  v9 = *(_QWORD *)(a1 + 248);
  sub_1009350C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  sub_1009350C4(v15, v2, v3, v4, v5, v6, v7, v8, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t sub_1009350C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a16);
    swift_bridgeObjectRelease(a10);
    return swift_bridgeObjectRelease(a14);
  }
  return result;
}

uint64_t sub_100935120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F7920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100935168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1009351AC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

unint64_t sub_100935208()
{
  unint64_t result;

  result = qword_1013FAAE0;
  if (!qword_1013FAAE0)
  {
    result = swift_getWitnessTable(&unk_100F19EA0, &type metadata for CRLPointPathSourceData.PointPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAAE0);
  }
  return result;
}

unint64_t sub_10093524C()
{
  unint64_t result;

  result = qword_1013FAAF0;
  if (!qword_1013FAAF0)
  {
    result = swift_getWitnessTable(&unk_100F19E68, &type metadata for CRLScalarPathSourceData.ScalarPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAAF0);
  }
  return result;
}

unint64_t sub_100935290()
{
  unint64_t result;

  result = qword_1013FAB00;
  if (!qword_1013FAB00)
  {
    result = swift_getWitnessTable(&unk_100F19E30, &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAB00);
  }
  return result;
}

_BYTE *sub_1009352D4(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  _BYTE v39[128];
  _OWORD v40[8];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v2 = sub_1004B804C(&qword_1013F7920);
  __chkstk_darwin(v2);
  v4 = (uint64_t)&v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  v6 = *(const char **)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v39[-v10];
  v12 = *((_QWORD *)a1 + 9);
  if (v12)
  {
    v14 = *((_QWORD *)a1 + 7);
    v13 = *((_QWORD *)a1 + 8);
    v15 = *((_QWORD *)a1 + 6);
    *(_QWORD *)&v41 = *((_QWORD *)a1 + 5);
    BYTE8(v41) = v15 & 1;
    HIDWORD(v41) = HIDWORD(v15);
    *(_QWORD *)&v42 = v14;
    DWORD2(v42) = v13;
    *(_QWORD *)&v43 = v12;
    sub_1004B8930(0, &qword_1013FAC38, off_101229978);
    swift_bridgeObjectRetain(v12);
    v16 = sub_10092E48C((float *)&v41);
LABEL_5:
    v9 = v16;
    goto LABEL_6;
  }
  v17 = *((_QWORD *)a1 + 14);
  if (v17)
  {
    v18 = *((_DWORD *)a1 + 26);
    v20 = *((_QWORD *)a1 + 11);
    v19 = *((_QWORD *)a1 + 12);
    *(_QWORD *)&v41 = *((_QWORD *)a1 + 10);
    BYTE8(v41) = v20 & 1;
    HIDWORD(v41) = HIDWORD(v20);
    *(_QWORD *)&v42 = v19;
    WORD4(v42) = v18 & 0x101;
    *(_QWORD *)&v43 = v17;
    sub_1004B8930(0, &qword_1013FAC30, off_101229990);
    swift_bridgeObjectRetain(v17);
    v16 = sub_10092E5D8((uint64_t)&v41);
    goto LABEL_5;
  }
  sub_1004C4938((uint64_t)(a1 + 184), (uint64_t)v39, &qword_1013F6270);
  sub_1004C4938((uint64_t)v39, (uint64_t)v40, &qword_1013F6270);
  if (sub_1007BD0A0((uint64_t)v40) == 1)
  {
    v24 = *((_QWORD *)a1 + 15);
    if (!v24)
      goto LABEL_21;
    v25 = *((_QWORD *)a1 + 17);
    v26 = objc_allocWithZone((Class)CRLBezierPathSource);
    sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
    v28 = sub_100942548(v24, v27);
    v9 = objc_msgSend(v26, "initWithBezierPath:", v28, swift_bridgeObjectRelease(v25).n128_f64[0]);

    if (v9)
      goto LABEL_6;
    __break(1u);
  }
  v45 = v40[4];
  v46 = v40[5];
  v47 = v40[6];
  v48 = v40[7];
  v41 = v40[0];
  v42 = v40[1];
  v43 = v40[2];
  v44 = v40[3];
  sub_1004B8930(0, (unint64_t *)&unk_1013F62F0, off_101229878);
  sub_100938EFC(v40);
  v16 = (_BYTE *)sub_10092E734((uint64_t)&v41, v29);
  if (v16)
    goto LABEL_5;
  v5 = 2;
  v6 = "Unable to make connection line path source from connection line path data. Falling back to rectangle.";
  v4 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift";
  sub_100757E04(&_mh_execute_header, (uint64_t)"createPathSource(data:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 222, "Unable to make connection line path source from connection line path data. Falling back to rectangle.", 101, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createPathSource(data:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 222, (uint64_t)"Unable to make connection line path source from connection line path data. Falling back to rectangle.", 101, 2u);
  v30 = sub_10005FDDC();
  v11 = (char *)objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithRect:", v30, v31, v32, v33);
  v9 = objc_msgSend(objc_allocWithZone((Class)CRLBezierPathSource), "initWithBezierPath:", v11);

  if (v9)
    goto LABEL_6;
  __break(1u);
LABEL_21:
  if (*((_QWORD *)a1 + 22))
  {
    v16 = objc_msgSend(objc_allocWithZone((Class)CRLCalloutPathSource), "initWithCornerRadius:tailPosition:tailSize:naturalSize:tailAtCenter:", *((_DWORD *)a1 + 40) & 1, *((float *)a1 + 39), *((float *)a1 + 36), *((float *)a1 + 37), *((float *)a1 + 38), *((float *)a1 + 41), *((float *)a1 + 42));
    goto LABEL_5;
  }
  v34 = type metadata accessor for CRLPathSourceData(0);
  sub_100935120((uint64_t)&a1[*(int *)(v34 + 52)], v4);
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v6 + 6))(v4, 1, v5) == 1)
  {
    sub_1004CB800(v4, &qword_1013F7920);
    v4 = 2;
    v11 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift";
    sub_100757E04(&_mh_execute_header, (uint64_t)"createPathSource(data:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 232, "Missing path source type specific data. Falling back to rectangle.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createPathSource(data:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 232, (uint64_t)"Missing path source type specific data. Falling back to rectangle.", 66, 2u);
    v35 = sub_10005FDDC();
    a1 = (unsigned __int8 *)objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithRect:", v35, v36, v37, v38);
    v9 = objc_msgSend(objc_allocWithZone((Class)CRLBezierPathSource), "initWithBezierPath:", a1);

    if (v9)
      return v9;
    __break(1u);
  }
  sub_100935168(v4, (uint64_t)v11);
  sub_1004B8930(0, &qword_1013FA710, off_101229888);
  sub_1004B8460((uint64_t)v11, (uint64_t)v9, type metadata accessor for CRLEditableBezierPathSourceData);
  v9 = sub_10092EBB0((uint64_t)v9);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_6:
  objc_msgSend(v9, "setHasHorizontalFlip:", *a1);
  objc_msgSend(v9, "setHasVerticalFlip:", a1[1]);
  if (*((_QWORD *)a1 + 2))
    v21 = String._bridgeToObjectiveC()();
  else
    v21 = 0;
  objc_msgSend(v9, "setLocalizationKey:", v21);

  if (*((_QWORD *)a1 + 4))
    v22 = String._bridgeToObjectiveC()();
  else
    v22 = 0;
  objc_msgSend(v9, "setUserDefinedName:", v22);

  return v9;
}

float sub_100935964@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  float v7;
  double v8;
  float v9;
  double v10;
  float result;
  double v12;

  v4 = (uint64_t)objc_msgSend(a1, "type");
  v5 = v4;
  if (v4 <= 9)
  {
    if ((unint64_t)v4 < 2)
      goto LABEL_10;
LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 292, "Unknown point path source type. Falling back to left single arrow.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 292, (uint64_t)"Unknown point path source type. Falling back to left single arrow.", 66, 2u);
    v5 = 0;
    goto LABEL_10;
  }
  if (v4 == 10)
  {
    v5 = 2;
    goto LABEL_10;
  }
  if (v4 == 100)
  {
    v5 = 3;
    goto LABEL_10;
  }
  if (v4 != 200)
    goto LABEL_7;
  v5 = 4;
LABEL_10:
  objc_msgSend(a1, "point");
  v7 = v6;
  v9 = v8;
  objc_msgSend(a1, "naturalSize");
  result = v10;
  *(float *)&v12 = v12;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = 0;
  *(float *)(a2 + 12) = v7;
  *(float *)(a2 + 16) = v9;
  *(float *)(a2 + 20) = result;
  *(_DWORD *)(a2 + 24) = LODWORD(v12);
  *(_QWORD *)(a2 + 32) = &_swiftEmptyDictionarySingleton;
  return result;
}

id sub_100935AD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  unsigned __int8 v6;
  double v7;
  float v8;
  double v9;
  float v10;
  double v11;
  float v12;
  id result;

  v4 = objc_msgSend(a1, "type");
  v5 = v4;
  if (v4 == (id)2 || v4 == (id)1)
  {
    v6 = 0;
  }
  else if (v4)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 373, "Unknown point path source type. Falling back to rounded rectangle.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 373, (uint64_t)"Unknown point path source type. Falling back to rounded rectangle.", 66, 2u);
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v6 = objc_msgSend(a1, "isCurveContinuous");
  }
  objc_msgSend(a1, "scalar");
  v8 = v7;
  objc_msgSend(a1, "naturalSize");
  v10 = v9;
  v12 = v11;
  result = objc_msgSend(a1, "shouldShowKnob");
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = 0;
  *(float *)(a2 + 12) = v8;
  *(float *)(a2 + 16) = v10;
  *(float *)(a2 + 20) = v12;
  *(_BYTE *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 25) = (_BYTE)result;
  *(_QWORD *)(a2 + 32) = &_swiftEmptyDictionarySingleton;
  return result;
}

unint64_t sub_100935C5C(unint64_t result)
{
  if (result >= 8)
    return 8;
  return result;
}

void sub_100935C6C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  unint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unsigned int v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  unint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  id v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  void *v43;
  float v44;
  float v45;
  float v46;
  float v47;
  unsigned __int8 v48;
  void *v49;
  unint64_t v50;
  id v51;
  _QWORD aBlock[5];
  uint64_t v53;

  v4 = objc_msgSend(a1, "type");
  if ((unint64_t)v4 >= 2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 757, "Unknown point path source type. Falling back to quadratic.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2u, 757, (uint64_t)"Unknown point path source type. Falling back to quadratic.", 58, 2u);
    v4 = 0;
  }
  objc_msgSend(a1, "outsetFrom");
  v6 = v5;
  objc_msgSend(a1, "outsetTo");
  v8 = v7;
  v9 = a1;
  v10 = objc_msgSend(v9, "bezierPathWithoutFlips");
  v11 = swift_allocObject(&unk_1012888A8, 24, 7);
  *(_QWORD *)(v11 + 16) = _swiftEmptyArrayStorage;
  aBlock[4] = sub_100786C04;
  v53 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100933E14;
  aBlock[3] = &unk_1012888E8;
  v12 = _Block_copy(aBlock);
  v13 = v53;
  swift_retain(v11);
  objc_msgSend(v10, "iteratePathElementsWithBlock:", v12, swift_release(v13).n128_f64[0]);

  _Block_release(v12);
  swift_beginAccess(v11 + 16, aBlock, 0, 0);
  v14 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRetain(v14);
  objc_msgSend(v9, "naturalSize", swift_release(v11).n128_f64[0]);
  v16 = v15;
  v18 = v17;

  v19 = objc_msgSend(v9, "headMagnet");
  v51 = v4;
  if (v19)
  {
    v20 = v19;
    v21 = (unint64_t)objc_msgSend(v19, "magnetType");
    objc_msgSend(v20, "magnetNormalizedPosition");
    v23 = v22;
    v25 = v24;

    if ((v21 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_13;
    }
    *(float *)&v26 = v25;
    *(float *)&v27 = v23;
    v28 = (v21 > 7) | ((unint64_t)v27 << 32);
    v29 = v26;
    v30 = &_swiftEmptyDictionarySingleton;
  }
  else
  {
    v21 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
  }
  v31 = objc_msgSend(v9, "tailMagnet");
  v32 = v31;
  v50 = v28;
  v49 = v30;
  if (!v31)
  {
    v38 = v14;
    v39 = v51;
    v33 = 0;
    v42 = 0;
    v43 = 0;
    goto LABEL_11;
  }
  v33 = (unint64_t)objc_msgSend(v31, "magnetType");
  objc_msgSend(v32, "magnetNormalizedPosition");
  v35 = v34;
  v37 = v36;

  if ((v33 & 0x8000000000000000) == 0)
  {
    v38 = v14;
    v39 = v51;
    *(float *)&v40 = v37;
    *(float *)&v41 = v35;
    v32 = (void *)((v33 > 7) | ((unint64_t)v41 << 32));
    v42 = v40;
    v43 = &_swiftEmptyDictionarySingleton;
LABEL_11:
    v48 = objc_msgSend(v9, "userDidSetControlPoint");
    *(_QWORD *)a2 = v39;
    *(_BYTE *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = v38;
    v45 = v16;
    *(float *)(a2 + 24) = v45;
    v44 = v18;
    *(float *)(a2 + 28) = v44;
    *(_QWORD *)(a2 + 32) = &_swiftEmptyDictionarySingleton;
    v47 = v6;
    *(float *)(a2 + 40) = v47;
    v46 = v8;
    *(float *)(a2 + 44) = v46;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v50;
    *(_QWORD *)(a2 + 64) = v29;
    *(_QWORD *)(a2 + 72) = v49;
    *(_QWORD *)(a2 + 80) = v33;
    *(_QWORD *)(a2 + 88) = v32;
    *(_QWORD *)(a2 + 96) = v42;
    *(_QWORD *)(a2 + 104) = v43;
    *(_BYTE *)(a2 + 112) = v48;
    *(_QWORD *)(a2 + 120) = &_swiftEmptyDictionarySingleton;
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_100936034(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0xA)
    return 11;
  else
    return byte_100F1A418[a1 + 1];
}

uint64_t sub_100936058(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000100FE1DE0)
  {
    v4 = 0x8000000100FE1DE0;
LABEL_6:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE1DE0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
    goto LABEL_6;
  }
  if (a1 == 0x6974726556736168 && a2 == 0xEF70696C466C6163)
  {
    v6 = 0xEF70696C466C6163;
LABEL_12:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6974726556736168, 0xEF70696C466C6163, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_12;
  }
  if (a1 == 0x617A696C61636F6CLL && a2 == 0xEF79654B6E6F6974)
  {
    v7 = 0xEF79654B6E6F6974;
LABEL_18:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617A696C61636F6CLL, 0xEF79654B6E6F6974, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_18;
  }
  if (a1 == 0x6966654472657375 && a2 == 0xEF656D614E64656ELL)
  {
    v8 = 0xEF656D614E64656ELL;
LABEL_24:
    swift_bridgeObjectRelease(v8);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6966654472657375, 0xEF656D614E64656ELL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_24;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100FE1E00)
  {
    v9 = 0x8000000100FE1E00;
LABEL_30:
    swift_bridgeObjectRelease(v9);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FE1E00, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_30;
  }
  if (a1 == 0xD000000000000014)
  {
    v10 = 0x8000000100FE1E20;
    if (a2 == 0x8000000100FE1E20)
      goto LABEL_35;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100FE1E20, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_35:
    swift_bridgeObjectRelease(v10);
    return 5;
  }
  if (a1 == 0xD000000000000014)
  {
    v11 = 0x8000000100FE1DA0;
    if (a2 == 0x8000000100FE1DA0)
      goto LABEL_40;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100FE1DA0, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_40:
    swift_bridgeObjectRelease(v11);
    return 6;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x8000000100FE1E40)
  {
    v12 = 0x8000000100FE1E40;
LABEL_46:
    swift_bridgeObjectRelease(v12);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FE1E40, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_46;
  }
  if (a1 == 0xD00000000000001CLL)
  {
    v13 = 0x8000000100FE1E60;
    if (a2 == 0x8000000100FE1E60)
      goto LABEL_51;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100FE1E60, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_51:
    swift_bridgeObjectRelease(v13);
    return 8;
  }
  if (a1 == 0xD00000000000001CLL)
  {
    v14 = 0x8000000100FE1E80;
    if (a2 == 0x8000000100FE1E80)
      goto LABEL_56;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100FE1E80, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 9;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 10;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

unint64_t sub_1009364F0(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_100936500(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x746E696F70 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E696F70, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69)
  {
    v8 = 0xEB00000000657A69;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536C61727574616ELL, 0xEB00000000657A69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1009366B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  char v26;

  v5 = sub_1004B804C(&qword_1013FAF78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093A0E4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLPointPathSourceData.CodingKeys, &type metadata for CRLPointPathSourceData.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v12 = sub_1004B804C(&qword_1013FAAD8);
  v26 = 0;
  v13 = sub_1008C2438(&qword_1013FAF80, &qword_1013FAAD8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v26, v5, v12, v13);
  v14 = v24;
  v15 = v25;
  v26 = 1;
  v16 = sub_100786A28();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v26, v5, &type metadata for CRLPointData, v16);
  v17 = v24;
  v26 = 2;
  v18 = sub_100939098();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSizeData, &v26, v5, &type metadata for CRLSizeData, v18);
  v19 = v24;
  v20 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v26 = 3;
  v21 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v26, v5, v20, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = v24;
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 12) = v17;
  *(_QWORD *)(a2 + 20) = v19;
  *(_QWORD *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_100936904(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x72616C616373 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72616C616373, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69)
  {
    v8 = 0xEB00000000657A69;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536C61727574616ELL, 0xEB00000000657A69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000011)
  {
    v9 = 0x8000000100FE21E0;
    if (a2 == 0x8000000100FE21E0)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE21E0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0x6853646C756F6873 && a2 == 0xEE00626F6E4B776FLL)
  {
    v10 = 0xEE00626F6E4B776FLL;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6853646C756F6873, 0xEE00626F6E4B776FLL, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_100936B9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  int v26;
  char v27;

  v5 = sub_1004B804C(&qword_1013FAF88);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093A3E0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLScalarPathSourceData.CodingKeys, &type metadata for CRLScalarPathSourceData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_1004B804C(&qword_1013FAAE8);
    v27 = 0;
    v13 = sub_1008C2438(&qword_1013FAF90, &qword_1013FAAE8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v27, v5, v12, v13);
    v14 = v24;
    LOBYTE(v12) = v25;
    LOBYTE(v24) = 1;
    KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    v16 = v15;
    v27 = 2;
    v17 = sub_100939098();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSizeData, &v27, v5, &type metadata for CRLSizeData, v17);
    v18 = v24;
    LOBYTE(v24) = 3;
    v26 = KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    LOBYTE(v24) = 4;
    v23 = KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    v19 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v27 = 5;
    v20 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v19, &v27, v5, v19, v20);
    v26 &= 1u;
    v23 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v14;
    *(_BYTE *)(a2 + 8) = v12;
    *(_DWORD *)(a2 + 12) = v16;
    *(_QWORD *)(a2 + 16) = v18;
    *(_BYTE *)(a2 + 24) = v26;
    *(_BYTE *)(a2 + 25) = v23;
    *(_QWORD *)(a2 + 32) = v21;
  }
}

uint64_t sub_100936E74(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 0x69736F506C696174 && a2 == 0xEC0000006E6F6974)
  {
    v5 = 0xEC0000006E6F6974;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x69736F506C696174, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x657A69536C696174 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657A69536C696174, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    v8 = 0xEC00000073756964;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x615272656E726F63, 0xEC00000073756964, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x61547265746E6563 && a2 == 0xEA00000000006C69)
  {
    v9 = 0xEA00000000006C69;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61547265746E6563, 0xEA00000000006C69, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69)
  {
    v10 = 0xEB00000000657A69;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536C61727574616ELL, 0xEB00000000657A69, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_100937144(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v5 = sub_1004B804C(&qword_1013FAF98);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093A6DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLCalloutPathSourceData.CodingKeys, &type metadata for CRLCalloutPathSourceData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v12 = sub_100786A28();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v25, v5, &type metadata for CRLPointData, v12);
    v13 = v26;
    LOBYTE(v26) = 1;
    KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v15 = v14;
    LOBYTE(v26) = 2;
    KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v17 = v16;
    LOBYTE(v26) = 3;
    v18 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v25 = 4;
    v19 = sub_100939098();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSizeData, &v25, v5, &type metadata for CRLSizeData, v19);
    v20 = v26;
    v21 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v25 = 5;
    v22 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v21, &v25, v5, v21, v22);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v23 = v26;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v13;
    *(_DWORD *)(a2 + 8) = v15;
    *(_DWORD *)(a2 + 12) = v17;
    *(_BYTE *)(a2 + 16) = v18 & 1;
    *(_QWORD *)(a2 + 20) = v20;
    *(_QWORD *)(a2 + 32) = v23;
  }
}

uint64_t sub_1009373D8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x61507265697A6562 && a2 == 0xEE00617461446874)
  {
    v5 = 0xEE00617461446874;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61507265697A6562, 0xEE00617461446874, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69)
  {
    v7 = 0xEB00000000657A69;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536C61727574616ELL, 0xEB00000000657A69, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

float sub_100937564(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_1004B804C(&qword_1013FAB58);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100932580();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBezierPathSourceData.CodingKeys, &type metadata for CRLBezierPathSourceData.CodingKeys, v10, v8, v9);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    HIBYTE(v17) = 0;
    v11 = sub_1007869E4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLBezierPathData, (char *)&v17 + 7, v4, &type metadata for CRLBezierPathData, v11);
    v13 = v18;
    HIBYTE(v17) = 1;
    v14 = sub_100939098();
    swift_bridgeObjectRetain(v13);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSizeData, (char *)&v17 + 7, v4, &type metadata for CRLSizeData, v14);
    v2 = *(float *)&v18;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    HIBYTE(v17) = 2;
    v16 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v15, (char *)&v17 + 7, v4, v15, v16);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain(v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100937790(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6F72746E6F436E69 && a2 == 0xEE00746E696F506CLL)
  {
    v5 = 0xEE00746E696F506CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F72746E6F436E69, 0xEE00746E696F506CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E696F5065646F6ELL && a2 == 0xE900000000000074)
  {
    v7 = 0xE900000000000074;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696F5065646F6ELL, 0xE900000000000074, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x72746E6F4374756FLL && a2 == 0xEF746E696F506C6FLL)
  {
    v8 = 0xEF746E696F506C6FLL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72746E6F4374756FLL, 0xEF746E696F506C6FLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v9 = 0xE400000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1009379EC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v5 = sub_1004B804C(&qword_1013FAFC8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093B5B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v12 = sub_100786A28();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v25, v5, &type metadata for CRLPointData, v12);
    v13 = v23;
    v25 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v25, v5, &type metadata for CRLPointData, v12);
    v14 = v23;
    v25 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v25, v5, &type metadata for CRLPointData, v12);
    v15 = v23;
    v16 = sub_1004B804C(&qword_1013FAB08);
    v25 = 3;
    v17 = sub_1008C2438(&qword_1013FAFD0, &qword_1013FAB08, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v16, &v25, v5, v16, v17);
    v18 = v23;
    v19 = v24;
    v20 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v25 = 4;
    v21 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v25, v5, v20, v21);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v22 = v23;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v14;
    *(_QWORD *)(a2 + 16) = v15;
    *(_QWORD *)(a2 + 24) = v18;
    *(_BYTE *)(a2 + 32) = v19;
    *(_QWORD *)(a2 + 40) = v22;
  }
}

uint64_t sub_100937CA8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7365646F6ELL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7365646F6ELL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6465736F6C63 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6465736F6C63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100937DE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_1004B804C(&qword_1013FAF50);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_10093A9D8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys, v9, v7, v8);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v10 = sub_1004B804C(&qword_1013FAF58);
    HIBYTE(v15) = 0;
    v11 = sub_10093B6F0(&qword_1013FAF60, &qword_1013FAF58, (void (*)(void))sub_10093B448, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    LOBYTE(v16) = 1;
    swift_bridgeObjectRetain(v7);
    KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
    v13 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    HIBYTE(v15) = 2;
    v14 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain(v16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100938018(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684632949, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7368746170627573 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7368746170627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69)
  {
    v8 = 0xEB00000000657A69;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536C61727574616ELL, 0xEB00000000657A69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1009381D4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x795474656E67616DLL && a2 == 0xEA00000000006570)
  {
    v5 = 0xEA00000000006570;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x795474656E67616DLL, 0xEA00000000006570, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000018)
  {
    v7 = 0x8000000100FE21C0;
    if (a2 == 0x8000000100FE21C0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x8000000100FE21C0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100938328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;

  v5 = sub_1004B804C(&qword_1013FAF30);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10093ADAC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLConnectionLineMagnetData.CodingKeys, &type metadata for CRLConnectionLineMagnetData.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v12 = sub_1004B804C(&qword_1013FAC40);
  v23 = 0;
  v13 = sub_1008C2438(&qword_1013FAF38, &qword_1013FAC40, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v23, v5, v12, v13);
  v14 = v24;
  v15 = v25;
  v23 = 1;
  v16 = sub_100786A28();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v23, v5, &type metadata for CRLPointData, v16);
  v17 = v24;
  v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v23 = 2;
  v19 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v18, &v23, v5, v18, v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = v24;
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 12) = v17;
  *(_QWORD *)(a2 + 24) = v20;
  return result;
}

uint64_t sub_100938534(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 8)
    return 8;
  else
    return (0x605040302010007uLL >> (8 * (a1 + 1)));
}

uint64_t sub_100938560(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000014)
  {
    v7 = 0x8000000100FE1DA0;
    if (a2 == 0x8000000100FE1DA0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100FE1DA0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x724674657374756FLL && a2 == 0xEA00000000006D6FLL)
  {
    v8 = 0xEA00000000006D6FLL;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x724674657374756FLL, 0xEA00000000006D6FLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0x6F5474657374756FLL && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F5474657374756FLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x6E67614D64616568 && a2 == 0xEA00000000007465)
  {
    v10 = 0xEA00000000007465;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E67614D64616568, 0xEA00000000007465, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x6E67614D6C696174 && a2 == 0xEA00000000007465)
  {
    v11 = 0xEA00000000007465;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E67614D6C696174, 0xEA00000000007465, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100FE1DC0)
  {
    v12 = 0x8000000100FE1DC0;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100FE1DC0, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_43;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 7;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_10093888C(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int128 v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int128 v46;
  unsigned __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  unsigned __int128 v62;
  __int128 v63;
  __int128 v64;
  unsigned __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int128 v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;

  v56 = sub_1004B804C(&qword_1013FAB10);
  v5 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100933CD4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLConnectionLinePathSourceData.CodingKeys, &type metadata for CRLConnectionLinePathSourceData.CodingKeys, v10, v8, v9);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = v5;
    v11 = sub_1004B804C(&qword_1013FAAF8);
    LOBYTE(v57) = 0;
    v12 = sub_1008C2438(&qword_1013FAB18, &qword_1013FAAF8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    v13 = v56;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, &v57, v56, v11, v12);
    v14 = v65;
    v15 = BYTE8(v65);
    v81 = BYTE8(v65);
    LOBYTE(v57) = 1;
    v16 = sub_100932418();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLBezierPathSourceData, &v57, v13, &type metadata for CRLBezierPathSourceData, v16);
    v17 = a1;
    v53 = v15;
    v18 = v14;
    v21 = v65;
    v20 = v21 >> 64;
    v19 = v21;
    v22 = v66;
    LOBYTE(v65) = 2;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v22);
    KeyedDecodingContainer.decode(_:forKey:)(&v65, v56);
    v54 = v19;
    v24 = v23;
    v52 = v22;
    LOBYTE(v65) = 3;
    KeyedDecodingContainer.decode(_:forKey:)(&v65, v56);
    v26 = v25;
    LOBYTE(v57) = 4;
    v27 = sub_100938EB8();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLConnectionLineMagnetData, &v57, v56, &type metadata for CRLConnectionLineMagnetData, v27);
    v49 = *((_QWORD *)&v65 + 1);
    v50 = v66;
    v51 = v65;
    LOBYTE(v57) = 5;
    v28 = v67;
    swift_bridgeObjectRetain(v67);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLConnectionLineMagnetData, &v57, v56, &type metadata for CRLConnectionLineMagnetData, v27);
    v47 = v65;
    v29 = v66;
    v48 = v28;
    LOBYTE(v65) = 6;
    v30 = v67;
    v31 = swift_bridgeObjectRetain(v67);
    v45 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v65, v56, v31);
    *(_QWORD *)&v46 = v29;
    *((_QWORD *)&v46 + 1) = v30;
    v32 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v82 = 7;
    v33 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v32, &v82, v56, v32, v33);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v7, v56);
    v34 = v80;
    swift_bridgeObjectRetain(v80);
    swift_bridgeObjectRelease();
    v44 = v18;
    *(_QWORD *)&v57 = v18;
    BYTE8(v57) = v53;
    v35 = v54;
    *(_QWORD *)&v58 = v54;
    *((_QWORD *)&v58 + 1) = v20;
    v36 = v52;
    *(_QWORD *)&v59 = v52;
    *((_QWORD *)&v59 + 1) = __PAIR64__(v26, v24);
    v37 = v48;
    *(_QWORD *)&v60 = v51;
    *((_QWORD *)&v60 + 1) = v49;
    *(_QWORD *)&v61 = v50;
    *((_QWORD *)&v61 + 1) = v48;
    v62 = v47;
    v38 = *((_QWORD *)&v46 + 1);
    v63 = v46;
    LOBYTE(v64) = v45;
    *((_QWORD *)&v64 + 1) = v34;
    sub_100938EFC(&v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v17);
    *(_QWORD *)&v65 = v44;
    BYTE8(v65) = v81;
    v66 = v35;
    v67 = v20;
    v68 = v36;
    v69 = v24;
    v70 = v26;
    v71 = v51;
    v72 = v49;
    v73 = v50;
    v74 = v37;
    v75 = v47;
    v76 = v46;
    v77 = v38;
    v78 = v45;
    v79 = v34;
    sub_100938F64(&v65);
    v39 = v62;
    a2[4] = v61;
    a2[5] = v39;
    v40 = v64;
    a2[6] = v63;
    a2[7] = v40;
    v41 = v58;
    *a2 = v57;
    a2[1] = v41;
    v42 = v60;
    a2[2] = v59;
    a2[3] = v42;
  }
}

unint64_t sub_100938EB8()
{
  unint64_t result;

  result = qword_1013FAB20;
  if (!qword_1013FAB20)
  {
    result = swift_getWitnessTable(&unk_100F19D98, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FAB20);
  }
  return result;
}

_QWORD *sub_100938EFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[9];
  v5 = a1[15];
  swift_bridgeObjectRetain(a1[13]);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *sub_100938F64(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[9];
  v5 = a1[13];
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

unint64_t sub_100938FCC()
{
  unint64_t result;

  result = qword_1013FAB40;
  if (!qword_1013FAB40)
  {
    result = swift_getWitnessTable(&unk_100F19D70, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FAB40);
  }
  return result;
}

unint64_t sub_100939010()
{
  unint64_t result;

  result = qword_1013FAB48;
  if (!qword_1013FAB48)
  {
    result = swift_getWitnessTable(&unk_100F17F70, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAB48);
  }
  return result;
}

unint64_t sub_100939054()
{
  unint64_t result;

  result = qword_1013FAB50;
  if (!qword_1013FAB50)
  {
    result = swift_getWitnessTable(&unk_100F17F48, &type metadata for CRLConnectionLinePathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAB50);
  }
  return result;
}

unint64_t sub_100939098()
{
  unint64_t result;

  result = qword_1013FAB60;
  if (!qword_1013FAB60)
  {
    result = swift_getWitnessTable(&unk_100F10F34, &type metadata for CRLSizeData);
    atomic_store(result, (unint64_t *)&qword_1013FAB60);
  }
  return result;
}

unint64_t sub_1009390DC()
{
  unint64_t result;

  result = qword_1013FAB70;
  if (!qword_1013FAB70)
  {
    result = swift_getWitnessTable(&unk_100F10F0C, &type metadata for CRLSizeData);
    atomic_store(result, (unint64_t *)&qword_1013FAB70);
  }
  return result;
}

unint64_t sub_100939120()
{
  unint64_t result;

  result = qword_1013FAB78;
  if (!qword_1013FAB78)
  {
    result = swift_getWitnessTable(&unk_100F17C58, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAB78);
  }
  return result;
}

unint64_t sub_100939164()
{
  unint64_t result;

  result = qword_1013FAB80;
  if (!qword_1013FAB80)
  {
    result = swift_getWitnessTable(&unk_100F17C30, &type metadata for CRLBezierPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAB80);
  }
  return result;
}

unint64_t sub_1009391A8()
{
  unint64_t result;

  result = qword_1013FABA0;
  if (!qword_1013FABA0)
  {
    result = swift_getWitnessTable(&unk_100F19D48, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FABA0);
  }
  return result;
}

unint64_t sub_1009391EC()
{
  unint64_t result;

  result = qword_1013FABB8;
  if (!qword_1013FABB8)
  {
    result = swift_getWitnessTable(&unk_100F19D20, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FABB8);
  }
  return result;
}

unint64_t sub_100939230()
{
  unint64_t result;

  result = qword_1013FABD8;
  if (!qword_1013FABD8)
  {
    result = swift_getWitnessTable(&unk_100F19CF8, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FABD8);
  }
  return result;
}

unint64_t sub_100939274()
{
  unint64_t result;

  result = qword_1013FABE0;
  if (!qword_1013FABE0)
  {
    result = swift_getWitnessTable(&unk_100F19CD0, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FABE0);
  }
  return result;
}

unint64_t sub_1009392B8()
{
  unint64_t result;

  result = qword_1013FABE8;
  if (!qword_1013FABE8)
  {
    result = swift_getWitnessTable(&unk_100F19CA8, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FABE8);
  }
  return result;
}

unint64_t sub_1009392FC()
{
  unint64_t result;

  result = qword_1013FABF8;
  if (!qword_1013FABF8)
  {
    result = swift_getWitnessTable(&unk_100F19C80, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FABF8);
  }
  return result;
}

unint64_t sub_100939340()
{
  unint64_t result;

  result = qword_1013FAC00;
  if (!qword_1013FAC00)
  {
    result = swift_getWitnessTable(&unk_100F19C58, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAC00);
  }
  return result;
}

unint64_t sub_100939384()
{
  unint64_t result;

  result = qword_1013FAC08;
  if (!qword_1013FAC08)
  {
    result = swift_getWitnessTable(&unk_100F19C30, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAC08);
  }
  return result;
}

uint64_t sub_1009393C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1009393EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009393FC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100939404(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t initializeWithCopy for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Node()
{
  return &type metadata for CRLEditableBezierPathSourceData.Node;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.NodeType()
{
  return &type metadata for CRLEditableBezierPathSourceData.NodeType;
}

ValueMetadata *type metadata accessor for CRLConnectionLineMagnetData.MagnetType()
{
  return &type metadata for CRLConnectionLineMagnetData.MagnetType;
}

ValueMetadata *type metadata accessor for CRLScalarPathSourceData.ScalarPathSourceType()
{
  return &type metadata for CRLScalarPathSourceData.ScalarPathSourceType;
}

ValueMetadata *type metadata accessor for CRLPointPathSourceData.PointPathSourceType()
{
  return &type metadata for CRLPointPathSourceData.PointPathSourceType;
}

uint64_t getEnumTagSinglePayload for CRLCloudRecordType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8Freeform27CRLConnectionLineMagnetDataV10MagnetTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100939674 + 4 * byte_100F171F1[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1009396A8 + 4 * byte_100F171EC[v4]))();
}

uint64_t sub_1009396A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009396B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009396B8);
  return result;
}

uint64_t sub_1009396C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009396CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1009396D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009396D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLinePathSourceData.CodingKeys()
{
  return &type metadata for CRLConnectionLinePathSourceData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBezierPathSourceData.CodingKeys()
{
  return &type metadata for CRLBezierPathSourceData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.CodingKeys()
{
  return &type metadata for CRLEditableBezierPathSourceData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLPathSourceData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLPathSourceData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1009397F4 + 4 * byte_100F171FB[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_100939828 + 4 * byte_100F171F6[v4]))();
}

uint64_t sub_100939828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100939830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100939838);
  return result;
}

uint64_t sub_100939844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10093984CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_100939850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100939858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPathSourceData.CodingKeys()
{
  return &type metadata for CRLPathSourceData.CodingKeys;
}

uint64_t initializeWithCopy for CRLConnectionLineMagnetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLConnectionLineMagnetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  v4 = a2[3];
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for CRLConnectionLineMagnetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLConnectionLineMagnetData()
{
  return &type metadata for CRLConnectionLineMagnetData;
}

uint64_t storeEnumTagSinglePayload for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009399B4 + 4 * byte_100F17205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009399E8 + 4 * byte_100F17200[v4]))();
}

uint64_t sub_1009399E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009399F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009399F8);
  return result;
}

uint64_t sub_100939A04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100939A0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100939A10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100939A18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType()
{
  return &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType;
}

uint64_t sub_100939A38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[2];
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for CRLEditableBezierPathSourceData.Subpath(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for CRLEditableBezierPathSourceData.Subpath(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Subpath()
{
  return &type metadata for CRLEditableBezierPathSourceData.Subpath;
}

uint64_t initializeWithCopy for CRLCalloutPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 20) = *(_QWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLCalloutPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for CRLCalloutPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 20) = *(_QWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLCalloutPathSourceData()
{
  return &type metadata for CRLCalloutPathSourceData;
}

uint64_t initializeWithCopy for CRLScalarPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLScalarPathSourceData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  v4 = a2[4];
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for CRLScalarPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLScalarPathSourceData()
{
  return &type metadata for CRLScalarPathSourceData;
}

uint64_t destroy for CRLPointPathSourceData(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for CRLPointPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLPointPathSourceData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  v4 = a2[4];
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for CRLPointPathSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t _s8Freeform22CRLPointPathSourceDataVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100939ED0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPointPathSourceData()
{
  return &type metadata for CRLPointPathSourceData;
}

unint64_t sub_100939F2C()
{
  unint64_t result;

  result = qword_1013FAC48;
  if (!qword_1013FAC48)
  {
    result = swift_getWitnessTable(&unk_100F180B8, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAC48);
  }
  return result;
}

unint64_t sub_100939F74()
{
  unint64_t result;

  result = qword_1013FAC50;
  if (!qword_1013FAC50)
  {
    result = swift_getWitnessTable(&unk_100F18100, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAC50);
  }
  return result;
}

unint64_t sub_100939FBC()
{
  unint64_t result;

  result = qword_1013FAC58;
  if (!qword_1013FAC58)
  {
    result = swift_getWitnessTable(&unk_100F18160, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAC58);
  }
  return result;
}

unint64_t sub_10093A00C()
{
  unint64_t result;

  result = qword_1013FAC60;
  if (!qword_1013FAC60)
  {
    result = swift_getWitnessTable(&unk_100F181E0, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAC60);
  }
  return result;
}

unint64_t sub_10093A054()
{
  unint64_t result;

  result = qword_1013FAC68;
  if (!qword_1013FAC68)
  {
    result = swift_getWitnessTable(&unk_100F182F0, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAC68);
  }
  return result;
}

unint64_t sub_10093A09C()
{
  unint64_t result;

  result = qword_1013FAC70;
  if (!qword_1013FAC70)
  {
    result = swift_getWitnessTable(&unk_100F182B8, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAC70);
  }
  return result;
}

unint64_t sub_10093A0E4()
{
  unint64_t result;

  result = qword_1013FAC78;
  if (!qword_1013FAC78)
  {
    result = swift_getWitnessTable(&unk_100F18218, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAC78);
  }
  return result;
}

unint64_t sub_10093A12C()
{
  unint64_t result;

  result = qword_1013FAC80;
  if (!qword_1013FAC80)
  {
    result = swift_getWitnessTable(&unk_100F18290, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAC80);
  }
  return result;
}

unint64_t sub_10093A174()
{
  unint64_t result;

  result = qword_1013FAC88;
  if (!qword_1013FAC88)
  {
    result = swift_getWitnessTable(&unk_100F18268, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAC88);
  }
  return result;
}

uint64_t sub_10093A1B8()
{
  return sub_1006047EC(&qword_1013FAC90, &qword_1013FAC98);
}

unint64_t sub_10093A1E0()
{
  unint64_t result;

  result = qword_1013FACA0;
  if (!qword_1013FACA0)
  {
    result = swift_getWitnessTable(&unk_100F18198, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FACA0);
  }
  return result;
}

unint64_t sub_10093A228()
{
  unint64_t result;

  result = qword_1013FACA8;
  if (!qword_1013FACA8)
  {
    result = swift_getWitnessTable(&unk_100F18380, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FACA8);
  }
  return result;
}

unint64_t sub_10093A270()
{
  unint64_t result;

  result = qword_1013FACB0;
  if (!qword_1013FACB0)
  {
    result = swift_getWitnessTable(&unk_100F183C8, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FACB0);
  }
  return result;
}

unint64_t sub_10093A2B8()
{
  unint64_t result;

  result = qword_1013FACB8;
  if (!qword_1013FACB8)
  {
    result = swift_getWitnessTable(&unk_100F18428, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FACB8);
  }
  return result;
}

unint64_t sub_10093A308()
{
  unint64_t result;

  result = qword_1013FACC0;
  if (!qword_1013FACC0)
  {
    result = swift_getWitnessTable(&unk_100F184A8, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FACC0);
  }
  return result;
}

unint64_t sub_10093A350()
{
  unint64_t result;

  result = qword_1013FACC8;
  if (!qword_1013FACC8)
  {
    result = swift_getWitnessTable(&unk_100F185B8, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FACC8);
  }
  return result;
}

unint64_t sub_10093A398()
{
  unint64_t result;

  result = qword_1013FACD0;
  if (!qword_1013FACD0)
  {
    result = swift_getWitnessTable(&unk_100F18580, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FACD0);
  }
  return result;
}

unint64_t sub_10093A3E0()
{
  unint64_t result;

  result = qword_1013FACD8;
  if (!qword_1013FACD8)
  {
    result = swift_getWitnessTable(&unk_100F184E0, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FACD8);
  }
  return result;
}

unint64_t sub_10093A428()
{
  unint64_t result;

  result = qword_1013FACE0;
  if (!qword_1013FACE0)
  {
    result = swift_getWitnessTable(&unk_100F18558, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FACE0);
  }
  return result;
}

unint64_t sub_10093A470()
{
  unint64_t result;

  result = qword_1013FACE8;
  if (!qword_1013FACE8)
  {
    result = swift_getWitnessTable(&unk_100F18530, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FACE8);
  }
  return result;
}

uint64_t sub_10093A4B4()
{
  return sub_1006047EC(&qword_1013FACF0, &qword_1013FACF8);
}

unint64_t sub_10093A4DC()
{
  unint64_t result;

  result = qword_1013FAD00;
  if (!qword_1013FAD00)
  {
    result = swift_getWitnessTable(&unk_100F18460, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAD00);
  }
  return result;
}

unint64_t sub_10093A524()
{
  unint64_t result;

  result = qword_1013FAD08;
  if (!qword_1013FAD08)
  {
    result = swift_getWitnessTable(&unk_100F18648, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAD08);
  }
  return result;
}

unint64_t sub_10093A56C()
{
  unint64_t result;

  result = qword_1013FAD10;
  if (!qword_1013FAD10)
  {
    result = swift_getWitnessTable(&unk_100F18690, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAD10);
  }
  return result;
}

unint64_t sub_10093A5B4()
{
  unint64_t result;

  result = qword_1013FAD18;
  if (!qword_1013FAD18)
  {
    result = swift_getWitnessTable(&unk_100F186F0, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAD18);
  }
  return result;
}

unint64_t sub_10093A604()
{
  unint64_t result;

  result = qword_1013FAD20;
  if (!qword_1013FAD20)
  {
    result = swift_getWitnessTable(&unk_100F18770, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD20);
  }
  return result;
}

unint64_t sub_10093A64C()
{
  unint64_t result;

  result = qword_1013FAD28;
  if (!qword_1013FAD28)
  {
    result = swift_getWitnessTable(&unk_100F18880, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD28);
  }
  return result;
}

unint64_t sub_10093A694()
{
  unint64_t result;

  result = qword_1013FAD30;
  if (!qword_1013FAD30)
  {
    result = swift_getWitnessTable(&unk_100F18848, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD30);
  }
  return result;
}

unint64_t sub_10093A6DC()
{
  unint64_t result;

  result = qword_1013FAD38;
  if (!qword_1013FAD38)
  {
    result = swift_getWitnessTable(&unk_100F187A8, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD38);
  }
  return result;
}

unint64_t sub_10093A724()
{
  unint64_t result;

  result = qword_1013FAD40;
  if (!qword_1013FAD40)
  {
    result = swift_getWitnessTable(&unk_100F18820, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD40);
  }
  return result;
}

unint64_t sub_10093A76C()
{
  unint64_t result;

  result = qword_1013FAD48;
  if (!qword_1013FAD48)
  {
    result = swift_getWitnessTable(&unk_100F187F8, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD48);
  }
  return result;
}

uint64_t sub_10093A7B0()
{
  return sub_1006047EC(&qword_1013FAD50, &qword_1013FAD58);
}

unint64_t sub_10093A7D8()
{
  unint64_t result;

  result = qword_1013FAD60;
  if (!qword_1013FAD60)
  {
    result = swift_getWitnessTable(&unk_100F18728, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FAD60);
  }
  return result;
}

unint64_t sub_10093A820()
{
  unint64_t result;

  result = qword_1013FAD68;
  if (!qword_1013FAD68)
  {
    result = swift_getWitnessTable(&unk_100F18910, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FAD68);
  }
  return result;
}

unint64_t sub_10093A868()
{
  unint64_t result;

  result = qword_1013FAD70;
  if (!qword_1013FAD70)
  {
    result = swift_getWitnessTable(&unk_100F18958, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FAD70);
  }
  return result;
}

unint64_t sub_10093A8B0()
{
  unint64_t result;

  result = qword_1013FAD78;
  if (!qword_1013FAD78)
  {
    result = swift_getWitnessTable(&unk_100F189B8, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FAD78);
  }
  return result;
}

unint64_t sub_10093A900()
{
  unint64_t result;

  result = qword_1013FAD80;
  if (!qword_1013FAD80)
  {
    result = swift_getWitnessTable(&unk_100F18A38, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD80);
  }
  return result;
}

unint64_t sub_10093A948()
{
  unint64_t result;

  result = qword_1013FAD88;
  if (!qword_1013FAD88)
  {
    result = swift_getWitnessTable(&unk_100F18B48, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD88);
  }
  return result;
}

unint64_t sub_10093A990()
{
  unint64_t result;

  result = qword_1013FAD90;
  if (!qword_1013FAD90)
  {
    result = swift_getWitnessTable(&unk_100F18B10, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD90);
  }
  return result;
}

unint64_t sub_10093A9D8()
{
  unint64_t result;

  result = qword_1013FAD98;
  if (!qword_1013FAD98)
  {
    result = swift_getWitnessTable(&unk_100F18A70, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAD98);
  }
  return result;
}

unint64_t sub_10093AA20()
{
  unint64_t result;

  result = qword_1013FADA0;
  if (!qword_1013FADA0)
  {
    result = swift_getWitnessTable(&unk_100F18AE8, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FADA0);
  }
  return result;
}

unint64_t sub_10093AA68()
{
  unint64_t result;

  result = qword_1013FADA8;
  if (!qword_1013FADA8)
  {
    result = swift_getWitnessTable(&unk_100F18AC0, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FADA8);
  }
  return result;
}

uint64_t sub_10093AAAC()
{
  return sub_1006047EC(&qword_1013FADB0, &qword_1013FADB8);
}

unint64_t sub_10093AAD4()
{
  unint64_t result;

  result = qword_1013FADC0;
  if (!qword_1013FADC0)
  {
    result = swift_getWitnessTable(&unk_100F189F0, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FADC0);
  }
  return result;
}

unint64_t sub_10093AB1C()
{
  unint64_t result;

  result = qword_1013FADC8;
  if (!qword_1013FADC8)
  {
    result = swift_getWitnessTable(&unk_100F18BD8, &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FADC8);
  }
  return result;
}

unint64_t sub_10093AB64()
{
  unint64_t result;

  result = qword_1013FADD0;
  if (!qword_1013FADD0)
  {
    result = swift_getWitnessTable(&unk_100F18C20, &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FADD0);
  }
  return result;
}

unint64_t sub_10093ABAC()
{
  unint64_t result;

  result = qword_1013FADD8;
  if (!qword_1013FADD8)
  {
    result = swift_getWitnessTable(&unk_100F18D48, &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FADD8);
  }
  return result;
}

unint64_t sub_10093ABF4()
{
  unint64_t result;

  result = qword_1013FADE0;
  if (!qword_1013FADE0)
  {
    result = swift_getWitnessTable(&unk_100F18D70, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FADE0);
  }
  return result;
}

unint64_t sub_10093AC3C()
{
  unint64_t result;

  result = qword_1013FADE8;
  if (!qword_1013FADE8)
  {
    result = swift_getWitnessTable(&unk_100F18DB8, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FADE8);
  }
  return result;
}

unint64_t sub_10093AC84()
{
  unint64_t result;

  result = qword_1013FADF0;
  if (!qword_1013FADF0)
  {
    result = swift_getWitnessTable(&unk_100F18E18, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FADF0);
  }
  return result;
}

unint64_t sub_10093ACD4()
{
  unint64_t result;

  result = qword_1013FADF8;
  if (!qword_1013FADF8)
  {
    result = swift_getWitnessTable(&unk_100F18E98, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FADF8);
  }
  return result;
}

unint64_t sub_10093AD1C()
{
  unint64_t result;

  result = qword_1013FAE00;
  if (!qword_1013FAE00)
  {
    result = swift_getWitnessTable(&unk_100F18FA8, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE00);
  }
  return result;
}

unint64_t sub_10093AD64()
{
  unint64_t result;

  result = qword_1013FAE08;
  if (!qword_1013FAE08)
  {
    result = swift_getWitnessTable(&unk_100F18F70, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE08);
  }
  return result;
}

unint64_t sub_10093ADAC()
{
  unint64_t result;

  result = qword_1013FAE10;
  if (!qword_1013FAE10)
  {
    result = swift_getWitnessTable(&unk_100F18ED0, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE10);
  }
  return result;
}

unint64_t sub_10093ADF4()
{
  unint64_t result;

  result = qword_1013FAE18;
  if (!qword_1013FAE18)
  {
    result = swift_getWitnessTable(&unk_100F18F48, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE18);
  }
  return result;
}

unint64_t sub_10093AE3C()
{
  unint64_t result;

  result = qword_1013FAE20;
  if (!qword_1013FAE20)
  {
    result = swift_getWitnessTable(&unk_100F18F20, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE20);
  }
  return result;
}

uint64_t sub_10093AE80()
{
  return sub_1006047EC(&qword_1013FAE28, &qword_1013FAE30);
}

unint64_t sub_10093AEA8()
{
  unint64_t result;

  result = qword_1013FAE38;
  if (!qword_1013FAE38)
  {
    result = swift_getWitnessTable(&unk_100F18E50, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FAE38);
  }
  return result;
}

unint64_t sub_10093AEF0()
{
  unint64_t result;

  result = qword_1013FAE40;
  if (!qword_1013FAE40)
  {
    result = swift_getWitnessTable(&unk_100F190B0, &type metadata for CRLPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE40);
  }
  return result;
}

unint64_t sub_10093AF38()
{
  unint64_t result;

  result = qword_1013FAE48;
  if (!qword_1013FAE48)
  {
    result = swift_getWitnessTable(&unk_100F19150, &type metadata for CRLEditableBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE48);
  }
  return result;
}

unint64_t sub_10093AF80()
{
  unint64_t result;

  result = qword_1013FAE50;
  if (!qword_1013FAE50)
  {
    result = swift_getWitnessTable(&unk_100F191F0, &type metadata for CRLBezierPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE50);
  }
  return result;
}

unint64_t sub_10093AFC8()
{
  unint64_t result;

  result = qword_1013FAE58;
  if (!qword_1013FAE58)
  {
    result = swift_getWitnessTable(&unk_100F19290, &type metadata for CRLConnectionLinePathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAE58);
  }
  return result;
}

unint64_t sub_10093B010()
{
  unint64_t result;

  result = qword_1013FAE60;
  if (!qword_1013FAE60)
  {
    result = swift_getWitnessTable(&unk_100F192B8, &type metadata for CRLPointPathSourceData.PointPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAE60);
  }
  return result;
}

unint64_t sub_10093B058()
{
  unint64_t result;

  result = qword_1013FAE68;
  if (!qword_1013FAE68)
  {
    result = swift_getWitnessTable(&unk_100F19300, &type metadata for CRLPointPathSourceData.PointPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAE68);
  }
  return result;
}

unint64_t sub_10093B0A0()
{
  unint64_t result;

  result = qword_1013FAE70;
  if (!qword_1013FAE70)
  {
    result = swift_getWitnessTable(&unk_100F19428, &type metadata for CRLPointPathSourceData.PointPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAE70);
  }
  return result;
}

unint64_t sub_10093B0E8()
{
  unint64_t result;

  result = qword_1013FAE78;
  if (!qword_1013FAE78)
  {
    result = swift_getWitnessTable(&unk_100F19450, &type metadata for CRLScalarPathSourceData.ScalarPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAE78);
  }
  return result;
}

unint64_t sub_10093B130()
{
  unint64_t result;

  result = qword_1013FAE80;
  if (!qword_1013FAE80)
  {
    result = swift_getWitnessTable(&unk_100F19498, &type metadata for CRLScalarPathSourceData.ScalarPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAE80);
  }
  return result;
}

unint64_t sub_10093B178()
{
  unint64_t result;

  result = qword_1013FAE88;
  if (!qword_1013FAE88)
  {
    result = swift_getWitnessTable(&unk_100F195C0, &type metadata for CRLScalarPathSourceData.ScalarPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FAE88);
  }
  return result;
}

unint64_t sub_10093B1C0()
{
  unint64_t result;

  result = qword_1013FAE90;
  if (!qword_1013FAE90)
  {
    result = swift_getWitnessTable(&unk_100F195E8, &type metadata for CRLConnectionLineMagnetData.MagnetType);
    atomic_store(result, (unint64_t *)&qword_1013FAE90);
  }
  return result;
}

unint64_t sub_10093B208()
{
  unint64_t result;

  result = qword_1013FAE98;
  if (!qword_1013FAE98)
  {
    result = swift_getWitnessTable(&unk_100F19630, &type metadata for CRLConnectionLineMagnetData.MagnetType);
    atomic_store(result, (unint64_t *)&qword_1013FAE98);
  }
  return result;
}

unint64_t sub_10093B250()
{
  unint64_t result;

  result = qword_1013FAEA0;
  if (!qword_1013FAEA0)
  {
    result = swift_getWitnessTable(&unk_100F19758, &type metadata for CRLConnectionLineMagnetData.MagnetType);
    atomic_store(result, (unint64_t *)&qword_1013FAEA0);
  }
  return result;
}

unint64_t sub_10093B298()
{
  unint64_t result;

  result = qword_1013FAEA8;
  if (!qword_1013FAEA8)
  {
    result = swift_getWitnessTable(&unk_100F19780, &type metadata for CRLEditableBezierPathSourceData.NodeType);
    atomic_store(result, (unint64_t *)&qword_1013FAEA8);
  }
  return result;
}

unint64_t sub_10093B2E0()
{
  unint64_t result;

  result = qword_1013FAEB0;
  if (!qword_1013FAEB0)
  {
    result = swift_getWitnessTable(&unk_100F197C8, &type metadata for CRLEditableBezierPathSourceData.NodeType);
    atomic_store(result, (unint64_t *)&qword_1013FAEB0);
  }
  return result;
}

unint64_t sub_10093B328()
{
  unint64_t result;

  result = qword_1013FAEB8;
  if (!qword_1013FAEB8)
  {
    result = swift_getWitnessTable(&unk_100F198F0, &type metadata for CRLEditableBezierPathSourceData.NodeType);
    atomic_store(result, (unint64_t *)&qword_1013FAEB8);
  }
  return result;
}

unint64_t sub_10093B370()
{
  unint64_t result;

  result = qword_1013FAEC0;
  if (!qword_1013FAEC0)
  {
    result = swift_getWitnessTable(&unk_100F19918, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAEC0);
  }
  return result;
}

unint64_t sub_10093B3B8()
{
  unint64_t result;

  result = qword_1013FAEC8;
  if (!qword_1013FAEC8)
  {
    result = swift_getWitnessTable(&unk_100F19960, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAEC8);
  }
  return result;
}

unint64_t sub_10093B400()
{
  unint64_t result;

  result = qword_1013FAED0;
  if (!qword_1013FAED0)
  {
    result = swift_getWitnessTable(&unk_100F19A10, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAED0);
  }
  return result;
}

unint64_t sub_10093B448()
{
  unint64_t result;

  result = qword_1013FAED8;
  if (!qword_1013FAED8)
  {
    result = swift_getWitnessTable(&unk_100F199E8, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAED8);
  }
  return result;
}

unint64_t sub_10093B490()
{
  unint64_t result;

  result = qword_1013FAEE0;
  if (!qword_1013FAEE0)
  {
    result = swift_getWitnessTable(&unk_100F199C0, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAEE0);
  }
  return result;
}

unint64_t sub_10093B4D8()
{
  unint64_t result;

  result = qword_1013FAEE8;
  if (!qword_1013FAEE8)
  {
    result = swift_getWitnessTable(&unk_100F19A90, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAEE8);
  }
  return result;
}

unint64_t sub_10093B520()
{
  unint64_t result;

  result = qword_1013FAEF0;
  if (!qword_1013FAEF0)
  {
    result = swift_getWitnessTable(&unk_100F19BA0, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAEF0);
  }
  return result;
}

unint64_t sub_10093B568()
{
  unint64_t result;

  result = qword_1013FAEF8;
  if (!qword_1013FAEF8)
  {
    result = swift_getWitnessTable(&unk_100F19B68, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAEF8);
  }
  return result;
}

unint64_t sub_10093B5B0()
{
  unint64_t result;

  result = qword_1013FAF00;
  if (!qword_1013FAF00)
  {
    result = swift_getWitnessTable(&unk_100F19AC8, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAF00);
  }
  return result;
}

unint64_t sub_10093B5F8()
{
  unint64_t result;

  result = qword_1013FAF08;
  if (!qword_1013FAF08)
  {
    result = swift_getWitnessTable(&unk_100F19B40, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAF08);
  }
  return result;
}

unint64_t sub_10093B640()
{
  unint64_t result;

  result = qword_1013FAF10;
  if (!qword_1013FAF10)
  {
    result = swift_getWitnessTable(&unk_100F19B18, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FAF10);
  }
  return result;
}

uint64_t sub_10093B684()
{
  return sub_1006047EC(&qword_1013FAF18, &qword_1013FAF20);
}

unint64_t sub_10093B6AC()
{
  unint64_t result;

  result = qword_1013FAF28;
  if (!qword_1013FAF28)
  {
    result = swift_getWitnessTable(&unk_100F19A48, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAF28);
  }
  return result;
}

uint64_t sub_10093B6F0(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1004CB6A4(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10093B754()
{
  unint64_t result;

  result = qword_1013FAFE8;
  if (!qword_1013FAFE8)
  {
    result = swift_getWitnessTable(&unk_100F19BF0, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAFE8);
  }
  return result;
}

unint64_t sub_10093B798()
{
  unint64_t result;

  result = qword_1013FAFF0;
  if (!qword_1013FAFF0)
  {
    result = swift_getWitnessTable(&unk_100F19BC8, &type metadata for CRLEditableBezierPathSourceData.Node);
    atomic_store(result, (unint64_t *)&qword_1013FAFF0);
  }
  return result;
}

unint64_t sub_10093B7DC()
{
  unint64_t result;

  result = qword_1013FAFF8;
  if (!qword_1013FAFF8)
  {
    result = swift_getWitnessTable(&unk_100F19878, &type metadata for CRLEditableBezierPathSourceData.NodeType);
    atomic_store(result, (unint64_t *)&qword_1013FAFF8);
  }
  return result;
}

unint64_t sub_10093B820()
{
  unint64_t result;

  result = qword_1013FB000;
  if (!qword_1013FB000)
  {
    result = swift_getWitnessTable(&unk_100F196E0, &type metadata for CRLConnectionLineMagnetData.MagnetType);
    atomic_store(result, (unint64_t *)&qword_1013FB000);
  }
  return result;
}

unint64_t sub_10093B864()
{
  unint64_t result;

  result = qword_1013FB008;
  if (!qword_1013FB008)
  {
    result = swift_getWitnessTable(&unk_100F19548, &type metadata for CRLScalarPathSourceData.ScalarPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FB008);
  }
  return result;
}

unint64_t sub_10093B8A8()
{
  unint64_t result;

  result = qword_1013FB010;
  if (!qword_1013FB010)
  {
    result = swift_getWitnessTable(&unk_100F193B0, &type metadata for CRLPointPathSourceData.PointPathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FB010);
  }
  return result;
}

unint64_t sub_10093B8EC()
{
  unint64_t result;

  result = qword_1013FB018;
  if (!qword_1013FB018)
  {
    result = swift_getWitnessTable(&unk_100F18FF8, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FB018);
  }
  return result;
}

unint64_t sub_10093B930()
{
  unint64_t result;

  result = qword_1013FB020;
  if (!qword_1013FB020)
  {
    result = swift_getWitnessTable(&unk_100F18FD0, &type metadata for CRLConnectionLineMagnetData);
    atomic_store(result, (unint64_t *)&qword_1013FB020);
  }
  return result;
}

unint64_t sub_10093B974()
{
  unint64_t result;

  result = qword_1013FB028;
  if (!qword_1013FB028)
  {
    result = swift_getWitnessTable(&unk_100F18CD0, &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType);
    atomic_store(result, (unint64_t *)&qword_1013FB028);
  }
  return result;
}

unint64_t sub_10093B9B8()
{
  unint64_t result;

  result = qword_1013FB030;
  if (!qword_1013FB030)
  {
    result = swift_getWitnessTable(&unk_100F18B98, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FB030);
  }
  return result;
}

unint64_t sub_10093B9FC()
{
  unint64_t result;

  result = qword_1013FB038;
  if (!qword_1013FB038)
  {
    result = swift_getWitnessTable(&unk_100F18B70, &type metadata for CRLEditableBezierPathSourceData.Subpath);
    atomic_store(result, (unint64_t *)&qword_1013FB038);
  }
  return result;
}

unint64_t sub_10093BA40()
{
  unint64_t result;

  result = qword_1013FB040;
  if (!qword_1013FB040)
  {
    result = swift_getWitnessTable(&unk_100F188D0, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FB040);
  }
  return result;
}

unint64_t sub_10093BA84()
{
  unint64_t result;

  result = qword_1013FB048;
  if (!qword_1013FB048)
  {
    result = swift_getWitnessTable(&unk_100F188A8, &type metadata for CRLCalloutPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FB048);
  }
  return result;
}

unint64_t sub_10093BAC8()
{
  unint64_t result;

  result = qword_1013FB050;
  if (!qword_1013FB050)
  {
    result = swift_getWitnessTable(&unk_100F18608, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FB050);
  }
  return result;
}

unint64_t sub_10093BB0C()
{
  unint64_t result;

  result = qword_1013FB058;
  if (!qword_1013FB058)
  {
    result = swift_getWitnessTable(&unk_100F185E0, &type metadata for CRLScalarPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FB058);
  }
  return result;
}

unint64_t sub_10093BB50()
{
  unint64_t result;

  result = qword_1013FB060;
  if (!qword_1013FB060)
  {
    result = swift_getWitnessTable(&unk_100F18340, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FB060);
  }
  return result;
}

unint64_t sub_10093BB94()
{
  unint64_t result;

  result = qword_1013FB068;
  if (!qword_1013FB068)
  {
    result = swift_getWitnessTable(&unk_100F18318, &type metadata for CRLPointPathSourceData);
    atomic_store(result, (unint64_t *)&qword_1013FB068);
  }
  return result;
}

uint64_t _s8Freeform22CRLPointPathSourceDataV19PointPathSourceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10093BC24 + 4 * byte_100F1720F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10093BC58 + 4 * byte_100F1720A[v4]))();
}

uint64_t sub_10093BC58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BC60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10093BC68);
  return result;
}

uint64_t sub_10093BC74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10093BC7CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10093BC80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BC88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Node.CodingKeys()
{
  return &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLConnectionLineMagnetData.CodingKeys()
{
  return &type metadata for CRLConnectionLineMagnetData.CodingKeys;
}

uint64_t _s8Freeform23CRLScalarPathSourceDataV20ScalarPathSourceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10093BD00 + 4 * byte_100F17219[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10093BD34 + 4 * byte_100F17214[v4]))();
}

uint64_t sub_10093BD34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BD3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10093BD44);
  return result;
}

uint64_t sub_10093BD50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10093BD58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10093BD5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BD64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Subpath.CodingKeys()
{
  return &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLCalloutPathSourceData.CodingKeys()
{
  return &type metadata for CRLCalloutPathSourceData.CodingKeys;
}

uint64_t _s8Freeform24CRLCalloutPathSourceDataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10093BDE4 + 4 * byte_100F17223[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10093BE18 + 4 * byte_100F1721E[v4]))();
}

uint64_t sub_10093BE18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BE20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10093BE28);
  return result;
}

uint64_t sub_10093BE34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10093BE3CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10093BE40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BE48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLScalarPathSourceData.CodingKeys()
{
  return &type metadata for CRLScalarPathSourceData.CodingKeys;
}

uint64_t _s8Freeform31CRLEditableBezierPathSourceDataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10093BEB0 + 4 * byte_100F1722D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10093BEE4 + 4 * byte_100F17228[v4]))();
}

uint64_t sub_10093BEE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BEEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10093BEF4);
  return result;
}

uint64_t sub_10093BF00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10093BF08);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10093BF0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093BF14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPointPathSourceData.CodingKeys()
{
  return &type metadata for CRLPointPathSourceData.CodingKeys;
}

unint64_t sub_10093BF34()
{
  unint64_t result;

  result = qword_1013FB070;
  if (!qword_1013FB070)
  {
    result = swift_getWitnessTable(&unk_100F19F50, &type metadata for CRLPointPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FB070);
  }
  return result;
}

unint64_t sub_10093BF7C()
{
  unint64_t result;

  result = qword_1013FB078;
  if (!qword_1013FB078)
  {
    result = swift_getWitnessTable(&unk_100F19FF0, &type metadata for CRLScalarPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FB078);
  }
  return result;
}

unint64_t sub_10093BFC4()
{
  unint64_t result;

  result = qword_1013FB080;
  if (!qword_1013FB080)
  {
    result = swift_getWitnessTable(&unk_100F1A090, &type metadata for CRLCalloutPathSourceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FB080);
  }
  return result;
}

unint64_t sub_10093C00C()
{
  unint64_t result;

  result = qword_1013FB088;
  if (!qword_1013FB088)
  {
    result = swift_getWitnessTable(&unk_100F1A130, &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FB088);
  }
  return result;
}

unint64_t sub_10093C054()
{
  unint64_t result;

  result = qword_1013FB090;
  if (!qword_1013FB090)
  {
    result = swift_getWitnessTable(&unk_100F1A1D0, &type metadata for CRLConnectionLineMagnetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FB090);
  }
  return result;
}

unint64_t sub_10093C09C()
{
  unint64_t result;

  result = qword_1013FB098;
  if (!qword_1013FB098)
  {
    result = swift_getWitnessTable(&unk_100F1A270, &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FB098);
  }
  return result;
}

id sub_10093C110(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  uint64_t *v11;
  void *v12;
  char *v13;
  id v14;
  NSString v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  id v26;
  objc_super v28;

  v11 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_actionString];
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = v5;
  v14 = objc_msgSend(v12, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, v17);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  *v11 = v19;
  v11[1] = v21;
  v22 = &v13[OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_sceneID];
  v23 = type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  v25 = (double *)&v13[OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect];
  *v25 = a2;
  v25[1] = a3;
  v25[2] = a4;
  v25[3] = a5;

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for CRLCommandCreateScene(0);
  v26 = objc_msgSendSuper2(&v28, "init");
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v26;
}

void sub_10093C2C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    sub_100B1CDF0(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_sceneID, (uint64_t)v10, *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect), *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect + 8), *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect + 16), *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect + 24));
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

uint64_t sub_10093C3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_sceneID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_actionString + 8));
}

id sub_10093C448()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandCreateScene(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10093C4D0()
{
  return type metadata accessor for CRLCommandCreateScene(0);
}

uint64_t type metadata accessor for CRLCommandCreateScene(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FB0D0;
  if (!qword_1013FB0D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandCreateScene);
  return result;
}

uint64_t sub_10093C514(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = " ";
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100F1A460;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10093C594()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_actionString);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

__n128 sub_10093C5D0()
{
  __n128 result;

  __asm { FMOV            V0.2D, #22.0 }
  xmmword_10147FF80 = (__int128)result;
  return result;
}

int64x2_t sub_10093C5E0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4046000000000000uLL);
  xmmword_10147FF90 = (__int128)result;
  return result;
}

void sub_10093C5F4()
{
  qword_10147FFA0 = 0x4020000000000000;
}

void sub_10093C604()
{
  qword_10147FFA8 = 0x4024000000000000;
}

void sub_10093C614()
{
  qword_10147FFB0 = 0x4030000000000000;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI()
{
  return &type metadata for CRLMiniShapePickerUI;
}

double destroy for CRLMiniShapePickerUI.ShapeButtonGrid(_QWORD *a1)
{
  double result;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for CRLMiniShapePickerUI.ShapeButtonGrid(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  sub_1004EA5C8(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  v4 = a2[7];
  a1[7] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI.ShapeButtonGrid()
{
  return &type metadata for CRLMiniShapePickerUI.ShapeButtonGrid;
}

uint64_t sub_10093C7F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112BE6C, 1);
}

uint64_t sub_10093C800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  _OWORD v14[3];

  v2 = type metadata accessor for LabelStyleConfiguration.Icon(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = LabelStyleConfiguration.icon.getter(v4);
  if (qword_1013DD538 != -1)
    v7 = swift_once(&qword_1013DD538, sub_10093C5D0);
  v8 = xmmword_10147FF80;
  v9 = static Alignment.center.getter(v7);
  _FrameLayout.init(width:height:alignment:)(v14, v8, 0, *((_QWORD *)&v8 + 1), 0, v9, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v6, v2);
  v11 = (_OWORD *)(a1 + *(int *)(sub_1004B804C(&qword_1013FB378) + 36));
  v12 = v14[1];
  *v11 = v14[0];
  v11[1] = v12;
  v11[2] = v14[2];
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_10093C918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  float v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[3];

  v76 = a2;
  v3 = type metadata accessor for ColorSchemeContrast(0);
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  __chkstk_darwin(v3);
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v70 = (uint64_t)&v61 - v6;
  v64 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v64);
  v8 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_1004B804C(&qword_1013FB2F8);
  __chkstk_darwin(v69);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1004B804C(&qword_1013FB300);
  v11 = __chkstk_darwin(v68);
  v74 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ButtonStyleConfiguration.Label(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013FB308);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1004B804C(&qword_1013FB310);
  __chkstk_darwin(v62);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1004B804C(&qword_1013FB318);
  __chkstk_darwin(v63);
  v67 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1004B804C(&qword_1013FB320);
  v24 = __chkstk_darwin(v66);
  v65 = (uint64_t)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = a1;
  ButtonStyleConfiguration.label.getter(v24);
  v26 = sub_1004B7878(&qword_1013FB328, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
  v27 = sub_10093F780();
  View.labelStyle<A>(_:)(v27, v13, &type metadata for CRLMiniShapePickerUI.ShapeButtonLabelStyle, v26, v27);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (qword_1013DD540 != -1)
    v28 = swift_once(&qword_1013DD540, sub_10093C5E0);
  v29 = xmmword_10147FF90;
  v30 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(v77, v29, 0, *((_QWORD *)&v29 + 1), 0, v30, v31);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v20, v17);
  v32 = &v22[*(int *)(v62 + 36)];
  v33 = v77[1];
  *(_OWORD *)v32 = v77[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v77[2];
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (qword_1013DD548 != -1)
    swift_once(&qword_1013DD548, sub_10093C5F4);
  v34 = qword_10147FFA0;
  v35 = (char *)v8 + *(int *)(v64 + 20);
  v36 = enum case for RoundedCornerStyle.continuous(_:);
  v37 = type metadata accessor for RoundedCornerStyle(0);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  *v8 = v34;
  v8[1] = v34;
  v39 = static HierarchicalShapeStyle.quaternary.getter(v38);
  v40 = v70;
  sub_100BF0764(v70);
  v42 = v71;
  v41 = v72;
  v43 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, enum case for ColorSchemeContrast.increased(_:), v73);
  LOBYTE(v36) = static ColorSchemeContrast.== infix(_:_:)(v40, v42);
  v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  v44(v42, v43);
  v44((char *)v40, v43);
  if ((v36 & 1) != 0)
    v45 = 0.2;
  else
    v45 = 1.0;
  sub_1004B8460((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v46 = v69;
  v47 = &v10[*(int *)(v69 + 52)];
  *(_DWORD *)v47 = v39;
  *((float *)v47 + 1) = v45;
  *(_WORD *)&v10[*(int *)(v46 + 56)] = 256;
  sub_1004B84A4((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v48 = v74;
  sub_1004CB7BC((uint64_t)v10, v74, &qword_1013FB2F8);
  v49 = v48 + *(int *)(v68 + 36);
  *(_QWORD *)v49 = 0;
  *(_WORD *)(v49 + 8) = 257;
  v50 = sub_1004CB800((uint64_t)v10, &qword_1013FB2F8);
  v51 = static Alignment.center.getter(v50);
  v53 = v52;
  v54 = (uint64_t)v67;
  v55 = (uint64_t)&v67[*(int *)(v63 + 36)];
  sub_1004CB7BC(v48, v55, &qword_1013FB300);
  v56 = (uint64_t *)(v55 + *(int *)(sub_1004B804C(&qword_1013FB338) + 36));
  *v56 = v51;
  v56[1] = v53;
  sub_1004CB7BC((uint64_t)v22, v54, &qword_1013FB310);
  sub_1004CB800(v48, &qword_1013FB300);
  v57 = sub_1004CB800((uint64_t)v22, &qword_1013FB310);
  if ((ButtonStyleConfiguration.isPressed.getter(v57) & 1) != 0)
    v58 = 0.5;
  else
    v58 = 1.0;
  v59 = v65;
  sub_1004CB7BC(v54, v65, &qword_1013FB318);
  *(double *)(v59 + *(int *)(v66 + 36)) = v58;
  sub_1004CB800(v54, &qword_1013FB318);
  return sub_1004C4938(v59, v76, &qword_1013FB320);
}

void sub_10093CF0C(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = a1;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FB340);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013FB348);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v10;
  v35 = a2;
  if (v4 == 8)
  {
    v16 = sub_1009F7B1C(8u);
    v18 = Image.init(systemName:)(v16, v17);
  }
  else
  {
    v19 = sub_1009F7B1C(a1);
    v18 = Image.init(_:bundle:)(v19, v20, 0);
  }
  v21 = v18;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v22);

  if (v23)
  {
    v24 = Color.init(_:)(v23);
    KeyPath = swift_getKeyPath("HzS");
    v37 = v21;
    v38 = KeyPath;
    v39 = v24;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DynamicTypeSize.large(_:), v5);
    v26 = sub_1004B804C(&qword_1013EF1F8);
    v27 = sub_1007121CC();
    View.dynamicTypeSize(_:)(v8, v26, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release(v37);
    swift_release(v38);
    swift_release(v39);
    sub_1009F7BF0(a1);
    v37 = v28;
    v38 = v29;
    v36[0] = v26;
    v36[1] = v27;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v36, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    v31 = sub_1004D292C();
    View.accessibilityLabel<A>(_:)(&v37, v9, &type metadata for String, OpaqueTypeConformance2, v31);
    v32 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v12, v9, v32);
    sub_1004C4938((uint64_t)v15, v35, &qword_1013FB348);
  }
  else
  {
    __break(1u);
  }
}

void sub_10093D1A4(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  sub_10093CF0C(*v1, a1);
}

uint64_t sub_10093D1AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = v1;
  v65 = a1;
  v63 = sub_1004B804C(&qword_1013FB1F0);
  __chkstk_darwin(v63);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  v59 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v59 + 64);
  __chkstk_darwin(v5);
  v61 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FB1F8);
  v62 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1004B804C(&qword_1013FB200);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_1013FB208);
  __chkstk_darwin(v64);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  LODWORD(v5) = *(unsigned __int8 *)(v1 + *(int *)(v5 + 28));
  sub_10093D688((uint64_t)v9);
  if ((_DWORD)v5 == 1)
  {
    v17 = sub_1004B804C(&qword_1013FB130);
    AccessibilityFocusState.projectedValue.getter(&v66, v17);
    v18 = v67;
    v54 = v66;
    v55 = v68;
    v56 = sub_1004CB6A4(&qword_1013FB218);
    v53 = v7;
    v19 = sub_1004CB6A4(&qword_1013FB220);
    v20 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    v57 = v4;
    v21 = v20;
    v22 = sub_1004CBA30(&qword_1013FB228, &qword_1013FB220, (uint64_t)&protocol conformance descriptor for Button<A>);
    v23 = sub_1004B7878(&qword_1013FB230, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle, (uint64_t)&unk_100F1A67C);
    v66 = v19;
    v67 = v21;
    v68 = v22;
    v69 = v23;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v66 = v56;
    v67 = OpaqueTypeConformance2;
    v56 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer()>>, 1);
    v25 = v53;
    v26 = v54;
    View.accessibilityFocused(_:)(v54, v18, v55, v53, v56);
    swift_release(v18);
    v27 = swift_release(v26);
    v28 = v9;
    v29 = v25;
    (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v28, v25, v27);
    v30 = v61;
    sub_1004B8460(v2, v61, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    v31 = *(unsigned __int8 *)(v59 + 80);
    v32 = (v31 + 16) & ~v31;
    v33 = swift_allocObject(&unk_101289808, v32 + v6, v31 | 7);
    sub_1004B84E0(v30, v33 + v32, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    v34 = v58;
    v35 = v60;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v13, v11, v60);
    v36 = v64;
    v37 = (uint64_t (**)())&v13[*(int *)(v64 + 36)];
    *v37 = sub_10093EDB4;
    v37[1] = (uint64_t (*)())v33;
    v37[2] = 0;
    v37[3] = 0;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
    sub_1004C4938((uint64_t)v13, (uint64_t)v16, &qword_1013FB208);
    v38 = (uint64_t)v57;
    sub_1004CB7BC((uint64_t)v16, (uint64_t)v57, &qword_1013FB208);
    swift_storeEnumTagMultiPayload(v38, v63, 0);
    v39 = sub_10093EC54();
    _ConditionalContent<>.init(storage:)(v38, v36, v29, v39, v56);
    return sub_1004CB800((uint64_t)v16, &qword_1013FB208);
  }
  else
  {
    v41 = v62;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v4, v9, v7);
    swift_storeEnumTagMultiPayload(v4, v63, 1);
    v42 = sub_10093EC54();
    v43 = sub_1004CB6A4(&qword_1013FB218);
    v44 = v4;
    v45 = v7;
    v46 = sub_1004CB6A4(&qword_1013FB220);
    v47 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    v48 = sub_1004CBA30(&qword_1013FB228, &qword_1013FB220, (uint64_t)&protocol conformance descriptor for Button<A>);
    v49 = sub_1004B7878(&qword_1013FB230, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle, (uint64_t)&unk_100F1A67C);
    v66 = v46;
    v67 = v47;
    v68 = v48;
    v69 = v49;
    v50 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v66 = v43;
    v67 = v50;
    v51 = swift_getOpaqueTypeConformance2(&v66, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer()>>, 1);
    _ConditionalContent<>.init(storage:)(v44, v64, v45, v42, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v9, v45);
  }
}

uint64_t sub_10093D688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  _QWORD v34[4];

  v2 = v1;
  v31 = a1;
  v30 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(0);
  __chkstk_darwin(v30);
  v4 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - v6;
  v8 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013FB220);
  v28 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013FB218);
  v29 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v2, (uint64_t)v11, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_101289880, v19 + v10, v18 | 7);
  sub_1004B84E0((uint64_t)v11, v20 + v19, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  v33 = v2;
  v21 = sub_10093EF7C();
  Button.init(action:label:)(sub_10093EF00, v20, sub_10093EF48, v32, &type metadata for CRLMiniShapePickerUI.ShapeImage, v21);
  *v4 = swift_getKeyPath(byte_100F1A5D8);
  v22 = sub_1004B804C(&qword_1013FB240);
  swift_storeEnumTagMultiPayload(v4, v22, 0);
  sub_1004B84E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
  v23 = sub_1004CBA30(&qword_1013FB228, &qword_1013FB220, (uint64_t)&protocol conformance descriptor for Button<A>);
  v24 = sub_1004B7878(&qword_1013FB230, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle, (uint64_t)&unk_100F1A67C);
  v25 = v30;
  View.buttonStyle<A>(_:)(v7, v12, v30, v23, v24);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  v34[0] = v12;
  v34[1] = v25;
  v34[2] = v23;
  v34[3] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v34, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  View.accessibilityShowsLargeContentViewer()(v15, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v15);
}

uint64_t sub_10093D960(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v29 = a1;
  v33 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - v14;
  sub_100503E34();
  v30 = static OS_dispatch_queue.main.getter(v16);
  static DispatchTime.now()(v17);
  + infix(_:_:)(v12, 1.5);
  v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v12, v9);
  sub_1004B8460(v29, (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  v18 = *(unsigned __int8 *)(v7 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_101289830, v19 + v8, v18 | 7);
  sub_1004B84E0((uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  aBlock[4] = sub_10093EE88;
  v38 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101289848;
  v21 = _Block_copy(aBlock);
  v22 = swift_release(v38);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v25 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = v33;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v33, v23);
  v27 = (void *)v30;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v5, v2, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v2, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v35);
  return ((uint64_t (*)(char *, uint64_t))v31)(v15, v32);
}

double sub_10093DC54(uint64_t a1)
{
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = (int *)type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  v3 = (_QWORD *)(a1 + v2[6]);
  v4 = v3[3];
  v5 = v3[4];
  sub_1004BB5A4(v3, v4);
  v6 = (double *)(a1 + v2[8]);
  v7 = *(unsigned __int8 *)(a1 + v2[5]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(v5 + 16))(v7, v4, v5, *v6, v6[1]);
  v8 = sub_1009F7B1C(v7);
  sub_1005118E4(v8, v9, 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_10093DCE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v28[4];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013FB0E0);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static Alignment.center.getter(v7);
  v10 = v9;
  if (qword_1013DD550 != -1)
    swift_once(&qword_1013DD550, sub_10093C604);
  v11 = qword_10147FFA8;
  *(_QWORD *)v6 = v8;
  *((_QWORD *)v6 + 1) = v10;
  *((_QWORD *)v6 + 2) = v11;
  v6[24] = 0;
  *((_QWORD *)v6 + 4) = v11;
  v6[40] = 0;
  sub_1004B804C(&qword_1013FB0E8);
  sub_10093E108(v2, (uint64_t)v28);
  v12 = (_OWORD *)swift_allocObject(&unk_1012897B8, 80, 7);
  v13 = v28[1];
  v12[1] = v28[0];
  v12[2] = v13;
  v14 = v28[3];
  v12[3] = v28[2];
  v12[4] = v14;
  v15 = sub_1004B804C(&qword_1013FB0F0);
  v16 = sub_1004CBA30(&qword_1013FB0F8, &qword_1013FB0F0, (uint64_t)&protocol conformance descriptor for GridRow<A>);
  v17 = ForEach<>.init(_:content:)(0, 3, sub_10093E18C, v12, v15, v16);
  v18 = static Edge.Set.all.getter(v17);
  if (qword_1013DD558 != -1)
    swift_once(&qword_1013DD558, sub_10093C614);
  v19 = EdgeInsets.init(_all:)(*(double *)&qword_10147FFB0);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_1004CB7BC((uint64_t)v6, a1, &qword_1013FB0E0);
  v26 = a1 + *(int *)(sub_1004B804C(&qword_1013FB100) + 36);
  *(_BYTE *)v26 = v18;
  *(double *)(v26 + 8) = v19;
  *(_QWORD *)(v26 + 16) = v21;
  *(_QWORD *)(v26 + 24) = v23;
  *(_QWORD *)(v26 + 32) = v25;
  *(_BYTE *)(v26 + 40) = 0;
  return sub_1004CB800((uint64_t)v6, &qword_1013FB0E0);
}

uint64_t sub_10093DEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD v11[4];

  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  sub_1004B804C(&qword_1013FB0F0);
  sub_10093E108(a2, (uint64_t)v11);
  v5 = swift_allocObject(&unk_1012897E0, 88, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v6 = v11[1];
  *(_OWORD *)(v5 + 24) = v11[0];
  *(_OWORD *)(v5 + 40) = v6;
  v7 = v11[3];
  *(_OWORD *)(v5 + 56) = v11[2];
  *(_OWORD *)(v5 + 72) = v7;
  v8 = sub_1004B804C(&qword_1013FB108);
  v9 = sub_10093E1CC();
  return ForEach<>.init(_:content:)(0, 3, sub_10093E1C0, v5, v8, v9);
}

void sub_10093DFAC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = (int *)type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 3 * a2;
  if ((unsigned __int128)(a2 * (__int128)3) >> 64 != (3 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = __OFADD__(v9, a1);
  v11 = v9 + a1;
  if (v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v12 = a3[7];
  if (v11 < *(_QWORD *)(v12 + 16))
  {
    v13 = *(_BYTE *)(v12 + v11 + 32);
    v14 = sub_1004E90B0((uint64_t)a3, (uint64_t)&v8[v6[6]]);
    v15 = a3[5];
    v16 = a3[6];
    AccessibilityFocusState.init<>()(v14);
    v8[v6[5]] = v13;
    v17 = &v8[v6[8]];
    *(_QWORD *)v17 = v15;
    *((_QWORD *)v17 + 1) = v16;
    v8[v6[7]] = v11 == 0;
    v18 = sub_1004B7878(&qword_1013FB118, type metadata accessor for CRLMiniShapePickerUI.ShapeButton, (uint64_t)&unk_100F1A588);
    View.accessibilitySortPriority(_:)(v6, v18, (double)-(uint64_t)v11);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10093E108(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a2 + 56) = v5;
  swift_bridgeObjectRetain(v5);
  return a2;
}

uint64_t sub_10093E160()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10093E18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10093DEE0(a1, v2 + 16, a2);
}

uint64_t sub_10093E194()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 88, 7);
}

void sub_10093E1C0(uint64_t a1)
{
  uint64_t v1;

  sub_10093DFAC(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

unint64_t sub_10093E1CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FB110;
  if (!qword_1013FB110)
  {
    v1 = sub_1004CB6A4(&qword_1013FB108);
    sub_1004B7878(&qword_1013FB118, type metadata accessor for CRLMiniShapePickerUI.ShapeButton, (uint64_t)&unk_100F1A588);
    sub_1004B7878(&qword_1013FB120, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB110);
  }
  return result;
}

uint64_t type metadata accessor for CRLMiniShapePickerUI.ShapeButton(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FB190, (uint64_t)&nominal type descriptor for CRLMiniShapePickerUI.ShapeButton);
}

uint64_t *sub_10093E27C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for AccessibilityTechnologies(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_1004B804C(&qword_1013FB128);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)sub_1004B804C(&qword_1013FB130);
    *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
    v12 = v11[10];
    v13 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = v13;
    *((_BYTE *)a1 + v11[11]) = *((_BYTE *)a2 + v11[11]);
    v14 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)a1 + v14 + 24) = v17;
    v18 = v17;
    v19 = **(void (***)(char *, char *, uint64_t, __n128))(v17 - 8);
    v20 = swift_retain(v13);
    v19(v15, v16, v18, v20);
    v21 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  }
  return a1;
}

uint64_t sub_10093E3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for AccessibilityTechnologies(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = sub_1004B804C(&qword_1013FB130);
  swift_release(*(_QWORD *)(a1 + *(int *)(v6 + 40)));
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 24)));
}

char *sub_10093E464(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;

  v6 = type metadata accessor for AccessibilityTechnologies(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C(&qword_1013FB128);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)sub_1004B804C(&qword_1013FB130);
  a1[v9[9]] = a2[v9[9]];
  v10 = v9[10];
  v11 = *(_QWORD *)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  a1[v9[11]] = a2[v9[11]];
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_OWORD *)&a2[v12 + 24];
  *(_OWORD *)&a1[v12 + 24] = v15;
  v16 = v15;
  v17 = **(void (***)(char *, char *, uint64_t, __n128))(v15 - 8);
  v18 = swift_retain(v11);
  v17(v13, v14, v16, v18);
  v19 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  return a1;
}

char *sub_10093E5A0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = type metadata accessor for AccessibilityTechnologies(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C(&qword_1013FB128);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = (int *)sub_1004B804C(&qword_1013FB130);
  a1[v12[9]] = a2[v12[9]];
  v13 = v12[10];
  v14 = *(_QWORD *)&a1[v13];
  v15 = *(_QWORD *)&a2[v13];
  *(_QWORD *)&a1[v13] = v15;
  swift_retain(v15);
  swift_release(v14);
  a1[v12[11]] = a2[v12[11]];
  a1[a3[5]] = a2[a3[5]];
  sub_1004EA5C8(&a1[a3[6]], &a2[a3[6]]);
  a1[a3[7]] = a2[a3[7]];
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  return a1;
}

char *sub_10093E724(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;

  v6 = type metadata accessor for AccessibilityTechnologies(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C(&qword_1013FB128);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)sub_1004B804C(&qword_1013FB130);
  a1[v9[9]] = a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  a1[v9[11]] = a2[v9[11]];
  v10 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  return a1;
}

char *sub_10093E83C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;

  v6 = type metadata accessor for AccessibilityTechnologies(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C(&qword_1013FB128);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = (int *)sub_1004B804C(&qword_1013FB130);
  a1[v12[9]] = a2[v12[9]];
  v13 = v12[10];
  v14 = *(_QWORD *)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_release(v14);
  a1[v12[11]] = a2[v12[11]];
  v15 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&a1[v15]);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  return a1;
}

uint64_t sub_10093E9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10093E9C0);
}

uint64_t sub_10093E9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013FB130);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10093EA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10093EA50);
}

uint64_t sub_10093EA50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013FB130);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

void sub_10093EAD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10093EB60();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F1A528;
    v4[2] = &unk_100F1A540;
    v4[3] = &unk_100F1A558;
    v4[4] = &unk_100F1A570;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_10093EB60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1013FB1A0)
  {
    v0 = type metadata accessor for AccessibilityFocusState(0, &type metadata for Bool, &protocol witness table for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1013FB1A0);
  }
}

unint64_t sub_10093EBC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FB1E0;
  if (!qword_1013FB1E0)
  {
    v1 = sub_1004CB6A4(&qword_1013FB100);
    sub_1004CBA30(&qword_1013FB1E8, &qword_1013FB0E0, (uint64_t)&protocol conformance descriptor for Grid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB1E0);
  }
  return result;
}

uint64_t sub_10093EC44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112BED8, 1);
}

unint64_t sub_10093EC54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1013FB210;
  if (!qword_1013FB210)
  {
    v1 = sub_1004CB6A4(&qword_1013FB208);
    v2 = sub_1004CB6A4(&qword_1013FB1F8);
    v3 = sub_1004CB6A4(&qword_1013FB218);
    v6 = sub_1004CB6A4(&qword_1013FB220);
    v7 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    v8 = sub_1004CBA30(&qword_1013FB228, &qword_1013FB220, (uint64_t)&protocol conformance descriptor for Button<A>);
    v9 = sub_1004B7878(&qword_1013FB230, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle, (uint64_t)&unk_100F1A67C);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer()>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityFocused(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB210);
  }
  return result;
}

uint64_t type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FB2A8, (uint64_t)&nominal type descriptor for CRLMiniShapePickerUI.ShapeButtonStyle);
}

uint64_t sub_10093EDB4()
{
  return sub_10093EF0C(sub_10093D960);
}

uint64_t sub_10093EDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for AccessibilityTechnologies(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  v9 = sub_1004B804C(&qword_1013FB130);
  swift_release(*(_QWORD *)(v6 + *(int *)(v9 + 40)));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v6 + *(int *)(v1 + 24)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10093EE88()
{
  uint64_t v0;
  char v2;

  type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  v2 = 1;
  v0 = sub_1004B804C(&qword_1013FB130);
  return AccessibilityFocusState.wrappedValue.setter(&v2, v0);
}

double sub_10093EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_10093EEF4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10093EF00()
{
  return sub_10093EF0C((uint64_t (*)(uint64_t))sub_10093DC54);
}

uint64_t sub_10093EF0C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_10093EF48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  result = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  *a1 = *(_BYTE *)(v3 + *(int *)(result + 20));
  return result;
}

unint64_t sub_10093EF7C()
{
  unint64_t result;

  result = qword_1013FB238;
  if (!qword_1013FB238)
  {
    result = swift_getWitnessTable(&unk_100F1A62C, &type metadata for CRLMiniShapePickerUI.ShapeImage);
    atomic_store(result, (unint64_t *)&qword_1013FB238);
  }
  return result;
}

uint64_t *sub_10093EFC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1004B804C(&qword_1013FB240);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_10093F08C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_1004B804C(&qword_1013FB240);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

uint64_t *sub_10093F0F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1004B804C(&qword_1013FB240);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_10093F18C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1004CB800((uint64_t)a1, &qword_1013FB240);
    v4 = sub_1004B804C(&qword_1013FB240);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_10093F240(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1004B804C(&qword_1013FB240);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_10093F2D8(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1004CB800((uint64_t)a1, &qword_1013FB240);
    v4 = sub_1004B804C(&qword_1013FB240);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10093F388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10093F394);
}

uint64_t sub_10093F394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FB248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10093F3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10093F3E0);
}

uint64_t sub_10093F3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FB248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_10093F424(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10093F48C(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
  }
}

void sub_10093F48C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013FB2B8)
  {
    v2 = type metadata accessor for ColorSchemeContrast(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013FB2B8);
  }
}

uint64_t getEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMiniShapePickerUI.ShapeImage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_10093F5BC + 4 * byte_100F1A495[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10093F5F0 + 4 * byte_100F1A490[v4]))();
}

uint64_t sub_10093F5F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093F5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10093F600);
  return result;
}

uint64_t sub_10093F60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10093F614);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_10093F618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10093F620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI.ShapeImage()
{
  return &type metadata for CRLMiniShapePickerUI.ShapeImage;
}

unint64_t sub_10093F640()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = qword_1013FB2E8;
  if (!qword_1013FB2E8)
  {
    v1 = sub_1004CB6A4(&qword_1013FB2F0);
    sub_10093EC54();
    v2 = sub_1004CB6A4(&qword_1013FB218);
    v4 = sub_1004CB6A4(&qword_1013FB220);
    v5 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    v6 = sub_1004CBA30(&qword_1013FB228, &qword_1013FB220, (uint64_t)&protocol conformance descriptor for Button<A>);
    v7 = sub_1004B7878(&qword_1013FB230, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle, (uint64_t)&unk_100F1A67C);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer()>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB2E8);
  }
  return result;
}

uint64_t sub_10093F760(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112BF44, 1);
}

uint64_t sub_10093F770(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112BF1C, 1);
}

unint64_t sub_10093F780()
{
  unint64_t result;

  result = qword_1013FB330;
  if (!qword_1013FB330)
  {
    result = swift_getWitnessTable(&unk_100F1A708, &type metadata for CRLMiniShapePickerUI.ShapeButtonLabelStyle);
    atomic_store(result, (unint64_t *)&qword_1013FB330);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI.ShapeButtonLabelStyle()
{
  return &type metadata for CRLMiniShapePickerUI.ShapeButtonLabelStyle;
}

unint64_t sub_10093F7E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FB350;
  if (!qword_1013FB350)
  {
    v1 = sub_1004CB6A4(&qword_1013FB320);
    sub_10093F84C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB350);
  }
  return result;
}

unint64_t sub_10093F84C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FB358;
  if (!qword_1013FB358)
  {
    v1 = sub_1004CB6A4(&qword_1013FB318);
    sub_10093F8D0();
    sub_1004CBA30(&qword_1013FB368, &qword_1013FB338, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB358);
  }
  return result;
}

unint64_t sub_10093F8D0()
{
  unint64_t result;
  uint64_t v1;
  __n128 v2;
  _QWORD v3[4];

  result = qword_1013FB360;
  if (!qword_1013FB360)
  {
    v1 = sub_1004CB6A4(&qword_1013FB310);
    v3[0] = type metadata accessor for ButtonStyleConfiguration.Label(255, v2);
    v3[1] = &type metadata for CRLMiniShapePickerUI.ShapeButtonLabelStyle;
    v3[2] = sub_1004B7878(&qword_1013FB328, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    v3[3] = sub_10093F780();
    swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB360);
  }
  return result;
}

unint64_t sub_10093F998()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1013FB370;
  if (!qword_1013FB370)
  {
    v1 = sub_1004CB6A4(&qword_1013FB348);
    v2[0] = sub_1004CB6A4(&qword_1013EF1F8);
    v2[1] = sub_1007121CC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_1004B7878(&qword_1013FB120, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB370);
  }
  return result;
}

uint64_t sub_10093FA44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112BF6C, 1);
}

unint64_t sub_10093FA58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FB380;
  if (!qword_1013FB380)
  {
    v1 = sub_1004CB6A4(&qword_1013FB378);
    sub_1004B7878(qword_1013FB388, (uint64_t (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon, (uint64_t)&protocol conformance descriptor for LabelStyleConfiguration.Icon);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB380);
  }
  return result;
}

uint64_t destroy for CRLNumericRegexGenerator.Cache(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s8Freeform24CRLNumericRegexGeneratorV5CacheVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for CRLNumericRegexGenerator.Cache(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for CRLNumericRegexGenerator.Cache(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t type metadata accessor for CRLAtomicDictionaryVar(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLAtomicDictionaryVar);
}

uint64_t sub_10093FBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(__n128))(*(_QWORD *)v0 + 80))(v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
    return 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v8, v3, v4);
    v9 = Data.init(contentsOf:options:)(v8, 0);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v9;
}

void sub_10093FD2C(void (*a1)(id))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  NSURL *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  id v20;
  uint64_t v21;

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - v12;
  (*(void (**)(__n128))(*(_QWORD *)v1 + 80))(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013E04D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    v14 = objc_allocWithZone((Class)CRLFileIOChannel);
    v15 = sub_100865298((uint64_t)v9);
    URL._bridgeToObjectiveC()(v16);
    v18 = v17;
    v19 = (unint64_t)objc_msgSend(v17, "crl_fileSize");

    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v20 = objc_msgSend(objc_allocWithZone((Class)CRLReadChannelInputStreamAdapter), "initWithReadChannel:length:closeChannelOnClose:", v15, v19, 1);

      a1(v20);
      objc_msgSend(v20, "close");

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
}

id sub_100940038(uint64_t a1)
{
  id v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  _OWORD *v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  Class isa;
  _QWORD v19[2];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(*(_QWORD *)v1 + 80))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013E04D0);
    v11 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v11, 0, 0);
    *v12 = xmmword_100EEE370;
    swift_willThrow((__n128)xmmword_100EEE370);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    v13 = objc_allocWithZone((Class)AVURLAsset);
    swift_bridgeObjectRetain(a1);
    URL._bridgeToObjectiveC()(v14);
    v16 = v15;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v1 = objc_msgSend(v13, "initWithURL:options:", v16, isa, swift_bridgeObjectRelease().n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v1;
}

uint64_t sub_100940204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_10094026C()
{
  return URL.lastPathComponent.getter();
}

void sub_100940294(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  char v48[32];

  v3 = type metadata accessor for SHA256(0);
  v40 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for SHA256Digest(0);
  v38 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v36 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v44 = (char *)&v35 - v14;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v15);
  v43 = (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v42 = (char *)&v35 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v35 - v20;
  v46 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 16));
  v22 = v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID, v48, 0, 0);
  v41 = v22;
  v23 = v22;
  v24 = v11;
  v25 = v10;
  sub_1006950CC(v23, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v10) == 1)
  {
    v35 = a1;
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url, v45);
    v26 = sub_100941198();
    dispatch thunk of HashFunction.init()(v3, v26);
    sub_100C7E6B0((uint64_t)v9);
    v27 = v37;
    dispatch thunk of HashFunction.finalize()(v3, v26);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v3);
    v28 = v36;
    SHA256Digest.withUnsafeBytes<A>(_:)(sub_10089B3C4, 0, v25);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
    v29 = v44;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v44, v28, v25);
    v30 = v42;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v42, v29, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v30, 0, 1, v25);
    v31 = (uint64_t)v30;
    v32 = v43;
    sub_1008C89B0(v31, v43);
    v33 = v41;
    swift_beginAccess(v41, v47, 33, 0);
    sub_1005E388C(v32, v33);
    swift_endAccess(v47);
    a1 = v35;
  }
  else
  {
    v29 = v21;
  }
  v34 = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(a1, v29, v25);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 16));
}

void sub_1009407F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD);
  id v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  if ((a2 & 2) != 0)
  {
    v6 = swift_allocObject(&unk_101289A98, 32, 7);
    *(_QWORD *)(v6 + 16) = a3;
    *(_QWORD *)(v6 + 24) = a4;
    v12[4] = sub_10070FDDC;
    v13 = v6;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = *(_QWORD *)"";
    v12[2] = sub_1005D2FC0;
    v12[3] = &unk_101289AB0;
    v7 = _Block_copy(v12);
    v8 = v13;
    swift_retain(a4);
    swift_release(v8);
    v9 = v7;
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      v9[2](v9);
    }
    else
    {
      v10 = &_dispatch_main_q;
      v11 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

    }
    _Block_release(v9);
  }
}

uint64_t sub_1009408F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage_lock));
  return sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID, (uint64_t *)&unk_1013E1A50);
}

uint64_t sub_100940960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage_lock));
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID, (uint64_t *)&unk_1013E1A50);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1009409D8()
{
  return type metadata accessor for CRLFileAssetStorage(0);
}

uint64_t type metadata accessor for CRLFileAssetStorage(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FB4D8;
  if (!qword_1013FB4D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFileAssetStorage);
  return result;
}

void sub_100940A1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_1005E26CC(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 192);
    }
  }
}

void sub_100940AB0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2320, "Freeform/CRLFileAssetStorage.swift", 34, 2, 83, 0);
  __break(1u);
}

void sub_100940B08()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2320, "Freeform/CRLFileAssetStorage.swift", 34, 2, 87, 0);
  __break(1u);
}

void sub_100940B60()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2320, "Freeform/CRLFileAssetStorage.swift", 34, 2, 91, 0);
  __break(1u);
}

void sub_100940BB8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2320, "Freeform/CRLFileAssetStorage.swift", 34, 2, 147, 0);
  __break(1u);
}

void sub_100940C10()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2300, "Freeform/CRLFileAssetStorage.swift", 34, 2, 151, 0);
  __break(1u);
}

void sub_100940C68()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2300, "Freeform/CRLFileAssetStorage.swift", 34, 2, 155, 0);
  __break(1u);
}

void sub_100940CC0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2300, "Freeform/CRLFileAssetStorage.swift", 34, 2, 159, 0);
  __break(1u);
}

void sub_100940D18()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100FE2300, "Freeform/CRLFileAssetStorage.swift", 34, 2, 163, 0);
  __break(1u);
}

uint64_t type metadata accessor for CRLFileAssetStorageBase()
{
  return objc_opt_self(_TtC8Freeform23CRLFileAssetStorageBase);
}

id sub_100940D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSURL *v10;
  void *v11;
  void *v12;
  uint64_t v14;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(**(_QWORD **)v0 + 80))(v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    URL._bridgeToObjectiveC()(v10);
    v12 = v11;
    v9 = objc_msgSend(v11, "crl_fileSize");

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v9;
}

uint64_t sub_100940EBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 88))();
}

uint64_t sub_100940EE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

uint64_t sub_100940F0C()
{
  return sub_10093FBE0();
}

CGDataProviderRef sub_100940F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  CGDataProviderRef v9;
  NSURL *v10;
  const __CFURL *v11;
  const __CFURL *v12;
  uint64_t v14;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(**(_QWORD **)v0 + 80))(v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    URL._bridgeToObjectiveC()(v10);
    v12 = v11;
    v9 = CGDataProviderCreateWithURL(v11);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v9;
}

void sub_100941050(void (*a1)(id))
{
  sub_10093FD2C(a1);
}

id sub_100941070(uint64_t a1)
{
  return sub_100940038(a1);
}

uint64_t sub_100941090()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 144))() & 1;
}

uint64_t sub_1009410BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 152))();
}

uint64_t sub_1009410E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 160))();
}

uint64_t sub_10094110C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 168))();
}

uint64_t sub_100941134()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 176))();
}

uint64_t sub_10094115C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100941180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100941190(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_100941198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F7428;
  if (!qword_1013F7428)
  {
    v1 = type metadata accessor for SHA256(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SHA256, v1);
    atomic_store(result, (unint64_t *)&qword_1013F7428);
  }
  return result;
}

double sub_1009411E0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  float v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41[24];
  char v42[24];

  v36 = a1;
  v3 = type metadata accessor for ResizeBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  v39 = v4;
  __chkstk_darwin(v3);
  v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a2, "wpEditors");
  v7 = type metadata accessor for CRLWPEditor(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
    goto LABEL_43;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    v10 = 0;
    v40 = v8 & 0xC000000000000001;
    v34 = v8 & 0xFFFFFFFFFFFFFF8;
    v35 = enum case for ResizeBehavior.larger(_:);
    v11 = _swiftEmptyArrayStorage;
    HIDWORD(v33) = enum case for ResizeBehavior.smaller(_:);
    while (1)
    {
      if (v40)
      {
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      }
      else
      {
        if (v10 >= *(_QWORD *)(v34 + 16))
          goto LABEL_42;
        v12 = *(id *)(v8 + 8 * v10 + 32);
      }
      v13 = v12;
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      KeyPath = swift_getKeyPath(&unk_100F1A810);
      sub_100731820(KeyPath);
      v17 = v16;
      swift_release(KeyPath);
      if ((v17 & 0xFF00000000) == 0x200000000)
      {
        if (qword_1013DD838 != -1)
          swift_once(&qword_1013DD838, sub_100A04F30);
        swift_beginAccess(&static OS_os_log.appIntents, v42, 0, 0);
        v18 = (id)static OS_os_log.appIntents;
        v19 = static os_log_type_t.debug.getter();
        sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v19, "Trying to set font size on non text selection", 45, 2, (uint64_t)v11);

      }
      else
      {
        if ((~(_DWORD)v17 & 0x7F800000) == 0)
          goto LABEL_39;
        v20 = *(float *)&v17;
        if (*(float *)&v17 <= -9.2234e18)
          goto LABEL_40;
        if (*(float *)&v17 >= 9.2234e18)
          goto LABEL_41;
        v21 = v11;
        v22 = v9;
        v23 = (uint64_t)*(float *)&v17;
        v24 = 0;
        switch((uint64_t)v20)
        {
          case 10:
            goto LABEL_31;
          case 11:
          case 13:
          case 15:
          case 16:
          case 17:
          case 19:
          case 20:
          case 21:
          case 22:
          case 23:
          case 25:
          case 26:
          case 27:
          case 28:
          case 29:
          case 30:
          case 31:
          case 32:
          case 33:
          case 34:
          case 35:
          case 37:
          case 38:
          case 39:
          case 40:
          case 41:
          case 42:
          case 43:
          case 44:
          case 45:
          case 46:
          case 47:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 58:
          case 59:
          case 60:
          case 61:
          case 62:
          case 63:
          case 64:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 91:
          case 92:
          case 93:
          case 94:
          case 95:
            goto LABEL_21;
          case 12:
            v24 = 1;
            goto LABEL_31;
          case 14:
            v24 = 2;
            goto LABEL_31;
          case 18:
            v24 = 3;
            goto LABEL_31;
          case 24:
            v24 = 4;
            goto LABEL_31;
          case 36:
            v24 = 5;
            goto LABEL_31;
          case 48:
            v24 = 6;
            goto LABEL_31;
          case 72:
            v24 = 7;
            goto LABEL_31;
          case 96:
            v24 = 8;
            goto LABEL_31;
          default:
            if (v23 == 144)
            {
              v24 = 9;
LABEL_31:
              v28 = v38;
              v27 = v39;
              v29 = v37;
              (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, v36, v38);
              v30 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v29, v28);
              if (v30 == v35)
                __asm { BR              X11 }
              v9 = v22;
              if (v30 == HIDWORD(v33))
                __asm { BR              X11 }
              (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);

            }
            else
            {
LABEL_21:
              sub_100757E04(&_mh_execute_header, (uint64_t)"changeSelectionFontSize(behavior:using:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Performers/Intents/CRLChangeSelectioFontSizeIntentPerformer.swift", 130, 2, 29, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)v11);
              sub_1004F5394((uint64_t)v11, (uint64_t)"changeSelectionFontSize(behavior:using:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Performers/Intents/CRLChangeSelectioFontSizeIntentPerformer.swift", 130, 2u, 29, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
              if (qword_1013DD838 != -1)
                swift_once(&qword_1013DD838, sub_100A04F30);
              swift_beginAccess(&static OS_os_log.appIntents, v41, 0, 0);
              v25 = (id)static OS_os_log.appIntents;
              v26 = static os_log_type_t.error.getter(v25);
              sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v26, "Unsupported text size found", 27, 2, (uint64_t)v11);

            }
            v11 = v21;
            break;
        }
      }
      ++v10;
      if (v14 == v9)
        goto LABEL_47;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    if (v8 < 0)
      v31 = v8;
    else
      v31 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v8);
  }
LABEL_47:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CRLChangeSelectionFontSizeIntentPerformer()
{
  return &type metadata for CRLChangeSelectionFontSizeIntentPerformer;
}

id sub_100942548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2, a2)), "init");
  v5 = v4;
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = v4;
    __asm { BR              X12 }
  }
  swift_bridgeObjectRelease(a1);
  return v5;
}

void sub_10094265C(uint64_t a1)
{
  __asm { BR              X15 }
}

BOOL sub_1009426A4@<W0>(double a1@<X8>)
{
  double v1;
  double v2;
  double v3;
  int v4;

  return !v4 && sub_10005FDF0(v1, v3, v2, a1);
}

void sub_100942768(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  _QWORD *v8;
  char v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  _BYTE v21[24];

  v8 = (_QWORD *)(a2 + 16);
  v9 = 3;
  v10 = 0.0;
  v11 = 0.0;
  v12 = 0.0;
  v13 = 0.0;
  v14 = 0.0;
  v15 = 0.0;
  switch(a1)
  {
    case 0:
      v9 = 0;
      goto LABEL_5;
    case 1:
      v9 = 1;
LABEL_5:
      v11 = a3;
      v12 = a4;
      goto LABEL_7;
    case 2:
      v9 = 2;
      v11 = a3;
      v12 = a4;
      v10 = a5;
      v13 = a6;
      v14 = a7;
      v15 = a8;
      goto LABEL_7;
    case 3:
LABEL_7:
      swift_beginAccess(v8, v21, 33, 0);
      v16 = (_QWORD *)*v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
      *v8 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v16 = sub_100D11650(0, v16[2] + 1, 1, v16);
        *v8 = v16;
      }
      v19 = v16[2];
      v18 = v16[3];
      if (v19 >= v18 >> 1)
      {
        v16 = sub_100D11650((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
        *v8 = v16;
      }
      v16[2] = v19 + 1;
      v20 = (double *)&v16[7 * v19];
      v20[4] = v11;
      v20[5] = v12;
      v20[6] = v10;
      v20[7] = v13;
      v20[8] = v14;
      v20[9] = v15;
      *((_BYTE *)v20 + 80) = v9;
      swift_endAccess(v21);
      break;
    default:
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 64, "Unknown path element type. Ignoring element.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2u, 64, (uint64_t)"Unknown path element type. Ignoring element.", 44, 2u);
      break;
  }
}

uint64_t sub_100942954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_100942A58(a2, v6);
  if (!v2)
  {
    v8 = sub_1009445E0();
    v9 = Message.serializedData(partial:)(0, v4, v8);
    v11 = v10;
    v12 = sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLProto_Path);
    v13 = dispatch thunk of CREncoder.valueContainer()(v12);
    dispatch thunk of CREncoder.CRValueContainer.encode(_:)(v9, v11);
    swift_release(v13);
    return sub_1004BBBC8(v9, v11);
  }
  return result;
}

uint64_t sub_100942A58@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  char v30;
  int v31;
  uint64_t v32;

  v5 = type metadata accessor for CRLProto_Path.Element(0);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  __chkstk_darwin(v5);
  v20 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (_OWORD *)((char *)v14 - v8);
  *a2 = _swiftEmptyArrayStorage;
  v10 = type metadata accessor for CRLProto_Path(0);
  result = UnknownStorage.init()(v10);
  if (*(_QWORD *)(a1 + 16))
  {
    v14[1] = v2;
    v14[14] = &v32;
    v14[15] = &v31;
    v14[8] = &v30;
    v14[9] = &v29;
    v14[6] = (char *)&v25 + 4;
    v14[7] = &v25;
    v14[4] = &v28;
    v14[5] = &v27;
    v14[2] = (char *)&v26 + 4;
    v14[3] = &v26;
    v14[12] = &v24;
    v14[13] = &v23;
    v14[10] = &v22;
    v14[11] = &v21;
    swift_bridgeObjectRetain(a1);
    v17 = xmmword_100EF78C0;
    v15 = xmmword_100EF5A10;
    v16 = 0x3F4D7DBF487FCB92;
    v12 = *(unsigned __int8 *)(a1 + 80);
    v9[1] = xmmword_100EF78C0;
    v9[2] = xmmword_100EF78C0;
    v9[3] = xmmword_100EF78C0;
    UnknownStorage.init()(v13);
    __asm { BR              X8 }
  }
  return result;
}

uint64_t sub_1009430D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_100942A58(a2, v7);
  if (!v2)
  {
    v9 = sub_1009445E0();
    v10 = Message.serializedData(partial:)(0, v5, v9);
    v12 = v11;
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLProto_Path);
    v13 = a1[3];
    v14 = a1[4];
    sub_1004BB5A4(a1, v13);
    dispatch thunk of Encoder.singleValueContainer()(v20, v13, v14);
    v19[0] = v10;
    v19[1] = v12;
    v15 = v21;
    v16 = v22;
    sub_1004CB9AC((uint64_t)v20, v21);
    v17 = sub_100587C2C();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)(v19, &type metadata for Data, v17, v15, v16);
    sub_1004BBBC8(v10, v12);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
  }
  return result;
}

void sub_100943218(uint64_t a1@<X0>, double **a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __n128 v10;
  double *v11;

  v5 = dispatch thunk of CRDecoder.valueContainer()();
  if (v2)
  {
    swift_release(a1);
  }
  else
  {
    v6 = v5;
    v7 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
    v9 = v8;
    v10 = swift_release(v6);
    v11 = sub_100944268(v7, v9, v10);
    sub_1004BBBC8(v7, v9);
    swift_release(a1);
    *a2 = v11;
  }
}

uint64_t sub_1009432C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_100942954(a1, *v1);
}

void *sub_1009432DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  void *result;

  result = sub_1009443C8(a1, a3);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_100943304(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1009430D0(a1, *v1);
}

uint64_t sub_10094331C(uint64_t *a1, uint64_t *a2)
{
  return sub_100544C38(*a1, *a2);
}

uint64_t sub_100943328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100944628();
  v7 = sub_10094466C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100943384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLProto_Path.Element(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1009433C8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

double *sub_10094342C@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  double *result;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  unint64_t v48;
  float v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v54;
  double *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t inited;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double *v68;
  uint64_t v69;
  uint64_t v70;

  result = (double *)BYTE6(v3);
  if (!BYTE6(v3))
    return result;
  if (BYTE6(v3) == 4)
  {
    if ((a1 & 1) != 0)
    {
      if (v1)
      {
        if (v1 == 1)
        {
          if (v2 >> 32 < (int)v2)
          {
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
          sub_1004BE310(v2, v3);
          v14 = __DataStorage._bytes.getter(v13);
          if (v14)
          {
            v15 = v14;
            v16 = __DataStorage._offset.getter();
            v17 = (int)v2 - v16;
            if (__OFSUB__((int)v2, v16))
            {
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
            }
            v18 = __DataStorage._length.getter();
            v19 = (char *)(v15 + v17);
            if (v18 >= (v2 >> 32) - (int)v2)
              v18 = (v2 >> 32) - (int)v2;
            v20 = v18 / 2;
          }
          else
          {
            __DataStorage._length.getter();
            v19 = 0;
            v20 = 0;
          }
          v34 = sub_1005FFF6C(v19, v20);
          sub_1004BBBC8(v2, v3);
          v35 = *((_QWORD *)v34 + 2);
          if (!v35)
            goto LABEL_63;
        }
        else
        {
          v36 = v3 & 0x3FFFFFFFFFFFFFFFLL;
          v37 = *(_QWORD *)(v2 + 16);
          v38 = *(_QWORD *)(v2 + 24);
          swift_retain(v2);
          v39 = swift_retain(v3 & 0x3FFFFFFFFFFFFFFFLL);
          v40 = (char *)__DataStorage._bytes.getter(v39);
          if (v40)
          {
            v41 = __DataStorage._offset.getter();
            if (__OFSUB__(v37, v41))
              goto LABEL_78;
            v40 += v37 - v41;
          }
          _VF = __OFSUB__(v38, v37);
          v42 = v38 - v37;
          if (_VF)
            goto LABEL_76;
          v43 = __DataStorage._length.getter();
          if (v40)
          {
            if (v43 >= v42)
              v44 = v42;
            else
              v44 = v43;
            v45 = v44 / 2;
          }
          else
          {
            v45 = 0;
          }
          v34 = sub_1005FFF6C(v40, v45);
          swift_release(v36);
          swift_release(v2);
          v35 = *((_QWORD *)v34 + 2);
          if (!v35)
            goto LABEL_63;
        }
      }
      else
      {
        v68 = (double *)v2;
        LOWORD(v69) = v3;
        BYTE2(v69) = BYTE2(v3);
        BYTE3(v69) = BYTE3(v3);
        BYTE4(v69) = BYTE4(v3);
        BYTE5(v69) = BYTE5(v3);
        v34 = sub_1005FFF6C((char *)&v68, (v3 >> 49) & 0x7F);
        v35 = *((_QWORD *)v34 + 2);
        if (!v35)
          goto LABEL_63;
      }
      v68 = _swiftEmptyArrayStorage;
      sub_100600708(0, v35, 0);
      v51 = 0;
      v47 = v68;
      v52 = *((_QWORD *)v68 + 2);
      do
      {
        _H8 = *((_WORD *)v34 + v51 + 16);
        v68 = v47;
        v54 = *((_QWORD *)v47 + 3);
        if (v52 >= v54 >> 1)
        {
          sub_100600708(v54 > 1, v52 + 1, 1);
          v47 = v68;
        }
        ++v51;
        __asm { FCVT            D0, H8 }
        *((_QWORD *)v47 + 2) = v52 + 1;
        v47[v52++ + 4] = _D0;
      }
      while (v35 != v51);
      goto LABEL_60;
    }
    return 0;
  }
  if (BYTE6(v3) != 8)
    return 0;
  if (v1)
  {
    if (v1 == 1)
    {
      if (v2 >> 32 >= (int)v2)
      {
        sub_1004BE310(v2, v3);
        v6 = __DataStorage._bytes.getter(v5);
        if (!v6)
        {
          __DataStorage._length.getter();
          v11 = 0;
          v12 = 0;
          goto LABEL_45;
        }
        v7 = v6;
        v8 = __DataStorage._offset.getter();
        v9 = (int)v2 - v8;
        if (!__OFSUB__((int)v2, v8))
        {
          v10 = __DataStorage._length.getter();
          v11 = (char *)(v7 + v9);
          if (v10 >= (v2 >> 32) - (int)v2)
            v10 = (v2 >> 32) - (int)v2;
          v12 = v10 / 4;
LABEL_45:
          v21 = sub_1005FF1DC(v11, v12);
          sub_1004BBBC8(v2, v3);
          v22 = *((_QWORD *)v21 + 2);
          if (!v22)
            goto LABEL_63;
          goto LABEL_49;
        }
        goto LABEL_73;
      }
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v23 = v3 & 0x3FFFFFFFFFFFFFFFLL;
    v24 = *(_QWORD *)(v2 + 16);
    v25 = *(_QWORD *)(v2 + 24);
    swift_retain(v2);
    v26 = swift_retain(v3 & 0x3FFFFFFFFFFFFFFFLL);
    v27 = (char *)__DataStorage._bytes.getter(v26);
    if (v27)
    {
      v28 = __DataStorage._offset.getter();
      if (__OFSUB__(v24, v28))
      {
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      v27 += v24 - v28;
    }
    _VF = __OFSUB__(v25, v24);
    v30 = v25 - v24;
    if (_VF)
      goto LABEL_72;
    v31 = __DataStorage._length.getter();
    if (v27)
    {
      if (v31 >= v30)
        v32 = v30;
      else
        v32 = v31;
      v33 = v32 / 4;
    }
    else
    {
      v33 = 0;
    }
    v21 = sub_1005FF1DC(v27, v33);
    swift_release(v23);
    swift_release(v2);
    v22 = *((_QWORD *)v21 + 2);
    if (!v22)
      goto LABEL_63;
LABEL_49:
    v68 = _swiftEmptyArrayStorage;
    sub_100600708(0, v22, 0);
    v46 = 0;
    v47 = v68;
    v48 = *((_QWORD *)v68 + 2);
    do
    {
      v49 = *((float *)v21 + v46 + 8);
      v68 = v47;
      v50 = *((_QWORD *)v47 + 3);
      if (v48 >= v50 >> 1)
      {
        sub_100600708(v50 > 1, v48 + 1, 1);
        v47 = v68;
      }
      ++v46;
      *((_QWORD *)v47 + 2) = v48 + 1;
      v47[v48++ + 4] = v49;
    }
    while (v22 != v46);
LABEL_60:
    swift_bridgeObjectRelease();
    goto LABEL_64;
  }
  v68 = (double *)v2;
  LOWORD(v69) = v3;
  BYTE2(v69) = BYTE2(v3);
  BYTE3(v69) = BYTE3(v3);
  BYTE4(v69) = BYTE4(v3);
  BYTE5(v69) = BYTE5(v3);
  v21 = sub_1005FF1DC((char *)&v68, (v3 >> 50) & 0x3F);
  v22 = *((_QWORD *)v21 + 2);
  if (v22)
    goto LABEL_49;
LABEL_63:
  swift_bridgeObjectRelease();
  v47 = _swiftEmptyArrayStorage;
LABEL_64:
  if (*((_QWORD *)v47 + 2) != 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v59 = (double *)*((_QWORD *)v47 + 4);
  v60 = *((_QWORD *)v47 + 5);
  swift_bridgeObjectRelease();
  result = v59;
  if ((~(unint64_t)v59 & 0x7FF0000000000000) == 0 || (~v60 & 0x7FF0000000000000) == 0)
  {
    v61 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v61, &v70);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v68 = v59;
    v69 = v60;
    type metadata accessor for CGPoint(0);
    v64 = String.init<A>(describing:)(&v68, v63);
    v66 = v65;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v64;
    *(_QWORD *)(inited + 40) = v66;
    sub_100757E04(&_mh_execute_header, (uint64_t)"decodeRawPoint(fromPointData:allow16BitDecode:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 279, "Corrupt bezier path point detected %{public}@. Using a default (0, 0) point instead to avoid a crash.", 101, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"decodeRawPoint(fromPointData:allow16BitDecode:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2u, 279, (uint64_t)"Corrupt bezier path point detected %{public}@. Using a default (0, 0) point instead to avoid a crash.", 101, 2u);
    swift_setDeallocating(inited);
    v67 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v67);
    return 0;
  }
  return result;
}

double *sub_100943AC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;

  v2 = type metadata accessor for CRLProto_Path.Element(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v11 = *(_QWORD *)a1;
  v12 = a1;
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain(v6);
    v13 = v9;
    v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_1004B8460(v8, (uint64_t)v5, type metadata accessor for CRLProto_Path.Element);
      if (v5[8] == 1)
        __asm { BR              X9 }
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 130, "Unknown bezier point type. Ignoring element.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2u, 130, (uint64_t)"Unknown bezier point type. Ignoring element.", 44, 2u);
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLProto_Path.Element);
      v8 += v9;
      --v7;
    }
    while (v7);
  }
  else
  {
    swift_bridgeObjectRetain(v6);
    v14 = _swiftEmptyArrayStorage;
  }
  sub_1004B84A4(v12, type metadata accessor for CRLProto_Path);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t getEnumTagSinglePayload for CRLBezierPathPointData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBezierPathPointData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_100944178(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 2u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_100944190(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLBezierPathPointData()
{
  return &type metadata for CRLBezierPathPointData;
}

ValueMetadata *type metadata accessor for CRLBezierPathData()
{
  return &type metadata for CRLBezierPathData;
}

unint64_t sub_1009441DC()
{
  unint64_t result;

  result = qword_1013FB6D0;
  if (!qword_1013FB6D0)
  {
    result = swift_getWitnessTable(&unk_100F1A97C, &type metadata for CRLBezierPathData);
    atomic_store(result, (unint64_t *)&qword_1013FB6D0);
  }
  return result;
}

unint64_t sub_100944224()
{
  unint64_t result;

  result = qword_1013FB6D8;
  if (!qword_1013FB6D8)
  {
    result = swift_getWitnessTable(&unk_100F1A8F4, &type metadata for CRLBezierPathData);
    atomic_store(result, (unint64_t *)&qword_1013FB6D8);
  }
  return result;
}

double *sub_100944268(uint64_t a1, unint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  _OWORD v20[2];
  uint64_t v21;

  v6 = type metadata accessor for BinaryDecodingOptions(0, a3);
  __chkstk_darwin(v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v20 - v13;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v15 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v15);
  v16 = sub_1009445E0();
  v17 = a2;
  v18 = (double *)v9;
  Message.init(serializedData:extensions:partial:options:)(a1, v17, v20, 0, v8, v9, v16);
  if (!v3)
  {
    sub_1004B8460((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLProto_Path);
    v18 = sub_100943AC4((uint64_t)v11);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Path);
  }
  return v18;
}

void *sub_1009443C8(_QWORD *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v4 = type metadata accessor for BinaryDecodingOptions(0, a2);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - v11;
  v13 = a1[3];
  v14 = a1[4];
  v15 = sub_1004BB5A4(a1, v13);
  dispatch thunk of Decoder.singleValueContainer()(&v25, v13, v14);
  if (!v2)
  {
    v16 = *((_QWORD *)&v26 + 1);
    v17 = v27;
    sub_1004BB5A4(&v25, *((uint64_t *)&v26 + 1));
    v18 = sub_100587AC0();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)(v24, &type metadata for Data, &type metadata for Data, v18, v16, v17);
    v19 = v24[0];
    v20 = v24[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v25);
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v21 = sub_1004BE310(v19, v20);
    BinaryDecodingOptions.init()(v21);
    v22 = sub_1009445E0();
    Message.init(serializedData:extensions:partial:options:)(v19, v20, &v25, 0, v6, v7, v22);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLProto_Path);
    v15 = sub_100943AC4((uint64_t)v9);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Path);
    sub_1004BBBC8(v19, v20);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v15;
}

unint64_t sub_1009445E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FB6E0;
  if (!qword_1013FB6E0)
  {
    v1 = type metadata accessor for CRLProto_Path(255);
    result = swift_getWitnessTable(&unk_100F25FB8, v1);
    atomic_store(result, (unint64_t *)&qword_1013FB6E0);
  }
  return result;
}

unint64_t sub_100944628()
{
  unint64_t result;

  result = qword_1013FB6E8;
  if (!qword_1013FB6E8)
  {
    result = swift_getWitnessTable(&unk_100F1A9C4, &type metadata for CRLBezierPathData);
    atomic_store(result, (unint64_t *)&qword_1013FB6E8);
  }
  return result;
}

unint64_t sub_10094466C()
{
  unint64_t result;

  result = qword_1013FB6F0;
  if (!qword_1013FB6F0)
  {
    result = swift_getWitnessTable(&unk_100F1A954, &type metadata for CRLBezierPathData);
    atomic_store(result, (unint64_t *)&qword_1013FB6F0);
  }
  return result;
}

uint64_t CRLiCloudConnectionStatus.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t sub_1009446C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  unsigned int v4;
  BOOL v6;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 == 1)
    return 1;
  v3 = *(_QWORD *)(v0 + 24);
  if (v3 == 1)
    v4 = 2;
  else
    v4 = 3;
  if (v1 == 4 || v3 == 4)
    v4 = 0;
  if (v1)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (v6)
    return 0;
  else
    return v4;
}

void sub_100944700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  void **aBlock;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t (*v42)();
  _QWORD *v43;
  char v44[72];
  char v45[32];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v45, 0, 0);
  v11 = (void *)static OS_os_log.realTimeSync;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v44);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v14 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v14;
  v15 = v11;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Cached account status: %d", 25, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v18);

  v19 = *(_QWORD *)(v2 + 24);
  if (v19 != a1)
  {
    v20 = *(_QWORD *)(v2 + 32);
    if (v20 == 1)
    {
      v21 = 1;
    }
    else
    {
      v21 = 0;
      if (v19)
      {
        if (v20)
        {
          v21 = 0;
          if (v19 != 4 && v20 != 4)
          {
            if (v19 == 1)
              v21 = 2;
            else
              v21 = 3;
          }
        }
      }
    }
    if ((*(_BYTE *)(v2 + 64) & 1) == 0)
    {
      v22 = *(_QWORD *)(v2 + 16);
      LOBYTE(aBlock) = v21;
      swift_retain(v22);
      CurrentValueSubject.send(_:)(&aBlock);
      swift_release(v22);
    }
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v24 = (void *)static OS_dispatch_queue.main.getter(v23);
    v25 = swift_allocObject(&unk_101289F78, 25, 7);
    *(_QWORD *)(v25 + 16) = v2;
    *(_BYTE *)(v25 + 24) = v21;
    v42 = sub_10094804C;
    v43 = (_QWORD *)v25;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_1005D2FC0;
    v41 = &unk_101289F90;
    v26 = _Block_copy(&aBlock);
    v27 = v43;
    swift_retain(v2);
    v28 = swift_release(v27);
    static DispatchQoS.unspecified.getter(v28);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v29 = sub_1004CB65C();
    v30 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v31 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v30, v31, v4, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v32 = *(void **)(v2 + 40);
    *(_QWORD *)(v2 + 40) = 0;
    sub_100945080(v32);

    v33 = *(void **)(v2 + 72);
    v34 = swift_allocObject(&unk_101289D70, 24, 7);
    swift_weakInit(v34 + 16, v2);
    v35 = (_QWORD *)swift_allocObject(&unk_101289FC8, 40, 7);
    v35[2] = CRLWPObjcUserDefaults.setAutomaticSpellingCorrection(enabled:);
    v35[3] = 0;
    v35[4] = v34;
    v42 = sub_1009480D4;
    v43 = v35;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_1009446B0;
    v41 = &unk_101289FE0;
    v36 = _Block_copy(&aBlock);
    objc_msgSend(v33, "fetchUserRecordIDWithCompletionHandler:", v36, swift_release(v43).n128_f64[0]);
    _Block_release(v36);
  }
}

void sub_100944B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void **aBlock;
  uint64_t v39;
  void *v40;
  void *v41;
  void (*v42)();
  _QWORD *v43;
  char v44[72];
  char v45[32];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v45, 0, 0);
  v11 = (void *)static OS_os_log.realTimeSync;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v44);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v14 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v14;
  v15 = v11;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Cached dataclass status: %d", 27, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v18);

  v19 = *(_QWORD *)(v2 + 32);
  if (v19 != a1)
  {
    if (v19 == 1)
    {
      v20 = 1;
    }
    else
    {
      v20 = 0;
      if (v19)
      {
        v36 = *(_QWORD *)(v2 + 24);
        if (v36)
        {
          v20 = 0;
          if (v19 != 4 && v36 != 4)
          {
            if (v36 == 1)
              v20 = 2;
            else
              v20 = 3;
          }
        }
      }
    }
    if ((*(_BYTE *)(v2 + 64) & 1) == 0)
    {
      v21 = *(_QWORD *)(v2 + 16);
      LOBYTE(aBlock) = v20;
      swift_retain(v21);
      CurrentValueSubject.send(_:)(&aBlock);
      swift_release(v21);
    }
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v23 = (void *)static OS_dispatch_queue.main.getter(v22);
    v24 = swift_allocObject(&unk_101289ED8, 25, 7);
    *(_QWORD *)(v24 + 16) = v2;
    *(_BYTE *)(v24 + 24) = v20;
    v42 = sub_100947ED8;
    v43 = (_QWORD *)v24;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_1005D2FC0;
    v41 = &unk_101289EF0;
    v25 = _Block_copy(&aBlock);
    v26 = v43;
    swift_retain(v2);
    v27 = swift_release(v26);
    static DispatchQoS.unspecified.getter(v27);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v28 = sub_1004CB65C();
    v29 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v30 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v29, v30, v4, v28);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v31 = *(void **)(v2 + 40);
    *(_QWORD *)(v2 + 40) = 0;
    sub_100945080(v31);

    v32 = *(void **)(v2 + 72);
    v33 = swift_allocObject(&unk_101289D70, 24, 7);
    swift_weakInit(v33 + 16, v2);
    v34 = (_QWORD *)swift_allocObject(&unk_101289F28, 40, 7);
    v34[2] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    v34[3] = 0;
    v34[4] = v33;
    v42 = (void (*)())sub_1009480D4;
    v43 = v34;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_1009446B0;
    v41 = &unk_101289F40;
    v35 = _Block_copy(&aBlock);
    objc_msgSend(v32, "fetchUserRecordIDWithCompletionHandler:", v35, swift_release(v43).n128_f64[0]);
    _Block_release(v35);
  }
}

void sub_100944F28(uint64_t a1, char a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  Class isa;
  _WORD v9[8];
  _BYTE v10[104];

  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD568 != -1)
    swift_once(&qword_1013DD568, sub_100946FB4);
  v5 = qword_10147FFC0;
  v6 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v6, v10);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  strcpy((char *)v9, "iCloudStatus");
  HIBYTE(v9[6]) = 0;
  v9[7] = -5120;
  AnyHashable.init<A>(_:)(v9, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for CRLiCloudConnectionStatus;
  *(_BYTE *)(inited + 72) = a2;
  sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "postNotificationName:object:userInfo:", v5, a1, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_100945080(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v2 + 40);
  if (!a1)
    goto LABEL_5;
  if (v11)
  {
    sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v12 = v11;
    v13 = a1;
    v14 = static NSObject.== infix(_:_:)(v13, v12);

    if ((v14 & 1) == 0)
    {
      v11 = *(void **)(v2 + 40);
LABEL_5:
      if (v11)
      {
        sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
        v15 = v11;
        v17 = (void *)static OS_dispatch_queue.main.getter(v16);
        v18 = swift_allocObject(&unk_101289E38, 32, 7);
        *(_QWORD *)(v18 + 16) = v2;
        *(_QWORD *)(v18 + 24) = v15;
        aBlock[4] = sub_100947DFC;
        v29 = v18;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_101289E50;
        v19 = _Block_copy(aBlock);
        v20 = v29;
        v21 = v15;
        swift_retain(v2);
        v22 = swift_release(v20);
        static DispatchQoS.unspecified.getter(v22);
        aBlock[0] = _swiftEmptyArrayStorage;
        v23 = sub_1004CB65C();
        v24 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
        v25 = sub_100503E88();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v4, v23);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v19);
        _Block_release(v19);

        (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
}

void sub_1009452D8(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  Class isa;
  _QWORD v10[2];
  _BYTE v11[104];

  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD570 != -1)
    swift_once(&qword_1013DD570, sub_100946FE8);
  v5 = qword_10147FFC8;
  v6 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v6, v11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10[0] = 0xD000000000000015;
  v10[1] = 0x8000000100FE2920;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  *(_QWORD *)(inited + 72) = a2;
  v8 = a2;
  sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "postNotificationName:object:userInfo:", v5, a1, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_100945440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  void *v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  _BYTE v30[72];
  _BYTE v31[32];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v31, 0, 0);
  v11 = (void *)static OS_os_log.realTimeSync;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v30);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v14 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v14;
  v15 = v11;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Cached device to device encryption availability: %d", 51, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v18);

  if (*(_QWORD *)(v2 + 48) != a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    aBlock[4] = sub_100948044;
    v29 = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128A1E8;
    v21 = _Block_copy(aBlock);
    v22 = v29;
    swift_retain(v2);
    v23 = swift_release(v22);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = sub_1004CB65C();
    v25 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v26 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v4, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_100553034(*(_QWORD *)(v2 + 48));
  }
}

void sub_10094570C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Class isa;
  _QWORD v10[2];
  _BYTE v11[104];

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD560 != -1)
    swift_once(&qword_1013DD560, sub_100946F80);
  v3 = qword_10147FFB8;
  v4 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v4, v11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10[0] = 0xD00000000000002DLL;
  v10[1] = 0x8000000100FE2B50;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  v6 = *(_QWORD *)(a1 + 48);
  type metadata accessor for CKDeviceToDeviceEncryptionStatus(0);
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 72) = v6;
  v8 = sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v3, a1, isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

}

double sub_100945860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  double result;
  _QWORD aBlock[5];
  _QWORD *v18;

  v4 = sub_1004B804C(&qword_1013FB8C0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_101289D48, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v11 = *(void **)(a2 + 72);
  v12 = swift_allocObject(&unk_101289D70, 24, 7);
  swift_weakInit(v12 + 16, a2);
  v13 = (_QWORD *)swift_allocObject(&unk_101289D98, 40, 7);
  v13[2] = sub_100947CF4;
  v13[3] = v10;
  v13[4] = v12;
  aBlock[4] = sub_100947D6C;
  v18 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1009446B0;
  aBlock[3] = &unk_101289DB0;
  v14 = _Block_copy(aBlock);
  v15 = v18;
  swift_retain(v10);
  objc_msgSend(v11, "fetchUserRecordIDWithCompletionHandler:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1009459F0(void *a1, char a2)
{
  id v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;

  v6 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v5 = sub_1004B804C(&qword_1013FB8C0);
    return CheckedContinuation.resume(throwing:)(&v6, v5);
  }
  else
  {
    v2 = a1;
    v3 = sub_1004B804C(&qword_1013FB8C0);
    return CheckedContinuation.resume(returning:)(&v6, v3);
  }
}

double sub_100945A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_101289E88, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E01F0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_101289EB0, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1013FB8D0;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1013FE730);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100945C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100945C48, 0, 0);
}

id sub_100945C48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  __n128 v21;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 64) = 1;
  v2 = (void *)objc_opt_self(ACAccountStore);
  result = objc_msgSend(v2, "defaultStore");
  if (!result)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = result;
  v5 = *(_QWORD *)(v0 + 16);
  v6 = objc_msgSend(result, "aa_primaryAppleAccount");

  v7 = *(_QWORD *)(v5 + 24);
  v8 = *(_QWORD *)(v0 + 16);
  if (!v6)
  {
    *(_QWORD *)(v5 + 24) = 3;
    sub_100944700(v7);
    v13 = *(_QWORD *)(v8 + 32);
    *(_QWORD *)(v8 + 32) = 3;
LABEL_10:
    sub_100944B14(v13);
    goto LABEL_11;
  }
  *(_QWORD *)(v5 + 24) = 1;
  sub_100944700(v7);
  result = objc_msgSend(v2, "defaultStore");
  if (!result)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  v9 = result;
  v10 = objc_msgSend(result, "aa_primaryAppleAccount");

  if (!v10)
  {
LABEL_9:
    v14 = *(_QWORD *)(v0 + 16);
    v13 = *(_QWORD *)(v14 + 32);
    *(_QWORD *)(v14 + 32) = 3;
    goto LABEL_10;
  }
  if ((objc_msgSend(v10, "isEnabledForDataclass:", ACAccountDataclassFreeform) & 1) == 0)
  {

    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)(v11 + 32) = 1;
  sub_100944B14(v12);

LABEL_11:
  v15 = *(_QWORD **)(v0 + 16);
  v16 = v15[4];
  if (v16 != 1)
  {
    v17 = v15[3];
    if (v17 == 1)
      v18 = 2;
    else
      v18 = 3;
    if (v17 == 4)
      v18 = 0;
    if (v16 == 4)
      v18 = 0;
    if (v17)
      v19 = v18;
    else
      v19 = 0;
    if (v16)
      LOBYTE(v16) = v19;
    else
      LOBYTE(v16) = 0;
  }
  v20 = v15[2];
  *(_BYTE *)(v0 + 24) = v16;
  swift_retain(v20);
  CurrentValueSubject.send(_:)(v0 + 24);
  v21 = swift_release(v20);
  *(_BYTE *)(v1 + 64) = 0;
  return (id)(*(uint64_t (**)(__n128))(v0 + 8))(v21);
}

uint64_t sub_100945E10(void *a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  __n128 v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  id v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  NSString v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[5];
  _QWORD *v57;
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  char v61[8];
  _QWORD v62[2];
  char v63[8];
  char v64[120];

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v55 = v16;
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v19 = a1;
    v54 = v11;
    v20 = v19;
    v22 = (void *)static OS_dispatch_queue.main.getter(v21);
    v23 = (_QWORD *)swift_allocObject(&unk_101289DE8, 48, 7);
    v23[2] = a5;
    v23[3] = v20;
    v23[4] = a3;
    v23[5] = a4;
    aBlock[4] = sub_100947DC4;
    v57 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101289E00;
    v24 = _Block_copy(aBlock);
    v25 = v57;
    v26 = v20;
    swift_retain(a5);
    swift_retain(a4);
    v27 = swift_release(v25);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v28 = sub_1004CB65C();
    v29 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v30 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v10, v28);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v13, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v55);
  }
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, aBlock, 0, 0);
  v32 = (void *)static OS_os_log.crlDefault;
  v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v33, v64);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (a2)
  {
    swift_getErrorValue(a2, v61, v58);
    v35 = v59;
    v36 = v60;
    v37 = v32;
    v38 = Error.publicDescription.getter(v35, v36);
    v40 = v39;
  }
  else
  {
    v41 = v32;
    v38 = 0;
    v40 = 0;
  }
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v42 = sub_1004CFC2C();
  v43 = v42;
  *(_QWORD *)(inited + 64) = v42;
  if (v40)
    v44 = v38;
  else
    v44 = 0;
  v45 = 0xE000000000000000;
  if (v40)
    v45 = v40;
  *(_QWORD *)(inited + 32) = v44;
  *(_QWORD *)(inited + 40) = v45;
  if (!a2)
  {
    v47 = (unint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v42;
    goto LABEL_17;
  }
  swift_getErrorValue(a2, v63, v62);
  v42 = Error.fullDescription.getter(v62[1]);
  v47 = (unint64_t *)(inited + 72);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v43;
  if (!v46)
  {
LABEL_17:
    *v47 = 0;
    v46 = 0xE000000000000000;
    goto LABEL_18;
  }
  *v47 = v42;
LABEL_18:
  *(_QWORD *)(inited + 80) = v46;
  v48 = static os_log_type_t.error.getter(v42);
  sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v48, "Error fetching user record ID: %{public}@ <%@>", 46, 2, inited);
  swift_setDeallocating(inited);
  v49 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v49);

  if (a2)
  {
    v50 = a2;
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorDomain);
    v51 = objc_allocWithZone((Class)NSError);
    v52 = String._bridgeToObjectiveC()();
    v50 = objc_msgSend(v51, "initWithDomain:code:userInfo:", v52, -1, 0, swift_bridgeObjectRelease().n128_f64[0]);

    a2 = 0;
  }
  swift_errorRetain(a2);
  a3(v50, 1);
  return swift_errorRelease(v50);
}

uint64_t sub_10094627C(uint64_t a1, void *a2, uint64_t (*a3)(void *, _QWORD, __n128))
{
  uint64_t v5;
  uint64_t Strong;
  __n128 v7;
  uint64_t v8;
  void *v9;
  id v10;
  _BYTE v12[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(void **)(Strong + 40);
    *(_QWORD *)(Strong + 40) = a2;
    v10 = a2;
    sub_100945080(v9);

    v7 = swift_release(v8);
  }
  return a3(a2, 0, v7);
}

void sub_10094631C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_100946390(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v41;
  char v42[8];
  uint64_t v43;
  uint64_t v44;
  char v45[8];
  _QWORD v46[2];
  char v47[8];
  char v48[120];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v10).n128_u64[0];
  v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = objc_msgSend(a1, "deviceToDeviceEncryptionAvailability", v12);
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v17 = (void *)static OS_dispatch_queue.main.getter(v16);
    v18 = swift_allocObject(&unk_10128A1A8, 32, 7);
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = v15;
    aBlock[4] = sub_10094803C;
    v41 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128A1C0;
    v19 = _Block_copy(aBlock);
    v20 = v41;
    swift_retain(a3);
    v21 = swift_release(v20);
    static DispatchQoS.unspecified.getter(v21);
    aBlock[0] = _swiftEmptyArrayStorage;
    v22 = sub_1004CB65C();
    v23 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v24 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v6, v22);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return;
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
  v25 = (void *)static OS_os_log.default.getter();
  v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v26, v48);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (a2)
  {
    swift_getErrorValue(a2, v45, v42);
    v28 = Error.publicDescription.getter(v43, v44);
    v30 = v29;
  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v31 = sub_1004CFC2C();
  v32 = v31;
  *(_QWORD *)(inited + 64) = v31;
  if (v30)
    v33 = v28;
  else
    v33 = 0;
  v34 = 0xE000000000000000;
  if (v30)
    v34 = v30;
  *(_QWORD *)(inited + 32) = v33;
  *(_QWORD *)(inited + 40) = v34;
  if (!a2)
  {
    v36 = (unint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v31;
    goto LABEL_15;
  }
  swift_getErrorValue(a2, v47, v46);
  v31 = Error.fullDescription.getter(v46[1]);
  v36 = (unint64_t *)(inited + 72);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v32;
  if (!v35)
  {
LABEL_15:
    *v36 = 0;
    v35 = 0xE000000000000000;
    goto LABEL_16;
  }
  *v36 = v31;
LABEL_16:
  *(_QWORD *)(inited + 80) = v35;
  v37 = static os_log_type_t.error.getter(v31);
  sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v37, "Error fetching device to device encryption availability: %{public}@ <%@>", 72, 2, inited);
  swift_setDeallocating(inited);
  v38 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v38);

}

double sub_100946704(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + 48);
    *(_QWORD *)(v6 + 48) = a2;
    sub_100945440(v7);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_100946764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double **v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  double *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  double *v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  _BYTE v32[24];
  __int128 aBlock;
  void *v34;
  void *ObjectType;
  void *v36;
  uint64_t v37;

  v1 = v0;
  LOBYTE(aBlock) = 4;
  v2 = sub_1004B804C(&qword_1013FB8D8);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = CurrentValueSubject.init(_:)(&aBlock);
  *(_QWORD *)(v0 + 56) = _swiftEmptyArrayStorage;
  v4 = (double **)(v0 + 56);
  *(_QWORD *)(v0 + 16) = v3;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_BYTE *)(v0 + 64) = 0;
  if (qword_1013DCB60 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v5 = (void *)qword_10147ECC0;
  *(_QWORD *)(v0 + 72) = qword_10147ECC0;
  v6 = v5;
  sub_100945A5C();
  v7 = objc_msgSend((id)objc_opt_self(CKContainer), "defaultContainer");
  v8 = swift_allocObject(&unk_101289D70, 24, 7);
  swift_weakInit(v8 + 16, v0);
  v36 = sub_100947FC0;
  v37 = v8;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
  v34 = sub_1009446B0;
  ObjectType = &unk_10128A0D0;
  v9 = _Block_copy(&aBlock);
  objc_msgSend(v7, "accountInfoWithCompletionHandler:", v9, swift_release(v37).n128_f64[0]);
  _Block_release(v9);

  v10 = (void *)objc_opt_self(NSNotificationCenter);
  v11 = objc_msgSend(v10, "defaultCenter");
  v12 = (void *)objc_opt_self(NSOperationQueue);
  v13 = objc_msgSend(v12, "mainQueue");
  v14 = swift_allocObject(&unk_101289D70, 24, 7);
  swift_weakInit(v14 + 16, v1);
  v36 = sub_100947FC8;
  v37 = v14;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
  v34 = sub_100568280;
  ObjectType = &unk_10128A0F8;
  v15 = _Block_copy(&aBlock);
  v16 = objc_msgSend(v11, "addObserverForName:object:queue:usingBlock:", CKAccountChangedNotification, 0, v13, v15, swift_release(v37).n128_f64[0]);
  _Block_release(v15);

  ObjectType = (void *)swift_getObjectType(v16);
  *(_QWORD *)&aBlock = v16;
  swift_beginAccess(v1 + 56, v32, 33, 0);
  v17 = *(double **)(v1 + 56);
  swift_unknownObjectRetain(v16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
  *(_QWORD *)(v1 + 56) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v17 = sub_100D10E70(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    *v4 = v17;
  }
  v20 = *((_QWORD *)v17 + 2);
  v19 = *((_QWORD *)v17 + 3);
  if (v20 >= v19 >> 1)
  {
    v17 = sub_100D10E70((double *)(v19 > 1), v20 + 1, 1, v17);
    *v4 = v17;
  }
  *((_QWORD *)v17 + 2) = v20 + 1;
  sub_10050CB14(&aBlock, &v17[4 * v20 + 4]);
  swift_endAccess(v32);
  v21 = objc_msgSend(v10, "defaultCenter");
  v22 = ACDAccountStoreDidChangeNotification;
  v23 = objc_msgSend(v12, "mainQueue");
  v24 = swift_allocObject(&unk_101289D70, 24, 7);
  swift_weakInit(v24 + 16, v1);
  v36 = sub_100947FF0;
  v37 = v24;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
  v34 = sub_100568280;
  ObjectType = &unk_10128A120;
  v25 = _Block_copy(&aBlock);
  v26 = objc_msgSend(v21, "addObserverForName:object:queue:usingBlock:", v22, 0, v23, v25, swift_release(v37).n128_f64[0]);
  _Block_release(v25);

  ObjectType = (void *)swift_getObjectType(v26);
  *(_QWORD *)&aBlock = v26;
  swift_beginAccess(v1 + 56, v32, 33, 0);
  v27 = *(double **)(v1 + 56);
  swift_unknownObjectRetain(v26);
  v28 = swift_isUniquelyReferenced_nonNull_native(v27);
  *(_QWORD *)(v1 + 56) = v27;
  if ((v28 & 1) == 0)
  {
    v27 = sub_100D10E70(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    *v4 = v27;
  }
  v30 = *((_QWORD *)v27 + 2);
  v29 = *((_QWORD *)v27 + 3);
  if (v30 >= v29 >> 1)
  {
    v27 = sub_100D10E70((double *)(v29 > 1), v30 + 1, 1, v27);
    *v4 = v27;
  }
  *((_QWORD *)v27 + 2) = v30 + 1;
  sub_10050CB14(&aBlock, &v27[4 * v30 + 4]);
  swift_endAccess(v32);
  swift_unknownObjectRelease(v16);
  swift_unknownObjectRelease(v26);
  return v1;
}

void sub_100946C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[5];
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    sub_100945A5C();
    swift_release(v8);
  }
  swift_beginAccess(v6, v16, 0, 0);
  v9 = swift_weakLoadStrong(v6);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(CKContainer), "defaultContainer");
    v12 = swift_allocObject(&unk_101289D70, 24, 7);
    swift_weakInit(v12 + 16, v10);
    v14[4] = a3;
    v15 = v12;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = *(_QWORD *)"";
    v14[2] = sub_1009446B0;
    v14[3] = a4;
    v13 = _Block_copy(v14);
    objc_msgSend(v11, "accountInfoWithCompletionHandler:", v13, swift_release(v15).n128_f64[0]);
    _Block_release(v13);
    swift_release(v10);

  }
}

uint64_t sub_100946D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  _BYTE v12[24];

  swift_beginAccess(v0 + 56, v12, 0, 0);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = v1 + 32;
    swift_bridgeObjectRetain(v1);
    do
    {
      sub_1004CB6E8(v4, (uint64_t)v10);
      v5 = objc_msgSend(v3, "defaultCenter");
      v6 = v11;
      v7 = sub_1004BB5A4(v10, v11);
      v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
      objc_msgSend(v5, "removeObserver:", v8);

      swift_unknownObjectRelease(v8);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100946EA4()
{
  uint64_t v0;

  sub_100946D84();
  return swift_deallocClassInstance(v0, 80, 7);
}

NSString sub_100946F80()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FFB8 = (uint64_t)result;
  return result;
}

NSString sub_100946FB4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FFC0 = (uint64_t)result;
  return result;
}

NSString sub_100946FE8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147FFC8 = (uint64_t)result;
  return result;
}

id sub_10094701C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD560, (void **)&qword_10147FFB8, &qword_10147FFD0, (uint64_t)sub_100946F80);
}

id sub_10094705C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD568, (void **)&qword_10147FFC0, &qword_10147FFD8, (uint64_t)sub_100946FB4);
}

id sub_10094709C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DD570, (void **)&qword_10147FFC8, &qword_10147FFE0, (uint64_t)sub_100946FE8);
}

void sub_1009470DC()
{
  id v0;
  uint64_t v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_1000717C8();
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setInteger:forKey:", v1, v2);

}

void sub_100947168()
{
  void *v0;
  id v1;
  NSString v2;
  unsigned __int8 v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  if ((v3 & 1) != 0)
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v14, 0, 0);
    v4 = (id)static OS_os_log.crlDefault;
    v6 = static os_log_type_t.default.getter(v5);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "Skipping iCloud dialog due to user default", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    v7 = objc_msgSend(v0, "standardUserDefaults");
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "integerForKey:", v8);

    if (!v9 || (uint64_t)v9 < sub_1000717C8())
    {
      v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v11 = objc_msgSend(v10, "delegate");

      if (v11)
      {
        v12 = type metadata accessor for CRLiOSAppDelegate();
        v13 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v11, v12, 0, 0, 0)
                        + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
        swift_retain(v13);
        swift_unknownObjectRelease(v11);
        swift_release(v13);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1009473C0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &type metadata for CRLAppleAccountFeatureFlags;
  v6[4] = sub_1006CD0F8();
  isFeatureEnabled(_:)(v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void sub_1009474EC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  NSString v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  id v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v46;
  id v47;
  _BYTE v49[112];
  _BYTE v50[24];
  void **aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v9 = objc_msgSend(v4, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  sub_1009473C0();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v13, v14, 1);

  v15 = swift_allocObject(&unk_10128A018, 32, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  sub_1004C0F54(a2, a3);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v55 = sub_100947F2C;
  v56 = v15;
  aBlock = _NSConcreteStackBlock;
  v52 = *(_QWORD *)"";
  v53 = sub_1004C6194;
  v54 = &unk_10128A030;
  v17 = _Block_copy(&aBlock);
  swift_release(v56);
  v18 = (void *)objc_opt_self(UIAlertAction);
  v19 = objc_msgSend(v18, "actionWithTitle:style:handler:", v16, 0, v17);
  _Block_release(v17);

  v47 = v4;
  v20 = objc_msgSend(v4, "mainBundle");
  v21 = String._bridgeToObjectiveC()();
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v24 = swift_allocObject(&unk_10128A068, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  sub_1004C0F54(a2, a3);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v55 = sub_100947F98;
  v56 = v24;
  aBlock = _NSConcreteStackBlock;
  v52 = *(_QWORD *)"";
  v53 = sub_1004C6194;
  v54 = &unk_10128A080;
  v26 = _Block_copy(&aBlock);
  v27 = objc_msgSend(v18, "actionWithTitle:style:handler:", v25, 1, v26, swift_release(v56).n128_f64[0]);
  _Block_release(v26);

  objc_msgSend(v46, "addAction:", v19);
  objc_msgSend(v46, "addAction:", v27);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v50, 0, 0);
  v28 = (void *)static OS_os_log.crlDefault;
  v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v29, v49);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v31 = v28;
  v32 = objc_msgSend(v47, "mainBundle");
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v39 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v39;
  *(_QWORD *)(inited + 32) = v36;
  *(_QWORD *)(inited + 40) = v38;
  v40 = sub_1009473C0();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v39;
  *(_QWORD *)(inited + 72) = v40;
  *(_QWORD *)(inited + 80) = v41;
  v42 = static os_log_type_t.error.getter(v40);
  sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v42, "Presenting alert: %@ %@", 23, 2, inited);
  swift_setDeallocating(inited);
  v43 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v43);

  v55 = sub_1009470DC;
  v56 = 0;
  aBlock = _NSConcreteStackBlock;
  v52 = *(_QWORD *)"";
  v53 = sub_1005D2FC0;
  v54 = &unk_10128A0A8;
  v44 = _Block_copy(&aBlock);
  objc_msgSend(a1, "presentViewController:animated:completion:", v46, 1, v44, swift_release(v56).n128_f64[0]);
  _Block_release(v44);

}

unint64_t sub_100947B60()
{
  unint64_t result;

  result = qword_1013FB6F8;
  if (!qword_1013FB6F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLiCloudConnectionStatus, &type metadata for CRLiCloudConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_1013FB6F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLiCloudConnectionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100947BF0 + 4 * byte_100F1AA85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100947C24 + 4 * byte_100F1AA80[v4]))();
}

uint64_t sub_100947C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100947C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100947C34);
  return result;
}

uint64_t sub_100947C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100947C48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100947C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100947C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLiCloudConnectionStatus()
{
  return &type metadata for CRLiCloudConnectionStatus;
}

uint64_t type metadata accessor for CRLiCloudStatusObserver()
{
  return objc_opt_self(_TtC8Freeform23CRLiCloudStatusObserver);
}

uint64_t sub_100947C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013FB8C0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100947CF4(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1004B804C(&qword_1013FB8C0);
  return sub_1009459F0(a1, v3);
}

uint64_t sub_100947D44()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100947D6C(void *a1, void *a2)
{
  uint64_t v2;

  return sub_100945E10(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

double sub_100947D78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100947D88(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100947D90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100947DC4()
{
  uint64_t v0;

  return sub_10094627C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void *, _QWORD, __n128))(v0 + 32));
}

uint64_t sub_100947DD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100947DFC()
{
  uint64_t v0;

  sub_1009452D8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100947E04()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100947E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013FB8CC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  v3[2] = v2;
  return swift_task_switch(sub_100945C48, 0, 0);
}

uint64_t sub_100947E90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100947EB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100947ED8()
{
  uint64_t v0;

  sub_100944F28(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100947EFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_100947F2C()
{
  uint64_t v0;
  uint64_t (*v1)(id);
  id result;

  v1 = *(uint64_t (**)(id))(v0 + 16);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "crl_openICloudPreferencePane");
  if (v1)
    return (id)v1(result);
  return result;
}

uint64_t sub_100947F6C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100947F98()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

void sub_100947FC0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100946390(a1, a2, v2);
}

void sub_100947FC8(uint64_t a1)
{
  uint64_t v1;

  sub_100946C48(a1, v1, (uint64_t)sub_100947FC0, (uint64_t)&unk_10128A170);
}

void sub_100947FF0(uint64_t a1)
{
  uint64_t v1;

  sub_100946C48(a1, v1, (uint64_t)sub_100947FC0, (uint64_t)&unk_10128A148);
}

uint64_t sub_100948018()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10094803C()
{
  uint64_t v0;

  return sub_100946704(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100948044()
{
  uint64_t v0;

  sub_10094570C(v0);
}

uint64_t sub_1009480D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1009481F8(v0 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata);
  sub_1005534BC(v0 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100948120()
{
  return type metadata accessor for CRLAssetSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLAssetSyncRemoteRecord(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FB908;
  if (!qword_1013FB908)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetSyncRemoteRecord);
  return result;
}

void sub_100948164(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_100F1ABE0;
  v2 = type metadata accessor for CRLAssetSyncMetadata(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10067E7A0(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

uint64_t sub_1009481F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLAssetSyncMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100948234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100948240);
}

uint64_t sub_100948240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1009482CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009482D8);
}

uint64_t sub_1009482D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for CRLAssetSyncMetadata(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FB9F8;
  if (!qword_1013FB9F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetSyncMetadata);
  return result;
}

uint64_t sub_100948390(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F1AC28;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100948400()
{
  _BYTE *v0;

  if (*v0)
    return 0x65747845656C6966;
  else
    return 0x4955557465737361;
}

uint64_t sub_10094844C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100948B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100948470(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009488A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100948498(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009488A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009484C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FBA40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1009488A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLAssetSyncMetadata.CodingKeys, &type metadata for CRLAssetSyncMetadata.CodingKeys, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_100948928(&qword_1013E4860, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLAssetSyncMetadata(0) + 20));
    v15 = *v14;
    v16 = v14[1];
    v19 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, &v19, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10094860C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;

  v25 = a2;
  v28 = type metadata accessor for UUID(0);
  v26 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1004B804C(&qword_1013FBA30);
  v5 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLAssetSyncMetadata(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  sub_1004BB5A4(a1, v12);
  v13 = sub_1009488A0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLAssetSyncMetadata.CodingKeys, &type metadata for CRLAssetSyncMetadata.CodingKeys, v13, v12, v11);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v24 = v5;
  v14 = (uint64_t)v10;
  v15 = v26;
  v31 = 0;
  v16 = sub_100948928(&qword_1013E4810, (uint64_t)&protocol conformance descriptor for UUID);
  v17 = v28;
  v18 = v27;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v28, &v31, v27, v28, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v29, v17);
  v30 = 1;
  v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v30, v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v18);
  v22 = (uint64_t *)(v14 + *(int *)(v8 + 20));
  *v22 = v19;
  v22[1] = v21;
  sub_1009488E4(v14, v25);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return sub_1009481F8(v14);
}

uint64_t sub_100948874@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10094860C(a1, a2);
}

uint64_t sub_100948888(_QWORD *a1)
{
  return sub_1009484C0(a1);
}

unint64_t sub_1009488A0()
{
  unint64_t result;

  result = qword_1013FBA38;
  if (!qword_1013FBA38)
  {
    result = swift_getWitnessTable(&unk_100F1AD7C, &type metadata for CRLAssetSyncMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FBA38);
  }
  return result;
}

uint64_t sub_1009488E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLAssetSyncMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100948928(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100948968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;

  if ((static UUID.== infix(_:_:)(a1) & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for CRLAssetSyncMetadata(0) + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, *v7, v8, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for CRLAssetSyncMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100948A30 + 4 * byte_100F1AC05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100948A64 + 4 * byte_100F1AC00[v4]))();
}

uint64_t sub_100948A64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100948A6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100948A74);
  return result;
}

uint64_t sub_100948A80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100948A88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100948A8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100948A94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetSyncMetadata.CodingKeys()
{
  return &type metadata for CRLAssetSyncMetadata.CodingKeys;
}

unint64_t sub_100948AB4()
{
  unint64_t result;

  result = qword_1013FBA48;
  if (!qword_1013FBA48)
  {
    result = swift_getWitnessTable(&unk_100F1AD54, &type metadata for CRLAssetSyncMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FBA48);
  }
  return result;
}

unint64_t sub_100948AFC()
{
  unint64_t result;

  result = qword_1013FBA50;
  if (!qword_1013FBA50)
  {
    result = swift_getWitnessTable(&unk_100F1ACC4, &type metadata for CRLAssetSyncMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FBA50);
  }
  return result;
}

unint64_t sub_100948B44()
{
  unint64_t result;

  result = qword_1013FBA58;
  if (!qword_1013FBA58)
  {
    result = swift_getWitnessTable(&unk_100F1ACEC, &type metadata for CRLAssetSyncMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FBA58);
  }
  return result;
}

uint64_t sub_100948B88(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x4955557465737361 && a2 == 0xE900000000000044)
  {
    v5 = 0xE900000000000044;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4955557465737361, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65747845656C6966 && a2 == 0xED00006E6F69736ELL)
  {
    swift_bridgeObjectRelease(0xED00006E6F69736ELL);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65747845656C6966, 0xED00006E6F69736ELL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_100948CA8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CGColorSpace *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char v70[24];
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4);
  v62 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_45;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v7)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return;
      }
      v8 = *(id *)(a2 + 32);
    }
    v9 = v8;
    v10 = sub_100923670();
    if (v7 < 0)
      goto LABEL_56;
    v11 = (id)v10;
    if (v6)
    {
      if (a2 < 0)
        v13 = a2;
      else
        v13 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      if (_CocoaArrayWrapper.endIndex.getter(v13) < 1)
        goto LABEL_53;
      swift_bridgeObjectRetain(a2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      if (!v12)
        goto LABEL_53;
    }
    if (v12 < v7)
      goto LABEL_54;
    if ((a2 & 0xC000000000000001) != 0 && v7 != 1)
    {
      type metadata accessor for CRLShapeItem(0);
      v14 = 1;
      do
      {
        v15 = v14 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v14);
        v14 = v15;
      }
      while (v7 != v15);
    }
    v51 = v9;
    v52 = a1;
    if (v6)
    {
      if (a2 < 0)
        v16 = a2;
      else
        v16 = a2 & 0xFFFFFFFFFFFFFF8;
      v17 = swift_bridgeObjectRetain(a2);
      v50 = _CocoaArrayWrapper.subscript.getter(1, v7, v16, v17);
      v55 = v18;
      v6 = v19;
      v21 = v20;
      swift_bridgeObjectRelease_n(a2, 2);
      v7 = v21 >> 1;
      if (v6 == v21 >> 1)
      {
LABEL_40:

        swift_unknownObjectRelease(v50);
LABEL_43:
        a1 = v52;
        goto LABEL_50;
      }
    }
    else
    {
      v50 = a2 & 0xFFFFFFFFFFFFFF8;
      v55 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      v6 = 1;
      if (v7 == 1)
        goto LABEL_40;
    }
    v53 = v7;
    v54 = v11;
    while (v6 < v7)
    {
      v68 = v6;
      v22 = *(char **)(v55 + 8 * v6);
      v23 = *(_QWORD **)&v22[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v24 = *v23;
      v25 = swift_conformsToProtocol2(*v23, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (!v25)
        goto LABEL_55;
      v26 = v25;
      v27 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 16);
      v69 = v22;
      v28 = swift_retain(v23);
      v29 = (uint64_t)v62;
      v27(v24, v26, v28);
      swift_release(v23);
      v30 = sub_1004B804C((uint64_t *)&unk_1014148A0);
      CRRegister.wrappedValue.getter(v30);
      v67 = v71;
      v31 = v72;
      a1 = v73;
      v32 = v74;
      v65 = v75;
      v33 = v77;
      v64 = v76;
      v34 = v78;
      v63 = v79;
      v36 = v80;
      v35 = v81;
      v37 = v82;
      v38 = v83;
      v66 = v84;
      sub_1008F0238(v29);
      if (v38)
      {
        sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
        v39 = v31;
        v85 = (int)a1;
        v60 = a1;
        v86 = BYTE4(a1) & 1;
        v61 = v32;
        v87 = v32;
        v40 = v65;
        a1 = v64;
        v88 = v65;
        v89 = v64;
        v90 = v33;
        v91 = v34;
        v58 = v34;
        v41 = v63;
        v92 = v63;
        v93 = v36;
        v56 = v35;
        v94 = v35;
        v95 = v37;
        v96 = v38;
        swift_bridgeObjectRetain(v37);
        swift_bridgeObjectRetain(v38);
        v59 = v33;
        swift_bridgeObjectRetain(v33);
        v57 = v36;
        swift_bridgeObjectRetain(v36);
        v42 = sub_1006C52C0((uint64_t)&v85);
        v43 = v39;
        if ((v39 & 1) != 0)
        {
          if (qword_1013DD868 != -1)
            swift_once(&qword_1013DD868, sub_100A05844);
          swift_beginAccess(&static OS_os_log.persistence, v70, 0, 0);
          v44 = (id)static OS_os_log.persistence;
          v45 = static os_log_type_t.info.getter();
          sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v45, "Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

        }
        v46 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v42);

        sub_1004C4174(v67, v43, (uint64_t)v60, v61, v40, (uint64_t)a1, v59, v58, v41, v57, v56, v37, v38, v66);
        v11 = v54;
        if (!v54)
        {

          swift_unknownObjectRelease(v50);
          goto LABEL_43;
        }
        sub_1004B8930(0, (unint64_t *)&qword_1013F3910, off_101229898);
        a2 = (uint64_t)v11;
        v47 = static NSObject.== infix(_:_:)(v46, a2);

        if ((v47 & 1) == 0)
          goto LABEL_40;
      }
      else
      {
        v11 = v54;
        a2 = (uint64_t)v54;

        if (v11)
        {

          swift_unknownObjectRelease(v50);
          goto LABEL_43;
        }
      }
      v6 = v68 + 1;
      v7 = v53;
      if (v53 == v68 + 1)
        goto LABEL_40;
    }
    __break(1u);
LABEL_45:
    if (a2 < 0)
      v48 = a2;
    else
      v48 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(a2);
  }
  v11 = 0;
LABEL_50:
  *a1 = v11;
}

void sub_100949310(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  sub_10094966C(a1, a2, a3, (SEL *)&selRef_color, (unint64_t *)&qword_1013FBC20, off_101229840);
}

void sub_10094932C(_QWORD *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t (*v4)(void);
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;

  v2 = a2;
  v4 = (uint64_t (*)(void))(a2 >> 62);
  if (a2 >> 62)
    goto LABEL_40;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_44:
    v9 = 0;
LABEL_45:
    *a1 = v9;
    return;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_6:
    v7 = v6;
    v8 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x420))();
    if (v5 < 0)
      goto LABEL_50;
    v9 = (void *)v8;
    if (v4)
    {
      if (v2 < 0)
        v11 = v2;
      else
        v11 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      if (_CocoaArrayWrapper.endIndex.getter(v11) < 1)
        goto LABEL_48;
      swift_bridgeObjectRetain(v2);
      v10 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v2);
    }
    else
    {
      v10 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v2);
      if (!v10)
        goto LABEL_48;
    }
    if (v10 < v5)
      goto LABEL_49;
    if ((v2 & 0xC000000000000001) != 0 && v5 != 1)
    {
      type metadata accessor for CRLStyledItem(0);
      v12 = 1;
      do
      {
        v13 = v12 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v12);
        v12 = v13;
      }
      while (v5 != v13);
    }
    v29 = v7;
    v30 = a1;
    if (v4)
    {
      if (v2 < 0)
        v15 = v2;
      else
        v15 = v2 & 0xFFFFFFFFFFFFFF8;
      v16 = swift_bridgeObjectRetain(v2);
      v28 = _CocoaArrayWrapper.subscript.getter(1, v5, v15, v16);
      a1 = v17;
      v14 = v18;
      v20 = v19;
      swift_bridgeObjectRelease_n(v2, 2);
      v5 = v20 >> 1;
      if (v14 == v20 >> 1)
      {
LABEL_27:

        swift_unknownObjectRelease(v28);
        a1 = v30;
        goto LABEL_45;
      }
    }
    else
    {
      v28 = v2 & 0xFFFFFFFFFFFFFF8;
      a1 = (_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 32);
      v14 = 1;
      if (v5 == 1)
        goto LABEL_27;
    }
    v2 = (uint64_t)&qword_1013F2E90;
    while (v14 < v5)
    {
      v22 = (_QWORD *)a1[v14];
      v4 = *(uint64_t (**)(void))((swift_isaMask & *v22) + 0x420);
      v23 = v22;
      v24 = v4();
      if (v24)
      {
        v4 = (uint64_t (*)(void))v24;
        if (!v9)
        {

          swift_unknownObjectRelease(v28);
          goto LABEL_38;
        }
        sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
        v25 = v9;
        v26 = static NSObject.== infix(_:_:)(v4, v25);

        if ((v26 & 1) == 0)
        {

          swift_unknownObjectRelease(v28);
LABEL_38:
          a1 = v30;
          goto LABEL_45;
        }
      }
      else
      {
        v21 = v9;

        if (v9)
        {

          swift_unknownObjectRelease(v28);
          goto LABEL_38;
        }
      }
      if (v5 == ++v14)
        goto LABEL_27;
    }
    __break(1u);
LABEL_40:
    if (v2 < 0)
      v27 = v2;
    else
      v27 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v2);
    if (!v5)
      goto LABEL_44;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_100949650(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  sub_10094966C(a1, a2, a3, (SEL *)&selRef_pattern, &qword_1013EB6C8, off_1012299E8);
}

void sub_10094966C(_QWORD *a1, unint64_t a2, uint64_t a3, SEL *a4, unint64_t *a5, _QWORD *a6)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)(void);
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  SEL *v35;
  _QWORD *v36;
  id v37;
  id v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  id v45;

  v7 = a2;
  v8 = a1;
  v9 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_44;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_48:
    v16 = 0;
LABEL_49:
    *v8 = v16;
    return;
  }
  while (1)
  {
    v44 = v8;
    if ((v7 & 0xC000000000000001) == 0)
      break;
    v11 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
LABEL_6:
    v12 = &swift_isaMask;
    v43 = v11;
    v13 = v11;
    v14 = (void *)(*(uint64_t (**)(_QWORD *))((swift_isaMask & *v11) + 0x420))(v11);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, *a4);

      if (v10 < 0)
        goto LABEL_39;
    }
    else
    {
      v16 = 0;
      if (v10 < 0)
      {
LABEL_39:
        __break(1u);
LABEL_40:

        swift_unknownObjectRelease(v42);
LABEL_42:
        v8 = v44;
        goto LABEL_49;
      }
    }
    if (v9)
    {
      if (v7 < 0)
        v18 = v7;
      else
        v18 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      if (_CocoaArrayWrapper.endIndex.getter(v18) < 1)
        goto LABEL_52;
      swift_bridgeObjectRetain(v7);
      v17 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v17 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v7);
      if (!v17)
        goto LABEL_52;
    }
    if (v17 < v10)
      goto LABEL_53;
    if ((v7 & 0xC000000000000001) != 0 && v10 != 1)
    {
      type metadata accessor for CRLStyledItem(0);
      v19 = 1;
      do
      {
        v20 = v19 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v19);
        v19 = v20;
      }
      while (v10 != v20);
    }
    if (v9)
    {
      if (v7 < 0)
        v22 = v7;
      else
        v22 = v7 & 0xFFFFFFFFFFFFFF8;
      v23 = swift_bridgeObjectRetain(v7);
      v42 = _CocoaArrayWrapper.subscript.getter(1, v10, v22, v23);
      v21 = v24;
      v9 = v25;
      v27 = v26;
      swift_bridgeObjectRelease_n(v7, 2);
      v10 = v27 >> 1;
      if (v9 == v27 >> 1)
      {
LABEL_28:

        swift_unknownObjectRelease(v42);
        v8 = v44;
        goto LABEL_49;
      }
    }
    else
    {
      v42 = v7 & 0xFFFFFFFFFFFFFF8;
      v21 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
      v9 = 1;
      if (v10 == 1)
        goto LABEL_28;
    }
    v45 = v16;
    while (v9 < v10)
    {
      v28 = *(_QWORD **)(v21 + 8 * v9);
      v29 = *(uint64_t (**)(void))((*v12 & *v28) + 0x420);
      v7 = v28;
      v30 = (void *)v29();
      if (v30 && (v31 = v30, v32 = objc_msgSend(v30, *a4), v31, v32))
      {
        if (!v16)
        {

          swift_unknownObjectRelease(v42);
          goto LABEL_42;
        }
        sub_1004B8930(0, a5, a6);
        v33 = v16;
        v34 = v21;
        v35 = a4;
        v36 = v12;
        v37 = v33;
        v38 = v32;
        v39 = static NSObject.== infix(_:_:)(v38, v37);

        v12 = v36;
        a4 = v35;
        v21 = v34;
        v16 = v45;
        if ((v39 & 1) == 0)
        {

          swift_unknownObjectRelease(v42);
          goto LABEL_42;
        }
      }
      else
      {
        v13 = v16;

        if (v16)
          goto LABEL_40;
      }
      if (v10 == ++v9)
        goto LABEL_28;
    }
    __break(1u);
LABEL_44:
    if (v7 < 0)
      v40 = v7;
    else
      v40 = v7 & 0xFFFFFFFFFFFFFF8;
    v41 = v8;
    swift_bridgeObjectRetain(v7);
    v10 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v7);
    v8 = v41;
    if (!v10)
      goto LABEL_48;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v7 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
}

void sub_1009499F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  void *v9;
  BOOL v10;
  double v11;
  double v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  void *v28;
  double v29;
  double v30;
  uint64_t v31;
  char v32;

  v2 = a2;
  v4 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_40;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_44:
    *(_QWORD *)a1 = 0;
    v26 = 1;
LABEL_45:
    *(_BYTE *)(a1 + 8) = v26;
    return;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_6:
    v7 = v6;
    v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x420))();
    v9 = v8;
    v10 = v8 == 0;
    if (v8)
    {
      objc_msgSend(v8, "width");
      v12 = v11;

      if (v5 < 0)
        goto LABEL_38;
    }
    else
    {
      v12 = 0.0;
      if (v5 < 0)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    if (v4)
    {
      if (v2 < 0)
        v15 = v2;
      else
        v15 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      if (_CocoaArrayWrapper.endIndex.getter(v15) < 1)
        goto LABEL_48;
      swift_bridgeObjectRetain(v2);
      v13 = _CocoaArrayWrapper.endIndex.getter(v15);
      v14 = swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v14 = swift_bridgeObjectRetain(v2);
      if (!v13)
        goto LABEL_48;
    }
    if (v13 < v5)
      goto LABEL_49;
    if ((v2 & 0xC000000000000001) != 0 && v5 != 1)
    {
      type metadata accessor for CRLStyledItem(0);
      v16 = 1;
      do
      {
        v17 = v16 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v16);
        v16 = v17;
      }
      while (v5 != v17);
    }
    v32 = v10;
    if (v4)
    {
      if (v2 < 0)
        v20 = v2;
      else
        v20 = v2 & 0xFFFFFFFFFFFFFF8;
      v21 = swift_bridgeObjectRetain(v2);
      v4 = _CocoaArrayWrapper.subscript.getter(1, v5, v20, v21);
      v18 = v22;
      v19 = v23;
      v25 = v24;
      swift_bridgeObjectRelease_n(v2, 2);
      v5 = v25 >> 1;
      if (v19 == v25 >> 1)
      {
LABEL_28:

        swift_unknownObjectRelease(v4);
        *(double *)a1 = v12;
        v26 = v32;
        goto LABEL_45;
      }
    }
    else
    {
      v4 = v2 & 0xFFFFFFFFFFFFFF8;
      v18 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
      v19 = 1;
      if (v5 == 1)
        goto LABEL_28;
    }
    v2 = (uint64_t)&selRef_transformGuides_forLayout_;
    while (v19 < v5)
    {
      v27 = (void *)(*(uint64_t (**)(__n128))((swift_isaMask & **(_QWORD **)(v18 + 8 * v19)) + 0x420))(v14);
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, "width");
        v30 = v29;

        if (!v9 || v30 != v12)
          goto LABEL_28;
      }
      else if (v9)
      {
        goto LABEL_28;
      }
      if (v5 == ++v19)
        goto LABEL_28;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_44;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

void sub_100949CC4(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  sub_100949CDC(a1, a2, a3, (SEL *)&selRef_rightLineEndForShape_);
}

void sub_100949CD0(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  sub_100949CDC(a1, a2, a3, (SEL *)&selRef_leftLineEndForShape_);
}

void sub_100949CDC(_QWORD *a1, unint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;

  v4 = a2;
  v6 = (id)(a2 >> 62);
  if (a2 >> 62)
    goto LABEL_39;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_43:
    v12 = 0;
LABEL_44:
    *a1 = v12;
    return;
  }
  while ((v4 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_6:
    v9 = v8;
    v10 = (void *)objc_opt_self(CRLShapeEditor);
    v11 = objc_msgSend(v10, *a4, v9);
    if (v7 < 0)
      goto LABEL_49;
    v12 = v11;
    if (v6)
    {
      if (v4 < 0)
        v14 = v4;
      else
        v14 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      if (_CocoaArrayWrapper.endIndex.getter(v14) < 1)
        goto LABEL_47;
      swift_bridgeObjectRetain(v4);
      v13 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v13 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (!v13)
        goto LABEL_47;
    }
    if (v13 < v7)
      goto LABEL_48;
    if ((v4 & 0xC000000000000001) != 0 && v7 != 1)
    {
      type metadata accessor for CRLShapeItem(0);
      v15 = 1;
      do
      {
        v16 = v15 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v15);
        v15 = v16;
      }
      while (v7 != v16);
    }
    v31 = v9;
    v32 = a1;
    if (!v6)
    {
      v30 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
      v18 = 1;
      if (v7 != 1)
        goto LABEL_30;
LABEL_27:

      swift_unknownObjectRelease(v30);
      a1 = v32;
      goto LABEL_44;
    }
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    v20 = swift_bridgeObjectRetain(v4);
    v30 = _CocoaArrayWrapper.subscript.getter(1, v7, v19, v20);
    v17 = v21;
    v18 = v22;
    v24 = v23;
    swift_bridgeObjectRelease_n(v4, 2);
    v7 = v24 >> 1;
    if (v18 == v24 >> 1)
      goto LABEL_27;
LABEL_30:
    while (v18 < v7)
    {
      a1 = *(id *)(v17 + 8 * v18);
      v25 = objc_msgSend(v10, *a4, a1);
      if (v25)
      {
        v26 = v25;
        if (!v12)
        {

          swift_unknownObjectRelease(v30);
          goto LABEL_37;
        }
        v27 = sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
        v28 = v12;
        v6 = v26;
        v4 = v27;
        LOBYTE(v27) = static NSObject.== infix(_:_:)(v6, v28);

        if ((v27 & 1) == 0)
        {

          swift_unknownObjectRelease(v30);
LABEL_37:
          a1 = v32;
          goto LABEL_44;
        }
      }
      else
      {
        v4 = v12;

        if (v12)
        {

          swift_unknownObjectRelease(v30);
          goto LABEL_37;
        }
      }
      if (v7 == ++v18)
        goto LABEL_27;
    }
    __break(1u);
LABEL_39:
    if (v4 < 0)
      v29 = v4;
    else
      v29 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v4);
    if (!v7)
      goto LABEL_43;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v4 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

void sub_10094A008(_BYTE *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;

  v2 = a2;
  v4 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_39:
    v9 = 0;
LABEL_40:
    *(_QWORD *)a1 = v9;
    a1[8] = v5 == 0;
    return;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    v6 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_6:
    v7 = v6;
    v8 = objc_msgSend(v6, "connectionType");
    if (v5 < 0)
      goto LABEL_45;
    v9 = v8;
    if (v4)
    {
      if (v2 < 0)
        v12 = v2;
      else
        v12 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      if (_CocoaArrayWrapper.endIndex.getter(v12) < 1)
        goto LABEL_43;
      swift_bridgeObjectRetain(v2);
      v10 = _CocoaArrayWrapper.endIndex.getter(v12);
      v11 = swift_bridgeObjectRelease().n128_u64[0];
    }
    else
    {
      v10 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v11 = swift_bridgeObjectRetain(v2).n128_u64[0];
      if (!v10)
        goto LABEL_43;
    }
    if (v10 < v5)
      goto LABEL_44;
    v27 = a1;
    if ((v2 & 0xC000000000000001) != 0 && v5 != 1)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013EC6C0, off_101229850);
      v13 = 1;
      do
      {
        v14 = v13 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v13);
        v13 = v14;
      }
      while (v5 != v14);
    }
    a1 = v7;
    if (!v4)
    {
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
      v4 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
      v16 = 1;
      v17 = v5;
      if (v5 != 1)
        goto LABEL_22;
LABEL_33:

      swift_unknownObjectRelease(v15);
      a1 = v27;
      goto LABEL_40;
    }
    if (v2 < 0)
      v20 = v2;
    else
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
    v21 = swift_bridgeObjectRetain(v2);
    v15 = _CocoaArrayWrapper.subscript.getter(1, v5, v20, v21);
    v4 = v22;
    v16 = v23;
    v25 = v24;
    swift_bridgeObjectRelease_n(v2, 2);
    v17 = v25 >> 1;
    if (v16 == v17)
      goto LABEL_33;
LABEL_22:
    while (v16 < v17)
    {
      v18 = objc_msgSend(*(id *)(v4 + 8 * v16), "connectionType", *(double *)&v11);
      v2 = v18 != v9;
      if (v18 != v9 || v17 - 1 == v16++)
        goto LABEL_33;
    }
    __break(1u);
LABEL_35:
    if (v2 < 0)
      v26 = v2;
    else
      v26 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_39;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

id sub_10094A294()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterDataProvider()
{
  return objc_opt_self(_TtC8Freeform28CRLMiniFormatterDataProvider);
}

double *sub_10094A2F4(int64_t a1, int64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  _BOOL4 v12;
  BOOL v13;
  double *result;
  BOOL v15;
  int64_t v16;
  double v17;
  double v18;
  double v19;
  BOOL v20;
  int64_t v21;
  double *v22;
  double v23;
  double v24;
  double v25;
  BOOL v26;

  v6 = v5;
  v9 = a1;
  v10 = 0;
  v11 = a1;
  while (1)
  {
    v12 = v11 <= a2;
    if (a3 > 0)
      v12 = v11 >= a2;
    if (v12)
      break;
    v13 = __OFADD__(v11, a3);
    v11 += a3;
    if (v13)
      v11 = (v11 >> 63) ^ 0x8000000000000000;
    v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
      break;
    }
  }
  result = (double *)sub_100600820(0, v10, 0);
  if (v10)
  {
    while (1)
    {
      v15 = v9 <= a2;
      if (a3 > 0)
        v15 = v9 >= a2;
      if (v15)
        break;
      if (__OFADD__(v9, a3))
        v16 = ((v9 + a3) >> 63) ^ 0x8000000000000000;
      else
        v16 = v9 + a3;
      result = sub_100950350(v9, a4, a5);
      if (v6)
        goto LABEL_37;
      v17 = *(double *)&result;
      v6 = 0;
      v19 = _swiftEmptyArrayStorage[2];
      v18 = _swiftEmptyArrayStorage[3];
      if (*(_QWORD *)&v19 >= *(_QWORD *)&v18 >> 1)
        result = (double *)sub_100600820(*(_QWORD *)&v18 > 1uLL, *(_QWORD *)&v19 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v19 + 1;
      _swiftEmptyArrayStorage[*(_QWORD *)&v19 + 4] = v17;
      v9 = v16;
      if (!--v10)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
    v16 = v9;
LABEL_23:
    v20 = v16 <= a2;
    if (a3 > 0)
      v20 = v16 >= a2;
    if (v20)
    {
LABEL_26:
      swift_bridgeObjectRelease(a4);
    }
    else
    {
      while (1)
      {
        v21 = __OFADD__(v16, a3) ? ((v16 + a3) >> 63) ^ 0x8000000000000000 : v16 + a3;
        v22 = sub_100950350(v16, a4, a5);
        if (v6)
          break;
        v23 = *(double *)&v22;
        v6 = 0;
        v25 = _swiftEmptyArrayStorage[2];
        v24 = _swiftEmptyArrayStorage[3];
        if (*(_QWORD *)&v25 >= *(_QWORD *)&v24 >> 1)
          sub_100600820(*(_QWORD *)&v24 > 1uLL, *(_QWORD *)&v25 + 1, 1);
        *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v25 + 1;
        _swiftEmptyArrayStorage[*(_QWORD *)&v25 + 4] = v23;
        v26 = v21 <= a2;
        if (a3 > 0)
          v26 = v21 >= a2;
        v16 = v21;
        if (v26)
          goto LABEL_26;
      }
LABEL_37:
      swift_bridgeObjectRelease(a4);
      swift_release(_swiftEmptyArrayStorage);
    }
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10094A524(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;

  sub_100950B24(a1, a2, a3, a4);
  v7 = v6;

  return v7;
}

uint64_t sub_10094A57C(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  ObjectType = swift_getObjectType(a1);
  result = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLWPTextInspecting);
  if (result)
    v8 = result;
  else
    v8 = 0;
  if (result)
    v9 = a1;
  else
    v9 = 0;
  if (v9)
  {
    swift_beginAccess(a3 + 16, v11, 1, 0);
    v10 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 16) = v9;
    *(_QWORD *)(a3 + 24) = v8;
    swift_unknownObjectRetain(a1);
    result = swift_unknownObjectRelease(v10);
    *a2 = 1;
  }
  return result;
}

void sub_10094A614(uint64_t a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v4 = objc_msgSend(v3, "traitCollection");

  objc_msgSend(v4, "crl_isUserInterfaceStyleDark");
  __asm { BR              X10 }
}

UIImage *sub_10094A6AC()
{
  void *v0;
  char v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  UIImage *v15;
  UIImage *v16;
  id v17;
  NSString v18;
  id v19;

  v2 = v0;
  v3 = objc_msgSend(v2, "referenceColor");
  v4 = (void *)objc_opt_self(CRLColor);
  if ((v1 & 1) == 0)
  {
    v9 = objc_msgSend(v4, "whiteColor");
    v6 = v9;
    if (v3)
    {
      if (!v9)
        goto LABEL_10;
      sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
      v10 = v3;
      v11 = static NSObject.== infix(_:_:)(v10, v6);

      if ((v11 & 1) == 0)
        goto LABEL_15;
    }
    else if (v9)
    {
      goto LABEL_14;
    }
    v12 = 0xD00000000000001BLL;
    v13 = 0x8000000100FE3210;
    v14 = &selRef_whiteColor;
    goto LABEL_20;
  }
  v5 = objc_msgSend(v4, "blackColor");
  v6 = v5;
  if (!v3)
  {
    if (!v5)
      goto LABEL_12;
LABEL_14:

    goto LABEL_15;
  }
  if (!v5)
  {
LABEL_10:
    v6 = v3;
    goto LABEL_14;
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
  v7 = v3;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) != 0)
  {
LABEL_12:
    v12 = 0xD000000000000020;
    v13 = 0x8000000100FE31E0;
    v14 = &selRef_blackColor;
LABEL_20:
    v16 = sub_1009509F8(v12, v13, (SEL *)v14);
    goto LABEL_21;
  }
LABEL_15:
  v15 = (UIImage *)objc_msgSend(v2, "referenceColor");
  v16 = v15;
  if (v15)
  {
    v17 = -[UIImage UIColor](v15, "UIColor");

    if (v17)
    {
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v18);

      if (v19)
      {
        v16 = (UIImage *)objc_msgSend(v19, "imageWithTintColor:renderingMode:", v17, 1);

        goto LABEL_21;
      }

    }
    sub_1006B8384(v0, 0);
    return 0;
  }
LABEL_21:
  sub_1006B8384(v0, 0);
  return v16;
}

UIImage *sub_10094AD2C(void *a1, char a2)
{
  id v4;
  id v5;
  unsigned __int8 v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char **v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  char v23;
  id v24;
  char v25;
  UIImage *v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  id v32;
  char v33;
  void *v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  char **v38;
  NSString v39;
  id v40;

  v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v5 = objc_msgSend(v4, "traitCollection");

  v6 = objc_msgSend(v5, "crl_isUserInterfaceStyleDark");
  if (!a2)
  {
    v14 = a1;
    v15 = objc_msgSend(v14, "referenceColor");
    if (!v15)
      goto LABEL_32;
    v16 = v15;
    v17 = objc_msgSend(v15, "UIColor");

    if (!v17)
      goto LABEL_32;
    v18 = objc_msgSend(v14, "referenceColor");
    v19 = (void *)objc_opt_self(CRLColor);
    if ((v6 & 1) != 0)
    {
      v20 = objc_msgSend(v19, "blackColor");
      v21 = v20;
      if (!v18)
      {
        if (!v20)
        {
LABEL_26:
          v36 = 0xD000000000000023;
          v37 = 0x8000000100FE32A0;
          v38 = &selRef_blackColor;
LABEL_37:
          v26 = sub_1009509F8(v36, v37, (SEL *)v38);

          goto LABEL_38;
        }
        goto LABEL_28;
      }
      if (v20)
      {
        sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
        v22 = v18;
        v23 = static NSObject.== infix(_:_:)(v22, v21);

        if ((v23 & 1) == 0)
          goto LABEL_29;
        goto LABEL_26;
      }
      goto LABEL_24;
    }
    v31 = objc_msgSend(v19, "whiteColor");
    v21 = v31;
    if (v18)
    {
      if (!v31)
      {
LABEL_24:
        v21 = v18;
LABEL_28:

        goto LABEL_29;
      }
      sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
      v32 = v18;
      v33 = static NSObject.== infix(_:_:)(v32, v21);

      if ((v33 & 1) == 0)
      {
LABEL_29:
        v39 = String._bridgeToObjectiveC()();
        v40 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v39);

        if (v40)
        {
          v26 = (UIImage *)objc_msgSend(v40, "imageWithTintColor:renderingMode:", v17, 1);

LABEL_38:
          sub_1006B8384(a1, 0);
          return v26;
        }

LABEL_32:
        v34 = a1;
        v35 = 0;
LABEL_33:
        sub_1006B8384(v34, v35);
        return 0;
      }
    }
    else if (v31)
    {
      goto LABEL_28;
    }
    v36 = 0xD00000000000001ELL;
    v37 = 0x8000000100FE32D0;
    v38 = &selRef_whiteColor;
    goto LABEL_37;
  }
  if (a2 != 1)
    return 0;
  sub_1004B8930(0, &qword_1013FBC28, off_101229848);
  v7 = (void *)objc_opt_self(CRLColorFill);
  v8 = a1;
  if ((v6 & 1) == 0)
  {
    v24 = objc_msgSend(v7, "whiteColor");
    v25 = static NSObject.== infix(_:_:)(v8, v24);

    if ((v25 & 1) != 0)
    {
      v11 = 0xD00000000000001ELL;
      v12 = 0x8000000100FE32D0;
      v13 = &selRef_whiteColor;
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  v9 = objc_msgSend(v7, "blackColor");
  v10 = static NSObject.== infix(_:_:)(v8, v9);

  if ((v10 & 1) == 0)
  {
LABEL_16:
    v27 = objc_msgSend(v8, "color");
    v28 = objc_msgSend(v27, "UIColor");

    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v29);

    if (v30)
    {
      v26 = (UIImage *)objc_msgSend(v30, "imageWithTintColor:renderingMode:", v28, 1);

      goto LABEL_18;
    }

    v34 = a1;
    v35 = 1;
    goto LABEL_33;
  }
  v11 = 0xD000000000000023;
  v12 = 0x8000000100FE32A0;
  v13 = &selRef_blackColor;
LABEL_15:
  v26 = sub_1009509F8(v11, v12, (SEL *)v13);
LABEL_18:
  sub_1006B8384(a1, 1u);
  return v26;
}

id sub_10094B1E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;

  v0 = sub_1004B804C((uint64_t *)&unk_1013FBC30);
  v1 = swift_allocObject(v0, 224, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100F1ADF0;
  if (qword_1013DCE30 != -1)
    swift_once(&qword_1013DCE30, sub_1006B7FA8);
  v2 = (void *)qword_10147F170;
  *(_QWORD *)(v1 + 32) = qword_10147F170;
  *(_BYTE *)(v1 + 40) = 1;
  v3 = qword_1013DCE38;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1013DCE38, sub_1006B7FB8);
  v5 = (void *)qword_10147F178;
  *(_QWORD *)(v1 + 48) = qword_10147F178;
  *(_BYTE *)(v1 + 56) = 1;
  v6 = qword_1013DCE40;
  v7 = v5;
  if (v6 != -1)
    swift_once(&qword_1013DCE40, sub_1006B7FCC);
  v8 = (void *)qword_10147F180;
  *(_QWORD *)(v1 + 64) = qword_10147F180;
  *(_BYTE *)(v1 + 72) = 1;
  v9 = qword_1013DCE48;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_1013DCE48, sub_1006B8058);
  v11 = (void *)qword_10147F188;
  *(_QWORD *)(v1 + 80) = qword_10147F188;
  *(_BYTE *)(v1 + 88) = 1;
  v12 = qword_1013DCE50;
  v13 = v11;
  if (v12 != -1)
    swift_once(&qword_1013DCE50, sub_1006B807C);
  v14 = (void *)qword_10147F190;
  *(_QWORD *)(v1 + 96) = qword_10147F190;
  *(_BYTE *)(v1 + 104) = 1;
  v15 = qword_1013DCE58;
  v16 = v14;
  if (v15 != -1)
    swift_once(&qword_1013DCE58, sub_1006B80A0);
  v17 = (void *)qword_10147F198;
  *(_QWORD *)(v1 + 112) = qword_10147F198;
  *(_BYTE *)(v1 + 120) = 1;
  v18 = qword_1013DCE60;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_1013DCE60, sub_1006B80C8);
  v20 = (void *)qword_10147F1A0;
  *(_QWORD *)(v1 + 128) = qword_10147F1A0;
  *(_BYTE *)(v1 + 136) = 1;
  v21 = qword_1013DCE68;
  v22 = v20;
  if (v21 != -1)
    swift_once(&qword_1013DCE68, sub_1006B80EC);
  v23 = (void *)qword_10147F1A8;
  *(_QWORD *)(v1 + 144) = qword_10147F1A8;
  *(_BYTE *)(v1 + 152) = 1;
  v24 = qword_1013DCE70;
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_1013DCE70, sub_1006B810C);
  v26 = (void *)qword_10147F1B0;
  *(_QWORD *)(v1 + 160) = qword_10147F1B0;
  *(_BYTE *)(v1 + 168) = 1;
  v27 = qword_1013DCE78;
  v28 = v26;
  if (v27 != -1)
    swift_once(&qword_1013DCE78, sub_1006B8130);
  v29 = (void *)qword_10147F1B8;
  *(_QWORD *)(v1 + 176) = qword_10147F1B8;
  *(_BYTE *)(v1 + 184) = 1;
  v30 = qword_1013DCE80;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_1013DCE80, sub_1006B8154);
  v32 = (void *)qword_10147F1C0;
  *(_QWORD *)(v1 + 192) = qword_10147F1C0;
  *(_BYTE *)(v1 + 200) = 1;
  v33 = qword_1013DCE88;
  v34 = v32;
  if (v33 != -1)
    swift_once(&qword_1013DCE88, sub_1006B8178);
  v35 = (void *)qword_10147F1C8;
  *(_QWORD *)(v1 + 208) = qword_10147F1C8;
  *(_BYTE *)(v1 + 216) = 1;
  xmmword_101480000 = xmmword_100F1AE00;
  qword_101480010 = v1;
  return v35;
}

id sub_10094B524()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;

  v0 = sub_1004B804C((uint64_t *)&unk_1013FBC30);
  v1 = swift_allocObject(v0, 144, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF7D10;
  if (qword_1013DCE90 != -1)
    swift_once(&qword_1013DCE90, sub_1006B8230);
  v2 = (void *)qword_10147F1D0;
  *(_QWORD *)(v1 + 32) = qword_10147F1D0;
  *(_BYTE *)(v1 + 40) = 0;
  v3 = qword_1013DCE98;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1013DCE98, sub_1006B8254);
  v5 = (void *)qword_10147F1D8;
  *(_QWORD *)(v1 + 48) = qword_10147F1D8;
  *(_BYTE *)(v1 + 56) = 0;
  v6 = qword_1013DCEA0;
  v7 = v5;
  if (v6 != -1)
    swift_once(&qword_1013DCEA0, sub_1006B8274);
  v8 = (void *)qword_10147F1E0;
  *(_QWORD *)(v1 + 64) = qword_10147F1E0;
  *(_BYTE *)(v1 + 72) = 0;
  v9 = qword_1013DCEA8;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_1013DCEA8, sub_1006B8294);
  v11 = (void *)qword_10147F1E8;
  *(_QWORD *)(v1 + 80) = qword_10147F1E8;
  *(_BYTE *)(v1 + 88) = 0;
  v12 = qword_1013DCEB0;
  v13 = v11;
  if (v12 != -1)
    swift_once(&qword_1013DCEB0, sub_1006B82B8);
  v14 = (void *)qword_10147F1F0;
  *(_QWORD *)(v1 + 96) = qword_10147F1F0;
  *(_BYTE *)(v1 + 104) = 0;
  v15 = qword_1013DCEB8;
  v16 = v14;
  if (v15 != -1)
    swift_once(&qword_1013DCEB8, sub_1006B82E0);
  v17 = (void *)qword_10147F1F8;
  *(_QWORD *)(v1 + 112) = qword_10147F1F8;
  *(_BYTE *)(v1 + 120) = 0;
  v18 = qword_1013DCEC0;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_1013DCEC0, sub_1006B8300);
  v20 = (void *)qword_10147F200;
  *(_QWORD *)(v1 + 128) = qword_10147F200;
  *(_BYTE *)(v1 + 136) = 0;
  xmmword_101480020 = xmmword_100F1AE10;
  qword_101480030 = v1;
  return v20;
}

id sub_10094B71C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;

  v0 = sub_1004B804C((uint64_t *)&unk_1013FBC30);
  v1 = swift_allocObject(v0, 240, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100F0C660;
  if (qword_1013DCE30 != -1)
    swift_once(&qword_1013DCE30, sub_1006B7FA8);
  v2 = (void *)qword_10147F170;
  *(_QWORD *)(v1 + 32) = qword_10147F170;
  *(_BYTE *)(v1 + 40) = 1;
  v3 = qword_1013DCE38;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1013DCE38, sub_1006B7FB8);
  v5 = (void *)qword_10147F178;
  *(_QWORD *)(v1 + 48) = qword_10147F178;
  *(_BYTE *)(v1 + 56) = 1;
  v6 = qword_1013DCE40;
  v7 = v5;
  if (v6 != -1)
    swift_once(&qword_1013DCE40, sub_1006B7FCC);
  v8 = (void *)qword_10147F180;
  *(_QWORD *)(v1 + 64) = qword_10147F180;
  *(_BYTE *)(v1 + 72) = 1;
  v9 = qword_1013DCE48;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_1013DCE48, sub_1006B8058);
  v11 = (void *)qword_10147F188;
  *(_QWORD *)(v1 + 80) = qword_10147F188;
  *(_BYTE *)(v1 + 88) = 1;
  v12 = qword_1013DCE50;
  v13 = v11;
  if (v12 != -1)
    swift_once(&qword_1013DCE50, sub_1006B807C);
  v14 = (void *)qword_10147F190;
  *(_QWORD *)(v1 + 96) = qword_10147F190;
  *(_BYTE *)(v1 + 104) = 1;
  v15 = qword_1013DCE58;
  v16 = v14;
  if (v15 != -1)
    swift_once(&qword_1013DCE58, sub_1006B80A0);
  v17 = (void *)qword_10147F198;
  *(_QWORD *)(v1 + 112) = qword_10147F198;
  *(_BYTE *)(v1 + 120) = 1;
  v18 = qword_1013DCE60;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_1013DCE60, sub_1006B80C8);
  v20 = (void *)qword_10147F1A0;
  *(_QWORD *)(v1 + 128) = qword_10147F1A0;
  *(_BYTE *)(v1 + 136) = 1;
  v21 = qword_1013DCE68;
  v22 = v20;
  if (v21 != -1)
    swift_once(&qword_1013DCE68, sub_1006B80EC);
  v23 = (void *)qword_10147F1A8;
  *(_QWORD *)(v1 + 144) = qword_10147F1A8;
  *(_BYTE *)(v1 + 152) = 1;
  v24 = qword_1013DCE70;
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_1013DCE70, sub_1006B810C);
  v26 = (void *)qword_10147F1B0;
  *(_QWORD *)(v1 + 160) = qword_10147F1B0;
  *(_BYTE *)(v1 + 168) = 1;
  v27 = qword_1013DCE78;
  v28 = v26;
  if (v27 != -1)
    swift_once(&qword_1013DCE78, sub_1006B8130);
  v29 = (void *)qword_10147F1B8;
  *(_QWORD *)(v1 + 176) = qword_10147F1B8;
  *(_BYTE *)(v1 + 184) = 1;
  v30 = qword_1013DCE80;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_1013DCE80, sub_1006B8154);
  v32 = (void *)qword_10147F1C0;
  *(_QWORD *)(v1 + 192) = qword_10147F1C0;
  *(_BYTE *)(v1 + 200) = 1;
  v33 = qword_1013DCE88;
  v34 = v32;
  if (v33 != -1)
    swift_once(&qword_1013DCE88, sub_1006B8178);
  v35 = (void *)qword_10147F1C8;
  *(_QWORD *)(v1 + 208) = qword_10147F1C8;
  *(_BYTE *)(v1 + 216) = 1;
  *(_QWORD *)(v1 + 224) = 0;
  *(_BYTE *)(v1 + 232) = 2;
  xmmword_101480040 = xmmword_100F1AE20;
  qword_101480050 = v1;
  return v35;
}

