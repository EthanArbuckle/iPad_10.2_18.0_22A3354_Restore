uint64_t sub_100691CD0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD **)(v0 + 408);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 264, 0, 0);
  v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 104);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  v9 = String.index(_:offsetBy:)(15, 8, v6, v7);
  v10 = String.subscript.getter(15, v9, v6, v8);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = swift_bridgeObjectRelease(v8);
  v18 = static String._fromSubstring(_:)(v10, v12, v14, v16, v17);
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  v22 = static os_log_type_t.debug.getter(v21);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v22, "(CoreRE) [%{public}@] loadScene(): entity loaded", 48, 2, inited);
  swift_setDeallocating(inited);
  v23 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v23);

  v24 = v1[6];
  *(_QWORD *)(v0 + 616) = v24;
  v25 = v1[7];
  *(_QWORD *)(v0 + 624) = v25;
  v26 = v1[8];
  *(_QWORD *)(v0 + 632) = v26;
  v27 = v1[9];
  *(_QWORD *)(v0 + 640) = v27;
  v28 = v1[10];
  *(_QWORD *)(v0 + 648) = v28;
  v29 = v1[11];
  *(_QWORD *)(v0 + 656) = v29;
  v30 = v1[12];
  *(_QWORD *)(v0 + 664) = v30;
  v31 = v1[13];
  *(_QWORD *)(v0 + 672) = v31;
  v32 = v1[14];
  *(_QWORD *)(v0 + 680) = v32;
  v33 = v1[15];
  *(_QWORD *)(v0 + 688) = v33;
  v34 = v1[16];
  *(_QWORD *)(v0 + 696) = v34;
  if (v27 >> 62)
  {
    v64 = *(_QWORD *)(v0 + 600);
    v66 = *(_QWORD *)(v0 + 512);
    v65 = *(_QWORD *)(v0 + 488);
    v70 = *(_QWORD *)(v0 + 472);
    v67 = *(_QWORD *)(v0 + 440);
    v69 = *(_QWORD *)(v0 + 432);
    sub_100690624(v24, v25, v26, v27);
    swift_release(v64);
    swift_release(v65);
    swift_release(v66);
    sub_100690688(v24, v25, v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v70, v69);
    goto LABEL_7;
  }
  v35 = *(_QWORD *)(v0 + 512);
  *(_DWORD *)(v0 + 288) = v26;
  *(_QWORD *)(v0 + 304) = v28;
  *(_QWORD *)(v0 + 312) = v29;
  *(_QWORD *)(v0 + 320) = v30;
  *(_QWORD *)(v0 + 328) = v31;
  *(_QWORD *)(v0 + 336) = v32;
  *(_QWORD *)(v0 + 344) = v33;
  *(_QWORD *)(v0 + 352) = v34;
  if (v35 != v24)
  {
    v36 = *(_QWORD *)(v0 + 600);
    v37 = *(_QWORD *)(v0 + 488);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 432));
    swift_release(v36);
    swift_release(v37);
    swift_release(v35);
LABEL_7:
    v38 = *(_QWORD *)(v0 + 464);
    v40 = *(_QWORD *)(v0 + 448);
    v39 = *(_QWORD *)(v0 + 456);
    v41 = *(_QWORD *)(v0 + 424);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  v68 = v26;
  v71 = v24;
  v44 = qword_1013DD118;
  swift_retain(v35);
  if (v44 != -1)
    swift_once(&qword_1013DD118, sub_1007B5120);
  v45 = *(_QWORD *)(v0 + 608);
  v46 = *(_QWORD *)(v0 + 600);
  v47 = *(_QWORD *)(v0 + 408);
  v48 = qword_10147F5F0;
  swift_retain(qword_10147F5F0);
  v49 = sub_1007B4B0C(v47, v46, v0 + 288);
  *(_QWORD *)(v0 + 704) = v49;
  if (v45)
  {
    v50 = *(_QWORD *)(v0 + 600);
    v51 = *(_QWORD *)(v0 + 512);
    v52 = *(_QWORD *)(v0 + 488);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 432));
    swift_release(v51);
    sub_100690688(v71, v25, v68, v27);
    swift_release(v48);
    swift_release(v50);
    swift_release(v52);
    v53 = *(_QWORD *)(v0 + 464);
    v55 = *(_QWORD *)(v0 + 448);
    v54 = *(_QWORD *)(v0 + 456);
    v56 = *(_QWORD *)(v0 + 424);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  v57 = v49;
  v58 = *(_QWORD *)(v0 + 512);
  v59 = *(_QWORD *)(v0 + 480);
  swift_release(v48);
  v60 = *(_QWORD *)(v57 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_loadReceipt);
  *(_QWORD *)(v57 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_loadReceipt) = v58;
  swift_retain(v58);
  swift_release(v60);
  swift_retain(v57);
  *(_QWORD *)(v0 + 712) = static MainActor.shared.getter(v61);
  v62 = dispatch thunk of Actor.unownedExecutor.getter(v59, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 720) = v62;
  *(_QWORD *)(v0 + 728) = v63;
  return swift_task_switch(sub_1006921F4, v62, v63);
}

uint64_t sub_1006921F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = v0[88];
  v2 = v0[51];
  sub_100694E14(v2 + 48, (uint64_t)(v0 + 22));
  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v2 + 72);
  v8 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = v1;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0x4000000000000000;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_QWORD *)(v2 + 128) = 0;
  *(_OWORD *)(v2 + 112) = 0u;
  swift_retain_n(v1, 2);
  sub_100694E3C(v0 + 22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690624);
  sub_100690688(v8, v3, v4, v5);
  sub_100690B2C((uint64_t)(v0 + 22));
  swift_release(v1);
  sub_100694E3C(v0 + 22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690688);
  v6 = (_QWORD *)swift_task_alloc(dword_1013EB30C);
  v0[92] = v6;
  *v6 = v0;
  v6[1] = sub_100692324;
  return sub_100690FE8();
}

uint64_t sub_100692324()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 736));
  return swift_task_switch(sub_100692374, *(_QWORD *)(v1 + 720), *(_QWORD *)(v1 + 728));
}

uint64_t sub_100692374()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[88];
  swift_release(v0[89]);
  swift_release(v1);
  return swift_task_switch(sub_1006923B8, v0[62], v0[63]);
}

uint64_t sub_1006923B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 704);
  v2 = *(_QWORD *)(v0 + 640);
  v3 = *(_QWORD *)(v0 + 632);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 512);
  v7 = *(_QWORD *)(v0 + 488);
  v16 = *(_QWORD *)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 600));
  swift_release(v7);
  swift_release(v1);
  sub_100690688(v5, v4, v3, v2);
  v8 = swift_release(v6);
  (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v16, v15, v8);
  v9 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 448);
  v10 = *(_QWORD *)(v0 + 456);
  v12 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006924EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  swift_release(*(_QWORD *)(v0 + 488));
  v5 = swift_release(v1);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v2, v3, v5);
  v6 = *(_QWORD *)(v0 + 464);
  v8 = *(_QWORD *)(v0 + 448);
  v7 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100692584(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v5[51] = a3;
  v5[52] = v4;
  v5[50] = a2;
  v8 = type metadata accessor for MainActor(0);
  v5[53] = v8;
  v5[54] = static MainActor.shared.getter(v8);
  v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc(a4[1]);
  v5[55] = v9;
  *v9 = v5;
  v9[1] = sub_100692618;
  return v11(a1);
}

uint64_t sub_100692618()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 440);
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 424), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1006926D0;
  else
    v6 = sub_10069269C;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10069269C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 432));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006926D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;

  swift_release(*(_QWORD *)(v0 + 432));
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 408);
  v39 = *(_QWORD *)(v0 + 400);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 256, 0, 0);
  v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 104);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v40 = v3;
  v6 = UUID.uuidString.getter(v40);
  v8 = v7;
  v9 = String.index(_:offsetBy:)(15, 8, v6, v7);
  v10 = String.subscript.getter(15, v9, v6, v8);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = swift_bridgeObjectRelease(v8);
  v18 = static String._fromSubstring(_:)(v10, v12, v14, v16, v17);
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v21 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v21;
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 72) = v39;
  *(_QWORD *)(inited + 80) = v2;
  swift_getErrorValue(v1, v0 + 376, v0 + 280);
  v22 = *(_QWORD *)(v0 + 288);
  v23 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRetain(v2);
  v24 = Error.localizedDescription.getter(v22, v23);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v21;
  *(_QWORD *)(inited + 112) = v24;
  *(_QWORD *)(inited + 120) = v25;
  v26 = static os_log_type_t.error.getter(v24);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v26, "(CoreRE) [%{public}@] %{public}@ error: %{public}@", 50, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v27);

  *(_QWORD *)(v0 + 392) = v1;
  swift_errorRetain(v1);
  v28 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 328, v0 + 392, v28, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v29 = *(_QWORD *)(v0 + 328);
    v30 = *(_QWORD *)(v0 + 336);
    v31 = *(unsigned __int8 *)(v0 + 344);
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 448);
    *(_QWORD *)(v0 + 368) = v32;
    swift_errorRetain(v32);
    if ((swift_dynamicCast(v0 + 352, v0 + 368, v28, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v29 = *(_QWORD *)(v0 + 352);
      v30 = *(_QWORD *)(v0 + 360);
      v31 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 448), v0 + 384, v0 + 304);
      v29 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
      v30 = v33;
      v31 = 2;
    }
  }
  v34 = *(_QWORD *)(v0 + 416);
  sub_100694E14(v34 + 48, v0 + 16);
  v35 = *(_QWORD *)(v34 + 56);
  v36 = *(_QWORD *)(v34 + 64);
  v41 = *(_QWORD *)(v34 + 72);
  v42 = *(_QWORD *)(v34 + 48);
  *(_QWORD *)(v34 + 48) = v29;
  *(_QWORD *)(v34 + 56) = v30;
  *(_QWORD *)(v34 + 64) = v31;
  *(_QWORD *)(v34 + 72) = 0x8000000000000000;
  *(_OWORD *)(v34 + 80) = 0u;
  *(_OWORD *)(v34 + 96) = 0u;
  *(_QWORD *)(v34 + 128) = 0;
  *(_OWORD *)(v34 + 112) = 0u;
  sub_100689D34(v29, v30, v31);
  sub_100689D34(v29, v30, v31);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690624);
  sub_100690688(v42, v35, v36, v41);
  sub_100690B2C(v0 + 16);
  sub_100689EEC(v29, v30, v31);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690688);
  sub_100690C78();
  sub_100689EEC(v29, v30, v31);
  swift_willThrow(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100692ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v2 + 328) = *(_DWORD *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v2 + 120) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v2 + 128) = v1;
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v4;
  *(_OWORD *)(v2 + 152) = v3;
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(a1 + 64);
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 176) = v5;
  *(_QWORD *)(v2 + 184) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 192) = v6;
  *(_QWORD *)(v2 + 200) = v7;
  return swift_task_switch(sub_100692B50, v6, v7);
}

uint64_t sub_100692B50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v1 = *(_QWORD **)(v0 + 128);
  v2 = v1[6];
  *(_QWORD *)(v0 + 208) = v2;
  v3 = v1[7];
  *(_QWORD *)(v0 + 216) = v3;
  v4 = v1[8];
  *(_QWORD *)(v0 + 224) = v4;
  v5 = v1[9];
  *(_QWORD *)(v0 + 232) = v5;
  *(_QWORD *)(v0 + 240) = v1[10];
  *(_QWORD *)(v0 + 248) = v1[11];
  *(_QWORD *)(v0 + 256) = v1[12];
  *(_QWORD *)(v0 + 264) = v1[13];
  *(_QWORD *)(v0 + 272) = v1[14];
  *(_QWORD *)(v0 + 280) = v1[15];
  *(_QWORD *)(v0 + 288) = v1[16];
  if (v5 >> 62 == 1)
  {
    v17 = *(_QWORD *)(v0 + 184);
    v18 = v3;
    v11 = *(_QWORD *)(v0 + 104);
    v19 = v4;
    swift_retain(v2);
    swift_release(v17);
    v12 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration;
    *(_OWORD *)v12 = *(_OWORD *)v11;
    v13 = *(_OWORD *)(v11 + 16);
    v14 = *(_OWORD *)(v11 + 32);
    v15 = *(_OWORD *)(v11 + 48);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v11 + 64);
    *(_OWORD *)(v12 + 32) = v14;
    *(_OWORD *)(v12 + 48) = v15;
    *(_OWORD *)(v12 + 16) = v13;
    sub_100690688(v2, v18, v19, v5);
  }
  else
  {
    if (!(v5 >> 62))
    {
      v6 = *(_QWORD *)(v0 + 176);
      sub_100690624(v2, v3, v4, v5);
      v7 = swift_retain_n(v2, 2);
      *(_QWORD *)(v0 + 296) = static MainActor.shared.getter(v7);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 304) = v8;
      *(_QWORD *)(v0 + 312) = v9;
      return swift_task_switch(sub_100692D14, v8, v9);
    }
    v16 = swift_release(*(_QWORD *)(v0 + 184));
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
}

uint64_t sub_100692D14()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v12 = *(_OWORD *)(v0 + 112);
  v13 = *(_OWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(unsigned int *)(v0 + 328);
  sub_100694E14(v8 + 48, v0 + 16);
  v16 = *(_QWORD *)(v8 + 56);
  v17 = *(_QWORD *)(v8 + 48);
  v14 = *(_QWORD *)(v8 + 72);
  v15 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v8 + 48) = v4;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 72) = 0;
  *(_OWORD *)(v8 + 80) = v12;
  *(_QWORD *)(v8 + 96) = v6;
  *(_QWORD *)(v8 + 104) = v7;
  *(_OWORD *)(v8 + 112) = v13;
  *(_QWORD *)(v8 + 128) = v5;
  sub_100690624(v4, v2, v3, v1);
  sub_100690624(v4, v2, v3, v1);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690624);
  sub_100690688(v17, v16, v15, v14);
  sub_100690B2C(v0 + 16);
  sub_100690688(v4, v2, v3, v1);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690688);
  v10 = (_QWORD *)swift_task_alloc(dword_1013EB30C);
  *(_QWORD *)(v0 + 320) = v10;
  *v10 = v0;
  v10[1] = sub_100692F60;
  return sub_100690FE8();
}

uint64_t sub_100692F60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 320));
  return swift_task_switch(sub_100692FAC, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_100692FAC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = v0[28];
  v1 = v0[29];
  v4 = v0[26];
  v3 = v0[27];
  swift_release(v0[37]);
  sub_100690688(v4, v3, v2, v1);
  return swift_task_switch(sub_10069304C, v0[24], v0[25]);
}

uint64_t sub_10069304C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100690688(v4, v2, v3, v1);
  sub_100690688(v4, v2, v3, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100693118(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100693184, v4, v5);
}

uint64_t sub_100693184()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  uint64_t result;
  __n128 v13;
  double v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[6];
  *(_QWORD *)(v0 + 56) = v2;
  v3 = v1[7];
  *(_QWORD *)(v0 + 64) = v3;
  v4 = v1[8];
  *(_QWORD *)(v0 + 72) = v4;
  v5 = v1[9];
  *(_QWORD *)(v0 + 80) = v5;
  *(_QWORD *)(v0 + 88) = v1[10];
  *(_QWORD *)(v0 + 96) = v1[11];
  *(_QWORD *)(v0 + 104) = v1[12];
  *(_QWORD *)(v0 + 112) = v1[13];
  *(_QWORD *)(v0 + 120) = v1[14];
  *(_QWORD *)(v0 + 128) = v1[15];
  *(_QWORD *)(v0 + 136) = v1[16];
  if (v5 >> 62 != 1)
  {
    v13 = swift_release(*(_QWORD *)(v0 + 32));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v0 + 144) = v7;
  if (!v7)
  {
    v19 = *(_QWORD *)(v0 + 32);
    v20 = v3;
    v21 = v4;
    swift_retain(v2);
    swift_release(v19);
    sub_100690688(v2, v20, v21, v5);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
  v8 = v6;
  sub_100690624(v2, v3, v4, v5);
  *(_QWORD *)(v0 + 152) = 0;
  v9 = *(_QWORD *)(v0 + 16);
  v10 = *(unsigned __int8 *)(v9 + 40);
  swift_bridgeObjectRetain(v8);
  switch(v10)
  {
    case 2:
      v11 = (_QWORD *)swift_task_alloc(dword_1013FF72C);
      *(_QWORD *)(v0 + 168) = v11;
      *v11 = v0;
      v11[1] = sub_1006934C4;
      result = sub_1009B7380();
      break;
    case 3:
      v16 = (_QWORD *)swift_task_alloc(dword_1013FF734);
      *(_QWORD *)(v0 + 176) = v16;
      *v16 = v0;
      v16[1] = sub_100693510;
      result = sub_1009B7634();
      break;
    case 4:
      v17 = (_QWORD *)swift_task_alloc(dword_1013FF744);
      *(_QWORD *)(v0 + 192) = v17;
      *v17 = v0;
      v17[1] = sub_1006935A8;
      result = sub_1009B7D70();
      break;
    case 5:
      v18 = (_QWORD *)swift_task_alloc(dword_1013FF73C);
      *(_QWORD *)(v0 + 184) = v18;
      *v18 = v0;
      v18[1] = sub_10069355C;
      result = sub_1009B78B8();
      break;
    default:
      v14 = *(double *)(v9 + 32);
      v15 = (_QWORD *)swift_task_alloc(dword_1013FF724);
      *(_QWORD *)(v0 + 160) = v15;
      *v15 = v0;
      v15[1] = sub_100693478;
      result = sub_1009B6E30(v10 & 1, v14);
      break;
  }
  return result;
}

uint64_t sub_100693478()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  return swift_task_switch(sub_100695220, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1006934C4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));
  return swift_task_switch(sub_100695220, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100693510()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  return swift_task_switch(sub_100695220, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10069355C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));
  return swift_task_switch(sub_100695220, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1006935A8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  return swift_task_switch(sub_1006935F4, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1006935F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  double v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 152) + 1;
  if (v1 == *(_QWORD *)(v0 + 144))
  {
    v3 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
    swift_release(v6);
    sub_100690688(v5, v4, v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 152) = v1;
    v8 = *(_QWORD *)(v0 + 16) + 16 * v1;
    switch(*(_BYTE *)(v8 + 40))
    {
      case 2:
        v9 = (_QWORD *)swift_task_alloc(dword_1013FF72C);
        *(_QWORD *)(v0 + 168) = v9;
        *v9 = v0;
        v9[1] = sub_1006934C4;
        result = sub_1009B7380();
        break;
      case 3:
        v13 = (_QWORD *)swift_task_alloc(dword_1013FF734);
        *(_QWORD *)(v0 + 176) = v13;
        *v13 = v0;
        v13[1] = sub_100693510;
        result = sub_1009B7634();
        break;
      case 4:
        v14 = (_QWORD *)swift_task_alloc(dword_1013FF744);
        *(_QWORD *)(v0 + 192) = v14;
        *v14 = v0;
        v14[1] = sub_1006935A8;
        result = sub_1009B7D70();
        break;
      case 5:
        v15 = (_QWORD *)swift_task_alloc(dword_1013FF73C);
        *(_QWORD *)(v0 + 184) = v15;
        *v15 = v0;
        v15[1] = sub_10069355C;
        result = sub_1009B78B8();
        break;
      default:
        v10 = *(double *)(v8 + 32);
        v11 = *(_BYTE *)(v8 + 40) & 1;
        v12 = (_QWORD *)swift_task_alloc(dword_1013FF724);
        *(_QWORD *)(v0 + 160) = v12;
        *v12 = v0;
        v12[1] = sub_100693478;
        result = sub_1009B6E30(v11, v10);
        break;
    }
  }
  return result;
}

uint64_t sub_10069386C(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  *(float *)(v2 + 160) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  return swift_task_switch(sub_1006938DC, v4, v5);
}

uint64_t sub_1006938DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v7;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[6];
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v1[7];
  *(_QWORD *)(v0 + 64) = v1[8];
  v3 = v1[9];
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v1[10];
  *(_QWORD *)(v0 + 88) = v1[11];
  *(_QWORD *)(v0 + 96) = v1[12];
  *(_QWORD *)(v0 + 104) = v1[13];
  *(_QWORD *)(v0 + 112) = v1[14];
  *(_QWORD *)(v0 + 120) = v1[15];
  *(_QWORD *)(v0 + 128) = v1[16];
  if (v3 >> 62 == 1)
  {
    v4 = dword_1013FF74C;
    swift_retain(v2);
    v5 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 136) = v5;
    *v5 = v0;
    v5[1] = sub_1006939BC;
    return sub_1009B7FB0(*(float *)(v0 + 160));
  }
  else
  {
    v7 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v7);
  }
}

uint64_t sub_1006939BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[4];
    v7 = v4[5];
    v8 = sub_100693AD4;
  }
  else
  {
    v4[19] = a1;
    v6 = v4[4];
    v7 = v4[5];
    v8 = sub_100693A30;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100693A30()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 24));
  sub_100690688(v4, v3, v2, v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 152));
}

uint64_t sub_100693AD4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 24);
  sub_100690688(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_100693B30(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  double result;
  id v34;
  void *v35;
  char *v36;
  uint64_t v37;

  v5 = v4;
  v10 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, "device", v11);
  v15 = *(void **)(v4 + 32);
  if (v15)
  {
    v35 = a4;
    v16 = v15;
    v17 = objc_msgSend(v16, "device");
    v18 = v17;
    if (v17)
    {
      v19 = objc_msgSend(v17, "registryID");
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v19 = 0;
    }
    v36 = v13;
    v37 = v5;
    v20 = objc_msgSend(v14, "registryID");
    if (!v18 || v19 != v20)
      objc_msgSend(v16, "setDevice:", v14);
    v21 = &v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
    v22 = *(_QWORD *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
    v23 = *(_QWORD *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 8];
    v34 = v14;
    v24 = *(_QWORD *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 16];
    v25 = *(void **)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 24];
    *(_QWORD *)v21 = a1;
    *((_QWORD *)v21 + 1) = a2;
    a4 = v35;
    *((_QWORD *)v21 + 2) = a3;
    *((_QWORD *)v21 + 3) = a4;
    swift_unknownObjectRetain_n(a1, 2);
    swift_unknownObjectRetain_n(a2, 2);
    swift_unknownObjectRetain_n(a3, 2);
    v26 = a4;
    v27 = v25;
    v14 = v34;
    sub_10068E7F0(v22, v23, v24, v27);
    sub_100895BF4();

    swift_unknownObjectRelease(a3);
    swift_unknownObjectRelease(a2);
    swift_unknownObjectRelease(a1);
    v13 = v36;
    v5 = v37;
  }
  v28 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 1, 1, v28);
  type metadata accessor for MainActor(0);
  swift_unknownObjectRetain(a1);
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  swift_unknownObjectRetain(a3);
  v29 = a4;
  v30 = static MainActor.shared.getter(v29);
  v31 = (_QWORD *)swift_allocObject(&unk_101275CA8, 72, 7);
  v31[2] = v30;
  v31[3] = &protocol witness table for MainActor;
  v31[4] = v5;
  v31[5] = a1;
  v31[6] = a2;
  v31[7] = a3;
  v31[8] = v29;
  v32 = sub_100521BB8((uint64_t)v13, (uint64_t)&unk_1013EB348, (uint64_t)v31);
  swift_unknownObjectRelease(v14);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

uint64_t sub_100693DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  v9 = type metadata accessor for MainActor(0);
  v8[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v8[9] = v10;
  v8[10] = v11;
  return swift_task_switch(sub_100693E18, v10, v11);
}

uint64_t sub_100693E18()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  __n128 v9;
  int *v10;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 24) + 16);
  *(_QWORD *)(v0 + 88) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong);
    v5 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
    v6 = *(int **)(v3 + 24);
    v10 = (int *)((char *)v6 + *v6);
    v7 = (_QWORD *)swift_task_alloc(v6[1]);
    *(_QWORD *)(v0 + 96) = v7;
    *v7 = v0;
    v7[1] = sub_100693EF0;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))v10)(v5, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), ObjectType, v3);
  }
  else
  {
    v9 = swift_release(*(_QWORD *)(v0 + 64));
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
  }
}

uint64_t sub_100693EF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 96));
  v3 = v2[11];
  if (v0)
  {
    swift_errorRelease(v0);
    swift_unknownObjectRelease(v3);
    v4 = v2[9];
    v5 = v2[10];
    v6 = sub_100693FAC;
  }
  else
  {
    swift_unknownObjectRelease(v2[11]);
    v4 = v2[9];
    v5 = v2[10];
    v6 = sub_100693F74;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100693F74()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  **(_BYTE **)(v0 + 16) = 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100693FAC()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100693FE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[83] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[84] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[85] = v4;
  v2[86] = v5;
  return swift_task_switch(sub_100694058, v4, v5);
}

uint64_t sub_100694058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 664);
  swift_beginAccess(v1, v0 + 408, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 696) = Strong;
  if (Strong)
    __asm { BR              X10 }
  v3 = swift_release(*(_QWORD *)(v0 + 672));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10069462C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 808);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  *(_QWORD *)(*(_QWORD *)v1 + 816) = v0;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  if (v0)
  {
    sub_100689EAC(v2[88], v2[89], v2[90], v2[91], v2[92], v2[93], v2[94]);
    v5 = v2[86];
    v6 = v2[85];
    v7 = sub_100694740;
  }
  else
  {
    v5 = v2[86];
    v6 = v2[85];
    v7 = sub_1006946CC;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1006946CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __n128 v13;

  swift_release(*(_QWORD *)(v0 + 672));
  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = (uint64_t *)(v2 + *(_QWORD *)(v0 + 760));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = *(_OWORD *)(v0 + 720);
  v12 = *(_OWORD *)(v0 + 736);
  *(_OWORD *)v3 = *(_OWORD *)(v0 + 704);
  *((_OWORD *)v3 + 1) = v11;
  *((_OWORD *)v3 + 2) = v12;
  v3[6] = v1;
  sub_100694EE0(v4, v5, v6, v7, v8, v9, v10);
  v13 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
}

uint64_t sub_100694740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 816);
  v36 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 768);
  swift_release(*(_QWORD *)(v0 + 672));
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  inited = swift_initStackObject(v3, v0 + 104);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v4;
  v7 = UUID.uuidString.getter(v6);
  v9 = v8;
  v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
  v11 = String.subscript.getter(15, v10, v7, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v9);
  v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  swift_getErrorValue(v1, v0 + 656, v0 + 568);
  v22 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v2;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = v23;
  v25 = static os_log_type_t.debug.getter(v24);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v25, "(CoreRE) [%{public}@] error sending state: %{public}@", 53, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, v36);

  *(_QWORD *)(v0 + 632) = v1;
  swift_errorRetain(v1);
  v26 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 592, v0 + 632, v26, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v27 = *(_QWORD *)(v0 + 592);
    v28 = *(_QWORD *)(v0 + 600);
    v29 = *(unsigned __int8 *)(v0 + 608);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 816);
    *(_QWORD *)(v0 + 640) = v30;
    swift_errorRetain(v30);
    if ((swift_dynamicCast(v0 + 616, v0 + 640, v26, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v27 = *(_QWORD *)(v0 + 616);
      v28 = *(_QWORD *)(v0 + 624);
      v29 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 816), v0 + 648, v0 + 488);
      v27 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504));
      v28 = v31;
      v29 = 2;
    }
  }
  v39 = *(_QWORD *)(v0 + 816);
  v32 = *(_QWORD *)(v0 + 696);
  sub_100694E14(v32 + 48, v0 + 16);
  v33 = *(_QWORD *)(v32 + 56);
  v34 = *(_QWORD *)(v32 + 64);
  v37 = *(_QWORD *)(v32 + 72);
  v38 = *(_QWORD *)(v32 + 48);
  *(_QWORD *)(v32 + 48) = v27;
  *(_QWORD *)(v32 + 56) = v28;
  *(_QWORD *)(v32 + 64) = v29;
  *(_QWORD *)(v32 + 72) = 0x8000000000000000;
  *(_OWORD *)(v32 + 80) = 0u;
  *(_OWORD *)(v32 + 96) = 0u;
  *(_QWORD *)(v32 + 128) = 0;
  *(_OWORD *)(v32 + 112) = 0u;
  sub_100689D34(v27, v28, v29);
  sub_100689D34(v27, v28, v29);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690624);
  sub_100690688(v38, v33, v34, v37);
  sub_100690B2C(v0 + 16);
  sub_100689EEC(v27, v28, v29);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690688);
  sub_100690C78();
  sub_100689EEC(v27, v28, v29);
  swift_release(v32);
  swift_errorRelease(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100694AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100694B04(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EB324);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1006913DC(a1);
}

uint64_t sub_100694B50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EB304);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100692ABC(a1);
}

uint64_t sub_100694B9C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 128) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 80) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = v6;
  return swift_task_switch(sub_100694C0C, v5, v6);
}

uint64_t sub_100694C0C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = sub_1004B804C(&qword_1013EAF60);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_QWORD *)(v0 + 104) = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = v2;
  *(_BYTE *)(inited + 40) = v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1013EB2FC);
  *(_QWORD *)(v0 + 112) = v5;
  *v5 = v0;
  v5[1] = sub_100694C9C;
  return sub_100693118(inited);
}

uint64_t sub_100694C9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100694D3C;
  }
  else
  {
    swift_setDeallocating(v2[13]);
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100694D08;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100694D08()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100694D3C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 80);
  swift_setDeallocating(*(_QWORD *)(v0 + 104));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100694D7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EB2FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_100693118(a1);
}

uint64_t sub_100694DC8(float a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EB2F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10065E614;
  return sub_10069386C(a1);
}

uint64_t sub_100694E14(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

_QWORD *sub_100694E3C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
  return a1;
}

unint64_t sub_100694E90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EB310;
  if (!qword_1013EB310)
  {
    v1 = type metadata accessor for CRLUSDRendering.TaskQueue();
    result = swift_getWitnessTable(&unk_100F1B3CC, v1);
    atomic_store(result, &qword_1013EB310);
  }
  return result;
}

void sub_100694ED8(uint64_t a1)
{
  uint64_t v1;

  sub_100957B74(a1, v1);
}

void sub_100694EE0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (a6 >> 1 != 0xFFFFFFFF)
    sub_100689EAC(a1, a2, a3, a4, a5, a6, a7);
}

void sub_100694EF4(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (a6 >> 1 != 0xFFFFFFFF)
    sub_100689CF4(a1, a2, a3, a4, a5, a6, a7);
}

__n128 *sub_100694F08(__n128 *a1, __n128 *a2)
{
  initializeWithTake for CRLWPPasteTextCommand.CRLWPPasteText(a2, a1);
  return a2;
}

uint64_t sub_100694F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1013EB32C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1004CF80C;
  return sub_10069166C(a1, v5, v4);
}

unint64_t sub_100694FA8()
{
  unint64_t result;

  result = qword_1013F0150;
  if (!qword_1013F0150)
  {
    result = swift_getWitnessTable(&unk_100F1B38C, &type metadata for CRLUSDRendering.RendererError);
    atomic_store(result, (unint64_t *)&qword_1013F0150);
  }
  return result;
}

uint64_t sub_100694FEC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100695038(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013EB344);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CF80C;
  return sub_100693DA4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1006950CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100695114()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100695138(uint64_t a1)
{
  uint64_t v1;

  return sub_10068FF28(a1, v1);
}

uint64_t sub_100695144()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013EB354);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_1006901C4();
}

uint64_t sub_1006951B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EB364);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100690434(a1, v4, v5, v6);
}

uint64_t sub_100695224(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  int v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  unsigned int (*v43)(_BYTE *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::OpaquePointer v47;
  uint64_t v48;
  _BYTE v49[12];
  unsigned int v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  __int128 v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  char v59[80];

  v53 = a2;
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  __chkstk_darwin(v4);
  v6 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v8 = __chkstk_darwin(v7);
  v56 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v8);
  v12 = &v49[-v11];
  __chkstk_darwin(v10);
  v14 = &v49[-v13];
  v15 = sub_1004B804C(&qword_1013EB4B0);
  __chkstk_darwin(v15);
  v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v55 = sub_1004B804C(&qword_1013EB4B8);
  __chkstk_darwin(v55);
  v52 = &v49[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_1004B804C(&qword_1013E1798);
  v54 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = &v49[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v22);
  v24 = &v49[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = v2;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1, v26);
  v27 = type metadata accessor for IndexPath(0);
  v28 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v24, 1, v27);
  result = sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_101407260);
  if (v28 == 1)
  {
    sub_1006966F0(a1, v17);
    v30 = sub_1004B804C(&qword_1013EB4C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v17, 1, v30) == 1)
    {
      sub_1004CB800((uint64_t)v17, &qword_1013EB4B0);
      v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v31, v59);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v33 = sub_100BCCD38();
      v35 = v34;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v33;
      *(_QWORD *)(inited + 40) = v35;
      sub_100757E04(&_mh_execute_header, (uint64_t)"expose(_:animated:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2, 169, "Didn't find item to expose: %@", 30, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"expose(_:animated:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2u, 169, (uint64_t)"Didn't find item to expose: %@", 30, 2u);
      swift_setDeallocating(inited);
      v36 = sub_1004B804C(&qword_1013E0190);
      return swift_arrayDestroy(inited + 32, 1, v36);
    }
    else
    {
      v51 = v25;
      v37 = *v17;
      v38 = &v17[*(int *)(v30 + 48)];
      v39 = v55;
      v40 = v52;
      v41 = &v52[*(int *)(v55 + 48)];
      *v52 = v37;
      v42 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      v42(v41, v38, v19);
      v50 = *v40;
      v42(v21, &v40[*(int *)(v39 + 48)], v19);
      NSDiffableDataSourceSectionSnapshot.parent(of:)(a1, v19);
      sub_10057B540((uint64_t)v14, (uint64_t)v12);
      v43 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v57 + 48);
      if (v43(v12, 1, v58) == 1)
      {
LABEL_8:
        sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E3830);
      }
      else
      {
        v55 = xmmword_100EF5E40;
        while (1)
        {
          sub_1004B84E0((uint64_t)v12, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((NSDiffableDataSourceSectionSnapshot.isExpanded(_:)(v6, v19) & 1) != 0)
            break;
          v44 = sub_1004B804C(&qword_1014072D0);
          v45 = *(unsigned __int8 *)(v57 + 80);
          v46 = (v45 + 32) & ~v45;
          v47._rawValue = (void *)swift_allocObject(v44, v46 + *(_QWORD *)(v57 + 72), v45 | 7);
          *((_OWORD *)v47._rawValue + 1) = v55;
          sub_10068FB24((uint64_t)v6, (uint64_t)v47._rawValue + v46);
          NSDiffableDataSourceSectionSnapshot.expand(_:)(v47);
          swift_bridgeObjectRelease(v47._rawValue);
          v48 = (uint64_t)v56;
          NSDiffableDataSourceSectionSnapshot.parent(of:)(v6, v19);
          sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E3830);
          sub_1004C4938(v48, (uint64_t)v14, (uint64_t *)&unk_1013E3830);
          sub_10057B540((uint64_t)v14, (uint64_t)v12);
          if (v43(v12, 1, v58) == 1)
            goto LABEL_8;
        }
        sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      sub_100696448((uint64_t)v21, v50, v53 & 1);
      sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E3830);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v21, v19);
    }
  }
  return result;
}

_QWORD *sub_10069579C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  uint64_t v19;

  v3[3] = 0;
  swift_unknownObjectWeakInit(v3 + 2, 0);
  v3[4] = &_swiftEmptyDictionarySingleton;
  v3[5] = &_swiftEmptyDictionarySingleton;
  v3[6] = a1;
  v3[7] = a2;
  v3[8] = a3;
  v3[9] = 0;
  v7 = (void *)objc_opt_self(NSNotificationCenter);
  v8 = a1;
  swift_unknownObjectRetain(a2);
  v9 = objc_msgSend(v7, "defaultCenter");
  if (qword_1013DDD68 != -1)
    swift_once(&qword_1013DDD68, sub_100BC0B9C);
  v10 = qword_101480E38;
  v11 = swift_allocObject(&unk_101275E70, 24, 7);
  swift_weakInit(v11 + 16, v3);
  v18[4] = sub_100696BC0;
  v19 = v11;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = *(_QWORD *)"";
  v18[2] = sub_100568280;
  v18[3] = &unk_101275E88;
  v12 = _Block_copy(v18);
  v13 = v19;
  swift_unknownObjectRetain(a2);
  v14 = objc_msgSend(v9, "addObserverForName:object:queue:usingBlock:", v10, a2, 0, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);

  swift_unknownObjectRelease(a2);
  v15 = v3[9];
  v3[9] = v14;
  swift_unknownObjectRelease(v15);
  v16 = sub_100AF8024((uint64_t)&off_101264588);
  sub_100695A54(v16, 1, 0);
  swift_bridgeObjectRelease(v16);

  swift_unknownObjectRelease(a2);
  return v3;
}

double sub_10069596C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  _BYTE v19[24];

  v4 = type metadata accessor for Notification(0, a2);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = sub_100BC1960((uint64_t)v6);
  if (v8)
  {
    v12 = v8;
    v13 = v9;
    v14 = v10;
    v15 = a2 + 16;
    swift_beginAccess(v15, v19, 0, 0);
    Strong = swift_weakLoadStrong(v15);
    if (Strong)
    {
      v17 = Strong;
      sub_100695A54(v12, 0, 0);
      swift_release(v17);
    }
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v13);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_100695A54(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  Swift::UInt v38;
  Swift::Int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  unsigned int (*v45)(_BYTE *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::OpaquePointer v57;
  void *rawValue;
  void (*v59)(uint64_t, uint64_t);
  __n128 v60;
  _BYTE *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[4];
  _BYTE v71[4];
  int v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  int v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[10];
  char v94[12];
  char v95[8];

  v79 = a3;
  v72 = a2;
  v81 = sub_1004B804C(&qword_1013EB4D0);
  v76 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v6 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C(&qword_1013EB4C8);
  v8 = __chkstk_darwin(v7);
  v87 = &v71[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v11 = &v71[-v10];
  v89 = sub_1004B804C(&qword_1013E1798);
  v86 = *(_QWORD *)(v89 - 8);
  v12 = __chkstk_darwin(v89);
  v80 = &v71[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v83 = &v71[-v14];
  v82 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v82);
  v16 = &v71[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DD700 != -1)
    swift_once(&qword_1013DD700, sub_100A01770);
  swift_beginAccess(&static OS_os_log.crlStorageHierachy, v95, 0, 0);
  v17 = (void *)static OS_os_log.crlStorageHierachy;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v94);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  sub_100696BE0();
  v20 = v17;
  v21 = swift_bridgeObjectRetain(a1);
  v22 = Set.description.getter(v21);
  v24 = v23;
  v91 = a1;
  swift_bridgeObjectRelease(a1);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(inited + 40) = v24;
  v26 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v26, "Refreshing snapshots for libraries: %@", 38, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v27);

  v28 = *(_QWORD *)(v3 + 56);
  v29 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount);
  if (!v29)
  {
LABEL_43:
    __break(1u);
    return;
  }
  v73 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v29;
  swift_bridgeObjectRetain_n(v29, 2);
  v84 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  v75 = v6;
  if ((unint64_t)v84 >> 62)
  {
    if (v84 < 0)
      v69 = v84;
    else
      v69 = v84 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v84);
    v30 = _CocoaArrayWrapper.endIndex.getter(v69);
  }
  else
  {
    v30 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v84);
  }
  v85 = v3;
  v74 = v29;
  if (v30)
  {
    if (v30 >= 1)
    {
      v31 = 0;
      v32 = v84 & 0xC000000000000001;
      v90 = v84 + 32;
      v33 = v91;
      v92 = v91 + 56;
      v78 = v11;
      v34 = v84;
      v35 = v82;
      v88 = v84 & 0xC000000000000001;
      v77 = v30;
      while (1)
      {
        if (v32)
          v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v34);
        else
          v36 = *(id *)(v90 + 8 * v31);
        v37 = v36;
        sub_10068FB24((uint64_t)v36 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v16);
        if (swift_getEnumCaseMultiPayload(v16, v35))
        {

          sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else if (*(_QWORD *)(v33 + 16))
        {
          v38 = *v16;
          Hasher.init(_seed:)(v93, *(_QWORD *)(v33 + 40));
          Hasher._combine(_:)(v38);
          v39 = Hasher._finalize()();
          v33 = v91;
          v40 = -1 << *(_BYTE *)(v91 + 32);
          v41 = v39 & ~v40;
          if (((*(_QWORD *)(v92 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
          {
            v42 = *(_QWORD *)(v91 + 48);
            if (*(unsigned __int8 *)(v42 + v41) == (_DWORD)v38)
            {
LABEL_21:
              v44 = v87;
              sub_1008807D0((uint64_t)v87);
              v45 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v86 + 48);
              if (v45(v44, 1, v89) == 1)
              {
                sub_100757E04(&_mh_execute_header, (uint64_t)"refreshSnapshots(for:expandSectionRootItems:animated:)", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2, 120, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"refreshSnapshots(for:expandSectionRootItems:animated:)", 54, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2u, 120, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
              }
              v46 = (uint64_t)v78;
              sub_1004C4938((uint64_t)v87, (uint64_t)v78, &qword_1013EB4C8);
              v47 = v89;
              if (v45((_BYTE *)v46, 1, v89) == 1)
              {

                sub_1004CB800(v46, &qword_1013EB4C8);
                v33 = v91;
                v35 = v82;
                v34 = v84;
                v32 = v88;
              }
              else
              {
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v86 + 32))(v83, v46, v47);
                LOBYTE(v93[0]) = v38;
                v48 = v80;
                UICollectionViewDiffableDataSource.snapshot(for:)(v93);
                v49 = NSDiffableDataSourceSectionSnapshot.items.getter(v47);
                v50 = sub_100AF8094(v49);
                swift_bridgeObjectRelease(v49);
                v51 = NSDiffableDataSourceSectionSnapshot.items.getter(v47);
                __chkstk_darwin(v51);
                v70[2] = v48;
                v70[3] = v50;
                v53 = sub_100767A54((uint64_t (*)(char *))sub_100696C24, v70, v52);
                v54 = v50;
                v55 = (uint64_t)v83;
                swift_bridgeObjectRelease(v54);
                if (*(_QWORD *)(v53 + 16))
                  NSDiffableDataSourceSectionSnapshot.expand(_:)((Swift::OpaquePointer)v53);
                v56 = swift_bridgeObjectRelease(v53);
                if ((v72 & 1) != 0 && (_DWORD)v38)
                {
                  v57._rawValue = (void *)NSDiffableDataSourceSectionSnapshot.rootItems.getter(v47, v56);
                  NSDiffableDataSourceSectionSnapshot.expand(_:)(v57);
                  rawValue = v57._rawValue;
                  v55 = (uint64_t)v83;
                  v47 = v89;
                  swift_bridgeObjectRelease(rawValue);
                }
                sub_100696448(v55, v38, v79 & 1);

                v59 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
                v59(v55, v47);
                v59((uint64_t)v80, v47);
                v33 = v91;
                v35 = v82;
                v34 = v84;
                v32 = v88;
              }
              v30 = v77;
              goto LABEL_10;
            }
            v43 = ~v40;
            while (1)
            {
              v41 = (v41 + 1) & v43;
              if (((*(_QWORD *)(v92 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
                break;
              if (*(unsigned __int8 *)(v42 + v41) == (_DWORD)v38)
                goto LABEL_21;
            }
          }

          v32 = v88;
        }
        else
        {

        }
LABEL_10:
        if (++v31 == v30)
          goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  v34 = v84;
LABEL_35:
  v60 = swift_bridgeObjectRelease(v34);
  v61 = v75;
  v62.n128_f64[0] = dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v60);
  v63 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v81, v62);
  v64 = v73;
  v65 = v74;
  v66 = sub_1006968C8(v63, v73, v74);
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v64);
  v67 = swift_bridgeObjectRelease(v65);
  if (v66[2])
  {
    v68 = v81;
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v66);
    swift_bridgeObjectRelease(v66);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v61, v79 & 1, 0, 0);
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v61, v68);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, __n128))(v76 + 8))(v61, v81, v67);
    swift_bridgeObjectRelease(v66);
  }
}

uint64_t sub_100696350()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);

    swift_unknownObjectRelease(v1);
    v4 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 72) = 0;
    swift_unknownObjectRelease(v4);
  }
  sub_1004CBB0C(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t sub_100696408()
{
  uint64_t v0;

  sub_100696350();
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for CRLiOSBoardLibraryViewModelController()
{
  return objc_opt_self(_TtC8Freeform37CRLiOSBoardLibraryViewModelController);
}

uint64_t sub_100696448(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  _BYTE v20[24];

  v4 = v3;
  v8 = sub_1004B804C(&qword_1013EB4C8);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v12 = Strong;
    sub_10050AEC0();
    swift_unknownObjectRelease(v12);
  }
  v13 = sub_1004B804C(&qword_1013E1798);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v10, a1, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  swift_beginAccess(v4 + 32, v20, 33, 0);
  sub_10083E090((uint64_t)v10, a2);
  swift_endAccess(v20);
  v20[0] = a2;
  v15 = swift_allocObject(&unk_101275E70, 24, 7);
  swift_weakInit(v15 + 16, v4);
  v16 = swift_retain(v15);
  v17.n128_f64[0] = UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(a1, v20, a3 & 1, sub_100696BB8, v15, v16);
  return swift_release_n(v15, 2, v17);
}

double sub_1006965AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + 16);
    if (v5)
    {
      v6 = v5;
      sub_10050BE90();
      swift_release(v4);
      swift_unknownObjectRelease(v6);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v4).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100696624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1798);
  v9 = NSDiffableDataSourceSectionSnapshot.isExpanded(_:)(a1, v8);
  sub_10068FB24(a1, (uint64_t)v7);
  if ((v9 & 1) != 0)
    v10 = sub_10062325C((uint64_t)v7, a3);
  else
    v10 = 0;
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
  return v10 & 1;
}

uint64_t sub_1006966F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = sub_1004B804C(&qword_1013E1798);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v15 = 0;
  UICollectionViewDiffableDataSource.snapshot(for:)(&v15);
  if ((NSDiffableDataSourceSectionSnapshot.contains(_:)(a1, v4) & 1) != 0)
    goto LABEL_4;
  v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  v8 = 1;
  v15 = 1;
  UICollectionViewDiffableDataSource.snapshot(for:)(&v15);
  if ((NSDiffableDataSourceSectionSnapshot.contains(_:)(a1, v4) & 1) != 0
    || (v9(v7, v4),
        v8 = 2,
        v15 = 2,
        UICollectionViewDiffableDataSource.snapshot(for:)(&v15),
        (NSDiffableDataSourceSectionSnapshot.contains(_:)(a1, v4) & 1) != 0))
  {
LABEL_4:
    v10 = sub_1004B804C(&qword_1013EB4C0);
    v11 = &a2[*(int *)(v10 + 48)];
    *a2 = v8;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, v4);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
  }
  else
  {
    v9(v7, v4);
    v13 = sub_1004B804C(&qword_1013EB4C0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

_QWORD *sub_1006968C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v10 = __chkstk_darwin(v37);
  v35 = (uint64_t)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v32 - v13;
  __chkstk_darwin(v12);
  v17 = (char *)v32 - v16;
  result = _swiftEmptyArrayStorage;
  v39 = _swiftEmptyArrayStorage;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v38 = *(_QWORD *)(v15 + 72);
    v32[1] = v3;
    v33 = v20;
    v21 = a1 + v20;
    v22 = _swiftEmptyArrayStorage;
    v36 = a2;
    v34 = a3;
    while (1)
    {
      sub_10068FB24(v21, (uint64_t)v17);
      sub_10068FB24((uint64_t)v17, (uint64_t)v14);
      if (swift_getEnumCaseMultiPayload(v14, v37) != 1)
      {
        sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_4;
      }
      sub_1004B84E0((uint64_t)v14, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if (*(_QWORD *)(a2 + 16) && (v23 = sub_1008436B8((uint64_t)v9), (v24 & 1) != 0))
      {
        v25 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v23);
        if (!*(_QWORD *)(a3 + 16))
          goto LABEL_14;
      }
      else
      {
        v25 = 0;
        if (!*(_QWORD *)(a3 + 16))
          goto LABEL_14;
      }
      v26 = sub_1008436B8((uint64_t)v9);
      if ((v27 & 1) != 0)
      {
        v28 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v26);
        goto LABEL_15;
      }
LABEL_14:
      v28 = 0;
LABEL_15:
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v29 = v25 == v28;
      a2 = v36;
      if (!v29)
      {
        sub_1004B84E0((uint64_t)v17, v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
          sub_1006008AC(0, v22[2] + 1, 1);
        v22 = v39;
        v31 = v39[2];
        v30 = v39[3];
        if (v31 >= v30 >> 1)
        {
          sub_1006008AC(v30 > 1, v31 + 1, 1);
          v22 = v39;
        }
        v22[2] = v31 + 1;
        sub_1004B84E0(v35, (uint64_t)v22 + v33 + v31 * v38, type metadata accessor for CRLBoardLibraryViewModel.Item);
        a3 = v34;
        a2 = v36;
        goto LABEL_5;
      }
LABEL_4:
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_5:
      v21 += v38;
      if (!--v19)
        return v39;
    }
  }
  return result;
}

uint64_t sub_100696B94()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100696BB8()
{
  uint64_t v0;

  return sub_1006965AC(v0);
}

double sub_100696BC0(uint64_t a1)
{
  uint64_t v1;

  return sub_10069596C(a1, v1);
}

uint64_t sub_100696BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100696BD8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_100696BE0()
{
  unint64_t result;

  result = qword_1013EB4D8;
  if (!qword_1013EB4D8)
  {
    result = swift_getWitnessTable(&unk_100F2A5D8, &type metadata for CRLBoardLibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_1013EB4D8);
  }
  return result;
}

uint64_t sub_100696C24(uint64_t a1)
{
  uint64_t v1;

  return sub_100696624(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_100696C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100696CA4()
{
  return type metadata accessor for CRLAssetDatabaseRow(0);
}

uint64_t type metadata accessor for CRLAssetDatabaseRow(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EB508;
  if (!qword_1013EB508)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetDatabaseRow);
  return result;
}

uint64_t sub_100696CE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F02F58;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

BOOL sub_100696D6C(uint64_t *a1, uint64_t *a2)
{
  return sub_100696D78(*a1, *a2);
}

BOOL sub_100696D78(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;

  if ((static UUID.== infix(_:_:)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID) & 1) == 0)
    return 0;
  v4 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
  v6 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
  if (!v5)
  {
    if (!v7)
      return *(double *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) == *(double *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate);
    return 0;
  }
  if (!v7)
    return 0;
  if (*v4 == *v6 && v5 == v7)
    return *(double *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) == *(double *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate);
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*v4, v5, *v6, v7, 0);
  result = 0;
  if ((v9 & 1) != 0)
    return *(double *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) == *(double *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate);
  return result;
}

uint64_t sub_100696E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch(sub_100696E3C, 0, 0);
}

uint64_t sub_100696E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 24);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_100696F04;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x6164286574697277, 0xEC000000293A6174, sub_100697868, v3, &type metadata for Int);
}

uint64_t sub_100696F04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1005D66C8;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_100696F70;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100696F70()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_100696F7C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, void *, void *);
  id v9;
  id v10;

  v8 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v10 = a3;
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

uint64_t sub_100696FF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = v4;
  *(_BYTE *)(v5 + 88) = a3;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  return swift_task_switch(sub_100697018, 0, 0);
}

uint64_t sub_100697018()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  *(_BYTE *)(v4 + 48) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = sub_1006970D8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000026, 0x8000000100FC20C0, sub_100698554, v4, &type metadata for Data);
}

uint64_t sub_1006970D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100697154;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 64));
    v4 = sub_100697144;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100697144()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100697154()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100697188(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  double v20;
  double result;
  _BYTE v22[12];
  int v23;
  id v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v23 = a5;
  v24 = a2;
  v25 = a3;
  v7 = sub_1004B804C((uint64_t *)&unk_1013EB690);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = swift_allocObject(&unk_101275ED0, 17, 7);
  *(_BYTE *)(v10 + 16) = 0;
  v11 = type metadata accessor for DispatchData(0);
  v12 = swift_allocBox(v11);
  static DispatchData.empty.getter();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v7);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = (v14 + v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(&unk_101276088, v15 + 8, v13 | 7);
  *(_QWORD *)(v16 + 16) = v10;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v16 + v14, &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v7);
  v17 = v16 + ((v14 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v17 = v12;
  *(_BYTE *)(v17 + 8) = v23;
  *(_QWORD *)(v16 + v15) = a4;
  aBlock[4] = sub_100698600;
  v27 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100696F7C;
  aBlock[3] = &unk_1012760A0;
  v18 = _Block_copy(aBlock);
  v19 = v27;
  swift_retain(v10);
  swift_retain(v12);
  *(_QWORD *)&v20 = swift_release(v19).n128_u64[0];
  objc_msgSend(v24, "readFromOffset:length:handler:", v25, a4, v18, v20);
  _Block_release(v18);
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100697350(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  _QWORD v32[2];
  _QWORD v33[3];
  _BYTE v34[24];
  _BYTE v35[24];

  v31[1] = a8;
  v31[2] = a5;
  v14 = type metadata accessor for DispatchData(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_BYTE *)(a4 + 16);
  v19 = swift_projectBox(a6);
  result = swift_beginAccess(a4 + 16, v35, 0, 0);
  if ((*(_BYTE *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess(a4 + 16, v34, 1, 0);
      *v18 = 1;
      v33[0] = a3;
      swift_errorRetain(a3);
      v21 = sub_1004B804C((uint64_t *)&unk_1013EB690);
      return CheckedContinuation.resume(throwing:)(v33, v21);
    }
    else
    {
      if (a2)
      {
        static DispatchData._unconditionallyBridgeFromObjectiveC(_:)(a2);
        swift_beginAccess(v19, v34, 33, 0);
        v22 = a2;
        DispatchData.append(_:)(v17);
        swift_endAccess(v34);

        result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
      if ((a1 & 1) != 0)
      {
        swift_beginAccess(v18, v34, 1, 0);
        *v18 = 1;
        v23 = (void *)objc_opt_self(NSData);
        swift_beginAccess(v19, v33, 0, 0);
        v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
        v25 = (void *)DispatchData._bridgeToObjectiveC()(v24);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        v26 = objc_msgSend(v23, "crl_dataFromDispatchData:", v25);

        v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        if ((a7 & 1) != 0)
          __asm { BR              X10 }
        v32[0] = v27;
        v32[1] = v29;
        v30 = sub_1004B804C((uint64_t *)&unk_1013EB690);
        return CheckedContinuation.resume(returning:)(v32, v30);
      }
    }
  }
  return result;
}

uint64_t sub_100697640()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLReadChannelHelper()
{
  return objc_opt_self(_TtC8Freeform20CRLReadChannelHelper);
}

double sub_100697684(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  double result;
  _QWORD aBlock[5];
  uint64_t v22;

  v6 = sub_1004B804C(&qword_1013EB670);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_101275ED0, 17, 7);
  *(_BYTE *)(v10 + 16) = 0;
  isa = Data._bridgeToObjectiveC()().super.isa;
  v12 = -[objc_class crl_dispatchData](isa, "crl_dispatchData");

  v13 = swift_allocObject(&unk_101275EF8, 24, 7);
  *(_QWORD *)(v13 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_101275F20, v16 + 8, v14 | 7);
  *(_QWORD *)(v17 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v9, v6);
  *(_QWORD *)(v17 + v16) = v13;
  aBlock[4] = sub_100697A60;
  v22 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100697AD0;
  aBlock[3] = &unk_101275F38;
  v18 = _Block_copy(aBlock);
  v19 = v22;
  swift_retain(v10);
  swift_retain(v13);
  objc_msgSend(a4, "writeData:handler:", v12, v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);
  swift_release(v10);

  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_100697868(uint64_t a1)
{
  uint64_t v1;

  return sub_100697684(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100697874()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100697884()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100697894(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  _QWORD v18[3];
  _BYTE v19[24];
  _BYTE v20[24];

  v11 = (_BYTE *)(a4 + 16);
  result = swift_beginAccess(a4 + 16, v20, 0, 0);
  if ((*(_BYTE *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess(v11, v19, 1, 0);
      *v11 = 1;
      v18[0] = a3;
      swift_errorRetain(a3);
      v13 = sub_1004B804C(&qword_1013EB670);
      return CheckedContinuation.resume(throwing:)(v18, v13);
    }
    else
    {
      v14 = (uint64_t *)(a6 + 16);
      result = swift_beginAccess(a6 + 16, v19, 1, 0);
      if (__OFADD__(*(_QWORD *)(a6 + 16), a2))
      {
        __break(1u);
      }
      else
      {
        *v14 = *(_QWORD *)(a6 + 16) + a2;
        if ((a1 & 1) != 0)
        {
          swift_beginAccess(v11, v18, 1, 0);
          *v11 = 1;
          swift_beginAccess(a6 + 16, v17, 0, 0);
          v16 = *v14;
          v15 = sub_1004B804C(&qword_1013EB670);
          return CheckedContinuation.resume(returning:)(&v16, v15);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1006979CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013EB670);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100697A60(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_1004B804C(&qword_1013EB670) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_100697894(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_100697AD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, void *);
  id v9;

  v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

uint64_t sub_100697B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100697B50(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100697B58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_100697B74, 0, 0);
}

uint64_t sub_100697B74()
{
  int8x16_t *v0;
  uint64_t v1;
  int8x16_t *v2;
  int8x16_t **v3;

  v1 = v0[2].i64[0];
  v2 = (int8x16_t *)swift_task_alloc(48);
  v0[2].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  v3 = (int8x16_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[3].i64[0] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (int8x16_t *)sub_100697C18;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, 0, 0, 0xD000000000000012, 0x8000000100FC2070, sub_100698070, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_100697C18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004CDD38;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 40));
    v4 = sub_1004CD97C;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_100697C84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  double v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  _QWORD *v39;
  uint64_t v40;
  NSObject *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void **aBlock;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  _QWORD *v60;

  v45 = a2;
  v47 = a1;
  v50 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  __chkstk_darwin(v7);
  v48 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013EB680);
  v10 = *(_QWORD *)(v9 - 8);
  v43 = *(_QWORD *)(v10 + 64);
  v44 = v9;
  v11 = __chkstk_darwin(v9);
  v42 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS.QoSClass(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject(&unk_101275F70, 24, 7);
  *(_QWORD *)(v17 + 16) = 0;
  v18 = swift_allocObject(&unk_101275ED0, 17, 7);
  *(_BYTE *)(v18 + 16) = 0;
  v19 = dispatch_group_create();
  dispatch_group_enter(v19);
  v20 = (_QWORD *)swift_allocObject(&unk_101275F98, 56, 7);
  v20[2] = a4;
  v20[3] = v18;
  v46 = v18;
  v20[4] = v17;
  v20[5] = v19;
  v20[6] = a3;
  v59 = sub_1006982E4;
  v60 = v20;
  aBlock = _NSConcreteStackBlock;
  v56 = *(_QWORD *)"";
  v57 = sub_100696F7C;
  v58 = &unk_101275FB0;
  v21 = _Block_copy(&aBlock);
  v22 = v60;
  swift_retain(v18);
  swift_retain(v17);
  v41 = v19;
  swift_unknownObjectRetain(a3);
  *(_QWORD *)&v23 = swift_release(v22).n128_u64[0];
  objc_msgSend(v45, "readWithHandler:", v21, v23);
  _Block_release(v21);
  sub_100503E34();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.userInitiated(_:), v13);
  v24 = (void *)static OS_dispatch_queue.global(qos:)(v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v25 = v42;
  v26 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v42, v47, v44);
  v27 = *(unsigned __int8 *)(v10 + 80);
  v28 = (v27 + 24) & ~v27;
  v29 = swift_allocObject(&unk_101275FE8, v28 + v43, v27 | 7);
  *(_QWORD *)(v29 + 16) = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v29 + v28, v25, v26);
  v59 = sub_1006984E0;
  v60 = (_QWORD *)v29;
  aBlock = _NSConcreteStackBlock;
  v56 = *(_QWORD *)"";
  v57 = sub_1005D2FC0;
  v58 = &unk_101276000;
  v30 = _Block_copy(&aBlock);
  v31 = swift_retain(v17);
  v32 = v48;
  static DispatchQoS.unspecified.getter(v31);
  v54 = _swiftEmptyArrayStorage;
  v33 = sub_1004CB65C();
  v34 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v35 = sub_100503E88();
  v37 = v49;
  v36 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v34, v35, v50, v33);
  v38 = v41;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v32, v37, v24, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v36);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
  v39 = v60;
  swift_release(v17);
  swift_release(v46);
  swift_release(v39);
}

void sub_100698070(uint64_t a1)
{
  uint64_t v1;

  sub_100697C84(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_10069807C()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1006980A0(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, void *a7)
{
  _BYTE *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  NSObject *v22;
  uint64_t v23;
  char v24[24];
  _QWORD aBlock[5];
  _QWORD *v26;
  char v27[24];
  char v28[24];

  v14 = (_BYTE *)(a4 + 16);
  swift_beginAccess(a4 + 16, v28, 0, 0);
  if ((*(_BYTE *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      v15 = (_QWORD *)(a5 + 16);
      swift_beginAccess(v14, v24, 1, 0);
      *v14 = 1;
      swift_beginAccess(a5 + 16, &v23, 1, 0);
      v16 = *(_QWORD *)(a5 + 16);
      *v15 = a3;
      swift_errorRetain(a3);
      swift_errorRetain(a3);
      swift_errorRelease(v16);
      dispatch_group_leave(a6);
      swift_errorRelease(a3);
    }
    else if (a2)
    {
      v17 = swift_allocObject(&unk_101275ED0, 17, 7);
      *(_BYTE *)(v17 + 16) = 0;
      v18 = a2;
      dispatch_group_enter(a6);
      v19 = (_QWORD *)swift_allocObject(&unk_101276038, 40, 7);
      v19[2] = v17;
      v19[3] = a5;
      v19[4] = a6;
      aBlock[4] = sub_100698548;
      v26 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100697AD0;
      aBlock[3] = &unk_101276050;
      v20 = _Block_copy(aBlock);
      v21 = v26;
      swift_retain(v17);
      swift_retain(a5);
      v22 = a6;
      objc_msgSend(a7, "writeData:handler:", v18, v20, swift_release(v21).n128_f64[0]);
      _Block_release(v20);

      swift_release(v17);
    }
    if ((a1 & 1) != 0)
    {
      swift_beginAccess(v14, aBlock, 0, 0);
      if ((*v14 & 1) == 0)
      {
        swift_beginAccess(v14, v27, 1, 0);
        *v14 = 1;
        dispatch_group_leave(a6);
      }
    }
  }
}

uint64_t sub_1006982A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1006982E4(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_1006980A0(a1, a2, a3, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(NSObject **)(v3 + 40), *(void **)(v3 + 48));
}

void sub_1006982F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  _BYTE *v11;
  uint64_t *v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];

  v11 = (_BYTE *)(a4 + 16);
  swift_beginAccess(a4 + 16, v16, 0, 0);
  if ((*(_BYTE *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      v12 = (uint64_t *)(a5 + 16);
      swift_beginAccess(v11, v15, 1, 0);
      *v11 = 1;
      swift_beginAccess(v12, v14, 1, 0);
      v13 = *v12;
      *v12 = a3;
      swift_errorRetain(a3);
      swift_errorRetain(a3);
      swift_errorRelease(v13);
      dispatch_group_leave(a6);
      swift_errorRelease(a3);
    }
    else if ((a1 & 1) != 0)
    {
      swift_beginAccess(v11, v15, 1, 0);
      *v11 = 1;
      dispatch_group_leave(a6);
    }
  }
}

uint64_t sub_1006983EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  swift_beginAccess(a1 + 16, v7, 0, 0);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v6 = *(_QWORD *)(a1 + 16);
    swift_errorRetain(v2);
    v3 = sub_1004B804C(&qword_1013EB680);
    return CheckedContinuation.resume(throwing:)(&v6, v3);
  }
  else
  {
    v5 = sub_1004B804C(&qword_1013EB680);
    return CheckedContinuation.resume(returning:)(v5, v5);
  }
}

uint64_t sub_100698468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1006984E0()
{
  uint64_t v0;

  sub_1004B804C(&qword_1013EB680);
  return sub_1006983EC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100698514()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100698548(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1006982F4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(NSObject **)(v3 + 32));
}

double sub_100698554(uint64_t a1)
{
  uint64_t v1;

  return sub_100697188(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_100698564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;

  v1 = sub_1004B804C((uint64_t *)&unk_1013EB690);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v9 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v9);
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v6);
}

uint64_t sub_100698600(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013EB690) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_100697350(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + ((v8 + *(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v3 + ((v8 + *(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v3 + ((v8 + *(_QWORD *)(v7 + 64) + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_1006986A4(void *a1, double a2, double a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  void *v23;
  NSString v24;
  id v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  NSString v42;
  id v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  objc_super v53;

  v53.receiver = v3;
  v53.super_class = (Class)type metadata accessor for CRLFileEditor();
  objc_msgSendSuper2(&v53, "addMiniFormatterElementsToArray:atPoint:", a1, a2, a3);
  v7 = objc_msgSend(v3, "boardItems");
  v8 = type metadata accessor for CRLBoardItem(0);
  v9 = sub_10058528C();
  v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v8, v9);

  if ((v10 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = v10;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    v12 = __CocoaSet.count.getter(v11);
  }
  else
  {
    v12 = *(_QWORD *)(v10 + 16);
  }
  swift_bridgeObjectRelease(v10);
  if (v12 <= 1)
  {
    v13 = (void *)objc_opt_self(NSBundle);
    v14 = objc_msgSend(v13, "mainBundle");
    v52 = v8;
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v19 = v18;

    v20 = String._bridgeToObjectiveC()();
    v50 = (id)objc_opt_self(CRLImage);
    v21 = objc_msgSend(v50, "crl_quickInspectorImageNamed:", v20);

    v22 = objc_allocWithZone((Class)CRLQuickInspectorElement);
    v51 = v9;
    v23 = a1;
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v22, "initWithName:image:type:options:", v24, v21, 2, 1024, swift_bridgeObjectRelease(v19).n128_f64[0]);

    objc_msgSend(v25, "setTag:", 13);
    v26 = objc_msgSend(v13, "mainBundle");
    v27 = String._bridgeToObjectiveC()();
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v31 = v30;

    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setToolTip:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

    v33 = v23;
    objc_msgSend(v23, "addObject:", v25);
    v34 = objc_msgSend(v13, "mainBundle");
    v35 = String._bridgeToObjectiveC()();
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v39 = v38;

    v40 = String._bridgeToObjectiveC()();
    v41 = objc_msgSend(v50, "crl_quickInspectorImageNamed:", v40);

    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    v43 = objc_msgSend((id)objc_opt_self(CRLQuickInspectorElement), "elementWithName:image:type:action:", v42, v41, 2, "showPreview:");

    objc_msgSend(v43, "setTag:", 19);
    v44 = objc_msgSend(v3, "boardItems");
    v45 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v44, v52, v51);

    v46 = (_QWORD *)sub_100857E90(v45);
    v47 = swift_bridgeObjectRelease(v45);
    if (v46)
    {
      (*(void (**)(__n128))((swift_isaMask & *v46) + 0x240))(v47);
      v49 = v48;

      if (v49)
      {
        v46 = String._bridgeToObjectiveC()();
        v47.n128_u64[0] = swift_bridgeObjectRelease(v49).n128_u64[0];
      }
      else
      {
        v46 = 0;
      }
    }
    objc_msgSend(v43, "setToolTip:", v46, v47.n128_f64[0]);

    objc_msgSend(v33, "addObject:", v43);
  }
}

id sub_100698D9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileEditor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLFileEditor()
{
  return objc_opt_self(_TtC8Freeform13CRLFileEditor);
}

void sub_100698EA8(uint64_t a1, uint64_t a2, NSString a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  id v9;
  NSArray v10;
  NSArray v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v9 = objc_msgSend(objc_allocWithZone((Class)CRLMediaReplacingHelper), "initWithEditor:", v5);
  type metadata accessor for CRLAsset();
  v10.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (a3)
    a3 = String._bridgeToObjectiveC()();
  if (a4)
  {
    v13[4] = a4;
    v14 = a5;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = *(_QWORD *)"";
    v13[2] = sub_1006EB740;
    v13[3] = &unk_101276148;
    a4 = _Block_copy(v13);
    v12 = v14;
    swift_retain(a5);
    v11.super.isa = (Class)swift_release(v12).n128_u64[0];
  }
  objc_msgSend(v9, "replaceSelectedMediaWithData:actionString:completion:", v10.super.isa, a3, a4, *(double *)&v11.super.isa);
  _Block_release(a4);

}

void sub_1006990A4(uint64_t a1, uint64_t a2, Class isa, uint64_t a4, NSString a5, void *a6, uint64_t a7)
{
  uint64_t v7;
  id v13;
  NSArray v14;
  NSArray v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;

  v13 = objc_msgSend(objc_allocWithZone((Class)CRLMediaReplacingHelper), "initWithEditor:", v7);
  type metadata accessor for URL(0);
  v14.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (isa)
    isa = Array._bridgeToObjectiveC()().super.isa;
  if (a5)
    a5 = String._bridgeToObjectiveC()();
  if (a6)
  {
    v17[4] = a6;
    v18 = a7;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = *(_QWORD *)"";
    v17[2] = sub_1005D2FC0;
    v17[3] = &unk_1012760F8;
    a6 = _Block_copy(v17);
    v16 = v18;
    swift_retain(a7);
    v15.super.isa = (Class)swift_release(v16).n128_u64[0];
  }
  objc_msgSend(v13, "replaceCanvasElementInfo:withFilesAtURLs:allowedTypes:actionString:completion:", a1, v14.super.isa, isa, a5, a6, *(double *)&v15.super.isa);
  _Block_release(a6);

}

uint64_t sub_100699310()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100699334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100699344(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_10069934C(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006EB7A0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t CRLStroke.isValid.getter()
{
  void *v0;
  void *v1;
  id v2;
  char v3;
  char v4;
  id v5;
  id v6;
  char v7;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(CRLStroke), "emptyStroke");
  sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
  v3 = static NSObject.== infix(_:_:)(v0, v2);

  if ((v3 & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v5 = objc_msgSend(v1, "pattern");
    v6 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "emptyPattern");
    sub_1004B8930(0, &qword_1013EB6C8, off_1012299E8);
    v7 = static NSObject.== infix(_:_:)(v5, v6);

    v4 = v7 ^ 1;
  }
  return v4 & 1;
}

void __swiftcall CRLStroke.withProperties(from:)(CRLStroke *__return_ptr retstr, CRLStroke *from)
{
  sub_100699530((uint64_t)from, (SEL *)&selRef_setPropertiesFromStroke_);
}

uint64_t CRLStroke.withWidth(_:)(double a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v8;
  _QWORD v9[4];

  v3 = objc_msgSend(v1, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v9, v3);
  swift_unknownObjectRelease(v3);
  v4 = sub_1004B804C(&qword_1013EB6D0);
  swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, v4, 7);
  v5 = v8;
  objc_msgSend(v8, "setWidth:", a1);
  v6 = objc_opt_self(CRLStroke);
  return swift_dynamicCastObjCClassUnconditional(v5, v6, 0, 0, 0);
}

void __swiftcall CRLStroke.withColor(_:)(CRLStroke *__return_ptr retstr, CRLColor a2)
{
  sub_100699530((uint64_t)a2.super.isa, (SEL *)&selRef_setColor_);
}

uint64_t sub_100699530(uint64_t a1, SEL *a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v10;
  _QWORD v11[4];

  v5 = objc_msgSend(v2, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v11, v5);
  swift_unknownObjectRelease(v5);
  v6 = sub_1004B804C(&qword_1013EB6D0);
  swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v6, 7);
  v7 = v10;
  objc_msgSend(v10, *a2, a1);
  v8 = objc_opt_self(CRLStroke);
  return swift_dynamicCastObjCClassUnconditional(v7, v8, 0, 0, 0);
}

uint64_t sub_1006995E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  _QWORD v30[5];

  v27 = a1;
  v1 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013EB738);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013E1128);
  v28[0] = 0xD00000000000001FLL;
  v28[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v28, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v17 = static AppDependencyManager.shared.getter();
  v29 = AppDependency.__allocating_init(key:manager:)(&v29, v17);
  v30[3] = type metadata accessor for CRLBoardEntityQueryPerformer(0);
  v30[4] = &off_10129B510;
  sub_10050D1B0(v30);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v28, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x736472616F42, 0xE600000000000000);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v26);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "Shortcut options title", 22, 2);
  v19 = sub_10069AF04();
  AppShortcutOptionsCollection.init(_:title:systemImageName:)(&v29, v12, 0xD000000000000020, 0x8000000100FB5B60, &type metadata for CRLBoardQuery, v19);
  v20 = type metadata accessor for CRLBoardEntity(0);
  v21 = sub_10069AE70();
  v22 = sub_10069AEB8();
  static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A>(_:)(v16, v20, v13, v21, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

ValueMetadata *type metadata accessor for CRLShortcutsProvider()
{
  return &type metadata for CRLShortcutsProvider;
}

uint64_t sub_10069993C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  Swift::String v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  Swift::String v64;
  uint64_t v65;
  Swift::String v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  Swift::String v69;
  uint64_t v70;
  char *v71;
  char *v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  uint64_t v77;
  char *v78;
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  void (*v83)(char *, uint64_t);
  Swift::String v84;
  char *v85;
  char *v86;
  Swift::String v87;
  Swift::String v88;
  char *v89;
  Swift::String v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  Swift::String v93;
  char *v94;
  char *v95;
  Swift::String v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  Swift::String v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  Swift::String v107;
  char *v108;
  Swift::String v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  void (*v114)(char *, uint64_t);
  Swift::String v115;
  uint64_t v116;
  char *v117;
  char *v118;
  Swift::String v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  Swift::String v124;
  char *v125;
  char *v126;
  Swift::String v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  Swift::String v132;
  char *v133;
  Swift::String v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t, uint64_t);
  void (*v138)(char *, uint64_t);
  Swift::String v139;
  char *v140;
  Swift::String v141;
  uint64_t v142;
  Swift::String v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char *v153;
  Swift::String v154;
  uint64_t v155;
  uint64_t KeyPath;
  uint64_t v157;
  Swift::String v158;
  Swift::String v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  Swift::String v168;
  uint64_t v169;
  uint64_t v170;
  Swift::String v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t OpaqueTypeConformance2;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(char *, uint64_t);
  char *v216;
  void (*v217)(char *);
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222[4];

  v0 = sub_1004B804C(&qword_1013EB6D8);
  __chkstk_darwin(v0);
  v206 = (char *)&v186 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_1004B804C(&qword_1013EB6E0);
  __chkstk_darwin(v204);
  v203 = (char *)&v186 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013EB6E8);
  __chkstk_darwin(v3);
  v205 = (char *)&v186 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013EB6F0);
  __chkstk_darwin(v5);
  v207 = (char *)&v186 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_1004B804C(&qword_1013EB6F8);
  __chkstk_darwin(v202);
  v201 = (char *)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v200 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin(v214);
  v199 = (char *)&v186 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v212 = (char *)&v186 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v210 = (char *)&v186 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = __chkstk_darwin(v13);
  v211 = (char *)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AppShortcutPhraseToken(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v16;
  __chkstk_darwin(v16);
  v20 = (char *)&v186 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1004B804C(&qword_1013EB700);
  __chkstk_darwin(v21);
  v197 = (char *)&v186 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v195 = (char *)&v186 - v24;
  __chkstk_darwin(v25);
  v194 = (char *)&v186 - v26;
  __chkstk_darwin(v27);
  v193 = (char *)&v186 - v28;
  __chkstk_darwin(v29);
  v192 = (char *)&v186 - v30;
  __chkstk_darwin(v31);
  v191 = (char *)&v186 - v32;
  __chkstk_darwin(v33);
  v190 = (char *)&v186 - v34;
  __chkstk_darwin(v35);
  v189 = (char *)&v186 - v36;
  __chkstk_darwin(v37);
  v208 = (char *)&v186 - v38;
  __chkstk_darwin(v39);
  v188 = (char *)&v186 - v40;
  __chkstk_darwin(v41);
  v187 = (char *)&v186 - v42;
  __chkstk_darwin(v43);
  v45 = (char *)&v186 - v44;
  v47 = __chkstk_darwin(v46);
  v49 = (char *)&v186 - v48;
  v213 = type metadata accessor for AppShortcut(0, v47);
  v198 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v209 = (char *)&v186 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E4470(v222);
  v51 = sub_1004B804C(&qword_1013EB708);
  v52 = *(_QWORD *)(sub_1004B804C(&qword_1013EB710) - 8);
  v53 = *(_QWORD *)(v52 + 72);
  v54 = *(unsigned __int8 *)(v52 + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = v53;
  v57 = swift_allocObject(v51, v55 + 18 * v53, v54 | 7);
  v196 = v57;
  *(_OWORD *)(v57 + 16) = xmmword_100F03000;
  v58 = (char *)(v57 + v55);
  v59 = sub_1005E4338();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for CRLCreateBoardIntent, v59);
  v60._countAndFlagsBits = 0x20657461657243;
  v60._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v60);
  v218 = enum case for AppShortcutPhraseToken.applicationName(_:);
  v217 = *(void (**)(char *))(v17 + 104);
  v217(v20);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v61 = *(void (**)(char *, uint64_t))(v17 + 8);
  v62 = v18;
  v61(v20, v18);
  v63 = v61;
  v64._countAndFlagsBits = 0x6472616F6220;
  v64._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v64);
  v216 = v58;
  AppShortcutPhrase.init(stringInterpolation:)(v49, &type metadata for CRLCreateBoardIntent, v59);
  v186 = &v58[v56];
  v65 = v56;
  v219 = v56;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for CRLCreateBoardIntent, v59);
  v66._countAndFlagsBits = 0x20657461657243;
  v66._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v66);
  v67 = v218;
  v220 = v62;
  v68 = (void (*)(char *, uint64_t, uint64_t))v217;
  ((void (*)(char *, _QWORD, uint64_t))v217)(v20, v218, v62);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v215 = v63;
  v63(v20, v62);
  v69._countAndFlagsBits = 0x7361766E616320;
  v69._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v69);
  AppShortcutPhrase.init(stringInterpolation:)(v45, &type metadata for CRLCreateBoardIntent, v59);
  v70 = 2 * v65;
  v71 = v216;
  v186 = &v216[v70];
  v72 = v187;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLCreateBoardIntent, v59);
  v73._countAndFlagsBits = 0x20657461657243;
  v73._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v73);
  v74 = v67;
  v75 = v220;
  v68(v20, v74, v220);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v63(v20, v75);
  v76._countAndFlagsBits = 0x6E656D75636F6420;
  v76._object = (void *)0xE900000000000074;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v76);
  AppShortcutPhrase.init(stringInterpolation:)(v72, &type metadata for CRLCreateBoardIntent, v59);
  v77 = v219;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000010, 0x8000000100FC21A0, &type metadata for CRLCreateBoardIntent, v59);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000011, 0x8000000100FC21C0, &type metadata for CRLCreateBoardIntent, v59);
  v187 = &v71[5 * v77];
  v78 = v188;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for CRLCreateBoardIntent, v59);
  v79._object = (void *)0xE900000000000020;
  v79._countAndFlagsBits = 0x77656E20656B614DLL;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v79);
  v80 = v218;
  v81 = v220;
  v82 = (void (*)(char *, uint64_t, uint64_t))v217;
  ((void (*)(char *, _QWORD, uint64_t))v217)(v20, v218, v220);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v83 = v215;
  v215(v20, v81);
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v84);
  AppShortcutPhrase.init(stringInterpolation:)(v78, &type metadata for CRLCreateBoardIntent, v59);
  v85 = v216;
  v188 = &v216[6 * v219];
  v86 = v208;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for CRLCreateBoardIntent, v59);
  v87._countAndFlagsBits = 0x20656B614DLL;
  v87._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v87);
  v82(v20, v80, v81);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v83(v20, v81);
  v88._countAndFlagsBits = 0x6472616F6220;
  v88._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v88);
  AppShortcutPhrase.init(stringInterpolation:)(v86, &type metadata for CRLCreateBoardIntent, v59);
  v208 = (char *)(8 * v219);
  v188 = &v85[7 * v219];
  v89 = v189;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for CRLCreateBoardIntent, v59);
  v90._countAndFlagsBits = 0x20656B614DLL;
  v90._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v90);
  v91 = v220;
  v92 = (void (*)(char *, uint64_t, uint64_t))v217;
  ((void (*)(char *, uint64_t, uint64_t))v217)(v20, v80, v220);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v83(v20, v91);
  v93._countAndFlagsBits = 0x7361766E616320;
  v93._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v93);
  AppShortcutPhrase.init(stringInterpolation:)(v89, &type metadata for CRLCreateBoardIntent, v59);
  v94 = v216;
  v189 = &v208[(_QWORD)v216];
  v95 = v190;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for CRLCreateBoardIntent, v59);
  v96._countAndFlagsBits = 0x20656B614DLL;
  v96._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v96);
  v92(v20, v80, v91);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v83(v20, v91);
  v97._countAndFlagsBits = 0x6E656D75636F6420;
  v97._object = (void *)0xE900000000000074;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v97);
  AppShortcutPhrase.init(stringInterpolation:)(v95, &type metadata for CRLCreateBoardIntent, v59);
  v98 = v219;
  AppShortcutPhrase.init(stringLiteral:)(0x77656E20656B614DLL, 0xEE006472616F6220, &type metadata for CRLCreateBoardIntent, v59);
  AppShortcutPhrase.init(stringLiteral:)(0x77656E20656B614DLL, 0xEF7361766E616320, &type metadata for CRLCreateBoardIntent, v59);
  v190 = (char *)0xE900000000000064;
  AppShortcutPhrase.init(stringLiteral:)(0x72616F622077654ELL, 0xE900000000000064, &type metadata for CRLCreateBoardIntent, v59);
  v208 = &v94[12 * v98];
  v99 = v98;
  v100 = v94;
  v101 = v191;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for CRLCreateBoardIntent, v59);
  v102._countAndFlagsBits = 544695630;
  v102._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v102);
  v103 = v218;
  v104 = v220;
  v92(v20, v218, v220);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v105 = v104;
  v106 = v215;
  v215(v20, v105);
  v107._countAndFlagsBits = 0x6472616F6220;
  v107._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v107);
  AppShortcutPhrase.init(stringInterpolation:)(v101, &type metadata for CRLCreateBoardIntent, v59);
  v208 = &v100[13 * v99];
  v108 = v192;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for CRLCreateBoardIntent, v59);
  v109._countAndFlagsBits = 544695630;
  v109._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v109);
  v110 = v103;
  v111 = v103;
  v112 = v220;
  v92(v20, v110, v220);
  v113 = v92;
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v114 = v106;
  v106(v20, v112);
  v115._countAndFlagsBits = 0x7361766E616320;
  v115._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v115);
  AppShortcutPhrase.init(stringInterpolation:)(v108, &type metadata for CRLCreateBoardIntent, v59);
  v116 = v219;
  v117 = v216;
  v208 = &v216[14 * v219];
  v118 = v193;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for CRLCreateBoardIntent, v59);
  v119._countAndFlagsBits = 544695630;
  v119._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v119);
  v120 = v111;
  v121 = v220;
  v113(v20, v120, v220);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v122 = v121;
  v114(v20, v121);
  v123 = v114;
  v124._countAndFlagsBits = 0x6E656D75636F6420;
  v124._object = (void *)0xE900000000000074;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v124);
  AppShortcutPhrase.init(stringInterpolation:)(v118, &type metadata for CRLCreateBoardIntent, v59);
  v208 = (char *)(16 * v116);
  v125 = v117;
  v193 = &v117[15 * v116];
  v126 = v194;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for CRLCreateBoardIntent, v59);
  v127._countAndFlagsBits = 0xD000000000000015;
  v127._object = (void *)0x8000000100FC21E0;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v127);
  v128 = v218;
  v129 = v122;
  v130 = v122;
  v131 = (void (*)(char *, uint64_t, uint64_t))v217;
  ((void (*)(char *, _QWORD, uint64_t))v217)(v20, v218, v130);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v123(v20, v129);
  v132._countAndFlagsBits = 0;
  v132._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v132);
  AppShortcutPhrase.init(stringInterpolation:)(v126, &type metadata for CRLCreateBoardIntent, v59);
  v194 = &v208[(_QWORD)v125];
  v133 = v195;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for CRLCreateBoardIntent, v59);
  v134._countAndFlagsBits = 0xD000000000000016;
  v134._object = (void *)0x8000000100FC2200;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v134);
  v135 = v128;
  v136 = v220;
  v131(v20, v128, v220);
  v137 = v131;
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v138 = v215;
  v215(v20, v136);
  v139._countAndFlagsBits = 0;
  v139._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v139);
  AppShortcutPhrase.init(stringInterpolation:)(v133, &type metadata for CRLCreateBoardIntent, v59);
  v219 = (uint64_t)&v208[v219 + (_QWORD)v216];
  v140 = v197;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for CRLCreateBoardIntent, v59);
  v141._countAndFlagsBits = 0x656E207472617453;
  v141._object = (void *)0xEA00000000002077;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v141);
  v137(v20, v135, v136);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v21);
  v142 = v136;
  v138(v20, v136);
  v143._countAndFlagsBits = 0;
  v143._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v143);
  AppShortcutPhrase.init(stringInterpolation:)(v140, &type metadata for CRLCreateBoardIntent, v59);
  v144 = v210;
  v145 = String.LocalizationValue.init(stringLiteral:)(0x72616F422077654ELL, v190);
  v146 = v212;
  static Locale.current.getter(v145);
  LODWORD(v197) = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v200 = *(_QWORD *)(v200 + 104);
  v147 = v199;
  ((void (*)(char *))v200)(v199);
  v148 = v211;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v144, 0x6E497070414C5243, 0xED000073746E6574, v146, v147, "Shortcut title", 14, 2);
  v149 = v209;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)(v222, v196, v148, 0xD000000000000011, 0x8000000100FB0710, &type metadata for CRLCreateBoardIntent, v59);
  v219 = static AppShortcutsBuilder.buildExpression(_:)(v149);
  v216 = *(char **)(v198 + 8);
  ((void (*)(char *, uint64_t))v216)(v149, v213);
  v221 = sub_100880218();
  v150 = sub_1004B804C(&qword_1013EB718);
  v151 = *(_QWORD *)(sub_1004B804C(&qword_1013EB720) - 8);
  v208 = (char *)swift_allocObject(v150, ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(_QWORD *)(v151 + 72), *(unsigned __int8 *)(v151 + 80) | 7);
  *((_OWORD *)v208 + 1) = xmmword_100EF5E40;
  v152 = sub_1005761F4();
  v153 = v201;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, &type metadata for CRLOpenBoardIntent, v152);
  v154._countAndFlagsBits = 0x206E65704FLL;
  v154._object = (void *)0xE500000000000000;
  v155 = v202;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v154);
  KeyPath = swift_getKeyPath(&unk_100F03058);
  v157 = sub_1004B804C(&qword_1013EB728);
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v155, v157);
  swift_release(KeyPath);
  v158._countAndFlagsBits = 544106784;
  v158._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v158);
  ((void (*)(char *, _QWORD, uint64_t))v217)(v20, v218, v142);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v20, v155);
  v215(v20, v142);
  v159._countAndFlagsBits = 0;
  v159._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v159);
  AppShortcutPhrase.init(stringInterpolation:)(v153, &type metadata for CRLOpenBoardIntent, v152);
  v160 = v210;
  v161 = String.LocalizationValue.init(stringLiteral:)(0x616F42206E65704FLL, 0xEA00000000006472);
  v162 = v212;
  static Locale.current.getter(v161);
  ((void (*)(char *, _QWORD, uint64_t))v200)(v147, v197, v214);
  v163 = v211;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v160, 0x6E497070414C5243, 0xED000073746E6574, v162, v147, "Shortcut title", 14, 2);
  v220 = swift_getKeyPath(&unk_100F03058);
  v164 = type metadata accessor for CRLBoardEntity(0);
  v165 = sub_1004B804C(&qword_1013E1120);
  v166 = sub_10069AE70();
  v167 = v203;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for CRLOpenBoardIntent, v164, v165, v157, v152, v166);
  v168._countAndFlagsBits = 0x206E65704FLL;
  v168._object = (void *)0xE500000000000000;
  v169 = v204;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v168);
  v170 = swift_getKeyPath(&unk_100F03058);
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendInterpolation(_:)(v170, v169);
  swift_release(v170);
  v171._countAndFlagsBits = 0;
  v171._object = (void *)0xE000000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v171);
  v172 = v206;
  AppShortcutParameterPresentationSummaryString.init(stringInterpolation:)(v167, &type metadata for CRLOpenBoardIntent, v164, v165, v157, v152, v166);
  v173 = v205;
  AppShortcutParameterPresentationSummary.init(_:table:)(v172, "CRLAppIntents", 13, 2, &type metadata for CRLOpenBoardIntent, v164, v165, v157, v152, v166);
  v174 = sub_1004B804C(&qword_1013EB730);
  v175 = sub_1004CB6A4(&qword_1013EB738);
  v176 = sub_10069AEB8();
  v222[0] = v164;
  v222[1] = v175;
  v222[2] = v166;
  v222[3] = v176;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v222, &opaque type descriptor for <<opaque return type of static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A>(_:)>>, 1);
  v178 = v207;
  AppShortcutParameterPresentation.init<A>(for:summary:optionsCollections:)(v220, v173, sub_1006995E8, 0, v157, v174, v152, OpaqueTypeConformance2);
  v179 = v209;
  AppShortcut.init<A, B, C, D>(intent:phrases:shortTitle:systemImageName:parameterPresentation:)(&v221, v208, v163, 0x72662E656C707061, 0xEE006D726F666565, v178, &type metadata for CRLOpenBoardIntent, v164, v165, v157, v152, v166);
  v180 = v179;
  v181 = static AppShortcutsBuilder.buildExpression(_:)(v179);
  ((void (*)(char *, uint64_t))v216)(v180, v213);
  v182 = sub_1004B804C(&qword_1013EB748);
  v183 = swift_allocObject(v182, 48, 7);
  *(_OWORD *)(v183 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v183 + 32) = v219;
  *(_QWORD *)(v183 + 40) = v181;
  v184 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v183);
  return v184;
}

unint64_t sub_10069AE70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E3448;
  if (!qword_1013E3448)
  {
    v1 = type metadata accessor for CRLBoardEntity(255);
    result = swift_getWitnessTable(&unk_100F064FC, v1);
    atomic_store(result, (unint64_t *)&qword_1013E3448);
  }
  return result;
}

unint64_t sub_10069AEB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EB740;
  if (!qword_1013EB740)
  {
    v1 = sub_1004CB6A4(&qword_1013EB738);
    result = swift_getWitnessTable(&protocol conformance descriptor for AppShortcutOptionsCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013EB740);
  }
  return result;
}

unint64_t sub_10069AF04()
{
  unint64_t result;

  result = qword_1013EB750;
  if (!qword_1013EB750)
  {
    result = swift_getWitnessTable(&unk_100F2EF68, &type metadata for CRLBoardQuery);
    atomic_store(result, (unint64_t *)&qword_1013EB750);
  }
  return result;
}

id CRLLastSubmittedTaskQueue.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_queue);
}

id CRLLastSubmittedTaskQueue.__allocating_init(label:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t ObjectType;
  uint64_t v13;

  v5 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  static DispatchQoS.userInitiated.getter(v8);
  v9 = objc_allocWithZone(v2);
  v10 = CRLLastSubmittedTaskQueue.init(label:qos:)(a1, a2, (uint64_t)v7);
  ObjectType = swift_getObjectType(v8);
  swift_deallocPartialClassInstance(v8, ObjectType, 24, 7);
  return v10;
}

id CRLLastSubmittedTaskQueue.init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.userInitiated.getter(v10);
  v11 = objc_allocWithZone(ObjectType);
  v12 = CRLLastSubmittedTaskQueue.init(label:qos:)(a1, a2, (uint64_t)v9);
  v13 = swift_getObjectType(v3);
  swift_deallocPartialClassInstance(v3, v13, 24, 7);
  return v12;
}

id CRLLastSubmittedTaskQueue.__allocating_init(label:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return CRLLastSubmittedTaskQueue.init(label:qos:)(a1, a2, a3);
}

id CRLLastSubmittedTaskQueue.init(label:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *ObjectType;
  objc_super v28;
  double *v29;

  v22 = a3;
  v25 = a1;
  v26 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_lastWorkItem] = 0;
  v21 = sub_100503E34();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  v29 = _swiftEmptyArrayStorage;
  v15 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = v3;
  v17 = sub_1004B804C(&qword_1013FF6B0);
  v18 = sub_1005FC154((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v17, v18, v8, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v24);
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_queue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v25, v26, v14, v10, v7, 0);

  v28.receiver = v16;
  v28.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v28, "init");
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
  return v19;
}

uint64_t sub_10069B418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _QWORD aBlock[5];
  uint64_t v26;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_lastWorkItem;
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_lastWorkItem);
  if (v11)
  {
    v12 = swift_retain(v11);
    dispatch thunk of DispatchWorkItem.cancel()(v12);
    swift_release(v11);
    v13 = *(_QWORD *)(v3 + v10);
    *(_QWORD *)(v3 + v10) = 0;
    swift_release(v13);
  }
  v14 = sub_1004B804C((uint64_t *)&unk_1013EB790);
  v15 = swift_allocObject(v14, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
  static DispatchWorkItemFlags.assignCurrentContext.getter();
  aBlock[0] = v15;
  v16 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v18 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v6, v16);
  aBlock[4] = a1;
  v26 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_1012761D0;
  v19 = _Block_copy(aBlock);
  v20 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  swift_retain(a2);
  v21 = DispatchWorkItem.init(flags:block:)(v9, v19);
  swift_release(v26);
  v22 = *(_QWORD *)(v3 + v10);
  *(_QWORD *)(v3 + v10) = v21;
  swift_retain(v21);
  v23 = swift_release(v22);
  OS_dispatch_queue.async(execute:)(v21, v23);
  return v21;
}

double CRLLastSubmittedTaskQueue.async(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = sub_10069B418(a1, a2);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

void CRLLastSubmittedTaskQueue.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLLastSubmittedTaskQueue", 34, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for CRLLastSubmittedTaskQueue()
{
  return objc_opt_self(_TtC8Freeform25CRLLastSubmittedTaskQueue);
}

uint64_t sub_10069B758()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10069B77C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10069B78C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *sub_10069B794()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char *result;
  void *v9;
  _UNKNOWN ****v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _BYTE v16[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = (char *)objc_msgSend(v0, "movieItem", v5);
  if (result)
  {
    v9 = result;
    v10 = *(_UNKNOWN *****)&result[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v10 == &off_1013E07D8)
      v11 = *(_QWORD *)&result[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v11 = 0;
    swift_beginAccess(v11 + qword_10147E7D8, v16, 32, 0);
    swift_retain(v10);
    v12 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v12);
    swift_endAccess(v16);
    swift_release(v10);
    sub_10069BF0C((uint64_t)v3, (uint64_t)v7);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);

    v13 = (uint64_t *)&v7[*(int *)(v4 + 20)];
    v14 = *v13;
    swift_bridgeObjectRetain(v13[1]);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
    return (char *)v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10069BBD4(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id result;
  void *v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  objc_super v21;
  _BYTE v22[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform22CRLAudioRepPlaceHolder_previewItemURL];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform22CRLAudioRepPlaceHolder_audioRep] = a1;
  v8 = v1;
  v9 = a1;
  v10 = (uint64_t)sub_10069B794();
  v12 = v11;
  v13 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform22CRLAudioRepPlaceHolder_previewItemTitle];
  *v13 = v10;
  v13[1] = v11;
  result = objc_msgSend(v9, "movieItem");
  if (result)
  {
    v15 = result;
    if (v12)
    {
      v16 = v12;
    }
    else
    {
      v10 = 0x6F69647561;
      v16 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain(v12);
    v17 = (void *)sub_100D4592C((uint64_t)v5, v10, v16);

    swift_bridgeObjectRelease(v16);
    swift_beginAccess(v6, v22, 33, 0);
    sub_10054F3F0((uint64_t)v5, v6);
    swift_endAccess(v22);

    v18 = (objc_class *)type metadata accessor for CRLAudioRepPlaceHolder(0);
    v21.receiver = v8;
    v21.super_class = v18;
    v19 = objc_msgSendSuper2(&v21, "init");
    if (v17)
    {
      objc_msgSend(v17, "setAssociatedLifetimeObject:", v9);

    }
    sub_1005534BC((uint64_t)v5);
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10069BDC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAudioRepPlaceHolder(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10069BE44()
{
  return type metadata accessor for CRLAudioRepPlaceHolder(0);
}

uint64_t type metadata accessor for CRLAudioRepPlaceHolder(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EB7C8;
  if (!qword_1013EB7C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAudioRepPlaceHolder);
  return result;
}

void sub_10069BE88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F03108;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_10069BF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10069C09C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLLauncher();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLURLLauncher()
{
  return objc_opt_self(_TtC8Freeform14CRLURLLauncher);
}

void sub_10069C0EC(char a1)
{
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  if ((a1 & 1) == 0)
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v12, 0, 0);
    v1 = (void *)static OS_os_log.crlError;
    v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v2, &v11);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v4 = v1;
    v5 = URL.description.getter();
    v7 = v6;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v8 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v8;
    *(_QWORD *)(inited + 32) = v5;
    *(_QWORD *)(inited + 40) = v7;
    v9 = static os_log_type_t.error.getter(v8);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v9, "Unable to open URL: %@", 22, 2, inited);
    swift_setDeallocating(inited);
    v10 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v10);

  }
}

id sub_10069C218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSURL *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  NSURL *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v16;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v7);
  v9 = v8;
  v10 = objc_msgSend(v6, "canOpenURL:", v8);

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (v10)
  {
    URL._bridgeToObjectiveC()(v11);
    v13 = v12;
    v14 = objc_msgSend(v12, "crl_canOpenURL");

  }
  else
  {
    v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v14;
}

void sub_10069C328(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSURL *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v6);
  v8 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v9 = *(unsigned __int8 *)(v3 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_101276240, v10 + v4, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v11 + v10, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10069C4EC;
  v14 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1006084F4;
  aBlock[3] = &unk_101276258;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v5, "openURL:withCompletionHandler:", v8, v12, swift_release(v14).n128_f64[0]);
  _Block_release(v12);

}

uint64_t sub_10069C48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10069C4EC(char a1)
{
  type metadata accessor for URL(0);
  sub_10069C0EC(a1);
}

uint64_t sub_10069C528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10069C538(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CRLTipScenesEntryPointFull()
{
  return &type metadata for CRLTipScenesEntryPointFull;
}

uint64_t sub_10069C550(uint64_t a1)
{
  return sub_10069C5E8(a1, qword_10147EF50, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_10069C574(uint64_t a1)
{
  return sub_10069C5E8(a1, qword_10147EF68, 0xD000000000000010, 0x8000000100FC2470);
}

uint64_t sub_10069C598(uint64_t a1)
{
  return sub_10069C5E8(a1, qword_10147EF80, 0x746361706D6F632BLL, 0xEE0074756F79614CLL);
}

uint64_t sub_10069C5C4(uint64_t a1)
{
  return sub_10069C5E8(a1, qword_10147EF98, 0xD000000000000018, 0x8000000100FC2420);
}

uint64_t sub_10069C5E8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipScenesEntryPointFull, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipScenesEntryPointFull, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_10069C688()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v0, qword_10147EFB0);
  sub_1004F2A1C(v0, (uint64_t)qword_10147EFB0);
  return Tips.Event.init<>(id:)(0xD00000000000002FLL, 0x8000000100FC2440);
}

uint64_t sub_10069C6EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  __chkstk_darwin(v3);
  v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v62 = v6;
  v7 = __chkstk_darwin(v5);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.DonationTimeRange(0, v7);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E6D88);
  v50 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E6D90);
  v51 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1013E6D98);
  v23 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  v55 = v23;
  __chkstk_darwin(v22);
  v49 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v12, v25);
  KeyPath = swift_getKeyPath(&unk_100F03220);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v12, v25);
  v27 = swift_release(KeyPath);
  v28 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
  static Tips.DonationTimeRange.day.getter(v28);
  v29 = type metadata accessor for Tips.EmptyDonation(0);
  v30 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v31 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v32 = sub_1005EA664();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)(v18, v11, v29, v16, v30, v31, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v16);
  v33 = swift_getKeyPath(&unk_100F03258);
  v34 = sub_1004CBA30(&qword_1013E6DB8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
  v35 = v49;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, v33, v19, v34);
  v36 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v21, v19, v36);
  v63 = 1;
  v37 = v56;
  static PredicateExpressions.build_Arg<A>(_:)(&v63, &type metadata for Int);
  v39 = v57;
  v38 = v58;
  v40 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v59);
  v41 = sub_1004B804C(&qword_1013E6DC0);
  v42 = v60;
  v60[3] = v41;
  v42[4] = sub_1005EA6E4();
  sub_10050D1B0(v42);
  v43 = sub_1004CBA30(&qword_1013E6DE8, &qword_1013E6D98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v44 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v45 = v54;
  v46 = v61;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v35, v37, v39, v54, v61, v43, v44, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v35, v45);
}

uint64_t sub_10069CB64()
{
  return sub_1009E1DE0();
}

uint64_t sub_10069CB98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054F99C();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_10069CBD8()
{
  unint64_t result;

  result = qword_1013EB800;
  if (!qword_1013EB800)
  {
    result = swift_getWitnessTable("M17", &type metadata for CRLTipScenesEntryPointFull);
    atomic_store(result, (unint64_t *)&qword_1013EB800);
  }
  return result;
}

unint64_t sub_10069CC1C(uint64_t a1)
{
  unint64_t result;

  result = sub_10054F99C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10069CC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45[24];
  char v46[24];
  char v47[24];
  char v48[24];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v43 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v44 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Tips.Rule(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DCD08 != -1)
    swift_once(&qword_1013DCD08, sub_10069C550);
  v11 = sub_1004F2A1C(v2, (uint64_t)qword_10147EF50);
  v12 = swift_beginAccess(v11, v48, 0, 0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13(v6, v11, v2, v12);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v42 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (qword_1013DCD10 != -1)
    swift_once(&qword_1013DCD10, sub_10069C574);
  v15 = sub_1004F2A1C(v2, (uint64_t)qword_10147EF68);
  v16 = swift_beginAccess(v15, v47, 0, 0);
  v13(v6, v15, v2, v16);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v17 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DCD18 != -1)
    swift_once(&qword_1013DCD18, sub_10069C598);
  v18 = sub_1004F2A1C(v2, (uint64_t)qword_10147EF80);
  v19 = swift_beginAccess(v18, v46, 0, 0);
  v13(v6, v18, v2, v19);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v20 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DCD20 != -1)
    swift_once(&qword_1013DCD20, sub_10069C5C4);
  v21 = sub_1004F2A1C(v2, (uint64_t)qword_10147EF98);
  v22 = swift_beginAccess(v21, v45, 0, 0);
  v13(v6, v21, v2, v22);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v23 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DCD28 != -1)
    swift_once(&qword_1013DCD28, sub_10069C688);
  v24 = sub_1004F2A1C(v0, (uint64_t)qword_10147EFB0);
  v25 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v44, v24, v0);
  v26 = type metadata accessor for Tips.EmptyDonation(0);
  v27 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v28 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v25, sub_10069C6EC, 0, v26, v27, v28);
  v29 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  v30 = v42;
  v31 = static Tips.RuleBuilder.buildPartialBlock(first:)(v42);
  v32 = swift_bridgeObjectRelease(v30);
  v33 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v31, v17, v32);
  swift_bridgeObjectRelease(v31);
  v34 = swift_bridgeObjectRelease(v17);
  v35 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v33, v20, v34);
  swift_bridgeObjectRelease(v33);
  v36 = swift_bridgeObjectRelease(v20);
  v37 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v35, v23, v36);
  swift_bridgeObjectRelease(v35);
  v38 = swift_bridgeObjectRelease(v23);
  v39 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v37, v29, v38);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v29);
  return v39;
}

void sub_10069D2B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;

  v23 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10069D508();
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  if (!((unint64_t)a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData));
    if (v8)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(a1);
    v10 = _swiftEmptyArrayStorage;
LABEL_17:
    v20 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs) = v10;
    swift_release(v7);
    swift_bridgeObjectRelease(v20);
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  swift_retain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(a1);
  if (!v8)
    goto LABEL_16;
LABEL_3:
  v24 = _swiftEmptyArrayStorage;
  sub_100600724(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v22 = v7;
    v9 = 0;
    v10 = v24;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      else
        v11 = *(id *)(a1 + 8 * v9 + 32);
      v12 = v11;
      v13 = (*(uint64_t (**)(void))((swift_isaMask & *v11) + 0x358))();
      v15 = v14;
      ObjectType = swift_getObjectType(v13);
      (*(void (**)(uint64_t, uint64_t))(v15 + 40))(ObjectType, v15);

      swift_unknownObjectRelease(v13);
      v24 = v10;
      v18 = *((_QWORD *)v10 + 2);
      v17 = *((_QWORD *)v10 + 3);
      if (v18 >= v17 >> 1)
      {
        sub_100600724(v17 > 1, v18 + 1, 1);
        v10 = v24;
      }
      ++v9;
      *((_QWORD *)v10 + 2) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, v5, v23);
    }
    while (v8 != v9);
    swift_bridgeObjectRelease(a1);
    v7 = v22;
    goto LABEL_17;
  }
  __break(1u);
}

double sub_10069D508()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  __int128 v22;
  uint64_t v23;
  _BYTE v24[24];
  _QWORD v25[3];
  _BYTE v26[72];
  _BYTE v27[80];

  v23 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v23);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - v4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v27);
  v22 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems;
  v25[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  swift_bridgeObjectRetain(v25[0]);
  v9 = sub_1004B804C(&qword_1013EB9D0);
  v10 = String.init<A>(describing:)(v25, v9);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  if (*(_QWORD *)(v0 + v8))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"validateDataNotSet()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 117, "Pasteboard object has board items already. boardItems=%@", 56, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"validateDataNotSet()", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2u, 117, (uint64_t)"Pasteboard object has board items already. boardItems=%@", 56, 2u);
  }
  swift_bridgeObjectRelease(inited);
  v14 = swift_initStackObject(v6, v26);
  *(_OWORD *)(v14 + 16) = v22;
  v15 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
      + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess(v16, v25, 0, 0);
  sub_1004CB7BC(v16, (uint64_t)v5, (uint64_t *)&unk_1013F1500);
  v17 = String.init<A>(describing:)(v5, v23);
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = v13;
  *(_QWORD *)(v14 + 32) = v17;
  *(_QWORD *)(v14 + 40) = v18;
  v19 = *(_QWORD *)(v0 + v15) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess(v19, v24, 0, 0);
  sub_1004CB7BC(v19, (uint64_t)v2, (uint64_t *)&unk_1013F1500);
  v20 = type metadata accessor for CRLWPStorageCRDTData(0);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v2, 1, v20);
  sub_1004CB800((uint64_t)v2, (uint64_t *)&unk_1013F1500);
  if ((_DWORD)v19 != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"validateDataNotSet()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 118, "Pasteboard object has text CRDT already. textCRDT=%@", 52, 2u, v14);
    sub_1004F5394(v14, (uint64_t)"validateDataNotSet()", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2u, 118, (uint64_t)"Pasteboard object has text CRDT already. textCRDT=%@", 52, 2u);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

void sub_10069D848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, __n128);
  char *v37;
  uint64_t v38;
  unint64_t v39;

  v38 = a1;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
                  + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
  v39 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = sub_100DCD070(*(_QWORD *)(v10 + 16), 0);
  specialized Array._endMutation()(v11);
  v12 = *(_QWORD *)(*(_QWORD *)(v1 + v9) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
  v13 = *(_QWORD *)(v12 + 16);
  v32 = v1;
  v33 = v2;
  v34 = v12;
  if (v13)
  {
    v14 = v12 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
    v35 = *(_QWORD *)(v4 + 72);
    v36 = v15;
    v16 = swift_bridgeObjectRetain(v12);
    while (1)
    {
      v36(v8, v14, v3, v16);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)(v8, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
        break;
      v18 = (uint64_t)v37;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v37, v8, v3);
      v19 = v38;
      if (!*(_QWORD *)(v38 + 16) || (v20 = sub_100842EFC(v18), (v21 & 1) == 0))
      {
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v3);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v39);
        v28 = sub_100577444();
        swift_allocError(&type metadata for CRLSerializationError, v28, 0, 0);
        *v29 = 4;
        swift_willThrow(v30);
        return;
      }
      v22 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v20);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v3);
      v23 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v25 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v24 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v25 >= v24 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
      v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized Array._endMutation()(v26);

      v14 += v35;
      if (!--v13)
        goto LABEL_11;
    }
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v16 = swift_bridgeObjectRetain(v12);
LABEL_11:
    v17(v8, 1, 1, v3, v16);
  }
  swift_bridgeObjectRelease(v34);
  v27 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems) = v39;
  swift_bridgeObjectRelease(v27);
}

void sub_10069DB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  _BYTE v29[248];
  _QWORD v30[31];
  _QWORD v31[31];
  _QWORD v32[31];
  _QWORD v33[31];
  _BYTE v34[256];

  v2 = v1;
  v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLWPStorageCRDTData(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v15)
  {
    (*(void (**)(__n128))(*(_QWORD *)v15 + 760))(v12);
    v27[1] = v4;
    sub_1004D29BC((uint64_t)&v6[*(int *)(v4 + 20)], (uint64_t)v10);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
    v16 = sub_1004B7878((unint64_t *)&unk_1013F3D30, type metadata accessor for CRLWPStorageCRDTData, (uint64_t)&unk_100F0CD20);
    CRStruct_2.copy(renamingReferences:)(0, v7, v16);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    sub_10069D508();
    v17 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
    v19 = v18 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
    swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT, v34, 33, 0);
    swift_retain(v18);
    sub_100582338((uint64_t)v14, v19, (uint64_t *)&unk_1013F1500);
    swift_endAccess(v34);
    swift_release(v18);
    sub_1004C4938(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride, (uint64_t)v33, &qword_1013E1B50);
    sub_1004C4938((uint64_t)v33, (uint64_t)v34, &qword_1013E1B50);
    v20 = v2;
    if (sub_100562DF8((uint64_t)v34) != 1)
    {
      v23 = v33;
      goto LABEL_6;
    }
    v21 = *(_QWORD *)(a1 + v28);
    if (v21)
    {
      (*(void (**)(void))(*(_QWORD *)v21 + 760))();
      swift_retain(v21);
      v22 = sub_1004B804C(&qword_1013F3C70);
      CRRegister.wrappedValue.getter(v22);
      sub_1004C4938((uint64_t)v32, (uint64_t)v31, &qword_1013E1B50);
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
      swift_release(v21);
      v23 = v31;
LABEL_6:
      sub_1004C4938((uint64_t)v23, (uint64_t)v32, &qword_1013E1B50);
      sub_1004C4938((uint64_t)v32, (uint64_t)v30, &qword_1013E1B50);
      sub_1006A1C78(v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006A1CF4);
      v24 = sub_1004B804C(&qword_1013E1B50);
      v25 = sub_100562068();
      Optional<A>.copy(renamingReferences:)(v31, 0, v24, v25);
      sub_1006A1C78(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
      sub_1004C4938((uint64_t)v31, (uint64_t)v29, &qword_1013E1B50);
      v26 = *(_QWORD *)(v20 + v17) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData;
      sub_1004C4938(v26, (uint64_t)v30, &qword_1013E1B50);
      sub_1004C4938((uint64_t)v29, v26, &qword_1013E1B50);
      sub_1006A1C78(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10069DF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[32];

  v19 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  v18 = v1;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
      + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess(v13, &v20, 0, 0);
  sub_1004CB7BC(v13, (uint64_t)v4, (uint64_t *)&unk_1013F1500);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v14(v4, 1, v8) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeTextboxFromCopiedText(with:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 96, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeTextboxFromCopiedText(with:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2u, 96, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)v4, (uint64_t)v7, (uint64_t *)&unk_1013F1500);
  if (v14(v7, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013F1500);
    return 0;
  }
  else
  {
    sub_1006A17EC((uint64_t)v7, (uint64_t)v11);
    sub_1004C4938(*(_QWORD *)(v18 + v12) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData, (uint64_t)v21, &qword_1013E1B50);
    sub_1006A1C78(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006A1CF4);
    v15 = sub_100CF19A8((uint64_t)v11, v21);
    sub_1006A1C78(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
  }
  return v15;
}

uint64_t sub_10069E2B8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  id v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _BYTE v19[32];
  _QWORD v20[4];

  v3 = *v1;
  v4 = sub_1004B804C(&qword_1013EB978);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CodingUserInfoKey(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for PropertyListEncoder(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = PropertyListEncoder.init()();
  CodingUserInfoKey.init(rawValue:)(0x746E6F4374647263, 0xEB00000000747865);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v20[3] = type metadata accessor for CRContext(0);
    v20[0] = a1;
    v14 = a1;
    v15 = (void (*)(_BYTE *, _QWORD))dispatch thunk of PropertyListEncoder.userInfo.modify(v19);
    sub_10083E26C((uint64_t)v20, (uint64_t)v10);
    v15(v19, 0);
    v20[0] = v1;
    v16 = sub_1004B7878(&qword_1013EB980, type metadata accessor for CRLPasteboardObjectData, (uint64_t)&unk_100F03398);
    v18 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v20, v3, v16, v17);
    swift_release(v12);
    return v18;
  }
  return result;
}

uint64_t type metadata accessor for CRLPasteboardObject()
{
  return objc_opt_self(_TtC8Freeform19CRLPasteboardObject);
}

uint64_t sub_10069E51C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData));
}

double sub_10069E550@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  result = sub_1006A1610(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

void sub_10069E590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v20[-v9];
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v11 = v2 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
    v12 = swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID, v21, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v11, v4, v12);
    sub_1008FD76C((uint64_t)v7, (uint64_t)v10);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v13 = swift_beginAccess(v11, v20, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 40))(v11, v10, v4, v13);
    swift_endAccess(v20);
    v14 = OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs;
    v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
    swift_retain(a1);
    swift_bridgeObjectRetain(v15);
    v17 = sub_1006A0C14(v16, a1);
    swift_bridgeObjectRelease(v15);
    swift_release(a1);
    v18 = *(_QWORD *)(v2 + v14);
    *(_QWORD *)(v2 + v14) = v17;
    swift_bridgeObjectRelease(v18);
  }
}

uint64_t sub_10069E708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[32];

  v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs));
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT, (uint64_t *)&unk_1013F1500);
  sub_1004C4938(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData, (uint64_t)v4, &qword_1013E1B50);
  sub_1006A1C78(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData, &qword_1013EB9A0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10069E7D0()
{
  return type metadata accessor for CRLPasteboardObjectData(0);
}

uint64_t type metadata accessor for CRLPasteboardObjectData(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EB8A0;
  if (!qword_1013EB8A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLPasteboardObjectData);
  return result;
}

void sub_10069E814(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_100F032F8;
  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[3] = &unk_100F03310;
    v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_10069E8E4(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_100F03328;
      v6[7] = &unk_100F03340;
      v6[8] = &unk_100F03358;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

void sub_10069E8E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013EB8B0)
  {
    v2 = type metadata accessor for CRLWPStorageCRDTData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013EB8B0);
  }
}

uint64_t sub_10069E938()
{
  return 1;
}

uint64_t sub_10069E94C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_10069E9B0(uint64_t a1)
{
  sub_10069E590(a1);
}

uint64_t sub_10069E9C4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_10069E9D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10069E9FC + 4 * byte_100F032A0[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_10069E9FC()
{
  return 0xD000000000000010;
}

uint64_t sub_10069EA18()
{
  return 0x6574496472616F62;
}

uint64_t sub_10069EA34()
{
  return 1954047348;
}

uint64_t sub_10069EA44()
{
  return 0x656C797473;
}

uint64_t sub_10069EA58()
{
  return 0x756F53656C797473;
}

uint64_t sub_10069EA78()
{
  return 0x7365725074786574;
}

uint64_t sub_10069EA98@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1006A22D0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10069EAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1006A25CC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10069EB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1006A25CC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10069EB68()
{
  unsigned __int8 *v0;

  return sub_10069E9D4(*v0);
}

uint64_t sub_10069EB70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1006A22F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10069EB94()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_10069EBA4@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1006A22D0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10069EBC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006A1764();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10069EBF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006A1764();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10069EC18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  _BYTE v111[24];
  _QWORD v112[31];
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  char v129[24];
  char v130[32];
  char v131;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v2);
  v82 = (uint64_t)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for CRLWPStorageCRDTData(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v80 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for UUID(0);
  v91 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v85 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1004B804C(&qword_1013EB988);
  v84 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v90 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013EB978);
  __chkstk_darwin(v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CodingUserInfoKey(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v15 = a1[4];
  sub_1004BB5A4(a1, v14);
  v16 = dispatch thunk of Encoder.userInfo.getter(v14, v15);
  CodingUserInfoKey.init(rawValue:)(0x746E6F4374647263, 0xEB00000000747865);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    __break(1u);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v17 = v91;
  if (*(_QWORD *)(v16 + 16) && (v18 = sub_100843710((uint64_t)v13), (v19 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v16 + 56) + 32 * v18, (uint64_t)&v113);
  }
  else
  {
    v113 = 0u;
    v114 = 0u;
  }
  v20 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v20);
  if (!*((_QWORD *)&v114 + 1))
  {
    sub_1004CB800((uint64_t)&v113, &qword_1013E0230);
    goto LABEL_11;
  }
  v21 = type metadata accessor for CRContext(0);
  if ((swift_dynamicCast(v112, &v113, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
  {
LABEL_11:
    v34 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v34, 0, 0);
    *v35 = 9;
    swift_willThrow(v36);
    return;
  }
  v79 = (id)v112[0];
  v22 = a1[3];
  v23 = a1[4];
  sub_1004BB5A4(a1, v22);
  v24 = sub_1006A1764();
  v25 = v90;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLPasteboardObjectData.DataCodingKey, &type metadata for CRLPasteboardObjectData.DataCodingKey, v24, v22, v23);
  v26 = v89;
  v27 = v89 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
  v28 = swift_beginAccess(v89 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID, v130, 0, 0);
  v30 = v85;
  v29 = v86;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v85, v27, v86, v28);
  LOBYTE(v113) = 0;
  v31 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v32 = v87;
  v33 = v88;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v113, v88, v29, v31);
  if (v32)
  {

    (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v29);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v25, v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v29);
    v37 = *(unsigned __int8 *)(v26 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_isSmartCopyPaste);
    LOBYTE(v113) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v37, &v113, v33);
    v38 = v33;
    v39 = v26;
    v40 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
    *(_QWORD *)&v113 = v40;
    LOBYTE(v112[0]) = 2;
    swift_bridgeObjectRetain(v40);
    v41 = sub_1004B804C(&qword_1013F0310);
    v42 = sub_1006A1830(&qword_1013EB998, &qword_1013E4860, (uint64_t)&protocol conformance descriptor for UUID, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v113, v112, v38, v41, v42);
    v43 = v79;
    v44 = v25;
    swift_bridgeObjectRelease(v40);
    v45 = v39 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
    swift_beginAccess(v39 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT, v129, 0, 0);
    v46 = v45;
    v47 = v82;
    sub_1004CB7BC(v46, v82, (uint64_t *)&unk_1013F1500);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v47, 1, v83) == 1)
    {
      sub_1004CB800(v47, (uint64_t *)&unk_1013F1500);
    }
    else
    {
      sub_1006A17EC(v47, v80);
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v50 = type metadata accessor for CRCodableVersion(0);
      v51 = sub_1004F2A1C(v50, (uint64_t)qword_10147EB08);
      v52 = sub_1004B7878(&qword_1013E2980, type metadata accessor for CRLWPStorageCRDTData, (uint64_t)&unk_100F0CBC8);
      v63 = CRDT.serializedData(_:version:)(v43, v51, v83, v52);
      v65 = v64;
      *(_QWORD *)&v113 = v63;
      *((_QWORD *)&v113 + 1) = v64;
      LOBYTE(v112[0]) = 3;
      v66 = sub_100587C2C();
      v67 = v90;
      KeyedEncodingContainer.encode<A>(_:forKey:)(&v113, v112, v38, &type metadata for Data, v66);
      sub_1004B84A4(v80, type metadata accessor for CRLWPStorageCRDTData);
      sub_1004BBBC8(v63, v65);
      v44 = v67;
    }
    sub_1004C4938(v39 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData, (uint64_t)v112, &qword_1013E1B50);
    sub_1004C4938((uint64_t)v112, (uint64_t)&v113, &qword_1013E1B50);
    if (sub_100562DF8((uint64_t)&v113) != 1)
    {
      v104 = v125;
      v105 = v126;
      v106 = v127;
      v107 = v128;
      v100 = v121;
      v101 = v122;
      v102 = v123;
      v103 = v124;
      v96 = v117;
      v97 = v118;
      v98 = v119;
      v99 = v120;
      v92 = v113;
      v93 = v114;
      v94 = v115;
      v95 = v116;
      sub_1004C4938((uint64_t)v112, (uint64_t)v108, &qword_1013E1B50);
      sub_1005630DC((uint64_t)v108);
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v53 = type metadata accessor for CRCodableVersion(0);
      v54 = sub_1004F2A1C(v53, (uint64_t)qword_10147EB08);
      v55 = sub_100562068();
      v68 = CRValue.serializedData(_:version:)(v43, v54, &type metadata for CRLWPTextPresetData, v55);
      v70 = v69;
      sub_1006A1C78(v112, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
      *(_QWORD *)&v92 = v68;
      *((_QWORD *)&v92 + 1) = v70;
      v111[0] = 6;
      v71 = sub_100587C2C();
      v72 = v90;
      KeyedEncodingContainer.encode<A>(_:forKey:)(&v92, v111, v38, &type metadata for Data, v71);
      sub_1004BBBC8(v68, v70);
      v44 = v72;
    }
    v48 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind);
    if (v48 != 6)
    {
      LOBYTE(v108[0]) = v48;
      LOBYTE(v92) = 5;
      v49 = sub_1006A17A8();
      KeyedEncodingContainer.encode<A>(_:forKey:)(v108, &v92, v38, &type metadata for CRLStyleCopyingType, v49);
    }
    v56 = v38;
    v57 = v89 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
    swift_beginAccess(v89 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData, v111, 0, 0);
    sub_1004CB7BC(v57, (uint64_t)&v92, &qword_1013EB9A0);
    v58 = *((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      sub_1004DB728(&v92, (uint64_t)v108);
      v59 = v109;
      v60 = v110;
      sub_1004BB5A4(v108, v109);
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v61 = type metadata accessor for CRCodableVersion(0);
      v62 = sub_1004F2A1C(v61, (uint64_t)qword_10147EB08);
      v73 = CRValue.serializedData(_:version:)(v43, v62, v59, *(_QWORD *)(*(_QWORD *)(v60 + 8) + 8));
      v75 = v74;
      *(_QWORD *)&v92 = v73;
      *((_QWORD *)&v92 + 1) = v74;
      v131 = 4;
      v76 = sub_100587C2C();
      v77 = v90;
      KeyedEncodingContainer.encode<A>(_:forKey:)(&v92, &v131, v56, &type metadata for Data, v76);
      sub_1004BBBC8(v73, v75);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v108);
      v44 = v77;
    }
    else
    {
      sub_1004CB800((uint64_t)&v92, &qword_1013EB9A0);
    }
    if ((v48 != 6) != (v58 != 0))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"encode(to:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 277, "Should have both or neither for preset information", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      v56 = v88;
      v44 = v90;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"encode(to:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2u, 277, (uint64_t)"Should have both or neither for preset information", 50, 2u);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v56);
  }
}

void sub_10069F770(_QWORD *a1)
{
  sub_10069EC18(a1);
}

uint64_t sub_10069F790(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v35;
  char v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  _BYTE *v45;
  __n128 v46;
  _QWORD *v47;
  __n128 v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  __n128 v58;
  int v59;
  _QWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  Swift::String v97;
  _OWORD *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  char *v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _BYTE v119[24];
  _BYTE v120[40];
  _OWORD v121[15];
  uint64_t v122;
  _BYTE v123[32];
  uint64_t v124;
  _OWORD v125[15];
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  _QWORD *v129;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v2);
  v102 = (uint64_t)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v101 = (char *)&v99 - v5;
  __chkstk_darwin(v6);
  v103 = (uint64_t)&v99 - v7;
  v107 = type metadata accessor for UUID(0);
  v104 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v100 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v108 = (char *)&v99 - v10;
  v11 = sub_1004B804C(&qword_1013EB9B0);
  v105 = *(_QWORD *)(v11 - 8);
  v106 = v11;
  __chkstk_darwin(v11);
  v114 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013EB978);
  __chkstk_darwin(v13);
  v112 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v99 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v99 - v19;
  v21 = type metadata accessor for CodingUserInfoKey(0);
  v22 = *(_QWORD **)(v21 - 8);
  __chkstk_darwin(v21);
  v109 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v111 = (char *)&v99 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v99 - v27;
  v30 = a1[3];
  v29 = a1[4];
  v129 = a1;
  v31 = sub_1004BB5A4(a1, v30);
  v116 = v30;
  v117 = v31;
  v118 = v29;
  v32 = (_QWORD *)dispatch thunk of Decoder.userInfo.getter(v30, v29);
  CodingUserInfoKey.init(rawValue:)(0xD000000000000012, 0x8000000100FB0F10);
  v33 = (uint64_t (*)(char *, uint64_t, uint64_t))v22[6];
  result = v33(v20, 1, v21);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_56;
  }
  v115 = (void (*)(char *, char *, uint64_t))v22[4];
  v115(v28, v20, v21);
  if (v32[2] && (v35 = sub_100843710((uint64_t)v28), (v36 & 1) != 0))
  {
    sub_1004CB6E8(v32[7] + 32 * v35, (uint64_t)&v127);
  }
  else
  {
    v127 = 0u;
    v128 = 0u;
  }
  v37 = swift_bridgeObjectRelease(v32);
  v38 = (void (*)(char *, uint64_t, __n128))v22[1];
  v38(v28, v21, v37);
  if (!*((_QWORD *)&v128 + 1))
  {
    sub_1004CB800((uint64_t)&v127, &qword_1013E0230);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(v125, &v127, (char *)&type metadata for Any + 8, &type metadata for UInt64, 6) & 1) == 0)
  {
LABEL_13:
    v44 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v44, 0, 0);
    *v45 = 11;
    swift_willThrow(v46);
    v47 = v129;
    goto LABEL_38;
  }
  v39 = *(_QWORD *)&v125[0];
  v40 = dispatch thunk of Decoder.userInfo.getter(v116, v118);
  CodingUserInfoKey.init(rawValue:)(0xD000000000000027, 0x8000000100FC2640);
  result = v33(v17, 1, v21);
  if ((_DWORD)result == 1)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v41 = (uint64_t)v111;
  v115(v111, v17, v21);
  if (*(_QWORD *)(v40 + 16) && (v42 = sub_100843710(v41), (v43 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v40 + 56) + 32 * v42, (uint64_t)&v127);
  }
  else
  {
    v127 = 0u;
    v128 = 0u;
  }
  v48 = swift_bridgeObjectRelease(v40);
  v38((char *)v41, v21, v48);
  if (*((_QWORD *)&v128 + 1))
  {
    v49 = swift_dynamicCast(v125, &v127, (char *)&type metadata for Any + 8, &type metadata for UInt64, 6);
    if (v49)
      v50 = *(_QWORD *)&v125[0];
    else
      v50 = 0;
    v51 = v49 ^ 1;
  }
  else
  {
    sub_1004CB800((uint64_t)&v127, &qword_1013E0230);
    v50 = 0;
    v51 = 1;
  }
  LODWORD(v111) = v51;
  v52 = dispatch thunk of Decoder.userInfo.getter(v116, v118);
  v53 = v112;
  CodingUserInfoKey.init(rawValue:)(0xD000000000000027, 0x8000000100FC2640);
  result = v33(v53, 1, v21);
  if ((_DWORD)result != 1)
  {
    v54 = (uint64_t)v109;
    v115(v109, v53, v21);
    if (*(_QWORD *)(v52 + 16) && (v55 = sub_100843710(v54), (v56 & 1) != 0))
    {
      sub_1004CB6E8(*(_QWORD *)(v52 + 56) + 32 * v55, (uint64_t)&v127);
    }
    else
    {
      v127 = 0u;
      v128 = 0u;
    }
    v57 = v50;
    v118 = v39;
    v58 = swift_bridgeObjectRelease(v52);
    v38((char *)v54, v21, v58);
    if (*((_QWORD *)&v128 + 1))
    {
      v59 = swift_dynamicCast(v125, &v127, (char *)&type metadata for Any + 8, &type metadata for UInt64, 6);
      if (v59)
        v60 = *(_QWORD **)&v125[0];
      else
        v60 = 0;
      v61 = v59 ^ 1;
    }
    else
    {
      sub_1004CB800((uint64_t)&v127, &qword_1013E0230);
      v60 = 0;
      v61 = 1;
    }
    v47 = v129;
    v62 = v113;
    if ((_DWORD)v111)
    {
      sub_100553294(v113, (uint64_t)&off_101276348);
      v57 = v63;
    }
    if (v61)
    {
      sub_100553294(v62, (uint64_t)&off_101276348);
      v60 = v64;
    }
    v117 = v60;
    v65 = v47[3];
    v66 = v47[4];
    v32 = sub_1004BB5A4(v47, v65);
    v67 = sub_1006A1764();
    v68 = v110;
    dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLPasteboardObjectData.DataCodingKey, &type metadata for CRLPasteboardObjectData.DataCodingKey, v67, v65, v66);
    if (!v68)
    {
      LOBYTE(v127) = 0;
      v69 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v70 = v106;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v107, &v127, v106, v107, v69);
      LOBYTE(v127) = 1;
      LODWORD(v116) = KeyedDecodingContainer.decode(_:forKey:)(&v127, v70);
      v71 = sub_1004B804C(&qword_1013F0310);
      LOBYTE(v125[0]) = 2;
      v72 = sub_1006A1830(&qword_1013EB9B8, &qword_1013E4810, (uint64_t)&protocol conformance descriptor for UUID, (uint64_t)&protocol conformance descriptor for <A> [A]);
      KeyedDecodingContainer.decode<A>(_:forKey:)(v71, v125, v70, v71, v72);
      v115 = (void (*)(char *, char *, uint64_t))v127;
      LOBYTE(v127) = 3;
      v73 = KeyedDecodingContainer.contains(_:)(&v127, v70);
      if ((v73 & 1) != 0)
      {
        LOBYTE(v125[0]) = 3;
        v74 = sub_100587AC0();
        KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, v125, v70, &type metadata for Data, v74);
        v81 = *((_QWORD *)&v127 + 1);
        v112 = (char *)v127;
        v82 = type metadata accessor for CRLWPStorageCRDTData(0);
        v83 = sub_1004B7878(&qword_1013E2980, type metadata accessor for CRLWPStorageCRDTData, (uint64_t)&unk_100F0CBC8);
        v84 = (uint64_t)v101;
        CRDT.init(serializedData:)(v112, v81, v82, v83);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v84, 0, 1, v82);
        sub_1004C4938(v84, v103, (uint64_t *)&unk_1013F1500);
        v70 = v106;
      }
      else
      {
        v75 = type metadata accessor for CRLWPStorageCRDTData(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v103, 1, 1, v75);
      }
      LOBYTE(v125[0]) = 6;
      if ((KeyedDecodingContainer.contains(_:)(v125, v70) & 1) != 0)
      {
        LOBYTE(v121[0]) = 6;
        v76 = sub_100587AC0();
        KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, v121, v70, &type metadata for Data, v76);
        v77 = v125[0];
        v78 = sub_100562068();
        CRValue.init(serializedData:)(v77, *((_QWORD *)&v77 + 1), &type metadata for CRLWPTextPresetData, v78);
        v121[12] = v125[12];
        v121[13] = v125[13];
        v121[14] = v125[14];
        v122 = v126;
        v121[8] = v125[8];
        v121[9] = v125[9];
        v121[10] = v125[10];
        v121[11] = v125[11];
        v121[4] = v125[4];
        v121[5] = v125[5];
        v121[6] = v125[6];
        v121[7] = v125[7];
        v121[0] = v125[0];
        v121[1] = v125[1];
        v121[2] = v125[2];
        v121[3] = v125[3];
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v121, v97);
        v98 = v121;
      }
      else
      {
        sub_10054F488((uint64_t)v125);
        v98 = v125;
      }
      sub_1004C4938((uint64_t)v98, (uint64_t)&v127, &qword_1013E1B50);
      LOBYTE(v125[0]) = 5;
      if ((KeyedDecodingContainer.contains(_:)(v125, v70) & 1) != 0)
      {
        LOBYTE(v121[0]) = 5;
        v79 = sub_1006A18B4();
        KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLStyleCopyingType, v121, v70, &type metadata for CRLStyleCopyingType, v79);
        v80 = LOBYTE(v125[0]);
      }
      else
      {
        v80 = 6;
      }
      LODWORD(v112) = v80;
      LOBYTE(v125[0]) = 4;
      if ((KeyedDecodingContainer.contains(_:)(v125, v70) & 1) != 0)
      {
        LOBYTE(v121[0]) = 4;
        v85 = sub_100587AC0();
        KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, v121, v70, &type metadata for Data, v85);
        v86 = *(_QWORD *)&v125[0];
        if ((_DWORD)v112 != 6)
        {
          v113 = *((_QWORD *)&v125[0] + 1);
          sub_10089B848((char)v112, (uint64_t)v125);
          sub_1004BBBC8(v86, v113);
          sub_1004C4938((uint64_t)v125, (uint64_t)v123, &qword_1013EB9A0);
          goto LABEL_53;
        }
        v87 = *((_QWORD *)&v125[0] + 1);
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 337, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        v62 = v113;
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2u, 337, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        sub_1004BBBC8(v86, v87);
      }
      v124 = 0;
      memset(v123, 0, sizeof(v123));
LABEL_53:
      v88 = v100;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v100, v108, v107);
      sub_1004CB7BC(v103, v102, (uint64_t *)&unk_1013F1500);
      sub_1004CB7BC((uint64_t)v123, (uint64_t)v120, &qword_1013EB9A0);
      v32 = (_QWORD *)swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
      *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectOptions) = 7;
      v89 = (uint64_t)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
      v90 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 1, 1, v90);
      v91 = (uint64_t)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData;
      sub_10054F488((uint64_t)v121);
      sub_1004C4938((uint64_t)v121, v91, &qword_1013E1B50);
      v92 = (uint64_t)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
      *(_OWORD *)v92 = 0u;
      *(_OWORD *)(v92 + 16) = 0u;
      *(_QWORD *)(v92 + 32) = 0;
      v93 = OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind;
      *((_BYTE *)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind) = 6;
      v32[2] = v118;
      v32[3] = v57;
      v32[4] = v117;
      v94 = v104;
      v95 = v88;
      v96 = v107;
      (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))((uint64_t)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID, v95, v107);
      *((_BYTE *)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_isSmartCopyPaste) = v116 & 1;
      *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs) = v115;
      swift_beginAccess(v89, v125, 33, 0);
      sub_100582338(v102, v89, (uint64_t *)&unk_1013F1500);
      swift_endAccess(v125);
      sub_1004C4938(v91, (uint64_t)v125, &qword_1013E1B50);
      sub_1004C4938((uint64_t)&v127, v91, &qword_1013E1B50);
      sub_1006A1C78(v125, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
      swift_beginAccess(v92, v119, 33, 0);
      sub_100582338((uint64_t)v120, v92, &qword_1013EB9A0);
      swift_endAccess(v119);
      *((_BYTE *)v32 + v93) = (_BYTE)v112;
      sub_1004CB800((uint64_t)v123, &qword_1013EB9A0);
      sub_1004CB800(v103, (uint64_t *)&unk_1013F1500);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v108, v96);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v114, v106);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v129);
      return (uint64_t)v32;
    }
LABEL_38:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v47);
    return (uint64_t)v32;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_1006A057C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10069F790(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1006A05F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  NSString v13;
  unint64_t v14;
  NSString v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  int v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  NSString v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSString v34;
  double *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  uint64_t v41;
  _BYTE v44[24];
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[24];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v2);
  v4 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v44[-v6 - 8];
  v8 = objc_msgSend(objc_allocWithZone((Class)CRLDescription), "initWithObject:", v0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  v10 = v9 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess(v9 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT, v47, 0, 0);
  sub_1004CB7BC(v10, (uint64_t)v7, (uint64_t *)&unk_1013F1500);
  v11 = type metadata accessor for CRLWPStorageCRDTData(0);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v7, 1, v11);
  swift_retain(v9);
  sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013F1500);
  v13 = String._bridgeToObjectiveC()();
  if (v12 == 1)
    v14 = 0xE500000000000000;
  else
    v14 = 0xE400000000000000;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "addField:value:", v13, v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (v12 != 1)
  {
    v16 = String._bridgeToObjectiveC()();
    sub_1004CB7BC(v10, (uint64_t)v4, (uint64_t *)&unk_1013F1500);
    String.init<A>(describing:)(v4, v2);
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "addField:value:", v16, v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  }
  v20 = v9 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
  swift_beginAccess(v9 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData, v46, 0, 0);
  sub_1004CB7BC(v20, (uint64_t)v44, &qword_1013EB9A0);
  v21 = v45;
  sub_1004CB800((uint64_t)v44, &qword_1013EB9A0);
  v22 = _swiftEmptyArrayStorage;
  if (v21)
  {
    v23 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind);
    if (v23 == 6)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 370, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"description", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2u, 370, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    else
    {
      v24 = String._bridgeToObjectiveC()();
      v44[0] = v23;
      String.init<A>(describing:)(v44, &type metadata for CRLStyleCopyingType);
      v26 = v25;
      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "addField:value:", v24, v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

    }
  }
  v28 = String._bridgeToObjectiveC()();
  v29 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
  type metadata accessor for UUID(0);
  v30 = swift_bridgeObjectRetain(v29);
  Array.description.getter(v30);
  v32 = v31;
  swift_bridgeObjectRelease(v29);
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "addField:value:", v28, v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v34 = String._bridgeToObjectiveC()();
  v35 = *(double **)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  if (v35)
    v22 = v35;
  type metadata accessor for CRLBoardItem(0);
  v36 = swift_bridgeObjectRetain(v35);
  Array.description.getter(v36);
  v38 = v37;
  swift_bridgeObjectRelease(v22);
  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "addField:value:", v34, v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v40 = objc_msgSend(v8, "descriptionString");
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);

  swift_release(v9);
  return v41;
}

uint64_t sub_1006A0AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  __n128 v19;
  _BYTE v21[24];
  _QWORD v22[5];

  v7 = *(_QWORD *)(a3 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, __n128))(v7 + 16))(v10, v8);
  v11 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  v13 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(a4 + 24);
  v14 = swift_retain(v12);
  v13(v22, a3, a4, v14);
  v15 = v12 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData, v21, 33, 0);
  sub_100582338((uint64_t)v22, v15, &qword_1013EB9A0);
  swift_endAccess(v21);
  swift_release(v12);
  v16 = *(_QWORD *)(a2 + v11);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 16);
  v18 = swift_retain(v16);
  *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind) = v17(a3, a4, v18);
  v19 = swift_release(v16);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v10, a3, v19);
}

uint64_t sub_1006A0C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v38;
  char *v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v43;
  uint64_t *v44;
  __n128 v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t, __n128);
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  char v51;
  char v52;
  __n128 v53;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(unint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  _BOOL8 v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  _QWORD *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  void (*v91)(uint64_t, char *, uint64_t);
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  char v96;
  char v97;
  __n128 v98;
  char v99;
  _QWORD *v100;
  unint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  _QWORD *v112;
  char v113;
  unint64_t v114;
  uint64_t v115;
  _BOOL8 v116;
  uint64_t v117;
  char v118;
  unint64_t v119;
  char v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __n128 v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t result;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  void (*v140)(uint64_t, uint64_t, __n128);
  unsigned int (*v141)(uint64_t, uint64_t, uint64_t);
  int64_t v142;
  unint64_t v143;
  unint64_t v144;
  int v145;
  void (*v146)(unint64_t, uint64_t, uint64_t);
  unint64_t v147;
  void (*v148)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  _QWORD *v153;
  _BYTE v154[32];
  double *v155;

  v151 = a2;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v132 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v132 - v11;
  __chkstk_darwin(v13);
  v138 = (char *)&v132 - v14;
  __chkstk_darwin(v15);
  v139 = (char *)&v132 - v16;
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v136 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v147 = (unint64_t)&v132 - v21;
  __chkstk_darwin(v22);
  v137 = (char *)&v132 - v23;
  __chkstk_darwin(v24);
  v143 = (unint64_t)&v132 - v25;
  __chkstk_darwin(v26);
  v152 = (char *)&v132 - v27;
  v28 = *(_QWORD *)(a1 + 16);
  v29 = _swiftEmptyArrayStorage;
  if (!v28)
    return (uint64_t)v29;
  v134 = v12;
  v133 = v6;
  v132 = v2;
  v155 = _swiftEmptyArrayStorage;
  sub_100600724(0, v28, 0);
  v144 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v30 = a1 + v144;
  v149 = (uint64_t *)(v151 + 24);
  v145 = *(unsigned __int8 *)(v151 + 16);
  v151 = *(_QWORD *)(v18 + 72);
  v135 = v9;
  v31 = (uint64_t)v139;
  v150 = v18;
  while (!v145)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v152, v30, v17);
LABEL_47:
    v29 = v155;
    if ((swift_isUniquelyReferenced_nonNull_native(v155) & 1) == 0)
    {
      sub_100600724(0, *((_QWORD *)v29 + 2) + 1, 1);
      v29 = v155;
    }
    v128 = *((_QWORD *)v29 + 2);
    v127 = *((_QWORD *)v29 + 3);
    if (v128 >= v127 >> 1)
    {
      sub_100600724(v127 > 1, v128 + 1, 1);
      v29 = v155;
    }
    *((_QWORD *)v29 + 2) = v128 + 1;
    v129 = v151;
    v130 = (char *)v29 + v144 + v128 * v151;
    v18 = v150;
    (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v130, v152, v17);
    v155 = v29;
    v30 += v129;
    if (!--v28)
      return (uint64_t)v29;
  }
  v32 = v149;
  v33 = swift_beginAccess(v149, v154, 32, 0);
  v34 = *v32;
  if (*(_QWORD *)(v34 + 16) && (v35 = sub_100842EFC(v30), (v36 & 1) != 0))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v31, *(_QWORD *)(v34 + 56) + v35 * v151, v17);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v37)(v31, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v31, 1, v17) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v152, v31, v17);
LABEL_46:
      swift_endAccess(v154);
      goto LABEL_47;
    }
  }
  else
  {
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
    v37(v31, 1, 1, v17, v33);
  }
  v142 = v28;
  sub_1004CB800(v31, (uint64_t *)&unk_1013E1A50);
  v38 = swift_endAccess(v154);
  v39 = v152;
  UUID.init()(v38);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v41 = v143;
  v40(v143, v30, v17);
  v42 = v37;
  v43 = (uint64_t)v138;
  v146 = (void (*)(unint64_t, uint64_t, uint64_t))v40;
  v40((uint64_t)v138, (uint64_t)v39, v17);
  v148 = v42;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v42)(v43, 0, 1, v17);
  v44 = v149;
  v45 = swift_beginAccess(v149, v154, 33, 0);
  v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v47 = v46(v43, 1, v17, v45);
  v141 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
  if (v47 == 1)
  {
    sub_1004CB800(v43, (uint64_t *)&unk_1013E1A50);
    v48 = *v44;
    swift_bridgeObjectRetain(*v44);
    v49 = sub_100842EFC(v41);
    v50 = v44;
    v52 = v51;
    v53 = swift_bridgeObjectRelease(v48);
    if ((v52 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v50);
      v55 = (_QWORD *)*v50;
      v153 = (_QWORD *)*v50;
      *v50 = 0x8000000000000000;
      v56 = (uint64_t)v135;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10082D4AC();
        v55 = v153;
      }
      v57 = v150;
      v58 = v49 * v151;
      v59 = *(void (**)(unint64_t, uint64_t))(v150 + 8);
      v59(v55[6] + v49 * v151, v17);
      v60 = (uint64_t)v153;
      v61 = v153[7] + v58;
      v62 = (uint64_t)v134;
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 32))(v134, v61, v17);
      v63 = v49;
      v64 = v57;
      sub_10051A58C(v63, v60);
      v65 = *v50;
      *v50 = v60;
      v66 = swift_bridgeObjectRelease(v65);
      v148(v62, 0, 1, v17, v66);
      v67 = v50;
    }
    else
    {
      v62 = (uint64_t)v134;
      v148((uint64_t)v134, 1, 1, v17, v53);
      v64 = v150;
      v59 = *(void (**)(unint64_t, uint64_t))(v150 + 8);
      v67 = v50;
      v56 = (uint64_t)v135;
    }
    v140 = (void (*)(uint64_t, uint64_t, __n128))v59;
    v59(v143, v17);
    sub_1004CB800(v62, (uint64_t *)&unk_1013E1A50);
    goto LABEL_28;
  }
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  v68(v137, v43, v17);
  v69 = swift_isUniquelyReferenced_nonNull_native(*v44);
  v70 = v44;
  v71 = v69;
  v153 = (_QWORD *)*v70;
  v72 = v153;
  *v70 = 0x8000000000000000;
  v74 = sub_100842EFC(v41);
  v75 = v72[2];
  v76 = (v73 & 1) == 0;
  v77 = v75 + v76;
  if (!__OFADD__(v75, v76))
  {
    v78 = v73;
    if (v72[3] >= v77)
    {
      if ((v71 & 1) == 0)
        sub_10082D4AC();
    }
    else
    {
      sub_1008166C0(v77, v71);
      v79 = sub_100842EFC(v143);
      if ((v78 & 1) != (v80 & 1))
        goto LABEL_57;
      v74 = v79;
    }
    v67 = v149;
    v81 = v153;
    if ((v78 & 1) != 0)
    {
      v64 = v150;
      (*(void (**)(unint64_t, char *, uint64_t))(v150 + 40))(v153[7] + v74 * v151, v137, v17);
      v82 = v143;
    }
    else
    {
      v153[(v74 >> 6) + 8] |= 1 << v74;
      v83 = v74 * v151;
      v84 = v81[6] + v74 * v151;
      v82 = v143;
      v146(v84, v143, v17);
      v68((char *)(v81[7] + v83), (uint64_t)v137, v17);
      v85 = v81[2];
      v86 = __OFADD__(v85, 1);
      v87 = v85 + 1;
      if (v86)
        goto LABEL_55;
      v81[2] = v87;
      v64 = v150;
    }
    v88 = *v67;
    *v67 = (uint64_t)v153;
    v89 = swift_bridgeObjectRelease(v88);
    v140 = *(void (**)(uint64_t, uint64_t, __n128))(v64 + 8);
    v140(v82, v17, v89);
    v56 = (uint64_t)v135;
LABEL_28:
    v91 = (void (*)(uint64_t, char *, uint64_t))v146;
    v90 = v147;
    v92 = v152;
    v146(v147, (uint64_t)v152, v17);
    v91(v56, v92, v17);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v148)(v56, 0, 1, v17);
    if (v141(v56, 1, v17) == 1)
    {
      sub_1004CB800(v56, (uint64_t *)&unk_1013E1A50);
      v93 = *v67;
      swift_bridgeObjectRetain(*v67);
      v94 = sub_100842EFC(v90);
      v95 = v67;
      v97 = v96;
      v98 = swift_bridgeObjectRelease(v93);
      v28 = v142;
      if ((v97 & 1) != 0)
      {
        v99 = swift_isUniquelyReferenced_nonNull_native(*v95);
        v100 = (_QWORD *)*v95;
        v153 = (_QWORD *)*v95;
        *v95 = 0x8000000000000000;
        if ((v99 & 1) == 0)
        {
          sub_10082D4AC();
          v100 = v153;
        }
        v101 = v94 * v151;
        v102 = (void (*)(uint64_t, uint64_t))v140;
        ((void (*)(unint64_t, uint64_t))v140)(v100[6] + v94 * v151, v17);
        v103 = (uint64_t)v153;
        v104 = v153[7] + v101;
        v105 = (uint64_t)v133;
        (*(void (**)(char *, unint64_t, uint64_t))(v150 + 32))(v133, v104, v17);
        sub_10051A58C(v94, v103);
        v106 = *v95;
        *v95 = v103;
        v98 = swift_bridgeObjectRelease(v106);
        v107 = 0;
        v31 = (uint64_t)v139;
      }
      else
      {
        v107 = 1;
        v105 = (uint64_t)v133;
        v31 = (uint64_t)v139;
        v102 = (void (*)(uint64_t, uint64_t))v140;
      }
      v148(v105, v107, 1, v17, v98);
      v102(v147, v17);
      sub_1004CB800(v105, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v108 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
      v108(v136, v56, v17);
      v109 = swift_isUniquelyReferenced_nonNull_native(*v67);
      v110 = v67;
      v111 = v109;
      v153 = (_QWORD *)*v110;
      v112 = v153;
      *v110 = 0x8000000000000000;
      v114 = sub_100842EFC(v90);
      v115 = v112[2];
      v116 = (v113 & 1) == 0;
      v117 = v115 + v116;
      v28 = v142;
      if (__OFADD__(v115, v116))
        goto LABEL_54;
      v118 = v113;
      if (v112[3] >= v117)
      {
        if ((v111 & 1) == 0)
          sub_10082D4AC();
      }
      else
      {
        sub_1008166C0(v117, v111);
        v119 = sub_100842EFC(v147);
        if ((v118 & 1) != (v120 & 1))
          goto LABEL_57;
        v114 = v119;
      }
      v31 = (uint64_t)v139;
      v121 = v153;
      if ((v118 & 1) != 0)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v150 + 40))(v153[7] + v114 * v151, v136, v17);
      }
      else
      {
        v153[(v114 >> 6) + 8] |= 1 << v114;
        v122 = v114 * v151;
        v146(v121[6] + v114 * v151, v147, v17);
        v108((char *)(v121[7] + v122), (uint64_t)v136, v17);
        v123 = v121[2];
        v86 = __OFADD__(v123, 1);
        v124 = v123 + 1;
        if (v86)
          goto LABEL_56;
        v121[2] = v124;
      }
      v125 = *v149;
      *v149 = (uint64_t)v153;
      v126 = swift_bridgeObjectRelease(v125);
      v140(v147, v17, v126);
    }
    goto LABEL_46;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v17);
  __break(1u);
  return result;
}

double sub_1006A1610@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double *v20;
  __int128 v21;
  _BYTE v22[56];
  uint64_t v23;

  v4 = v2;
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  swift_retain(v7);
  v8 = sub_10069E2B8(a1);
  if (v3)
  {
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  else
  {
    v11 = v8;
    v12 = v9;
    v13 = sub_1004B804C(&qword_1013EB970);
    inited = swift_initStackObject(v13, v22);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_BYTE *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = v11;
    *(_QWORD *)(inited + 48) = v12;
    sub_1004BE310(v11, v12);
    sub_1008D5B0C(inited);
    v23 = v15;
    v16 = sub_1008D5968((uint64_t)_swiftEmptyArrayStorage);
    v21 = *(_OWORD *)(v7 + 16);
    v17 = *(_QWORD *)(v7 + 32);
    v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
    if (v18)
      v19 = *(double **)(v4 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
    else
      v19 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v18);
    v20 = sub_100520ADC((uint64_t)v19);
    sub_1004BBBC8(v11, v12);
    swift_release(v7);
    swift_bridgeObjectRelease(v19);
    *(_OWORD *)a2 = v21;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)&result = 7;
    *(_OWORD *)(a2 + 24) = xmmword_100F03290;
    *(_QWORD *)(a2 + 40) = v23;
    *(_QWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v20;
  }
  return result;
}

unint64_t sub_1006A1764()
{
  unint64_t result;

  result = qword_1013EB990;
  if (!qword_1013EB990)
  {
    result = swift_getWitnessTable(&unk_100F03560, &type metadata for CRLPasteboardObjectData.DataCodingKey);
    atomic_store(result, (unint64_t *)&qword_1013EB990);
  }
  return result;
}

unint64_t sub_1006A17A8()
{
  unint64_t result;

  result = qword_1013EB9A8;
  if (!qword_1013EB9A8)
  {
    result = swift_getWitnessTable("E17", &type metadata for CRLStyleCopyingType);
    atomic_store(result, (unint64_t *)&qword_1013EB9A8);
  }
  return result;
}

uint64_t sub_1006A17EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A1830(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_1004CB6A4(&qword_1013F0310);
    sub_1004B7878(a2, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006A18B4()
{
  unint64_t result;

  result = qword_1013EB9C0;
  if (!qword_1013EB9C0)
  {
    result = swift_getWitnessTable(&unk_100EFBD7C, &type metadata for CRLStyleCopyingType);
    atomic_store(result, (unint64_t *)&qword_1013EB9C0);
  }
  return result;
}

void sub_1006A18F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  id v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  void (*v29)(_BYTE *, _QWORD);
  char *v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  _BYTE v43[32];
  _QWORD v44[3];
  void *v45;
  uint64_t ObjectType;

  v39 = a2;
  v37 = a4;
  v38 = a1;
  v41 = a3;
  ObjectType = swift_getObjectType(a5);
  v6 = sub_1004B804C(&qword_1013EB978);
  __chkstk_darwin(v6);
  v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v14 = type metadata accessor for CodingUserInfoKey(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v36 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v40 = (char *)&v36 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v36 - v20;
  v22 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = PropertyListDecoder.init()();
  CodingUserInfoKey.init(rawValue:)(0x746E6F4374647263, 0xEB00000000747865);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v24(v13, 1, v14) == 1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v25(v21, v13, v14);
  v45 = (void *)ObjectType;
  v44[0] = a5;
  v26 = a5;
  v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of PropertyListDecoder.userInfo.modify(v43);
  sub_10083E26C((uint64_t)v44, (uint64_t)v21);
  v27(v43, 0);
  CodingUserInfoKey.init(rawValue:)(0xD000000000000012, 0x8000000100FB0F10);
  if (v24(v10, 1, v14) == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v28 = (uint64_t)v40;
  v25(v40, v10, v14);
  v45 = &type metadata for UInt64;
  v44[0] = v41;
  v29 = (void (*)(_BYTE *, _QWORD))dispatch thunk of PropertyListDecoder.userInfo.modify(v43);
  sub_10083E26C((uint64_t)v44, v28);
  v29(v43, 0);
  v30 = v42;
  CodingUserInfoKey.init(rawValue:)(0xD000000000000027, 0x8000000100FC2640);
  if (v24(v30, 1, v14) != 1)
  {
    v31 = (uint64_t)v36;
    v25(v36, v30, v14);
    v45 = &type metadata for UInt64;
    v44[0] = v37;
    v32 = (void (*)(_BYTE *, _QWORD))dispatch thunk of PropertyListDecoder.userInfo.modify(v43);
    sub_10083E26C((uint64_t)v44, v31);
    v32(v43, 0);
    v33 = type metadata accessor for CRLPasteboardObjectData(0);
    v34 = sub_1004B7878(&qword_1013EB9C8, type metadata accessor for CRLPasteboardObjectData, (uint64_t)&unk_100F03370);
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v33, v38, v39, v33, v34, v35);
    swift_release(v23);
    return;
  }
LABEL_7:
  __break(1u);
}

_QWORD *sub_1006A1C78(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

uint64_t sub_1006A1CF4(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a31)
  {
    sub_1004C48FC(result, a2, a3);
    sub_1004C485C(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return swift_bridgeObjectRetain(a31);
  }
  return result;
}

id sub_1006A1DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;
  _BYTE v30[24];
  _BYTE v31[32];
  uint64_t v32;
  _BYTE v33[248];
  _QWORD v34[32];

  v26 = a3;
  v27 = a4;
  v25 = a2;
  v28 = a1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v11);
  v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v6, 1, 1, v12);
  sub_10054F488((uint64_t)v33);
  v14 = type metadata accessor for CRLPasteboardObjectData(0);
  memset(v31, 0, sizeof(v31));
  v32 = 0;
  v15 = (char *)swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectOptions] = 7;
  v16 = (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT];
  v13(&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT], 1, 1, v12);
  v17 = (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData];
  sub_1004C4938((uint64_t)v33, (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData], &qword_1013E1B50);
  v18 = (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData];
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_QWORD *)(v18 + 32) = 0;
  v19 = OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind;
  v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind] = 6;
  v20 = v26;
  *((_QWORD *)v15 + 2) = v25;
  *((_QWORD *)v15 + 3) = v20;
  *((_QWORD *)v15 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID], v10, v7);
  v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_isSmartCopyPaste] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs] = _swiftEmptyArrayStorage;
  swift_beginAccess(v16, v34, 33, 0);
  sub_100582338((uint64_t)v6, v16, (uint64_t *)&unk_1013F1500);
  swift_endAccess(v34);
  sub_1004C4938(v17, (uint64_t)v34, &qword_1013E1B50);
  sub_1004C4938((uint64_t)v33, v17, &qword_1013E1B50);
  sub_1006A1C78(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
  swift_beginAccess(v18, v30, 33, 0);
  sub_100582338((uint64_t)v31, v18, &qword_1013EB9A0);
  swift_endAccess(v30);
  v15[v19] = 6;
  v21 = (objc_class *)type metadata accessor for CRLPasteboardObject();
  v22 = (char *)objc_allocWithZone(v21);
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData] = v15;
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_context] = v28;
  v29.receiver = v22;
  v29.super_class = v21;
  return objc_msgSendSuper2(&v29, "init");
}

uint64_t getEnumTagSinglePayload for CRLSmartStrokeData.SmartStrokeType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLPasteboardObjectData.DataCodingKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1006A2178 + 4 * byte_100F032AC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1006A21AC + 4 * byte_100F032A7[v4]))();
}

uint64_t sub_1006A21AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006A21B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006A21BCLL);
  return result;
}

uint64_t sub_1006A21C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006A21D0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1006A21D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006A21DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPasteboardObjectData.DataCodingKey()
{
  return &type metadata for CRLPasteboardObjectData.DataCodingKey;
}

unint64_t sub_1006A21FC()
{
  unint64_t result;

  result = qword_1013EB9D8;
  if (!qword_1013EB9D8)
  {
    result = swift_getWitnessTable(&unk_100F03538, &type metadata for CRLPasteboardObjectData.DataCodingKey);
    atomic_store(result, (unint64_t *)&qword_1013EB9D8);
  }
  return result;
}

unint64_t sub_1006A2244()
{
  unint64_t result;

  result = qword_1013EB9E0;
  if (!qword_1013EB9E0)
  {
    result = swift_getWitnessTable(&unk_100F03420, &type metadata for CRLPasteboardObjectData.DataCodingKey);
    atomic_store(result, (unint64_t *)&qword_1013EB9E0);
  }
  return result;
}

unint64_t sub_1006A228C()
{
  unint64_t result;

  result = qword_1013EB9E8;
  if (!qword_1013EB9E8)
  {
    result = swift_getWitnessTable(&unk_100F03448, &type metadata for CRLPasteboardObjectData.DataCodingKey);
    atomic_store(result, (unint64_t *)&qword_1013EB9E8);
  }
  return result;
}

uint64_t sub_1006A22D0(unint64_t a1)
{
  if (a1 >= 8)
    return 7;
  else
    return (0x605040302010007uLL >> (8 * a1));
}

uint64_t sub_1006A22F8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010)
  {
    v7 = 0x8000000100FC24D0;
    if (a2 == 0x8000000100FC24D0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FC24D0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x6574496472616F62 && a2 == 0xEA0000000000736DLL)
  {
    v8 = 0xEA0000000000736DLL;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574496472616F62, 0xEA0000000000736DLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    v9 = 0xE400000000000000;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1954047348, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    v10 = 0xE500000000000000;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C797473, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x756F53656C797473 && a2 == 0xEB00000000656372)
  {
    v11 = 0xEB00000000656372;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x756F53656C797473, 0xEB00000000656372, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x7365725074786574 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease(0xEA00000000007465);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7365725074786574, 0xEA00000000007465, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_1006A25CC()
{
  unint64_t result;

  result = qword_1013EB9F0;
  if (!qword_1013EB9F0)
  {
    result = swift_getWitnessTable(&unk_100F034C0, &type metadata for CRLPasteboardObjectData.DataCodingKey);
    atomic_store(result, (unint64_t *)&qword_1013EB9F0);
  }
  return result;
}

double sub_1006A2614(uint64_t a1, double a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, double);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  __int128 v22;
  __int128 v23;
  _BYTE v24[72];
  _QWORD v25[3];
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  __int128 v29;
  uint64_t v30;

  swift_bridgeObjectRetain(a1);
  v5 = sub_100D0C878(v4);
  swift_bridgeObjectRelease(a1);
  v6 = v5[2];
  if (v6)
  {
    v7 = (uint64_t)(v5 + 4);
    swift_bridgeObjectRetain(v5);
    v8 = 0.0;
    v9 = _swiftEmptyArrayStorage;
    do
    {
      v10 = v9;
      sub_100635264(v7, (uint64_t)v28);
      v11 = v30;
      v22 = v29;
      v12 = v29;
      sub_1004BB5A4(v28, v29);
      v13 = *(void (**)(uint64_t, uint64_t, double))(v11 + 16);
      v26 = v22;
      v27 = v11;
      sub_10050D1B0(v25);
      v13(v12, v11, v8);
      v14 = *((_QWORD *)&v29 + 1);
      v15 = v29;
      sub_1004BB5A4(v28, v29);
      v8 = v8 + (*(double (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 40))(v15);
      v16 = sub_1004B804C(&qword_1013E89B8);
      inited = swift_initStackObject(v16, v24);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v23 = v26;
      v18 = v26;
      v19 = sub_1004BB5A4(v25, v26);
      *(_OWORD *)(inited + 56) = v23;
      v20 = sub_10050D1B0((_QWORD *)(inited + 32));
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v20, v19, v18);
      swift_bridgeObjectRetain(v10);
      sub_10061F9E0(inited);
      v9 = v10;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v25);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v28);
      swift_bridgeObjectRelease(v10);
      v7 += 48;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v5);
  }
  return a2;
}

double sub_1006A2828(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  double *v14;

  v14 = _swiftEmptyArrayStorage;
  sub_1006A2614(a1, a2);
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = v3 + 32;
    do
    {
      sub_1004E90B0(v6, (uint64_t)v11);
      v7 = v12;
      v8 = v13;
      sub_1004BB5A4(v11, v12);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
      sub_10061FCD8(v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRelease(v3);
  }
  return a2;
}

uint64_t sub_1006A28F4(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_1006A2614(a1, a2);
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  if (!v4)
  {
    v18 = 0u;
    v19 = 0u;
    v20 = 0;
    swift_bridgeObjectRelease(v2);
    return sub_10060CF30((uint64_t)&v18);
  }
  result = sub_1004E90B0(v2 + 32, (uint64_t)&v15);
  if (v4 == 1)
  {
LABEL_3:
    sub_1004DB728(&v15, (uint64_t)&v18);
    swift_bridgeObjectRelease(v3);
    v6 = *((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v7 = v20;
      sub_1004BB5A4(&v18, *((uint64_t *)&v19 + 1));
      (*(void (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 40))(v6);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v18);
    }
    return sub_10060CF30((uint64_t)&v18);
  }
  v8 = v3 + 72;
  v9 = 1;
  while (v9 < *(_QWORD *)(v3 + 16))
  {
    sub_1004E90B0(v8, (uint64_t)&v18);
    v11 = v16;
    v10 = v17;
    sub_1004BB5A4(&v15, v16);
    v12 = (*(double (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 40))(v11);
    v14 = *((_QWORD *)&v19 + 1);
    v13 = v20;
    sub_1004BB5A4(&v18, *((uint64_t *)&v19 + 1));
    if (v12 >= (*(double (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 40))(v14))
    {
      result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v18);
    }
    else
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v15);
      result = sub_1004DB728(&v18, (uint64_t)&v15);
    }
    ++v9;
    v8 += 40;
    if (v4 == v9)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

double sub_1006A2A70()
{
  uint64_t v0;

  return sub_1006A2828(*(_QWORD *)v0, *(double *)(v0 + 8));
}

uint64_t sub_1006A2A7C()
{
  uint64_t v0;

  return sub_1006A28F4(*(_QWORD *)v0, *(double *)(v0 + 8));
}

ValueMetadata *type metadata accessor for CRLLayerAnimationSequence()
{
  return &type metadata for CRLLayerAnimationSequence;
}

uint64_t sub_1006A2A98()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void *v9;
  _UNKNOWN ****v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _BYTE v17[24];

  v1 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (char *)objc_msgSend(v0, "imageInfo", v5);
  v9 = v8;
  v10 = *(_UNKNOWN *****)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v10 == &off_1014086A0)
    v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v11 = 0;
  swift_beginAccess(v11 + qword_101480ED0, v17, 32, 0);
  swift_retain(v10);
  v12 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v12);
  swift_endAccess(v17);
  swift_release(v10);
  sub_10069BF0C((uint64_t)v3, (uint64_t)v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLImageItemAssetData);

  v13 = (uint64_t *)&v7[*(int *)(v4 + 20)];
  v14 = *v13;
  swift_bridgeObjectRetain(v13[1]);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
  return v14;
}

double sub_1006A2C5C()
{
  void *v0;
  void *v1;
  id v2;
  Class v3;
  id v4;
  id v5;
  double v6;
  double v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(__n128);
  __n128 v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t (*v19)(__n128);
  __n128 v20;
  double v21;
  double v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  void *v27;
  double v28;
  double v29;

  v1 = v0;
  v2 = objc_msgSend(v0, "imageInfo");
  v3 = sub_1008CAD08();
  v4 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v5 = objc_msgSend(v4, "providerForAsset:shouldValidate:", v3, 1);

  objc_msgSend(v5, "naturalSize");
  v7 = v6;

  v8 = (char *)objc_msgSend(v1, "imageInfo");
  v9 = (void *)sub_1008D2EB8();
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v10, "geometry");
    v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v13 = *(uint64_t (**)(__n128))(*(_QWORD *)v12 + 288);
    v14 = swift_retain(v12);
    v15 = (void *)v13(v14);
    v16 = objc_msgSend(v11, "geometryWithParentGeometry:", v15, swift_release(v12).n128_f64[0]);

  }
  else
  {
    v18 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v19 = *(uint64_t (**)(__n128))(*(_QWORD *)v18 + 288);
    v20 = swift_retain(v18);
    v16 = (id)v19(v20);

    *(_QWORD *)&v17 = swift_release(v18).n128_u64[0];
  }
  objc_msgSend(v16, "size", v17);
  v22 = v21;

  v23 = (char *)objc_msgSend(v1, "imageInfo");
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v25 = *(uint64_t (**)(__n128))(*(_QWORD *)v24 + 288);
  v26 = swift_retain(v24);
  v27 = (void *)v25(v26);

  objc_msgSend(v27, "size", swift_release(v24).n128_f64[0]);
  v29 = v28;

  return floor(v7 * (v22 / v29));
}

id sub_1006A2EA0(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v37;
  _QWORD *v38;
  double d;
  CGFloat ty;
  _QWORD *v41;
  CGFloat tx;
  CGFloat c;
  CGFloat b;
  double a;
  uint64_t (*v46)(void);
  _QWORD *v47;
  void *v48;
  uint64_t Strong;
  void *v50;
  uint64_t v51;
  void *v52;
  double v53;
  char *v54;
  uint64_t v55;
  uint64_t (*v56)(__n128);
  __n128 v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  char *v63;
  uint64_t v64;
  uint64_t (*v65)(__n128);
  __n128 v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  CGFloat v78;
  CGFloat v79;
  id v80;
  Class isa;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSString v87;
  unsigned int v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  CGAffineTransform v99;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v5 = v4;
  v8 = type metadata accessor for UTType(0);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v4, "canvas", v10);
  if (!v13)
    goto LABEL_13;
  v14 = v13;
  v15 = objc_msgSend(v13, "boardItemOwner");

  if (!v15)
    goto LABEL_13;
  v16 = type metadata accessor for CRLBoard(0);
  v17 = swift_dynamicCastClass(v15, v16);
  if (!v17)
  {
    swift_unknownObjectRelease(v15);
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeImage(forRect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeImage(forRect:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v18 = v17;
  v19 = objc_msgSend(v5, "interactiveCanvasController");
  v20 = v19;
  if (!v19)
  {
    swift_unknownObjectRelease(v15);
    return 0;
  }
  v21 = (char *)objc_msgSend(v19, "editingCoordinator");

  if (!v21)
  {
    swift_unknownObjectRelease(v15);
    return 0;
  }
  v95 = v15;
  v22 = *(id *)&v21[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
  v23 = objc_msgSend(v5, "imageInfo");
  v24 = (void *)sub_100CF1B2C(v23);

  if (!v24)
  {
LABEL_19:
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeImage(forRect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2, 63, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeImage(forRect:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2u, 63, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v95);

    return 0;
  }
  v25 = type metadata accessor for CRLImageItem(0);
  v26 = swift_dynamicCastClass(v24, v25);
  if (!v26)
  {

    goto LABEL_19;
  }
  v27 = v26;
  v92 = v21;
  v28 = v24;
  sub_100776C40(0);

  v29 = v28;
  sub_100A14388(0);

  v30 = (void *)sub_1008D2EB8();
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v31, "pathSource");
    v33 = objc_opt_self(CRLScalarPathSource);
    v34 = (void *)swift_dynamicCastObjCClass(v32, v33);
    if (v34 && (objc_msgSend(v34, "shouldShowKnob") & 1) == 0)
    {
      v37 = sub_1008CF5DC(0.0);
      sub_1008D3420(v37);

      v32 = v37;
    }
    else
    {

    }
  }
  v91 = v29;
  v93 = v27;
  v94 = v18;
  v38 = objc_msgSend(v5, "imageInfo");
  d = 1.0;
  ty = 0.0;
  v41 = v38;
  tx = 0.0;
  c = 0.0;
  b = 0.0;
  a = 1.0;
  while (1)
  {
    v46 = *(uint64_t (**)(void))((swift_isaMask & *v38) + 0xE0);
    v47 = v38;
    v48 = (void *)v46();
    objc_msgSend(v48, "transform");
    v98 = *(_OWORD *)&t1.a;
    v97 = *(_OWORD *)&t1.c;
    v96 = *(_OWORD *)&t1.tx;

    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    *(_OWORD *)&t2.a = v98;
    *(_OWORD *)&t2.c = v97;
    *(_OWORD *)&t2.tx = v96;
    CGAffineTransformConcat(&v99, &t1, &t2);
    a = v99.a;
    b = v99.b;
    c = v99.c;
    d = v99.d;
    tx = v99.tx;
    ty = v99.ty;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v47 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (!Strong)
      break;
    v50 = (void *)Strong;

    v51 = type metadata accessor for CRLBoardItem(0);
    v38 = (_QWORD *)swift_dynamicCastClass(v50, v51);
    if (!v38)
    {
      v47 = v41;
      goto LABEL_27;
    }
  }

  v50 = v47;
LABEL_27:
  v52 = v91;

  t1.a = a;
  t1.b = b;
  t1.c = c;
  t1.d = d;
  t1.tx = tx;
  t1.ty = ty;
  v53 = -sub_1000791B0(&t1);
  *(_QWORD *)&v98 = v52;
  v54 = (char *)objc_msgSend(v5, "imageInfo");
  v55 = *(_QWORD *)&v54[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v56 = *(uint64_t (**)(__n128))(*(_QWORD *)v55 + 288);
  v57 = swift_retain(v55);
  v58 = (void *)v56(v57);

  objc_msgSend(v58, "position", swift_release(v55).n128_f64[0]);
  v60 = v59;
  v62 = v61;

  v63 = (char *)objc_msgSend(v5, "imageInfo");
  v64 = *(_QWORD *)&v63[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v65 = *(uint64_t (**)(__n128))(*(_QWORD *)v64 + 288);
  v66 = swift_retain(v64);
  v67 = (void *)v65(v66);

  objc_msgSend(v67, "size", swift_release(v64).n128_f64[0]);
  v69 = v68;
  v71 = v70;

  v72 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:angle:", v60, v62, v69, v71, v53);
  v73 = v93;
  sub_100776700(v72);
  v74 = (void *)v98;

  v75 = objc_allocWithZone((Class)CRLCanvasImager);
  v76 = objc_msgSend(v75, "initWithBoard:", v94);
  v77 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v78 = COERCE_DOUBLE(swift_allocObject(v77, 40, 7));
  *(_OWORD *)(*(_QWORD *)&v78 + 16) = xmmword_100EEF400;
  *(_QWORD *)(*(_QWORD *)&v78 + 32) = v73;
  t1.a = v78;
  specialized Array._endMutation()(*(_QWORD *)&v78);
  v79 = t1.a;
  v80 = v74;
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v76, "setInfos:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v79).n128_f64[0]);

  objc_msgSend(v76, "setScaledImageSize:", a3, a4);
  v82 = v80;
  v83 = sub_1008CA0F8();

  if (!v83)
    goto LABEL_31;
  v84 = static UTType.pdf.getter();
  UTType.identifier.getter(v84);
  v86 = v85;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v87 = String._bridgeToObjectiveC()();
  v88 = objc_msgSend(v83, "hasRepresentationConformingToTypeIdentifier:fileOptions:", v87, 0, swift_bridgeObjectRelease(v86).n128_f64[0]);

  if (v88)
  {
    v89 = objc_msgSend(v76, "pdfData");
    v35 = v89;
    if (v89)
    {
      static Data._unconditionallyBridgeFromObjectiveC(_:)(v89);

      swift_unknownObjectRelease(v95);
      return 0;
    }
    else
    {

      swift_unknownObjectRelease(v95);
    }
  }
  else
  {
LABEL_31:
    v35 = objc_msgSend(v76, "newImage");
    swift_unknownObjectRelease(v95);

  }
  return v35;
}

char *sub_1006A372C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(__n128);
  __n128 v41;
  void *v42;
  double v43;
  double v44;
  id v45;
  uint64_t v46;
  id v48;
  char *v49;
  id v50;
  char *v51;
  void *v52;
  uint64_t v53;
  __n128 v54;
  NSString v55;
  id v56;
  unint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  id v63;
  id v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  id v71;
  uint64_t v72;
  void *v73;
  unsigned __int8 v74;
  char *v75;
  void *v76;
  _UNKNOWN ****v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  id v90;
  char *v91;
  id v92;
  void *v93;
  os_unfair_lock_s *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void (**v98)(char *, uint64_t, uint64_t, uint64_t);
  id v99;
  char *v100;
  char *v101;
  void (**v102)(char *, uint64_t, uint64_t, uint64_t);
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  char *v104;
  char *v105;
  char *v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  char *v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  void (**v115)(char *, uint64_t, uint64_t, uint64_t);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  void (*v120)(char *, uint64_t, uint64_t, uint64_t);
  id v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  uint64_t v133;
  NSString v134;
  id v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  id v147;
  char *v148;
  unint64_t v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  unint64_t v153;
  id v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  NSString v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  id v171;
  char *v172;
  unint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  unint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  void (**v182)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  id v185;
  id v186[3];

  v4 = v3;
  v184 = a1;
  v7 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v10);
  v181 = (char *)&v164 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v12);
  v170 = (char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v180 = (char *)&v164 - v15;
  __chkstk_darwin(v16);
  v179 = (char *)&v164 - v17;
  v18 = type metadata accessor for URL(0);
  v182 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v18 - 8);
  v183 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v164 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v164 - v22;
  __chkstk_darwin(v24);
  v178 = (char *)&v164 - v25;
  __chkstk_darwin(v26);
  v176 = (char *)&v164 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v164 - v29;
  *(_QWORD *)&v32 = __chkstk_darwin(v31).n128_u64[0];
  v172 = (char *)&v164 - v33;
  v34 = objc_msgSend(v3, "imageInfo", v32);
  v35 = (void *)sub_1008D2EB8();
  v185 = v35;

  v175 = v30;
  v168 = v23;
  v169 = v20;
  if (v35)
  {
    v36 = objc_msgSend(v4, "imageInfo");
    v37 = sub_1008CC9B8();

  }
  else
  {
    v37 = 0;
  }
  v38 = (char *)objc_msgSend(v4, "imageInfo");
  v39 = *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v40 = *(uint64_t (**)(__n128))(*(_QWORD *)v39 + 288);
  v41 = swift_retain(v39);
  v42 = (void *)v40(v41);

  objc_msgSend(v42, "angle", swift_release(v39).n128_f64[0]);
  v44 = v43;

  if ((v37 & 1) == 0 && v44 == 0.0)
  {
    v45 = objc_msgSend(v4, "imageInfo");
    v46 = sub_100D46048(v184, a2, a3);

    return (char *)v46;
  }
  v48 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v186[0] = 0;
  v49 = (char *)objc_msgSend(v48, "initWithError:", v186);
  v50 = v186[0];
  if (v49)
  {
    v165 = 0;
    v51 = v49;
  }
  else
  {
    v52 = v50;
    v53 = _convertNSErrorToError(_:)(v50);

    swift_willThrow(v54);
    swift_errorRelease(v53);
    v51 = 0;
    v165 = 0;
  }
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend(v55, "stringByDeletingPathExtension");

  v167 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v177 = v57;

  v58 = sub_1006A2C5C();
  v171 = sub_1006A2EA0(v58, v59, v58, v59);
  v173 = v61;
  v174 = v60;
  v166 = v61 >> 60;
  if (v61 >> 60 != 15)
    goto LABEL_20;
  if (v35)
  {
    v62 = v51;
    v63 = v185;
    v64 = objc_msgSend(v63, "pathSource");
    v65 = objc_msgSend(v64, "isRectangular");

    if (!v65)
    {
      v71 = objc_msgSend(v63, "pathSource");
      v72 = objc_opt_self(CRLScalarPathSource);
      v73 = (void *)swift_dynamicCastObjCClass(v71, v72);
      if (!v73)
      {

LABEL_30:
        v66 = 0xE300000000000000;
        goto LABEL_31;
      }
      v74 = objc_msgSend(v73, "shouldShowKnob");

      v66 = 0xE300000000000000;
      if ((v74 & 1) != 0)
      {
LABEL_31:
        v67 = 6778480;
        v51 = v62;
LABEL_32:
        if (!v51)
          goto LABEL_16;
        goto LABEL_33;
      }
      v67 = 6778480;
      v51 = v62;
      if (v44 != 0.0)
        goto LABEL_32;
LABEL_20:
      v62 = v51;
      v75 = (char *)objc_msgSend(v4, "imageInfo");
      v76 = v75;
      v77 = *(_UNKNOWN *****)&v75[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      if (*v77 == &off_1014086A0)
        v78 = *(_QWORD *)&v75[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      else
        v78 = 0;
      swift_beginAccess(v78 + qword_101480ED0, v186, 32, 0);
      swift_retain(v77);
      v79 = sub_1004B804C(&qword_1013EBA40);
      CRRegister.wrappedValue.getter(v79);
      swift_endAccess(v186);
      swift_release(v77);
      v80 = v181;
      sub_10069BF0C((uint64_t)v9, (uint64_t)v181);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
      v81 = type metadata accessor for CRLAssetData(0);
      v82 = *(_QWORD *)(v81 - 8);
      (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v82 + 56))(v80, 0, 1, v81);

      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) == 1)
      {
        sub_1004CB800((uint64_t)v80, (uint64_t *)&unk_1013E9BE0);
        v83 = v179;
        v182[7](v179, 1, 1, v183);
      }
      else
      {
        v84 = (char *)objc_msgSend(v4, "imageInfo");
        v85 = (char *)*(id *)&v84[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store];

        v86 = *(_QWORD *)&v85[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v86 + 16));
        v87 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
        v88 = *(void **)&v85[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
        if (v88)
        {
          v89 = *(id *)&v85[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
        }
        else
        {
          v90 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
          v91 = v85;
          v92 = sub_100C7EE84((uint64_t)v91);

          v93 = *(void **)&v85[v87];
          *(_QWORD *)&v85[v87] = v92;
          v89 = v92;

          v88 = 0;
        }
        v94 = *(os_unfair_lock_s **)(v86 + 16);
        v95 = v88;
        os_unfair_lock_unlock(v94);
        v83 = v179;
        v96 = (uint64_t)v181;
        sub_100C7857C((uint64_t)v181, 0, 3, 0, v179);

        sub_1004B84A4(v96, type metadata accessor for CRLAssetData);
        v98 = v182;
        v97 = v183;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v182[6])(v83, 1, v183) != 1)
        {
          v124 = v172;
          v125 = ((uint64_t (*)(char *, char *, uint64_t))v98[4])(v172, v83, v97);
          v67 = URL.pathExtension.getter(v125);
          v66 = v126;
          ((void (*)(char *, uint64_t))v98[1])(v124, v97);
          v51 = v62;
          if (!v62)
            goto LABEL_16;
          goto LABEL_33;
        }
      }
      sub_1004CB800((uint64_t)v83, &qword_1013E04D0);
      goto LABEL_30;
    }

  }
  if (v44 == 0.0)
    goto LABEL_20;
  v66 = 0xE300000000000000;
  v67 = 6778480;
  if (!v51)
  {
LABEL_16:
    v68 = v183;
    v69 = v182[7];
    v70 = (uint64_t)v180;
    v69(v180, 1, 1, v183);
LABEL_34:
    swift_bridgeObjectRelease(v177);
    swift_bridgeObjectRelease(v66);
    sub_1004CB800(v70, &qword_1013E04D0);
    v110 = v173;
    v111 = v174;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v186, 0, 0);
    v112 = (id)static OS_os_log.crlDefault;
    v113 = static os_log_type_t.error.getter(v112);
    sub_100A06EBC((uint64_t)v112, &_mh_execute_header, v113, "unable to make temp file url", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1004BE2FC(v111, v110);
    v114 = v184;
    goto LABEL_37;
  }
LABEL_33:
  v99 = objc_msgSend(v51, "URL");
  v100 = v178;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v99);

  v101 = v176;
  URL.appendingPathComponent(_:)(v167, v177);
  v102 = v182;
  v103 = v182[1];
  v104 = v100;
  v68 = v183;
  ((void (*)(char *, uint64_t))v103)(v104, v183);
  v105 = v180;
  URL.appendingPathExtension(_:)(v67);
  v70 = (uint64_t)v105;
  v106 = v101;
  v107 = v103;
  ((void (*)(char *, uint64_t))v103)(v106, v68);
  v108 = v105;
  v69 = v102[7];
  v69(v108, 0, 1, v68);
  v109 = v102[6];
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v109)(v70, 1, v68) == 1)
    goto LABEL_34;
  v176 = (char *)v109;
  v179 = v49;
  v115 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v102[4];
  v116 = v175;
  v181 = v51;
  v182 = v115;
  ((void (*)(char *, uint64_t, uint64_t))v115)(v175, v70, v68);
  if (v166 <= 0xE)
  {
    v127 = v173;
    v128 = v174;
    sub_1004BE310(v174, v173);
    v129 = v165;
    v130 = Data.write(to:options:)(v116, 0, v128, v127);
    v120 = v107;
    if (v129)
    {
      sub_1004BE2FC(v128, v127);
      swift_errorRelease(v129);
      v117 = 0;
      v118 = 0;
      v119 = v171;
      if (v171)
        goto LABEL_40;
    }
    else
    {
      v139 = URL.isFileURL.getter(v130);
      if ((v139 & 1) != 0)
        v140 = URL.path.getter(v139);
      else
        v140 = URL.absoluteString.getter(v139);
      v117 = v140;
      v118 = v141;
      v119 = v171;
      sub_1004BE2FC(v174, v173);
      if (v119)
        goto LABEL_40;
    }
  }
  else
  {
    v117 = 0;
    v118 = 0;
    v119 = v171;
    v120 = v107;
    if (v171)
    {
LABEL_40:
      v121 = v119;
      swift_bridgeObjectRelease(v118);
      v119 = v121;
      v122 = URL.isFileURL.getter(v119);
      if ((v122 & 1) != 0)
        URL.path.getter(v122);
      else
        URL.absoluteString.getter(v122);
      v133 = v123;
      v134 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v133);
      v135 = sub_100412C48((CGImage *)v119, v134);

      if (v135)
      {
        v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v135);
        v118 = v136;
        swift_bridgeObjectRelease(v177);
        swift_bridgeObjectRelease(v66);

        v68 = v183;
        v132 = v184;
        goto LABEL_51;
      }

      v68 = v183;
      v119 = v171;
LABEL_54:
      if (v67 == 6778480 && v66 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease(v177);
        v138 = 0xE300000000000000;
      }
      else
      {
        v142 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v66, 6778480, 0xE300000000000000, 0);
        swift_bridgeObjectRelease(v66);
        if ((v142 & 1) == 0)
        {
          v132 = v184;
          if (v119)
          {
            v147 = objc_msgSend(v181, "URL", swift_bridgeObjectRelease(0).n128_f64[0]);
            v148 = v169;
            static URL._unconditionallyBridgeFromObjectiveC(_:)(v147);

            v149 = v177;
            v150 = v178;
            URL.appendingPathComponent(_:)(v167, v177);
            v151 = swift_bridgeObjectRelease(v149);
            ((void (*)(char *, uint64_t, __n128))v120)(v148, v68, v151);
            v152 = (uint64_t)v170;
            URL.appendingPathExtension(_:)(6778480);
            ((void (*)(char *, uint64_t))v120)(v150, v68);
            v69((char *)v152, 0, 1, v68);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v176)(v152, 1, v68) == 1)
            {
              sub_1004CB800(v152, &qword_1013E04D0);
              v153 = v173;
              if (qword_1013DD6B8 != -1)
                swift_once(&qword_1013DD6B8, sub_100A00A6C);
              swift_beginAccess(&static OS_os_log.crlDefault, v186, 0, 0);
              v154 = (id)static OS_os_log.crlDefault;
              v155 = static os_log_type_t.error.getter(v154);
              sub_100A06EBC((uint64_t)v154, &_mh_execute_header, v155, "unable to make temp file url for fallback PNG", 45, 2, (uint64_t)_swiftEmptyArrayStorage);

              v145 = v174;
              v146 = v153;
              goto LABEL_67;
            }
            v156 = v168;
            v157 = ((uint64_t (*)(char *, uint64_t, uint64_t))v182)(v168, v152, v68);
            v158 = URL.isFileURL.getter(v157);
            v137 = v173;
            if ((v158 & 1) != 0)
              URL.path.getter(v158);
            else
              URL.absoluteString.getter(v158);
            v160 = v159;
            v161 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v160);
            v162 = sub_100412C48((CGImage *)v119, v161);

            if (v162)
            {
              v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
              v118 = v163;

              ((void (*)(char *, uint64_t))v120)(v168, v68);
              goto LABEL_52;
            }
            ((void (*)(char *, uint64_t))v120)(v156, v68);
LABEL_64:
            if (qword_1013DD6B8 != -1)
              swift_once(&qword_1013DD6B8, sub_100A00A6C);
            swift_beginAccess(&static OS_os_log.crlDefault, v186, 0, 0);
            v143 = (id)static OS_os_log.crlDefault;
            v144 = static os_log_type_t.error.getter(v143);
            sub_100A06EBC((uint64_t)v143, &_mh_execute_header, v144, "unable to make temp file for caching copy of masked image to temp", 65, 2, (uint64_t)_swiftEmptyArrayStorage);

            v145 = v174;
            v146 = v137;
LABEL_67:
            sub_1004BE2FC(v145, v146);

            ((void (*)(char *, uint64_t))v120)(v116, v68);
            v114 = v132;
LABEL_37:
            v69((char *)v114, 1, 1, v68);
            return 0;
          }
          swift_bridgeObjectRelease(v177);
LABEL_63:
          v137 = v173;
          goto LABEL_64;
        }
        v138 = v177;
      }
      swift_bridgeObjectRelease(v138);
      v132 = v184;
      goto LABEL_63;
    }
  }
  if (!v118)
    goto LABEL_54;
  swift_bridgeObjectRelease(v177);
  v131 = swift_bridgeObjectRelease(v66);
  v119 = 0;
  v132 = v184;
LABEL_51:
  v137 = v173;
LABEL_52:
  URL.init(fileURLWithPath:)(v117, v118, v131);

  swift_bridgeObjectRelease(v118);
  sub_1004BE2FC(v174, v137);
  ((void (*)(char *, uint64_t))v120)(v116, v68);
  v69((char *)v132, 0, 1, v68);
  return v181;
}

id sub_1006A4840(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  uint64_t v19;
  objc_super v20;
  _BYTE v21[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform22CRLImageRepPlaceHolder_previewItemURL];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform22CRLImageRepPlaceHolder_imageRep] = a1;
  v8 = v1;
  v9 = a1;
  v10 = sub_1006A2A98();
  v12 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform22CRLImageRepPlaceHolder_previewItemTitle];
  *v12 = v10;
  v12[1] = v11;
  if (v11)
    v13 = v10;
  else
    v13 = 0x6567616D69;
  if (v11)
    v14 = v11;
  else
    v14 = 0xE500000000000000;
  swift_bridgeObjectRetain(v11);
  v15 = sub_1006A372C((uint64_t)v5, v13, v14);
  swift_bridgeObjectRelease(v14);
  swift_beginAccess(v6, v21, 33, 0);
  sub_10054F3F0((uint64_t)v5, v6);
  swift_endAccess(v21);

  v16 = (objc_class *)type metadata accessor for CRLImageRepPlaceHolder(0);
  v20.receiver = v8;
  v20.super_class = v16;
  v17 = objc_msgSendSuper2(&v20, "init");
  if (v15)
  {
    objc_msgSend(v15, "setAssociatedLifetimeObject:", v9);

  }
  sub_1004CB800((uint64_t)v5, &qword_1013E04D0);
  return v17;
}

id sub_1006A49F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageRepPlaceHolder(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006A4A80()
{
  return type metadata accessor for CRLImageRepPlaceHolder(0);
}

uint64_t type metadata accessor for CRLImageRepPlaceHolder(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EBA28;
  if (!qword_1013EBA28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLImageRepPlaceHolder);
  return result;
}

void sub_1006A4AC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F03648;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_1006A4B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v3 = type metadata accessor for UUID(0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v30 = v1;
  v38 = _swiftEmptyArrayStorage;
  sub_100600724(0, v6, 0);
  v7 = v38;
  result = sub_100B59DA8(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v29 = a1 + 88;
  v31 = v6;
  v32 = v9;
  v33 = a1 + 64;
  v34 = a1;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_26;
    v37 = v11;
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v17 = *(_QWORD *)(v16 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(v16 + 16));
    v19 = *(void (**)(uint64_t, uint64_t, __n128))(v17 + 32);
    v20 = swift_retain(v16);
    v19(ObjectType, v17, v20);
    swift_release(v16);
    v38 = v7;
    v22 = v7[2];
    v21 = v7[3];
    if (v22 >= v21 >> 1)
    {
      sub_100600724(v21 > 1, v22 + 1, 1);
      v7 = v38;
    }
    v7[2] = v22 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v35 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v22, v5, v36);
    a1 = v34;
    v13 = 1 << *(_BYTE *)(v34 + 32);
    if (v10 >= v13)
      goto LABEL_27;
    v12 = v33;
    v23 = *(_QWORD *)(v33 + 8 * v15);
    if ((v23 & (1 << v10)) == 0)
      goto LABEL_28;
    LODWORD(v9) = v32;
    if (*(_DWORD *)(v34 + 36) != (_DWORD)v32)
      goto LABEL_29;
    v24 = v23 & (-2 << (v10 & 0x3F));
    if (v24)
    {
      v13 = __clz(__rbit64(v24)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v31;
    }
    else
    {
      v25 = v15 + 1;
      v26 = (unint64_t)(v13 + 63) >> 6;
      v14 = v31;
      if (v15 + 1 < v26)
      {
        v27 = *(_QWORD *)(v33 + 8 * v25);
        if (!v27)
        {
          v25 = v15 + 2;
          if (v15 + 2 >= v26)
            goto LABEL_4;
          v27 = *(_QWORD *)(v33 + 8 * v25);
          if (!v27)
          {
            while (v26 - 3 != v15)
            {
              v27 = *(_QWORD *)(v29 + 8 * v15++);
              if (v27)
              {
                v25 = v15 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        v13 = __clz(__rbit64(v27)) + (v25 << 6);
      }
    }
LABEL_4:
    v11 = v37 + 1;
    v10 = v13;
    if (v37 + 1 == v14)
      return (uint64_t)v7;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1006A4DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  __n128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  __int128 v47;
  _QWORD *v48;

  v3 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v37 = v1;
    v48 = _swiftEmptyArrayStorage;
    sub_1006006EC(0, v5, 0);
    v6 = v48;
    v8 = sub_100B59DA8(a1);
    v9 = 0;
    v10 = a1 + 64;
    v38 = a1 + 80;
    v39 = v5;
    v40 = v7;
    v41 = a1 + 64;
    v42 = a1;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(a1 + 32))
    {
      v13 = (unint64_t)v8 >> 6;
      if ((*(_QWORD *)(v10 + 8 * ((unint64_t)v8 >> 6)) & (1 << v8)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
        goto LABEL_24;
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v8);
      v46 = v6;
      v15 = *(_QWORD *)(v14 + 24);
      ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 16));
      v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v15 + 32);
      v18 = swift_retain(v14);
      v19 = v43;
      v20 = v17(ObjectType, v15, v18);
      v21 = UUID.uuidString.getter(v20);
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      v47 = *(_OWORD *)(v14 + 16);
      swift_unknownObjectRetain(v47);
      v24 = sub_1004B804C(&qword_1013E00C0);
      v25 = String.init<A>(describing:)(&v47, v24);
      v27 = v26;
      *(_QWORD *)&v47 = v21;
      *((_QWORD *)&v47 + 1) = v23;
      swift_bridgeObjectRetain(v23);
      v28._countAndFlagsBits = v25;
      v28._object = v27;
      String.append(_:)(v28);
      v6 = v46;
      swift_release(v14);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v27);
      v29 = v47;
      v48 = v6;
      v31 = v6[2];
      v30 = v6[3];
      if (v31 >= v30 >> 1)
      {
        sub_1006006EC(v30 > 1, v31 + 1, 1);
        v6 = v48;
      }
      v6[2] = v31 + 1;
      *(_OWORD *)&v6[2 * v31 + 4] = v29;
      a1 = v42;
      v11 = 1 << *(_BYTE *)(v42 + 32);
      if (v8 >= v11)
        goto LABEL_25;
      v10 = v41;
      v32 = *(_QWORD *)(v41 + 8 * v13);
      if ((v32 & (1 << v8)) == 0)
        goto LABEL_26;
      LODWORD(v7) = v40;
      if (*(_DWORD *)(v42 + 36) != (_DWORD)v40)
        goto LABEL_27;
      v33 = v32 & (-2 << (v8 & 0x3F));
      if (v33)
      {
        v11 = __clz(__rbit64(v33)) | v8 & 0xFFFFFFFFFFFFFFC0;
        v12 = v39;
      }
      else
      {
        v34 = v13 + 1;
        v35 = (unint64_t)(v11 + 63) >> 6;
        v12 = v39;
        if (v13 + 1 < v35)
        {
          v36 = *(_QWORD *)(v41 + 8 * v34);
          if (v36)
          {
LABEL_20:
            v11 = __clz(__rbit64(v36)) + (v34 << 6);
          }
          else
          {
            while (v35 - 2 != v13)
            {
              v36 = *(_QWORD *)(v38 + 8 * v13++);
              if (v36)
              {
                v34 = v13 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v9;
      v8 = v11;
      if (v9 == v12)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

NSString sub_1006A50F8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EFF0 = (uint64_t)result;
  return result;
}

NSString sub_1006A512C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EFF8 = (uint64_t)result;
  return result;
}

NSString sub_1006A5160()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F000 = (uint64_t)result;
  return result;
}

NSString sub_1006A5194()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F008 = (uint64_t)result;
  return result;
}

NSString sub_1006A51C8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F010 = (uint64_t)result;
  return result;
}

NSString sub_1006A51FC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F018 = (uint64_t)result;
  return result;
}

NSString sub_1006A5230()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F020 = (uint64_t)result;
  return result;
}

NSString sub_1006A5264()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F028 = (uint64_t)result;
  return result;
}

NSString sub_1006A5298()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147F030 = (uint64_t)result;
  return result;
}

id sub_1006A52CC(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD30, (void **)&qword_10147EFF0, &qword_10147F038, (uint64_t)sub_1006A50F8);
}

id sub_1006A530C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD38, (void **)&qword_10147EFF8, &qword_10147F040, (uint64_t)sub_1006A512C);
}

id sub_1006A534C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD40, (void **)&qword_10147F000, &qword_10147F048, (uint64_t)sub_1006A5160);
}

id sub_1006A538C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD48, (void **)&qword_10147F008, (void **)&qword_10147F050, (uint64_t)sub_1006A5194);
}

id sub_1006A53CC(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD50, (void **)&qword_10147F010, &qword_10147F058, (uint64_t)sub_1006A51C8);
}

id sub_1006A540C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD58, (void **)&qword_10147F018, &qword_10147F060, (uint64_t)sub_1006A51FC);
}

id sub_1006A544C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD60, (void **)&qword_10147F020, &qword_10147F068, (uint64_t)sub_1006A5230);
}

id sub_1006A548C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD68, (void **)&qword_10147F028, &qword_10147F070, (uint64_t)sub_1006A5264);
}

id sub_1006A54CC(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCD70, (void **)&qword_10147F030, &qword_10147F078, (uint64_t)sub_1006A5298);
}

id sub_1006A551C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v4;
  _QWORD *v5;
  objc_super v7;

  v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext] = 0;
  v4 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory];
  *v5 = _swiftEmptyArrayStorage;
  v5[1] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior] = -1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_board] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_changeNotifier] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_selectionDispatcher] = a3;
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for CRLCommandController();
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t sub_1006A5650()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 33, 7);
}

void sub_1006A56D0()
{
  uint64_t v0;

  sub_1006A574C();
  if (!v0)
    sub_10074D0E8();
}

uint64_t sub_1006A5730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString);
  v4 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString
                 + 8);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease(v4);
}

void sub_1006A574C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  double v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35[3];
  char v36[40];
  uint64_t v37;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v2, v36);
  *(_OWORD *)(inited + 16) = xmmword_100EEF400;
  *(_QWORD *)(inited + 32) = v0;
  v35[0] = inited;
  specialized Array._endMutation()(inited);
  v4 = v35[0];
  v37 = v35[0];
  if (v35[0] >> 62)
    goto LABEL_64;
  v5 = *(_QWORD *)((v35[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v1;
  if (!v5)
  {
LABEL_68:
    swift_bridgeObjectRelease(v4);
    return;
  }
  while (1)
  {
    v7 = (unint64_t)v4 >> 62;
    if ((unint64_t)v4 >> 62)
      break;
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_5:
    if ((v4 & 0xC000000000000001) != 0)
    {
      v1 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
      if (v7)
        goto LABEL_16;
    }
    else
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_61;
      v1 = (char *)*(id *)(v4 + 32);
      if (v7)
      {
LABEL_16:
        if (v4 < 0)
          v11 = v4;
        else
          v11 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v8 = _CocoaArrayWrapper.endIndex.getter(v11);
        swift_bridgeObjectRelease(v4);
        goto LABEL_20;
      }
    }
    v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_20:
    if (!v8)
      goto LABEL_63;
    sub_100CFEB9C(0, 1);
    if (*(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString
                      + 8])
    {
      v4 = v37;
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString
                                            + 8]);

      goto LABEL_68;
    }
    v4 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v35, 0, 0);
    v12 = *(_QWORD *)v4;
    if (*(_QWORD *)v4 >> 62)
    {
      if (v12 < 0)
        v4 = *(_QWORD *)v4;
      else
        v4 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v13 = _CocoaArrayWrapper.endIndex.getter(v4);
      if (!v13)
      {
LABEL_39:
        swift_bridgeObjectRelease(v12);
        v21 = _swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
          goto LABEL_52;
        goto LABEL_40;
      }
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v12);
      if (!v13)
        goto LABEL_39;
    }
    if (v13 < 1)
    {
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      if (v4 < 0)
        v32 = v4;
      else
        v32 = v4 & 0xFFFFFFFFFFFFFF8;
      v33 = v1;
      swift_bridgeObjectRetain(v4);
      v34 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(v4);
      if (!v34)
        goto LABEL_68;
    }
    else
    {
      for (i = 0; i != v13; ++i)
      {
        if ((v12 & 0xC000000000000001) != 0)
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
        else
          v17 = *(id *)(v12 + 8 * i + 32);
        v18 = v17;
        v19 = type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup();
        v20 = swift_dynamicCastClass(v18, v19);
        if (v20)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
          v15 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v15);
          v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v15, v18);
          specialized ContiguousArray._endMutation()(v16);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v12);
      v21 = _swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_52;
LABEL_40:
      if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
      {
        v22 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v23 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
        v24 = type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup();
        if (swift_dynamicCastMetatype(v23, v24) || (v25 = _swiftEmptyArrayStorage[2], v25 == 0.0))
        {
LABEL_42:
          swift_release(_swiftEmptyArrayStorage);
        }
        else
        {
          v26 = 0;
          while (swift_dynamicCastClass(*(_QWORD *)&_swiftEmptyArrayStorage[v26 + 4], v24))
          {
            if (*(_QWORD *)&v25 == ++v26)
              goto LABEL_42;
          }
          swift_release(_swiftEmptyArrayStorage);
          v21 = (double *)((char *)_swiftEmptyArrayStorage + 1);
        }
        goto LABEL_43;
      }
LABEL_52:
      v27 = type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup();
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v29 = _bridgeCocoaArray<A>(_:)(v28, v27);
      swift_release_n(_swiftEmptyArrayStorage, 2, v30);
      v21 = (double *)v29;
LABEL_43:
      sub_10061F860((uint64_t)v21);

      v4 = v37;
      if ((unint64_t)v37 >> 62)
      {
        if (v37 < 0)
          v31 = v37;
        else
          v31 = v37 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v37);
        v1 = (char *)_CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease(v4);
        if (!v1)
          goto LABEL_68;
      }
      else
      {
        v1 = *(char **)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v1)
          goto LABEL_68;
      }
    }
  }
  if (v4 < 0)
    v9 = v4;
  else
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v4);
  if (v10)
  {
    swift_bridgeObjectRetain(v4);
    v1 = (char *)_CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v4);
    if (!v1)
      goto LABEL_60;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1006A5BE0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString
                                             + 8));
}

id sub_1006A5BF4()
{
  return sub_1004DFAE4(0, type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup);
}

void sub_1006A5C18(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _BYTE v12[24];

  if (a1)
  {
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v12, 0, 0);
    v4 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v4 < 0)
        v10 = *v3;
      else
        v10 = v4 & 0xFFFFFFFFFFFFFF8;
      v11 = a1;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v6 = a1;
    }
    v7 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior;
    v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior);
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior);
    if (v8)
    {
      if (v5 >= v9)
      {

        return;
      }
    }
    else
    {
      sub_100588D60(v9, -1, &_mh_execute_header, (uint64_t)"_setSelectionBehaviorIfNecessary(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 197);
      v8 = *(void **)(v1 + v7);
    }
    *(_QWORD *)(v1 + v7) = a1;

    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior) = v5;
  }
}

BOOL sub_1006A5D34()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v10;
  _BYTE v11[72];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10 = sub_1004B804C(&qword_1013EBC78);
  v4 = v1;
  v5 = sub_1004B804C(&qword_1013EBC80);
  String.init<A>(describing:)(&v10, v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 64) = sub_1006B06EC();
  *(_QWORD *)(inited + 32) = v8;
  if (v1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_validateSelectionBehaviorCleared()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 221, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"_validateSelectionBehaviorCleared()", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 221, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

  }
  swift_bridgeObjectRelease(inited);
  return sub_100588D60(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior), -1, &_mh_execute_header, (uint64_t)"_validateSelectionBehaviorCleared()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 222);
}

void sub_1006A5F54(_BYTE *a1, unint64_t a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  CFArrayRef (__cdecl **v57)(CTFontDescriptorRef, CFSetRef);
  char **v58;
  char v59;
  uint64_t v60;
  void *v61;
  unint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  id v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  char v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  id v117;
  id v118;
  __n128 v119;
  CKRecordID v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  char v141[24];
  _QWORD v142[3];
  uint64_t v143;
  uint64_t v144;
  _OWORD v145[2];
  uint64_t v146;
  char v147[24];

  v139 = a3;
  LODWORD(v6) = a5;
  v10 = (_QWORD *)type metadata accessor for UUID(0);
  v137 = *(v10 - 1);
  __chkstk_darwin(v10);
  v136 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for CRLCommandHistoryItem(0);
  v133 = *(_QWORD *)(v138 - 8);
  v12 = __chkstk_darwin(v138);
  v132 = (uint64_t)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v134 = (uint64_t)&v125 - v15;
  v16 = __chkstk_darwin(v14);
  v129 = (uint64_t)&v125 - v17;
  v18 = __chkstk_darwin(v16);
  v130 = (uint64_t)&v125 - v19;
  v20 = __chkstk_darwin(v18);
  v131 = (uint64_t *)((char *)&v125 - v21);
  __chkstk_darwin(v20);
  v135 = (char *)&v125 - v22;
  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    v5 = 57;
    sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 258, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 258, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  objc_msgSend((id)objc_opt_self(CRLCommandControllerObjCHelper), "fatalAssertOnNilCommand:", a1);
  v23 = v140;
  sub_1006A5C18(v139);
  v24 = (uint64_t *)(v23 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v23 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v147, 0, 0);
  v25 = *v24;
  if (!((unint64_t)*v24 >> 62))
  {
    v26 = *(_BYTE **)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v26 > 0)
      goto LABEL_5;
LABEL_46:
    v43 = v140;
    v5 = *(_QWORD *)(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior);
    *(_QWORD *)(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior) = 0;
    *(_QWORD *)(v43 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior) = -1;
    sub_1006A72F4(a1, a2);
    if (!*(_QWORD *)(v43 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext))
    {

      goto LABEL_93;
    }
    v44 = *(_QWORD *)(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider);
    if (v44)
    {
      swift_unknownObjectRetain(*(_QWORD *)(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider));
      sub_10066B8AC();
      swift_unknownObjectRelease(v44);
    }
    *(_BYTE *)(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction) = 0;
    v45 = sub_1006AE21C((void *)v5, 0, a4);
    v46 = v45;
    if ((v6 & 1) != 0)
    {
      LODWORD(v128) = v6;
      if (!v45)
        goto LABEL_140;
      swift_retain_n(v45, 2);
      v47 = (id)v5;
      v139 = (id)v5;
      v48 = v136;
      UUID.init()(v47);
      v6 = (uint64_t)v135;
      *((_QWORD *)v135 + 1) = 0;
      v50 = v137;
      v49 = v138;
      v51 = *(int *)(v138 + 32);
      *(_QWORD *)(v6 + v51) = 0;
      (*(void (**)(uint64_t, char *, _QWORD *))(v50 + 16))(v6 + *(int *)(v49 + 28), v48, v10);
      v52 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v53 = swift_allocObject(v52, 40, 7);
      *(_OWORD *)(v53 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v53 + 32) = v46;
      *(_QWORD *)&v145[0] = v53;
      specialized Array._endMutation()(v53);
      v54 = *(_QWORD *)&v145[0];
      v55 = v48;
      v5 = (uint64_t)v139;
      (*(void (**)(char *, _QWORD *))(v50 + 8))(v55, v10);
      *(_QWORD *)v6 = v54;

      *(_QWORD *)(v6 + 8) = v5;
      *(_QWORD *)(v6 + 16) = 0;
      *(_QWORD *)(v6 + 24) = 0xE000000000000000;

      *(_QWORD *)(v6 + v51) = 0;
      v56 = sub_1006A7B34((uint64_t *)v6, 0);
      swift_release(v46);
      swift_release(v56);
      sub_1004B84A4(v6, type metadata accessor for CRLCommandHistoryItem);
      LOBYTE(v6) = v128;
    }
    if ((_BYTE)a2)
    {

      swift_release(v46);
LABEL_93:
      sub_1006A8ED4();
      return;
    }
    v139 = v10;
    if (!v46)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 298, "Failed to create CRLUndoingAction for user command.", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Failed to create CRLUndoingAction for user command.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 298, (uint64_t)"Failed to create CRLUndoingAction for user command.", 51, 2u);
      goto LABEL_139;
    }
    v57 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
    v58 = &selRef_crlwp_characterSetWithCharactersInArray_length_;
    if ((v6 & 1) != 0)
    {
      swift_retain(v46);
LABEL_90:
      v118 = objc_msgSend((id)objc_opt_self(v57[425]), v58[174]);
      if (qword_1013DCD70 != -1)
        swift_once(&qword_1013DCD70, sub_1006A5298);
      objc_msgSend(v118, "postNotificationName:object:", qword_10147F030, v140);

      swift_release_n(v46, 2, v119);
      goto LABEL_93;
    }
    v59 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)a1) + 0xA8))();
    v127 = v46;
    if ((v59 & 1) != 0)
    {
      v60 = v46;
      v61 = (void *)v5;
      v62 = (unint64_t *)(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory);
      swift_beginAccess(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory, v141, 0, 0);
      v63 = *(_QWORD *)(*v62 + 16);
      if (v63)
      {
        v64 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
        v65 = *(_QWORD *)(v133 + 72);
        v66 = v131;
        v67 = sub_1004B8460(*v62 + v64 + v65 * (v63 - 1), (uint64_t)v131, type metadata accessor for CRLCommandHistoryItem);
        v68 = *(_QWORD **)((char *)v66 + *(int *)(v138 + 32));
        if (v68)
        {
          if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v68) + 0xA8))(v67) & 1) != 0)
          {
            v126 = v65;
            v128 = v64;
            v69 = v60;
            v70 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)a1) + 0xB0);
            swift_retain(v60);
            v71 = v68;
            if ((v70() & 1) != 0)
            {
              v72 = v131;
              v142[0] = *v131;
              v73 = v142[0];
              swift_retain(v60);
              swift_bridgeObjectRetain(v73);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
              v76 = *(_QWORD *)((v142[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              v75 = *(_QWORD *)((v142[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v76 >= v75 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
              v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v69);
              specialized Array._endMutation()(v77);
              v78 = 0;
              v79 = (void *)v72[1];
              if (v79 && v61)
                v78 = objc_msgSend(v79, "commandSelectionBehaviorByCoalescingWithCommandSelectionBehavior:", v61);
              v80 = v142[0];
              v81 = (uint64_t)v135;
              sub_1004B8460((uint64_t)v131, (uint64_t)v135, type metadata accessor for CRLCommandHistoryItem);
              v139 = v78;
              v82 = a1;
              v83 = v130;
              sub_100D3CCEC(v80, v81, (uint64_t)v82, v78, v130);
              swift_beginAccess(v62, v145, 33, 0);
              sub_100A07E64(v81);
              sub_1004B84A4(v81, type metadata accessor for CRLCommandHistoryItem);
              v84 = v129;
              sub_1004B8460(v83, v129, type metadata accessor for CRLCommandHistoryItem);
              v85 = *v62;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v62);
              *v62 = v85;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v85 = sub_100D0F760(0, *(_QWORD *)(v85 + 16) + 1, 1, v85);
                *v62 = v85;
              }
              v88 = *(_QWORD *)(v85 + 16);
              v87 = *(_QWORD *)(v85 + 24);
              if (v88 >= v87 >> 1)
              {
                v85 = sub_100D0F760(v87 > 1, v88 + 1, 1, v85);
                *v62 = v85;
              }
              *(_QWORD *)(v85 + 16) = v88 + 1;
              sub_1006B06A8(v84, v85 + v128 + v88 * v126);
              v89 = v62[1];
              v62[1] = (unint64_t)_swiftEmptyArrayStorage;
              swift_endAccess(v145);
              swift_bridgeObjectRelease(v89);
              v57 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
              v58 = &selRef_crlwp_characterSetWithCharactersInArray_length_;
              v90 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
              if (qword_1013DCD90 != -1)
                swift_once(&qword_1013DCD90, sub_1006A538C);
              objc_msgSend(v90, "postNotificationName:object:", qword_10147F050, v140);

              sub_1004B84A4(v83, type metadata accessor for CRLCommandHistoryItem);
              sub_1004B84A4((uint64_t)v131, type metadata accessor for CRLCommandHistoryItem);
              v5 = (uint64_t)v61;
              goto LABEL_89;
            }
            sub_1004B84A4((uint64_t)v131, type metadata accessor for CRLCommandHistoryItem);

          }
          else
          {
            swift_retain(v60);
            sub_1004B84A4((uint64_t)v131, type metadata accessor for CRLCommandHistoryItem);
          }
        }
        else
        {
          swift_retain(v60);
          sub_1004B84A4((uint64_t)v66, type metadata accessor for CRLCommandHistoryItem);
        }
LABEL_78:
        v142[0] = a1;
        v92 = type metadata accessor for CRLCommand();
        v93 = a1;
        v94 = sub_1004B804C(&qword_1013EBC68);
        if ((swift_dynamicCast(v145, v142, v92, v94, 6) & 1) == 0)
        {
          v146 = 0;
          memset(v145, 0, sizeof(v145));
        }
        v135 = a1;
        sub_1004CB7BC((uint64_t)v145, (uint64_t)v142, &qword_1013EBC70);
        v95 = v143;
        if (v143)
        {
          v96 = v144;
          sub_1004BB5A4(v142, v143);
          v131 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v95, v96);
          v98 = v97;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v142);
        }
        else
        {
          sub_1004CB800((uint64_t)v142, &qword_1013EBC70);
          v131 = 0;
          v98 = 0xE000000000000000;
        }
        v99 = v61;
        v100 = v127;
        swift_retain(v127);
        v101 = v136;
        UUID.init()(v102);
        v103 = v134;
        *(_QWORD *)(v134 + 8) = 0;
        v105 = v137;
        v104 = v138;
        v106 = *(int *)(v138 + 32);
        *(_QWORD *)(v103 + v106) = 0;
        v107 = v139;
        (*(void (**)(uint64_t, char *, id))(v105 + 16))(v103 + *(int *)(v104 + 28), v101, v139);
        v108 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v109 = swift_allocObject(v108, 40, 7);
        *(_OWORD *)(v109 + 16) = xmmword_100EEF400;
        *(_QWORD *)(v109 + 32) = v100;
        v142[0] = v109;
        specialized Array._endMutation()(v93);
        v110 = v142[0];
        v111 = v101;
        v5 = (uint64_t)v61;
        (*(void (**)(char *, id))(v105 + 8))(v111, v107);
        *(_QWORD *)v103 = v110;

        v112 = v131;
        *(_QWORD *)(v103 + 8) = v61;
        *(_QWORD *)(v103 + 16) = v112;
        *(_QWORD *)(v103 + 24) = v98;

        *(_QWORD *)(v103 + v106) = v135;
        v27 = v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
        swift_beginAccess(v140 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory, v142, 33, 0);
        a4 = v132;
        sub_1004B8460(v103, v132, type metadata accessor for CRLCommandHistoryItem);
        v26 = *(_BYTE **)v27;
        v113 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v27);
        *(_QWORD *)v27 = v26;
        if ((v113 & 1) != 0)
          goto LABEL_84;
        goto LABEL_137;
      }
      v91 = v46;
    }
    else
    {
      v61 = (void *)v5;
      v91 = v46;
    }
    swift_retain(v91);
    goto LABEL_78;
  }
  if (v25 < 0)
    v42 = *v24;
  else
    v42 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v24);
  v26 = (_BYTE *)_CocoaArrayWrapper.endIndex.getter(v42);
  swift_bridgeObjectRelease(v25);
  if ((uint64_t)v26 <= 0)
    goto LABEL_46;
LABEL_5:
  if ((v6 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 334, "Can't destroy changes for a closing group while a group is still open.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can't destroy changes for a closing group while a group is still open.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 334, (uint64_t)"Can't destroy changes for a closing group while a group is still open.", 70, 2u);
    goto LABEL_139;
  }
  v27 = *v24;
  if (!(_BYTE)a2)
    goto LABEL_16;
  if ((unint64_t)v27 >> 62)
    goto LABEL_112;
  v28 = *(char **)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v24);
  if (!v28)
  {
LABEL_116:
    swift_bridgeObjectRelease(v27);
LABEL_117:
    sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 339, "Non user command enqueued while a group was open and simultaneous execution of non user commands wasn't allowed.", 112, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non user command enqueued while a group was open and simultaneous execution of non user commands wasn't allowed.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 339, (uint64_t)"Non user command enqueued while a group was open and simultaneous execution of non user commands wasn't allowed.", 112, 2u);
    goto LABEL_139;
  }
  while (1)
  {
    v29 = (unint64_t)(v28 - 1);
    if (__OFSUB__(v28, 1))
    {
      __break(1u);
LABEL_119:
      v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      goto LABEL_14;
    }
    if ((v27 & 0xC000000000000001) != 0)
      goto LABEL_119;
    if ((v29 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    if (v29 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_121;
    v30 = *(_QWORD *)(v27 + 8 * v29 + 32);
    swift_retain(v30);
LABEL_14:
    swift_bridgeObjectRelease(v27);
    a4 = *(unsigned __int8 *)(v30 + 16);
    swift_release(v30);
    if ((_DWORD)a4 != 3)
      goto LABEL_117;
    v27 = *v24;
LABEL_16:
    if ((unint64_t)v27 >> 62)
    {
      if (v27 < 0)
        v26 = (_BYTE *)v27;
      else
        v26 = (_BYTE *)(v27 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v27);
      v28 = (char *)_CocoaArrayWrapper.endIndex.getter(v26);
      if (v28)
        goto LABEL_18;
LABEL_101:
      swift_bridgeObjectRelease(v27);
      sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 344, "Expected there to be an open group", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Expected there to be an open group");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 344, (uint64_t)"Expected there to be an open group", 34, 2u);
      while (1)
      {
LABEL_139:
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v120, *(Swift::String *)&v121);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
        __break(1u);
LABEL_140:
        sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 287, "Failed to create CRLUndoingAction for destroying changes.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Failed to create CRLUndoingAction for destroying changes.");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 287, (uint64_t)"Failed to create CRLUndoingAction for destroying changes.", 57, 2u);
      }
    }
    v28 = *(char **)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v27);
    if (!v28)
      goto LABEL_101;
LABEL_18:
    v32 = v28 - 1;
    if (__OFSUB__(v28, 1))
    {
      __break(1u);
LABEL_103:
      LOBYTE(v10) = a2;
      v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v27);
LABEL_23:
      swift_bridgeObjectRelease(v27);
      v28 = (char *)*(id *)(v33 + 24);
      swift_release(v33);
      v34 = &v28[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
      swift_beginAccess(&v28[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v145, 33, 0);
      v26 = a1;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      a2 = *(_QWORD *)((*(_QWORD *)v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((*(_QWORD *)v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (a2 >= v31 >> 1)
        goto LABEL_105;
      goto LABEL_24;
    }
    if ((v27 & 0xC000000000000001) != 0)
      goto LABEL_103;
    if (((unint64_t)v32 & 0x8000000000000000) != 0)
      break;
    if ((unint64_t)v32 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      LOBYTE(v10) = a2;
      v33 = *(_QWORD *)(v27 + 8 * (_QWORD)v32 + 32);
      swift_retain(v33);
      goto LABEL_23;
    }
    __break(1u);
LABEL_112:
    if (v27 < 0)
      v26 = (_BYTE *)v27;
    else
      v26 = (_BYTE *)(v27 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v27);
    v28 = (char *)_CocoaArrayWrapper.endIndex.getter(v26);
    if (!v28)
      goto LABEL_116;
  }
  __break(1u);
LABEL_105:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, a2 + 1, 1);
LABEL_24:
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a2, v26);
  specialized Array._endMutation()(v35);
  swift_endAccess(v145);
  v27 = *v24;
  if ((unint64_t)*v24 >> 62)
  {
    if (v27 < 0)
      v123 = *v24;
    else
      v123 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v24);
    v36 = _CocoaArrayWrapper.endIndex.getter(v123);
    if (!v36)
      goto LABEL_110;
LABEL_26:
    v29 = v36 - 1;
    if (!__OFSUB__(v36, 1))
    {
      if ((v27 & 0xC000000000000001) == 0)
      {
        if ((v29 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v29 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v37 = *(_QWORD *)(v27 + 8 * v29 + 32);
          swift_retain(v37);
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_126;
      }
LABEL_123:
      v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
LABEL_31:
      swift_bridgeObjectRelease(v27);
      a4 = *(unsigned __int8 *)(v37 + 16);
      swift_release(v37);
      if ((a4 - 1) >= 3)
      {
LABEL_132:

        return;
      }
      v5 = OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction;
      if ((*(_BYTE *)(v140
                     + OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction) & 1) != 0)
      {
LABEL_131:
        sub_1006A72F4(v26, v10);
        goto LABEL_132;
      }
      v27 = *v24;
      if (!((unint64_t)*v24 >> 62))
      {
        v38 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*v24);
        if (v38)
          goto LABEL_35;
LABEL_130:
        swift_bridgeObjectRelease(v27);
        goto LABEL_131;
      }
LABEL_126:
      if (v27 < 0)
        v124 = v27;
      else
        v124 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v27);
      v38 = _CocoaArrayWrapper.endIndex.getter(v124);
      if (v38)
      {
LABEL_35:
        v39 = v38 - 1;
        if (__OFSUB__(v38, 1))
        {
          __break(1u);
        }
        else if ((v27 & 0xC000000000000001) == 0)
        {
          if ((v39 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v39 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v40 = *(_QWORD *)(v27 + 8 * v39 + 32);
            swift_retain(v40);
            goto LABEL_40;
          }
          __break(1u);
LABEL_137:
          v26 = (_BYTE *)sub_100D0F760(0, *((_QWORD *)v26 + 2) + 1, 1, (unint64_t)v26);
          *(_QWORD *)v27 = v26;
LABEL_84:
          v115 = *((_QWORD *)v26 + 2);
          v114 = *((_QWORD *)v26 + 3);
          if (v115 >= v114 >> 1)
          {
            v26 = (_BYTE *)sub_100D0F760(v114 > 1, v115 + 1, 1, (unint64_t)v26);
            *(_QWORD *)v27 = v26;
          }
          *((_QWORD *)v26 + 2) = v115 + 1;
          sub_1006B06A8(a4, (uint64_t)&v26[((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(_QWORD *)(v133 + 72) * v115]);
          v116 = *(_QWORD *)(v27 + 8);
          *(_QWORD *)(v27 + 8) = _swiftEmptyArrayStorage;
          swift_endAccess(v142);
          swift_bridgeObjectRelease(v116);
          v57 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
          v58 = &selRef_crlwp_characterSetWithCharactersInArray_length_;
          v117 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
          if (qword_1013DCD90 != -1)
            swift_once(&qword_1013DCD90, sub_1006A538C);
          objc_msgSend(v117, "postNotificationName:object:", qword_10147F050, v140);

          sub_1004B84A4(v134, type metadata accessor for CRLCommandHistoryItem);
          sub_1004CB800((uint64_t)v145, &qword_1013EBC70);
LABEL_89:
          v46 = v127;
          goto LABEL_90;
        }
        v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v27);
LABEL_40:
        swift_bridgeObjectRelease(v27);
        v41 = *(unsigned __int8 *)(v40 + 16);
        swift_release(v40);
        if (v41 == 3)
        {
          *(_BYTE *)(v140 + v5) = 1;
          sub_1006A79A8(v26, (char)v10);
        }
        goto LABEL_131;
      }
      goto LABEL_130;
    }
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  v36 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v24);
  if (v36)
    goto LABEL_26;
LABEL_110:

  swift_bridgeObjectRelease(v27);
}

void sub_1006A72F4(_BYTE *a1, unsigned __int8 a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  CKRecordID v63;
  Swift::String v64;
  unsigned __int8 v65;
  _BYTE *v66;
  char *v67;
  char v68[72];
  _QWORD v69[3];
  uint64_t ObjectType;
  char v71[72];
  _BYTE v72[24];
  char v73[32];

  v3 = v2;
  v6 = type metadata accessor for CRLCommandGroup();
  if (!swift_dynamicCastClass(a1, v6) || (v7 = a1, v8 = sub_10074D90C(), v7, (v8 & 1) == 0))
  {
    v9 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
    swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v73, 0, 0);
    v10 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      if (v10 < 0)
        v45 = *v9;
      else
        v45 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v9);
      v11 = _CocoaArrayWrapper.endIndex.getter(v45);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11 < 1 || a2 == 0)
      goto LABEL_17;
    v13 = *v9;
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v62 = v13;
      else
        v62 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v62);
      if (v14)
      {
LABEL_11:
        v15 = v14 - 1;
        if (__OFSUB__(v14, 1))
          goto LABEL_53;
        if ((v13 & 0xC000000000000001) != 0)
          goto LABEL_54;
        if ((v15 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v15 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v16 = *(_QWORD *)(v13 + 8 * v15 + 32);
          swift_retain(v16);
          while (1)
          {
            swift_bridgeObjectRelease(v13);
            v17 = *(unsigned __int8 *)(v16 + 16);
            swift_release(v16);
            if (v17 == 3)
              break;
LABEL_52:
            v6 = 2;
            v13 = (uint64_t)"Non user command enqueued while a group was open.";
            v3 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
            sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(command:commandType:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 836, "Non user command enqueued while a group was open.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non user command enqueued while a group was open.");
            sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(command:commandType:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 836, (uint64_t)"Non user command enqueued while a group was open.", 49, 2u);
            SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v63, v64);
            v15 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
          }
LABEL_17:
          v18 = swift_dynamicCastClass(a1, v6);
          if (!v18)
          {
            if (qword_1013DD878 == -1)
            {
LABEL_32:
              swift_beginAccess(&static OS_os_log.commandController, v72, 0, 0);
              v34 = (void *)static OS_os_log.commandController;
              v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              inited = swift_initStackObject(v35, v71);
              *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
              v69[0] = swift_getObjectType(a1);
              v37 = v34;
              v38 = sub_1004B804C(&qword_1013EBC28);
              v39 = String.init<A>(describing:)(v69, v38);
              v41 = v40;
              *(_QWORD *)(inited + 56) = &type metadata for String;
              *(_QWORD *)(inited + 64) = sub_1004CFC2C();
              *(_QWORD *)(inited + 32) = v39;
              *(_QWORD *)(inited + 40) = v41;
              v43 = static os_log_type_t.default.getter(v42);
              sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v43, "About to execute command of class: %{public}@", 45, 2, inited);
              swift_setDeallocating(inited);
              v44 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(inited + 32, 1, v44);
LABEL_45:

              v59 = a1[OBJC_IVAR____TtC8Freeform10CRLCommand_shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup];
              v60 = a1;
              v61 = v3;
              sub_1006ADACC(a2, v59, (uint64_t)v61, a2, v60, v61);

              return;
            }
LABEL_58:
            swift_once(&qword_1013DD878, sub_100A05B34);
            goto LABEL_32;
          }
          v19 = (uint64_t *)(v18 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
          swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands, v72, 0, 0);
          v20 = *v19;
          if ((unint64_t)*v19 >> 62)
          {
            if (v20 < 0)
              v46 = *v19;
            else
              v46 = v20 & 0xFFFFFFFFFFFFFF8;
            v47 = a1;
            swift_bridgeObjectRetain(v20);
            v21 = _CocoaArrayWrapper.endIndex.getter(v46);
            v66 = a1;
            v67 = v3;
            if (v21)
            {
LABEL_20:
              v69[0] = _swiftEmptyArrayStorage;
              sub_1006006EC(0, v21 & ~(v21 >> 63), 0);
              if ((v21 & 0x8000000000000000) == 0)
              {
                v65 = a2;
                v23 = 0;
                v24 = (_QWORD *)v69[0];
                do
                {
                  if ((v20 & 0xC000000000000001) != 0)
                    v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v20);
                  else
                    v25 = *(id *)(v20 + 8 * v23 + 32);
                  v26 = v25;
                  ObjectType = swift_getObjectType(v25);
                  v27 = sub_1004B804C(&qword_1013EBC28);
                  v28 = String.init<A>(describing:)(&ObjectType, v27);
                  v30 = v29;

                  v69[0] = v24;
                  if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
                  {
                    sub_1006006EC(0, v24[2] + 1, 1);
                    v24 = (_QWORD *)v69[0];
                  }
                  v32 = v24[2];
                  v31 = v24[3];
                  if (v32 >= v31 >> 1)
                  {
                    sub_1006006EC(v31 > 1, v32 + 1, 1);
                    v24 = (_QWORD *)v69[0];
                  }
                  ++v23;
                  v24[2] = v32 + 1;
                  v33 = &v24[2 * v32];
                  v33[4] = v28;
                  v33[5] = v30;
                }
                while (v21 != v23);
                swift_bridgeObjectRelease(v20);
                a2 = v65;
                goto LABEL_42;
              }
              goto LABEL_57;
            }
          }
          else
          {
            v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
            v22 = a1;
            swift_bridgeObjectRetain(v20);
            v66 = a1;
            v67 = v3;
            if (v21)
              goto LABEL_20;
          }
          swift_bridgeObjectRelease(v20);
          v24 = _swiftEmptyArrayStorage;
LABEL_42:
          v69[0] = v24;
          v48 = sub_1004B804C((uint64_t *)&unk_1013E4970);
          v49 = sub_100500464();
          v50 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v48, v49);
          v52 = v51;
          swift_bridgeObjectRelease(v24);
          if (qword_1013DD878 != -1)
            swift_once(&qword_1013DD878, sub_100A05B34);
          swift_beginAccess(&static OS_os_log.commandController, v69, 0, 0);
          v53 = (void *)static OS_os_log.commandController;
          v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v55 = swift_initStackObject(v54, v68);
          *(_OWORD *)(v55 + 16) = xmmword_100EF5E40;
          *(_QWORD *)(v55 + 56) = &type metadata for String;
          *(_QWORD *)(v55 + 64) = sub_1004CFC2C();
          *(_QWORD *)(v55 + 32) = v50;
          *(_QWORD *)(v55 + 40) = v52;
          v37 = v53;
          v57 = static os_log_type_t.default.getter(v56);
          sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v57, "About to execute command group composed of command classes: %{public}@", 70, 2, v55);
          swift_setDeallocating(v55);
          v58 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v55 + 32, 1, v58);
          a1 = v66;

          v3 = v67;
          goto LABEL_45;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      if (v14)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease(v13);
    goto LABEL_52;
  }
}

void sub_1006A79A8(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider);
  if (!v3 || (*(_BYTE *)(v3 + 40) & 1) != 0)
    return;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v6, v16, 0, 0);
  v7 = *v6;
  if (!((unint64_t)*v6 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain(v3);
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_5;
LABEL_19:
    swift_unknownObjectRelease(v3);
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v15 = *v6;
  else
    v15 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_unknownObjectRetain(v3);
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v8)
    goto LABEL_19;
LABEL_5:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v10 = *(_QWORD *)(v7 + 8 * v9 + 32);
      swift_retain(v10);
      goto LABEL_10;
    }
    __break(1u);
    return;
  }
  v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
LABEL_10:
  swift_bridgeObjectRelease(v7);
  v11 = *(unsigned __int8 *)(v10 + 16);
  v12 = swift_release(v10);
  if (v11 == 3 && !a2)
  {
    v13 = (*(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0x88))(v12);
    if (v13)
    {
      v14 = v13;
      sub_10066B0B0(v13);
      swift_bridgeObjectRelease(v14);
    }
  }
  swift_unknownObjectRelease(v3);
}

uint64_t sub_1006A7B34(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  CKRecordID v8;
  int v9;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandHistoryItem:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 875, "Executing an action while a transaction context was already open.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Executing an action while a transaction context was already open.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandHistoryItem:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 875, (uint64_t)"Executing an action while a transaction context was already open.", 65, 2u);
LABEL_9:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, *(Swift::String *)&v9);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return result;
  }
  v5 = *a1;
  v4 = (void *)a1[1];
  swift_bridgeObjectRetain(*a1);
  sub_1006AFF58(0, 1, v2, v5);
  swift_bridgeObjectRelease(v5);
  if ((a2 & 1) != 0)
    v6 = 2;
  else
    v6 = 1;
  result = sub_1006AE21C(v4, v6, 4);
  if (!result)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_enqueue(commandHistoryItem:isRedo:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 398, "Failed to create CRLUndoingAction", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Failed to create CRLUndoingAction");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(commandHistoryItem:isRedo:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 398, (uint64_t)"Failed to create CRLUndoingAction", 33, 2u);
    goto LABEL_9;
  }
  return result;
}

void sub_1006A7D24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  _BYTE v36[24];
  char v37[24];
  char v38[72];
  char v39[24];
  char v40[32];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v40, 0, 0);
  v10 = *v9;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v11 = v10;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v10);
    if (v12 > 0)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_3:
    sub_100757E04(&_mh_execute_header, (uint64_t)"undo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 407, "Should not call undo() while a command group is already open.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"undo()", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 407, (uint64_t)"Should not call undo() while a command group is already open.", 61, 2u);
    return;
  }
  v35 = (id)objc_opt_self(NSNotificationCenter);
  v13 = objc_msgSend(v35, "defaultCenter");
  if (qword_1013DCD50 != -1)
    swift_once(&qword_1013DCD50, sub_1006A51C8);
  v14 = v5;
  objc_msgSend(v13, "postNotificationName:object:", qword_10147F010, v1, v13);
  if (qword_1013DD8B8 != -1)
    swift_once(&qword_1013DD8B8, sub_100A06704);
  swift_beginAccess(&static OS_os_log.boardItemLifecycle, v39, 0, 0);
  v15 = (void *)static OS_os_log.boardItemLifecycle;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v38);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v18 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_board]
                  + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v37, 0, 0);
  sub_1004B8460(v19, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  v20 = v15;
  swift_retain(v18);
  v21 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v21);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v18);
  v23 = UUID.uuidString.getter(v22);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(inited + 40) = v25;
  v27 = static os_log_type_t.default.getter(v26);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v27, "⬅️ Perform undo(). Board: %{public}@", 40, 0, inited);
  swift_setDeallocating(inited);
  v28 = *(_QWORD *)(inited + 16);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v28, v29);

  v30 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory], v36, 33, 0);
  v31 = v1;
  sub_100A07F94(v30);
  swift_endAccess(v36);

  v32 = objc_msgSend(v35, "defaultCenter");
  if (qword_1013DCD90 != -1)
    swift_once(&qword_1013DCD90, sub_1006A538C);
  objc_msgSend(v32, "postNotificationName:object:", qword_10147F050, v31);

  if (qword_1013DCD58 != -1)
    swift_once(&qword_1013DCD58, sub_1006A51FC);
  v33 = v34;
  objc_msgSend(v34, "postNotificationName:object:", qword_10147F018, v31);

}

void sub_1006A8214()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  char *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  _BYTE v36[24];
  char v37[24];
  char v38[72];
  char v39[24];
  char v40[32];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v40, 0, 0);
  v10 = *v9;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v11 = v10;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v10);
    if (v12 > 0)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_3:
    sub_100757E04(&_mh_execute_header, (uint64_t)"redo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 426, "Should not call redo() while a command group is already open.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"redo()", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 426, (uint64_t)"Should not call redo() while a command group is already open.", 61, 2u);
    return;
  }
  v35 = (id)objc_opt_self(NSNotificationCenter);
  v13 = objc_msgSend(v35, "defaultCenter");
  if (qword_1013DCD60 != -1)
    swift_once(&qword_1013DCD60, sub_1006A5230);
  v14 = v5;
  objc_msgSend(v13, "postNotificationName:object:", qword_10147F020, v1, v13);
  if (qword_1013DD8B8 != -1)
    swift_once(&qword_1013DD8B8, sub_100A06704);
  swift_beginAccess(&static OS_os_log.boardItemLifecycle, v39, 0, 0);
  v15 = (void *)static OS_os_log.boardItemLifecycle;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v38);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v18 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_board]
                  + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v37, 0, 0);
  sub_1004B8460(v19, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  v20 = v15;
  swift_retain(v18);
  v21 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v21);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v18);
  v23 = UUID.uuidString.getter(v22);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(inited + 40) = v25;
  v27 = static os_log_type_t.default.getter(v26);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v27, "➡️ Perform redo(). Board: %{public}@", 40, 0, inited);
  swift_setDeallocating(inited);
  v28 = *(_QWORD *)(inited + 16);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v28, v29);

  v30 = (unint64_t *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory], v36, 33, 0);
  v31 = v1;
  sub_100A08344(v30);
  swift_endAccess(v36);

  v32 = objc_msgSend(v35, "defaultCenter");
  if (qword_1013DCD90 != -1)
    swift_once(&qword_1013DCD90, sub_1006A538C);
  objc_msgSend(v32, "postNotificationName:object:", qword_10147F050, v31);

  if (qword_1013DCD68 != -1)
    swift_once(&qword_1013DCD68, sub_1006A5264);
  v33 = v34;
  objc_msgSend(v34, "postNotificationName:object:", qword_10147F028, v31);

}

BOOL sub_1006A8734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v3 = *(void **)(v2 + 16);
  if (!v3)
    goto LABEL_4;
  swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
  v4 = v3;
  v5 = objc_msgSend(v4, "currentUserParticipant");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "permission");
    swift_release(v2);

    if (v7 == (id)3)
    {
LABEL_4:
      v8 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory, v11, 0, 0);
      return *(_QWORD *)(*(_QWORD *)v8 + 16) != 0;
    }
  }
  else
  {
    v10 = objc_msgSend(v4, "publicPermission");
    swift_release(v2);

    if (v10 == (id)3)
      goto LABEL_4;
  }
  return 0;
}

BOOL sub_1006A886C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v3 = *(void **)(v2 + 16);
  if (!v3)
    goto LABEL_4;
  swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
  v4 = v3;
  v5 = objc_msgSend(v4, "currentUserParticipant");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "permission");
    swift_release(v2);

    if (v7 == (id)3)
    {
LABEL_4:
      v8 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory, v11, 0, 0);
      return *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16) != 0;
    }
  }
  else
  {
    v10 = objc_msgSend(v4, "publicPermission");
    swift_release(v2);

    if (v10 == (id)3)
      goto LABEL_4;
  }
  return 0;
}

uint64_t sub_1006A89A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v3 = *(void **)(v2 + 16);
  if (!v3)
    goto LABEL_4;
  swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
  v4 = v3;
  v5 = objc_msgSend(v4, "currentUserParticipant");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "permission");
    swift_release(v2);

    if (v7 == (id)3)
    {
LABEL_4:
      v8 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory, v11, 0, 0);
      return *(_QWORD *)(*(_QWORD *)v8 + 16);
    }
  }
  else
  {
    v10 = objc_msgSend(v4, "publicPermission");
    swift_release(v2);

    if (v10 == (id)3)
      goto LABEL_4;
  }
  return 0;
}

uint64_t sub_1006A8AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v3 = *(void **)(v2 + 16);
  if (!v3)
    goto LABEL_4;
  swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
  v4 = v3;
  v5 = objc_msgSend(v4, "currentUserParticipant");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "permission");
    swift_release(v2);

    if (v7 == (id)3)
    {
LABEL_4:
      v8 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory, v11, 0, 0);
      return *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16);
    }
  }
  else
  {
    v10 = objc_msgSend(v4, "publicPermission");
    swift_release(v2);

    if (v10 == (id)3)
      goto LABEL_4;
  }
  return 0;
}

void sub_1006A8ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue);
  swift_beginAccess(v2, v12, 0, 0);
  if (*(_QWORD *)(*v2 + 16))
  {
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v11, 0, 0);
    v4 = *v3;
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v8 = v4;
      else
        v8 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(v4);
      if (v9 < 1)
        goto LABEL_6;
    }
    else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    {
LABEL_6:
      swift_beginAccess(v2, v10, 33, 0);
      v5 = *v2;
      if (*(_QWORD *)(*v2 + 16))
      {
        v6 = *(unsigned __int8 *)(v5 + 40);
        v7 = *(id *)(v5 + 32);
        sub_100CFE73C(0, 1);
        swift_endAccess(v10);
        sub_1006A5F54(v7, v6, 0, 4, 0);

      }
      else
      {
        __break(1u);
      }
      return;
    }
    if (!*(_QWORD *)(*v2 + 16) || !*(_BYTE *)(*v2 + 40))
      goto LABEL_6;
  }
}

unint64_t sub_1006A912C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v11, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v3)
    goto LABEL_15;
LABEL_3:
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(v2 + 8 * result + 32);
    swift_retain(v5);
LABEL_8:
    swift_bridgeObjectRelease(v2);
    v6 = *(id *)(v5 + 24);
    swift_release(v5);
    sub_1006A574C();
    if (!v8)
      sub_10074D0E8();
    v9 = v7;

    return v9;
  }
  __break(1u);
  return result;
}

void sub_1006A92B4(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  CKRecordID v15;
  Swift::String v16;
  uint64_t v17;
  _BYTE v18[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v18, 0, 0);
  v6 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
LABEL_15:
    a2 = _swiftEmptyArrayStorage;
    a1 = 59;
    v7 = (uint64_t)"currentGroupActionString";
    sub_100757E04(&_mh_execute_header, (uint64_t)"currentGroupActionString", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 574, "Tried to set currentGroupActionString when no group is open", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to set currentGroupActionString when no group is open");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"currentGroupActionString", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 574, (uint64_t)"Tried to set currentGroupActionString when no group is open", 59, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    goto LABEL_16;
  }
  if (v6 < 0)
    v13 = *v5;
  else
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v14 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v6);
  if (v14 < 1)
    goto LABEL_15;
LABEL_3:
  v7 = *v5;
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease(a2);
    goto LABEL_21;
  }
LABEL_16:
  if (v7 < 0)
    v17 = v7;
  else
    v17 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v8)
    goto LABEL_20;
LABEL_5:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_23:
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_10;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(v7 + 8 * v9 + 32);
    swift_retain(v10);
LABEL_10:
    swift_bridgeObjectRelease(v7);
    v11 = (char *)*(id *)(v10 + 24);
    swift_release(v10);
    v12 = (uint64_t *)&v11[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString];
    v7 = *(_QWORD *)&v11[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString
                       + 8];
    *v12 = a1;
    v12[1] = (uint64_t)a2;

LABEL_21:
    swift_bridgeObjectRelease(v7);
    return;
  }
  __break(1u);
}

double sub_1006A9664(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = v1;
  sub_1006A5C18(a1);
  v3 = type metadata accessor for CRLCommandController.CommandGroupData();
  v4 = swift_allocObject(v3, 33, 7);
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup()), "init");
  *(_BYTE *)(v4 + 32) = 0;
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  v6 = swift_beginAccess(v5, v15, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v8 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v4);
  specialized Array._endMutation()(v9);
  swift_endAccess(v15);
  v11 = *v5;
  if (!((unint64_t)v11 >> 62))
  {
    if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
      return result;
    goto LABEL_5;
  }
  if (v11 < 0)
    v13 = v11;
  else
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v14 = _CocoaArrayWrapper.endIndex.getter(v13);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  if (v14 <= 1)
  {
LABEL_5:
    v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCD30 != -1)
      swift_once(&qword_1013DCD30, sub_1006A50F8);
    objc_msgSend(v12, "postNotificationName:object:", qword_10147EFF0, v2);

  }
  return result;
}

void sub_1006A984C(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CKRecordID v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];

  v3 = v1;
  v5 = (char *)v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v27, 0, 0);
  v6 = *(_QWORD *)v5;
  if (!(*(_QWORD *)v5 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
LABEL_23:
    v3 = _swiftEmptyArrayStorage;
    v2 = 28;
    v7 = (uint64_t)"Mismatched open/close group.";
    v5 = "closeGroup(withSelectionBehavior:)";
    a1 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
    sub_100757E04(&_mh_execute_header, (uint64_t)"closeGroup(withSelectionBehavior:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 616, "Mismatched open/close group.", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Mismatched open/close group.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"closeGroup(withSelectionBehavior:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 616, (uint64_t)"Mismatched open/close group.", 28, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, v19);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
LABEL_24:
    if (v7 < 0)
      v20 = v7;
    else
      v20 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v7);
    if (v21 > 1)
      goto LABEL_8;
    goto LABEL_5;
  }
  if (v6 < 0)
    v16 = *(_QWORD *)v5;
  else
    v16 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v5);
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v6);
  if (v17 < 1)
    goto LABEL_23;
LABEL_3:
  v7 = *(_QWORD *)v5;
  if (*(_QWORD *)v5 >> 62)
    goto LABEL_24;
  if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
    goto LABEL_8;
LABEL_5:
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCD38 != -1)
    swift_once(&qword_1013DCD38, sub_1006A512C);
  objc_msgSend(v8, "postNotificationName:object:", qword_10147EFF8, v3);

LABEL_8:
  swift_beginAccess(v5, v26, 33, 0);
  v9 = *(_QWORD *)v5;
  if (!(*(_QWORD *)v5 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_10;
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v9 < 0)
    v22 = *(_QWORD *)v5;
  else
    v22 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v5);
  v10 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v9);
  if (!v10)
    goto LABEL_33;
LABEL_10:
  v11 = sub_100BE8984();
  if (v11)
    goto LABEL_14;
  v12 = *(_QWORD *)v5;
  if (*(_QWORD *)v5 >> 62)
  {
    if (v12 < 0)
      v25 = *(_QWORD *)v5;
    else
      v25 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v5);
    v10 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v12);
    v13 = v10 - 1;
    if (!__OFSUB__(v10, 1))
      goto LABEL_13;
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v10 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v10 - 1;
  if (__OFSUB__(v10, 1))
    goto LABEL_44;
LABEL_13:
  v11 = sub_100C5C654(v13);
LABEL_14:
  v10 = v11;
  swift_endAccess(v26);
  v14 = *(unsigned __int8 *)(v10 + 32);
  v15 = *(unsigned __int8 *)(v10 + 16);
  v2 = (uint64_t)*(id *)(v10 + 24);
  sub_1006A5F54((_BYTE *)v2, 0, a1, v15, v14);
  v9 = *(_QWORD *)v5;
  if (!(*(_QWORD *)v5 >> 62))
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_34:
  if (v9 < 0)
    v23 = v9;
  else
    v23 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v9);
  if (!v24)
  {
LABEL_16:
    v12 = (uint64_t)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCD40 == -1)
    {
LABEL_17:
      objc_msgSend((id)v12, "postNotificationName:object:", qword_10147F000, v3);

      goto LABEL_18;
    }
LABEL_45:
    swift_once(&qword_1013DCD40, sub_1006A5160);
    goto LABEL_17;
  }
LABEL_18:
  swift_release(v10);

}

void sub_1006A9C98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CKRecordID v6;
  Swift::String v7;
  _BYTE v8[24];

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 641, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 641, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v8, 0, 0);
  v2 = *v1;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v5 = v2;
    else
      v5 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    if (_CocoaArrayWrapper.endIndex.getter(v5))
    {
LABEL_5:
      if ((v2 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
      }
      else
      {
        if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_17:
          sub_100757E04(&_mh_execute_header, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 648, "Can not call destroyOutermostCommandGroupOnClose() more than once on the same group.", 84, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() more than once on the same group.");
          sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 648, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() more than once on the same group.", 84, 2u);
          goto LABEL_18;
        }
        v4 = *(_QWORD *)(v2 + 32);
        swift_retain(v4);
      }
      swift_bridgeObjectRelease(v2);
      if ((*(_BYTE *)(v4 + 32) & 1) == 0)
      {
        *(_BYTE *)(v4 + 32) = 1;
        swift_release(v4);
        return;
      }
      goto LABEL_17;
    }
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(v2);
  sub_100757E04(&_mh_execute_header, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 644, "Can not call destroyOutermostCommandGroupOnClose() without an open command group.", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() without an open command group.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 644, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() without an open command group.", 81, 2u);
LABEL_18:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v6, v7);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

void sub_1006A9FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  CKRecordID v11;
  Swift::String v12;
  uint64_t v13;
  _BYTE v14[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v14, 0, 0);
  v2 = *(_QWORD *)v1;
  if (!(*(_QWORD *)v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)v1);
    if (v3)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(v2);
    v1 = (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()";
    v2 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
    sub_100757E04(&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    v4 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    goto LABEL_24;
  }
  if (v2 < 0)
    v10 = *(_QWORD *)v1;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v3)
    goto LABEL_23;
LABEL_3:
  v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_25:
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    goto LABEL_8;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v4 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v3 = *(_QWORD *)(v2 + 8 * v4 + 32);
  swift_retain(v3);
LABEL_8:
  swift_bridgeObjectRelease(v2);
  v5 = *(unsigned __int8 *)(v3 + 16);
  if (v5 == 3 || v5 == 2 || v5 == 1)
    goto LABEL_33;
  v1 = *(_QWORD *)v1;
  if (!((unint64_t)v1 >> 62))
  {
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v1, 2);
    if (v6)
      goto LABEL_13;
LABEL_32:
    swift_bridgeObjectRelease_n(v1, 2);
    *(_BYTE *)(v3 + 16) = 1;
LABEL_33:
    swift_release(v3);
    return;
  }
LABEL_28:
  if (v1 < 0)
    v13 = v1;
  else
    v13 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v1, 2);
  v6 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v6)
    goto LABEL_32;
LABEL_13:
  if (v6 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
      }
      else
      {
        v8 = *(_QWORD *)(v1 + 8 * v7 + 32);
        swift_retain(v8);
      }
      ++v7;
      v9 = *(id *)(v8 + 24);
      sub_1006A72F4(v9, 0);
      swift_release(v8);

    }
    while (v6 != v7);
    goto LABEL_32;
  }
  __break(1u);
}

unint64_t sub_1006AA310()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v8, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(v2 + 8 * result + 32);
    swift_retain(v5);
LABEL_8:
    swift_bridgeObjectRelease(v2);
    v6 = *(unsigned __int8 *)(v5 + 16);
    swift_release(v5);
    return (v6 - 1) < 3;
  }
  __break(1u);
  return result;
}

void sub_1006AA414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  CKRecordID v11;
  Swift::String v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  char v24[24];
  char v25[24];

  v2 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v25, 0, 0);
  v3 = *(_QWORD *)v2;
  if (*(_QWORD *)v2 >> 62)
  {
    if (v3 < 0)
      v10 = *(_QWORD *)v2;
    else
      v10 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v2);
    v4 = (double *)_CocoaArrayWrapper.endIndex.getter(v10);
    if (v4)
    {
LABEL_3:
      v5 = (unint64_t)v4 - 1;
      if (__OFSUB__(v4, 1))
      {
        __break(1u);
      }
      else if ((v3 & 0xC000000000000001) == 0)
      {
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_25;
        }
        if (v5 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_49;
        }
        v4 = *(double **)(v3 + 8 * v5 + 32);
        swift_retain(v4);
LABEL_8:
        swift_bridgeObjectRelease(v3);
        v3 = *(_QWORD *)v2;
        if (!(*(_QWORD *)v2 >> 62))
        {
          v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*(_QWORD *)v2);
          if (v6)
          {
LABEL_10:
            v7 = v6 - 1;
            if (__OFSUB__(v6, 1))
              goto LABEL_59;
            if ((v3 & 0xC000000000000001) != 0)
              goto LABEL_60;
            if ((v7 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v7 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v8 = *(_QWORD *)(v3 + 8 * v7 + 32);
              swift_retain(v8);
              while (1)
              {
                swift_bridgeObjectRelease(v3);
                v9 = *(unsigned __int8 *)(v8 + 16);
                swift_release(v8);
                if ((v9 - 1) < 3)
                  goto LABEL_69;
LABEL_30:
                v1 = *(_QWORD *)v2;
                if (*(_QWORD *)v2 >> 62)
                {
LABEL_49:
                  if (v1 < 0)
                    v19 = v1;
                  else
                    v19 = v1 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v1);
                  v3 = _CocoaArrayWrapper.endIndex.getter(v19);
                  if (!v3)
                  {
LABEL_53:
                    swift_bridgeObjectRelease(v1);
                    v4 = _swiftEmptyArrayStorage;
                    v1 = 2;
                    v2 = (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()";
                    sub_100757E04(&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
                    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u);
                    goto LABEL_54;
                  }
                }
                else
                {
                  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain(*(_QWORD *)v2);
                  if (!v3)
                    goto LABEL_53;
                }
                v7 = v3 - 1;
                if (__OFSUB__(v3, 1))
                  goto LABEL_55;
                if ((v1 & 0xC000000000000001) != 0)
                  goto LABEL_56;
                if ((v7 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v3 = *(_QWORD *)(v1 + 8 * v7 + 32);
                  swift_retain(v3);
                  goto LABEL_37;
                }
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
              }
            }
            __break(1u);
            goto LABEL_63;
          }
LABEL_29:
          swift_bridgeObjectRelease(v3);
          goto LABEL_30;
        }
LABEL_25:
        if (v3 < 0)
          v13 = v3;
        else
          v13 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v3);
        v6 = _CocoaArrayWrapper.endIndex.getter(v13);
        if (v6)
          goto LABEL_10;
        goto LABEL_29;
      }
      v4 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      goto LABEL_8;
    }
  }
  else
  {
    v4 = *(double **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)v2);
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v3);
  v4 = _swiftEmptyArrayStorage;
  v1 = 2;
  v2 = (uint64_t)"enableRealTimeSyncProgressiveEnqueuingInCurrentGroup()";
  sub_100757E04(&_mh_execute_header, (uint64_t)"enableRealTimeSyncProgressiveEnqueuingInCurrentGroup()", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 719, "enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.", 88, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableRealTimeSyncProgressiveEnqueuingInCurrentGroup()", 54, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 719, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.", 88, 2u);
LABEL_54:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
  v7 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
LABEL_37:
  swift_bridgeObjectRelease(v1);
  v14 = *(unsigned __int8 *)(v3 + 16);
  if (v14 == 3 || v14 == 2 || v14 == 1)
    goto LABEL_68;
  v2 = *(_QWORD *)v2;
  if ((unint64_t)v2 >> 62)
  {
LABEL_63:
    if (v2 < 0)
      v20 = v2;
    else
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
    v15 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v15)
      goto LABEL_67;
LABEL_42:
    if (v15 < 1)
    {
      __break(1u);
      return;
    }
    v16 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v2);
      }
      else
      {
        v17 = *(_QWORD *)(v2 + 8 * v16 + 32);
        swift_retain(v17);
      }
      ++v16;
      v18 = *(id *)(v17 + 24);
      sub_1006A72F4(v18, 0);
      swift_release(v17);

    }
    while (v15 != v16);
    goto LABEL_67;
  }
  v15 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v2, 2);
  if (v15)
    goto LABEL_42;
LABEL_67:
  swift_bridgeObjectRelease_n(v2, 2);
  *(_BYTE *)(v3 + 16) = 1;
LABEL_68:
  swift_release(v3);
LABEL_69:
  if (((_BYTE)v4[2] & 0xFE) != 2)
  {
    if (qword_1013DD878 != -1)
      swift_once(&qword_1013DD878, sub_100A05B34);
    swift_beginAccess(&static OS_os_log.commandController, v24, 0, 0);
    v21 = (id)static OS_os_log.commandController;
    v23 = static os_log_type_t.debug.getter(v22);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "simultaneous NOT enabled [setting isProgressiveAndRealTimeSync to true]", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

    *((_BYTE *)v4 + 16) = 2;
    sub_1006AB1AC();
  }
  swift_release(v4);
}

void sub_1006AA9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  CKRecordID v11;
  Swift::String v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  char v24[24];
  char v25[24];

  v2 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v25, 0, 0);
  v3 = *(_QWORD *)v2;
  if (*(_QWORD *)v2 >> 62)
  {
    if (v3 < 0)
      v10 = *(_QWORD *)v2;
    else
      v10 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v2);
    v4 = (double *)_CocoaArrayWrapper.endIndex.getter(v10);
    if (v4)
    {
LABEL_3:
      v5 = (unint64_t)v4 - 1;
      if (__OFSUB__(v4, 1))
      {
        __break(1u);
      }
      else if ((v3 & 0xC000000000000001) == 0)
      {
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_25;
        }
        if (v5 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_49;
        }
        v4 = *(double **)(v3 + 8 * v5 + 32);
        swift_retain(v4);
LABEL_8:
        swift_bridgeObjectRelease(v3);
        v3 = *(_QWORD *)v2;
        if (!(*(_QWORD *)v2 >> 62))
        {
          v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*(_QWORD *)v2);
          if (v6)
          {
LABEL_10:
            v7 = v6 - 1;
            if (__OFSUB__(v6, 1))
              goto LABEL_59;
            if ((v3 & 0xC000000000000001) != 0)
              goto LABEL_60;
            if ((v7 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v7 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v8 = *(_QWORD *)(v3 + 8 * v7 + 32);
              swift_retain(v8);
              while (1)
              {
                swift_bridgeObjectRelease(v3);
                v9 = *(unsigned __int8 *)(v8 + 16);
                swift_release(v8);
                if ((v9 - 1) < 3)
                  goto LABEL_69;
LABEL_30:
                v1 = *(_QWORD *)v2;
                if (*(_QWORD *)v2 >> 62)
                {
LABEL_49:
                  if (v1 < 0)
                    v19 = v1;
                  else
                    v19 = v1 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v1);
                  v3 = _CocoaArrayWrapper.endIndex.getter(v19);
                  if (!v3)
                  {
LABEL_53:
                    swift_bridgeObjectRelease(v1);
                    v4 = _swiftEmptyArrayStorage;
                    v1 = 2;
                    v2 = (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()";
                    sub_100757E04(&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
                    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u);
                    goto LABEL_54;
                  }
                }
                else
                {
                  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain(*(_QWORD *)v2);
                  if (!v3)
                    goto LABEL_53;
                }
                v7 = v3 - 1;
                if (__OFSUB__(v3, 1))
                  goto LABEL_55;
                if ((v1 & 0xC000000000000001) != 0)
                  goto LABEL_56;
                if ((v7 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v3 = *(_QWORD *)(v1 + 8 * v7 + 32);
                  swift_retain(v3);
                  goto LABEL_37;
                }
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
              }
            }
            __break(1u);
            goto LABEL_63;
          }
LABEL_29:
          swift_bridgeObjectRelease(v3);
          goto LABEL_30;
        }
LABEL_25:
        if (v3 < 0)
          v13 = v3;
        else
          v13 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v3);
        v6 = _CocoaArrayWrapper.endIndex.getter(v13);
        if (v6)
          goto LABEL_10;
        goto LABEL_29;
      }
      v4 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      goto LABEL_8;
    }
  }
  else
  {
    v4 = *(double **)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)v2);
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v3);
  v4 = _swiftEmptyArrayStorage;
  v1 = 2;
  v2 = (uint64_t)"enableRealTimeSyncProgressiveEnqueuingWithSimultaneousRealtimeIncomingInCurrentGroup()";
  sub_100757E04(&_mh_execute_header, (uint64_t)"enableRealTimeSyncProgressiveEnqueuingWithSimultaneousRealtimeIncomingInCurrentGroup()", 86, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 739, "enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.", 88, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableRealTimeSyncProgressiveEnqueuingWithSimultaneousRealtimeIncomingInCurrentGroup()", 86, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 739, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.", 88, 2u);
LABEL_54:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
  v7 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
LABEL_37:
  swift_bridgeObjectRelease(v1);
  v14 = *(unsigned __int8 *)(v3 + 16);
  if (v14 == 3 || v14 == 2 || v14 == 1)
    goto LABEL_68;
  v2 = *(_QWORD *)v2;
  if ((unint64_t)v2 >> 62)
  {
LABEL_63:
    if (v2 < 0)
      v20 = v2;
    else
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
    v15 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v15)
      goto LABEL_67;
LABEL_42:
    if (v15 < 1)
    {
      __break(1u);
      return;
    }
    v16 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v2);
      }
      else
      {
        v17 = *(_QWORD *)(v2 + 8 * v16 + 32);
        swift_retain(v17);
      }
      ++v16;
      v18 = *(id *)(v17 + 24);
      sub_1006A72F4(v18, 0);
      swift_release(v17);

    }
    while (v15 != v16);
    goto LABEL_67;
  }
  v15 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v2, 2);
  if (v15)
    goto LABEL_42;
LABEL_67:
  swift_bridgeObjectRelease_n(v2, 2);
  *(_BYTE *)(v3 + 16) = 1;
LABEL_68:
  swift_release(v3);
LABEL_69:
  if (*((_BYTE *)v4 + 16) != 3)
  {
    if (qword_1013DD878 != -1)
      swift_once(&qword_1013DD878, sub_100A05B34);
    swift_beginAccess(&static OS_os_log.commandController, v24, 0, 0);
    v21 = (id)static OS_os_log.commandController;
    v23 = static os_log_type_t.debug.getter(v22);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "simultaneous enabled [setting isRealTimeSyncProgressiveWithSimultaneousRealtimeIncoming to true]", 96, 2, (uint64_t)_swiftEmptyArrayStorage);

    *((_BYTE *)v4 + 16) = 3;
    sub_1006AB1AC();
  }
  swift_release(v4);
}

unint64_t sub_1006AAF78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v8, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(v2 + 8 * result + 32);
    swift_retain(v5);
LABEL_8:
    swift_bridgeObjectRelease(v2);
    v6 = *(_BYTE *)(v5 + 16);
    swift_release(v5);
    return (v6 & 0xFE) == 2;
  }
  __break(1u);
  return result;
}

unint64_t sub_1006AB0AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v8, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(v2 + 8 * result + 32);
    swift_retain(v5);
LABEL_8:
    swift_bridgeObjectRelease(v2);
    v6 = *(unsigned __int8 *)(v5 + 16);
    swift_release(v5);
    return v6 == 3;
  }
  __break(1u);
  return result;
}

void sub_1006AB1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v34;
  char v35[24];

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (_QWORD *)((char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v9);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext);
  if (v12)
  {
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v13, v35, 0, 0);
    sub_1004CB7BC(v13, (uint64_t)v11, (uint64_t *)&unk_101405E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
    {
      sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101405E90);
      return;
    }
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    swift_retain(v12);
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101405E90);
    v14 = *v8;
    swift_retain(*v8);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    v15 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext;
    v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext);
    if (!v16)
    {
      v17 = type metadata accessor for CRLWatermarkTransactionContext(0);
      v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
      v19 = *(_BYTE *)(v12 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges);
      v20 = swift_retain(v12);
      if ((v19 & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 560, "Should not be trying to watermark a transaction that doesnt want to be tracked.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2u, 560, (uint64_t)"Should not be trying to watermark a transaction that doesnt want to be tracked.", 79, 2u);
      }
      v21 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
      v22 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v4, v12 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id, v1, v20);
      swift_unknownObjectRetain(v21);
      swift_release(v12);
      ObjectType = swift_getObjectType(v21);
      v24 = sub_100DBE750(v21, 0, 1, (uint64_t)v4, 1, v18, ObjectType, v22);
      *(_BYTE *)(v24 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 0;
      v25 = *(_QWORD *)(v0 + v15);
      *(_QWORD *)(v0 + v15) = v24;
      swift_release(v25);
      v16 = *(_QWORD *)(v0 + v15);
      if (!v16)
      {
        __break(1u);
        return;
      }
    }
    swift_retain(v16);
    v26 = sub_100DB47B8(v12);
    swift_release(v16);
    if (v26)
    {
      v27 = *(NSObject **)(v14 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
      v28 = swift_allocObject(&unk_1012767E8, 32, 7);
      *(_QWORD *)(v28 + 16) = v26;
      *(_QWORD *)(v28 + 24) = v14;
      v29 = swift_allocObject(&unk_101276810, 32, 7);
      *(_QWORD *)(v29 + 16) = sub_100619E50;
      *(_QWORD *)(v29 + 24) = v28;
      aBlock[4] = sub_1005B71BC;
      v34 = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100618D24;
      aBlock[3] = &unk_101276828;
      v30 = _Block_copy(aBlock);
      v31 = v34;
      swift_retain(v14);
      swift_retain(v26);
      swift_retain(v29);
      swift_release(v31);
      dispatch_sync(v27, v30);
      _Block_release(v30);
      LOBYTE(v27) = swift_isEscapingClosureAtFileLocation(v29, "", 89, 314, 26, 1);
      swift_release(v26);
      swift_release(v12);
      swift_release(v14);
      swift_release(v28);
      swift_release(v29);
      if ((v27 & 1) == 0)
        return;
      __break(1u);
    }
    swift_release(v12);
    swift_release(v14);
  }
}

id sub_1006AB694(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLCommandController);
}

uint64_t type metadata accessor for CRLCommandController()
{
  return objc_opt_self(_TtC8Freeform20CRLCommandController);
}

uint64_t type metadata accessor for CRLCommandController.CommandGroupData()
{
  return objc_opt_self(_TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2016CommandGroupData);
}

uint64_t type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup()
{
  return objc_opt_self(_TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup);
}

ValueMetadata *type metadata accessor for CRLCommandController.ProgressiveState()
{
  return &type metadata for CRLCommandController.ProgressiveState;
}

uint64_t _s8Freeform20CRLCommandControllerC16ProgressiveStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1006AB824 + 4 * byte_100F036A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1006AB858 + 4 * asc_100F036A0[v4]))();
}

uint64_t sub_1006AB858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006AB860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006AB868);
  return result;
}

uint64_t sub_1006AB874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006AB87CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1006AB880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006AB888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandController.CommandType()
{
  return &type metadata for CRLCommandController.CommandType;
}

unint64_t sub_1006AB8A8()
{
  unint64_t result;

  result = qword_1013EBC18;
  if (!qword_1013EBC18)
  {
    result = swift_getWitnessTable(&unk_100F03790, &type metadata for CRLCommandController.CommandType);
    atomic_store(result, (unint64_t *)&qword_1013EBC18);
  }
  return result;
}

unint64_t sub_1006AB8F0()
{
  unint64_t result;

  result = qword_1013EBC20;
  if (!qword_1013EBC20)
  {
    result = swift_getWitnessTable(&unk_100F037F8, &type metadata for CRLCommandController.ProgressiveState);
    atomic_store(result, (unint64_t *)&qword_1013EBC20);
  }
  return result;
}

void sub_1006AB934(uint64_t a1, unsigned __int8 a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v8 = a2;
  if (a2 == 3)
  {
    v9 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"beginMarking()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 132, "beginMarking() called while marking state already active", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginMarking()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2u, 132, (uint64_t)"beginMarking() called while marking state already active", 56, 2u);
    }
    *(_BYTE *)(a1 + v9) = 1;
  }
  (*(void (**)(_QWORD, uint64_t, BOOL))((swift_isaMask & *a3) + 0x80))(*(_QWORD *)(a4 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board), a1, (v8 - 4) < 0xFFFFFFFD);
  if (!v4)
  {
    *((_BYTE *)a3 + OBJC_IVAR____TtC8Freeform10CRLCommand_committed) = 1;
    if (v8 == 3)
    {
      v10 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState;
      if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"endMarking()", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 138, "endMarking() called while marking state is not active", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endMarking()", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2u, 138, (uint64_t)"endMarking() called while marking state is not active", 53, 2u);
      }
      *(_BYTE *)(a1 + v10) = 0;
    }
  }
}

void sub_1006ABB40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  if ((unint64_t)a2 >> 62)
    goto LABEL_13;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease(a2);
    return;
  }
  while (1)
  {
    while (__OFSUB__(v6--, 1))
    {
      __break(1u);
LABEL_13:
      if (a2 < 0)
        v9 = a2;
      else
        v9 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v6 = _CocoaArrayWrapper.endIndex.getter(v9);
      if (!v6)
        goto LABEL_11;
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a2);
      goto LABEL_9;
    }
    if ((v6 & 0x8000000000000000) != 0)
      break;
    if (v6 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_19;
    v8 = *(_QWORD *)(a2 + 32 + 8 * v6);
    swift_retain(v8);
LABEL_9:
    sub_1004D2E80(a1);
    swift_release(v8);
    if (v3 || !v6)
      goto LABEL_11;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_1006ABC40(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[24];

  v3 = type metadata accessor for UUID(0);
  __chkstk_darwin(v3);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext))
    return;
  v7 = v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v37, 0, 0);
  v8 = *(_QWORD *)v7;
  if (!(*(_QWORD *)v7 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)v7);
    if (v9)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease(v8);
    goto LABEL_18;
  }
  if (v8 < 0)
    v13 = *(_QWORD *)v7;
  else
    v13 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v9)
    goto LABEL_17;
LABEL_4:
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_42:
    v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
    goto LABEL_9;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v10 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(_QWORD *)(v8 + 8 * v10 + 32);
    swift_retain(v11);
LABEL_9:
    swift_bridgeObjectRelease(v8);
    v12 = *(unsigned __int8 *)(v11 + 16);
    swift_release(v11);
    if (v12 == 3)
    {
      v8 = *(_QWORD *)v7;
      if (*(_QWORD *)v7 >> 62)
        goto LABEL_57;
      if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
        goto LABEL_21;
    }
    while (1)
    {
LABEL_18:
      if (a1 - 2 < 2)
      {
        v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
        sub_1004B7878((unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
        v15 = swift_unknownObjectRetain(v14);
        UUID.init()(v15);
        v16 = type metadata accessor for CRLTransactionContext(0);
        v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
        v18 = sub_1006AD8FC(v14, 0, 0, (uint64_t)v5, 0, v17, (unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
        goto LABEL_24;
      }
      if (a1)
        break;
      do
      {
LABEL_21:
        v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
        sub_1004B7878((unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
        v20 = swift_unknownObjectRetain(v19);
        UUID.init()(v20);
        v21 = type metadata accessor for CRLTransactionContext(0);
        v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
        v23 = v19;
        v24 = 1;
LABEL_23:
        v18 = sub_1006AD8FC(v23, v24, 1, (uint64_t)v5, 1, v22, (unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
LABEL_24:
        v28 = *(_QWORD *)(v1 + v6);
        *(_QWORD *)(v1 + v6) = v18;
        swift_release(v28);
        v29 = *(_QWORD *)v7;
        if (*(_QWORD *)v7 >> 62)
        {
          if (v29 < 0)
            v32 = *(_QWORD *)v7;
          else
            v32 = v29 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*(_QWORD *)v7);
          v8 = _CocoaArrayWrapper.endIndex.getter(v32);
          swift_bridgeObjectRelease(v29);
          if (v8 < 1)
            goto LABEL_50;
        }
        else
        {
          v8 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v8 < 1)
            goto LABEL_50;
        }
        v7 = *(_QWORD *)v7;
        if ((unint64_t)v7 >> 62)
        {
LABEL_44:
          if (v7 < 0)
            v33 = v7;
          else
            v33 = v7 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v7);
          v5 = (char *)_CocoaArrayWrapper.endIndex.getter(v33);
          if (!v5)
          {
LABEL_48:
            swift_bridgeObjectRelease(v7);
            if (a1)
              goto LABEL_49;
            goto LABEL_50;
          }
        }
        else
        {
          v5 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v7);
          if (!v5)
            goto LABEL_48;
        }
        v10 = (unint64_t)(v5 - 1);
        if (__OFSUB__(v5, 1))
          goto LABEL_53;
        if ((v7 & 0xC000000000000001) != 0)
          goto LABEL_54;
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v10 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v30 = *(_QWORD *)(v7 + 8 * v10 + 32);
          swift_retain(v30);
          goto LABEL_33;
        }
        __break(1u);
LABEL_57:
        if (v8 < 0)
          v34 = v8;
        else
          v34 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v35 = _CocoaArrayWrapper.endIndex.getter(v34);
        swift_bridgeObjectRelease(v8);
      }
      while (v35 > 0);
    }
    v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
    sub_1004B7878((unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
    v26 = swift_unknownObjectRetain(v25);
    UUID.init()(v26);
    v27 = type metadata accessor for CRLTransactionContext(0);
    v22 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
    v23 = v25;
    v24 = 0;
    goto LABEL_23;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
LABEL_33:
  swift_bridgeObjectRelease(v7);
  v31 = *(unsigned __int8 *)(v30 + 16);
  swift_release(v30);
  if (v31 != 3 && a1)
  {
LABEL_49:
    sub_100757E04(&_mh_execute_header, (uint64_t)"_openTransactionIfNecessary(commandType:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 1039, "Non-user commands are only for an open group, if simultaneous realtime updates are enabled", 90, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_openTransactionIfNecessary(commandType:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 1039, (uint64_t)"Non-user commands are only for an open group, if simultaneous realtime updates are enabled", 90, 2u);
  }
LABEL_50:
  sub_100D196AC();
}

void sub_1006AC144(unint64_t a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  unint64_t v95;
  uint64_t v96;
  __n128 v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  unint64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int64_t v118;
  uint64_t *v119;
  __n128 v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  int64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  objc_class *v137;
  char *v138;
  double v139;
  char *v140;
  int64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (**v145)(uint64_t, char *);
  void (*v146)(uint64_t, char *);
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, char *);
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  double v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  char **v170;
  char *v171;
  id v172;
  BOOL v173;
  void *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  unint64_t v187;
  objc_class *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  id v192;
  id v193;
  char *v194;
  uint64_t v195;
  double v196;
  void *v197;
  id v198;
  id v199;
  uint64_t v200;
  _QWORD v201[2];
  void (*v202)(id);
  uint64_t v203;
  int64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  void (*v218)(uint64_t, uint64_t);
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  id v223;
  void (**v224)(uint64_t, char *);
  uint64_t v225;
  int64_t v226;
  _QWORD *v227;
  uint64_t v228;
  unint64_t v229;
  _QWORD *v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  objc_super v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  objc_super v240;
  _QWORD v241[2];
  _QWORD v242[4];
  _QWORD v243[3];
  char v244[24];
  char v245[24];
  void *v246;
  _QWORD v247[5];
  _QWORD v248[6];

  v201[1] = a4;
  v202 = a3;
  v221 = a2;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5);
  v207 = (uint64_t)v201 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = type metadata accessor for UUID(0);
  v212 = *(_QWORD *)(v219 - 8);
  v7 = __chkstk_darwin(v219);
  v217 = (char *)v201 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v215 = (char *)v201 - v10;
  v11 = __chkstk_darwin(v9);
  v216 = (uint64_t)v201 - v12;
  __chkstk_darwin(v11);
  v213 = (uint64_t)v201 - v13;
  v14 = sub_1004B804C(&qword_1013EBC30);
  v15 = __chkstk_darwin(v14);
  v210 = (char *)v201 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)v201 - v17;
  v19 = (uint64_t)&selRef_imageWithSystemImageNamed_pointSize_;
  v223 = objc_msgSend(objc_allocWithZone((Class)CRLChangeGroup), "init");
  v231 = objc_msgSend(objc_allocWithZone((Class)CRLChangeGroup), "init");
  v246 = &_swiftEmptySetSingleton;
  v229 = a1;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects, v245, 0, 0);
  v21 = *v20;
  if ((*v20 & 0xC000000000000001) != 0)
  {
    if (v21 < 0)
      v22 = *v20;
    else
      v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v23 = __CocoaSet.makeIterator()(v22);
    v19 = type metadata accessor for CRLTransactableHashableWrapper();
    v24 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v25 = Set.Iterator.init(_cocoa:)(v247, v23, v19, v24);
    v21 = v247[0];
    v227 = (_QWORD *)v247[1];
    v26 = (char *)v247[2];
    v27 = v247[3];
    v28 = v247[4];
  }
  else
  {
    v29 = -1 << *(_BYTE *)(v21 + 32);
    v30 = *(_QWORD *)(v21 + 56);
    v227 = (_QWORD *)(v21 + 56);
    v31 = ~v29;
    v32 = -v29;
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v28 = v33 & v30;
    swift_bridgeObjectRetain(v21);
    v26 = (char *)v31;
    v27 = 0;
  }
  v222 = v26;
  v225 = v21 & 0x7FFFFFFFFFFFFFFFLL;
  v226 = (unint64_t)(v26 + 64) >> 6;
  v224 = (void (**)(uint64_t, char *))((char *)&type metadata for Swift.AnyObject + 8);
  v220 = v18;
  v228 = v21;
  while (v21 < 0)
  {
    v37 = __CocoaSet.Iterator.next()(v25);
    if (!v37)
      goto LABEL_38;
    v38 = v37;
    v242[0] = v37;
    v39 = type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain(v38);
    swift_dynamicCast(v248, v242, v224, v39, 7);
    v19 = v248[0];
    swift_unknownObjectRelease(v38);
    v36 = v27;
    v34 = v28;
    if (!v19)
      goto LABEL_38;
LABEL_33:
    v230 = (_QWORD *)v34;
    v43 = *(_QWORD *)(v19 + 16);
    v44 = *(_QWORD *)(v19 + 24);
    ObjectType = swift_getObjectType(v43);
    swift_unknownObjectRetain(v43);
    objc_msgSend(v223, "registerChange:details:forChangeSource:", 2, 0, v43);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(ObjectType, v44);
    v47 = v46;
    v48 = *(_QWORD *)(v46 + 16);
    if (v48)
    {
      v49 = (uint64_t *)(v46 + 48);
      do
      {
        v50 = *(v49 - 2);
        v51 = *v49;
        v52 = *v49 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
        swift_beginAccess(v52, &v232, 0, 0);
        if (*(_QWORD *)(*(_QWORD *)v52 + 16))
          objc_msgSend(v231, "registerChange:details:forChangeSource:", 1, v51, v50);
        v49 += 3;
        --v48;
      }
      while (v48);
    }
    swift_unknownObjectRelease(v43);
    swift_bridgeObjectRelease(v47);
    swift_release(v19);
    v27 = v36;
    v28 = (unint64_t)v230;
    v18 = v220;
    v21 = v228;
  }
  if (v28)
  {
    v34 = (v28 - 1) & v28;
    v35 = __clz(__rbit64(v28)) | (v27 << 6);
    v36 = v27;
    goto LABEL_32;
  }
  v40 = v27 + 1;
  if (__OFADD__(v27, 1))
    goto LABEL_177;
  if (v40 >= v226)
    goto LABEL_38;
  v41 = v227[v40];
  v36 = v27 + 1;
  if (v41)
    goto LABEL_31;
  v36 = v27 + 2;
  if (v27 + 2 >= v226)
    goto LABEL_38;
  v41 = v227[v36];
  if (v41)
    goto LABEL_31;
  v36 = v27 + 3;
  if (v27 + 3 >= v226)
    goto LABEL_38;
  v41 = v227[v36];
  if (v41)
    goto LABEL_31;
  v36 = v27 + 4;
  if (v27 + 4 >= v226)
    goto LABEL_38;
  v41 = v227[v36];
  if (v41)
  {
LABEL_31:
    v34 = (v41 - 1) & v41;
    v35 = __clz(__rbit64(v41)) + (v36 << 6);
LABEL_32:
    v19 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v35);
    swift_retain(v19);
    if (!v19)
      goto LABEL_38;
    goto LABEL_33;
  }
  v42 = v27 + 5;
  while (v226 != v42)
  {
    v41 = v227[v42++];
    if (v41)
    {
      v36 = v42 - 1;
      goto LABEL_31;
    }
  }
LABEL_38:
  sub_1004D284C(v21);
  v53 = (uint64_t *)(v229 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances);
  swift_beginAccess(v229 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances, v244, 0, 0);
  v54 = *v53;
  if ((*v53 & 0xC000000000000001) != 0)
  {
    if (v54 < 0)
      v55 = *v53;
    else
      v55 = v54 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v54);
    v56 = __CocoaSet.makeIterator()(v55);
    v19 = type metadata accessor for CRLTransactableHashableWrapper();
    v57 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v58 = Set.Iterator.init(_cocoa:)(v248, v56, v19, v57);
    v54 = v248[0];
    v227 = (_QWORD *)v248[1];
    v59 = (char *)v248[2];
    v60 = v248[3];
    v61 = v248[4];
  }
  else
  {
    v62 = -1 << *(_BYTE *)(v54 + 32);
    v63 = *(_QWORD *)(v54 + 56);
    v227 = (_QWORD *)(v54 + 56);
    v64 = ~v62;
    v65 = -v62;
    if (v65 < 64)
      v66 = ~(-1 << v65);
    else
      v66 = -1;
    v61 = v66 & v63;
    swift_bridgeObjectRetain(v54);
    v59 = (char *)v64;
    v60 = 0;
  }
  v222 = v59;
  v225 = v54 & 0x7FFFFFFFFFFFFFFFLL;
  v226 = (unint64_t)(v59 + 64) >> 6;
  v224 = (void (**)(uint64_t, char *))((char *)&type metadata for Swift.AnyObject + 8);
  v228 = v54;
  while (2)
  {
    if (v54 < 0)
    {
      v70 = __CocoaSet.Iterator.next()(v58);
      if (!v70)
        goto LABEL_75;
      v71 = v70;
      v243[0] = v70;
      v72 = type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain(v71);
      swift_dynamicCast(v242, v243, v224, v72, 7);
      v19 = v242[0];
      swift_unknownObjectRelease(v71);
      v69 = v60;
      v67 = v61;
      if (!v19)
        goto LABEL_75;
      goto LABEL_70;
    }
    if (v61)
    {
      v67 = (v61 - 1) & v61;
      v68 = __clz(__rbit64(v61)) | (v60 << 6);
      v69 = v60;
LABEL_69:
      v19 = *(_QWORD *)(*(_QWORD *)(v54 + 48) + 8 * v68);
      swift_retain(v19);
      if (!v19)
        goto LABEL_75;
LABEL_70:
      v230 = (_QWORD *)v67;
      v76 = *(_QWORD *)(v19 + 16);
      v77 = *(_QWORD *)(v19 + 24);
      v78 = swift_getObjectType(v76);
      swift_unknownObjectRetain(v76);
      objc_msgSend(v223, "registerChange:details:forChangeSource:", 3, 0, v76);
      v79 = *(_QWORD *)(v229 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
      v80 = *(_QWORD *)(v229 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 104);
      v82 = swift_unknownObjectRetain(v79);
      v83 = v81(v82, v80, v78, v77);
      swift_unknownObjectRelease(v79);
      v84 = *(_QWORD *)(v83 + 16);
      if (v84)
      {
        v85 = (uint64_t *)(v83 + 48);
        do
        {
          v86 = *(v85 - 2);
          v87 = *v85;
          v88 = *v85 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
          swift_beginAccess(v88, &v233, 0, 0);
          if (*(_QWORD *)(*(_QWORD *)v88 + 16))
            objc_msgSend(v231, "registerChange:details:forChangeSource:", 1, v87, v86);
          v85 += 3;
          --v84;
        }
        while (v84);
      }
      swift_unknownObjectRelease(v76);
      swift_bridgeObjectRelease(v83);
      swift_release(v19);
      v60 = v69;
      v61 = (unint64_t)v230;
      v18 = v220;
      v54 = v228;
      continue;
    }
    break;
  }
  v73 = v60 + 1;
  if (__OFADD__(v60, 1))
    goto LABEL_178;
  if (v73 >= v226)
    goto LABEL_75;
  v74 = v227[v73];
  v69 = v60 + 1;
  if (v74)
    goto LABEL_68;
  v69 = v60 + 2;
  if (v60 + 2 >= v226)
    goto LABEL_75;
  v74 = v227[v69];
  if (v74)
    goto LABEL_68;
  v69 = v60 + 3;
  if (v60 + 3 >= v226)
    goto LABEL_75;
  v74 = v227[v69];
  if (v74)
    goto LABEL_68;
  v69 = v60 + 4;
  if (v60 + 4 >= v226)
    goto LABEL_75;
  v74 = v227[v69];
  if (v74)
  {
LABEL_68:
    v67 = (v74 - 1) & v74;
    v68 = __clz(__rbit64(v74)) + (v69 << 6);
    goto LABEL_69;
  }
  v75 = v60 + 5;
  while (v226 != v75)
  {
    v74 = v227[v75++];
    if (v74)
    {
      v69 = v75 - 1;
      goto LABEL_68;
    }
  }
LABEL_75:
  sub_1004D284C(v54);
  v89 = v221 + OBJC_IVAR____TtC8Freeform18CRLObservableDelta_observableDeltas;
  swift_beginAccess(v221 + OBJC_IVAR____TtC8Freeform18CRLObservableDelta_observableDeltas, v243, 0, 0);
  v90 = *(_QWORD *)v89;
  v91 = *(_QWORD *)(*(_QWORD *)v89 + 64);
  v203 = *(_QWORD *)v89 + 64;
  v92 = 1 << *(_BYTE *)(v90 + 32);
  if (v92 < 64)
    v93 = ~(-1 << v92);
  else
    v93 = -1;
  v211 = v93 & v91;
  v205 = v90;
  v206 = OBJC_IVAR____TtC8Freeform20CRLCommandController_board;
  v204 = (unint64_t)(v92 + 63) >> 6;
  v201[0] = v204 - 1;
  v94 = swift_bridgeObjectRetain(v90);
  v209 = 0;
  v96 = (uint64_t)v210;
  v95 = v211;
  if (!v211)
    goto LABEL_83;
  while (2)
  {
    while (2)
    {
      v211 = (v95 - 1) & v95;
      v98 = __clz(__rbit64(v95)) | (v209 << 6);
LABEL_82:
      v99 = v205;
      (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v212 + 16))(v96, *(_QWORD *)(v205 + 48) + *(_QWORD *)(v212 + 72) * v98, v219, v94);
      v100 = *(_QWORD *)(v99 + 56);
      v101 = sub_1004B804C(&qword_1013EBC38);
      v102 = *(_QWORD *)(v100 + 8 * v98);
      *(_QWORD *)(v96 + *(int *)(v101 + 48)) = v102;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v96, 0, 1, v101);
      swift_retain(v102);
LABEL_101:
      sub_1006AE1C8(v96, (uint64_t)v18);
      v107 = sub_1004B804C(&qword_1013EBC38);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v18, 1, v107) == 1)
      {
        *(_QWORD *)&v164 = swift_release(v205).n128_u64[0];
        v165 = objc_msgSend(v231, "changesArray", v164);
        v166 = sub_1004B8930(0, &qword_1013EBC40, off_101229838);
        v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v165, v166);

        if ((unint64_t)v19 >> 62)
          goto LABEL_179;
        v167 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v167)
          goto LABEL_143;
LABEL_168:
        *(_QWORD *)&v196 = swift_bridgeObjectRelease(v19).n128_u64[0];
        v197 = *(void **)(v208 + OBJC_IVAR____TtC8Freeform20CRLCommandController_changeNotifier);
        v198 = objc_msgSend(v197, "preprocessChanges:", v223, v196);
        if (v202)
          v202(v198);
        v199 = v223;
        objc_msgSend(v197, "processChanges:", v223);

        swift_bridgeObjectRelease(v246);
        return;
      }
      v214 = *(_QWORD *)&v18[*(int *)(v107 + 48)];
      v108 = v18;
      v109 = v212;
      v110 = v213;
      v111 = v219;
      (*(void (**)(uint64_t, char *, uint64_t))(v212 + 32))(v213, v108, v219);
      v112 = *(_QWORD *)(v208 + v206);
      v19 = *(_QWORD *)(v112 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      v113 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v238, 0, 0);
      v114 = v113;
      v115 = v207;
      sub_1004B8460(v114, v207, type metadata accessor for CRLBoardCRDTData);
      swift_retain(v19);
      v116 = sub_1004B804C(&qword_1013E1A80);
      v117 = v216;
      CRRegister.wrappedValue.getter(v116);
      sub_1004B84A4(v115, type metadata accessor for CRLBoardCRDTData);
      swift_release(v19);
      LOBYTE(v115) = static UUID.== infix(_:_:)(v110);
      v218 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
      v218(v117, v111);
      if ((v115 & 1) != 0)
      {
        swift_unknownObjectRetain(v112);
        v19 = (uint64_t)&off_1012942F0;
        v118 = v112;
        goto LABEL_107;
      }
      v119 = (uint64_t *)(v112 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap);
      swift_beginAccess(v112 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap, &v237, 0, 0);
      v121 = *v119;
      v18 = v220;
      if (!*(_QWORD *)(v121 + 16))
      {
LABEL_139:
        ((void (*)(uint64_t, uint64_t, __n128))v218)(v213, v219, v120);
        v94 = swift_release(v214);
        v96 = (uint64_t)v210;
        v95 = v211;
        if (!v211)
          goto LABEL_83;
        continue;
      }
      break;
    }
    swift_bridgeObjectRetain(v121);
    v122 = sub_100842EFC(v213);
    if ((v123 & 1) == 0)
    {
      v120 = swift_bridgeObjectRelease(v121);
      goto LABEL_139;
    }
    v124 = (int64_t *)(*(_QWORD *)(v121 + 56) + 16 * v122);
    v118 = *v124;
    v19 = v124[1];
    swift_unknownObjectRetain(*v124);
    swift_bridgeObjectRelease(v121);
LABEL_107:
    v224 = (void (**)(uint64_t, char *))v19;
    v125 = *(_QWORD *)(v214 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys);
    v126 = *(_QWORD *)(v125 + 64);
    v221 = v125 + 64;
    v127 = 1 << *(_BYTE *)(v125 + 32);
    if (v127 < 64)
      v128 = ~(-1 << v127);
    else
      v128 = -1;
    v129 = v128 & v126;
    v230 = (_QWORD *)(v214 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot);
    v222 = (char *)((unint64_t)(v127 + 63) >> 6);
    v225 = v125;
    swift_bridgeObjectRetain(v125);
    v130 = 0;
    v226 = v118;
    while (2)
    {
      if (v129)
      {
        v227 = (_QWORD *)((v129 - 1) & v129);
        v228 = v130;
        v131 = __clz(__rbit64(v129)) | (v130 << 6);
LABEL_128:
        v136 = *(unsigned __int8 *)(*(_QWORD *)(v225 + 48) + v131);
        v19 = *(_QWORD *)(*(_QWORD *)(v225 + 56) + 8 * v131);
        v137 = (objc_class *)type metadata accessor for CRLPropertyMap();
        v138 = (char *)objc_allocWithZone(v137);
        *(_QWORD *)&v138[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = &_swiftEmptyDictionarySingleton;
        v236.receiver = v138;
        v236.super_class = v137;
        *(_QWORD *)&v139 = swift_bridgeObjectRetain(v19).n128_u64[0];
        v140 = (char *)objc_msgSendSuper2(&v236, "init", v139);
        v141 = v226;
        v142 = swift_getObjectType(v226);
        v143 = *v230;
        v144 = v230[1];
        v145 = v224;
        v146 = v224[10];
        swift_unknownObjectRetain(*v230);
        LODWORD(v229) = v136;
        v147 = v144;
        v148 = v142;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (**)(uint64_t, char *)))v146)(v140, v19, v136, v143, v147, v142, v145);
        swift_unknownObjectRelease(v143);
        v118 = v141;
        v149 = &v140[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
        swift_beginAccess(&v140[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], &v235, 0, 0);
        if (*(_QWORD *)(*(_QWORD *)v149 + 16))
        {
          objc_msgSend(v223, "registerChange:details:forChangeSource:", 1, v140, v118);
          v150 = *(_QWORD *)v149;
          if (*(_QWORD *)(v150 + 16) && (v151 = sub_100843260(4), (v152 & 1) != 0))
          {
            sub_1004CB7BC(*(_QWORD *)(v150 + 56) + 32 * v151, (uint64_t)v242, &qword_1013E0230);
            sub_1004CB800((uint64_t)v242, (uint64_t *)&unk_1013DFC00);
            v153 = v215;
            v145[4](v148, (char *)v145);
            v154 = v216;
            v155 = (uint64_t)v153;
            v118 = v226;
            sub_100AD569C(v216, v155);
            v218(v154, v219);
          }
          else
          {
            memset(v242, 0, 24);
            v242[3] = 1;
            sub_1004CB800((uint64_t)v242, (uint64_t *)&unk_1013DFC00);
          }
        }
        v157 = *v230;
        v156 = v230[1];
        v158 = v145[12];
        swift_unknownObjectRetain(*v230);
        v159 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, void (**)(uint64_t, char *)))v158)(v19, v229, v157, v156, v148, v145);
        swift_unknownObjectRelease(v157);
        swift_bridgeObjectRelease(v19);
        v160 = *(_QWORD *)(v159 + 16);
        if (v160)
        {
          v161 = (uint64_t *)(v159 + 48);
          do
          {
            v19 = *(v161 - 2);
            v162 = *v161;
            v163 = *v161 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
            swift_beginAccess(v163, &v234, 0, 0);
            if (*(_QWORD *)(*(_QWORD *)v163 + 16))
              objc_msgSend(v231, "registerChange:details:forChangeSource:", 1, v162, v19);
            v161 += 3;
            --v160;
          }
          while (v160);
        }

        swift_bridgeObjectRelease(v159);
        v129 = (unint64_t)v227;
        v130 = v228;
        continue;
      }
      break;
    }
    v132 = v130 + 1;
    if (__OFADD__(v130, 1))
    {
      __break(1u);
      goto LABEL_172;
    }
    v18 = v220;
    if (v132 >= (uint64_t)v222)
      goto LABEL_80;
    v133 = *(_QWORD *)(v221 + 8 * v132);
    v134 = v130 + 1;
    if (v133)
      goto LABEL_127;
    v134 = v130 + 2;
    if (v130 + 2 >= (uint64_t)v222)
      goto LABEL_80;
    v133 = *(_QWORD *)(v221 + 8 * v134);
    if (v133)
      goto LABEL_127;
    v134 = v130 + 3;
    if (v130 + 3 >= (uint64_t)v222)
      goto LABEL_80;
    v133 = *(_QWORD *)(v221 + 8 * v134);
    if (v133)
    {
LABEL_127:
      v227 = (_QWORD *)((v133 - 1) & v133);
      v228 = v134;
      v131 = __clz(__rbit64(v133)) + (v134 << 6);
      goto LABEL_128;
    }
    v135 = v130 + 4;
    if (v130 + 4 < (uint64_t)v222)
    {
      v133 = *(_QWORD *)(v221 + 8 * v135);
      if (!v133)
      {
        while (1)
        {
          v134 = v135 + 1;
          if (__OFADD__(v135, 1))
            break;
          if (v134 >= (uint64_t)v222)
            goto LABEL_80;
          v133 = *(_QWORD *)(v221 + 8 * v134);
          ++v135;
          if (v133)
            goto LABEL_127;
        }
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
        while (2)
        {
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          if (v19 < 0)
            v200 = v19;
          else
            v200 = v19 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v19);
          v167 = _CocoaArrayWrapper.endIndex.getter(v200);
          swift_bridgeObjectRelease(v19);
          if (!v167)
            goto LABEL_168;
LABEL_143:
          v168 = 0;
          v169 = v19 & 0xC000000000000001;
          v220 = (char *)(v19 + 32);
          v221 = v19 & 0xFFFFFFFFFFFFFF8;
          v170 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
          v171 = (char *)&type metadata for Any + 8;
          v225 = v167;
          v226 = v19;
          v224 = (void (**)(uint64_t, char *))(v19 & 0xC000000000000001);
          v222 = (char *)&type metadata for Any + 8;
          while (1)
          {
LABEL_145:
            if (v169)
            {
              v172 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v168, v19);
              v173 = __OFADD__(v168++, 1);
              if (v173)
                goto LABEL_173;
            }
            else
            {
              if (v168 >= *(_QWORD *)(v221 + 16))
                goto LABEL_175;
              v172 = *(id *)&v220[8 * v168];
              v173 = __OFADD__(v168++, 1);
              if (v173)
                goto LABEL_173;
            }
            v174 = v172;
            v175 = objc_msgSend(v172, v170[255]);
            _bridgeAnyObjectToAny(_:)(v242, v175);
            swift_unknownObjectRelease(v175);
            v176 = sub_1004B804C(&qword_1013E00C0);
            if (swift_dynamicCast(v241, v242, v171, v176, 6))
              break;

            if (v168 == v167)
              goto LABEL_168;
          }
          v178 = v241[0];
          v177 = v241[1];
          v179 = swift_getObjectType(v241[0]);
          (*(void (**)(uint64_t, uint64_t))(v177 + 32))(v179, v177);
          v227 = v174;
          v180 = objc_msgSend(v174, "changes");
          v181 = type metadata accessor for CRLChangeRecord();
          v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v180, v181);

          v228 = v168;
          if ((unint64_t)v19 >> 62)
          {
            if (v19 < 0)
              v195 = v19;
            else
              v195 = v19 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v19);
            v182 = _CocoaArrayWrapper.endIndex.getter(v195);
            swift_bridgeObjectRelease(v19);
            if (v182)
            {
LABEL_154:
              if (v182 < 1)
                continue;
              v183 = 0;
              v229 = v19 & 0xC000000000000001;
              v230 = (_QWORD *)v19;
              do
              {
                if (v229)
                  v185 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v183, v19);
                else
                  v185 = (char *)*(id *)(v19 + 8 * v183 + 32);
                v186 = v185;
                v187 = sub_1008E01A8((uint64_t)_swiftEmptyArrayStorage);
                v188 = (objc_class *)type metadata accessor for CRLPropertyMap();
                v189 = (char *)objc_allocWithZone(v188);
                *(_QWORD *)&v189[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v187;
                v240.receiver = v189;
                v240.super_class = v188;
                v190 = (char *)objc_msgSendSuper2(&v240, "init");
                v191 = __chkstk_darwin(v190);
                v201[-4] = &v246;
                v201[-3] = v217;
                v201[-2] = v191;
                v193 = v192;
                sub_1008EC278((void (*)(uint64_t, _OWORD *, char *))sub_1006AE210);

                v194 = &v190[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
                swift_beginAccess(&v190[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], &v239, 0, 0);
                if (*(_QWORD *)(*(_QWORD *)v194 + 16))
                {
                  v184 = *(unsigned int *)&v186[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind];
                  swift_unknownObjectRetain(v178);
                  objc_msgSend(v223, "registerChange:details:forChangeSource:", v184, v190, v178);

                  swift_unknownObjectRelease(v178);
                }
                else
                {

                  v186 = v190;
                }
                ++v183;

                v19 = (uint64_t)v230;
              }
              while (v182 != v183);
            }
          }
          else
          {
            v182 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v182)
              goto LABEL_154;
          }
          break;
        }

        swift_bridgeObjectRelease(v19);
        swift_unknownObjectRelease(v178);
        (*(void (**)(char *, uint64_t))(v212 + 8))(v217, v219);
        v167 = v225;
        v19 = v226;
        v168 = v228;
        v169 = (unint64_t)v224;
        v170 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
        v171 = v222;
        if (v228 == v225)
          goto LABEL_168;
        goto LABEL_145;
      }
      v134 = v130 + 4;
      goto LABEL_127;
    }
LABEL_80:
    swift_unknownObjectRelease(v118);
    swift_release(v214);
    v97 = swift_release(v225);
    ((void (*)(uint64_t, uint64_t, __n128))v218)(v213, v219, v97);
    v96 = (uint64_t)v210;
    v95 = v211;
    if (v211)
      continue;
    break;
  }
LABEL_83:
  v103 = v209 + 1;
  if (__OFADD__(v209, 1))
    goto LABEL_174;
  if (v103 >= v204)
    goto LABEL_100;
  v104 = *(_QWORD *)(v203 + 8 * v103);
  if (v104)
    goto LABEL_86;
  v105 = v209 + 2;
  ++v209;
  if (v103 + 1 >= v204)
    goto LABEL_100;
  v104 = *(_QWORD *)(v203 + 8 * v105);
  if (v104)
    goto LABEL_89;
  v209 = v103 + 1;
  if (v103 + 2 >= v204)
  {
LABEL_100:
    v106 = sub_1004B804C(&qword_1013EBC38);
    v96 = (uint64_t)v210;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v210, 1, 1, v106);
    v211 = 0;
    goto LABEL_101;
  }
  v104 = *(_QWORD *)(v203 + 8 * (v103 + 2));
  if (v104)
  {
    v103 += 2;
LABEL_86:
    v211 = (v104 - 1) & v104;
    v98 = __clz(__rbit64(v104)) + (v103 << 6);
    v209 = v103;
    v96 = (uint64_t)v210;
    goto LABEL_82;
  }
  v105 = v103 + 3;
  v209 = v103 + 2;
  if (v103 + 3 >= v204)
    goto LABEL_100;
  v104 = *(_QWORD *)(v203 + 8 * v105);
  if (v104)
  {
LABEL_89:
    v103 = v105;
    goto LABEL_86;
  }
  while (1)
  {
    v103 = v105 + 1;
    if (__OFADD__(v105, 1))
      break;
    if (v103 >= v204)
    {
      v209 = v201[0];
      goto LABEL_100;
    }
    v104 = *(_QWORD *)(v203 + 8 * v103);
    ++v105;
    if (v104)
      goto LABEL_86;
  }
  __break(1u);
}

void sub_1006AD61C(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  Swift::UInt v21;
  _BYTE v23[24];
  _BYTE v24[32];

  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v17 = &v23[-v16 - 8];
  if (a1 == 4)
  {
    v18 = *a4;
    swift_bridgeObjectRetain(*a4);
    v19 = sub_10062158C(a5, v18);
    v20 = swift_bridgeObjectRelease(v18);
    if ((v19 & 1) != 0)
      return;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a5, v11, v20);
    sub_100AD569C((uint64_t)v17, (uint64_t)v15);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
    sub_1004CB7BC(a2, (uint64_t)v24, &qword_1013E0230);
    swift_beginAccess(a6 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v23, 33, 0);
    v21 = 4;
  }
  else
  {
    sub_1004CB7BC(a2, (uint64_t)v24, &qword_1013E0230);
    swift_beginAccess(a6 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data, v23, 33, 0);
    v21 = a1;
  }
  sub_10083DAD8((uint64_t)v24, v21);
  swift_endAccess(v23);
}

void sub_1006AD7B4(void *a1, uint64_t a2, char a3)
{
  id v4;

  if (a1)
  {
    v4 = a1;
    sub_100D19914(v4, a3);

  }
  else
  {
    sub_100D1A1EC();
  }
}

uint64_t sub_1006AD81C(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1006AD8FC(a1, a2, a3, a4, a5, a6, &qword_1013EBC48, (uint64_t (*)(uint64_t))type metadata accessor for CRLInertOwner, (uint64_t)&unk_100F393B4);
}

uint64_t sub_1006AD854(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1006AD8FC(a1, a2, a3, a4, a5, a6, (unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
}

uint64_t sub_1006AD88C(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1006AD8FC(a1, a2, a3, a4, a5, a6, &qword_1013EBC58, (uint64_t (*)(uint64_t))type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner, (uint64_t)&unk_100F351AC);
}

uint64_t sub_1006AD8C4(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1006AD8FC(a1, a2, a3, a4, a5, a6, &qword_1013EBC50, type metadata accessor for CRLImmutableBoard, (uint64_t)&unk_100F276E4);
}

uint64_t sub_1006AD8FC(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6, unint64_t *a7, uint64_t (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v15 = sub_1004B7878(a7, a8, a9);
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects) = &_swiftEmptySetSingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects) = &_swiftEmptySetSingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects) = &_swiftEmptySetSingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects) = &_swiftEmptySetSingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances) = &_swiftEmptySetSingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans) = _swiftEmptyArrayStorage;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds) = &_swiftEmptySetSingleton;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds) = &_swiftEmptySetSingleton;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 1;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_affectedItemUUIDSetForUndoableItems) = &_swiftEmptySetSingleton;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 0;
  v16 = a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id;
  v17 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a4, v17);
  v18 = (_QWORD *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  *v18 = a1;
  v18[1] = v15;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) = a2;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges) = a3;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_dirtiesOwner) = a5;
  return a6;
}

void sub_1006ADACC(unsigned __int8 a1, char a2, uint64_t a3, unsigned __int8 a4, _QWORD *a5, void *a6)
{
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CKRecordID v29;
  uint64_t v30;
  _BYTE v32[40];

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 896, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 896, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v12 = OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting;
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) != 1)
  {
    *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) = 1;
    sub_1006ABC40(a1);
    v13 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext);
    if (!v13)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 904, "Tried to call _execute without an open transaction context.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to call _execute without an open transaction context.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 904, (uint64_t)"Tried to call _execute without an open transaction context.", 59, 2u);
      goto LABEL_47;
    }
    swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext));
    sub_1006AB934(v14, a4, a5, (uint64_t)a6);
    v15 = a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v32, 0, 0);
    v16 = *(_QWORD *)v15;
    if (*(_QWORD *)v15 >> 62)
    {
      if (v16 < 0)
        v26 = *(_QWORD *)v15;
      else
        v26 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)v15);
      v17 = _CocoaArrayWrapper.endIndex.getter(v26);
      if (v17)
      {
LABEL_7:
        v18 = v17 - 1;
        if (__OFSUB__(v17, 1))
        {
          __break(1u);
        }
        else if ((v16 & 0xC000000000000001) == 0)
        {
          if ((v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v18 < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v19 = *(_QWORD *)(v16 + 8 * v18 + 32);
            swift_retain(v19);
            goto LABEL_12;
          }
          __break(1u);
          goto LABEL_34;
        }
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
LABEL_12:
        swift_bridgeObjectRelease(v16);
        v20 = *(unsigned __int8 *)(v19 + 16);
        swift_release(v19);
        if ((v20 - 1) > 2)
        {
LABEL_24:
          swift_release(v13);
LABEL_40:
          *(_BYTE *)(a3 + v12) = 0;
          return;
        }
        if ((a2 & 1) != 0)
        {
          v21 = (void *)sub_100DB2C28(0, 0);
          sub_1006AC144(v13, (uint64_t)v21, 0, 0);

        }
        v15 = *(_QWORD *)v15;
        if (!((unint64_t)v15 >> 62))
        {
          v22 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v15);
          if (v22)
            goto LABEL_17;
LABEL_38:
          swift_release(v13);
          v27 = v15;
          goto LABEL_39;
        }
LABEL_34:
        if (v15 < 0)
          v28 = v15;
        else
          v28 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v15);
        v22 = _CocoaArrayWrapper.endIndex.getter(v28);
        if (v22)
        {
LABEL_17:
          v23 = v22 - 1;
          if (__OFSUB__(v22, 1))
          {
            __break(1u);
          }
          else if ((v15 & 0xC000000000000001) == 0)
          {
            if ((v23 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v23 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v24 = *(_QWORD *)(v15 + 8 * v23 + 32);
              swift_retain(v24);
              goto LABEL_22;
            }
            __break(1u);
            goto LABEL_45;
          }
          v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v15);
LABEL_22:
          swift_bridgeObjectRelease(v15);
          v25 = *(_BYTE *)(v24 + 16);
          swift_release(v24);
          if ((v25 & 0xFE) == 2)
            sub_1006AB1AC();
          goto LABEL_24;
        }
        goto LABEL_38;
      }
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)v15);
      if (v17)
        goto LABEL_7;
    }
    swift_release(v13);
    v27 = v16;
LABEL_39:
    swift_bridgeObjectRelease(v27);
    goto LABEL_40;
  }
LABEL_45:
  sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 898, "Should not execute a command while executing another command.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should not execute a command while executing another command.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 898, (uint64_t)"Should not execute a command while executing another command.", 61, 2u);
LABEL_47:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v29, *(Swift::String *)&v30);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_1006AE1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EBC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1006AE210(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1006AD61C(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1006AE21C(void *a1, int a2, int a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t (*v24)(__n128);
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  _QWORD *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  void (*v57)(__int128 *, _QWORD);
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  _QWORD *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(__int128 *, _QWORD);
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unsigned __int8 v104;
  _QWORD *v105;
  char v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(__int128 *, _QWORD);
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  unsigned __int8 v134;
  _QWORD *v135;
  char v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  char v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void *v157;
  Swift::String v158;
  __int128 v159;
  _QWORD *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(__int128 *, _QWORD);
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  unsigned __int8 v183;
  _QWORD *v184;
  char v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  char v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  void *v206;
  Swift::String v207;
  __int128 v208;
  _QWORD *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(__int128 *, _QWORD);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  unsigned __int8 v225;
  _QWORD *v226;
  char v227;
  uint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  char v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  char v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  void *v248;
  Swift::String v249;
  __int128 v250;
  _QWORD *v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void (*v257)(__int128 *, _QWORD);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  void *v263;
  uint64_t v264;
  uint64_t inited;
  char v266;
  unint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  id v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  __n128 v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  void *v289;
  uint64_t v290;
  void *v291;
  void *v292;
  id v293;
  char *v294;
  id v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  __n128 v301;
  uint64_t v302;
  NSObject *v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  int v312;
  _QWORD *v313;
  uint64_t v314;
  NSObject *v315;
  uint64_t v316;
  uint64_t v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t result;
  CKRecordID v324;
  Swift::String v325;
  uint64_t v326;
  _QWORD *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t *v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  int v341;
  void *v342;
  uint64_t v343;
  uint64_t *v344;
  uint64_t *v345;
  uint64_t *v346;
  char *v347;
  unint64_t v348;
  char *v349;
  unint64_t v350;
  char *v351;
  char *v352;
  char *v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  __int128 v357;
  uint64_t (*v358)(uint64_t);
  void *v359;
  uint64_t (*v360)();
  uint64_t v361;
  _QWORD *v362;
  uint64_t v363;
  _QWORD *v364;
  uint64_t v365;
  unsigned __int8 v366;
  unint64_t v367;
  uint64_t v368;
  unsigned __int8 v369;
  _QWORD *v370;
  unint64_t v371;
  uint64_t v372;
  unsigned __int8 v373;
  uint64_t v374;

  v340 = a3;
  v341 = a2;
  v342 = a1;
  v4 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v326 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v8);
  v329 = (uint64_t)&v326 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10);
  v343 = (uint64_t)&v326 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v354 = *(_QWORD *)(v12 - 8);
  v355 = (char *)v12;
  v13 = __chkstk_darwin(v12);
  v353 = (char *)&v326 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v352 = (char *)&v326 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v326 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v326 - v20;
  v22 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext;
  v347 = v3;
  v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext];
  if (!v23)
    goto LABEL_209;
  v327 = v7;
  v328 = v5;
  v330 = v4;
  v24 = *(uint64_t (**)(__n128))(*(_QWORD *)v23 + 720);
  v25 = swift_retain(v23);
  v26 = v24(v25);
  v346 = 0;
  v338 = v22;
  v339 = v26;
  v348 = v23;
  v27 = (uint64_t *)(v23 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
  swift_beginAccess(v27, &v374, 0, 0);
  v345 = v27;
  v28 = *v27;
  v29 = *v27 & 0xC000000000000001;
  if (v29)
  {
    if (v28 < 0)
      v30 = *v27;
    else
      v30 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    v31 = __CocoaSet.count.getter(v30);
  }
  else
  {
    v31 = *(_QWORD *)(v28 + 16);
    swift_bridgeObjectRetain(*v27);
  }
  v351 = v19;
  if (v31)
  {
    v370 = _swiftEmptyArrayStorage;
    sub_100600724(0, v31 & ~(v31 >> 63), 0);
    if (v29)
    {
      if (v28 < 0)
        v32 = v28;
      else
        v32 = v28 & 0xFFFFFFFFFFFFFF8;
      v33 = __CocoaSet.startIndex.getter(v32);
      v35 = 1;
    }
    else
    {
      v33 = sub_1005C461C(v28);
      v35 = v37 & 1;
    }
    v371 = v33;
    v372 = v34;
    v373 = v35;
    if (v31 < 0)
      goto LABEL_195;
    v38 = v28 & 0xFFFFFFFFFFFFFF8;
    if (v28 < 0)
      v38 = v28;
    v349 = v21;
    v350 = v38;
    do
    {
      while (1)
      {
        v48 = sub_1005C3F18(v371, v372, v373, v28);
        v49 = *(_QWORD *)(v48 + 24);
        ObjectType = swift_getObjectType(*(_QWORD *)(v48 + 16));
        (*(void (**)(uint64_t, uint64_t))(v49 + 32))(ObjectType, v49);
        swift_release(v48);
        v51 = v370;
        if ((swift_isUniquelyReferenced_nonNull_native(v370) & 1) == 0)
        {
          sub_100600724(0, v51[2] + 1, 1);
          v51 = v370;
        }
        v53 = v51[2];
        v52 = v51[3];
        if (v53 >= v52 >> 1)
        {
          sub_100600724(v52 > 1, v53 + 1, 1);
          v51 = v370;
        }
        v51[2] = v53 + 1;
        (*(void (**)(unint64_t, char *, char *))(v354 + 32))((unint64_t)v51+ ((*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80))+ *(_QWORD *)(v354 + 72) * v53, v21, v355);
        v370 = v51;
        if (v29)
          break;
        v39 = v371;
        v40 = v372;
        v41 = v373;
        v42 = sub_1005C3B08(v371, v372, v373, v28);
        v44 = v43;
        v46 = v45;
        sub_100503494(v39, v40, v41);
        v371 = v42;
        v19 = v351;
        v372 = v44;
        v47 = v46 & 1;
        v29 = 0;
        v21 = v349;
        v373 = v47;
        if (!--v31)
          goto LABEL_31;
      }
      if ((v373 & 1) == 0)
        goto LABEL_202;
      v54 = __CocoaSet.Index.handleBitPattern.getter(v371, v372);
      if (v54)
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v54);
      else
        isUniquelyReferenced_nonNull_native = 1;
      v56 = sub_1004B804C(&qword_1013EBC60);
      v57 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify(&v357, v56);
      __CocoaSet.formIndex(after:isUnique:)(v58, isUniquelyReferenced_nonNull_native, v350);
      v57(&v357, 0);
      --v31;
    }
    while (v31);
LABEL_31:
    sub_100503494(v371, v372, v373);
    swift_bridgeObjectRelease(v28);
    v36 = v370;
  }
  else
  {
    swift_bridgeObjectRelease(v28);
    v36 = _swiftEmptyArrayStorage;
  }
  v336 = sub_100AF7994((uint64_t)v36);
  swift_bridgeObjectRelease(v36);
  v59 = v348;
  v60 = (char *)(v348 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications);
  swift_beginAccess(v348 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications, &v371, 0, 0);
  v349 = v60;
  v61 = *(_QWORD *)v60;
  swift_bridgeObjectRetain(v61);
  v62 = v346;
  v64 = sub_1006A4B48(v63);
  v344 = v62;
  swift_bridgeObjectRelease(v61);
  v335 = sub_100AF7994(v64);
  swift_bridgeObjectRelease(v64);
  v65 = (uint64_t *)(v59 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess(v59 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects, &v370, 0, 0);
  v346 = v65;
  v66 = *v65;
  v67 = *v65 & 0xC000000000000001;
  if (v67)
  {
    if (v66 < 0)
      v68 = *v65;
    else
      v68 = v66 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v66);
    v69 = __CocoaSet.count.getter(v68);
  }
  else
  {
    v69 = *(_QWORD *)(v66 + 16);
    swift_bridgeObjectRetain(*v65);
  }
  if (v69)
  {
    v364 = _swiftEmptyArrayStorage;
    sub_100600724(0, v69 & ~(v69 >> 63), 0);
    if (v67)
    {
      if (v66 < 0)
        v70 = v66;
      else
        v70 = v66 & 0xFFFFFFFFFFFFFF8;
      v71 = __CocoaSet.startIndex.getter(v70);
      v73 = 1;
    }
    else
    {
      v71 = sub_1005C461C(v66);
      v73 = v75 & 1;
    }
    v367 = v71;
    v368 = v72;
    v369 = v73;
    if (v69 < 0)
      goto LABEL_196;
    v76 = v66 & 0xFFFFFFFFFFFFFF8;
    if (v66 < 0)
      v76 = v66;
    v350 = v76;
    do
    {
      while (1)
      {
        v85 = sub_1005C3F18(v367, v368, v369, v66);
        v86 = *(_QWORD *)(v85 + 24);
        v87 = swift_getObjectType(*(_QWORD *)(v85 + 16));
        (*(void (**)(uint64_t, uint64_t))(v86 + 32))(v87, v86);
        swift_release(v85);
        v88 = v364;
        if ((swift_isUniquelyReferenced_nonNull_native(v364) & 1) == 0)
        {
          sub_100600724(0, v88[2] + 1, 1);
          v88 = v364;
        }
        v90 = v88[2];
        v89 = v88[3];
        if (v90 >= v89 >> 1)
        {
          sub_100600724(v89 > 1, v90 + 1, 1);
          v88 = v364;
        }
        v88[2] = v90 + 1;
        (*(void (**)(unint64_t, char *, char *))(v354 + 32))((unint64_t)v88+ ((*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80))+ *(_QWORD *)(v354 + 72) * v90, v19, v355);
        v364 = v88;
        if (v67)
          break;
        v77 = v367;
        v78 = v368;
        v79 = v369;
        v80 = sub_1005C3B08(v367, v368, v369, v66);
        v82 = v81;
        v84 = v83;
        sub_100503494(v77, v78, v79);
        v367 = v80;
        v19 = v351;
        v368 = v82;
        v369 = v84 & 1;
        if (!--v69)
          goto LABEL_61;
      }
      if ((v369 & 1) == 0)
        goto LABEL_203;
      v91 = __CocoaSet.Index.handleBitPattern.getter(v367, v368);
      if (v91)
        v92 = swift_isUniquelyReferenced_nonNull_native(v91);
      else
        v92 = 1;
      v93 = sub_1004B804C(&qword_1013EBC60);
      v94 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify(&v357, v93);
      __CocoaSet.formIndex(after:isUnique:)(v95, v92, v350);
      v94(&v357, 0);
      --v69;
    }
    while (v69);
LABEL_61:
    sub_100503494(v367, v368, v369);
    swift_bridgeObjectRelease(v66);
    v74 = v364;
  }
  else
  {
    swift_bridgeObjectRelease(v66);
    v74 = _swiftEmptyArrayStorage;
  }
  v334 = sub_100AF7994((uint64_t)v74);
  swift_bridgeObjectRelease(v74);
  v96 = (uint64_t *)(v348 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
  swift_beginAccess(v348 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects, &v367, 0, 0);
  v337 = v96;
  v97 = *v96;
  v98 = *v96 & 0xC000000000000001;
  if (v98)
  {
    if (v97 < 0)
      v99 = *v96;
    else
      v99 = v97 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v97);
    v100 = __CocoaSet.count.getter(v99);
  }
  else
  {
    v100 = *(_QWORD *)(v97 + 16);
    swift_bridgeObjectRetain(*v96);
  }
  if (v100)
  {
    v362 = _swiftEmptyArrayStorage;
    sub_100600724(0, v100 & ~(v100 >> 63), 0);
    if (v98)
    {
      if (v97 < 0)
        v101 = v97;
      else
        v101 = v97 & 0xFFFFFFFFFFFFFF8;
      v102 = (_QWORD *)__CocoaSet.startIndex.getter(v101);
      v104 = 1;
    }
    else
    {
      v102 = (_QWORD *)sub_1005C461C(v97);
      v104 = v106 & 1;
    }
    v364 = v102;
    v365 = v103;
    v366 = v104;
    if (v100 < 0)
      goto LABEL_197;
    v107 = v97 & 0xFFFFFFFFFFFFFF8;
    if (v97 < 0)
      v107 = v97;
    v351 = (char *)v107;
    do
    {
      while (1)
      {
        v116 = sub_1005C3F18((unint64_t)v364, v365, v366, v97);
        v117 = *(_QWORD *)(v116 + 24);
        v118 = swift_getObjectType(*(_QWORD *)(v116 + 16));
        (*(void (**)(uint64_t, uint64_t))(v117 + 32))(v118, v117);
        swift_release(v116);
        v119 = v362;
        if ((swift_isUniquelyReferenced_nonNull_native(v362) & 1) == 0)
        {
          sub_100600724(0, v119[2] + 1, 1);
          v119 = v362;
        }
        v121 = v119[2];
        v120 = v119[3];
        if (v121 >= v120 >> 1)
        {
          sub_100600724(v120 > 1, v121 + 1, 1);
          v119 = v362;
        }
        v119[2] = v121 + 1;
        (*(void (**)(unint64_t, char *, char *))(v354 + 32))((unint64_t)v119+ ((*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80))+ *(_QWORD *)(v354 + 72) * v121, v352, v355);
        v362 = v119;
        if (v98)
          break;
        v108 = v364;
        v109 = v365;
        v110 = v366;
        v111 = (_QWORD *)sub_1005C3B08(v364, v365, v366, v97);
        v113 = v112;
        v115 = v114;
        sub_100503494((uint64_t)v108, v109, v110);
        v364 = v111;
        v365 = v113;
        v366 = v115 & 1;
        if (!--v100)
          goto LABEL_91;
      }
      if ((v366 & 1) == 0)
        goto LABEL_204;
      v122 = __CocoaSet.Index.handleBitPattern.getter(v364, v365);
      if (v122)
        v123 = swift_isUniquelyReferenced_nonNull_native(v122);
      else
        v123 = 1;
      v124 = sub_1004B804C(&qword_1013EBC60);
      v125 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify(&v357, v124);
      __CocoaSet.formIndex(after:isUnique:)(v126, v123, v351);
      v125(&v357, 0);
      --v100;
    }
    while (v100);
LABEL_91:
    sub_100503494((uint64_t)v364, v365, v366);
    swift_bridgeObjectRelease(v97);
    v105 = v362;
  }
  else
  {
    swift_bridgeObjectRelease(v97);
    v105 = _swiftEmptyArrayStorage;
  }
  v333 = sub_100AF7994((uint64_t)v105);
  swift_bridgeObjectRelease(v105);
  v127 = *v345;
  v128 = *v345 & 0xC000000000000001;
  if (v128)
  {
    if (v127 < 0)
      v129 = *v345;
    else
      v129 = v127 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v127);
    v130 = __CocoaSet.count.getter(v129);
  }
  else
  {
    v130 = *(_QWORD *)(v127 + 16);
    swift_bridgeObjectRetain(*v345);
  }
  if (v130)
  {
    v362 = _swiftEmptyArrayStorage;
    sub_1006006EC(0, v130 & ~(v130 >> 63), 0);
    if (v128)
    {
      if (v127 < 0)
        v131 = v127;
      else
        v131 = v127 & 0xFFFFFFFFFFFFFF8;
      v132 = (_QWORD *)__CocoaSet.startIndex.getter(v131);
      v134 = 1;
    }
    else
    {
      v132 = (_QWORD *)sub_1005C461C(v127);
      v134 = v136 & 1;
    }
    v364 = v132;
    v365 = v133;
    v366 = v134;
    if (v130 < 0)
      goto LABEL_198;
    v137 = v127 & 0xFFFFFFFFFFFFFF8;
    if (v127 < 0)
      v137 = v127;
    v352 = (char *)v137;
    do
    {
      while (1)
      {
        v146 = sub_1005C3F18((unint64_t)v364, v365, v366, v127);
        v147 = *(_QWORD *)(v146 + 24);
        v148 = swift_getObjectType(*(_QWORD *)(v146 + 16));
        v149 = v353;
        v150 = (*(uint64_t (**)(uint64_t, uint64_t))(v147 + 32))(v148, v147);
        v151 = UUID.uuidString.getter(v150);
        v153 = v152;
        (*(void (**)(char *, char *))(v354 + 8))(v149, v355);
        v357 = *(_OWORD *)(v146 + 16);
        swift_unknownObjectRetain(v357);
        v154 = sub_1004B804C(&qword_1013E00C0);
        v155 = String.init<A>(describing:)(&v357, v154);
        v157 = v156;
        *(_QWORD *)&v357 = v151;
        *((_QWORD *)&v357 + 1) = v153;
        swift_bridgeObjectRetain(v153);
        v158._countAndFlagsBits = v155;
        v158._object = v157;
        String.append(_:)(v158);
        swift_release(v146);
        swift_bridgeObjectRelease(v153);
        swift_bridgeObjectRelease(v157);
        v159 = v357;
        v160 = v362;
        if ((swift_isUniquelyReferenced_nonNull_native(v362) & 1) == 0)
        {
          sub_1006006EC(0, v160[2] + 1, 1);
          v160 = v362;
        }
        v162 = v160[2];
        v161 = v160[3];
        if (v162 >= v161 >> 1)
        {
          sub_1006006EC(v161 > 1, v162 + 1, 1);
          v160 = v362;
        }
        v160[2] = v162 + 1;
        *(_OWORD *)&v160[2 * v162 + 4] = v159;
        if (v128)
          break;
        v138 = v364;
        v139 = v365;
        v140 = v366;
        v141 = (_QWORD *)sub_1005C3B08(v364, v365, v366, v127);
        v143 = v142;
        v145 = v144;
        sub_100503494((uint64_t)v138, v139, v140);
        v364 = v141;
        v365 = v143;
        v366 = v145 & 1;
        if (!--v130)
          goto LABEL_121;
      }
      if ((v366 & 1) == 0)
        goto LABEL_205;
      v163 = __CocoaSet.Index.handleBitPattern.getter(v364, v365);
      if (v163)
        v164 = swift_isUniquelyReferenced_nonNull_native(v163);
      else
        v164 = 1;
      v165 = sub_1004B804C(&qword_1013EBC60);
      v166 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify(&v357, v165);
      __CocoaSet.formIndex(after:isUnique:)(v167, v164, v352);
      v166(&v357, 0);
      --v130;
    }
    while (v130);
LABEL_121:
    sub_100503494((uint64_t)v364, v365, v366);
    swift_bridgeObjectRelease(v127);
    v135 = v362;
  }
  else
  {
    swift_bridgeObjectRelease(v127);
    v135 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)&v357 = v135;
  v168 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v169 = sub_100500464();
  v345 = (uint64_t *)BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v168, v169);
  v332 = v170;
  swift_bridgeObjectRelease(v135);
  v171 = *(_QWORD *)v349;
  swift_bridgeObjectRetain(*(_QWORD *)v349);
  sub_1006A4DF8(v172);
  v174 = v173;
  swift_bridgeObjectRelease(v171);
  *(_QWORD *)&v357 = v174;
  v350 = v169;
  v351 = (char *)v168;
  v349 = (char *)BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v168, v169);
  v344 = v175;
  swift_bridgeObjectRelease(v174);
  v176 = *v346;
  v177 = *v346 & 0xC000000000000001;
  if (v177)
  {
    if (v176 < 0)
      v178 = *v346;
    else
      v178 = v176 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v176);
    v179 = __CocoaSet.count.getter(v178);
  }
  else
  {
    v179 = *(_QWORD *)(v176 + 16);
    swift_bridgeObjectRetain(*v346);
  }
  if (v179)
  {
    v362 = _swiftEmptyArrayStorage;
    sub_1006006EC(0, v179 & ~(v179 >> 63), 0);
    if (v177)
    {
      if (v176 < 0)
        v180 = v176;
      else
        v180 = v176 & 0xFFFFFFFFFFFFFF8;
      v181 = (_QWORD *)__CocoaSet.startIndex.getter(v180);
      v183 = 1;
    }
    else
    {
      v181 = (_QWORD *)sub_1005C461C(v176);
      v183 = v185 & 1;
    }
    v364 = v181;
    v365 = v182;
    v366 = v183;
    if (v179 < 0)
      goto LABEL_199;
    v186 = v176 & 0xFFFFFFFFFFFFFF8;
    if (v176 < 0)
      v186 = v176;
    v352 = (char *)v186;
    do
    {
      while (1)
      {
        v195 = sub_1005C3F18((unint64_t)v364, v365, v366, v176);
        v196 = *(_QWORD *)(v195 + 24);
        v197 = swift_getObjectType(*(_QWORD *)(v195 + 16));
        v198 = v353;
        v199 = (*(uint64_t (**)(uint64_t, uint64_t))(v196 + 32))(v197, v196);
        v200 = UUID.uuidString.getter(v199);
        v202 = v201;
        (*(void (**)(char *, char *))(v354 + 8))(v198, v355);
        v357 = *(_OWORD *)(v195 + 16);
        swift_unknownObjectRetain(v357);
        v203 = sub_1004B804C(&qword_1013E00C0);
        v204 = String.init<A>(describing:)(&v357, v203);
        v206 = v205;
        *(_QWORD *)&v357 = v200;
        *((_QWORD *)&v357 + 1) = v202;
        swift_bridgeObjectRetain(v202);
        v207._countAndFlagsBits = v204;
        v207._object = v206;
        String.append(_:)(v207);
        swift_release(v195);
        swift_bridgeObjectRelease(v202);
        swift_bridgeObjectRelease(v206);
        v208 = v357;
        v209 = v362;
        if ((swift_isUniquelyReferenced_nonNull_native(v362) & 1) == 0)
        {
          sub_1006006EC(0, v209[2] + 1, 1);
          v209 = v362;
        }
        v211 = v209[2];
        v210 = v209[3];
        if (v211 >= v210 >> 1)
        {
          sub_1006006EC(v210 > 1, v211 + 1, 1);
          v209 = v362;
        }
        v209[2] = v211 + 1;
        *(_OWORD *)&v209[2 * v211 + 4] = v208;
        if (v177)
          break;
        v187 = v364;
        v188 = v365;
        v189 = v366;
        v190 = (_QWORD *)sub_1005C3B08(v364, v365, v366, v176);
        v192 = v191;
        v194 = v193;
        sub_100503494((uint64_t)v187, v188, v189);
        v364 = v190;
        v365 = v192;
        v366 = v194 & 1;
        if (!--v179)
          goto LABEL_151;
      }
      if ((v366 & 1) == 0)
        goto LABEL_206;
      v212 = __CocoaSet.Index.handleBitPattern.getter(v364, v365);
      if (v212)
        v213 = swift_isUniquelyReferenced_nonNull_native(v212);
      else
        v213 = 1;
      v214 = sub_1004B804C(&qword_1013EBC60);
      v215 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify(&v357, v214);
      __CocoaSet.formIndex(after:isUnique:)(v216, v213, v352);
      v215(&v357, 0);
      --v179;
    }
    while (v179);
LABEL_151:
    sub_100503494((uint64_t)v364, v365, v366);
    swift_bridgeObjectRelease(v176);
    v184 = v362;
  }
  else
  {
    swift_bridgeObjectRelease(v176);
    v184 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)&v357 = v184;
  v346 = (uint64_t *)BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v351, v350);
  v331 = v217;
  swift_bridgeObjectRelease(v184);
  v218 = *v337;
  v219 = *v337 & 0xC000000000000001;
  if (v219)
  {
    if (v218 < 0)
      v220 = *v337;
    else
      v220 = v218 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v218);
    v221 = __CocoaSet.count.getter(v220);
  }
  else
  {
    v221 = *(_QWORD *)(v218 + 16);
    swift_bridgeObjectRetain(*v337);
  }
  if (v221)
  {
    v362 = _swiftEmptyArrayStorage;
    sub_1006006EC(0, v221 & ~(v221 >> 63), 0);
    if (v219)
    {
      if (v218 < 0)
        v222 = v218;
      else
        v222 = v218 & 0xFFFFFFFFFFFFFF8;
      v223 = (_QWORD *)__CocoaSet.startIndex.getter(v222);
      v225 = 1;
    }
    else
    {
      v223 = (_QWORD *)sub_1005C461C(v218);
      v225 = v227 & 1;
    }
    v364 = v223;
    v365 = v224;
    v366 = v225;
    if (v221 < 0)
      goto LABEL_200;
    v228 = v218 & 0xFFFFFFFFFFFFFF8;
    if (v218 < 0)
      v228 = v218;
    v352 = (char *)v228;
    do
    {
      while (1)
      {
        v237 = sub_1005C3F18((unint64_t)v364, v365, v366, v218);
        v238 = *(_QWORD *)(v237 + 24);
        v239 = swift_getObjectType(*(_QWORD *)(v237 + 16));
        v240 = v353;
        v241 = (*(uint64_t (**)(uint64_t, uint64_t))(v238 + 32))(v239, v238);
        v242 = UUID.uuidString.getter(v241);
        v244 = v243;
        (*(void (**)(char *, char *))(v354 + 8))(v240, v355);
        v357 = *(_OWORD *)(v237 + 16);
        swift_unknownObjectRetain(v357);
        v245 = sub_1004B804C(&qword_1013E00C0);
        v246 = String.init<A>(describing:)(&v357, v245);
        v248 = v247;
        *(_QWORD *)&v357 = v242;
        *((_QWORD *)&v357 + 1) = v244;
        swift_bridgeObjectRetain(v244);
        v249._countAndFlagsBits = v246;
        v249._object = v248;
        String.append(_:)(v249);
        swift_release(v237);
        swift_bridgeObjectRelease(v244);
        swift_bridgeObjectRelease(v248);
        v250 = v357;
        v251 = v362;
        if ((swift_isUniquelyReferenced_nonNull_native(v362) & 1) == 0)
        {
          sub_1006006EC(0, v251[2] + 1, 1);
          v251 = v362;
        }
        v253 = v251[2];
        v252 = v251[3];
        if (v253 >= v252 >> 1)
        {
          sub_1006006EC(v252 > 1, v253 + 1, 1);
          v251 = v362;
        }
        v251[2] = v253 + 1;
        *(_OWORD *)&v251[2 * v253 + 4] = v250;
        if (v219)
          break;
        v229 = v364;
        v230 = v365;
        v231 = v366;
        v232 = (_QWORD *)sub_1005C3B08(v364, v365, v366, v218);
        v234 = v233;
        v236 = v235;
        sub_100503494((uint64_t)v229, v230, v231);
        v364 = v232;
        v365 = v234;
        v366 = v236 & 1;
        if (!--v221)
          goto LABEL_181;
      }
      if ((v366 & 1) == 0)
        goto LABEL_207;
      v254 = __CocoaSet.Index.handleBitPattern.getter(v364, v365);
      if (v254)
        v255 = swift_isUniquelyReferenced_nonNull_native(v254);
      else
        v255 = 1;
      v256 = sub_1004B804C(&qword_1013EBC60);
      v257 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify(&v357, v256);
      __CocoaSet.formIndex(after:isUnique:)(v258, v255, v352);
      v257(&v357, 0);
      --v221;
    }
    while (v221);
LABEL_181:
    sub_100503494((uint64_t)v364, v365, v366);
    swift_bridgeObjectRelease(v218);
    v226 = v362;
  }
  else
  {
    swift_bridgeObjectRelease(v218);
    v226 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)&v357 = v226;
  v259 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v351, v350);
  v261 = v260;
  swift_bridgeObjectRelease(v226);
  v262 = v348;
  if (qword_1013DD8B8 != -1)
    swift_once(&qword_1013DD8B8, sub_100A06704);
  swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v364, 0, 0);
  v263 = (void *)static OS_os_log.boardItemLifecycle;
  v264 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v264, &v363);
  *(_OWORD *)(inited + 16) = xmmword_100EFD140;
  v266 = *(_BYTE *)(v262 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges);
  *(_QWORD *)(inited + 56) = &type metadata for Bool;
  *(_QWORD *)(inited + 64) = &protocol witness table for Bool;
  *(_BYTE *)(inited + 32) = v266;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  v267 = sub_1004CFC2C();
  v268 = v332;
  *(_QWORD *)(inited + 72) = v345;
  *(_QWORD *)(inited + 80) = v268;
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v267;
  v269 = v349;
  *(_QWORD *)(inited + 104) = v267;
  *(_QWORD *)(inited + 112) = v269;
  *(_QWORD *)(inited + 120) = v344;
  *(_QWORD *)(inited + 176) = &type metadata for String;
  *(_QWORD *)(inited + 184) = v267;
  v270 = v347;
  v271 = v331;
  *(_QWORD *)(inited + 152) = v346;
  *(_QWORD *)(inited + 160) = v271;
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = v267;
  *(_QWORD *)(inited + 192) = v259;
  *(_QWORD *)(inited + 200) = v261;
  v272 = *(char **)&v270[OBJC_IVAR____TtC8Freeform20CRLCommandController_board];
  v273 = *(_QWORD *)&v272[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v274 = v273 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v273 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v362, 0, 0);
  v275 = v274;
  v276 = v343;
  sub_1004B8460(v275, v343, type metadata accessor for CRLBoardCRDTData);
  v277 = v263;
  swift_retain(v273);
  v278 = sub_1004B804C(&qword_1013E1A80);
  v279 = v353;
  CRRegister.wrappedValue.getter(v278);
  sub_1004B84A4(v276, type metadata accessor for CRLBoardCRDTData);
  swift_release(v273);
  v281 = UUID.uuidString.getter(v280);
  v283 = v282;
  v284.n128_f64[0] = (*(double (**)(char *, char *))(v354 + 8))(v279, v355);
  *(_QWORD *)(inited + 256) = &type metadata for String;
  *(_QWORD *)(inited + 264) = v267;
  *(_QWORD *)(inited + 232) = v281;
  *(_QWORD *)(inited + 240) = v283;
  v285 = static os_log_type_t.default.getter(v284);
  sub_100A06EBC((uint64_t)v277, &_mh_execute_header, v285, "📒 Transaction .close() results:\n  trackChanges: %d\n  added: [%{public}@]\n  modified: [%{public}@]\n  removed: [%{public}@]\n  removedNewlyCreated: [%{public}@]\n  Board: %{public}@", 180, 0, inited);
  swift_setDeallocating(inited);
  v286 = *(_QWORD *)(inited + 16);
  v287 = sub_1004B804C(&qword_1013E0190);
  v288 = v348;
  swift_arrayDestroy(inited + 32, v286, v287);

  v355 = v272;
  objc_msgSend(v272, "fixUp");
  if ((*(_BYTE *)(v288 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) & 1) != 0)
  {
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  v289 = *(void **)(v288 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta);
  if (v289)
  {
    v290 = swift_allocObject(&unk_101276860, 33, 7);
    v291 = v342;
    v292 = v347;
    *(_QWORD *)(v290 + 16) = v342;
    *(_QWORD *)(v290 + 24) = v292;
    *(_BYTE *)(v290 + 32) = v341;
    v293 = v291;
    v294 = v292;
    v295 = v289;
    sub_1006AC144(v288, (uint64_t)v295, (void (*)(id))sub_1006B0674, v290);

    objc_msgSend(*(id *)(*(_QWORD *)&v294[OBJC_IVAR____TtC8Freeform20CRLCommandController_selectionDispatcher]+ OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_selectionStateSnapshots), "removeAllObjects", swift_release(v290).n128_f64[0]);
    v296 = v355;
    v298 = v335;
    v297 = v336;
    *(_QWORD *)&v357 = v336;
    *((_QWORD *)&v357 + 1) = v335;
    v300 = v333;
    v299 = v334;
    v358 = (uint64_t (*)(uint64_t))v334;
    v359 = (void *)v333;
    PassthroughSubject.send(_:)(&v357, v301);
    swift_bridgeObjectRelease(v300);
    swift_bridgeObjectRelease(v299);
    swift_bridgeObjectRelease(v298);
    swift_bridgeObjectRelease(v297);
    v302 = *(_QWORD *)&v296[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
    v303 = *(NSObject **)(v302 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
    v304 = swift_allocObject(&unk_101276888, 32, 7);
    *(_QWORD *)(v304 + 16) = v288;
    *(_QWORD *)(v304 + 24) = v302;
    v305 = swift_allocObject(&unk_1012768B0, 32, 7);
    *(_QWORD *)(v305 + 16) = sub_1006B0744;
    *(_QWORD *)(v305 + 24) = v304;
    v360 = sub_1005B72B0;
    v361 = v305;
    *(_QWORD *)&v357 = _NSConcreteStackBlock;
    *((_QWORD *)&v357 + 1) = *(_QWORD *)"";
    v358 = sub_100618D24;
    v359 = &unk_1012768C8;
    v306 = _Block_copy(&v357);
    v307 = v361;
    swift_retain_n(v302, 2);
    swift_retain(v288);
    swift_retain(v305);
    swift_release(v307);
    dispatch_sync(v303, v306);
    _Block_release(v306);
    LOBYTE(v303) = swift_isEscapingClosureAtFileLocation(v305, "", 89, 314, 26, 1);
    swift_release(v302);
    swift_release(v304);
    swift_release(v305);
    if ((v303 & 1) == 0)
    {
      if ((v340 & 0xFE) == 2)
      {
        sub_1006AB1AC();
        v308 = v348;
LABEL_192:
        v321 = *(_QWORD *)&v347[v338];
        *(_QWORD *)&v347[v338] = 0;
        swift_release(v321);
        v322 = *(_QWORD *)&v294[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext];
        *(_QWORD *)&v294[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext] = 0;
        swift_release(v322);
        sub_1006A5D34();
        swift_release(v308);
        return v339;
      }
      v309 = (uint64_t)&v355[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
      swift_beginAccess(&v355[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo], &v356, 0, 0);
      v310 = v309;
      v311 = v329;
      sub_1004CB7BC(v310, v329, (uint64_t *)&unk_101405E90);
      v312 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v328 + 48))(v311, 1, v330);
      v308 = v348;
      if (v312)
      {
        sub_1004CB800(v311, (uint64_t *)&unk_101405E90);
        goto LABEL_192;
      }
      v313 = v327;
      sub_1004B8460(v311, (uint64_t)v327, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800(v311, (uint64_t *)&unk_101405E90);
      v314 = *v313;
      swift_retain(*v313);
      sub_1004B84A4((uint64_t)v313, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      v315 = *(NSObject **)(v314 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
      v316 = swift_allocObject(&unk_101276900, 32, 7);
      *(_QWORD *)(v316 + 16) = v308;
      *(_QWORD *)(v316 + 24) = v314;
      v317 = swift_allocObject(&unk_101276928, 32, 7);
      *(_QWORD *)(v317 + 16) = sub_1006B0744;
      *(_QWORD *)(v317 + 24) = v316;
      v360 = sub_1005B72B0;
      v361 = v317;
      *(_QWORD *)&v357 = _NSConcreteStackBlock;
      *((_QWORD *)&v357 + 1) = *(_QWORD *)"";
      v358 = sub_100618D24;
      v359 = &unk_101276940;
      v318 = _Block_copy(&v357);
      v319 = v361;
      swift_retain(v348);
      swift_retain(v314);
      swift_retain(v317);
      swift_release(v319);
      dispatch_sync(v315, v318);
      _Block_release(v318);
      LOBYTE(v315) = swift_isEscapingClosureAtFileLocation(v317, "", 89, 314, 26, 1);
      swift_release(v314);
      swift_release(v316);
      v320 = v317;
      v308 = v348;
      swift_release(v320);
      if ((v315 & 1) == 0)
        goto LABEL_192;
      goto LABEL_201;
    }
    goto LABEL_194;
  }
LABEL_208:
  __break(1u);
LABEL_209:
  sub_100757E04(&_mh_execute_header, (uint64_t)"_closeTransaction(applyingSelectionBehavior:phase:commandType:progressivityForEnqueuingClosingGroup:)", 101, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 1054, "Tried to close a transaction without an open transaction context.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to close a transaction without an open transaction context.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_closeTransaction(applyingSelectionBehavior:phase:commandType:progressivityForEnqueuingClosingGroup:)", 101, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 1054, (uint64_t)"Tried to close a transaction without an open transaction context.", 65, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v324, v325);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_1006AFF58(unsigned __int8 a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CKRecordID v24;
  uint64_t v25;
  _BYTE v27[40];

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 896, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 896, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v8 = OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting;
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) != 1)
  {
    *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) = 1;
    sub_1006ABC40(a1);
    v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext);
    if (!v9)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 904, "Tried to call _execute without an open transaction context.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to call _execute without an open transaction context.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 904, (uint64_t)"Tried to call _execute without an open transaction context.", 59, 2u);
      goto LABEL_47;
    }
    swift_retain(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext));
    sub_1006ABB40(v10, a4);
    a4 = a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas, v27, 0, 0);
    v11 = *(_QWORD *)a4;
    if (*(_QWORD *)a4 >> 62)
    {
      if (v11 < 0)
        v21 = *(_QWORD *)a4;
      else
        v21 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)a4);
      v12 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (v12)
      {
LABEL_7:
        v13 = v12 - 1;
        if (__OFSUB__(v12, 1))
        {
          __break(1u);
        }
        else if ((v11 & 0xC000000000000001) == 0)
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v13 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v14 = *(_QWORD *)(v11 + 8 * v13 + 32);
            swift_retain(v14);
            goto LABEL_12;
          }
          __break(1u);
          goto LABEL_34;
        }
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
LABEL_12:
        swift_bridgeObjectRelease(v11);
        v15 = *(unsigned __int8 *)(v14 + 16);
        swift_release(v14);
        if ((v15 - 1) > 2)
        {
LABEL_24:
          swift_release(v9);
LABEL_40:
          *(_BYTE *)(a3 + v8) = 0;
          return;
        }
        if ((a2 & 1) != 0)
        {
          v16 = (void *)sub_100DB2C28(0, 0);
          sub_1006AC144(v9, (uint64_t)v16, 0, 0);

        }
        a4 = *(_QWORD *)a4;
        if (!((unint64_t)a4 >> 62))
        {
          v17 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(a4);
          if (v17)
            goto LABEL_17;
LABEL_38:
          swift_release(v9);
          v22 = a4;
          goto LABEL_39;
        }
LABEL_34:
        if (a4 < 0)
          v23 = a4;
        else
          v23 = a4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a4);
        v17 = _CocoaArrayWrapper.endIndex.getter(v23);
        if (v17)
        {
LABEL_17:
          v18 = v17 - 1;
          if (__OFSUB__(v17, 1))
          {
            __break(1u);
          }
          else if ((a4 & 0xC000000000000001) == 0)
          {
            if ((v18 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v18 < *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v19 = *(_QWORD *)(a4 + 8 * v18 + 32);
              swift_retain(v19);
              goto LABEL_22;
            }
            __break(1u);
            goto LABEL_45;
          }
          v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a4);
LABEL_22:
          swift_bridgeObjectRelease(a4);
          v20 = *(_BYTE *)(v19 + 16);
          swift_release(v19);
          if ((v20 & 0xFE) == 2)
            sub_1006AB1AC();
          goto LABEL_24;
        }
        goto LABEL_38;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)a4);
      if (v12)
        goto LABEL_7;
    }
    swift_release(v9);
    v22 = v11;
LABEL_39:
    swift_bridgeObjectRelease(v22);
    goto LABEL_40;
  }
LABEL_45:
  sub_100757E04(&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 898, "Should not execute a command while executing another command.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should not execute a command while executing another command.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 898, (uint64_t)"Should not execute a command while executing another command.", 61, 2u);
LABEL_47:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, *(Swift::String *)&v25);
  swift_bridgeObjectRelease(a4);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_1006B0620()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006B0630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006B0640(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006B0648()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_1006B0674()
{
  uint64_t v0;

  sub_1006AD7B4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1006B0684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006B0698()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006B06A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLCommandHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1006B06EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EE6B0;
  if (!qword_1013EE6B0)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013EE6B0);
  }
  return result;
}

void sub_1006B0880(void *a1, uint64_t a2, void *a3, const char **a4, SEL *a5)
{
  const char *v8;
  id v9;
  char *v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLMathResultView();
  v8 = *a4;
  v9 = a3;
  v10 = (char *)v11.receiver;
  objc_msgSendSuper2(&v11, v8, v9);
  objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8Freeform17CRLMathResultView_delegate], *a5, v9, v11.receiver, v11.super_class);

}

id sub_1006B0930()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMathResultView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMathResultView()
{
  return objc_opt_self(_TtC8Freeform17CRLMathResultView);
}

uint64_t sub_1006B0990()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

double sub_1006B0B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  double result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46[72];
  _QWORD aBlock[3];
  void *ObjectType;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  char v51[32];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = &v46[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v5);
  v7 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v46[-v13 - 8];
  v15 = v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier, v51, 0, 0);
  sub_1004CB7BC(v15, (uint64_t)v7, &qword_1013E0270);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v7, &qword_1013E0270);
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, aBlock, 0, 0);
    v16 = (id)static OS_os_log.crlSendACopy;
    v17 = static os_log_type_t.error.getter(v16);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v17, "Could not extract board identifier.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    sub_1004DB5FC((uint64_t)v7, (uint64_t)v14);
    v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    v45 = v4;
    v20 = qword_101480E38;
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary);
    v22 = swift_allocObject(&unk_101276A20, 24, 7);
    swift_weakInit(v22 + 16, v1);
    v49 = sub_1006B41D4;
    v50 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100568280;
    ObjectType = &unk_101276A38;
    v23 = _Block_copy(aBlock);
    v24 = objc_msgSend(v19, "addObserverForName:object:queue:usingBlock:", v20, v21, 0, v23, swift_release(v50).n128_f64[0]);
    _Block_release(v23);

    ObjectType = (void *)swift_getObjectType(v24);
    aBlock[0] = v24;
    sub_1006B3094((uint64_t)aBlock);
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, aBlock, 0, 0);
    v25 = (void *)static OS_os_log.crlSendACopy;
    v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v26, v46);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v28 = v25;
    v29 = sub_10067AD38();
    v31 = v30;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v29;
    *(_QWORD *)(inited + 40) = v31;
    v33 = static os_log_type_t.default.getter(v32);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v33, "Started listening for a CRLBoardLibraryProvidingDidUpdateSnapshot notification that contains the identifier for the downloaded copy of the board we are trying to open: %@.", 171, 2, inited);
    swift_setDeallocating(inited);
    v34 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v34);

    v35 = type metadata accessor for TaskPriority(0);
    v36 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v45, 1, 1, v35);
    v37 = swift_allocObject(&unk_101276A20, 24, 7);
    swift_weakInit(v37 + 16, v1);
    sub_1004E1B3C((uint64_t)v14, (uint64_t)v11);
    type metadata accessor for MainActor(0);
    swift_retain(v37);
    v39 = static MainActor.shared.getter(v38);
    v40 = *(unsigned __int8 *)(v9 + 80);
    v41 = (v40 + 40) & ~v40;
    v42 = (_QWORD *)swift_allocObject(&unk_101276A70, v41 + v10, v40 | 7);
    v42[2] = v39;
    v42[3] = &protocol witness table for MainActor;
    v42[4] = v37;
    sub_1004DB5FC((uint64_t)v11, (uint64_t)v42 + v41);
    swift_release(v37);
    v43 = sub_100521B98(v36, (uint64_t)&unk_1013EBEB8, (uint64_t)v42);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    v44 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask) = v43;
    *(_QWORD *)&result = swift_release(v44).n128_u64[0];
  }
  return result;
}

uint64_t sub_1006B102C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[72];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[32];

  v2 = a2;
  v4 = type metadata accessor for Notification(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v2 += 16;
  swift_beginAccess(v2, v38, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v16 = result;
    v17 = result + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess(result + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v37, 0, 0);
    sub_1004CB7BC(v17, (uint64_t)v10, &qword_1013E0270);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      swift_release(v16);
      return sub_1004CB800((uint64_t)v10, &qword_1013E0270);
    }
    else
    {
      v34 = a1;
      sub_1004DB5FC((uint64_t)v10, (uint64_t)v14);
      if (qword_1013DD778 != -1)
        swift_once(&qword_1013DD778, sub_100A02BF8);
      swift_beginAccess(&static OS_os_log.crlSendACopy, v36, 0, 0);
      v18 = (void *)static OS_os_log.crlSendACopy;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, v35);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v21 = v18;
      v22 = UUID.uuidString.getter(v21);
      v24 = v23;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v22;
      *(_QWORD *)(inited + 40) = v24;
      v26 = static os_log_type_t.default.getter(v25);
      sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v26, "Snapshot updated after public board copy was downloaded. Attempting to open board with UUID: %@.", 96, 2, inited);
      swift_setDeallocating(inited);
      v27 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v27);

      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v34, v4);
      if (sub_100BC1960((uint64_t)v7)
        && (v29 = sub_100622DD8((uint64_t)v14, v28),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            (v29 & 1) != 0))
      {
        sub_1006B31F8();
        v30 = *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen);
        *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen) = 1;
        sub_1006B3320(v30);
        swift_release(v16);
      }
      else
      {
        v31 = (id)static OS_os_log.crlSendACopy;
        v33 = static os_log_type_t.default.getter(v32);
        sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v33, "Snapshot update didn't contain shared board identifier. Skipping.", 65, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_release(v16);

      }
      return sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    }
  }
  return result;
}

uint64_t sub_1006B1398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[123] = a5;
  v5[122] = a4;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v5[124] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E0270);
  v5[125] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[126] = swift_task_alloc(v8);
  v5[127] = swift_task_alloc(v8);
  v9 = sub_1004B804C(&qword_1013E01F0);
  v5[128] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v5[129] = v10;
  v5[130] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v5[131] = v11;
  v5[132] = v12;
  return swift_task_switch(sub_1006B148C, v11, v12);
}

uint64_t sub_1006B148C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 976) + 16;
  swift_beginAccess(v1, v0 + 776, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 1064) = Strong;
  if (Strong)
  {
    v3 = Strong;
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 872, 0, 0);
    v4 = (void *)static OS_os_log.crlSendACopy;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 1072) = v5;
    inited = swift_initStackObject(v5, v0 + 584);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v7 = v4;
    v8 = sub_10067AD38();
    v10 = v9;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v11 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 1080) = v11;
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v10;
    v13 = static os_log_type_t.default.getter(v12);
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v13, "Downloading shared copy of board: %@ ", 37, 2, inited);
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 1088) = v14;
    swift_arrayDestroy(inited + 32, 1, v14);

    v15 = OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate;
    *(_QWORD *)(v0 + 1096) = OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate;
    v16 = swift_unknownObjectWeakLoadStrong(v3 + v15);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)(v0 + 1024);
      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
      v20 = swift_allocObject(&unk_1012769D0, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16);
      swift_retain(v3);
      swift_retain(v20);
      v22 = static MainActor.shared.getter(v21);
      v23 = (_QWORD *)swift_allocObject(&unk_101276A98, 40, 7);
      v23[2] = v22;
      v23[3] = &protocol witness table for MainActor;
      v23[4] = v20;
      swift_release(v20);
      v24 = sub_100521BB8(v18, (uint64_t)&unk_1013EBEC0, (uint64_t)v23);
      swift_release(v24);
      swift_unknownObjectRelease(v17);
      swift_release(v3);
    }
    v25 = sub_1004BB5A4((_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler), *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler + 24));
    v27 = v25[1];
    v26 = v25[2];
    *(_OWORD *)(v0 + 656) = *v25;
    *(_OWORD *)(v0 + 672) = v27;
    *(_OWORD *)(v0 + 688) = v26;
    v28 = (_QWORD *)swift_task_alloc(dword_101406A84);
    *(_QWORD *)(v0 + 1104) = v28;
    *v28 = v0;
    v28[1] = sub_1006B1788;
    return sub_100B5FD5C(*(_QWORD *)(v0 + 984));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 1040));
    v30 = *(_QWORD *)(v0 + 1016);
    v31 = *(_QWORD *)(v0 + 1008);
    v32 = *(_QWORD *)(v0 + 992);
    swift_task_dealloc(*(_QWORD *)(v0 + 1024));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006B1788(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 1104);
  *(_QWORD *)(v5 + 1112) = a1;
  *(_QWORD *)(v5 + 1120) = v2;
  swift_task_dealloc(v6);
  if (v2)
  {
    v7 = *(_QWORD *)(v5 + 1056);
    v8 = *(_QWORD *)(v5 + 1048);
    v9 = sub_1006B193C;
  }
  else
  {
    *(_BYTE *)(v5 + 1146) = a2 & 1;
    v7 = *(_QWORD *)(v5 + 1056);
    v8 = *(_QWORD *)(v5 + 1048);
    v9 = sub_1006B1814;
  }
  return swift_task_switch(v9, v8, v7);
}

uint64_t sub_1006B1814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 992);
  *(_BYTE *)(*(_QWORD *)(v0 + 1064)
           + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) = *(_BYTE *)(v0 + 1146);
  v2 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  v3 = (_QWORD *)swift_task_alloc(dword_10140E22C);
  *(_QWORD *)(v0 + 1128) = v3;
  *v3 = v0;
  v3[1] = sub_1006B18BC;
  return sub_100CBBB9C(*(_QWORD *)(v0 + 1016), *(_QWORD *)(v0 + 1112), *(_QWORD *)(v0 + 992), 0, 1);
}

uint64_t sub_1006B18BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1128);
  v4 = *(_QWORD *)(*v1 + 992);
  *(_QWORD *)(*v1 + 1136) = v0;
  swift_task_dealloc(v3);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (v0)
    v5 = sub_1006B2420;
  else
    v5 = sub_1006B2234;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 1048), *(_QWORD *)(v2 + 1056));
}

uint64_t sub_1006B193C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  swift_release(*(_QWORD *)(v0 + 1040));
  v1 = *(_QWORD *)(v0 + 1120);
  *(_QWORD *)(v0 + 968) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  type metadata accessor for CKError(0);
  v4 = v3;
  if ((swift_dynamicCast(v0 + 896, v0 + 968, v2, v3, 0) & 1) != 0)
  {
    v5 = *(void **)(v0 + 896);
    *(_QWORD *)(v0 + 928) = v5;
    v6 = sub_10067422C();
    _BridgedStoredNSError.code.getter(v4, v6);
    if (*(_QWORD *)(v0 + 920) == 4
      || (*(_QWORD *)(v0 + 944) = v5, _BridgedStoredNSError.code.getter(v4, v6), *(_QWORD *)(v0 + 936) == 3))
    {
      v88 = *(_QWORD *)(v0 + 1088);
      v7 = *(_QWORD *)(v0 + 1080);
      v8 = *(_QWORD *)(v0 + 1072);
      v91 = *(_QWORD *)(v0 + 1064);
      v89 = *(_QWORD *)(v0 + 1008);
      v96 = v91 + *(_QWORD *)(v0 + 1096);
      swift_errorRelease(v1);
      v9 = (void *)static OS_os_log.crlSendACopy;
      inited = swift_initStackObject(v8, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      v11 = v9;
      v12 = UUID.uuidString.getter(v11);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = v7;
      *(_QWORD *)(inited + 32) = v12;
      *(_QWORD *)(inited + 40) = v13;
      v14 = v5;
      v15 = sub_10089EABC(v14);
      v17 = v16;

      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v7;
      *(_QWORD *)(inited + 72) = v15;
      *(_QWORD *)(inited + 80) = v17;
      *(_QWORD *)(v0 + 960) = v14;
      v18 = v14;
      v19 = String.init<A>(reflecting:)(v0 + 960, v4);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v7;
      *(_QWORD *)(inited + 112) = v19;
      *(_QWORD *)(inited + 120) = v20;
      v21 = static os_log_type_t.error.getter(v19);
      sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v21, "Failed to download Send A Copy board (UUID: %{public}@) due to network error %{public}@ <%@>", 92, 2, inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 3, v88);

      v22 = type metadata accessor for CRLBoardIdentifier(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v89, 1, 1, v22);
      v23 = v91 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
      swift_beginAccess(v91 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 752, 33, 0);
      sub_100582338(v89, v23, &qword_1013E0270);
      swift_endAccess(v0 + 752);
      sub_1006B31F8();
      Strong = swift_unknownObjectWeakLoadStrong(v96);
      v25 = *(_QWORD *)(v0 + 1064);
      if (Strong)
      {
        v26 = Strong;
        v27 = *(_QWORD *)(v0 + 1024);
        v28 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
        v29 = swift_allocObject(&unk_1012769D0, 24, 7);
        swift_unknownObjectWeakInit(v29 + 16);
        swift_retain(v25);
        swift_retain(v29);
        v31 = static MainActor.shared.getter(v30);
        v32 = swift_allocObject(&unk_101276B10, 41, 7);
        *(_QWORD *)(v32 + 16) = v31;
        *(_QWORD *)(v32 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v32 + 32) = v29;
        *(_BYTE *)(v32 + 40) = 0;
        swift_release(v29);
        v33 = sub_100521B98(v27, (uint64_t)&unk_1013EBED8, v32);
        swift_release(v33);

        swift_unknownObjectRelease(v26);
        swift_release(v25);
      }
      else
      {

      }
      swift_release(v25);
      swift_errorRelease(*(_QWORD *)(v0 + 968));
      goto LABEL_17;
    }

  }
  swift_errorRelease(*(_QWORD *)(v0 + 968));
  *(_QWORD *)(v0 + 904) = v1;
  swift_errorRetain(v1);
  if (swift_dynamicCast(v0 + 1144, v0 + 904, v2, &type metadata for CRLSendACopyBoardDataHandlerError, 0)&& *(_BYTE *)(v0 + 1144) == 14)
  {
    v92 = *(_QWORD *)(v0 + 1088);
    v34 = *(_QWORD *)(v0 + 1080);
    v35 = *(_QWORD *)(v0 + 1072);
    v36 = *(_QWORD *)(v0 + 1064);
    v94 = *(_QWORD *)(v0 + 1008);
    v97 = v36 + *(_QWORD *)(v0 + 1096);
    swift_errorRelease(v1);
    v37 = (void *)static OS_os_log.crlSendACopy;
    v38 = swift_initStackObject(v35, v0 + 168);
    *(_OWORD *)(v38 + 16) = xmmword_100EF5550;
    v39 = v37;
    v40 = UUID.uuidString.getter(v39);
    *(_QWORD *)(v38 + 56) = &type metadata for String;
    *(_QWORD *)(v38 + 64) = v34;
    *(_QWORD *)(v38 + 32) = v40;
    *(_QWORD *)(v38 + 40) = v41;
    v42 = sub_10089EFA4(14);
    *(_QWORD *)(v38 + 96) = &type metadata for String;
    *(_QWORD *)(v38 + 104) = v34;
    *(_QWORD *)(v38 + 72) = v42;
    *(_QWORD *)(v38 + 80) = v43;
    *(_BYTE *)(v0 + 1145) = 14;
    v44 = String.init<A>(reflecting:)(v0 + 1145, &type metadata for CRLSendACopyBoardDataHandlerError);
    *(_QWORD *)(v38 + 136) = &type metadata for String;
    *(_QWORD *)(v38 + 144) = v34;
    *(_QWORD *)(v38 + 112) = v44;
    *(_QWORD *)(v38 + 120) = v45;
    v46 = static os_log_type_t.error.getter(v44);
    sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v46, "Failed to download Send A Copy board (UUID: %{public}@) due to board being unsupported %{public}@ <%@>", 102, 2, v38);
    swift_setDeallocating(v38);
    swift_arrayDestroy(v38 + 32, 3, v92);

    v47 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v94, 1, 1, v47);
    v48 = v36 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess(v36 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 704, 33, 0);
    sub_100582338(v94, v48, &qword_1013E0270);
    swift_endAccess(v0 + 704);
    sub_1006B31F8();
    v49 = swift_unknownObjectWeakLoadStrong(v97);
    v50 = *(_QWORD *)(v0 + 1064);
    if (v49)
    {
      v51 = v49;
      v52 = *(_QWORD *)(v0 + 1024);
      v53 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
      v54 = swift_allocObject(&unk_1012769D0, 24, 7);
      swift_unknownObjectWeakInit(v54 + 16);
      swift_retain(v50);
      swift_retain(v54);
      v56 = static MainActor.shared.getter(v55);
      v57 = swift_allocObject(&unk_101276AE8, 41, 7);
      *(_QWORD *)(v57 + 16) = v56;
      *(_QWORD *)(v57 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v57 + 32) = v54;
      *(_BYTE *)(v57 + 40) = 2;
      swift_release(v54);
      v58 = sub_100521B98(v52, (uint64_t)&unk_1013EBED0, v57);
      swift_release(v58);
      swift_unknownObjectRelease(v51);
      swift_release(v50);
    }
    swift_release(v50);
    swift_errorRelease(*(_QWORD *)(v0 + 904));
  }
  else
  {
    v59 = *(_QWORD *)(v0 + 1080);
    v60 = *(_QWORD *)(v0 + 1072);
    v95 = *(_QWORD *)(v0 + 1064);
    v90 = *(_QWORD *)(v0 + 1088);
    v93 = *(_QWORD *)(v0 + 1008);
    v98 = v95 + *(_QWORD *)(v0 + 1096);
    swift_errorRelease(*(_QWORD *)(v0 + 904));
    v61 = (void *)static OS_os_log.crlSendACopy;
    v62 = swift_initStackObject(v60, v0 + 320);
    *(_OWORD *)(v62 + 16) = xmmword_100EF5550;
    v63 = v61;
    v64 = UUID.uuidString.getter(v63);
    *(_QWORD *)(v62 + 56) = &type metadata for String;
    *(_QWORD *)(v62 + 64) = v59;
    *(_QWORD *)(v62 + 32) = v64;
    *(_QWORD *)(v62 + 40) = v65;
    swift_getErrorValue(v1, v0 + 952, v0 + 800);
    v66 = Error.publicDescription.getter(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
    *(_QWORD *)(v62 + 96) = &type metadata for String;
    *(_QWORD *)(v62 + 104) = v59;
    *(_QWORD *)(v62 + 72) = v66;
    *(_QWORD *)(v62 + 80) = v67;
    swift_getErrorValue(v1, v0 + 912, v0 + 848);
    v68 = Error.fullDescription.getter(*(_QWORD *)(v0 + 856));
    *(_QWORD *)(v62 + 136) = &type metadata for String;
    *(_QWORD *)(v62 + 144) = v59;
    *(_QWORD *)(v62 + 112) = v68;
    *(_QWORD *)(v62 + 120) = v69;
    v70 = static os_log_type_t.error.getter(v68);
    sub_100A06EBC((uint64_t)v63, &_mh_execute_header, v70, "Failed to download Send A Copy board (UUID: %{public}@) with error %{public}@ <%@>", 82, 2, v62);
    swift_setDeallocating(v62);
    swift_arrayDestroy(v62 + 32, 3, v90);

    v71 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v93, 1, 1, v71);
    v72 = v95 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess(v95 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 824, 33, 0);
    sub_100582338(v93, v72, &qword_1013E0270);
    swift_endAccess(v0 + 824);
    sub_1006B31F8();
    v73 = swift_unknownObjectWeakLoadStrong(v98);
    v74 = *(_QWORD *)(v0 + 1064);
    if (v73)
    {
      v75 = v73;
      v76 = *(_QWORD *)(v0 + 1024);
      v77 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 1, 1, v77);
      v78 = swift_allocObject(&unk_1012769D0, 24, 7);
      swift_unknownObjectWeakInit(v78 + 16);
      swift_retain(v74);
      swift_retain(v78);
      v80 = static MainActor.shared.getter(v79);
      v81 = swift_allocObject(&unk_101276AC0, 41, 7);
      *(_QWORD *)(v81 + 16) = v80;
      *(_QWORD *)(v81 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v81 + 32) = v78;
      *(_BYTE *)(v81 + 40) = 1;
      swift_release(v78);
      v82 = sub_100521B98(v76, (uint64_t)&unk_1013EBEC8, v81);
      swift_release(v82);
      swift_unknownObjectRelease(v75);
      swift_errorRelease(v1);
      swift_release_n(v74, 2, v83);
    }
    else
    {
      swift_errorRelease(v1);
      swift_release(v74);
    }
  }
LABEL_17:
  v84 = *(_QWORD *)(v0 + 1016);
  v85 = *(_QWORD *)(v0 + 1008);
  v86 = *(_QWORD *)(v0 + 992);
  swift_task_dealloc(*(_QWORD *)(v0 + 1024));
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006B2234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void *v23;

  v22 = *(_QWORD *)(v0 + 1088);
  v23 = *(void **)(v0 + 1112);
  v1 = *(_QWORD *)(v0 + 1080);
  v2 = *(_QWORD *)(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1016);
  v5 = *(_QWORD *)(v0 + 1008);
  v6 = *(_QWORD *)(v0 + 1000);
  swift_release(*(_QWORD *)(v0 + 1040));
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  sub_100581550(v4, v5);
  v8 = v3 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 728, 33, 0);
  sub_100582338(v5, v8, &qword_1013E0270);
  swift_endAccess(v0 + 728);
  v9 = (void *)static OS_os_log.crlSendACopy;
  inited = swift_initStackObject(v2, v0 + 472);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  sub_1004CB7BC(v8, v5, &qword_1013E0270);
  v11 = v9;
  v12 = String.init<A>(describing:)(v5, v6);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v13;
  v14 = sub_10067AD38();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v1;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = v15;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v17, "Created board with identifier %@ which is a downloaded copy of %@", 65, 2, inited);
  swift_release(v3);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, v22);

  v18 = *(_QWORD *)(v0 + 1016);
  v19 = *(_QWORD *)(v0 + 1008);
  v20 = *(_QWORD *)(v0 + 992);
  swift_task_dealloc(*(_QWORD *)(v0 + 1024));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006B2420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t inited;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v1 = *(_QWORD *)(v0 + 1040);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 1136);
  *(_QWORD *)(v0 + 968) = v2;
  swift_errorRetain(v2);
  v3 = sub_1004B804C(&qword_1013E0210);
  type metadata accessor for CKError(0);
  v5 = v4;
  if ((swift_dynamicCast(v0 + 896, v0 + 968, v3, v4, 0) & 1) != 0)
  {
    v6 = *(void **)(v0 + 896);
    *(_QWORD *)(v0 + 928) = v6;
    v7 = sub_10067422C();
    _BridgedStoredNSError.code.getter(v5, v7);
    if (*(_QWORD *)(v0 + 920) == 4
      || (*(_QWORD *)(v0 + 944) = v6, _BridgedStoredNSError.code.getter(v5, v7), *(_QWORD *)(v0 + 936) == 3))
    {
      v89 = *(_QWORD *)(v0 + 1088);
      v8 = *(_QWORD *)(v0 + 1080);
      v9 = *(_QWORD *)(v0 + 1072);
      v92 = *(_QWORD *)(v0 + 1064);
      v90 = *(_QWORD *)(v0 + 1008);
      v97 = v92 + *(_QWORD *)(v0 + 1096);
      swift_errorRelease(v2);
      v10 = (void *)static OS_os_log.crlSendACopy;
      inited = swift_initStackObject(v9, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      v12 = v10;
      v13 = UUID.uuidString.getter(v12);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = v8;
      *(_QWORD *)(inited + 32) = v13;
      *(_QWORD *)(inited + 40) = v14;
      v15 = v6;
      v16 = sub_10089EABC(v15);
      v18 = v17;

      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v8;
      *(_QWORD *)(inited + 72) = v16;
      *(_QWORD *)(inited + 80) = v18;
      *(_QWORD *)(v0 + 960) = v15;
      v19 = v15;
      v20 = String.init<A>(reflecting:)(v0 + 960, v5);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v8;
      *(_QWORD *)(inited + 112) = v20;
      *(_QWORD *)(inited + 120) = v21;
      v22 = static os_log_type_t.error.getter(v20);
      sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v22, "Failed to download Send A Copy board (UUID: %{public}@) due to network error %{public}@ <%@>", 92, 2, inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 3, v89);

      v23 = type metadata accessor for CRLBoardIdentifier(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v90, 1, 1, v23);
      v24 = v92 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
      swift_beginAccess(v92 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 752, 33, 0);
      sub_100582338(v90, v24, &qword_1013E0270);
      swift_endAccess(v0 + 752);
      sub_1006B31F8();
      Strong = swift_unknownObjectWeakLoadStrong(v97);
      v26 = *(_QWORD *)(v0 + 1064);
      if (Strong)
      {
        v27 = Strong;
        v28 = *(_QWORD *)(v0 + 1024);
        v29 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
        v30 = swift_allocObject(&unk_1012769D0, 24, 7);
        swift_unknownObjectWeakInit(v30 + 16);
        swift_retain(v26);
        swift_retain(v30);
        v32 = static MainActor.shared.getter(v31);
        v33 = swift_allocObject(&unk_101276B10, 41, 7);
        *(_QWORD *)(v33 + 16) = v32;
        *(_QWORD *)(v33 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v33 + 32) = v30;
        *(_BYTE *)(v33 + 40) = 0;
        swift_release(v30);
        v34 = sub_100521B98(v28, (uint64_t)&unk_1013EBED8, v33);
        swift_release(v34);

        swift_unknownObjectRelease(v27);
        swift_release(v26);
      }
      else
      {

      }
      swift_release(v26);
      swift_errorRelease(*(_QWORD *)(v0 + 968));
      goto LABEL_17;
    }

  }
  swift_errorRelease(*(_QWORD *)(v0 + 968));
  *(_QWORD *)(v0 + 904) = v2;
  swift_errorRetain(v2);
  if (swift_dynamicCast(v0 + 1144, v0 + 904, v3, &type metadata for CRLSendACopyBoardDataHandlerError, 0)&& *(_BYTE *)(v0 + 1144) == 14)
  {
    v93 = *(_QWORD *)(v0 + 1088);
    v35 = *(_QWORD *)(v0 + 1080);
    v36 = *(_QWORD *)(v0 + 1072);
    v37 = *(_QWORD *)(v0 + 1064);
    v95 = *(_QWORD *)(v0 + 1008);
    v98 = v37 + *(_QWORD *)(v0 + 1096);
    swift_errorRelease(v2);
    v38 = (void *)static OS_os_log.crlSendACopy;
    v39 = swift_initStackObject(v36, v0 + 168);
    *(_OWORD *)(v39 + 16) = xmmword_100EF5550;
    v40 = v38;
    v41 = UUID.uuidString.getter(v40);
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = v35;
    *(_QWORD *)(v39 + 32) = v41;
    *(_QWORD *)(v39 + 40) = v42;
    v43 = sub_10089EFA4(14);
    *(_QWORD *)(v39 + 96) = &type metadata for String;
    *(_QWORD *)(v39 + 104) = v35;
    *(_QWORD *)(v39 + 72) = v43;
    *(_QWORD *)(v39 + 80) = v44;
    *(_BYTE *)(v0 + 1145) = 14;
    v45 = String.init<A>(reflecting:)(v0 + 1145, &type metadata for CRLSendACopyBoardDataHandlerError);
    *(_QWORD *)(v39 + 136) = &type metadata for String;
    *(_QWORD *)(v39 + 144) = v35;
    *(_QWORD *)(v39 + 112) = v45;
    *(_QWORD *)(v39 + 120) = v46;
    v47 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v47, "Failed to download Send A Copy board (UUID: %{public}@) due to board being unsupported %{public}@ <%@>", 102, 2, v39);
    swift_setDeallocating(v39);
    swift_arrayDestroy(v39 + 32, 3, v93);

    v48 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v95, 1, 1, v48);
    v49 = v37 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess(v37 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 704, 33, 0);
    sub_100582338(v95, v49, &qword_1013E0270);
    swift_endAccess(v0 + 704);
    sub_1006B31F8();
    v50 = swift_unknownObjectWeakLoadStrong(v98);
    v51 = *(_QWORD *)(v0 + 1064);
    if (v50)
    {
      v52 = v50;
      v53 = *(_QWORD *)(v0 + 1024);
      v54 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 1, 1, v54);
      v55 = swift_allocObject(&unk_1012769D0, 24, 7);
      swift_unknownObjectWeakInit(v55 + 16);
      swift_retain(v51);
      swift_retain(v55);
      v57 = static MainActor.shared.getter(v56);
      v58 = swift_allocObject(&unk_101276AE8, 41, 7);
      *(_QWORD *)(v58 + 16) = v57;
      *(_QWORD *)(v58 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v58 + 32) = v55;
      *(_BYTE *)(v58 + 40) = 2;
      swift_release(v55);
      v59 = sub_100521B98(v53, (uint64_t)&unk_1013EBED0, v58);
      swift_release(v59);
      swift_unknownObjectRelease(v52);
      swift_release(v51);
    }
    swift_release(v51);
    swift_errorRelease(*(_QWORD *)(v0 + 904));
  }
  else
  {
    v60 = *(_QWORD *)(v0 + 1080);
    v61 = *(_QWORD *)(v0 + 1072);
    v96 = *(_QWORD *)(v0 + 1064);
    v91 = *(_QWORD *)(v0 + 1088);
    v94 = *(_QWORD *)(v0 + 1008);
    v99 = v96 + *(_QWORD *)(v0 + 1096);
    swift_errorRelease(*(_QWORD *)(v0 + 904));
    v62 = (void *)static OS_os_log.crlSendACopy;
    v63 = swift_initStackObject(v61, v0 + 320);
    *(_OWORD *)(v63 + 16) = xmmword_100EF5550;
    v64 = v62;
    v65 = UUID.uuidString.getter(v64);
    *(_QWORD *)(v63 + 56) = &type metadata for String;
    *(_QWORD *)(v63 + 64) = v60;
    *(_QWORD *)(v63 + 32) = v65;
    *(_QWORD *)(v63 + 40) = v66;
    swift_getErrorValue(v2, v0 + 952, v0 + 800);
    v67 = Error.publicDescription.getter(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
    *(_QWORD *)(v63 + 96) = &type metadata for String;
    *(_QWORD *)(v63 + 104) = v60;
    *(_QWORD *)(v63 + 72) = v67;
    *(_QWORD *)(v63 + 80) = v68;
    swift_getErrorValue(v2, v0 + 912, v0 + 848);
    v69 = Error.fullDescription.getter(*(_QWORD *)(v0 + 856));
    *(_QWORD *)(v63 + 136) = &type metadata for String;
    *(_QWORD *)(v63 + 144) = v60;
    *(_QWORD *)(v63 + 112) = v69;
    *(_QWORD *)(v63 + 120) = v70;
    v71 = static os_log_type_t.error.getter(v69);
    sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v71, "Failed to download Send A Copy board (UUID: %{public}@) with error %{public}@ <%@>", 82, 2, v63);
    swift_setDeallocating(v63);
    swift_arrayDestroy(v63 + 32, 3, v91);

    v72 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v94, 1, 1, v72);
    v73 = v96 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess(v96 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v0 + 824, 33, 0);
    sub_100582338(v94, v73, &qword_1013E0270);
    swift_endAccess(v0 + 824);
    sub_1006B31F8();
    v74 = swift_unknownObjectWeakLoadStrong(v99);
    v75 = *(_QWORD *)(v0 + 1064);
    if (v74)
    {
      v76 = v74;
      v77 = *(_QWORD *)(v0 + 1024);
      v78 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 1, 1, v78);
      v79 = swift_allocObject(&unk_1012769D0, 24, 7);
      swift_unknownObjectWeakInit(v79 + 16);
      swift_retain(v75);
      swift_retain(v79);
      v81 = static MainActor.shared.getter(v80);
      v82 = swift_allocObject(&unk_101276AC0, 41, 7);
      *(_QWORD *)(v82 + 16) = v81;
      *(_QWORD *)(v82 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v82 + 32) = v79;
      *(_BYTE *)(v82 + 40) = 1;
      swift_release(v79);
      v83 = sub_100521B98(v77, (uint64_t)&unk_1013EBEC8, v82);
      swift_release(v83);
      swift_unknownObjectRelease(v76);
      swift_errorRelease(v2);
      swift_release_n(v75, 2, v84);
    }
    else
    {
      swift_errorRelease(v2);
      swift_release(v75);
    }
  }
LABEL_17:
  v85 = *(_QWORD *)(v0 + 1016);
  v86 = *(_QWORD *)(v0 + 1008);
  v87 = *(_QWORD *)(v0 + 992);
  swift_task_dealloc(*(_QWORD *)(v0 + 1024));
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1006B2D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[72];
  _BYTE v35[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  swift_beginAccess(&static OS_os_log.crlSendACopy, v35, 0, 0);
  v7 = (void *)static OS_os_log.crlSendACopy;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v8, v34);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10 = v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier, v33, 0, 0);
  sub_1004CB7BC(v10, (uint64_t)v6, &qword_1013E0270);
  v11 = v7;
  v12 = String.init<A>(describing:)(v6, v4);
  v14 = v13;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v16, "Received a user-initiated request to cancel shared copy of board with identifier: %@.", 85, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v17);

  sub_1006B31F8();
  v18 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  v19 = v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v32, 33, 0);
  sub_100582338((uint64_t)v6, v19, &qword_1013E0270);
  swift_endAccess(v32);
  v20 = OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask);
  if (v21)
  {
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask));
    Task.cancel()();
    swift_release(v21);
    v22 = *(_QWORD *)(v0 + v20);
  }
  else
  {
    v22 = 0;
  }
  *(_QWORD *)(v0 + v20) = 0;
  swift_release(v22);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate);
  if (Strong)
  {
    v25 = Strong;
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
    v27 = swift_allocObject(&unk_1012769D0, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v27);
    v29 = static MainActor.shared.getter(v28);
    v30 = (_QWORD *)swift_allocObject(&unk_1012769F8, 40, 7);
    v30[2] = v29;
    v30[3] = &protocol witness table for MainActor;
    v30[4] = v27;
    swift_release(v27);
    v31 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013EBEA8, (uint64_t)v30);
    swift_unknownObjectRelease(v25);
    *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  }
  return result;
}

uint64_t sub_1006B3094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[24];
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v3 = v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken, v9, 0, 0);
  sub_1004CB7BC(v3, (uint64_t)&v10, &qword_1013E0230);
  if (v11)
  {
    sub_10050CB14(&v10, &v12);
    v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v5 = v13;
    v6 = sub_1004BB5A4(&v12, v13);
    v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    objc_msgSend(v4, "removeObserver:name:object:", v7, qword_101480E38, *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary));

    swift_unknownObjectRelease(v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v12);
  }
  else
  {
    sub_1004CB800((uint64_t)&v10, &qword_1013E0230);
  }
  swift_beginAccess(v3, &v12, 33, 0);
  sub_100582338(a1, v3, &qword_1013E0230);
  return swift_endAccess(&v12);
}

uint64_t sub_1006B31F8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken, v7, 0, 0);
  sub_1004CB7BC(v1, (uint64_t)&v8, &qword_1013E0230);
  if (!v9)
    return sub_1004CB800((uint64_t)&v8, &qword_1013E0230);
  sub_10050CB14(&v8, &v10);
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = v11;
  v4 = sub_1004BB5A4(&v10, v11);
  v5 = _bridgeAnythingToObjectiveC<A>(_:)(v4, v3);
  if (qword_1013DDD68 != -1)
    swift_once(&qword_1013DDD68, sub_100BC0B9C);
  objc_msgSend(v2, "removeObserver:name:object:", v5, qword_101480E38, *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary));

  swift_unknownObjectRelease(v5);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v10);
}

void sub_1006B3320(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _BYTE v28[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v15 = &v28[-v14 - 8];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen) == 1
    && (a1 & 1) == 0)
  {
    v16 = v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, v28, 0, 0);
    sub_1004CB7BC(v16, (uint64_t)v8, &qword_1013E0270);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1004CB800((uint64_t)v8, &qword_1013E0270);
    }
    else
    {
      sub_1004DB5FC((uint64_t)v8, (uint64_t)v15);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate);
      if (Strong)
      {
        v18 = Strong;
        v19 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
        v20 = swift_allocObject(&unk_1012769D0, 24, 7);
        swift_unknownObjectWeakInit(v20 + 16);
        sub_1004E1B3C((uint64_t)v15, (uint64_t)v12);
        type metadata accessor for MainActor(0);
        swift_retain(v20);
        v22 = static MainActor.shared.getter(v21);
        v23 = *(unsigned __int8 *)(v10 + 80);
        v24 = (v23 + 40) & ~v23;
        v25 = (_QWORD *)swift_allocObject(&unk_101276B38, v24 + v11, v23 | 7);
        v25[2] = v22;
        v25[3] = &protocol witness table for MainActor;
        v25[4] = v20;
        sub_1004DB5FC((uint64_t)v12, (uint64_t)v25 + v24);
        swift_release(v20);
        v26 = sub_100618920((uint64_t)v5, (uint64_t)&unk_1013EBEE0, (uint64_t)v25);
        swift_unknownObjectRelease(v18);
        swift_release(v26);
      }
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    }
  }
}

uint64_t sub_1006B35B8()
{
  uint64_t v0;

  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier, &qword_1013E0270);
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, &qword_1013E0270);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler));
  sub_1004CBB0C(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate);
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken, &qword_1013E0230);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1006B3668()
{
  return type metadata accessor for CRLDownloadSharedCopyAttempt(0);
}

uint64_t type metadata accessor for CRLDownloadSharedCopyAttempt(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EBD18;
  if (!qword_1013EBD18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLDownloadSharedCopyAttempt);
  return result;
}

void sub_1006B36AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  sub_10058087C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = "\b";
    v4[3] = &unk_100F038D8;
    v4[4] = &unk_100F038F0;
    v4[5] = &unk_100F03908;
    v4[6] = &unk_100F03920;
    v4[7] = &unk_100F03938;
    v4[8] = &unk_100F03908;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_1006B3758()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F080 = v4;
  *(_QWORD *)algn_10147F088 = v6;
}

void sub_1006B3830()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F090 = v4;
  *(_QWORD *)algn_10147F098 = v6;
}

void sub_1006B38F8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F0A0 = v4;
  *(_QWORD *)algn_10147F0A8 = v6;
}

void sub_1006B39C8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F0B0 = v4;
  *(_QWORD *)algn_10147F0B8 = v6;
}

void sub_1006B3A98()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F0C0 = v4;
  *(_QWORD *)algn_10147F0C8 = v6;
}

void sub_1006B3B68()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F0D0 = v4;
  *(_QWORD *)algn_10147F0D8 = v6;
}

void sub_1006B3C38()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F0E0 = v4;
  *(_QWORD *)algn_10147F0E8 = v6;
}

void sub_1006B3D08()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F0F0 = v4;
  *(_QWORD *)algn_10147F0F8 = v6;
}

void sub_1006B3DD8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F100 = v4;
  *(_QWORD *)algn_10147F108 = v6;
}

void sub_1006B3EA8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F110 = v4;
  *(_QWORD *)algn_10147F118 = v6;
}

void sub_1006B3F78()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F120 = v4;
  *(_QWORD *)algn_10147F128 = v6;
}

void sub_1006B4048()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F130 = v4;
  *(_QWORD *)algn_10147F138 = v6;
}

uint64_t sub_1006B4118()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006B413C()
{
  return sub_1006B4394(40);
}

uint64_t sub_1006B4144(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FA604);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100914254(a1, v4, v5, v6);
}

uint64_t sub_1006B41B0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006B41D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1006B102C(a1, v1);
}

uint64_t sub_1006B41DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006B41EC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006B41F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013EBEB4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1006B1398(a1, v5, v6, v7, v8);
}

uint64_t sub_1006B428C()
{
  return sub_1006B4394(40);
}

uint64_t sub_1006B4294(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FA614);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100913BF4(a1, v4, v5, v6);
}

uint64_t sub_1006B4300()
{
  return sub_1006B4394(41);
}

uint64_t sub_1006B4308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA60C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100913D98(a1, v4, v5, v6, v7);
}

uint64_t sub_1006B4384()
{
  return sub_1006B4394(41);
}

uint64_t sub_1006B438C()
{
  return sub_1006B4394(41);
}

uint64_t sub_1006B4394(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1006B43D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1006B4468(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA61C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100914424(a1, v5, v6, v7, v8);
}

_BYTE *sub_1006B44FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  _BYTE *result;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (_BYTE *)(*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    result = (_BYTE *)sub_1006B6880(a1, a2);
    if (result)
      return (_BYTE *)sub_1005CB82C(result, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006B45D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  _BYTE v12[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = swift_beginAccess(a2 + 24, v12, 0, 0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5)
    return 0;
  else
    return sqlite3_column_int(*(sqlite3_stmt **)(a2 + 24), a1);
}

uint64_t sub_1006B4704(uint64_t a1, uint64_t a2, unint64_t a3)
{
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  Swift::String v10;
  void *v11;

  if (a3)
  {
    v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    object = v5._object;
    String.append(_:)(v5);
    swift_bridgeObjectRelease(object);
    v7._countAndFlagsBits = 2112062;
    v7._object = (void *)0xE300000000000000;
    String.append(_:)(v7);
    v8 = a2;
    v9 = a3;
  }
  else
  {
    v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    v11 = v10._object;
    String.append(_:)(v10);
    swift_bridgeObjectRelease(v11);
    v8 = 62;
    v9 = 0xE100000000000000;
  }
  String.append(_:)(*(Swift::String *)&v8);
  return 60;
}

uint64_t sub_1006B47E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  sub_100501DE0(v3, qword_10147F150);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_10147F150);
  URL.init(string:)(0x656D3A3A656C6966, 0xED00003A79726F6DLL);
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

BOOL sub_1006B48D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[72];
  _BYTE v17[24];

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)(v0 + 32);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v1, v3);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  LODWORD(v1) = sub_1006B7B68(v0, 0xD000000000000017, 0x8000000100FC4D80);
  if ((_DWORD)v1 != 101)
  {
    if (qword_1013DD6B8 == -1)
    {
LABEL_4:
      swift_beginAccess(&static OS_os_log.crlDefault, v17, 0, 0);
      v8 = (void *)static OS_os_log.crlDefault;
      v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v9, v16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 56) = &type metadata for Int32;
      *(_QWORD *)(inited + 64) = &protocol witness table for Int32;
      *(_DWORD *)(inited + 32) = v1;
      v11 = v8;
      v13 = static os_log_type_t.default.getter(v12);
      sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Failed to enable incremental auto-vacuum on the database with error %d", 70, 2, inited);
      swift_setDeallocating(inited);
      v14 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v14);

      return (_DWORD)v1 == 101;
    }
LABEL_7:
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
    goto LABEL_4;
  }
  return (_DWORD)v1 == 101;
}

void sub_1006B4A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void (*v12)(_QWORD);
  id v13;
  void (*v14)(_QWORD *, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  void *v22;
  uint64_t inited;
  id v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;
  void *object;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  int v45;
  int v46;
  void *v47;
  uint64_t v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unsigned int v57;
  void (*v58)(_QWORD *, uint64_t, uint64_t);
  uint64_t v59;
  _BYTE v60[72];
  uint64_t v61;
  unint64_t v62;
  _BYTE v63[32];
  _BYTE v64[48];
  _BYTE v65[8];

  v4 = (sqlite3_stmt **)v2;
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v2 + 32);
  *v10 = v11;
  v12 = *(void (**)(_QWORD))(v8 + 104);
  v57 = enum case for DispatchPredicate.onQueue(_:);
  v58 = (void (*)(_QWORD *, uint64_t, uint64_t))v12;
  v12(v10);
  v13 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  v14 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  v15 = sub_1006B52AC();
  if (!v3 && (v16 & 1) == 0)
  {
    v17 = v15;
    if (v15 >= 1)
    {
      v18 = sub_1006B5028();
      v19 = (double)a1 / (double)v17;
      if (v19 <= -9.22337204e18)
        goto LABEL_29;
      if (v19 >= 9.22337204e18)
        goto LABEL_30;
      v20 = (double)a2 / (double)v17;
      if ((*(_QWORD *)&v19 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(_QWORD *)&v20 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_31;
      }
      if (v20 <= -9.22337204e18)
        goto LABEL_32;
      if (v20 >= 9.22337204e18)
        goto LABEL_33;
      a2 = (uint64_t)v20;
      if (__OFADD__((uint64_t)v19, (uint64_t)v20))
        goto LABEL_34;
      if (v18 >= (uint64_t)v19 + (uint64_t)v20)
      {
        if (qword_1013DD6B8 != -1)
          goto LABEL_35;
        while (1)
        {
          swift_beginAccess(&static OS_os_log.crlDefault, v65, 0, 0);
          v22 = (void *)static OS_os_log.crlDefault;
          v53 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v53, v64);
          v52 = xmmword_100EF5E40;
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v55 = inited + 32;
          v56 = v22;
          v54 = a2;
          if (a2)
          {
            v59 = a2;
            v24 = v22;
            v61 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v62 = v25;
            v26._countAndFlagsBits = 0x6170206565726620;
            v26._object = (void *)0xEB00000000736567;
            String.append(_:)(v26);
            v28 = v61;
            v27 = v62;
            v29 = sub_1004CFC2C();
          }
          else
          {
            v29 = sub_1004CFC2C();
            v31 = v22;
            v27 = 0xEE00736567617020;
            v28 = 0x65657266206C6C61;
          }
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = v29;
          *(_QWORD *)(inited + 32) = v28;
          *(_QWORD *)(inited + 40) = v27;
          v32 = static os_log_type_t.default.getter(v30);
          v33 = v56;
          sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v32, "Performing incremental vacuum with %{public}@", 45, 2, inited);
          swift_setDeallocating(inited);
          v34 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v55, 1, v34);

          v61 = 0;
          v62 = 0xE000000000000000;
          swift_retain(v4);
          _StringGuts.grow(_:)(29);
          swift_bridgeObjectRelease(v62);
          v61 = 0xD00000000000001ALL;
          v62 = 0x8000000100FC4D10;
          v59 = v54;
          v35._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          object = v35._object;
          String.append(_:)(v35);
          swift_bridgeObjectRelease(object);
          v37._countAndFlagsBits = 41;
          v37._object = (void *)0xE100000000000000;
          String.append(_:)(v37);
          v38 = v61;
          v39 = v62;
          v40 = type metadata accessor for SQLiteStatement();
          swift_initStackObject(v40, v63);
          v41 = sub_1006B77CC((uint64_t)v4, v38, v39);
          swift_release(v4);
          if (v3)
            break;
          v4 = (sqlite3_stmt **)(v41 + 24);
          swift_beginAccess(v41 + 24, &v61, 0, 0);
          v42 = v57;
          while (1)
          {
            v43 = *(void **)(*(_QWORD *)(v41 + 16) + 32);
            *v10 = v43;
            v58(v10, v42, v7);
            v44 = v43;
            a2 = _dispatchPreconditionTest(_:)(v10);
            v14(v10, v7);
            if ((a2 & 1) == 0)
              break;
            v45 = sqlite3_step(*v4);
            if (v45 != 100)
            {
              v46 = v45;
              if (v45 == 101)
              {
                swift_release(v41);
              }
              else
              {
                v47 = (void *)static OS_os_log.crlDefault;
                v48 = swift_initStackObject(v53, v60);
                *(_OWORD *)(v48 + 16) = v52;
                *(_QWORD *)(v48 + 56) = &type metadata for Int32;
                *(_QWORD *)(v48 + 64) = &protocol witness table for Int32;
                *(_DWORD *)(v48 + 32) = v46;
                v49 = v47;
                v51 = static os_log_type_t.default.getter(v50);
                sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v51, "Failed to perform incremental vacuum on the database with error %d", 66, 2, v48);
                swift_release(v41);
                swift_setDeallocating(v48);
                swift_arrayDestroy(v48 + 32, 1, v34);

              }
              return;
            }
          }
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        }
      }
    }
  }
}

uint64_t sub_1006B5028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t, __n128);
  id v10;
  void (*v11)(_QWORD *, uint64_t);
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t);
  void (*v24)(_QWORD *, uint64_t, uint64_t, __n128);
  char v25;
  char v26;
  BOOL v27;
  void *v28;
  id v29;
  char v30;
  sqlite3_stmt *v31;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[48];
  _BYTE v37[32];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v0 + 32);
  *v6 = v7;
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v4 + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v9)(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v10 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  v11 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
  v11(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = type metadata accessor for SQLiteStatement();
  inited = swift_initStackObject(v12, v37);
  swift_retain(v2);
  v15 = sub_1006B77CC(v14, 0xD000000000000016, 0x8000000100FC4CC0);
  v16 = swift_release(v2);
  if (v1)
    return inited;
  v17 = *(void **)(*(_QWORD *)(v15 + 16) + 32);
  *v6 = v17;
  v9(v6, v8, v3, v16);
  v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v6);
  v11(v6, v3);
  if ((v17 & 1) == 0)
    goto LABEL_14;
  v19 = type metadata accessor for SQLiteRowIterator();
  v20 = (_QWORD *)swift_initStackObject(v19, v36);
  v20[4] = 0;
  v20[5] = 1;
  v20[2] = v15;
  v20[3] = 0;
  sub_1006B6B04();
  inited = v21;
  swift_setDeallocating(v20);
  sub_1006B7DA4(v20[3], v20[4], v20[5]);
  if (inited)
  {
    v34 = sub_1006B45D4(0, inited);
    v22 = v8;
    v23 = v11;
    v24 = v9;
    v26 = v25;
    swift_release(inited);
    v27 = (v26 & 1) == 0;
    v9 = v24;
    v11 = v23;
    v8 = v22;
    if (v27)
      inited = v34;
    else
      inited = 0;
  }
  v28 = *(void **)(*(_QWORD *)(v15 + 16) + 32);
  *v6 = v28;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v9)(v6, v8, v3);
  v29 = v28;
  v30 = _dispatchPreconditionTest(_:)(v6);
  v11(v6, v3);
  if ((v30 & 1) == 0)
LABEL_15:
    __break(1u);
  swift_beginAccess(v15 + 24, v35, 1, 0);
  v31 = *(sqlite3_stmt **)(v15 + 24);
  if (v31)
  {
    sqlite3_finalize(v31);
    *(_QWORD *)(v15 + 24) = 0;
  }
  swift_release(v15);
  return inited;
}

uint64_t sub_1006B52AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t, __n128);
  id v10;
  void (*v11)(_QWORD *, uint64_t);
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  id v25;
  char v26;
  sqlite3_stmt *v27;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t, uint64_t, __n128);
  _BYTE v31[24];
  _BYTE v32[48];
  _BYTE v33[32];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v0 + 32);
  *v6 = v7;
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v4 + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v9)(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v10 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  v11 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
  v11(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v12 = type metadata accessor for SQLiteStatement();
  inited = swift_initStackObject(v12, v33);
  swift_retain(v2);
  v15 = sub_1006B77CC(v14, 0xD000000000000011, 0x8000000100FC4CA0);
  v16 = swift_release(v2);
  if (v1)
    return inited;
  v17 = *(void **)(*(_QWORD *)(v15 + 16) + 32);
  *v6 = v17;
  v9(v6, v8, v3, v16);
  v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v6);
  v11(v6, v3);
  if ((v17 & 1) == 0)
    goto LABEL_13;
  v30 = v9;
  v19 = type metadata accessor for SQLiteRowIterator();
  v20 = (_QWORD *)swift_initStackObject(v19, v32);
  v20[4] = 0;
  v20[5] = 1;
  v20[2] = v15;
  v20[3] = 0;
  sub_1006B6B04();
  v22 = v21;
  swift_setDeallocating(v20);
  sub_1006B7DA4(v20[3], v20[4], v20[5]);
  if (v22)
  {
    inited = sub_1006B45D4(0, v22);
    v23 = swift_release(v22);
  }
  else
  {
    inited = 0;
  }
  v24 = *(void **)(*(_QWORD *)(v15 + 16) + 32);
  *v6 = v24;
  v30(v6, v8, v3, v23);
  v25 = v24;
  v26 = _dispatchPreconditionTest(_:)(v6);
  v11(v6, v3);
  if ((v26 & 1) == 0)
LABEL_14:
    __break(1u);
  swift_beginAccess(v15 + 24, v31, 1, 0);
  v27 = *(sqlite3_stmt **)(v15 + 24);
  if (v27)
  {
    sqlite3_finalize(v27);
    *(_QWORD *)(v15 + 24) = 0;
  }
  swift_release(v15);
  return inited;
}

uint64_t sub_1006B5520(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  const char *v15;
  id v16;
  sqlite3 **v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  _BYTE v23[24];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(void **)(v2 + 32);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4, v6);
  v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    URL.absoluteString.getter(result);
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    v15 = (const char *)objc_msgSend(v14, "fileSystemRepresentation", swift_bridgeObjectRelease(v13).n128_f64[0]);
    v16 = v14;
    v17 = (sqlite3 **)(v2 + 16);
    swift_beginAccess(v2 + 16, v23, 33, 0);
    v18 = sqlite3_open_v2(v15, (sqlite3 **)(v2 + 16), a1, 0);
    result = swift_endAccess(v23);
    if (v18)
    {
      sqlite3_close_v2(*v17);
      *v17 = 0;
      v19 = sub_1006B79EC();
      swift_allocError(&type metadata for SQLiteError, v19, 0, 0);
      *(_DWORD *)v20 = v18;
      *(_QWORD *)(v20 + 8) = 0;
      *(_QWORD *)(v20 + 16) = 0;
      return swift_willThrow(v21);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006B56A4()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC8Freeform14SQLiteDatabase_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1006B56FC()
{
  return type metadata accessor for SQLiteDatabase(0);
}

uint64_t type metadata accessor for SQLiteDatabase(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EBF18;
  if (!qword_1013EBF18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SQLiteDatabase);
  return result;
}

uint64_t sub_1006B5740(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_100F039C0;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1006B57D4()
{
  qword_10147F168 = -1;
}

uint64_t sub_1006B57E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  id v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  _QWORD aBlock[5];
  uint64_t v25;
  _BYTE v26[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0 + 24, v26, 0, 0);
  v10 = *(_QWORD *)(v0 + 24);
  if (v10)
  {
    v11 = *(void **)(*(_QWORD *)(v1 + 16) + 32);
    v12 = swift_allocObject(&unk_101276C70, 24, 7);
    *(_QWORD *)(v12 + 16) = v10;
    aBlock[4] = sub_1006B7DC8;
    v25 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101276C88;
    v13 = _Block_copy(aBlock);
    v22 = v3;
    v14 = v13;
    v15 = v11;
    static DispatchQoS.unspecified.getter(v16);
    v23 = _swiftEmptyArrayStorage;
    v17 = sub_1004CB65C();
    v18 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v19 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v18, v19, v2, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release(v25);
  }
  swift_release(*(_QWORD *)(v1 + 16));
  return swift_deallocClassInstance(v1, 32, 7);
}

uint64_t type metadata accessor for SQLiteStatement()
{
  return objc_opt_self(_TtC8Freeform15SQLiteStatement);
}

uint64_t sub_1006B59FC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  uint64_t (*v14)(_QWORD *, uint64_t);
  uint64_t result;
  void *v16;
  id v17;
  char v18;
  _BYTE v20[24];

  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(void **)(v9 + 32);
  *v8 = v10;
  v11 = enum case for DispatchPredicate.onQueue(_:);
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 104);
  v12(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  v13 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v8);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8);
  result = v14(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v16 = *(void **)(v9 + 32);
  *v8 = v16;
  v12(v8, v11, v5);
  v17 = v16;
  v18 = _dispatchPreconditionTest(_:)(v8);
  result = v14(v8, v5);
  if ((v18 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = swift_beginAccess(v2 + 24, v20, 0, 0);
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a2 <= 0x7FFFFFFF)
    return sqlite3_bind_int(*(sqlite3_stmt **)(v2 + 24), a2, a1 & 1);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1006B5B50(sqlite3_int64 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  uint64_t (*v14)(_QWORD *, uint64_t);
  uint64_t result;
  void *v16;
  id v17;
  char v18;
  _BYTE v20[24];

  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(void **)(v9 + 32);
  *v8 = v10;
  v11 = enum case for DispatchPredicate.onQueue(_:);
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 104);
  v12(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  v13 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v8);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8);
  result = v14(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v16 = *(void **)(v9 + 32);
  *v8 = v16;
  v12(v8, v11, v5);
  v17 = v16;
  v18 = _dispatchPreconditionTest(_:)(v8);
  result = v14(v8, v5);
  if ((v18 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = swift_beginAccess(v2 + 24, v20, 0, 0);
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a2 <= 0x7FFFFFFF)
    return sqlite3_bind_int64(*(sqlite3_stmt **)(v2 + 24), a2, a1);
LABEL_9:
  __break(1u);
  return result;
}

double sub_1006B5CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sqlite3_stmt *v3;
  sqlite3_stmt *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  __n128 v17;
  unint64_t v18;
  const char *v19;
  double result;
  uint64_t v21;
  _QWORD v22[3];

  v4 = v3;
  v21 = a2;
  v7 = type metadata accessor for String.Encoding(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (_QWORD *)((char *)&v22[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(*((_QWORD *)v4 + 2) + 32);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v22[0] = a1;
  v22[1] = v21;
  static String.Encoding.utf8.getter(v17);
  v18 = sub_1004D292C();
  v12 = StringProtocol.cString(using:)(v10, &type metadata for String, v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess((char *)v4 + 24, v22, 0, 0);
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a3 <= 0x7FFFFFFF)
  {
    v4 = (sqlite3_stmt *)*((_QWORD *)v4 + 3);
    if (qword_1013DCE28 == -1)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  swift_once(&qword_1013DCE28, sub_1006B57D4);
LABEL_5:
  if (v12)
    v19 = (const char *)(v12 + 32);
  else
    v19 = 0;
  sqlite3_bind_text(v4, a3, v19, -1, (void (__cdecl *)(void *))qword_10147F168);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

void sub_1006B5E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(*(_QWORD *)(v2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1006B6188);
}

uint64_t sub_1006B6214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE v24[24];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1006950CC(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1004C1F2C((uint64_t)v12);
    v17 = *(void **)(*(_QWORD *)(v3 + 16) + 32);
    *v9 = v17;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
    v18 = v17;
    LOBYTE(v17) = _dispatchPreconditionTest(_:)(v9);
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v17 & 1) != 0)
    {
      result = swift_beginAccess(v3 + 24, v24, 0, 0);
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF)
          return sqlite3_bind_null(*(sqlite3_stmt **)(v3 + 24), a2);
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v20 = UUID.crl_data()();
  v22 = v21;
  sub_1006B5E80(v20, v21);
  sub_1004BBBC8(v20, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1006B6418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  _BOOL4 v11;
  char v12;
  uint64_t v13;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v11 = sub_1006B45D4(a1, a2) != 0;
    if ((v12 & 1) != 0)
      return 2;
    else
      return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

sqlite3_int64 sub_1006B64F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  sqlite3_int64 result;
  _BYTE v12[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = swift_beginAccess(a2 + 24, v12, 0, 0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5)
    return 0;
  else
    return sqlite3_column_int64(*(sqlite3_stmt **)(a2 + 24), a1);
}

uint64_t sub_1006B6620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  _BYTE v12[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = swift_beginAccess(a2 + 24, v12, 0, 0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5)
    return 0;
  else
    return sqlite3_column_double(*(sqlite3_stmt **)(a2 + 24), a1);
}

const unsigned __int8 *sub_1006B6750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  const unsigned __int8 *result;
  _BYTE v12[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (const unsigned __int8 *)(*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  result = (const unsigned __int8 *)swift_beginAccess(a2 + 24, v12, 0, 0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5)
    return 0;
  result = sqlite3_column_text(*(sqlite3_stmt **)(a2 + 24), a1);
  if (result)
    return (const unsigned __int8 *)String.init(cString:)();
  return result;
}

uint64_t sub_1006B6880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  sqlite3_stmt **v11;
  const void *v12;
  _BYTE v14[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v11 = (sqlite3_stmt **)(a2 + 24);
  result = swift_beginAccess(a2 + 24, v14, 0, 0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5)
    return 0;
  v12 = sqlite3_column_blob(*v11, a1);
  if (v12)
    sqlite3_column_bytes(*v11, a1);
  return (uint64_t)v12;
}

void sub_1006B69C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(*(_QWORD *)(a2 + 16) + 32);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v13 = sub_1006B44FC(a1, a2);
    if (v14 >> 60 == 15)
    {
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
    }
    else
    {
      UUID.init(crl_data:)((uint64_t)v13, v14);
      if (!v3)
      {
        v16 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1006B6B04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = v0[2];
  v6 = *(void **)(*(_QWORD *)(v5 + 16) + 32);
  *v4 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v6 & 1) != 0)
  {
    v8 = v0[4];
    v9 = v0[3];
    v10 = v0[5];
    v0[3] = 0;
    v0[4] = 0;
    v0[5] = 1;
    sub_1006B7DA4(v9, v8, v10);
    swift_beginAccess(v5 + 24, v16, 0, 0);
    v11 = sqlite3_step(*(sqlite3_stmt **)(v5 + 24));
    if (v11 && v11 != 101)
    {
      if (v11 == 100)
      {
        swift_retain(v5);
      }
      else
      {
        v12 = v0[3];
        v13 = v0[4];
        v14 = v0[5];
        v0[3] = v11;
        v0[4] = 0;
        v0[5] = 0;
        sub_1006B7DA4(v12, v13, v14);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006B6C40()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_1006B7DA4(v0[3], v0[4], v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for SQLiteRowIterator()
{
  return objc_opt_self(_TtC8Freeform17SQLiteRowIterator);
}

void sub_1006B6C90(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1006B6B04();
  *a1 = v2;
}

void sub_1006B6CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  void (*v9)(_QWORD *);
  id v10;
  void (*v11)(_QWORD *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void *v22;
  id v23;
  char v24;
  sqlite3_stmt **v25;
  int v26;
  void *v27;
  id v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  __n128 v32;
  void *v33;
  id v34;
  uint64_t (*v35)(_QWORD *, uint64_t);
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE v39[32];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(v0 + 16);
  v8 = *(void **)(v7 + 32);
  *v6 = v8;
  v9 = *(void (**)(_QWORD *))(v4 + 104);
  v36 = enum case for DispatchPredicate.onQueue(_:);
  v9(v6);
  v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v6);
  v11 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
  v11(v6, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(_BYTE *)(v7 + 24) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"begin()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/SQL.swift", 75, 2, 633, "There is already an open transaction on the database", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"begin()", 7, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/SQL.swift", 75, 2u, 633, (uint64_t)"There is already an open transaction on the database", 52, 2u);
  }
  v37 = 0;
  v38 = 0xE000000000000000;
  swift_retain(v7);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v38);
  v37 = 0x204E49474542;
  v38 = 0xE600000000000000;
  v12 = 0x54414944454D4D49;
  if (*(_BYTE *)(v2 + 24) != 1)
    v12 = 0x564953554C435845;
  if (*(_BYTE *)(v2 + 24))
    v13 = v12;
  else
    v13 = 0x4445525245464544;
  if (*(_BYTE *)(v2 + 24))
    v14 = 0xE900000000000045;
  else
    v14 = 0xE800000000000000;
  v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 0x4341534E41525420;
  v16._object = (void *)0xEC0000004E4F4954;
  String.append(_:)(v16);
  v17 = v37;
  v18 = v38;
  v19 = type metadata accessor for SQLiteStatement();
  swift_initStackObject(v19, v39);
  v20 = sub_1006B77CC(v7, v17, v18);
  v21 = swift_release(v7);
  if (!v1)
  {
    v22 = *(void **)(*(_QWORD *)(v20 + 16) + 32);
    *v6 = v22;
    ((void (*)(_QWORD *, _QWORD, uint64_t, __n128))v9)(v6, v36, v3, v21);
    v23 = v22;
    v24 = _dispatchPreconditionTest(_:)(v6);
    v11(v6, v3);
    if ((v24 & 1) != 0)
    {
      v35 = (uint64_t (*)(_QWORD *, uint64_t))v11;
      v25 = (sqlite3_stmt **)(v20 + 24);
      swift_beginAccess(v20 + 24, &v37, 1, 0);
      v26 = sqlite3_step(*(sqlite3_stmt **)(v20 + 24));
      if (v26 == 101)
      {
        *(_BYTE *)(v7 + 24) = 1;
        v27 = *(void **)(*(_QWORD *)(v20 + 16) + 32);
        *v6 = v27;
        ((void (*)(_QWORD *, _QWORD, uint64_t))v9)(v6, v36, v3);
        v28 = v27;
        LOBYTE(v27) = _dispatchPreconditionTest(_:)(v6);
        v26 = v35(v6, v3);
        if ((v27 & 1) != 0)
        {
LABEL_18:
          if (*v25)
          {
            sqlite3_finalize(*v25);
            *v25 = 0;
          }
          swift_release(v20);
          return;
        }
        __break(1u);
      }
      v29 = v26;
      v30 = sub_1006B79EC();
      swift_allocError(&type metadata for SQLiteError, v30, 0, 0);
      *(_DWORD *)v31 = v29;
      *(_QWORD *)(v31 + 8) = 0xD00000000000001DLL;
      *(_QWORD *)(v31 + 16) = 0x8000000100FC4BE0;
      swift_willThrow(v32);
      v33 = *(void **)(*(_QWORD *)(v20 + 16) + 32);
      *v6 = v33;
      ((void (*)(_QWORD *, _QWORD, uint64_t))v9)(v6, v36, v3);
      v34 = v33;
      LOBYTE(v33) = _dispatchPreconditionTest(_:)(v6);
      v35(v6, v3);
      if ((v33 & 1) != 0)
        goto LABEL_18;
LABEL_24:
      __break(1u);
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
}

void sub_1006B70D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t, __n128);
  id v10;
  void (*v11)(_QWORD *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  id v17;
  sqlite3_stmt **v18;
  int v19;
  void *v20;
  id v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  void *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t);
  _BYTE v31[24];
  _BYTE v32[32];

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(void **)(v6 + 32);
  *v5 = v7;
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v3 + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v9)(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v10 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v5);
  v11 = *(void (**)(_QWORD *, uint64_t))(v3 + 8);
  v11(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v12 = type metadata accessor for SQLiteStatement();
  swift_initStackObject(v12, v32);
  swift_retain(v6);
  v14 = sub_1006B77CC(v13, 0xD000000000000012, 0x8000000100FC4BA0);
  v15 = swift_release(v6);
  if (v1)
    return;
  v16 = *(void **)(*(_QWORD *)(v14 + 16) + 32);
  *v5 = v16;
  v9(v5, v8, v2, v15);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v5);
  v11(v5, v2);
  if ((v16 & 1) == 0)
    goto LABEL_13;
  v30 = (uint64_t (*)(_QWORD *, uint64_t))v11;
  v18 = (sqlite3_stmt **)(v14 + 24);
  swift_beginAccess(v14 + 24, v31, 1, 0);
  v19 = sqlite3_step(*(sqlite3_stmt **)(v14 + 24));
  *(_BYTE *)(v6 + 24) = 0;
  if (v19 != 101)
    goto LABEL_7;
  v20 = *(void **)(*(_QWORD *)(v14 + 16) + 32);
  *v5 = v20;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v9)(v5, v8, v2);
  v21 = v20;
  v8 = _dispatchPreconditionTest(_:)(v5);
  v19 = v30(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    v22 = v19;
    v23 = sub_1006B79EC();
    swift_allocError(&type metadata for SQLiteError, v23, 0, 0);
    *(_DWORD *)v24 = v22;
    *(_QWORD *)(v24 + 8) = 0xD00000000000001ELL;
    *(_QWORD *)(v24 + 16) = 0x8000000100FC4BC0;
    swift_willThrow(v25);
    v26 = *(void **)(*(_QWORD *)(v14 + 16) + 32);
    *v5 = v26;
    ((void (*)(_QWORD *, uint64_t, uint64_t))v9)(v5, v8, v2);
    v27 = v26;
    v28 = _dispatchPreconditionTest(_:)(v5);
    v30(v5, v2);
    if ((v28 & 1) != 0)
      goto LABEL_8;
LABEL_14:
    __break(1u);
  }
LABEL_8:
  if (*v18)
  {
    sqlite3_finalize(*v18);
    *v18 = 0;
  }
  swift_release(v14);
}

BOOL sub_1006B7380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t, __n128);
  id v9;
  void (*v10)(_QWORD *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void *v15;
  id v16;
  sqlite3_stmt **v17;
  int v18;
  __n128 v19;
  _BOOL8 v20;
  void *v21;
  id v22;
  char v23;
  _BYTE v26[24];
  _BYTE v27[32];

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(void **)(v5 + 32);
  *v4 = v6;
  v7 = enum case for DispatchPredicate.onQueue(_:);
  v8 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v2 + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v8)(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v9 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v4);
  v10 = *(void (**)(_QWORD *, uint64_t))(v2 + 8);
  v10(v4, v1);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(_BYTE *)(v5 + 24) = 0;
  v11 = type metadata accessor for SQLiteStatement();
  swift_initStackObject(v11, v27);
  swift_retain(v5);
  v13 = sub_1006B77CC(v12, 0xD000000000000014, 0x8000000100FC4B80);
  v14 = swift_release(v5);
  v15 = *(void **)(*(_QWORD *)(v13 + 16) + 32);
  *v4 = v15;
  v8(v4, v7, v1, v14);
  swift_retain(v13);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v4);
  v10(v4, v1);
  if ((v15 & 1) == 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  v17 = (sqlite3_stmt **)(v13 + 24);
  swift_beginAccess(v13 + 24, v26, 1, 0);
  v18 = sqlite3_step(*(sqlite3_stmt **)(v13 + 24));
  v19 = swift_release(v13);
  v20 = v18 == 101;
  v21 = *(void **)(*(_QWORD *)(v13 + 16) + 32);
  *v4 = v21;
  v8(v4, v7, v1, v19);
  v22 = v21;
  v23 = _dispatchPreconditionTest(_:)(v4);
  v10(v4, v1);
  if ((v23 & 1) == 0)
    goto LABEL_9;
  if (*v17)
  {
    sqlite3_finalize(*v17);
    *(_QWORD *)(v13 + 24) = 0;
  }
  swift_release(v13);
  return v20;
}

uint64_t sub_1006B75AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for SQLTransaction()
{
  return objc_opt_self(_TtC8Freeform14SQLTransaction);
}

uint64_t storeEnumTagSinglePayload for SQLTransaction.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1006B763C + 4 * byte_100F03985[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1006B7670 + 4 * byte_100F03980[v4]))();
}

uint64_t sub_1006B7670(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006B7678(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006B7680);
  return result;
}

uint64_t sub_1006B768C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006B7694);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1006B7698(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006B76A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SQLTransaction.Kind()
{
  return &type metadata for SQLTransaction.Kind;
}

uint64_t sub_1006B76C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SQLiteError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for SQLiteError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

unint64_t sub_1006B7788()
{
  unint64_t result;

  result = qword_1013EC328;
  if (!qword_1013EC328)
  {
    result = swift_getWitnessTable(&unk_100F03AD8, &type metadata for SQLTransaction.Kind);
    atomic_store(result, (unint64_t *)&qword_1013EC328);
  }
  return result;
}

uint64_t sub_1006B77CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  sqlite3_stmt **v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  sqlite3 *v22;
  const char *v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _QWORD v33[3];

  v31 = a3;
  v29 = a2;
  v30 = type metadata accessor for String.Encoding(0);
  v5 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = v3;
  *(_QWORD *)(v3 + 24) = 0;
  v13 = (sqlite3_stmt **)(v3 + 24);
  v14 = *(void **)(a1 + 32);
  *v11 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v11);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) != 0)
  {
    v17 = v12;
    *(_QWORD *)(v12 + 16) = a1;
    v18 = v31;
    v33[0] = v29;
    v33[1] = v31;
    v19 = swift_retain(a1);
    static String.Encoding.utf8.getter(v19);
    v20 = sub_1004D292C();
    v21 = StringProtocol.cString(using:)(v7, &type metadata for String, v20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v30);
    swift_bridgeObjectRelease(v18);
    swift_beginAccess(a1 + 16, v33, 0, 0);
    v22 = *(sqlite3 **)(a1 + 16);
    if (v21)
      v23 = (const char *)(v21 + 32);
    else
      v23 = 0;
    swift_beginAccess(v13, v32, 33, 0);
    v24 = sqlite3_prepare_v2(v22, v23, -1, v13, 0);
    swift_endAccess(v32);
    swift_bridgeObjectRelease(v21);
    if (v24)
    {
      swift_release(v17);
      v25 = sub_1006B79EC();
      swift_allocError(&type metadata for SQLiteError, v25, 0, 0);
      *(_DWORD *)v26 = v24;
      *(_QWORD *)(v26 + 8) = 0;
      *(_QWORD *)(v26 + 16) = 0;
      swift_willThrow(v27);
    }
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1006B79EC()
{
  unint64_t result;

  result = qword_1013EC330;
  if (!qword_1013EC330)
  {
    result = swift_getWitnessTable(&unk_100F03A58, &type metadata for SQLiteError);
    atomic_store(result, (unint64_t *)&qword_1013EC330);
  }
  return result;
}

uint64_t sub_1006B7A30(uint64_t a1, uint64_t a2, int a3, sqlite3_stmt *a4, uint64_t a5)
{
  uint64_t v7;
  char *v10;
  uint64_t result;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  LODWORD(v7) = a3;
  v10 = (char *)__DataStorage._bytes.getter();
  if (!v10)
  {
LABEL_4:
    v12 = __OFSUB__(a2, a1);
    v13 = a2 - a1;
    if (v12)
    {
      __break(1u);
    }
    else
    {
      v14 = __DataStorage._length.getter();
      if (v14 >= v13)
        v7 = v13;
      else
        v7 = v14;
      swift_beginAccess((char *)a4 + 24, v15, 0, 0);
      if (a5 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a5 <= 0x7FFFFFFF)
        {
          if (!v10)
            v7 = 0;
          if (v7 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v7 <= 0x7FFFFFFF)
            {
              a4 = (sqlite3_stmt *)*((_QWORD *)a4 + 3);
              if (qword_1013DCE28 == -1)
                return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_10147F168);
LABEL_21:
              swift_once(&qword_1013DCE28, sub_1006B57D4);
              return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_10147F168);
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  result = __DataStorage._offset.getter();
  if (!__OFSUB__(a1, result))
  {
    v10 += a1 - result;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006B7B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  id v16;
  void (*v17)(_QWORD *, uint64_t);
  sqlite3_stmt **v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  _DWORD v25[4];
  _BYTE v26[32];

  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (_QWORD *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for SQLiteStatement();
  swift_initStackObject(v10, v26);
  swift_retain(a1);
  swift_bridgeObjectRetain(a3);
  v11 = sub_1006B77CC(a1, a2, a3);
  v12 = swift_release(a1);
  v13 = *(void **)(*(_QWORD *)(v11 + 16) + 32);
  *v9 = v13;
  v14 = enum case for DispatchPredicate.onQueue(_:);
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t, __n128))v15)(v9, enum case for DispatchPredicate.onQueue(_:), v6, v12);
  v16 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v9);
  v17 = *(void (**)(_QWORD *, uint64_t))(v7 + 8);
  v17(v9, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v18 = (sqlite3_stmt **)(v11 + 24);
  swift_beginAccess(v11 + 24, v25, 1, 0);
  v19 = sqlite3_step(*(sqlite3_stmt **)(v11 + 24));
  v20 = *(void **)(*(_QWORD *)(v11 + 16) + 32);
  *v9 = v20;
  v15(v9, v14, v6);
  v21 = v20;
  v22 = _dispatchPreconditionTest(_:)(v9);
  v17(v9, v6);
  if ((v22 & 1) == 0)
    goto LABEL_7;
  if (*v18)
  {
    sqlite3_finalize(*v18);
    *(_QWORD *)(v11 + 24) = 0;
  }
  swift_release(v11);
  return v19;
}

uint64_t sub_1006B7DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease(a3);
  return result;
}

uint64_t sub_1006B7DB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006B7DC8()
{
  uint64_t v0;

  return sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
}

uint64_t sub_1006B7DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006B7DE0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for SQLiteRow()
{
  return &type metadata for SQLiteRow;
}

_QWORD *assignWithCopy for CRLMiniFormatterColorPalette(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for CRLMiniFormatterColorPalette()
{
  return &type metadata for CRLMiniFormatterColorPalette;
}

uint64_t sub_1006B7E50(void *a1, unsigned __int8 a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  NSString v8;
  NSString v9;

  if (a2 <= 2u && (v2 = objc_msgSend(a1, "referenceColor")) != 0)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "UIColor");
    v5 = objc_msgSend(v4, "accessibilityName");

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  }

  return v6;
}

void sub_1006B7F90(uint64_t a1)
{
  sub_1006B84F0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1006B7FA8(uint64_t a1)
{
  sub_1006B7FDC(1.0, a1, &qword_10147F170);
}

void sub_1006B7FB8(uint64_t a1)
{
  sub_1006B7FDC(0.749019608, a1, &qword_10147F178);
}

void sub_1006B7FCC(uint64_t a1)
{
  sub_1006B7FDC(0.0, a1, &qword_10147F180);
}

void sub_1006B7FDC(double a1, uint64_t a2, _QWORD *a3)
{
  id v4;
  id v5;

  v4 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithWhite:alpha:", a1, 1.0);
  v5 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v4);

  *a3 = v5;
}

void sub_1006B8058(uint64_t a1)
{
  sub_1006B819C(0.423529412, 0.894117647, 0.811764706, a1, &qword_10147F188);
}

void sub_1006B807C(uint64_t a1)
{
  sub_1006B819C(0.921568627, 0.325490196, 0.623529412, a1, &qword_10147F190);
}

void sub_1006B80A0(uint64_t a1)
{
  sub_1006B819C(0.470588235, 0.17254902, 0.964705882, a1, &qword_10147F198);
}

void sub_1006B80C8(uint64_t a1)
{
  sub_1006B819C(0.917647059, 0.301960784, 0.239215686, a1, &qword_10147F1A0);
}

void sub_1006B80EC(uint64_t a1)
{
  sub_1006B819C(0.937254902, 0.549019608, 0.0, a1, &qword_10147F1A8);
}

void sub_1006B810C(uint64_t a1)
{
  sub_1006B819C(0.964705882, 0.807843137, 0.274509804, a1, &qword_10147F1B0);
}

void sub_1006B8130(uint64_t a1)
{
  sub_1006B819C(0.392156863, 0.768627451, 0.4, a1, &qword_10147F1B8);
}

void sub_1006B8154(uint64_t a1)
{
  sub_1006B819C(0.352941176, 0.768627451, 0.964705882, a1, &qword_10147F1C0);
}

void sub_1006B8178(uint64_t a1)
{
  sub_1006B819C(0.160784314, 0.37254902, 0.956862745, a1, &qword_10147F1C8);
}

void sub_1006B819C(double a1, double a2, double a3, uint64_t a4, _QWORD *a5)
{
  id v6;
  id v7;

  v6 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", a1, a2, a3, 1.0);
  v7 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v6);

  *a5 = v7;
}

void sub_1006B8230(uint64_t a1)
{
  sub_1006B819C(0.91372549, 0.501960784, 1.0, a1, &qword_10147F1D0);
}

void sub_1006B8254(uint64_t a1)
{
  sub_1006B819C(1.0, 0.423529412, 0.411764706, a1, &qword_10147F1D8);
}

void sub_1006B8274(uint64_t a1)
{
  sub_1006B819C(1.0, 0.68627451, 0.156862745, a1, &qword_10147F1E0);
}

void sub_1006B8294(uint64_t a1)
{
  sub_1006B819C(1.0, 0.882352941, 0.423529412, a1, &qword_10147F1E8);
}

void sub_1006B82B8(uint64_t a1)
{
  sub_1006B819C(0.501960784, 0.870588235, 0.564705882, a1, &qword_10147F1F0);
}

void sub_1006B82E0(uint64_t a1)
{
  sub_1006B819C(0.392156863, 0.854901961, 1.0, a1, &qword_10147F1F8);
}

void sub_1006B8300(uint64_t a1)
{
  sub_1006B819C(0.811764706, 0.811764706, 0.811764706, a1, &qword_10147F200);
}

uint64_t initializeBufferWithCopyOfBuffer for CRLMiniFormatterColorPalette.Item(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1006B8360(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1006B8360(id result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return result;
  return result;
}

void destroy for CRLMiniFormatterColorPalette.Item(uint64_t a1)
{
  sub_1006B8384(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1006B8384(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u)

}

uint64_t assignWithCopy for CRLMiniFormatterColorPalette.Item(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1006B8360(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1006B8384(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLMiniFormatterColorPalette.Item(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1006B8384(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLMiniFormatterColorPalette.Item(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMiniFormatterColorPalette.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1006B84B0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1006B84C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniFormatterColorPalette.Item()
{
  return &type metadata for CRLMiniFormatterColorPalette.Item;
}

void sub_1006B84F0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1006B8524(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  char v6;

  if (a4)
    return 0;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  sub_1006B8360(v4, 0);
  sub_1006B8360(v5, 0);
  v6 = static NSObject.== infix(_:_:)(v4, v5);
  sub_1006B8384(v5, 0);
  sub_1006B8384(v4, 0);
  return v6 & 1;
}

uint64_t type metadata accessor for CRLBatchedSearchResults()
{
  return objc_opt_self(_TtC8FreeformP33_53ECC4BD98EA3558EFD673D445203F9223CRLBatchedSearchResults);
}

uint64_t sub_1006B86D0(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  _BYTE v6[24];
  __int128 v7;
  uint64_t v8;
  __int128 v9[2];

  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = xmmword_100F03C70;
  *(_QWORD *)(v1 + 96) = 0;
  sub_1004CB7BC(a1, (uint64_t)&v7, &qword_1013EC598);
  if (v8)
  {
    sub_1004CB800(a1, &qword_1013EC598);
    sub_1004DB728(&v7, (uint64_t)v9);
    sub_1004DB728(v9, (uint64_t)&v7);
    swift_beginAccess(v1 + 16, v6, 33, 0);
    sub_1006BA8C0((uint64_t)&v7, v1 + 16);
    swift_endAccess(v6);
  }
  else
  {
    sub_1004CB800((uint64_t)&v7, &qword_1013EC598);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v9, 0, 0);
    v3 = (id)static OS_os_log.crlDefault;
    v4 = static os_log_type_t.debug.getter();
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v4, "CRLBoardSearchHelper is being initialized without a board actor provider. Falling back to searching only board titles.", 118, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1004CB800(a1, &qword_1013EC598);
  }
  return v1;
}

uint64_t sub_1006B8830()
{
  uint64_t v0;

  sub_1006BA6B4();
  sub_1004CB800(v0 + 16, &qword_1013EC598);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));

  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for CRLBoardSearchHelper()
{
  return objc_opt_self(_TtC8Freeform20CRLBoardSearchHelper);
}

double sub_1006B88A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a6;
  v34 = a7;
  v31 = a2;
  v32 = a3;
  v11 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006BA6B4();
  v14 = type metadata accessor for CRLBatchedSearchResults();
  v15 = swift_allocObject(v14, 120, 15);
  swift_defaultActor_initialize(v15, v16);
  *(_QWORD *)(v15 + 112) = &_swiftEmptySetSingleton;
  v17 = (_QWORD *)swift_allocObject(&unk_101276E98, 56, 7);
  v17[2] = v7;
  v17[3] = v15;
  v17[4] = a4;
  v17[5] = a5;
  v17[6] = a1;
  v18 = type metadata accessor for TaskPriority(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v13, 1, 1, v18);
  v20 = (_QWORD *)swift_allocObject(&unk_101276EC0, 72, 7);
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v7;
  v20[5] = v15;
  v20[6] = a4;
  v20[7] = a5;
  v20[8] = a1;
  swift_retain_n(v7, 2);
  swift_retain_n(v15, 2);
  swift_retain_n(a5, 2);
  swift_bridgeObjectRetain_n(a1, 2);
  v21 = sub_100618920((uint64_t)v13, (uint64_t)&unk_1013EC5B8, (uint64_t)v20);
  v22 = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v7 + 64) = v21;
  v23 = swift_release(v22);
  TaskPriority.init(rawValue:)(21, v23);
  v19(v13, 0, 1, v18);
  v24 = (_QWORD *)swift_allocObject(&unk_101276EE8, 112, 7);
  v24[2] = 0;
  v24[3] = 0;
  v25 = v32;
  v24[4] = v31;
  v24[5] = v25;
  v24[6] = a4;
  v24[7] = a5;
  v26 = v33;
  v27 = v34;
  v24[8] = a1;
  v24[9] = v26;
  v24[10] = v27;
  v24[11] = &unk_1013EC5A8;
  v24[12] = v17;
  v24[13] = v7;
  swift_retain(v7);
  swift_retain(a5);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v25);
  swift_retain(v27);
  v28 = sub_100595ACC((uint64_t)v13, (uint64_t)&unk_1013EC5C8, (uint64_t)v24);
  swift_release(v15);
  sub_1004CB800((uint64_t)v13, &qword_1013E01F0);
  v29 = *(_QWORD *)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v28;
  *(_QWORD *)&result = swift_release(v29).n128_u64[0];
  return result;
}

uint64_t sub_1006B8AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[11] = a1;
  v6[12] = a2;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[17] = swift_task_alloc(v7);
  v6[18] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v6[19] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v6[20] = v9;
  v6[21] = v10;
  return swift_task_switch(sub_1006B8B88, v9, v10);
}

uint64_t sub_1006B8B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 64);
  if (v2)
  {
    swift_retain(*(_QWORD *)(v1 + 64));
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    swift_release(v2);
  }
  return swift_task_switch(sub_1006B8C04, *(_QWORD *)(v0 + 104), 0);
}

uint64_t sub_1006B8C04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[17];
  v2 = v0[18];
  v3 = v0[13];
  sub_10068FB24(v0[11], v1);
  swift_beginAccess(v3 + 112, v0 + 8, 33, 0);
  sub_100AD896C(v2, v1);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_endAccess(v0 + 8);
  return swift_task_switch(sub_1006B8C94, v0[20], v0[21]);
}

uint64_t sub_1006B8C94()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 152)).n128_u64[0];
  v3 = *(void **)(v1 + 72);
  if (!v3 || (objc_msgSend(v3, "isValid", v2) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 96);
    v16 = *(_OWORD *)(v0 + 104);
    v7 = (void *)objc_opt_self(NSTimer);
    v8 = *(double *)(v6 + 80);
    v9 = swift_allocObject(&unk_101277050, 48, 7);
    *(_OWORD *)(v9 + 16) = v16;
    *(_QWORD *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 40) = v4;
    *(_QWORD *)(v0 + 48) = sub_1006BB580;
    *(_QWORD *)(v0 + 56) = v9;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = *(_QWORD *)"";
    *(_QWORD *)(v0 + 32) = sub_1004C6194;
    *(_QWORD *)(v0 + 40) = &unk_101277068;
    v10 = _Block_copy((const void *)(v0 + 16));
    v11 = *(_QWORD *)(v0 + 56);
    swift_retain(v16);
    swift_retain(v5);
    swift_bridgeObjectRetain(v4);
    swift_release(v11);
    v12 = objc_msgSend(v7, "scheduledTimerWithTimeInterval:repeats:block:", 0, v10, v8);
    _Block_release(v10);
    v13 = *(void **)(v1 + 72);
    *(_QWORD *)(v1 + 72) = v12;

  }
  v14 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1006B8E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject(&unk_1012770A0, 64, 7);
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = a4;
  v13[7] = a5;
  swift_retain(a2);
  swift_retain(a4);
  swift_bridgeObjectRetain(a5);
  v14 = sub_100521B98((uint64_t)v11, (uint64_t)&unk_1013EC600, (uint64_t)v13);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1006B8EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v7[9] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[10] = swift_task_alloc(v9);
  v7[11] = swift_task_alloc(v9);
  return swift_task_switch(sub_1006B8F5C, 0, 0);
}

uint64_t sub_1006B8F5C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;

  if ((static Task<>.isCancelled.getter(a1) & 1) == 0)
    return swift_task_switch(sub_1006B8FBC, *(_QWORD *)(v1 + 40), 0);
  v2 = *(_QWORD *)(v1 + 80);
  swift_task_dealloc(*(_QWORD *)(v1 + 88));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1006B8FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess(v1 + 112, v0 + 16, 0, 0);
  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 96) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_task_switch(sub_1006B9014, 0, 0);
}

uint64_t sub_1006B9014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006B907C, v2, v3);
}

uint64_t sub_1006B907C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  void (*v17)(double *, __n128);
  __n128 v18;
  uint64_t v19;

  v1 = swift_release(*(_QWORD *)(v0 + 104));
  if ((static Task<>.isCancelled.getter(v1) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRetain(v3);
    if (v4)
    {
      v6 = *(_QWORD *)(v0 + 72);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(_QWORD *)(v6 + 72);
      v9 = v5 + v7;
      do
      {
        v11 = *(_QWORD *)(v0 + 88);
        v10 = *(_QWORD *)(v0 + 96);
        sub_10068FB24(v9, v11);
        v12 = sub_10062325C(v11, v10);
        v13 = *(_QWORD *)(v0 + 88);
        if ((v12 & 1) != 0)
        {
          sub_1004B84E0(v13, *(_QWORD *)(v0 + 80), type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_1006008AC(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1);
          v15 = _swiftEmptyArrayStorage[2];
          v14 = _swiftEmptyArrayStorage[3];
          if (*(_QWORD *)&v15 >= *(_QWORD *)&v14 >> 1)
            sub_1006008AC(*(_QWORD *)&v14 > 1uLL, *(_QWORD *)&v15 + 1, 1);
          v16 = *(_QWORD *)(v0 + 80);
          *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v15 + 1;
          sub_1004B84E0(v16, (uint64_t)_swiftEmptyArrayStorage + v7 + *(_QWORD *)&v15 * v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else
        {
          sub_1004B84A4(v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        v9 += v8;
        --v4;
      }
      while (v4);
      v5 = *(_QWORD *)(v0 + 64);
    }
    v2 = *(_QWORD *)(v0 + 96);
    v17 = *(void (**)(double *, __n128))(v0 + 48);
    v18 = swift_bridgeObjectRelease(v5);
    v17(_swiftEmptyArrayStorage, v18);
    swift_release(_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease(v2);
  v19 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006B9210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v8[10] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[11] = swift_task_alloc(v10);
  v8[12] = swift_task_alloc(v10);
  return swift_task_switch(sub_1006B9284, 0, 0);
}

void sub_1006B9284()
{
  uint64_t v0;
  double v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = *(double *)(*(_QWORD *)(v0 + 40) + 88);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (is_mul_ok((unint64_t)v1, 0x3B9ACA00uLL))
  {
    v2 = 1000000000 * (unint64_t)v1;
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
    *(_QWORD *)(v0 + 104) = v3;
    *v3 = v0;
    v3[1] = sub_1006B9330;
    static Task<>.sleep(nanoseconds:)(v2);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1006B9330()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_1006B93A8, *(_QWORD *)(v2 + 48), 0);
  v6 = v2 + 88;
  v5 = *(_QWORD *)(v2 + 88);
  swift_task_dealloc(*(_QWORD *)(v6 + 8));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1006B93A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess(v1 + 112, v0 + 16, 0, 0);
  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 112) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_task_switch(sub_1006B9400, 0, 0);
}

uint64_t sub_1006B9400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 120) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006B9468, v2, v3);
}

uint64_t sub_1006B9468()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  void (*v17)(double *, __n128);
  __n128 v18;
  uint64_t v19;

  v1 = swift_release(*(_QWORD *)(v0 + 120));
  if ((static Task<>.isCancelled.getter(v1) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 112);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRetain(v3);
    if (v4)
    {
      v6 = *(_QWORD *)(v0 + 80);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(_QWORD *)(v6 + 72);
      v9 = v5 + v7;
      do
      {
        v10 = *(_QWORD *)(v0 + 112);
        v11 = *(_QWORD *)(v0 + 96);
        sub_10068FB24(v9, v11);
        v12 = sub_10062325C(v11, v10);
        v13 = *(_QWORD *)(v0 + 96);
        if ((v12 & 1) != 0)
        {
          sub_1004B84E0(v13, *(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_1006008AC(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1);
          v15 = _swiftEmptyArrayStorage[2];
          v14 = _swiftEmptyArrayStorage[3];
          if (*(_QWORD *)&v15 >= *(_QWORD *)&v14 >> 1)
            sub_1006008AC(*(_QWORD *)&v14 > 1uLL, *(_QWORD *)&v15 + 1, 1);
          v16 = *(_QWORD *)(v0 + 88);
          *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v15 + 1;
          sub_1004B84E0(v16, (uint64_t)_swiftEmptyArrayStorage + v7 + *(_QWORD *)&v15 * v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else
        {
          sub_1004B84A4(v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        v9 += v8;
        --v4;
      }
      while (v4);
      v5 = *(_QWORD *)(v0 + 72);
    }
    v2 = *(_QWORD *)(v0 + 112);
    v17 = *(void (**)(double *, __n128))(v0 + 56);
    v18 = swift_bridgeObjectRelease(v5);
    v17(_swiftEmptyArrayStorage, v18);
    swift_release(_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease(v2);
  v19 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006B9604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 136) = v12;
  *(_OWORD *)(v8 + 120) = v11;
  *(_OWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 88) = a7;
  *(_QWORD *)(v8 + 96) = a8;
  *(_QWORD *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 80) = a6;
  *(_QWORD *)(v8 + 64) = a4;
  return swift_task_switch(sub_1006B963C, 0, 0);
}

uint64_t sub_1006B963C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  NSString v19;
  id v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v0[8];
  v1 = v0[9];
  v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v3 = v2 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    v4 = v0[16];
    v5 = v0[15];
    v35 = v0[14];
    v6 = v0[12];
    v33 = v0[17];
    v34 = v0[13];
    v7 = swift_allocObject(&unk_101276F10, 24, 7);
    swift_bridgeObjectRetain(v1);
    swift_bridgeObjectRetain(v6);
    v9 = sub_1006BAB68(v8, v2, v1);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v1);
    v10 = sub_100AF8094((uint64_t)v9);
    swift_bridgeObjectRelease(v9);
    *(_QWORD *)(v7 + 16) = v10;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease(0xE000000000000000);
    v11._countAndFlagsBits = v2;
    v11._object = (void *)v1;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 0xD000000000000013;
    v12._object = (void *)0x8000000100FC4FC0;
    String.append(_:)(v12);
    v13._countAndFlagsBits = v2;
    v13._object = (void *)v1;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 1684219690;
    v14._object = (void *)0xE400000000000000;
    String.append(_:)(v14);
    v15 = objc_msgSend(objc_allocWithZone((Class)CSSearchQueryContext), "init");
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "setFetchAttributes:", isa);

    v17 = objc_allocWithZone((Class)CSSearchQuery);
    v18 = v15;
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v17, "initWithQueryString:queryContext:", v19, v18, swift_bridgeObjectRelease(0x8000000100FC4FA0).n128_f64[0]);

    v21 = (_QWORD *)swift_allocObject(&unk_101276F38, 48, 7);
    v21[2] = v6;
    v21[3] = v5;
    v21[4] = v4;
    v21[5] = v7;
    v0[6] = sub_1006BB020;
    v0[7] = v21;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *(_QWORD *)"";
    v0[4] = sub_1006BA3F8;
    v0[5] = &unk_101276F50;
    v22 = _Block_copy(v0 + 2);
    v23 = v0[7];
    swift_bridgeObjectRetain(v6);
    swift_retain(v4);
    swift_retain(v7);
    objc_msgSend(v20, "setFoundItemsHandler:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_101276F88, 56, 7);
    v24[2] = v7;
    v24[3] = v33;
    v24[4] = v34;
    v24[5] = v35;
    v24[6] = v6;
    v0[6] = sub_1006BB084;
    v0[7] = v24;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *(_QWORD *)"";
    v0[4] = sub_10053C98C;
    v0[5] = &unk_101276FA0;
    v25 = _Block_copy(v0 + 2);
    v26 = v0[7];
    swift_bridgeObjectRetain(v6);
    swift_retain(v7);
    swift_retain(v33);
    swift_retain(v35);
    objc_msgSend(v20, "setCompletionHandler:", v25, swift_release(v26).n128_f64[0]);
    _Block_release(v25);
    v27 = *(void **)(v33 + 96);
    *(_QWORD *)(v33 + 96) = v20;
    v28 = v20;

    objc_msgSend(v28, "start");
    swift_release(v7);

    return ((uint64_t (*)(void))v0[1])();
  }
  else
  {
    v30 = type metadata accessor for MainActor(0);
    v0[18] = v30;
    v0[19] = static MainActor.shared.getter(v30);
    v31 = dispatch thunk of Actor.unownedExecutor.getter(v30, &protocol witness table for MainActor);
    return swift_task_switch(sub_1006B9A34, v31, v32);
  }
}

uint64_t sub_1006B9A34()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, __n128);
  __n128 v3;

  v1 = v0[12];
  v2 = (void (*)(uint64_t, __n128))v0[10];
  v3 = swift_release(v0[19]);
  v2(v1, v3);
  return swift_task_switch(sub_1006B9A88, 0, 0);
}

uint64_t sub_1006B9A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006B9AE8, v3, v4);
}

uint64_t sub_1006B9AE8()
{
  uint64_t v0;
  void (*v1)(uint64_t, __n128);
  uint64_t v2;
  __n128 v3;

  v1 = *(void (**)(uint64_t, __n128))(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = swift_release(*(_QWORD *)(v0 + 160));
  v1(v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1006B9B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  void *v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t ObjectType;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  double result;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  id v119;
  _QWORD v120[4];
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[2];
  void *v124;

  v93 = a5;
  v110 = a3;
  v111 = a4;
  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v116 = (uint64_t)&v93 - v11;
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v99 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v109 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v108 = (uint64_t)&v93 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v93 - v20;
  v98 = v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v93 - v24;
  v124 = &_swiftEmptySetSingleton;
  if ((unint64_t)a1 >> 62)
    goto LABEL_43;
  v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v26)
  {
    v27 = 0;
    v101 = a1 & 0xC000000000000001;
    v100 = *(_QWORD *)(a2 + 16);
    v94 = a1 + 32;
    v117 = v21 + 8;
    v103 = (char *)&type metadata for () + 8;
    v97 = a1;
    v96 = a2;
    v107 = v9;
    v106 = v14;
    v115 = v15;
    v105 = v21;
    v95 = v26;
    v104 = v25;
    while (1)
    {
      v28 = v101 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, a1) : *(id *)(v94 + 8 * v27);
      v119 = v28;
      v29 = __OFADD__(v27++, 1);
      v30 = v100;
      if (v29)
        break;
      if (v100)
      {
        v102 = v27;
        v31 = *(unsigned __int8 *)(v99 + 80);
        v9 = (char *)(a2 + ((v31 + 32) & ~v31));
        v32 = *(_QWORD *)(v99 + 72);
        v113 = ((v31 + 48) & ~v31) + v98;
        v114 = (v31 + 48) & ~v31;
        v112 = v31 | 7;
        swift_bridgeObjectRetain(a2);
        v33 = v30;
        v118 = v32;
        do
        {
          sub_10068FB24((uint64_t)v9, (uint64_t)v25);
          sub_10068FB24((uint64_t)v25, (uint64_t)v21);
          if (swift_getEnumCaseMultiPayload(v21, v15) != 2)
          {
            v34 = (uint64_t)v21;
            v35 = type metadata accessor for CRLBoardLibraryViewModel.Item;
LABEL_12:
            sub_1004B84A4(v34, v35);
            goto LABEL_13;
          }
          v36 = sub_1004B804C((uint64_t *)&unk_1013EA630);
          swift_bridgeObjectRelease(*(_QWORD *)&v117[*(int *)(v36 + 48)]);
          sub_1004B84E0((uint64_t)v21, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
          v37 = objc_msgSend(v119, "attributeSet", v93);
          v38 = objc_msgSend(v37, "contentType");

          if (v38)
          {
            v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
            v41 = v40;

          }
          else
          {
            v39 = 0;
            v41 = 0;
          }
          if (qword_1013DCFD8 != -1)
            swift_once(&qword_1013DCFD8, sub_1007123CC);
          v42 = type metadata accessor for UTType(0);
          v43 = sub_1004F2A1C(v42, (uint64_t)qword_10147F3F0);
          v44 = UTType.identifier.getter(v43);
          v46 = v45;
          if (!v41)
          {
            swift_bridgeObjectRelease(v45);
LABEL_29:
            sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
            goto LABEL_31;
          }
          if (v39 == v44 && v41 == v45)
          {
            swift_bridgeObjectRelease(v41);
            *(_QWORD *)&v47 = swift_bridgeObjectRelease(v46).n128_u64[0];
          }
          else
          {
            v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v44, v45, 0);
            swift_bridgeObjectRelease(v41);
            *(_QWORD *)&v47 = swift_bridgeObjectRelease(v46).n128_u64[0];
            if ((v48 & 1) == 0)
              goto LABEL_29;
          }
          v49 = objc_msgSend(v119, "uniqueIdentifier", v47);
          v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
          v52 = v51;

          v123[0] = v50;
          v123[1] = v52;
          v54 = UUID.uuidString.getter(v53);
          v56 = v55;
          v121 = v54;
          v122 = v55;
          swift_bridgeObjectRetain(v55);
          v57._countAndFlagsBits = 58;
          v57._object = (void *)0xE100000000000000;
          String.append(_:)(v57);
          swift_bridgeObjectRelease(v56);
          v58 = v121;
          v59 = v122;
          v60 = (uint64_t *)&v14[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
          v62 = *v60;
          v61 = (void *)v60[1];
          v121 = v58;
          v122 = v59;
          swift_bridgeObjectRetain(v59);
          v63._countAndFlagsBits = v62;
          v63._object = v61;
          String.append(_:)(v63);
          swift_bridgeObjectRelease(v59);
          v64 = v122;
          v65 = sub_1004D292C();
          LOBYTE(v58) = StringProtocol.contains<A>(_:)(&v121, &type metadata for String, &type metadata for String, v65, v65);
          swift_bridgeObjectRelease(v52);
          swift_bridgeObjectRelease(v64);
          if ((v58 & 1) != 0)
          {
            v66 = v109;
            sub_10068FB24((uint64_t)v25, v109);
            v67 = v108;
            sub_100AD896C(v108, v66);
            sub_1004B84A4(v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v68 = type metadata accessor for TaskPriority(0);
            v69 = *(_QWORD *)(v68 - 8);
            v70 = v116;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v116, 1, 1, v68);
            sub_10068FB24((uint64_t)v25, v67);
            v71 = (_QWORD *)swift_allocObject(&unk_101277000, v113, v112);
            v71[2] = 0;
            v72 = v71 + 2;
            v73 = v110;
            v74 = v111;
            v71[3] = 0;
            v71[4] = v73;
            v71[5] = v74;
            sub_1004B84E0(v67, (uint64_t)v71 + v114, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v75 = v70;
            v76 = (uint64_t)v107;
            sub_1004CB7BC(v75, (uint64_t)v107, &qword_1013E01F0);
            LODWORD(v67) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v76, 1, v68);
            v77 = swift_retain(v74);
            if ((_DWORD)v67 == 1)
            {
              sub_1004CB800(v76, &qword_1013E01F0);
              v78 = 0;
            }
            else
            {
              v79 = TaskPriority.rawValue.getter(v77);
              (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v76, v68);
              v78 = v79;
            }
            v80 = *v72;
            v21 = v105;
            v25 = v104;
            if (*v72)
            {
              v81 = v71[3];
              ObjectType = swift_getObjectType(*v72);
              swift_unknownObjectRetain(v80);
              v83 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v81);
              v85 = v84;
              swift_unknownObjectRelease(v80);
            }
            else
            {
              v83 = 0;
              v85 = 0;
            }
            v15 = v115;
            v32 = v118;
            v86 = swift_allocObject(&unk_101277028, 32, 7);
            *(_QWORD *)(v86 + 16) = &unk_1013EC5F0;
            *(_QWORD *)(v86 + 24) = v71;
            if (v85 | v83)
            {
              v120[0] = 0;
              v120[1] = 0;
              v87 = v120;
              v120[2] = v83;
              v120[3] = v85;
            }
            else
            {
              v87 = 0;
            }
            v88 = swift_task_create(v78 | 0x1000, v87, v103, &unk_1013FE730);
            swift_release(v88);
            sub_1004CB800(v116, &qword_1013E01F0);
            v14 = v106;
            v34 = (uint64_t)v106;
            v35 = type metadata accessor for CRLBoardIdentifier;
            goto LABEL_12;
          }
          sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
          v15 = v115;
LABEL_31:
          v32 = v118;
LABEL_13:
          sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v9 += v32;
          --v33;
        }
        while (v33);

        a2 = v96;
        swift_bridgeObjectRelease(v96);
        a1 = v97;
        v26 = v95;
        v27 = v102;
        if (v102 == v95)
          goto LABEL_41;
      }
      else
      {

        if (v27 == v26)
        {
LABEL_41:
          swift_bridgeObjectRelease(a1);
          v89 = v124;
          goto LABEL_48;
        }
      }
    }
    __break(1u);
LABEL_43:
    if (a1 < 0)
      v90 = a1;
    else
      v90 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v26 = _CocoaArrayWrapper.endIndex.getter(v90);
  }
  swift_bridgeObjectRelease(a1);
  v89 = &_swiftEmptySetSingleton;
LABEL_48:
  swift_beginAccess(v93 + 16, v123, 33, 0);
  swift_bridgeObjectRetain(v89);
  sub_100512954(v91);
  swift_endAccess(v123);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v89).n128_u64[0];
  return result;
}

uint64_t sub_1006BA394(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v6 + 16) = v8;
  *v8 = v6;
  v8[1] = sub_1004CFD00;
  return v10(a6);
}

double sub_1006BA3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  double result;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_1006BB300();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v4(v6, v7);
  swift_release(v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_1006BA454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE v21[24];

  v11 = sub_1004B804C(&qword_1013E01F0);
  v12 = __chkstk_darwin(v11);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = static Task<>.isCancelled.getter(v12);
  if ((result & 1) == 0)
  {
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
    swift_beginAccess(a2 + 16, v21, 0, 0);
    v17 = *(_QWORD *)(a2 + 16);
    v18 = (_QWORD *)swift_allocObject(&unk_101276FD8, 72, 7);
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = a3;
    v18[5] = a4;
    v18[6] = a5;
    v18[7] = a6;
    v18[8] = v17;
    swift_bridgeObjectRetain(v17);
    swift_retain(a3);
    swift_retain(a5);
    swift_bridgeObjectRetain(a6);
    v19 = sub_1009880C4((uint64_t)v14, (uint64_t)&unk_1013EC5D8, (uint64_t)v18);
    swift_release(v19);
    return sub_1004CB800((uint64_t)v14, &qword_1013E01F0);
  }
  return result;
}

uint64_t sub_1006BA590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch(sub_1006BA5B0, 0, 0);
}

uint64_t sub_1006BA5B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[6];
  objc_msgSend(*(id *)(v0[2] + 72), "invalidate");
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v1);
  v0[7] = sub_1006BB140(v3, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  v4 = type metadata accessor for MainActor(0);
  v0[8] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006BA668, v5, v6);
}

uint64_t sub_1006BA668()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, __n128);
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void (**)(uint64_t, __n128))(v0 + 24);
  v3 = swift_release(*(_QWORD *)(v0 + 64));
  v2(v1, v3);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1006BA6B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  objc_msgSend(*(id *)(v0 + 96), "cancel");
  v2 = *(_QWORD *)(v0 + 64);
  if (v2)
  {
    swift_retain(*(_QWORD *)(v0 + 64));
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    v1 = swift_release(v2).n128_u64[0];
  }
  v3 = *(_QWORD *)(v0 + 56);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v0 + 56));
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    v1 = swift_release(v3).n128_u64[0];
  }
  return objc_msgSend(*(id *)(v0 + 72), "invalidate", *(double *)&v1);
}

double sub_1006BA770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v9 = sub_1004B804C(&qword_1013EC608);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1012770C8, v14 + v11, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1006B88A0(a3, a4, a5, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, (uint64_t)sub_1006BB6B8, v15);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1006BA878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  swift_bridgeObjectRetain(a1);
  v1 = sub_1004B804C(&qword_1013EC608);
  CheckedContinuation.resume(returning:)(&v3, v1);
  return 0;
}

uint64_t sub_1006BA8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EC598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006BA90C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013EC5A4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_1006B8AE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1006BA988()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1006BA9CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013EC5B4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CF80C;
  return sub_1006B9210(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1006BAA60()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1006BAAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = swift_task_alloc(dword_1013EC5C4);
  v5 = *(_OWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 56);
  v7 = *(_OWORD *)(v0 + 72);
  v8 = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1004CFD00;
  *(_QWORD *)(v4 + 136) = v3;
  *(_OWORD *)(v4 + 120) = v8;
  *(_OWORD *)(v4 + 104) = v7;
  *(_OWORD *)(v4 + 88) = v6;
  *(_OWORD *)(v4 + 72) = v5;
  *(_QWORD *)(v4 + 64) = v2;
  return swift_task_switch(sub_1006B963C, 0, 0);
}

uint64_t sub_1006BAB44()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double *sub_1006BAB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  id v28;
  NSString v29;
  NSString v30;
  uint64_t *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  double *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];
  double *v48;

  v46 = a2;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6);
  v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v45);
  v44 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - v10;
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - v14;
  result = _swiftEmptyArrayStorage;
  v48 = _swiftEmptyArrayStorage;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v39 = v3;
    v40 = a3;
    v18 = *(_QWORD *)(v13 + 72);
    v42 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v19 = a1 + v42;
    do
    {
      sub_10068FB24(v19, (uint64_t)v15);
      sub_10068FB24((uint64_t)v15, (uint64_t)v11);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v45);
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v21 = v41;
          v43 = v19;
          sub_1004B84E0((uint64_t)v11, v41, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100BCAD68();
          v23 = v22;
          v25 = v24;
          v26 = v21;
          v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
          v19 = v43;
        }
        else
        {
          v31 = (uint64_t *)&v11[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
          v23 = *v31;
          v25 = v31[1];
          v26 = (uint64_t)v11;
          v27 = type metadata accessor for CRLBoardIdentifier;
        }
        sub_1004B84A4(v26, v27);
      }
      else
      {
        v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v29 = String._bridgeToObjectiveC()();
        v30 = String._bridgeToObjectiveC()();
        v32 = objc_msgSend(v28, "localizedStringForKey:value:table:", v29, v30, 0);

        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v25 = v33;

        a3 = v40;
      }
      v47[2] = v23;
      v47[3] = v25;
      v47[0] = v46;
      v47[1] = a3;
      v34 = sub_1004D292C();
      v35 = StringProtocol.localizedStandardContains<A>(_:)(v47, &type metadata for String, &type metadata for String, v34, v34);
      swift_bridgeObjectRelease(v25);
      if ((v35 & 1) != 0)
      {
        sub_1004B84E0((uint64_t)v15, v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v36 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
        {
          sub_1006008AC(0, *((_QWORD *)v36 + 2) + 1, 1);
          v36 = v48;
        }
        v38 = *((_QWORD *)v36 + 2);
        v37 = *((_QWORD *)v36 + 3);
        if (v38 >= v37 >> 1)
        {
          sub_1006008AC(v37 > 1, v38 + 1, 1);
          v36 = v48;
        }
        *((_QWORD *)v36 + 2) = v38 + 1;
        sub_1004B84E0(v44, (uint64_t)v36 + v42 + v38 * v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      else
      {
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v19 += v18;
      --v17;
    }
    while (v17);
    return v48;
  }
  return result;
}

uint64_t sub_1006BB00C()
{
  return sub_1006BB53C((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD, __n128))&_swift_release);
}

double sub_1006BB020(uint64_t a1)
{
  uint64_t *v1;

  return sub_1006B9B34(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1006BB02C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006BB03C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006BB048()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1006BB084(uint64_t a1)
{
  uint64_t *v1;

  return sub_1006BA454(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1006BB094()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1006BB0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc(dword_1013EC5D4);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1004CFD00;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch(sub_1006BA5B0, 0, 0);
}

double *sub_1006BB140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  double *v25;

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v22 - v10;
  result = _swiftEmptyArrayStorage;
  v25 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v22[1] = v2;
    v14 = *(_QWORD *)(v9 + 72);
    v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = a1 + v24;
    v16 = _swiftEmptyArrayStorage;
    v17 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v23 = a2;
    do
    {
      sub_10068FB24(v15, (uint64_t)v11);
      if ((sub_10062325C((uint64_t)v11, a2) & 1) != 0)
      {
        v18 = v17;
        sub_1004B84E0((uint64_t)v11, (uint64_t)v7, v17);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          sub_1006008AC(0, *((_QWORD *)v16 + 2) + 1, 1);
        v16 = v25;
        v20 = *((_QWORD *)v25 + 2);
        v19 = *((_QWORD *)v25 + 3);
        if (v20 >= v19 >> 1)
        {
          sub_1006008AC(v19 > 1, v20 + 1, 1);
          v16 = v25;
        }
        *((_QWORD *)v16 + 2) = v20 + 1;
        v21 = (uint64_t)v16 + v24 + v20 * v14;
        v17 = v18;
        sub_1004B84E0((uint64_t)v7, v21, v18);
        a2 = v23;
      }
      else
      {
        sub_1004B84A4((uint64_t)v11, v17);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

unint64_t sub_1006BB300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EC5E0;
  if (!qword_1013EC5E0)
  {
    v1 = objc_opt_self(CSSearchableItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1013EC5E0);
  }
  return result;
}

uint64_t sub_1006BB33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  v6 = v0 + v4;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v4, v10);
    v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v11 + 20) + 8));
    v8 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0 + v4, 5, v8))
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
LABEL_6:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 48) + 8));
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1006BB460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  v3 = *(int **)(v0 + 32);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1013EC5EC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  v8 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v6 = (_QWORD *)swift_task_alloc(v3[1]);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_1004CFD00;
  return v8(v4);
}

uint64_t sub_1006BB504()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006BB528()
{
  return sub_1006BB53C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD, __n128))&_swift_bridgeObjectRelease);
}

uint64_t sub_1006BB53C(void (*a1)(_QWORD), void (*a2)(_QWORD, __n128))
{
  _QWORD *v2;
  __n128 v4;

  a1(v2[2]);
  v4 = swift_release(v2[4]);
  a2(v2[5], v4);
  return swift_deallocObject(v2, 48, 7);
}

double sub_1006BB580(uint64_t a1)
{
  uint64_t *v1;

  return sub_1006B8E00(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1006BB58C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006BB5C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1013EC5FC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1006B8EEC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1006BB654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EC608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1006BB6B8(uint64_t a1)
{
  sub_1004B804C(&qword_1013EC608);
  return sub_1006BA878(a1);
}

id sub_1006BB760(uint64_t a1, void *a2, void *a3, void *a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_1006BBEF0(a1, a2, a3, a4);

  return v10;
}

id sub_1006BB898(char *a1, void *a2, void *a3, void *a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  Class isa;
  id v18;
  uint64_t v20;

  v5 = v4;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v15 = *(void (**)(uint64_t))(*(_QWORD *)v14 + 256);
  v16 = swift_retain(v14);
  v15(v16);
  swift_release(v14);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = objc_msgSend(v5, "initWithId:imageGeometry:maskGeometry:maskPathSource:", isa, a2, a3, a4);

  return v18;
}

void sub_1006BBA0C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  CKRecordID v24;
  Swift::String v25;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (v9)
  {
    v10 = type metadata accessor for CRLImageItem(0);
    v11 = swift_dynamicCastClass(v9, v10);
    if (v11)
    {
      v12 = v11;
      v13 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_imageGeometry);
      if (v13)
      {
        v14 = v13;
        v15 = v9;
        sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);
        if (v4)
          goto LABEL_11;

        v16 = v14;
        v17 = v15;
        sub_100776700(v16);

        v18 = v17;
        sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

      }
      v19 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskGeometry);
      if (!v19)
        goto LABEL_12;
      v20 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource);
      if (!v20)
        goto LABEL_12;
      v21 = v9;
      v22 = v19;
      v14 = v20;
      sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);
      if (!v4)
      {

        v23 = objc_msgSend(objc_allocWithZone((Class)CRLMaskInfo), "initWithImageItem:geometry:pathSource:", v12, v22, v14);
        sub_1008D3420(v23);

        v9 = v21;
        sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);
      }

LABEL_11:
LABEL_12:

      return;
    }

  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetImageItemGeometry.swift", 102, 2, 46, "Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetImageItemGeometry.swift", 102, 2u, 46, (uint64_t)"Unable to retrieve image item", 29, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

void sub_1006BBD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_1006BBD90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetImageItemGeometry(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006BBE34()
{
  return type metadata accessor for CRLCommandSetImageItemGeometry(0);
}

uint64_t type metadata accessor for CRLCommandSetImageItemGeometry(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EC638;
  if (!qword_1013EC638)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetImageItemGeometry);
  return result;
}

uint64_t sub_1006BBE78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    v4[3] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

id sub_1006BBEF0(uint64_t a1, void *a2, void *a3, void *a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  char *v22;
  objc_class *v23;
  id v24;
  uint64_t v26;
  _QWORD v27[4];
  objc_super v28;

  v9 = &v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_id];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  if (a2)
  {
    v12 = v4;
    v13 = a2;
    v14 = objc_msgSend(v13, "copy");
    _bridgeAnyObjectToAny(_:)(v27, v14);

    swift_unknownObjectRelease(v14);
    v15 = sub_1004B8930(0, (unint64_t *)&qword_1013F1360, off_101229800);
    swift_dynamicCast(&v26, v27, (char *)&type metadata for Any + 8, v15, 7);
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_imageGeometry] = v26;
    if (a3)
      goto LABEL_3;
LABEL_6:
    *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskGeometry] = 0;
    if (a4)
      goto LABEL_4;
LABEL_7:
    *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource] = 0;
    goto LABEL_8;
  }
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_imageGeometry] = 0;
  v22 = v4;
  if (!a3)
    goto LABEL_6;
LABEL_3:
  v16 = a3;
  v17 = objc_msgSend(v16, "copy");
  _bridgeAnyObjectToAny(_:)(v27, v17);

  swift_unknownObjectRelease(v17);
  v18 = sub_1004B8930(0, (unint64_t *)&qword_1013F1360, off_101229800);
  swift_dynamicCast(&v26, v27, (char *)&type metadata for Any + 8, v18, 7);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskGeometry] = v26;
  if (!a4)
    goto LABEL_7;
LABEL_4:
  v19 = a4;
  v20 = objc_msgSend(v19, "copy");
  _bridgeAnyObjectToAny(_:)(v27, v20);

  swift_unknownObjectRelease(v20);
  v21 = sub_1004B8930(0, (unint64_t *)&qword_1013EC648, off_101229970);
  swift_dynamicCast(&v26, v27, (char *)&type metadata for Any + 8, v21, 7);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource] = v26;
LABEL_8:

  v23 = (objc_class *)type metadata accessor for CRLCommandSetImageItemGeometry(0);
  v28.receiver = v4;
  v28.super_class = v23;
  v24 = objc_msgSendSuper2(&v28, "init");
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v24;
}

id sub_1006BC174()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPLaidOutColumnProxy();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPLaidOutColumnProxy()
{
  return objc_opt_self(_TtC8Freeform23CRLWPLaidOutColumnProxy);
}

void sub_1006BC5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t (*v28)(void);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(__n128);
  char *v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double (*v49)(char *, uint64_t);
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(__n128);
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  void *Strong;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  CKRecordID v102;
  uint64_t v103;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  double (*v127)(char *, uint64_t);
  char *v128;
  void *v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139[80];
  unsigned __int8 v140;

  v4 = v3;
  v122 = a1;
  v123 = a2;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5);
  v121 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for UUID(0);
  v120 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v119 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v118 = (char *)&v110 - v9;
  __chkstk_darwin(v10);
  v117 = (char *)&v110 - v11;
  __chkstk_darwin(v12);
  v116 = (char *)&v110 - v13;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_index);
  v140 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_index + 8);
  v124 = v2;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_boardItems);
  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
    if (v16)
      goto LABEL_3;
LABEL_25:
    v88 = v15;
LABEL_26:
    swift_bridgeObjectRelease(v88);
    return;
  }
LABEL_21:
  if (v15 < 0)
    v89 = v15;
  else
    v89 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v15, 2);
  v16 = _CocoaArrayWrapper.endIndex.getter(v89);
  swift_bridgeObjectRelease(v15);
  if (!v16)
    goto LABEL_25;
LABEL_3:
  v17 = 4;
  v114 = OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_destinationContainer;
  v115 = v15 & 0xC000000000000001;
  v113 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v112 = xmmword_100EF7D10;
  v110 = v16;
  v111 = v15;
  while (1)
  {
    if (v115)
      v21 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v15);
    else
      v21 = *(id *)(v15 + 8 * v17);
    v22 = v21;
    if (__OFADD__(v17 - 4, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v23 = (char *)objc_msgSend(v21, "parentContainerItem");
    if (!v23)
      break;
    v24 = v23;
    v125 = v17 - 3;
    v126 = v17;
    v132 = v14;
    v133 = v4;
    if (qword_1013DD8B8 != -1)
      swift_once(&qword_1013DD8B8, sub_100A06704);
    swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v137, 0, 0);
    v25 = (void *)static OS_os_log.boardItemLifecycle;
    v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v26, &v136);
    *(_OWORD *)(inited + 16) = v112;
    v28 = *(uint64_t (**)(void))((swift_isaMask & *v22) + 0x88);
    v131 = v25;
    v29 = v116;
    v30 = v28();
    v31 = UUID.uuidString.getter(v30);
    v33 = v32;
    v127 = *(double (**)(char *, uint64_t))(v120 + 8);
    v127(v29, v134);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v34 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v34;
    *(_QWORD *)(inited + 32) = v31;
    v130 = inited + 32;
    *(_QWORD *)(inited + 40) = v33;
    v35 = v22;
    v129 = v35;
    v36 = objc_msgSend(v35, "description");
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v34;
    *(_QWORD *)(inited + 72) = v37;
    *(_QWORD *)(inited + 80) = v39;
    v40 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v41 = *(void (**)(__n128))(*(_QWORD *)v40 + 256);
    v42 = v24;
    v43 = swift_retain(v40);
    v44 = v117;
    v41(v43);

    swift_release(v40);
    v46 = UUID.uuidString.getter(v45);
    v48 = v47;
    v49 = v127;
    v127(v44, v134);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v34;
    *(_QWORD *)(inited + 112) = v46;
    *(_QWORD *)(inited + 120) = v48;
    v50 = v42;
    v128 = v50;
    v51 = objc_msgSend(v50, "description");
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v54 = v53;

    *(_QWORD *)(inited + 176) = &type metadata for String;
    *(_QWORD *)(inited + 184) = v34;
    *(_QWORD *)(inited + 152) = v52;
    *(_QWORD *)(inited + 160) = v54;
    v55 = *(char **)(v124 + v114);
    v56 = *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v57 = *(void (**)(__n128))(*(_QWORD *)v56 + 256);
    v58 = swift_retain(v56);
    v59 = v118;
    v57(v58);
    swift_release(v56);
    v61 = UUID.uuidString.getter(v60);
    v63 = v62;
    v49(v59, v134);
    *(_QWORD *)(inited + 216) = &type metadata for String;
    *(_QWORD *)(inited + 224) = v34;
    *(_QWORD *)(inited + 192) = v61;
    *(_QWORD *)(inited + 200) = v63;
    v64 = v55;
    v65 = objc_msgSend(v64, "description");
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v68 = v67;

    *(_QWORD *)(inited + 256) = &type metadata for String;
    *(_QWORD *)(inited + 264) = v34;
    *(_QWORD *)(inited + 232) = v66;
    *(_QWORD *)(inited + 240) = v68;
    v69 = *(_QWORD *)(v122 + v113);
    v70 = v69 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v69 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v135, 0, 0);
    v71 = v70;
    v72 = v121;
    sub_1004D48C8(v71, v121);
    swift_retain(v69);
    v73 = sub_1004B804C(&qword_1013E1A80);
    v74 = v119;
    CRRegister.wrappedValue.getter(v73);
    sub_1004D490C(v72);
    swift_release(v69);
    v76 = UUID.uuidString.getter(v75);
    v78 = v77;
    v79.n128_f64[0] = v49(v74, v134);
    *(_QWORD *)(inited + 296) = &type metadata for String;
    *(_QWORD *)(inited + 304) = v34;
    *(_QWORD *)(inited + 272) = v76;
    *(_QWORD *)(inited + 280) = v78;
    v80 = static os_log_type_t.default.getter(v79);
    v81 = v131;
    sub_100A06EBC((uint64_t)v131, &_mh_execute_header, v80, "↔️ CRLCommandReparentBoardItems commit() move %{public}@%{public}@ from %{public}@%{public}@ to parent %{public}@%{public}@. Board: %{public}@", 146, 0, inited);
    swift_setDeallocating(inited);
    v82 = *(_QWORD *)(inited + 16);
    v83 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v130, v82, v83);

    v15 = v140;
    v85 = v128;
    v84 = v129;
    v14 = v132;
    v86 = v133;
    sub_10074359C(v129, (uint64_t)v128, v132, v140, v123);
    v4 = v86;

    if (v86)
    {
      v88 = v111;
      goto LABEL_26;
    }
    if ((v15 & 1) != 0)
    {
      v18 = v110;
      v19 = v125;
      v20 = v126;
    }
    else
    {
      v87 = __OFADD__(v14++, 1);
      v18 = v110;
      v19 = v125;
      v20 = v126;
      if (v87)
        goto LABEL_20;
    }
    v17 = v20 + 1;
    v15 = v111;
    if (v19 == v18)
      goto LABEL_25;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v22 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  v91 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  if (Strong)
  {
    v92 = swift_initStackObject(v91, &v138);
    *(_OWORD *)(v92 + 16) = xmmword_100EF5A10;
    v93 = objc_msgSend(v22, "description");

    v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
    v96 = v95;

    *(_QWORD *)(v92 + 56) = &type metadata for String;
    v97 = sub_1004CFC2C();
    *(_QWORD *)(v92 + 64) = v97;
    *(_QWORD *)(v92 + 32) = v94;
    *(_QWORD *)(v92 + 40) = v96;
    v98 = objc_msgSend(Strong, "description");

    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
    v101 = v100;

    *(_QWORD *)(v92 + 96) = &type metadata for String;
    *(_QWORD *)(v92 + 104) = v97;
    *(_QWORD *)(v92 + 72) = v99;
    *(_QWORD *)(v92 + 80) = v101;
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2, 66, "Trying to reparent a board item (%{public}@) which is not in a container (%{public}@).", 86, 2u, v92);
    sub_100518FC0(v92, (uint64_t)"Trying to reparent a board item (%{public}@) which is not in a container (%{public}@).");
    sub_100519194(v92, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2u, 66, (uint64_t)"Trying to reparent a board item (%{public}@) which is not in a container (%{public}@).", 86, 2u);
  }
  else
  {
    v105 = swift_initStackObject(v91, v139);
    *(_OWORD *)(v105 + 16) = xmmword_100EF5E40;
    v106 = objc_msgSend(v22, "description");

    v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v109 = v108;

    *(_QWORD *)(v105 + 56) = &type metadata for String;
    *(_QWORD *)(v105 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v105 + 32) = v107;
    *(_QWORD *)(v105 + 40) = v109;
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2, 68, "Trying to reparent a board item (%{public}@) which has no parent.", 65, 2u, v105);
    sub_100518FC0(v105, (uint64_t)"Trying to reparent a board item (%{public}@) which has no parent.");
    sub_100519194(v105, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2u, 68, (uint64_t)"Trying to reparent a board item (%{public}@) which has no parent.", 65, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v102, *(Swift::String *)&v103);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_1006BCEA4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_boardItems));
}

id sub_1006BCED0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReparentBoardItems();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandReparentBoardItems()
{
  return objc_opt_self(_TtC8Freeform28CRLCommandReparentBoardItems);
}

id sub_1006BCF58()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  char **v10;
  id v11;
  void *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  char *v35;
  char *v36;
  char *v37;
  char v38;
  char *v39;
  char v40;
  id v41;
  double v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v1 = v0;
  v2 = objc_msgSend(v0, "layout");
  v3 = objc_msgSend(v2, "connectedLayouts");

  if (!v3)
    goto LABEL_59;
  v4 = sub_1006BD5CC();
  v5 = sub_1004B7878(&qword_1013EC6C8, (uint64_t (*)(uint64_t))sub_1006BD5CC, (uint64_t)&protocol conformance descriptor for NSObject);
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = v6 < 0 ? v6 : v6 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaSet.count.getter(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 16);
  }
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if (v8 < 1)
    goto LABEL_59;
  v10 = &selRef_imageWithSystemImageNamed_pointSize_;
  v11 = objc_msgSend(v1, "info", v9);
  v52 = type metadata accessor for CRLBoardItem(0);
  v12 = (void *)swift_dynamicCastClass(v11, v52);
  if (!v12)
  {
LABEL_42:
    swift_unknownObjectRelease(v11);
    return 0;
  }
  v13 = (char *)objc_msgSend(v12, "parentContainerItem");
  if (!v13)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2, 20, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2u, 20, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_42;
  }
  v14 = v13;
  v15 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  if (!v16)
  {
    sub_100740DA4();
    v16 = *(_QWORD *)&v14[v15];
  }
  v48 = v14;
  v49 = v11;
  if (v16)
    v17 = v16;
  else
    v17 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v17 >> 62)
  {
LABEL_54:
    if (v17 < 0)
      v46 = v17;
    else
      v46 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v17);
    v19 = v52;
    if (v18)
      goto LABEL_18;
    goto LABEL_58;
  }
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v16);
  v19 = v52;
  if (!v18)
  {
LABEL_58:
    swift_bridgeObjectRelease(v17);
    sub_100757E04(&_mh_execute_header, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2, 37, "Unexpected to hit here as the topmost z-order connection line should be early returned", 86, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2u, 37, (uint64_t)"Unexpected to hit here as the topmost z-order connection line should be early returned", 86, 2u);
    swift_unknownObjectRelease(v49);

LABEL_59:
    v44 = objc_msgSend(v1, "interactiveCanvasController");
    v41 = objc_msgSend(v44, "highestZOrderConnectionLineLayoutAcrossBoard");
    goto LABEL_60;
  }
LABEL_18:
  v20 = v17 & 0xC000000000000001;
  v53 = v17 + 32;
  v54 = v17 & 0xFFFFFFFFFFFFFF8;
  v50 = v1;
  v51 = v17;
  v55 = v17 & 0xC000000000000001;
  while (1)
  {
    if (__OFSUB__(v18--, 1))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    if (v20)
    {
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v17);
    }
    else
    {
      if ((v18 & 0x8000000000000000) != 0)
        goto LABEL_52;
      if (v18 >= *(_QWORD *)(v54 + 16))
        goto LABEL_53;
      v22 = *(id *)(v53 + 8 * v18);
    }
    v23 = v22;
    v24 = type metadata accessor for CRLConnectionLineItem(0);
    v25 = swift_dynamicCastClass(v23, v24);
    if (v25)
      break;

LABEL_20:
    if (!v18)
      goto LABEL_58;
  }
  v26 = v25;
  v27 = v23;
  v28 = objc_msgSend(v1, v10[61]);
  v29 = swift_dynamicCastClass(v28, v19);
  if (!v29)
  {

    v16 = swift_unknownObjectRelease(v28);
    goto LABEL_20;
  }
  v30 = v29;
  v31 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v31)
  {

    v16 = swift_unknownObjectRelease(v28);
    v20 = v55;
    goto LABEL_20;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "board");

  if (!v33)
  {

    v16 = swift_unknownObjectRelease(v28);
    goto LABEL_40;
  }
  v34 = v33;
  v35 = sub_1006BD608(v34, v26);
  v36 = sub_1006BD8B0(v34, v26);
  if (v35)
  {
    swift_unknownObjectRetain(v28);
    v37 = v35;
    v38 = static NSObject.== infix(_:_:)(v37, v30);

    swift_unknownObjectRelease(v28);
    if ((v38 & 1) != 0)
    {
      swift_bridgeObjectRelease(v51);

      goto LABEL_45;
    }
  }
  if (!v36)
  {
    swift_unknownObjectRelease(v28);

    v1 = v50;
    v10 = &selRef_imageWithSystemImageNamed_pointSize_;
    v19 = v52;
    goto LABEL_40;
  }
  swift_unknownObjectRetain(v28);
  v39 = v36;
  v19 = v52;
  v40 = static NSObject.== infix(_:_:)(v39, v30);

  swift_unknownObjectRelease(v28);
  if ((v40 & 1) == 0)
  {
    swift_unknownObjectRelease(v28);

    v1 = v50;
    v10 = &selRef_imageWithSystemImageNamed_pointSize_;
LABEL_40:
    v17 = v51;
    v20 = v55;
    goto LABEL_20;
  }
  *(_QWORD *)&v42 = swift_bridgeObjectRelease(v51).n128_u64[0];
LABEL_45:
  v41 = objc_msgSend(v50, "interactiveCanvasController", v42);
  if (!v41)
  {

    swift_unknownObjectRelease(v28);
    swift_unknownObjectRelease(v49);
    return v41;
  }
  v43 = v27;
  v44 = objc_msgSend(v41, "layoutForInfo:", v26);

  swift_unknownObjectRelease(v28);
  swift_unknownObjectRelease(v49);
  if (!v44)
    return 0;
  v45 = objc_opt_self(CRLConnectionLineAbstractLayout);
  v41 = (id)swift_dynamicCastObjCClass(v44, v45);
  if (v41)
    return v41;
LABEL_60:

  return v41;
}

unint64_t sub_1006BD5CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EC6C0;
  if (!qword_1013EC6C0)
  {
    v1 = objc_opt_self(CRLConnectionLineAbstractLayout);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013EC6C0);
  }
  return result;
}

char *sub_1006BD608(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  Class isa;
  void *Strong;
  uint64_t v20;
  void *v21;
  id v22;
  char v23;
  _BYTE v26[24];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v14 != &off_1013F2808)
    v14 = 0;
  v15 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 752);
  swift_beginAccess(v15, v26, 0, 0);
  sub_1006BDEC8(v15, (uint64_t)v9);
  v16 = sub_1004B804C(&qword_1013EC6D0);
  CRRegister.wrappedValue.getter(v16);
  sub_1006BDF0C((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v17 = (char *)objc_msgSend(a1, "getBoardItemForUUID:", isa);

    if (!v17)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return v17;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);
    v20 = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    v21 = (void *)v20;
    if (Strong)
    {
      if (v20)
      {
        type metadata accessor for CRLBoardItem(0);
        v22 = Strong;
        v23 = static NSObject.== infix(_:_:)(v22, v21);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        if ((v23 & 1) != 0)
          return v17;

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (!v21)
        return v17;

    }
  }
  return 0;
}

char *sub_1006BD8B0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  Class isa;
  char *v52;
  void *Strong;
  uint64_t v54;
  void *v55;
  id v56;
  char v57;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71[24];
  char v72[24];

  v64 = a1;
  v68 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v68);
  v69 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v63 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v67 = (char *)&v59 - v7;
  __chkstk_darwin(v8);
  v66 = (char *)&v59 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - v11;
  v13 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v13);
  v65 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - v16;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v59 - v23;
  v25 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v70 = a2;
  v26 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v26 != &off_1013F2808)
    v26 = 0;
  v27 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 752);
  swift_beginAccess(v27, v72, 0, 0);
  sub_1006BDEC8(v27, (uint64_t)v17);
  v28 = sub_1004B804C(&qword_1013EC6D0);
  CRRegister.wrappedValue.getter(v28);
  v29 = v19;
  sub_1006BDF0C((uint64_t)v17);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v30(v12, 1, v18) == 1)
  {
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  v60 = v21;
  v31 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v31(v24, v12, v18);
  v32 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v33 = (uint64_t)v66;
  v61 = v24;
  v32(v66, v24, v18);
  v62 = v29;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v18);
  v34 = v70;
  v35 = *(_QWORD *)(v70 + v25);
  if (*(_UNKNOWN ****)v35 != &off_1013F2808)
    v35 = 0;
  v36 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 752);
  swift_beginAccess(v36, v71, 0, 0);
  v37 = v65;
  sub_1006BDEC8(v36, v65);
  v38 = (uint64_t)v67;
  CRRegister.wrappedValue.getter(v28);
  sub_1006BDF0C(v37);
  v39 = v69;
  v40 = v69 + *(int *)(v68 + 48);
  sub_1006950CC(v33, v69);
  sub_1006950CC(v38, v40);
  v41 = v38;
  if (v30((char *)v39, 1, v18) == 1)
  {
    sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800(v33, (uint64_t *)&unk_1013E1A50);
    if (v30((char *)v40, 1, v18) == 1)
    {
      sub_1004CB800(v39, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v18);
      return 0;
    }
    goto LABEL_12;
  }
  v42 = (void (*)(char *, uint64_t, uint64_t))v31;
  v43 = v63;
  sub_1006950CC(v39, v63);
  if (v30((char *)v40, 1, v18) == 1)
  {
    sub_1004CB800(v41, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800(v33, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v43, v18);
LABEL_12:
    sub_1004CB800(v39, (uint64_t *)&unk_1013F62D0);
    v44 = v64;
    v45 = v61;
    goto LABEL_16;
  }
  v46 = v34;
  v47 = v60;
  v42(v60, v40, v18);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v48 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v47);
  v49 = *(void (**)(char *, uint64_t))(v62 + 8);
  v50 = v47;
  v34 = v46;
  v49(v50, v18);
  sub_1004CB800(v41, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800(v33, (uint64_t *)&unk_1013E1A50);
  v49((char *)v43, v18);
  sub_1004CB800(v39, (uint64_t *)&unk_1013E1A50);
  v44 = v64;
  v45 = v61;
  if ((v48 & 1) != 0)
  {
    v49(v61, v18);
    return 0;
  }
LABEL_16:
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v52 = (char *)objc_msgSend(v44, "getBoardItemForUUID:", isa);

  if (v52)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v52[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);
    v54 = swift_unknownObjectWeakLoadStrong(v34 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    v55 = (void *)v54;
    if (Strong)
    {
      if (!v54)
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v18);

        return 0;
      }
      type metadata accessor for CRLBoardItem(0);
      v56 = Strong;
      v57 = static NSObject.== infix(_:_:)(v56, v55);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v18);

      if ((v57 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v18);
      if (v55)
      {

        return 0;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v18);
  }
  return v52;
}

uint64_t sub_1006BDEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLConnectionLineCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006BDF0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLConnectionLineCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1006BDF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  _BOOL8 v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013EC730);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - v9;
  sub_1004CB7BC(v1 + *(int *)(v2 + 20), (uint64_t)&v16 - v9, &qword_1013EC730);
  v11 = sub_1004B804C(qword_1013E3050);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  v13 = v12(v10, 1, v11);
  sub_1004CB800((uint64_t)v10, &qword_1013EC730);
  sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  if (v13 == 1)
  {
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    return 0;
  }
  else
  {
    sub_1004CB7BC((uint64_t)&v4[*(int *)(v2 + 24)], (uint64_t)v7, &qword_1013EC730);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    v14 = v12(v7, 1, v11) == 1;
    sub_1004CB800((uint64_t)v7, &qword_1013EC730);
  }
  return v14;
}

BOOL sub_1006BE0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  _BOOL8 v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013EC730);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - v9;
  sub_1004CB7BC(v1 + *(int *)(v2 + 24), (uint64_t)&v16 - v9, &qword_1013EC730);
  v11 = sub_1004B804C(qword_1013E3050);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  v13 = v12(v10, 1, v11);
  sub_1004CB800((uint64_t)v10, &qword_1013EC730);
  sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  if (v13 == 1)
  {
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    return 0;
  }
  else
  {
    sub_1004CB7BC((uint64_t)&v4[*(int *)(v2 + 20)], (uint64_t)v7, &qword_1013EC730);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    v14 = v12(v7, 1, v11) == 1;
    sub_1004CB800((uint64_t)v7, &qword_1013EC730);
  }
  return v14;
}

uint64_t sub_1006BE298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v15;

  v1 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013EC730);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - v8;
  sub_1004CB7BC(v0 + *(int *)(v1 + 20), (uint64_t)&v15 - v8, &qword_1013EC730);
  v10 = sub_1004B804C(qword_1013E3050);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v9, 1, v10);
  sub_1004CB800((uint64_t)v9, &qword_1013EC730);
  sub_1004B8460(v0, (uint64_t)v3, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  if (v12 == 1)
  {
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  }
  else
  {
    sub_1004CB7BC((uint64_t)&v3[*(int *)(v1 + 24)], (uint64_t)v6, &qword_1013EC730);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    v13 = v11(v6, 1, v10);
    sub_1004CB800((uint64_t)v6, &qword_1013EC730);
    if (v13 != 1)
      return 3;
  }
  if (sub_1006BDF48())
    return 1;
  if (sub_1006BE0F0())
    return 2;
  return 0;
}

uint64_t sub_1006BE460(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  _QWORD v44[18];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v53 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  __chkstk_darwin(v2);
  v44[16] = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1004B804C(&qword_1013EC7F8);
  __chkstk_darwin(v45);
  v49 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v5);
  v44[17] = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v50 = (char *)v44 - v8;
  __chkstk_darwin(v9);
  v48 = (char *)v44 - v10;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v12 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  v52 = v12;
  __chkstk_darwin(v11);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v15);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v18);
  v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1004B804C(&qword_1013EC730);
  __chkstk_darwin(v21);
  v23 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)v44 - v25;
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  v30 = (char *)v44 - v29;
  v31 = sub_1004B804C(qword_1013E3050);
  __chkstk_darwin(v31);
  __chkstk_darwin(v32);
  __chkstk_darwin(v33);
  __chkstk_darwin(v34);
  v41 = *v1;
  if (*v1 == *v53)
  {
    v44[10] = v30;
    v44[6] = v26;
    v44[1] = v23;
    v44[4] = v41;
    v44[2] = v36;
    v44[5] = v40;
    v44[7] = v39;
    v44[8] = (char *)v44 - v37;
    v44[14] = v15;
    v44[15] = v17;
    v44[13] = v20;
    v44[3] = v14;
    v44[11] = v38;
    v44[12] = v35;
    v43 = sub_1006BE298();
    v44[9] = v1;
    sub_1006BE298();
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t (*sub_1006BEF8C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData, a1, 33, 0);
  return j__swift_endAccess_0;
}

id sub_1006BEFE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  objc_class *v30;
  id v31;
  _BYTE v33[4];
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;

  v35 = a7;
  v36 = a8;
  v34 = a6;
  v37 = a4;
  v38 = a5;
  v39 = a2;
  v40 = a3;
  v12 = a2;
  v41 = a1;
  v13 = sub_1004B804C(&qword_1013EC7E8);
  __chkstk_darwin(v13);
  v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v33[-v17];
  v20 = &v33[*(int *)(v19 + 64) - v17];
  v21 = &v33[*(int *)(v19 + 80) - v17];
  *(_QWORD *)v18 = v12;
  *((_QWORD *)v18 + 1) = a3;
  *((_QWORD *)v18 + 2) = a4;
  *((_QWORD *)v18 + 3) = a5;
  LOBYTE(v12) = v34 & 1;
  v18[32] = v34 & 1;
  sub_1004C4938(v35, (uint64_t)v20, (uint64_t *)&unk_1013EFCF0);
  sub_1004C4938(v36, (uint64_t)v21, (uint64_t *)&unk_1013F3DC0);
  v22 = &v8[OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData];
  v23 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem] = v41;
  v24 = (uint64_t)&v15[*(int *)(v13 + 64)];
  v25 = (uint64_t)&v15[*(int *)(v13 + 80)];
  sub_1004CB7BC((uint64_t)v20, v24, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC((uint64_t)v21, v25, (uint64_t *)&unk_1013F3DC0);
  v26 = &v8[OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement];
  v27 = v38;
  v28 = v40;
  *(_QWORD *)v26 = v39;
  *((_QWORD *)v26 + 1) = v28;
  v29 = v37;
  *((_QWORD *)v26 + 2) = v37;
  *((_QWORD *)v26 + 3) = v27;
  v26[32] = v12;
  sub_1004C4938(v24, (uint64_t)&v26[*(int *)(v13 + 64)], (uint64_t *)&unk_1013EFCF0);
  sub_1004C4938(v25, (uint64_t)&v26[*(int *)(v13 + 80)], (uint64_t *)&unk_1013F3DC0);
  sub_1006C0FC8(v29, v27, v12);
  v30 = (objc_class *)type metadata accessor for CRLWPReplaceTextCommand(0);
  v42.receiver = v8;
  v42.super_class = v30;
  v31 = objc_msgSendSuper2(&v42, "init");
  sub_1004CB800((uint64_t)v18, &qword_1013EC7E8);
  return v31;
}

void sub_1006BF3A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  char **v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(_QWORD);
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(uint64_t, uint64_t, char *);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  int *v96;
  char *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char **v101;
  char v102;
  void *v103;
  uint64_t v104;
  void *v105;
  unint64_t v106;
  char *v107;
  char *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  __n128 v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  void *v117;
  void *v118;
  uint64_t v119;
  void *v120;
  id v121;
  id v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char **v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  char *v169;
  uint64_t Strong;
  void *v171;
  uint64_t ObjectType;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  char **v188;
  uint64_t *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  char *v199;
  char v200;
  char *v201;
  char *v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t (*v207)(_QWORD);
  uint64_t v208;
  uint64_t v209;
  unsigned int (*v210)(uint64_t, uint64_t, char *);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t (*v215)(char *, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t (*v217)(_QWORD);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(char *, uint64_t, uint64_t);
  uint64_t v227;
  uint64_t v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(char *, uint64_t, uint64_t, uint64_t);
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t *v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  char *v245;
  void (*v246)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  _QWORD *v250;
  uint64_t v251;
  uint64_t v252;
  void (*v253)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t);
  char *v254;
  char *v255;
  uint64_t v256;
  void (*v257)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t);
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  char **v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t (*v267)(char *, uint64_t, uint64_t);
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD aBlock[5];
  uint64_t v278;
  int v279;
  int v280;

  v279 = a3;
  v264 = a2;
  v4 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v4);
  v234 = (char *)&v228 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = sub_1004B804C(&qword_1013F3D40);
  v6 = *(_QWORD *)(v248 - 8);
  __chkstk_darwin(v248);
  v237 = (uint64_t)&v228 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  v241 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v243 = (uint64_t)&v228 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013EC730);
  __chkstk_darwin(v9);
  v11 = (char *)&v228 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v245 = (char *)&v228 - v13;
  v14 = sub_1004B804C(&qword_1013EC7F0);
  __chkstk_darwin(v14);
  v262 = (char **)((char *)&v228 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v268 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v263 = *(_QWORD *)(v268 - 8);
  __chkstk_darwin(v268);
  v235 = (char *)&v228 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v236 = (char *)&v228 - v18;
  __chkstk_darwin(v19);
  v267 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v228 - v20);
  v266 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v266);
  v22 = (char *)&v228 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v23);
  v265 = (uint64_t)&v228 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013EC7E8);
  __chkstk_darwin(v25);
  v239 = (uint64_t *)((char *)&v228 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  v240 = (uint64_t *)((char *)&v228 - v28);
  __chkstk_darwin(v29);
  v244 = (uint64_t *)((char *)&v228 - v30);
  __chkstk_darwin(v31);
  v249 = (uint64_t *)((char *)&v228 - v32);
  __chkstk_darwin(v33);
  v250 = (uint64_t *)((char *)&v228 - v34);
  __chkstk_darwin(v35);
  v37 = (char *)&v228 - v36;
  __chkstk_darwin(v38);
  v41 = (char *)&v228 - v40;
  v42 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem);
  v251 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  v43 = *(char **)(v42 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v43)
    goto LABEL_96;
  v238 = v6;
  v272 = v42;
  v233 = v11;
  v269 = v3;
  v44 = v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement;
  v45 = *(int *)(v39 + 64);
  v46 = (uint64_t)&v41[v45];
  v275 = v39;
  v47 = *(int *)(v39 + 80);
  v48 = (uint64_t)&v41[v47];
  v49 = v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement + v45;
  v50 = v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement + v47;
  v52 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement);
  v51 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement + 8);
  *(_QWORD *)v41 = v52;
  *((_QWORD *)v41 + 1) = v51;
  v53 = *(void **)(v44 + 16);
  v54 = *(_QWORD *)(v44 + 24);
  LODWORD(v44) = *(unsigned __int8 *)(v44 + 32);
  v270 = v46;
  v271 = v53;
  *((_QWORD *)v41 + 2) = v53;
  *((_QWORD *)v41 + 3) = v54;
  v276 = v54;
  v280 = v44;
  v41[32] = v44;
  v273 = v49;
  sub_1004CB7BC(v49, v46, (uint64_t *)&unk_1013EFCF0);
  v274 = v50;
  v55 = sub_1004CB7BC(v50, v48, (uint64_t *)&unk_1013F3DC0);
  v256 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  v56 = *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v56)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v56 + 760))(v55);
  v57 = v265;
  sub_1004B8460((uint64_t)&v22[*(int *)(v266 + 20)], v265, type metadata accessor for CRLWPStorageCRDTData);
  v255 = v43;
  v261 = v43;
  v254 = v22;
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLWPShapeItemCRDTData);
  v58 = v263;
  v59 = v267;
  v60 = v268;
  v253 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v263 + 16);
  v253(v267, v57, v268);
  sub_1004B84A4(v57, type metadata accessor for CRLWPStorageCRDTData);
  v61 = CRAttributedString.count.getter(v60);
  v257 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v58 + 8);
  v257(v59, v60);
  if (v61 >= (v52 & ~(v52 >> 63)))
    v62 = v52 & ~(v52 >> 63);
  else
    v62 = v61;
  v63 = v51 & ~(v51 >> 63);
  if (v61 < v63)
    v63 = v61;
  v252 = v63;
  if (v63 < v62)
  {
    __break(1u);
    goto LABEL_88;
  }
  v258 = v62;
  sub_1004CB800(v48, (uint64_t *)&unk_1013F3DC0);
  sub_1004CB800(v270, (uint64_t *)&unk_1013EFCF0);
  v64 = (int *)type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  v65 = v64[5];
  v270 = v52;
  v66 = v262;
  v67 = (char *)v262 + v65;
  v68 = sub_1004B804C(qword_1013E3050);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
  v69(v67, 1, 1, v68);
  v70 = (char *)v66 + v64[6];
  v247 = v68;
  v246 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v69;
  v69(v70, 1, 1, v68);
  v71 = (char *)v66 + v64[7];
  v72 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v232 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
  v232(v71, 1, 1, v72);
  v73 = v261;
  *v66 = v261;
  v259 = *((_QWORD *)v64 - 1);
  v74 = (char *)v64;
  (*(void (**)(char **, _QWORD, uint64_t, int *))(v259 + 56))(v66, 0, 1, v64);
  v75 = v269 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData;
  swift_beginAccess(v269 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData, aBlock, 33, 0);
  v76 = v73;
  v77 = v75;
  v78 = v270;
  sub_100582338((uint64_t)v66, v77, &qword_1013EC7F0);
  swift_endAccess(aBlock);
  v79 = (uint64_t)&v37[*(int *)(v275 + 64)];
  v80 = (uint64_t)&v37[*(int *)(v275 + 80)];
  *(_QWORD *)v37 = v78;
  *((_QWORD *)v37 + 1) = v51;
  v81 = v276;
  *((_QWORD *)v37 + 2) = v271;
  *((_QWORD *)v37 + 3) = v81;
  v37[32] = v280;
  sub_1004CB7BC(v273, v79, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC(v274, v80, (uint64_t *)&unk_1013F3DC0);
  v262 = (char **)v51;
  v82 = v51 - v78;
  if (__OFSUB__(v51, v78))
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  sub_1004CB800(v80, (uint64_t *)&unk_1013F3DC0);
  sub_1004CB800(v79, (uint64_t *)&unk_1013EFCF0);
  v83 = v272;
  v84 = v276;
  if (v82 >= 1)
  {
    v85 = sub_1006BEF8C((uint64_t)aBlock);
    v87 = v86;
    v88 = *(unsigned int (**)(uint64_t, uint64_t, char *))(v259 + 48);
    v261 = v74;
    if (v88(v86, 1, v74))
    {
      ((void (*)(_QWORD *, _QWORD))v85)(aBlock, 0);
      v83 = v272;
      v74 = v261;
    }
    else
    {
      v231 = v72;
      v89 = *(_QWORD *)&v255[v256];
      if (!v89)
      {
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      v90 = v76;
      v91 = (uint64_t)v254;
      (*(void (**)(void))(*(_QWORD *)v89 + 760))();
      v92 = v265;
      sub_1004B8460(v91 + *(int *)(v266 + 20), v265, type metadata accessor for CRLWPStorageCRDTData);
      sub_1004B84A4(v91, type metadata accessor for CRLWPShapeItemCRDTData);
      v93 = v267;
      v94 = v268;
      v253(v267, v92, v268);
      sub_1004B84A4(v92, type metadata accessor for CRLWPStorageCRDTData);
      v95 = (uint64_t)v245;
      CRAttributedString.cursor(range:)(v258, v252, v94);
      v257(v93, v94);
      v246(v95, 0, 1, v247);
      v96 = (int *)v261;
      sub_100582338(v95, v87 + *((int *)v261 + 6), &qword_1013EC730);
      ((void (*)(_QWORD *, _QWORD))v85)(aBlock, 0);
      v76 = v90;
      v72 = v231;
      v78 = v270;
      v83 = v272;
      v74 = (char *)v96;
      v84 = v276;
    }
  }
  v97 = v260;
  sub_100DBEE64(v83, (uint64_t)&off_10127C5E0);
  if (v97)
  {

    return;
  }
  v231 = v72;
  v260 = v76;
  v98 = v250;
  v99 = (uint64_t)v250 + *(int *)(v275 + 64);
  v100 = (uint64_t)v250 + *(int *)(v275 + 80);
  v101 = v262;
  *v250 = v78;
  v98[1] = v101;
  v98[2] = v271;
  v98[3] = v84;
  v102 = v280;
  *((_BYTE *)v98 + 32) = v280;
  sub_1004CB7BC(v273, v99, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC(v274, v100, (uint64_t *)&unk_1013F3DC0);
  v103 = *(void **)(v83 + v251);
  v245 = 0;
  if ((v102 & 1) != 0)
  {
    v230 = v100;
    v250 = (_QWORD *)v99;
    v261 = v74;
    v104 = v268;
    if (!v103)
    {
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    v105 = v271;
    sub_1006C0FC8(v271, v84, 1);
    sub_1006C0FC8(v105, v84, 1);
    sub_1006C0FC8(v105, v84, 1);
    v106 = sub_100559A64();
    v229 = v103;
    v107 = v235;
    CRAttributedString.init(_:)(v105, &type metadata for CRLTextAttributeScope, v106);
    v108 = v236;
    v263 = *(_QWORD *)(v263 + 32);
    ((void (*)(char *, char *, uint64_t))v263)(v236, v107, v104);
    v109 = objc_msgSend(v105, "length");
    v110 = swift_allocObject(&unk_1012771D0, 24, 7);
    *(_QWORD *)(v110 + 16) = v108;
    v111 = v84;
    v112 = swift_allocObject(&unk_1012771F8, 32, 7);
    *(_QWORD *)(v112 + 16) = sub_100559AB8;
    *(_QWORD *)(v112 + 24) = v110;
    aBlock[4] = sub_100559AD0;
    v278 = v112;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100D3DC24;
    aBlock[3] = &unk_101277210;
    v113 = _Block_copy(aBlock);
    v114 = v278;
    swift_retain(v112);
    objc_msgSend(v105, "enumerateAttributesInRange:options:usingBlock:", 0, v109, 0, v113, swift_release(v114).n128_f64[0]);
    sub_1006C0FE8(v105, v111, 1);
    _Block_release(v113);
    LOBYTE(v109) = swift_isEscapingClosureAtFileLocation(v112, "", 78, 624, 125, 1);
    v115 = swift_release(v112);
    if ((v109 & 1) != 0)
      goto LABEL_92;
    v116 = v267;
    ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t, __n128))v263)(v267, v108, v104, v115);
    swift_release(v110);
    v117 = v229;
    sub_1007D9B04(v258, v252, v116, 1);

    sub_1006C0FE8(v105, v111, 1);
    v257(v116, v104);
    v101 = v262;
    v118 = v105;
    v74 = v261;
    v84 = v111;
    v99 = (uint64_t)v250;
    v100 = v230;
  }
  else
  {
    v119 = v258;
    if (!v103)
    {
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
    v120 = v271;
    sub_1006C0FC8(v271, v84, 0);
    v121 = v103;
    v118 = v120;
    v122 = v121;
    sub_1007D876C(v119, v252, (uint64_t)v118, v84, 1);

    sub_1006C0FE8(v118, v84, 0);
  }
  sub_1004CB800(v100, (uint64_t *)&unk_1013F3DC0);
  sub_1004CB800(v99, (uint64_t *)&unk_1013EFCF0);
  v123 = v249;
  v124 = (uint64_t)v249 + *(int *)(v275 + 64);
  v125 = (uint64_t)v249 + *(int *)(v275 + 80);
  *v249 = v270;
  v123[1] = v101;
  v123[2] = v118;
  v123[3] = v84;
  v126 = v280;
  *((_BYTE *)v123 + 32) = v280;
  sub_1004CB7BC(v273, v124, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC(v274, v125, (uint64_t *)&unk_1013F3DC0);
  if ((v126 & 1) != 0)
  {
    v127 = objc_msgSend(v118, "string");
    v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
    v130 = v129;

    v131 = String.count.getter(v128, v130);
    v132 = v130;
    v84 = v276;
    v133 = v272;
    swift_bridgeObjectRelease(v132);
    sub_1006C0FE8(v118, v84, 1);
    sub_1006C0FE8(v118, v84, 1);
    sub_1004CB800(v125, (uint64_t *)&unk_1013F3DC0);
    sub_1004CB800(v124, (uint64_t *)&unk_1013EFCF0);
    if (v131 < 1)
      goto LABEL_85;
LABEL_27:
    v136 = v244;
    v137 = (uint64_t)v244 + *(int *)(v275 + 64);
    v138 = (uint64_t)v244 + *(int *)(v275 + 80);
    *v244 = v270;
    v136[1] = v101;
    v136[2] = v118;
    v136[3] = v84;
    v139 = v280;
    *((_BYTE *)v136 + 32) = v280;
    sub_1004CB7BC(v273, v137, (uint64_t *)&unk_1013EFCF0);
    sub_1004CB7BC(v274, v138, (uint64_t *)&unk_1013F3DC0);
    if ((v139 & 1) != 0)
    {
      v140 = objc_msgSend(v118, "string");
      v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
      v143 = v142;

      v144 = String.count.getter(v141, v143);
      v145 = v143;
      v84 = v276;
      v133 = v272;
      swift_bridgeObjectRelease(v145);
      sub_1006C0FE8(v118, v84, 1);
    }
    else
    {
      v146 = swift_bridgeObjectRetain(v84);
      v144 = String.UTF16View.count.getter(v118, v84, v146);
    }
    v147 = v258;
    sub_1006C0FE8(v118, v84, v280);
    v148 = v147 + v144;
    if (!__OFADD__(v147, v144))
    {
      sub_1004CB800(v138, (uint64_t *)&unk_1013F3DC0);
      v149 = sub_1004CB800(v137, (uint64_t *)&unk_1013EFCF0);
      if (v148 >= v147)
      {
        v150 = *(_QWORD *)&v255[v256];
        v151 = (uint64_t)v254;
        if (!v150)
        {
LABEL_99:
          __break(1u);
          goto LABEL_100;
        }
        (*(void (**)(uint64_t))(*(_QWORD *)v150 + 760))(v149);
        v152 = v265;
        sub_1004B8460(v151 + *(int *)(v266 + 20), v265, type metadata accessor for CRLWPStorageCRDTData);
        sub_1004B84A4(v151, type metadata accessor for CRLWPShapeItemCRDTData);
        v153 = v267;
        v154 = v268;
        v253(v267, v152, v268);
        sub_1004B84A4(v152, type metadata accessor for CRLWPStorageCRDTData);
        v155 = CRAttributedString.count.getter(v154);
        v257(v153, v154);
        if (v155 >= (v147 & ~(v147 >> 63)))
          v156 = v147 & ~(v147 >> 63);
        else
          v156 = v155;
        v157 = (char *)(v148 & ~(v148 >> 63));
        if (v155 < (uint64_t)v157)
          v157 = (char *)v155;
        v263 = v156;
        v261 = v157;
        if ((uint64_t)v157 >= v156)
        {
          v158 = v240;
          v159 = (uint64_t)v240 + *(int *)(v275 + 64);
          v160 = (uint64_t)v240 + *(int *)(v275 + 80);
          v161 = v270;
          v162 = v262;
          *v240 = v270;
          v158[1] = v162;
          v158[2] = v271;
          v158[3] = v84;
          *((_BYTE *)v158 + 32) = v280;
          sub_1004CB7BC(v273, v159, (uint64_t *)&unk_1013EFCF0);
          sub_1004CB7BC(v274, v160, (uint64_t *)&unk_1013F3DC0);
          v163 = v242;
          v164 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 48))(v159, 1, v242);
          v165 = v238;
          v166 = v243;
          if (v164 == 1)
          {
            sub_1004CB800(v160, (uint64_t *)&unk_1013F3DC0);
            v167 = (uint64_t *)&unk_1013EFCF0;
            v168 = v159;
            goto LABEL_57;
          }
          sub_1004C4938(v159, v243, (uint64_t *)&unk_1013EFC60);
          sub_1004CB800(v160, (uint64_t *)&unk_1013F3DC0);
          v169 = *(char **)(v133 + v251);
          if (!v169)
          {
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          Strong = swift_unknownObjectWeakLoadStrong(&v169[OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem]);
          if (Strong)
          {
            v171 = (void *)Strong;
            ObjectType = swift_getObjectType(Strong);
            v173 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
            if (v173)
              v174 = v173;
            else
              v174 = 0;
            if (v173)
              v175 = v171;
            else
              v175 = 0;
            if (v175)
            {
              v176 = swift_getObjectType(v175);
              v177 = v169;
              v178 = v176;
              v161 = v270;
              v179 = sub_100D5E2C8(v178, v174);

              v133 = v272;
              v84 = v276;
              if ((v179 & 1) == 0)
              {
LABEL_56:

                v167 = (uint64_t *)&unk_1013EFC60;
                v168 = v166;
LABEL_57:
                sub_1004CB800(v168, v167);
                v185 = v239;
                v186 = (uint64_t)v239 + *(int *)(v275 + 64);
                v187 = (uint64_t)v239 + *(int *)(v275 + 80);
                v188 = v262;
                *v239 = v161;
                v185[1] = (uint64_t)v188;
                v185[2] = (uint64_t)v271;
                v185[3] = v84;
                *((_BYTE *)v185 + 32) = v280;
                sub_1004CB7BC(v273, v186, (uint64_t *)&unk_1013EFCF0);
                sub_1004CB7BC(v274, v187, (uint64_t *)&unk_1013F3DC0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v187, 1, v248) == 1)
                {
                  sub_1004CB800(v187, (uint64_t *)&unk_1013F3DC0);
                  v189 = (uint64_t *)&unk_1013EFCF0;
                  v190 = v186;
LABEL_76:
                  sub_1004CB800(v190, v189);
                  goto LABEL_77;
                }
                sub_1004C4938(v187, v237, &qword_1013F3D40);
                sub_1004CB800(v186, (uint64_t *)&unk_1013EFCF0);
                v191 = *(char **)(v133 + v251);
                if (!v191)
                {
LABEL_103:
                  __break(1u);
                  goto LABEL_104;
                }
                v192 = swift_unknownObjectWeakLoadStrong(&v191[OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem]);
                if (v192)
                {
                  v193 = (void *)v192;
                  v194 = swift_getObjectType(v192);
                  v195 = swift_conformsToProtocol2(v194, &protocol descriptor for CRLTransactable);
                  if (v195)
                    v196 = v195;
                  else
                    v196 = 0;
                  if (v195)
                    v197 = v193;
                  else
                    v197 = 0;
                  if (v197)
                  {
                    v198 = swift_getObjectType(v197);
                    v199 = v191;
                    v200 = sub_100D5E2C8(v198, v196);

                    if ((v200 & 1) == 0)
                    {

                      sub_1004CB800(v237, &qword_1013F3D40);
LABEL_77:
                      v207 = sub_1006BEF8C((uint64_t)aBlock);
                      v209 = v208;
                      v210 = *(unsigned int (**)(uint64_t, uint64_t, char *))(v259 + 48);
                      if (v210(v208, 1, v74))
                      {
                        ((void (*)(_QWORD *, _QWORD))v207)(aBlock, 0);
LABEL_81:
                        v217 = sub_1006BEF8C((uint64_t)aBlock);
                        v219 = v218;
                        if (v210(v218, 1, v74))
                        {
                          ((void (*)(_QWORD *, _QWORD))v217)(aBlock, 0);
                          goto LABEL_85;
                        }
                        v220 = *(_QWORD *)&v255[v256];
                        if (v220)
                        {
                          v221 = v74;
                          v222 = v133;
                          v223 = (uint64_t)v254;
                          (*(void (**)(void))(*(_QWORD *)v220 + 760))();
                          v224 = v265;
                          sub_1004B8460(v223 + *(int *)(v266 + 20), v265, type metadata accessor for CRLWPStorageCRDTData);
                          sub_1004B84A4(v223, type metadata accessor for CRLWPShapeItemCRDTData);
                          v226 = v267;
                          v225 = v268;
                          v253(v267, v224, v268);
                          sub_1004B84A4(v224, type metadata accessor for CRLWPStorageCRDTData);
                          v227 = (uint64_t)v234;
                          CRAttributedString.attributes(at:effectiveRange:)(v263, 0, v225);
                          v257(v226, v225);
                          v232((char *)v227, 0, 1, v231);
                          sub_100582338(v227, v219 + *((int *)v221 + 7), &qword_1013EC738);
                          ((void (*)(_QWORD *, _QWORD))v217)(aBlock, 0);
                          v133 = v222;
                          goto LABEL_85;
                        }
LABEL_105:
                        __break(1u);
                        return;
                      }
                      v211 = *(_QWORD *)&v255[v256];
                      if (v211)
                      {
                        v212 = (uint64_t)v254;
                        (*(void (**)(void))(*(_QWORD *)v211 + 760))();
                        v213 = v265;
                        sub_1004B8460(v212 + *(int *)(v266 + 20), v265, type metadata accessor for CRLWPStorageCRDTData);
                        sub_1004B84A4(v212, type metadata accessor for CRLWPShapeItemCRDTData);
                        v215 = v267;
                        v214 = v268;
                        v253(v267, v213, v268);
                        sub_1004B84A4(v213, type metadata accessor for CRLWPStorageCRDTData);
                        v216 = (uint64_t)v233;
                        CRAttributedString.cursor(range:)(v263, v261, v214);
                        v257(v215, v214);
                        v246(v216, 0, 1, v247);
                        sub_100582338(v216, v209 + *((int *)v74 + 5), &qword_1013EC730);
                        ((void (*)(_QWORD *, _QWORD))v207)(aBlock, 0);
                        v133 = v272;
                        goto LABEL_81;
                      }
LABEL_104:
                      __break(1u);
                      goto LABEL_105;
                    }
                  }
                  else
                  {
                    v202 = v191;

                  }
                }
                else
                {
                  v201 = v191;
                }
                if (!__OFSUB__(v261, v263))
                {
                  v203 = objc_msgSend(v191, "textRangeForParagraphsInCharRange:", v263, &v261[-v263]);
                  v205 = (uint64_t)v203 + v204;
                  if (!__OFADD__(v203, v204))
                  {
                    if (v205 >= (uint64_t)v203)
                    {
                      v206 = v237;
                      sub_1007DC238(v237 + *(int *)(v248 + 36), (uint64_t)v203, v205);
                      v191[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] = 0;

                      v189 = &qword_1013F3D40;
                      v190 = v206;
                      goto LABEL_76;
                    }
                    goto LABEL_95;
                  }
LABEL_94:
                  __break(1u);
LABEL_95:
                  __break(1u);
LABEL_96:
                  __break(1u);
                  goto LABEL_97;
                }
LABEL_93:
                __break(1u);
                goto LABEL_94;
              }
            }
            else
            {
              v181 = v169;

              v133 = v272;
              v84 = v276;
            }
          }
          else
          {
            v180 = v169;
          }
          sub_1007D0B78(v263, (uint64_t)v261, (uint64_t)v169);
          if ((v184 & 1) == 0)
          {
            sub_1007DC238(v166 + *(int *)(v163 + 36), v182, v183);
            v169[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] = 0;
          }
          goto LABEL_56;
        }
        goto LABEL_91;
      }
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v134 = swift_bridgeObjectRetain(v84);
  v135 = String.UTF16View.count.getter(v118, v84, v134);
  sub_1006C0FE8(v118, v84, 0);
  sub_1004CB800(v125, (uint64_t *)&unk_1013F3DC0);
  sub_1004CB800(v124, (uint64_t *)&unk_1013EFCF0);
  v133 = v272;
  if (v135 > 0)
    goto LABEL_27;
LABEL_85:
  sub_100DB0D78(v133, (uint64_t)&off_10127C5E0, v279);

}

uint64_t sub_1006C0A40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_1004B804C(&qword_1013EC7F0);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = type metadata accessor for CRLWPReplaceTextCommand(0);
  v10 = swift_dynamicCastClass(a1, v9);
  if (!v10
    || (v11 = v10,
        *(_QWORD *)(v10 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem) != *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem)))
  {
    v12 = 0;
    return v12 & 1;
  }
  v13 = v1 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData;
  swift_beginAccess(v13, v19, 0, 0);
  sub_1004CB7BC(v13, (uint64_t)v8, &qword_1013EC7F0);
  v14 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  result = v15(v8, 1, v14);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v17 = v11 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData;
    swift_beginAccess(v17, v18, 0, 0);
    sub_1004CB7BC(v17, (uint64_t)v5, &qword_1013EC7F0);
    result = v15(v5, 1, v14);
    if ((_DWORD)result != 1)
    {
      v12 = sub_1006BE460(v5);
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
      return v12 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1006C0D58()
{
  uint64_t v0;

  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData, &qword_1013EC7F0);

  return sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement, &qword_1013EC7E8);
}

id sub_1006C0DA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPReplaceTextCommand(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006C0E38()
{
  return type metadata accessor for CRLWPReplaceTextCommand(0);
}

uint64_t type metadata accessor for CRLWPReplaceTextCommand(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EC708, (uint64_t)&nominal type descriptor for CRLWPReplaceTextCommand);
}

void sub_1006C0E54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  _BYTE v9[32];
  _QWORD v10[3];

  sub_1006C0F5C(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[0] = &unk_100F03DC8;
    v8[1] = &unk_100F03DE0;
    sub_1005822EC(319, &qword_1013EC720, (uint64_t *)&unk_1013EFC60);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1005822EC(319, &qword_1013EC728, &qword_1013F3D40);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_getTupleTypeLayout(v9, 0, 4, v8);
        v10[2] = v9;
        swift_updateClassMetadata2(a1, 256, 3, v10, a1 + 200);
      }
    }
  }
}

void sub_1006C0F5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013EC718)
  {
    v2 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013EC718);
  }
}

uint64_t type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EC798, (uint64_t)&nominal type descriptor for CRLWPReplaceTextCommand.CoalescingData);
}

id sub_1006C0FC8(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain(a2);
}

void destroy for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1)
{
  sub_1006C0FE8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1006C0FE8(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease(a2);
}

uint64_t _s8Freeform23CRLWPReplaceTextCommandC15ReplacementTextOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1006C0FC8(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1006C0FC8(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1006C0FE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1006C0FE8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPReplaceTextCommand.ReplacementText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1006C1164(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPReplaceTextCommand.ReplacementText()
{
  return &type metadata for CRLWPReplaceTextCommand.ReplacementText;
}

void **sub_1006C1180(void **a1, void **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = v5;
    v12 = sub_1004B804C(qword_1013E3050);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v10, 1, v12))
    {
      v15 = sub_1004B804C(&qword_1013EC730);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      v19 = sub_1004B804C(&qword_1013EC730);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    v20 = a3[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_1004B804C(&qword_1013EC738);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return a1;
}

uint64_t sub_1006C1370(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = (char *)a1 + a2[5];
  v5 = sub_1004B804C(qword_1013E3050);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v8 = (char *)a1 + a2[6];
  if (!v7(v8, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v9 = (char *)a1 + a2[7];
  v10 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

void **sub_1006C146C(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = v6;
  v11 = sub_1004B804C(qword_1013E3050);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11))
  {
    v14 = sub_1004B804C(&qword_1013EC730);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v9, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  if (v13((char *)a2 + v15, 1, v11))
  {
    v18 = sub_1004B804C(&qword_1013EC730);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_1004B804C(&qword_1013EC738);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

void **sub_1006C1638(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1004B804C(qword_1013E3050);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = sub_1004B804C(&qword_1013EC730);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = v14((char *)a1 + v18, 1, v12);
  v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v20, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    v23 = sub_1004B804C(&qword_1013EC730);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v19, v20, v12);
LABEL_13:
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v32 = sub_1004B804C(&qword_1013EC738);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

_QWORD *sub_1006C18E0(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1004B804C(qword_1013E3050);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_1004B804C(&qword_1013EC730);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = sub_1004B804C(&qword_1013EC730);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  v20 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1004B804C(&qword_1013EC738);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

void **sub_1006C1AA8(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1004B804C(qword_1013E3050);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_1004B804C(&qword_1013EC730);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = v12((char *)a1 + v16, 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    v21 = sub_1004B804C(&qword_1013EC730);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = sub_1004B804C(&qword_1013EC738);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_1006C1D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006C1D58);
}

uint64_t sub_1006C1D58(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013EC730);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013EC738);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1006C1E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006C1E0C);
}

char *sub_1006C1E0C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013EC730);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013EC738);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1006C1EB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1005822EC(319, &qword_1013EC7A8, qword_1013E3050);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    sub_1005822EC(319, (unint64_t *)&unk_1013EC7B0, (uint64_t *)&unk_1013EFBE0);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, &v6, a1 + 16);
    }
  }
}

uint64_t sub_1006C1F64()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

unint64_t sub_1006C2028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EC800;
  if (!qword_1013EC800)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013EFBE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CRAttributedString<A>.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1013EC800);
  }
  return result;
}

uint64_t sub_1006C2074()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006C2084()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006C2094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006C20A4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_1006C20B4(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v31;
  int64_t v32;
  char v33[24];

  swift_beginAccess(v1 + 24, v33, 0, 0);
  v2 = *(_QWORD *)(v1 + 24);
  v31 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v32 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n(v2, 2);
  v6 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v6 << 6);
    }
    else
    {
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_39;
      if (v10 >= v32)
      {
LABEL_35:
        swift_release(v2);
        swift_bridgeObjectRelease(v2);
        return;
      }
      v11 = *(_QWORD *)(v31 + 8 * v10);
      ++v6;
      if (!v11)
      {
        v6 = v10 + 1;
        if (v10 + 1 >= v32)
          goto LABEL_35;
        v11 = *(_QWORD *)(v31 + 8 * v6);
        if (!v11)
        {
          v6 = v10 + 2;
          if (v10 + 2 >= v32)
            goto LABEL_35;
          v11 = *(_QWORD *)(v31 + 8 * v6);
          if (!v11)
          {
            v6 = v10 + 3;
            if (v10 + 3 >= v32)
              goto LABEL_35;
            v11 = *(_QWORD *)(v31 + 8 * v6);
            if (!v11)
            {
              v6 = v10 + 4;
              if (v10 + 4 >= v32)
                goto LABEL_35;
              v11 = *(_QWORD *)(v31 + 8 * v6);
              if (!v11)
              {
                v12 = v10 + 5;
                if (v12 >= v32)
                  goto LABEL_35;
                v11 = *(_QWORD *)(v31 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    v6 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_41;
                    if (v6 >= v32)
                      goto LABEL_35;
                    v11 = *(_QWORD *)(v31 + 8 * v6);
                    ++v12;
                    if (v11)
                      goto LABEL_25;
                  }
                }
                v6 = v12;
              }
            }
          }
        }
      }
LABEL_25:
      v5 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    v13 = *(_QWORD *)(v2 + 56) + 48 * v9;
    v14 = *(void **)v13;
    v15 = *(void **)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 24);
    v17 = *(_QWORD *)(v13 + 40);
    v18 = sub_1006C2E3C();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18, v19);
    swift_bridgeObjectRetain(v16);
    v21 = v14;
    swift_bridgeObjectRetain(v17);
    v22 = v15;
    v23 = objc_msgSend(v21, "mostSpecificSelectionOfClass:", ObjCClassFromMetadata);
    if (!v23)
    {
      v7 = v21;
      goto LABEL_5;
    }
    v7 = v23;
    v24 = objc_opt_self(CRLWPSelection);
    v25 = (void *)swift_dynamicCastObjCClass(v7, v24);
    if (!v25)
    {

      v22 = v21;
      goto LABEL_5;
    }
    v26 = v2;
    v27 = (char *)objc_msgSend(v25, "range");
    v29 = v28;

    if ((uint64_t)v27 <= (uint64_t)a1)
    {
      if (__OFSUB__(a1, v27))
        goto LABEL_40;
      if (a1 - v27 < v29)
      {
LABEL_36:
        swift_release(v26);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v16);

        return;
      }
    }
    if (__OFADD__(v27, v29))
      break;
    if (&v27[v29] == a1)
      goto LABEL_36;
    v7 = v21;
    v2 = v26;
LABEL_5:

    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v16);
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1006C2464(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  _QWORD *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char v65;
  char v66;
  void (*v67)(char *, uint64_t, char *, __n128);
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  id v71;
  void *v72;
  _QWORD *v73;
  id v74;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v76;
  __n128 v77;
  _QWORD *v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  _BYTE v102[24];
  char v103[24];
  _QWORD v104[3];
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;

  v7 = type metadata accessor for UUID(0);
  v96 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v82 - v11;
  v101 = (_QWORD *)sub_1004B804C(&qword_1013F3D90);
  v100 = *(v101 - 1);
  __chkstk_darwin(v101);
  v99 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v97);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16);
  v98 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = (_QWORD *)(a2 + 24);
  swift_beginAccess(a2 + 24, v103, 0, 0);
  v18 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(v18 + 16))
    return;
  swift_bridgeObjectRetain(*(_QWORD *)(a2 + 24));
  v93 = a1;
  v19 = sub_100842EFC(a1);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease(v18);
    return;
  }
  v88 = v12;
  v87 = a3;
  v90 = v9;
  v91 = (char *)v7;
  v94 = v3;
  v21 = *(_QWORD *)(v18 + 56) + 48 * v19;
  v22 = *(void **)v21;
  v23 = *(void **)(v21 + 8);
  v24 = *(_QWORD *)(v21 + 16);
  v25 = *(void **)(v21 + 24);
  v26 = *(void **)(v21 + 40);
  v89 = *(_QWORD *)(v21 + 32);
  swift_bridgeObjectRetain(v25);
  v27 = v22;
  swift_bridgeObjectRetain(v26);
  v28 = v23;
  swift_bridgeObjectRelease(v18);
  if (!v23)
  {
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v25);

    return;
  }
  v92 = v26;
  v29 = v28;
  v30 = sub_1005853C8((uint64_t)v29);
  if (!v25)
  {
    swift_bridgeObjectRelease(v92);

    return;
  }
  v86 = v24;
  v31 = sub_1006C2E3C();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v31, v32);
  v34 = objc_msgSend(v30, "mostSpecificSelectionOfClass:", ObjCClassFromMetadata, swift_bridgeObjectRetain(v25).n128_f64[0]);
  if (!v34)
  {

    swift_bridgeObjectRelease(v92);
    v64 = v25;
LABEL_19:
    swift_bridgeObjectRelease_n(v64, 2);

    return;
  }
  v35 = v34;
  v85 = v25;
  v36 = objc_opt_self(CRLWPSelection);
  v37 = swift_dynamicCastObjCClass(v35, v36);
  v38 = v35;
  if (!v37)
  {

    swift_bridgeObjectRelease(v92);
    v64 = v85;
    goto LABEL_19;
  }
  v39 = (void *)v37;
  v84 = v38;
  v40 = *(id *)(a2 + 32);
  v41 = objc_msgSend(v39, "range");
  v42 = objc_msgSend(v39, "range");
  v44 = __OFADD__(v42, v43);
  v45 = (uint64_t)v42 + v43;
  if (v44)
  {
    __break(1u);
  }
  else if (v45 >= (uint64_t)v41)
  {
    v83 = v29;
    sub_1007D7CB8((uint64_t)v41, v45, v104);

    v46 = (void *)v104[0];
    v47 = *(_QWORD *)(v104[0] + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (v47)
    {
      v82 = v30;
      v48 = v104[1];
      v49 = v104[2];
      (*(void (**)(void))(*(_QWORD *)v47 + 760))();
      v50 = v98;
      sub_1004D29BC((uint64_t)&v15[*(int *)(v97 + 20)], v98);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
      v51 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      v52 = v99;
      CRAttributedString.subscript.getter(v48, v49, v51);
      sub_1004B84A4(v50, type metadata accessor for CRLWPStorageCRDTData);
      v53 = v101;
      v54 = (void *)CRAttributedString.Substring.attributedString.getter(v101);
      (*(void (**)(char *, _QWORD *))(v100 + 8))(v52, v53);
      v55 = objc_msgSend(v54, "string");

      if (v55)
      {

        v107 = v105;
        v108 = v106;
        sub_1005A73A4((id *)&v107);
        v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v58 = v57;

        v59 = v86;
        v15 = v91;
        v41 = v96;
        v25 = v83;
        v101 = v27;
        v60 = (uint64_t)v85;
        if (v56 == v86 && v85 == v58)
        {
          swift_bridgeObjectRelease(v58);
          v61 = swift_bridgeObjectRelease(v60);
          v62 = v60;
          v63 = v59;
LABEL_21:
          v67 = (void (*)(char *, uint64_t, char *, __n128))v41[2];
          v68 = v41;
          v69 = v25;
          v70 = (uint64_t)v90;
          v67(v90, v93, v15, v61);
          v71 = v82;
          v109 = (unint64_t)v82;
          v110 = v63;
          v111 = v62;
          v72 = v92;
          v112 = v89;
          v113 = v92;
          v73 = v95;
          swift_beginAccess(v95, v102, 33, 0);
          swift_bridgeObjectRetain(v72);
          swift_bridgeObjectRetain(v62);
          v74 = v71;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v73);
          v114 = *v73;
          *v73 = 0x8000000000000000;
          sub_100828320(&v109, v70, isUniquelyReferenced_nonNull_native);
          v76 = *v73;
          *v73 = v114;
          v77 = swift_bridgeObjectRelease(v76);
          ((void (*)(uint64_t, char *, __n128))v68[1])(v70, v15, v77);
          swift_endAccess(v102);
          swift_bridgeObjectRelease(v72);
          swift_bridgeObjectRelease(v62);

          return;
        }
        v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v58, v86, v85, 0);
        v63 = v59;
        v66 = v65;
        swift_bridgeObjectRelease(v58);
        v61 = swift_bridgeObjectRelease(v60);
        v62 = v60;
        if ((v66 & 1) != 0)
          goto LABEL_21;
        ((void (*)(char *, uint64_t, char *, __n128))v41[2])(v88, v93, v15, v61);
        v78 = v87;
        v40 = (_QWORD *)*v87;
        v79 = swift_isUniquelyReferenced_nonNull_native(*v87);
        *v78 = v40;
        v29 = v92;
        if ((v79 & 1) != 0)
          goto LABEL_24;
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  __break(1u);
LABEL_29:
  v40 = (_QWORD *)sub_100D0EC28(0, v40[2] + 1, 1, (unint64_t)v40);
  *v87 = v40;
LABEL_24:
  v81 = v40[2];
  v80 = v40[3];
  if (v81 >= v80 >> 1)
  {
    v40 = (_QWORD *)sub_100D0EC28(v80 > 1, v81 + 1, 1, (unint64_t)v40);
    *v87 = v40;
  }
  v40[2] = v81 + 1;
  ((void (*)(unint64_t, char *, char *))v41[4])((unint64_t)v40+ ((*((unsigned __int8 *)v41 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v41 + 80))+ v41[9] * v81, v88, v15);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v85);

}

uint64_t sub_1006C2C58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 41, 7);
}

uint64_t type metadata accessor for CRLWPDictationAndAutocorrectionCoordinator()
{
  return objc_opt_self(_TtC8Freeform42CRLWPDictationAndAutocorrectionCoordinator);
}

uint64_t destroy for SelectionData(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

_QWORD *initializeWithCopy for SelectionData(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  v7 = v3;
  v8 = v4;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for SelectionData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t assignWithTake for SelectionData(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease(v8);
  return a1;
}

ValueMetadata *type metadata accessor for SelectionData()
{
  return &type metadata for SelectionData;
}

unint64_t sub_1006C2E3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EFD40;
  if (!qword_1013EFD40)
  {
    v1 = objc_opt_self(CRLWPSelection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013EFD40);
  }
  return result;
}

void sub_1006C2E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __n128 v18;
  int64_t v19;
  __n128 v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, unint64_t, uint64_t, __n128);
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  _BYTE v47[16];
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _BYTE *v55;
  uint64_t v56;
  int64_t v57;
  int64_t v58;
  _BYTE v59[24];
  char v60[24];
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v49 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v47[-v8];
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)(a1 + 64);
  v56 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain(a1);
  v18 = swift_beginAccess(v17, v60, 0, 0);
  v19 = 0;
  v57 = (unint64_t)(v14 + 63) >> 6;
  v50 = a1;
  v55 = v9;
  v48 = v12;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v58 = v19;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v57)
      goto LABEL_28;
    v24 = *(_QWORD *)(v56 + 8 * v23);
    v25 = v19 + 1;
    if (!v24)
    {
      v25 = v19 + 2;
      if (v19 + 2 >= v57)
        goto LABEL_28;
      v24 = *(_QWORD *)(v56 + 8 * v25);
      if (!v24)
      {
        v25 = v19 + 3;
        if (v19 + 3 >= v57)
          goto LABEL_28;
        v24 = *(_QWORD *)(v56 + 8 * v25);
        if (!v24)
        {
          v25 = v19 + 4;
          if (v19 + 4 >= v57)
            goto LABEL_28;
          v24 = *(_QWORD *)(v56 + 8 * v25);
          if (!v24)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v24 - 1) & v24;
    v58 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_24:
    v27 = *(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v5 + 16);
    v27(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * v22, v4, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
      goto LABEL_29;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v9, v12, v4);
    v28 = *v17;
    if (*(_QWORD *)(*v17 + 16))
    {
      swift_bridgeObjectRetain(*v17);
      v29 = sub_100842EFC((uint64_t)v9);
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(v28 + 56) + 48 * v29;
        v32 = *(void **)v31;
        v33 = *(void **)(v31 + 8);
        v34 = *(_QWORD *)(v31 + 16);
        v51 = *(_QWORD *)(v31 + 24);
        v35 = *(_QWORD *)(v31 + 40);
        v52 = *(_QWORD *)(v31 + 32);
        v53 = v34;
        swift_bridgeObjectRetain(v51);
        swift_bridgeObjectRetain(v35);
        v36 = v32;
        v54 = v33;
        v37 = swift_bridgeObjectRelease(v28);
        v38 = (uint64_t)v49;
        v27(v49, (unint64_t)v55, v4, v37);
        v39 = objc_allocWithZone((Class)type metadata accessor for CRLPersistableSelectionPath(0));
        v40 = v36;
        sub_1005AC98C(v40);
        *(_QWORD *)&v61 = v40;
        *((_QWORD *)&v61 + 1) = v41;
        v42 = v51;
        v62 = v53;
        v63 = v51;
        v64 = v52;
        v65 = v35;
        swift_beginAccess(v17, v59, 33, 0);
        swift_bridgeObjectRetain(v42);
        swift_bridgeObjectRetain(v35);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
        v66 = *v17;
        *v17 = 0x8000000000000000;
        sub_100828320(&v61, v38, isUniquelyReferenced_nonNull_native);
        v44 = *v17;
        *v17 = v66;
        v45 = swift_bridgeObjectRelease(v44);
        v46 = v38;
        v9 = v55;
        (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v46, v4, v45);
        swift_endAccess(v59);
        swift_bridgeObjectRelease(v35);
        v12 = v48;
        swift_bridgeObjectRelease(v42);

        a1 = v50;
      }
      else
      {
        v20 = swift_bridgeObjectRelease(v28);
      }
    }
    (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v9, v4, v20);
    v19 = v58;
  }
  v26 = v19 + 5;
  if (v19 + 5 >= v57)
  {
LABEL_28:
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v12, 1, 1, v4, v18);
LABEL_29:
    swift_release(a1);
    return;
  }
  v24 = *(_QWORD *)(v56 + 8 * v26);
  if (v24)
  {
    v25 = v19 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v57)
      goto LABEL_28;
    v24 = *(_QWORD *)(v56 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

void sub_1006C32D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v26 = a3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v25 = (unint64_t)(v14 + 63) >> 6;
  v17 = swift_bridgeObjectRetain(a1);
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * i, v6, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
      goto LABEL_28;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1006C2464((uint64_t)v9, a2, v26);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v25)
      goto LABEL_27;
    v22 = *(_QWORD *)(v24 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v25)
        goto LABEL_27;
      v22 = *(_QWORD *)(v24 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v25)
        goto LABEL_27;
      v22 = *(_QWORD *)(v24 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v25)
        goto LABEL_27;
      v22 = *(_QWORD *)(v24 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v25)
      {
        v22 = *(_QWORD *)(v24 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_30;
            if (v18 >= v25)
              goto LABEL_27;
            v22 = *(_QWORD *)(v24 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_27:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v12, 1, 1, v6, v17);
LABEL_28:
      swift_release(a1);
      return;
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

double sub_1006C3598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  double result;
  double *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  _BYTE v44[32];
  char v45[24];
  double *v46;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = _swiftEmptyArrayStorage;
  v8 = (uint64_t *)(v0 + 24);
  swift_beginAccess(v0 + 24, v45, 0, 0);
  v9 = *(_QWORD *)(v0 + 24);
  swift_retain(v0);
  swift_bridgeObjectRetain(v9);
  sub_1006C32D0(v10, v0, &v46);
  swift_bridgeObjectRelease(v9);
  swift_release(v0);
  v11 = *((_QWORD *)v46 + 2);
  v33 = v46;
  if (v11)
  {
    v12 = (char *)v46 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v40 = *(_QWORD *)(v2 + 72);
    v38 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    swift_bridgeObjectRetain_n(v46, 2);
    v36 = v4;
    v37 = v7;
    v41 = v8;
    while (1)
    {
      v38(v7, v12, v1);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v24(v7, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
        break;
      v35 = v24;
      v42 = v12;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      swift_beginAccess(v8, v44, 33, 0);
      v25 = *v8;
      swift_bridgeObjectRetain(*v8);
      v39 = sub_100842EFC((uint64_t)v4);
      v27 = v26;
      swift_bridgeObjectRelease(v25);
      v22 = 0;
      v16 = 0;
      v18 = 0;
      v17 = 0;
      v20 = 0;
      v19 = 0;
      if ((v27 & 1) != 0)
      {
        v34 = v11;
        v28 = v41;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v41);
        v30 = *v28;
        v43 = *v28;
        *v28 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_100830824();
          v30 = v43;
        }
        v13 = v39;
        (*(void (**)(unint64_t, uint64_t))(v2 + 8))(*(_QWORD *)(v30 + 48) + v39 * v40, v1);
        v14 = v43;
        v15 = *(_QWORD *)(v43 + 56) + 48 * v13;
        v16 = *(void **)(v15 + 8);
        v18 = *(_QWORD *)(v15 + 16);
        v17 = *(_QWORD *)(v15 + 24);
        v20 = *(_QWORD *)(v15 + 32);
        v19 = *(_QWORD *)(v15 + 40);
        v21 = v13;
        v22 = *(void **)v15;
        sub_10051C160(v21, v43);
        v23 = *v28;
        *v28 = v14;
        swift_bridgeObjectRelease(v23);
        v11 = v34;
      }
      swift_endAccess(v44);
      sub_1006C38B0(v22, v16, v18, v17, v20, v19);
      v4 = v36;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v36, v1);
      v8 = v41;
      v12 = &v42[v40];
      --v11;
      v7 = v37;
      if (!v11)
      {
        v35(v37, 1, 1, v1);
        break;
      }
    }
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain_n(v46, 2);
    v31(v7, 1, 1, v1);
  }
  swift_bridgeObjectRelease_n(v33, 2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v46).n128_u64[0];
  return result;
}

void *sub_1006C38B0(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result)
  {

    swift_bridgeObjectRelease(a6);
    return (void *)swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1006C38F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1006C5C14();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1006C3954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1006C5C14();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1006C39A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1006C871C();
  v7 = sub_1006C69BC();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1006C39FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1006C871C();
  v5 = sub_1006C5C14();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1006C3A64(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1006C871C();
  v5 = sub_1006C5C14();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1006C3ABC(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_1006C871C();
  v3 = sub_1006C5C14();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_1006C3B0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  float v15;
  float v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[2];
  _BYTE v23[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013ECBA8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1006C6C44();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLColorModelRGBData.CodingKeys, &type metadata for CRLColorModelRGBData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v23, &qword_1013EC938);
  sub_1004C4938((uint64_t)v23, (uint64_t)v22, &qword_1013EC938);
  v21 = 0;
  v12 = sub_1004B804C(&qword_1013EC938);
  v13 = sub_1006C8630(&qword_1013ECBB0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v22, &v21, v5, v12, v13);
  if (!v2)
  {
    v14 = *(float *)(v3 + 12);
    LOBYTE(v22[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v22, v5, v14);
    v15 = *(float *)(v3 + 16);
    LOBYTE(v22[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v22, v5, v15);
    v16 = *(float *)(v3 + 20);
    LOBYTE(v22[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v22, v5, v16);
    v22[0] = *(_QWORD *)(v3 + 24);
    v21 = 4;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v22, &v21, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL sub_1006C3D0C(char *a1, char *a2)
{
  return qword_100F05030[*a1] == qword_100F05030[*a2];
}

Swift::Int sub_1006C3D30()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F05030[v1]);
  return Hasher._finalize()();
}

void sub_1006C3D7C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F05030[*v0]);
}

Swift::Int sub_1006C3DB0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F05030[v2]);
  return Hasher._finalize()();
}

void sub_1006C3DF8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F05030[*v1];
}

uint64_t sub_1006C3E10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1006C3E44 + 4 * byte_100F03E90[*v0]))(0x617053726F6C6F63, 0xEA00000000006563);
}

uint64_t sub_1006C3E44()
{
  return 6579570;
}

uint64_t sub_1006C3E54()
{
  return 0x6E65657267;
}

uint64_t sub_1006C3E68()
{
  return 1702194274;
}

unint64_t sub_1006C3E78()
{
  return 0xD000000000000010;
}

uint64_t sub_1006C3E94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1006C748C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006C3EB8()
{
  char *v0;

  return qword_100F05030[*v0];
}

void sub_1006C3ED0(_QWORD *a1@<X8>)
{
  *a1 = &off_101263F48;
}

uint64_t sub_1006C3EE0(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1006C6BFC, (uint64_t (*)(void))sub_1006C6C44);
}

uint64_t sub_1006C3EF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C6C44();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006C3F1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C6C44();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006C3F44()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1006C3F4C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];

  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  return sub_1006C3B08(v5, v6) & 1;
}

double sub_1006C3F84@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];

  sub_1006C7688(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1006C3FBC(_QWORD *a1)
{
  return sub_1006C3B0C(a1);
}

uint64_t sub_1006C3FEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C8694();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1006C402C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1006C6A94();
  v7 = sub_1006C86D8();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1006C4088(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C8694();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1006C40C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C6D40();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1006C410C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C6D40();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1006C4150(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C6D40();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1006C4188(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  float v12;
  float v13;
  float v14;
  float v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013ECB60);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1006C734C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLColorModelCMYKData.CodingKeys, &type metadata for CRLColorModelCMYKData.CodingKeys, v11, v9, v10);
  v12 = *(float *)v3;
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v25, v5, v12);
  if (!v2)
  {
    v13 = *(float *)(v3 + 4);
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(&v24, v5, v13);
    v14 = *(float *)(v3 + 8);
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v23, v5, v14);
    v15 = *(float *)(v3 + 12);
    v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v22, v5, v15);
    v21 = *(_QWORD *)(v3 + 16);
    v20 = 4;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v17 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1006C4338()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1006C4360 + 4 * byte_100F03E95[*v0]))(1851881827, 0xE400000000000000);
}

uint64_t sub_1006C4360()
{
  return 0x61746E6567616DLL;
}

uint64_t sub_1006C4378()
{
  return 0x776F6C6C6579;
}

uint64_t sub_1006C438C()
{
  return 7955819;
}

unint64_t sub_1006C439C()
{
  return 0xD000000000000010;
}

uint64_t sub_1006C43B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1006C78D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1006C43DC(_QWORD *a1@<X8>)
{
  *a1 = &off_101263FE8;
}

uint64_t sub_1006C43EC(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1006C7304, (uint64_t (*)(void))sub_1006C734C);
}

uint64_t sub_1006C4400(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C734C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006C4428(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C734C();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1006C4450@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_1006C7AC0(a1, (uint64_t)&v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1006C4490(_QWORD *a1)
{
  return sub_1006C4188(a1);
}

uint64_t sub_1006C44C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C8520();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1006C4508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1006C719C();
  v7 = sub_1006C8564();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1006C4564(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C8520();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1006C459C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C7448();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1006C45E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C7448();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1006C462C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C7448();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1006C4664(_QWORD *a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v7 = sub_1004B804C(&qword_1013ECB80);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_1006C6FC8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLColorModelMonochromeData.CodingKeys, &type metadata for CRLColorModelMonochromeData.CodingKeys, v13, v11, v12);
  v20 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v20, v7, a3);
  if (!v3)
  {
    v18 = a2;
    v19 = 1;
    v14 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v15 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v7, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1006C47A4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x6574696877;
}

uint64_t sub_1006C47E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1006C7CC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1006C4804(_QWORD *a1@<X8>)
{
  *a1 = &off_1012642D0;
}

uint64_t sub_1006C4814(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1006C6F80, (uint64_t (*)(void))sub_1006C6FC8);
}

uint64_t sub_1006C4828(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C6FC8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006C4850(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C6FC8();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_1006C4878@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  int v5;

  result = sub_1006C7DAC(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = result;
  }
  return result;
}

uint64_t sub_1006C48A4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1006C4664(a1, *(_QWORD *)(v1 + 8), *(float *)v1);
}

uint64_t sub_1006C48C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C85A8();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1006C4900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1006C6E18();
  v7 = sub_1006C85EC();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1006C495C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C85A8();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1006C4994(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C70C4();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1006C49E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C70C4();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1006C4A24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C70C4();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1006C4A5C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1006C7F28(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006C4A84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1006C4AB0 + 4 * byte_100F03E9A[*v0]))(0x6168706C61, 0xE500000000000000);
}

uint64_t sub_1006C4AB0()
{
  return 0x61746144626772;
}

uint64_t sub_1006C4AC8()
{
  return 0x617461446B796D63;
}

uint64_t sub_1006C4AE0()
{
  return 0x6F7268636F6E6F6DLL;
}

unint64_t sub_1006C4B04()
{
  return 0xD000000000000010;
}

uint64_t sub_1006C4B20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1006C7F50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006C4B44@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1006C7F28(a1);
  *a2 = result;
  return result;
}

void sub_1006C4B68(_QWORD *a1@<X8>)
{
  *a1 = &off_1012639E0;
}

uint64_t sub_1006C4B78(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1006C6758, (uint64_t (*)(void))sub_1006C67A0);
}

uint64_t sub_1006C4B8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C67A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006C4BB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C67A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1006C4BDC()
{
  uint64_t v0;
  Swift::UInt32 v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  Swift::UInt32 v7;
  Swift::UInt32 v9;
  Swift::UInt32 v11;
  uint64_t v12;
  uint64_t v13;
  Swift::UInt32 v15;
  Swift::UInt32 v17;
  Swift::UInt32 v19;
  Swift::UInt32 v21;
  Swift::UInt32 v23;

  if ((*(_BYTE *)(v0 + 4) & 1) == 0)
  {
    if ((*(_DWORD *)v0 & 0x7FFFFFFF) != 0)
      v1 = *(_DWORD *)v0;
    else
      v1 = 0;
    Hasher._combine(_:)(v1);
  }
  if (*(_QWORD *)(v0 + 32))
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(_QWORD *)(v0 + 24);
    v4 = HIDWORD(v2);
    v5 = v2 & 0x7F80000000000000;
    if ((v4 & 0x7FFFFF) == 0 && v5 == 0)
      v7 = 0;
    else
      v7 = v4;
    Hasher._combine(_:)(v7);
    if ((v3 & 0x7FFFFF) == 0 && (v3 & 0x7F800000) == 0)
      v9 = 0;
    else
      v9 = v3;
    Hasher._combine(_:)(v9);
    if ((v3 & 0x7FFFFF00000000) == 0 && (v3 & 0x7F80000000000000) == 0)
      v11 = 0;
    else
      v11 = HIDWORD(v3);
    Hasher._combine(_:)(v11);
  }
  if (*(_QWORD *)(v0 + 56))
  {
    v13 = *(_QWORD *)(v0 + 40);
    v12 = *(_QWORD *)(v0 + 48);
    if ((v13 & 0x7FFFFF) == 0 && (*(_QWORD *)(v0 + 40) & 0x7F800000) == 0)
      v15 = 0;
    else
      v15 = *(_QWORD *)(v0 + 40);
    Hasher._combine(_:)(v15);
    if ((v13 & 0x7FFFFF00000000) == 0 && (v13 & 0x7F80000000000000) == 0)
      v17 = 0;
    else
      v17 = HIDWORD(v13);
    Hasher._combine(_:)(v17);
    if ((v12 & 0x7FFFFF) == 0 && (v12 & 0x7F800000) == 0)
      v19 = 0;
    else
      v19 = v12;
    Hasher._combine(_:)(v19);
    if ((v12 & 0x7FFFFF00000000) == 0 && (v12 & 0x7F80000000000000) == 0)
      v21 = 0;
    else
      v21 = HIDWORD(v12);
    Hasher._combine(_:)(v21);
  }
  if (*(_QWORD *)(v0 + 72))
  {
    if ((*(_QWORD *)(v0 + 64) & 0x7FFFFF) == 0 && (*(_QWORD *)(v0 + 64) & 0x7F800000) == 0)
      v23 = 0;
    else
      v23 = *(_QWORD *)(v0 + 64);
    Hasher._combine(_:)(v23);
  }
}

uint64_t sub_1006C4CFC(_QWORD *a1)
{
  unsigned int *v1;
  uint64_t v2;
  unsigned int *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[4];
  _BYTE v21[4];
  _BYTE v22[16];
  _BYTE v23[24];
  _BYTE v24[32];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013ECB48);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1006C67A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLColorData.CodingKeys, &type metadata for CRLColorData.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = *((_BYTE *)v3 + 4);
  LOBYTE(v20[0]) = 0;
  v21[0] = v13;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12 | ((unint64_t)v13 << 32), v20, v5);
  if (!v2)
  {
    sub_1004C4938((uint64_t)(v3 + 2), (uint64_t)v24, &qword_1013ECB50);
    sub_1004C4938((uint64_t)v24, (uint64_t)v20, &qword_1013ECB50);
    v21[0] = 1;
    v14 = sub_1006C6B24();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v20, v21, v5, &type metadata for CRLColorModelRGBData, v14);
    sub_1004C4938((uint64_t)(v3 + 10), (uint64_t)v23, &qword_1013EC958);
    sub_1004C4938((uint64_t)v23, (uint64_t)v20, &qword_1013EC958);
    v21[0] = 2;
    v15 = sub_1006C722C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v20, v21, v5, &type metadata for CRLColorModelCMYKData, v15);
    sub_1004C4938((uint64_t)(v3 + 16), (uint64_t)v22, &qword_1013EC950);
    sub_1004C4938((uint64_t)v22, (uint64_t)v20, &qword_1013EC950);
    v21[0] = 3;
    v16 = sub_1006C6EA8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v20, v21, v5, &type metadata for CRLColorModelMonochromeData, v16);
    v20[0] = *((_QWORD *)v3 + 10);
    v21[0] = 4;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, v21, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1006C4F64()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1006C4F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 80));
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1006C4F94())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

Swift::Int sub_1006C4FA4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1006C4BDC();
  return Hasher._finalize()();
}

Swift::Int sub_1006C4FE4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1006C4BDC();
  return Hasher._finalize()();
}

uint64_t sub_1006C501C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1006C4CF8(v7, v9) & 1;
}

double sub_1006C5084@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_1006C8184(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1006C50DC(_QWORD *a1)
{
  return sub_1006C4CFC(a1);
}

uint64_t sub_1006C5124(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C8760();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1006C5164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1006C65F0();
  v7 = sub_1006C689C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1006C51C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C8760();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1006C51F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C68E4();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1006C5244(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1006C68E4();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1006C5288(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006C68E4();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

CGColorSpace *sub_1006C52C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  float v4;
  uint64_t v5;
  float v6;
  float v7;
  _QWORD *v8;
  CGColorSpace *result;
  float v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  CGColorSpace *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  CGColorRef v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  _BYTE v27[24];
  _BYTE v28[8];
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[8];
  uint64_t v32;

  if (*(_BYTE *)(a1 + 4))
    v4 = 1.0;
  else
    v4 = *(float *)a1;
  v5 = *(_QWORD *)(a1 + 32);
  if (!v5)
  {
LABEL_12:
    v5 = *(_QWORD *)(a1 + 56);
    if (v5)
    {
      v10 = *(float *)(a1 + 40);
      v7 = *(float *)(a1 + 44);
      v11 = *(float *)(a1 + 48);
      v6 = *(float *)(a1 + 52);
      sub_1004C4938(a1 + 64, (uint64_t)v27, &qword_1013EC950);
      sub_1004C4938((uint64_t)v27, (uint64_t)v28, &qword_1013EC950);
      v12 = v29;
      swift_bridgeObjectRetain(v5);
      if (v12)
      {
        HIDWORD(v2) = 0;
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 261, "Should only have one kind of color model data per color data. Unarchiving CMYK.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 261, (uint64_t)"Should only have one kind of color model data per color data. Unarchiving CMYK.", 79, 2u);
      }
      sub_1006C6010((_QWORD *)a1);
      v13 = sub_1004B804C(&qword_1013EC948);
      v8 = (_QWORD *)swift_allocObject(v13, 72, 7);
      *((_OWORD *)v8 + 1) = xmmword_100F05060;
      *((double *)v8 + 4) = v10;
      *((double *)v8 + 5) = v7;
      *((double *)v8 + 6) = v11;
      swift_bridgeObjectRelease(v5);
      *((double *)v8 + 7) = v6;
      *((double *)v8 + 8) = v4;
      result = (CGColorSpace *)(id)sub_100011A6C();
      if (!result)
      {
        __break(1u);
LABEL_17:
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 254, "Tried to decode unknown RGB color space value. Falling back to unarchiving sRGB.", 80, 2u, (uint64_t)v8);
        sub_1004F5394((uint64_t)v8, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 254, (uint64_t)"Tried to decode unknown RGB color space value. Falling back to unarchiving sRGB.", 80, 2u);
        result = (CGColorSpace *)(id)sub_100011B24();
        if (result)
          goto LABEL_18;
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      v17 = *(_QWORD *)(a1 + 72);
      if (!v17)
      {
        sub_1006C6010((_QWORD *)a1);
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 275, "Missing color model data. Falling back to unarchiving black.", 60, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 275, (uint64_t)"Missing color model data. Falling back to unarchiving black.", 60, 2u);
        return (CGColorSpace *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1, v24)), "initWithRed:green:blue:alpha:colorSpace:", 0, 0.0, 0.0, 0.0, 1.0);
      }
      v18 = *(float *)(a1 + 64);
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + 72));
      sub_1006C6010((_QWORD *)a1);
      v19 = sub_1004B804C(&qword_1013EC948);
      v8 = (_QWORD *)swift_allocObject(v19, 48, 7);
      *((_OWORD *)v8 + 1) = xmmword_100EF5A10;
      swift_bridgeObjectRelease(v17);
      *((double *)v8 + 4) = v18;
      *((double *)v8 + 5) = v4;
      result = (CGColorSpace *)(id)sub_100011AC8();
      if (!result)
        goto LABEL_33;
    }
    v14 = result;
    v15 = 2;
    goto LABEL_25;
  }
  v2 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a1 + 8);
  v7 = *(float *)(a1 + 24);
  v6 = *(float *)(a1 + 28);
  sub_1004C4938(a1 + 40, (uint64_t)v27, &qword_1013EC958);
  sub_1004C4938((uint64_t)v27, (uint64_t)v28, &qword_1013EC958);
  v8 = _swiftEmptyArrayStorage;
  if (v30
    || (sub_1004C4938(a1 + 64, (uint64_t)v26, &qword_1013EC950),
        sub_1004C4938((uint64_t)v26, (uint64_t)v31, &qword_1013EC950),
        v32))
  {
    swift_bridgeObjectRetain(v5);
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 242, "Should only have one kind of color model data per color data. Unarchiving RGB.", 78, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 242, (uint64_t)"Should only have one kind of color model data per color data. Unarchiving RGB.", 78, 2u);
  }
  else
  {
    swift_bridgeObjectRetain(v5);
  }
  sub_1006C6010((_QWORD *)a1);
  if ((v2 & 1) != 0)
    goto LABEL_17;
  if ((v25 & 1) != 0)
  {
    result = (CGColorSpace *)(id)sub_100011BA0();
    if (result)
    {
      v14 = result;
      v15 = 1;
      goto LABEL_21;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  result = (CGColorSpace *)(id)sub_100011B24();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_18:
  v14 = result;
  v15 = 0;
LABEL_21:
  v16 = sub_1004B804C(&qword_1013EC948);
  v8 = (_QWORD *)swift_allocObject(v16, 64, 7);
  *((_OWORD *)v8 + 1) = xmmword_100EF5E30;
  *((double *)v8 + 4) = *((float *)&v2 + 1);
  *((double *)v8 + 5) = v7;
  swift_bridgeObjectRelease(v5);
  *((double *)v8 + 6) = v6;
  *((double *)v8 + 7) = v4;
LABEL_25:
  v20 = CGColorCreate(v14, (const CGFloat *)v8 + 4);
  swift_bridgeObjectRelease(v8);
  if (v20)
  {
    v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1, v21)), "initWithCGColor:colorSpace:", v20, v15);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 281, "Unable to create CGColor from archived color space and components. Falling back to unarchiving black.", 101, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 281, (uint64_t)"Unable to create CGColor from archived color space and components. Falling back to unarchiving black.", 101, 2u);
    v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1, v23)), "initWithRed:green:blue:alpha:colorSpace:", 0, 0.0, 0.0, 0.0, 1.0);
  }

  return (CGColorSpace *)v22;
}

uint64_t sub_1006C5914(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  _BYTE v7[16];
  _BYTE v8[16];
  _BYTE v9[16];
  _BYTE v10[16];

  sub_1004C4938(a1, (uint64_t)v10, &qword_1013EC938);
  sub_1004C4938((uint64_t)v10, (uint64_t)v8, &qword_1013EC938);
  sub_1004C4938(a2, (uint64_t)v9, &qword_1013EC938);
  sub_1004C4938((uint64_t)v9, (uint64_t)v7, &qword_1013EC938);
  v4 = sub_1006C5C14();
  if ((static CRExtensible.== infix(_:_:)(v8, v7, &type metadata for CRLColorModelRGBData.ColorSpace, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0&& *(float *)(a1 + 12) == *(float *)(a2 + 12)&& *(float *)(a1 + 16) == *(float *)(a2 + 16)&& *(float *)(a1 + 20) == *(float *)(a2 + 20))
  {
    v5 = sub_100C9E04C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1006C5A00(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_BYTE *)(a2 + 4);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      return 0;
  }
  else
  {
    if (*(float *)a1 != *(float *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  if (v5)
  {
    if (!v6)
      return 0;
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a1 + 24);
    v22 = *(_QWORD *)(a1 + 8);
    v23 = v7 & 1;
    v24 = HIDWORD(v7);
    v25 = v11;
    v26 = v5;
    v27 = v8;
    v28 = v9 & 1;
    v29 = HIDWORD(v9);
    v30 = v10;
    v31 = v6;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    v12 = sub_1006C5914((uint64_t)&v22, (uint64_t)&v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a2 + 56);
  if (v13)
  {
    if (!v14)
      return 0;
    v15 = *(_QWORD *)(a2 + 40);
    if (*(float *)(a1 + 40) != *(float *)&v15)
      return 0;
    if (*(float *)(a1 + 44) != *((float *)&v15 + 1))
      return 0;
    if (*(float *)(a1 + 48) != COERCE_FLOAT(*(_QWORD *)(a2 + 48)))
      return 0;
    if (*(float *)(a1 + 52) != COERCE_FLOAT(HIDWORD(*(_QWORD *)(a2 + 48))))
      return 0;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 56));
    swift_bridgeObjectRetain(v14);
    v16 = sub_100C9E04C(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
  }
  else if (v14)
  {
    return 0;
  }
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a2 + 72);
  if (!v18)
  {
    if (!v19)
      return sub_100C9E04C(*(_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80));
    return 0;
  }
  if (!v19)
    return 0;
  if (*(float *)(a1 + 64) != COERCE_FLOAT(*(_QWORD *)(a2 + 64)))
    return 0;
  swift_bridgeObjectRetain(*(_QWORD *)(a2 + 72));
  swift_bridgeObjectRetain(v18);
  v21 = sub_100C9E04C(v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
    return 0;
  return sub_100C9E04C(*(_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80));
}

unint64_t sub_1006C5C14()
{
  unint64_t result;

  result = qword_1013EC940;
  if (!qword_1013EC940)
  {
    result = swift_getWitnessTable(&unk_100F04D68, &type metadata for CRLColorModelRGBData.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_1013EC940);
  }
  return result;
}

void sub_1006C5C58(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>, int8x16_t a4@<Q2>)
{
  unint64_t v4;
  unint64_t v7;
  double v8;
  _BOOL4 v9;
  float v10;
  float v11;
  unsigned int v12;
  unint64_t v13;
  int32x2_t v14;
  int8x16_t v15;
  __int128 v16;

  v4 = a2;
  if (a2 >= 2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:colorRGBSpace:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 152, "Color should be converted to RGB by the time it is archived. Falling back to archiving sRGB.", 92, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:colorRGBSpace:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 152, (uint64_t)"Color should be converted to RGB by the time it is archived. Falling back to archiving sRGB.", 92, 2u);
    v4 = 0;
  }
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 >= 4)
  {
    v8 = *(double *)(a1 + 56);
    v9 = sub_1006C5FE4(v8);
    v10 = v8;
    v11 = v10;
    if (v9)
      v11 = 0.0;
    goto LABEL_11;
  }
  if (!v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= 3)
  {
    v11 = 0.0;
    LOBYTE(v9) = 1;
LABEL_11:
    *(float *)&v12 = *(double *)(a1 + 48);
    v13 = (unint64_t)v12 << 32;
    *(float *)a3 = v11;
    *(_BYTE *)(a3 + 4) = v9;
    *(_QWORD *)(a3 + 8) = v4;
    v14 = (int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 32));
    v15.i64[0] = v14.u32[0];
    v15.i64[1] = v14.u32[1];
    a4.i64[1] = v13;
    *(_QWORD *)&v16 = vshll_n_s32(v14, 0x20uLL).u64[0];
    *((_QWORD *)&v16 + 1) = vorrq_s8(a4, v15).i64[1];
    *(_OWORD *)(a3 + 16) = v16;
    *(_QWORD *)(a3 + 32) = &_swiftEmptyDictionarySingleton;
    *(_OWORD *)(a3 + 40) = 0u;
    *(_OWORD *)(a3 + 56) = 0u;
    *(_QWORD *)(a3 + 72) = 0;
    *(_QWORD *)(a3 + 80) = &_swiftEmptyDictionarySingleton;
    return;
  }
LABEL_14:
  __break(1u);
}

__n128 sub_1006C5DE8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  CGColor *v4;
  CGColorSpace *v5;
  CGColorSpaceModel Model;
  id v7;
  uint64_t v8;
  id v9;
  int8x16_t v10;
  uint64_t v11;
  uint64_t inited;
  int8x16_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __n128 result;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[64];
  int v22;
  char v23;
  __n128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v4 = (CGColor *)objc_msgSend(a1, "CGColor");
  v5 = CGColorGetColorSpace(v4);

  if (v5
    && (Model = CGColorSpaceGetModel(v5), v5, Model == kCGColorSpaceModelRGB)
    && (v7 = objc_msgSend(a1, "CGColor"),
        v8 = CGColorRef.components.getter(),
        v7,
        v8))
  {
    v9 = objc_msgSend(a1, "colorRGBSpace");
    sub_1006C5C58(v8, (unint64_t)v9, (uint64_t)&v22, v10);

    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 134, "Asked to archive a CGColor that we can't handle. Falling back to archiving black.", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2u, 134, (uint64_t)"Asked to archive a CGColor that we can't handle. Falling back to archiving black.", 81, 2u);
    v11 = sub_1004B804C(&qword_1013EC948);
    inited = swift_initStackObject(v11, v21);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E30;
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0x3FF0000000000000;
    sub_1006C5C58(inited, 0, (uint64_t)&v22, v13);
    swift_setDeallocating(inited);

  }
  v15 = v28;
  v14 = v29;
  v16 = v23;
  result = v24;
  v18 = v25;
  v19 = v26;
  v20 = v27;
  *(_DWORD *)a2 = v22;
  *(_BYTE *)(a2 + 4) = v16;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v18;
  *(_OWORD *)(a2 + 40) = v19;
  *(_OWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 72) = v15;
  *(_QWORD *)(a2 + 80) = v14;
  return result;
}

BOOL sub_1006C5FE4(double a1)
{
  return fabs(a1 + -1.0) < 0.000000999999997 || a1 == 1.0;
}

_QWORD *sub_1006C6010(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[7];
  v4 = a1[9];
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for CRLColorModelCMYKData()
{
  return &type metadata for CRLColorModelCMYKData;
}

ValueMetadata *type metadata accessor for CRLColorModelMonochromeData()
{
  return &type metadata for CRLColorModelMonochromeData;
}

uint64_t destroy for CRLColorModelRGBData(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for CRLColorModelRGBData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLColorModelRGBData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  v4 = a2[3];
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t assignWithTake for CRLColorModelRGBData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorModelRGBData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorModelRGBData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorModelRGBData()
{
  return &type metadata for CRLColorModelRGBData;
}

ValueMetadata *type metadata accessor for CRLColorModelRGBData.ColorSpace()
{
  return &type metadata for CRLColorModelRGBData.ColorSpace;
}

uint64_t destroy for CRLColorData(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  return swift_bridgeObjectRelease(a1[10]);
}

uint64_t initializeWithCopy for CRLColorData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 20) = *(_QWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for CRLColorData(uint64_t a1, int *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  v5 = *((_QWORD *)a2 + 1);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 20) = a2[5];
  *(_DWORD *)(a1 + 24) = a2[6];
  *(_DWORD *)(a1 + 28) = a2[7];
  v6 = *((_QWORD *)a2 + 4);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 40) = a2[10];
  *(_DWORD *)(a1 + 44) = a2[11];
  *(_DWORD *)(a1 + 48) = a2[12];
  *(_DWORD *)(a1 + 52) = a2[13];
  v8 = *((_QWORD *)a2 + 7);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + 64) = a2[16];
  v10 = *((_QWORD *)a2 + 9);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *((_QWORD *)a2 + 10);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

__n128 initializeWithTake for CRLColorData(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CRLColorData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 20) = *(_QWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v5);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorData()
{
  return &type metadata for CRLColorData;
}

unint64_t sub_1006C6560()
{
  unint64_t result;

  result = qword_1013EC960;
  if (!qword_1013EC960)
  {
    result = swift_getWitnessTable(&unk_100F03F30, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC960);
  }
  return result;
}

unint64_t sub_1006C65A8()
{
  unint64_t result;

  result = qword_1013EC968;
  if (!qword_1013EC968)
  {
    result = swift_getWitnessTable(&unk_100F03F78, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC968);
  }
  return result;
}

unint64_t sub_1006C65F0()
{
  unint64_t result;

  result = qword_1013EC970;
  if (!qword_1013EC970)
  {
    result = swift_getWitnessTable(&unk_100F03FD8, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC970);
  }
  return result;
}

unint64_t sub_1006C6638()
{
  unint64_t result;

  result = qword_1013EC978;
  if (!qword_1013EC978)
  {
    result = swift_getWitnessTable(&unk_100F04D40, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC978);
  }
  return result;
}

unint64_t sub_1006C6680()
{
  unint64_t result;

  result = qword_1013EC980;
  if (!qword_1013EC980)
  {
    result = swift_getWitnessTable(&unk_100F04D18, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC980);
  }
  return result;
}

unint64_t sub_1006C66C8()
{
  unint64_t result;

  result = qword_1013EC988;
  if (!qword_1013EC988)
  {
    result = swift_getWitnessTable(&unk_100F04080, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EC988);
  }
  return result;
}

unint64_t sub_1006C6710()
{
  unint64_t result;

  result = qword_1013EC990;
  if (!qword_1013EC990)
  {
    result = swift_getWitnessTable(&unk_100F04190, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EC990);
  }
  return result;
}

unint64_t sub_1006C6758()
{
  unint64_t result;

  result = qword_1013EC998;
  if (!qword_1013EC998)
  {
    result = swift_getWitnessTable(&unk_100F04158, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EC998);
  }
  return result;
}

unint64_t sub_1006C67A0()
{
  unint64_t result;

  result = qword_1013EC9A0;
  if (!qword_1013EC9A0)
  {
    result = swift_getWitnessTable(&unk_100F040B8, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EC9A0);
  }
  return result;
}

unint64_t sub_1006C67E8()
{
  unint64_t result;

  result = qword_1013EC9A8;
  if (!qword_1013EC9A8)
  {
    result = swift_getWitnessTable(&unk_100F04130, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EC9A8);
  }
  return result;
}

unint64_t sub_1006C6830()
{
  unint64_t result;

  result = qword_1013EC9B0;
  if (!qword_1013EC9B0)
  {
    result = swift_getWitnessTable(&unk_100F04108, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EC9B0);
  }
  return result;
}

uint64_t sub_1006C6874()
{
  return sub_1006047EC(&qword_1013EC9B8, &qword_1013EC9C0);
}

unint64_t sub_1006C689C()
{
  unint64_t result;

  result = qword_1013EC9C8;
  if (!qword_1013EC9C8)
  {
    result = swift_getWitnessTable(&unk_100F04010, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC9C8);
  }
  return result;
}

unint64_t sub_1006C68E4()
{
  unint64_t result;

  result = qword_1013EC9D0;
  if (!qword_1013EC9D0)
  {
    result = swift_getWitnessTable(&unk_100F04038, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013EC9D0);
  }
  return result;
}

unint64_t sub_1006C692C()
{
  unint64_t result;

  result = qword_1013EC9D8;
  if (!qword_1013EC9D8)
  {
    result = swift_getWitnessTable(&unk_100F04238, &type metadata for CRLColorModelRGBData.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_1013EC9D8);
  }
  return result;
}

unint64_t sub_1006C6974()
{
  unint64_t result;

  result = qword_1013EC9E0;
  if (!qword_1013EC9E0)
  {
    result = swift_getWitnessTable(&unk_100F04280, &type metadata for CRLColorModelRGBData.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_1013EC9E0);
  }
  return result;
}

unint64_t sub_1006C69BC()
{
  unint64_t result;

  result = qword_1013EC9E8;
  if (!qword_1013EC9E8)
  {
    result = swift_getWitnessTable(&unk_100F043A8, &type metadata for CRLColorModelRGBData.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_1013EC9E8);
  }
  return result;
}

unint64_t sub_1006C6A04()
{
  unint64_t result;

  result = qword_1013EC9F0;
  if (!qword_1013EC9F0)
  {
    result = swift_getWitnessTable(&unk_100F043D0, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013EC9F0);
  }
  return result;
}

unint64_t sub_1006C6A4C()
{
  unint64_t result;

  result = qword_1013EC9F8;
  if (!qword_1013EC9F8)
  {
    result = swift_getWitnessTable(&unk_100F04418, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013EC9F8);
  }
  return result;
}

unint64_t sub_1006C6A94()
{
  unint64_t result;

  result = qword_1013ECA00;
  if (!qword_1013ECA00)
  {
    result = swift_getWitnessTable(&unk_100F044C8, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013ECA00);
  }
  return result;
}

unint64_t sub_1006C6ADC()
{
  unint64_t result;

  result = qword_1013ECA08;
  if (!qword_1013ECA08)
  {
    result = swift_getWitnessTable(&unk_100F044A0, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013ECA08);
  }
  return result;
}

unint64_t sub_1006C6B24()
{
  unint64_t result;

  result = qword_1013ECA10;
  if (!qword_1013ECA10)
  {
    result = swift_getWitnessTable(&unk_100F04478, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013ECA10);
  }
  return result;
}

unint64_t sub_1006C6B6C()
{
  unint64_t result;

  result = qword_1013ECA18;
  if (!qword_1013ECA18)
  {
    result = swift_getWitnessTable(&unk_100F04548, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA18);
  }
  return result;
}

unint64_t sub_1006C6BB4()
{
  unint64_t result;

  result = qword_1013ECA20;
  if (!qword_1013ECA20)
  {
    result = swift_getWitnessTable(&unk_100F04658, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA20);
  }
  return result;
}

unint64_t sub_1006C6BFC()
{
  unint64_t result;

  result = qword_1013ECA28;
  if (!qword_1013ECA28)
  {
    result = swift_getWitnessTable(&unk_100F04620, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA28);
  }
  return result;
}

unint64_t sub_1006C6C44()
{
  unint64_t result;

  result = qword_1013ECA30;
  if (!qword_1013ECA30)
  {
    result = swift_getWitnessTable(&unk_100F04580, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA30);
  }
  return result;
}

unint64_t sub_1006C6C8C()
{
  unint64_t result;

  result = qword_1013ECA38;
  if (!qword_1013ECA38)
  {
    result = swift_getWitnessTable(&unk_100F045F8, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA38);
  }
  return result;
}

unint64_t sub_1006C6CD4()
{
  unint64_t result;

  result = qword_1013ECA40;
  if (!qword_1013ECA40)
  {
    result = swift_getWitnessTable(&unk_100F045D0, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA40);
  }
  return result;
}

uint64_t sub_1006C6D18()
{
  return sub_1006047EC(&qword_1013ECA48, &qword_1013ECA50);
}

unint64_t sub_1006C6D40()
{
  unint64_t result;

  result = qword_1013ECA58;
  if (!qword_1013ECA58)
  {
    result = swift_getWitnessTable(&unk_100F04500, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013ECA58);
  }
  return result;
}

unint64_t sub_1006C6D88()
{
  unint64_t result;

  result = qword_1013ECA60;
  if (!qword_1013ECA60)
  {
    result = swift_getWitnessTable(&unk_100F046E8, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECA60);
  }
  return result;
}

unint64_t sub_1006C6DD0()
{
  unint64_t result;

  result = qword_1013ECA68;
  if (!qword_1013ECA68)
  {
    result = swift_getWitnessTable(&unk_100F04730, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECA68);
  }
  return result;
}

unint64_t sub_1006C6E18()
{
  unint64_t result;

  result = qword_1013ECA70;
  if (!qword_1013ECA70)
  {
    result = swift_getWitnessTable(&unk_100F047E0, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECA70);
  }
  return result;
}

unint64_t sub_1006C6E60()
{
  unint64_t result;

  result = qword_1013ECA78;
  if (!qword_1013ECA78)
  {
    result = swift_getWitnessTable(&unk_100F047B8, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECA78);
  }
  return result;
}

unint64_t sub_1006C6EA8()
{
  unint64_t result;

  result = qword_1013ECA80;
  if (!qword_1013ECA80)
  {
    result = swift_getWitnessTable(&unk_100F04790, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECA80);
  }
  return result;
}

unint64_t sub_1006C6EF0()
{
  unint64_t result;

  result = qword_1013ECA88;
  if (!qword_1013ECA88)
  {
    result = swift_getWitnessTable(&unk_100F04860, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA88);
  }
  return result;
}

unint64_t sub_1006C6F38()
{
  unint64_t result;

  result = qword_1013ECA90;
  if (!qword_1013ECA90)
  {
    result = swift_getWitnessTable(&unk_100F04970, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA90);
  }
  return result;
}

unint64_t sub_1006C6F80()
{
  unint64_t result;

  result = qword_1013ECA98;
  if (!qword_1013ECA98)
  {
    result = swift_getWitnessTable(&unk_100F04938, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECA98);
  }
  return result;
}

unint64_t sub_1006C6FC8()
{
  unint64_t result;

  result = qword_1013ECAA0;
  if (!qword_1013ECAA0)
  {
    result = swift_getWitnessTable(&unk_100F04898, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECAA0);
  }
  return result;
}

unint64_t sub_1006C7010()
{
  unint64_t result;

  result = qword_1013ECAA8;
  if (!qword_1013ECAA8)
  {
    result = swift_getWitnessTable(&unk_100F04910, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECAA8);
  }
  return result;
}

unint64_t sub_1006C7058()
{
  unint64_t result;

  result = qword_1013ECAB0;
  if (!qword_1013ECAB0)
  {
    result = swift_getWitnessTable(&unk_100F048E8, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECAB0);
  }
  return result;
}

uint64_t sub_1006C709C()
{
  return sub_1006047EC(&qword_1013ECAB8, &qword_1013ECAC0);
}

unint64_t sub_1006C70C4()
{
  unint64_t result;

  result = qword_1013ECAC8;
  if (!qword_1013ECAC8)
  {
    result = swift_getWitnessTable(&unk_100F04818, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECAC8);
  }
  return result;
}

unint64_t sub_1006C710C()
{
  unint64_t result;

  result = qword_1013ECAD0;
  if (!qword_1013ECAD0)
  {
    result = swift_getWitnessTable(&unk_100F04A00, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECAD0);
  }
  return result;
}

unint64_t sub_1006C7154()
{
  unint64_t result;

  result = qword_1013ECAD8;
  if (!qword_1013ECAD8)
  {
    result = swift_getWitnessTable(&unk_100F04A48, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECAD8);
  }
  return result;
}

unint64_t sub_1006C719C()
{
  unint64_t result;

  result = qword_1013ECAE0;
  if (!qword_1013ECAE0)
  {
    result = swift_getWitnessTable(&unk_100F04AF8, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECAE0);
  }
  return result;
}

unint64_t sub_1006C71E4()
{
  unint64_t result;

  result = qword_1013ECAE8;
  if (!qword_1013ECAE8)
  {
    result = swift_getWitnessTable(&unk_100F04AD0, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECAE8);
  }
  return result;
}

unint64_t sub_1006C722C()
{
  unint64_t result;

  result = qword_1013ECAF0;
  if (!qword_1013ECAF0)
  {
    result = swift_getWitnessTable(&unk_100F04AA8, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECAF0);
  }
  return result;
}

unint64_t sub_1006C7274()
{
  unint64_t result;

  result = qword_1013ECAF8;
  if (!qword_1013ECAF8)
  {
    result = swift_getWitnessTable(&unk_100F04B78, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECAF8);
  }
  return result;
}

unint64_t sub_1006C72BC()
{
  unint64_t result;

  result = qword_1013ECB00;
  if (!qword_1013ECB00)
  {
    result = swift_getWitnessTable(&unk_100F04C88, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECB00);
  }
  return result;
}

unint64_t sub_1006C7304()
{
  unint64_t result;

  result = qword_1013ECB08;
  if (!qword_1013ECB08)
  {
    result = swift_getWitnessTable(&unk_100F04C50, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECB08);
  }
  return result;
}

unint64_t sub_1006C734C()
{
  unint64_t result;

  result = qword_1013ECB10;
  if (!qword_1013ECB10)
  {
    result = swift_getWitnessTable(&unk_100F04BB0, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECB10);
  }
  return result;
}

unint64_t sub_1006C7394()
{
  unint64_t result;

  result = qword_1013ECB18;
  if (!qword_1013ECB18)
  {
    result = swift_getWitnessTable(&unk_100F04C28, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECB18);
  }
  return result;
}

unint64_t sub_1006C73DC()
{
  unint64_t result;

  result = qword_1013ECB20;
  if (!qword_1013ECB20)
  {
    result = swift_getWitnessTable(&unk_100F04C00, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECB20);
  }
  return result;
}

uint64_t sub_1006C7420()
{
  return sub_1006047EC(&qword_1013ECB28, &qword_1013ECB30);
}

unint64_t sub_1006C7448()
{
  unint64_t result;

  result = qword_1013ECB38;
  if (!qword_1013ECB38)
  {
    result = swift_getWitnessTable(&unk_100F04B30, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECB38);
  }
  return result;
}

uint64_t sub_1006C748C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x617053726F6C6F63 && a2 == 0xEA00000000006563)
  {
    v5 = 0xEA00000000006563;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617053726F6C6F63, 0xEA00000000006563, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 6579570 && a2 == 0xE300000000000000)
  {
    v7 = 0xE300000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(6579570, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E65657267 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E65657267, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 1702194274 && a2 == 0xE400000000000000)
  {
    v9 = 0xE400000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702194274, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1006C7688@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;

  v5 = sub_1004B804C(&qword_1013ECB98);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1006C6C44();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLColorModelRGBData.CodingKeys, &type metadata for CRLColorModelRGBData.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v12 = sub_1004B804C(&qword_1013EC938);
  v27 = 0;
  v13 = sub_1006C8630(&qword_1013ECBA0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v27, v5, v12, v13);
  v14 = v28;
  v15 = v29;
  LOBYTE(v28) = 1;
  KeyedDecodingContainer.decode(_:forKey:)(&v28, v5);
  v17 = v16;
  LOBYTE(v28) = 2;
  KeyedDecodingContainer.decode(_:forKey:)(&v28, v5);
  v19 = v18;
  LOBYTE(v28) = 3;
  KeyedDecodingContainer.decode(_:forKey:)(&v28, v5);
  v21 = v20;
  v22 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v27 = 4;
  v23 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v22, &v27, v5, v22, v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = v28;
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 12) = v17;
  *(_DWORD *)(a2 + 16) = v19;
  *(_DWORD *)(a2 + 20) = v21;
  *(_QWORD *)(a2 + 24) = v24;
  return result;
}

uint64_t sub_1006C78D0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 1851881827 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1851881827, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x61746E6567616DLL && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61746E6567616DLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x776F6C6C6579 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x776F6C6C6579, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    v9 = 0xE300000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7955819, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1006C7AC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[2];
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v5 = sub_1004B804C(&qword_1013ECB58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1006C734C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLColorModelCMYKData.CodingKeys, &type metadata for CRLColorModelCMYKData.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v29 = 0;
  KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
  v13 = v12;
  v28 = 1;
  KeyedDecodingContainer.decode(_:forKey:)(&v28, v5);
  v15 = v14;
  v27 = 2;
  KeyedDecodingContainer.decode(_:forKey:)(&v27, v5);
  v17 = v16;
  v26 = 3;
  KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
  v19 = v18;
  v20 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v25 = 4;
  v21 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v25, v5, v20, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = v24[1];
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *(_DWORD *)a2 = v13;
  *(_DWORD *)(a2 + 4) = v15;
  *(_DWORD *)(a2 + 8) = v17;
  *(_DWORD *)(a2 + 12) = v19;
  *(_QWORD *)(a2 + 16) = v22;
  return result;
}

uint64_t sub_1006C7CC8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6574696877 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574696877, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1006C7DAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v3 = sub_1004B804C(&qword_1013ECB78);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_1004BB5A4(a1, v7);
  v10 = sub_1006C6FC8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLColorModelMonochromeData.CodingKeys, &type metadata for CRLColorModelMonochromeData.CodingKeys, v10, v7, v8);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v16 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
    v11 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v15 = 1;
    v12 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, &v15, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = (_QWORD *)v14[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return v9;
}

uint64_t sub_1006C7F28(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 5)
    return 5;
  else
    return (0x302010004uLL >> (8 * (a1 + 1)));
}

uint64_t sub_1006C7F50(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6168706C61, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x61746144626772 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61746144626772, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x617461446B796D63 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617461446B796D63, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6F7268636F6E6F6DLL && a2 == 0xEE0061746144656DLL)
  {
    v9 = 0xEE0061746144656DLL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F7268636F6E6F6DLL, 0xEE0061746144656DLL, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1006C8184(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v5 = sub_1004B804C(&qword_1013ECB40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1006C67A0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLColorData.CodingKeys, &type metadata for CRLColorData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
  }
  else
  {
    LOBYTE(v36) = 0;
    v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v36, v5);
    v40 = 1;
    v13 = sub_1006C6ADC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorModelRGBData, &v40, v5, &type metadata for CRLColorModelRGBData, v13);
    v34 = v37;
    v35 = v36;
    v14 = v39;
    v33 = v38;
    v40 = 2;
    v15 = sub_1006C71E4();
    swift_bridgeObjectRetain(v14);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorModelCMYKData, &v40, v5, &type metadata for CRLColorModelCMYKData, v15);
    v31 = v36;
    v32 = v12;
    v16 = v38;
    v30 = v37;
    v40 = 3;
    v17 = sub_1006C6E60();
    swift_bridgeObjectRetain(v16);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorModelMonochromeData, &v40, v5, &type metadata for CRLColorModelMonochromeData, v17);
    v18 = v37;
    v27 = v36;
    v28 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v40 = 4;
    v19 = sub_1004F3130();
    v29 = v18;
    swift_bridgeObjectRetain(v18);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v28, &v40, v5, v28, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v20 = v36;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease(v20);
    v21 = v29;
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    v22 = BYTE4(v32);
    *(_DWORD *)a2 = v32;
    *(_BYTE *)(a2 + 4) = v22 & 1;
    v23 = v34;
    *(_QWORD *)(a2 + 8) = v35;
    *(_QWORD *)(a2 + 16) = v23;
    *(_QWORD *)(a2 + 24) = v33;
    *(_QWORD *)(a2 + 32) = v14;
    v24 = v30;
    *(_QWORD *)(a2 + 40) = v31;
    *(_QWORD *)(a2 + 48) = v24;
    v25 = v27;
    *(_QWORD *)(a2 + 56) = v16;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v21;
    *(_QWORD *)(a2 + 80) = v20;
  }
}

unint64_t sub_1006C8520()
{
  unint64_t result;

  result = qword_1013ECB68;
  if (!qword_1013ECB68)
  {
    result = swift_getWitnessTable(&unk_100F04CD8, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECB68);
  }
  return result;
}

unint64_t sub_1006C8564()
{
  unint64_t result;

  result = qword_1013ECB70;
  if (!qword_1013ECB70)
  {
    result = swift_getWitnessTable(&unk_100F04CB0, &type metadata for CRLColorModelCMYKData);
    atomic_store(result, (unint64_t *)&qword_1013ECB70);
  }
  return result;
}

unint64_t sub_1006C85A8()
{
  unint64_t result;

  result = qword_1013ECB88;
  if (!qword_1013ECB88)
  {
    result = swift_getWitnessTable(&unk_100F049C0, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECB88);
  }
  return result;
}

unint64_t sub_1006C85EC()
{
  unint64_t result;

  result = qword_1013ECB90;
  if (!qword_1013ECB90)
  {
    result = swift_getWitnessTable(&unk_100F04998, &type metadata for CRLColorModelMonochromeData);
    atomic_store(result, (unint64_t *)&qword_1013ECB90);
  }
  return result;
}

uint64_t sub_1006C8630(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_1013EC938);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006C8694()
{
  unint64_t result;

  result = qword_1013ECBB8;
  if (!qword_1013ECBB8)
  {
    result = swift_getWitnessTable(&unk_100F046A8, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013ECBB8);
  }
  return result;
}

unint64_t sub_1006C86D8()
{
  unint64_t result;

  result = qword_1013ECBC0;
  if (!qword_1013ECBC0)
  {
    result = swift_getWitnessTable(&unk_100F04680, &type metadata for CRLColorModelRGBData);
    atomic_store(result, (unint64_t *)&qword_1013ECBC0);
  }
  return result;
}

unint64_t sub_1006C871C()
{
  unint64_t result;

  result = qword_1013ECBC8;
  if (!qword_1013ECBC8)
  {
    result = swift_getWitnessTable(&unk_100F04330, &type metadata for CRLColorModelRGBData.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_1013ECBC8);
  }
  return result;
}

unint64_t sub_1006C8760()
{
  unint64_t result;

  result = qword_1013ECBD0;
  if (!qword_1013ECBD0)
  {
    result = swift_getWitnessTable(&unk_100F041F8, &type metadata for CRLColorData);
    atomic_store(result, (unint64_t *)&qword_1013ECBD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorModelCMYKData.CodingKeys()
{
  return &type metadata for CRLColorModelCMYKData.CodingKeys;
}

uint64_t _s8Freeform20CRLColorModelRGBDataV10ColorSpaceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1006C8804 + 4 * byte_100F03EA4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006C8838 + 4 * byte_100F03E9F[v4]))();
}

uint64_t sub_1006C8838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006C8840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006C8848);
  return result;
}

uint64_t sub_1006C8854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006C885CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006C8860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006C8868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLColorModelMonochromeData.CodingKeys()
{
  return &type metadata for CRLColorModelMonochromeData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLColorModelRGBData.CodingKeys()
{
  return &type metadata for CRLColorModelRGBData.CodingKeys;
}

uint64_t _s8Freeform21CRLColorModelCMYKDataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1006C88E0 + 4 * byte_100F03EAE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1006C8914 + 4 * byte_100F03EA9[v4]))();
}

uint64_t sub_1006C8914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006C891C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006C8924);
  return result;
}

uint64_t sub_1006C8930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006C8938);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1006C893C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006C8944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLColorData.CodingKeys()
{
  return &type metadata for CRLColorData.CodingKeys;
}

unint64_t sub_1006C8964()
{
  unint64_t result;

  result = qword_1013ECBD8;
  if (!qword_1013ECBD8)
  {
    result = swift_getWitnessTable(&unk_100F04E24, &type metadata for CRLColorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECBD8);
  }
  return result;
}

unint64_t sub_1006C89AC()
{
  unint64_t result;

  result = qword_1013ECBE0;
  if (!qword_1013ECBE0)
  {
    result = swift_getWitnessTable(&unk_100F04EC4, &type metadata for CRLColorModelRGBData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECBE0);
  }
  return result;
}

unint64_t sub_1006C89F4()
{
  unint64_t result;

  result = qword_1013ECBE8;
  if (!qword_1013ECBE8)
  {
    result = swift_getWitnessTable(&unk_100F04F64, &type metadata for CRLColorModelMonochromeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECBE8);
  }
  return result;
}

unint64_t sub_1006C8A3C()
{
  unint64_t result;

  result = qword_1013ECBF0;
  if (!qword_1013ECBF0)
  {
    result = swift_getWitnessTable(&unk_100F05004, &type metadata for CRLColorModelCMYKData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ECBF0);
  }
  return result;
}

uint64_t *sub_1006C8A88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 48);
      v13 = (uint64_t *)((char *)a1 + v12);
      v14 = (uint64_t *)((char *)a2 + v12);
      v15 = v14[1];
      *v13 = *v14;
      v13[1] = v15;
      v16 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v8 + 56);
      v17 = swift_bridgeObjectRetain(v15);
      v16(a1, 0, 5, v7, v17);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    v22 = *((_QWORD *)v20 + 1);
    v23 = v20[16];
    sub_1006C8BB4(*(_QWORD *)v20, v22);
    *(_QWORD *)v19 = v21;
    *((_QWORD *)v19 + 1) = v22;
    v19[16] = v23;
  }
  return a1;
}

uint64_t sub_1006C8BB4(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

double sub_1006C8BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1004B804C(&qword_1013E1790);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 5, v4))
  {
    v5 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v4 + 48) + 8));
  }
  return sub_1006C8C4C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

double sub_1006C8C4C(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

char *sub_1006C8C54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 48);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
    v15 = swift_bridgeObjectRetain(v13);
    v14(a1, 0, 5, v6, v15);
  }
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v20 = *((_QWORD *)v18 + 1);
  v21 = v18[16];
  sub_1006C8BB4(*(_QWORD *)v18, v20);
  *(_QWORD *)v17 = v19;
  *((_QWORD *)v17 + 1) = v20;
  v17[16] = v21;
  return a1;
}

char *sub_1006C8D54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 5, v6);
  v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      v28 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(a1, a2, v28);
      v29 = *(int *)(v6 + 48);
      v30 = &a1[v29];
      v31 = &a2[v29];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v32 = *((_QWORD *)v31 + 1);
      v33 = *((_QWORD *)v30 + 1);
      *((_QWORD *)v30 + 1) = v32;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease(v33);
      goto LABEL_7;
    }
    sub_1004CB800((uint64_t)a1, &qword_1013E1790);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v18 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 48);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 1) = v15;
  v16 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
  v17 = swift_bridgeObjectRetain(v15);
  v16(a1, 0, 5, v6, v17);
LABEL_7:
  v19 = *(int *)(a3 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(_QWORD *)v21;
  v23 = *((_QWORD *)v21 + 1);
  v24 = v21[16];
  sub_1006C8BB4(*(_QWORD *)v21, v23);
  v25 = *(_QWORD *)v20;
  v26 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v22;
  *((_QWORD *)v20 + 1) = v23;
  v20[16] = v24;
  sub_1006C8C4C(v25, v26);
  return a1;
}

char *sub_1006C8EEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v11[16] = v12[16];
  return a1;
}

char *sub_1006C8FD0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 5, v6);
  v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      v20 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(a1, a2, v20);
      v21 = *(int *)(v6 + 48);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v25 = *(_QWORD *)v23;
      v24 = *((_QWORD *)v23 + 1);
      v26 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v22 = v25;
      *((_QWORD *)v22 + 1) = v24;
      swift_bridgeObjectRelease(v26);
      goto LABEL_7;
    }
    sub_1004CB800((uint64_t)a1, &qword_1013E1790);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v12 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
LABEL_7:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = v15[16];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v16;
  sub_1006C8C4C(v17, v18);
  return a1;
}

uint64_t sub_1006C9134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006C9140);
}

uint64_t sub_1006C9140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1006C91BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006C91C8);
}

uint64_t sub_1006C91C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for CRLEmptyFolderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1013ECCD8;
  if (!qword_1013ECCD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLEmptyFolderView);
  return result;
}

uint64_t sub_1006C9280(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F050A8;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1006C92F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10111F85C, 1);
}

__n128 sub_1006C9300@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = sub_1004B804C(&qword_1013E7070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(sub_1004B804C(&qword_1013E7078) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

double sub_1006C94CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  double result;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter();
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_1006CCFD0(a16, v22, v21 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v20).n128_u64[0];
  return result;
}

double sub_1006C96AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1006C9704(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1013ECE70, (uint64_t *)&unk_1013ECE78).n128_u64[0];
  return result;
}

__n128 sub_1006C9704@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_1004CB7BC(v18, v19, a16);
  v41 = v19 + *(int *)(sub_1004B804C(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

_QWORD *sub_1006C98D0@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  __int128 *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  unint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  _OWORD v45[7];
  __int128 v46;
  char v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _BYTE v51[32];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v21 = v40;
    v20 = a11;
    a1 = v41;
    a3 = v42;
    v19 = a13;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[1];
  v48 = *v16;
  v49 = v33;
  sub_1006CD638((uint64_t)&v48, (uint64_t)v51);
  v35 = v16[1];
  v46 = v16[2];
  v34 = v46;
  *(_OWORD *)a9 = *v16;
  *(_OWORD *)(a9 + 16) = v35;
  *(_OWORD *)(a9 + 32) = v34;
  *(_OWORD *)(a9 + 152) = v45[6];
  v36 = v45[4];
  *(_OWORD *)(a9 + 136) = v45[5];
  *(_OWORD *)(a9 + 120) = v36;
  v37 = v45[2];
  *(_OWORD *)(a9 + 104) = v45[3];
  v38 = v45[1];
  *(_OWORD *)(a9 + 56) = v45[0];
  v50 = *((_QWORD *)&v49 + 1);
  v47 = *((_BYTE *)v16 + 48);
  *(_BYTE *)(a9 + 48) = v47;
  *(_OWORD *)(a9 + 72) = v38;
  *(_OWORD *)(a9 + 88) = v37;
  sub_1006CD674((uint64_t)v51);
  sub_1006CD6A4(&v50);
  return sub_1006CD6CC(&v46);
}

void sub_1006C9AB4()
{
  qword_1013ECBF8 = 0x4050000000000000;
}

uint64_t sub_1006C9AC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1004B804C(qword_1013ECDD8);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = static Font.Weight.bold.getter(v3);
  v5 = enum case for Font.Design.rounded(_:);
  v6 = type metadata accessor for Font.Design(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  v8 = static Font.system(size:weight:design:)(*(_QWORD *)&v4, 0, v2, 34.0);
  result = sub_1004CB800((uint64_t)v2, qword_1013ECDD8);
  qword_1013ECC00 = v8;
  return result;
}

uint64_t sub_1006C9BAC(uint64_t a1)
{
  return sub_1006C9C78(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1013ECC08);
}

void sub_1006C9BC0()
{
  qword_1013ECC10 = 0x4000000000000000;
}

uint64_t sub_1006C9BD0()
{
  uint64_t result;

  result = static Font.title2.getter();
  qword_1013ECC18 = result;
  return result;
}

void sub_1006C9BEC()
{
  qword_1013ECC20 = static Font.Weight.bold.getter();
}

uint64_t sub_1006C9C08(uint64_t a1)
{
  return sub_1006C9C78(a1, (SEL *)&selRef_labelColor, &qword_1013ECC28);
}

void sub_1006C9C1C()
{
  qword_1013ECC30 = 0x4000000000000000;
}

uint64_t sub_1006C9C2C()
{
  uint64_t result;

  result = static Font.footnote.getter();
  qword_1013ECC38 = result;
  return result;
}

void sub_1006C9C48()
{
  qword_1013ECC40 = static Font.Weight.regular.getter();
}

uint64_t sub_1006C9C64(uint64_t a1)
{
  return sub_1006C9C78(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1013ECC48);
}

uint64_t sub_1006C9C78(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  result = Color.init(_:)(v4);
  *a3 = result;
  return result;
}

void sub_1006C9CBC()
{
  qword_1013ECC50 = 0x4031000000000000;
}

uint64_t sub_1006C9CCC()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E7038);
  sub_100501DE0(v0, qword_1013ECC58);
  sub_1004F2A1C(v0, (uint64_t)qword_1013ECC58);
  return Button.init(action:label:)(sub_1004D8114, 0, sub_1006C9D44, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_1006C9D44(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v26[0] = v6;
  v26[1] = v8;
  v9 = sub_1004D292C();
  v10 = Text.init<A>(_:)(v26, &type metadata for String, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "linkColor");
  v18 = Color.init(_:)(v17);
  v19 = Text.foregroundColor(_:)(v18, v10, v12, v16, v14);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v18);
  sub_1005EFC24(v10, v12, v16);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + 16) = v23 & 1;
  *(_QWORD *)(a1 + 24) = v25;
}

void sub_1006C9EEC()
{
  qword_1013ECC70 = 0x4072000000000000;
}

void sub_1006C9EFC()
{
  qword_1013ECC78 = 0;
}

uint64_t sub_1006C9F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  uint64_t v21;
  char *v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)(v0 + *(int *)(type metadata accessor for CRLEmptyFolderView(0) + 20));
  v5 = *v4;
  v6 = v4[1];
  v7 = *((unsigned __int8 *)v4 + 16);
  v8 = type metadata accessor for CRLEmptyFolderViewDataSource(0);
  v9 = sub_1006CD098();
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_100F05248);
  v12 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(&v37, v10, KeyPath, v12);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  v14 = v37;
  v13 = v38;
  swift_bridgeObjectRelease(v38);
  v15 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v15 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v15)
  {
    sub_1004B8460(v0, (uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v21 = sub_1004B804C(&qword_1013E1790);
    v22 = (char *)&loc_1006CA124
        + *((int *)qword_1006CA618
          + (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v3, 5, v21));
    __asm { BR              X10 }
  }
  v16 = StateObject.wrappedValue.getter(*v4, v4[1], *((unsigned __int8 *)v4 + 16), v8, v9);
  v17 = swift_getKeyPath(&unk_100F05290);
  v18 = swift_getKeyPath(&unk_100F052B8);
  static Published.subscript.getter(&v37, v16, v17, v18);
  swift_release(v16);
  swift_release(v17);
  swift_release(v18);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v23, 0);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v29 = swift_allocObject(v28, 72, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EF5E40;
  v30 = StateObject.wrappedValue.getter(*v4, v4[1], *((unsigned __int8 *)v4 + 16), v8, v9);
  v31 = swift_getKeyPath(&unk_100F05248);
  v32 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(&v37, v30, v31, v32);
  swift_release(v30);
  swift_release(v31);
  swift_release(v32);
  v33 = v37;
  v34 = v38;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v29 + 32) = v33;
  *(_QWORD *)(v29 + 40) = v34;
  v35 = String.init(format:_:)(v25, v27, v29);
  swift_bridgeObjectRelease(v27);
  return v35;
}

uint64_t sub_1006CA630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)(v0 + *(int *)(type metadata accessor for CRLEmptyFolderView(0) + 20));
  v5 = *v4;
  v6 = v4[1];
  v7 = *((unsigned __int8 *)v4 + 16);
  v8 = type metadata accessor for CRLEmptyFolderViewDataSource(0);
  v9 = sub_1006CD098();
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_100F05248);
  v12 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(&v38, v10, KeyPath, v12);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  v14 = v38;
  v13 = v39;
  swift_bridgeObjectRelease(v39);
  v15 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v15 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v15)
  {
    sub_1004B8460(v0, (uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v26 = sub_1004B804C(&qword_1013E1790);
    v27 = (char *)&loc_1006CA89C
        + *((int *)qword_1006CACA0
          + (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v3, 5, v26));
    __asm { BR              X10 }
  }
  v16 = StateObject.wrappedValue.getter(*v4, v4[1], *((unsigned __int8 *)v4 + 16), v8, v9);
  v17 = swift_getKeyPath(&unk_100F05290);
  v18 = swift_getKeyPath(&unk_100F052B8);
  static Published.subscript.getter(&v38, v16, v17, v18);
  swift_release(v16);
  swift_release(v17);
  swift_release(v18);
  if (v38 == 1)
  {
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0xE000000000000000;
  }
  v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v29 = swift_allocObject(v28, 72, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EF5E40;
  v30 = StateObject.wrappedValue.getter(*v4, v4[1], *((unsigned __int8 *)v4 + 16), v8, v9);
  v31 = swift_getKeyPath(&unk_100F05248);
  v32 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(&v38, v30, v31, v32);
  swift_release(v30);
  swift_release(v31);
  swift_release(v32);
  v33 = v38;
  v34 = v39;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v29 + 32) = v33;
  *(_QWORD *)(v29 + 40) = v34;
  v35 = String.init(format:_:)(v23, v25, v29);
  swift_bridgeObjectRelease(v25);
  return v35;
}

void sub_1006CA9CC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  JUMPOUT(0x1006CA9A8);
}

uint64_t sub_1006CACB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for CRLEmptyFolderView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v2, (uint64_t)v9, v10);
  v11 = sub_1004B804C(&qword_1013E1790);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 5, v11) != 4)
  {
    v21 = sub_1004B804C(&qword_1013E7038);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
    return sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  v12 = v2 + *(int *)(v4 + 20);
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(unsigned __int8 *)(v12 + 16);
  v16 = type metadata accessor for CRLEmptyFolderViewDataSource(0);
  v17 = sub_1006CD098();
  v18 = StateObject.wrappedValue.getter(v13, v14, v15, v16, v17);
  KeyPath = swift_getKeyPath(&unk_100F05200);
  v20 = swift_getKeyPath(&unk_100F05228);
  static Published.subscript.getter(&v33, v18, KeyPath, v20);
  swift_release(v18);
  swift_release(KeyPath);
  swift_release(v20);
  LODWORD(v18) = v33;
  sub_1004B8460(v2, (uint64_t)v6, type metadata accessor for CRLEmptyFolderView);
  if ((_DWORD)v18 == 1)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLEmptyFolderView);
LABEL_9:
    v29 = sub_1004B804C(&qword_1013E7038);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
  v23 = StateObject.wrappedValue.getter(*(_QWORD *)&v6[*(int *)(v4 + 20)], *(_QWORD *)&v6[*(int *)(v4 + 20) + 8], v6[*(int *)(v4 + 20) + 16], v16, v17);
  v24 = swift_getKeyPath(&unk_100F05248);
  v25 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(&v33, v23, v24, v25);
  swift_release(v23);
  swift_release(v24);
  swift_release(v25);
  v27 = v33;
  v26 = v34;
  swift_bridgeObjectRelease(v34);
  if ((v26 & 0x2000000000000000) != 0)
    v28 = HIBYTE(v26) & 0xF;
  else
    v28 = v27 & 0xFFFFFFFFFFFFLL;
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLEmptyFolderView);
  if (v28)
    goto LABEL_9;
  if (qword_1013DCF28 != -1)
    swift_once(&qword_1013DCF28, sub_1006C9CCC);
  v30 = sub_1004B804C(&qword_1013E7038);
  v31 = sub_1004F2A1C(v30, (uint64_t)qword_1013ECC58);
  v32 = *(_QWORD *)(v30 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(a1, v31, v30);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(a1, 0, 1, v30);
}

uint64_t sub_1006CAFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v1 = v0;
  v2 = type metadata accessor for CRLEmptyFolderView(0);
  __chkstk_darwin(v2);
  v39 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = v1 + *(int *)(v2 + 20);
  v14 = *(_QWORD *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(unsigned __int8 *)(v13 + 16);
  v17 = type metadata accessor for CRLEmptyFolderViewDataSource(0);
  v18 = sub_1006CD098();
  v19 = StateObject.wrappedValue.getter(v14, v15, v16, v17, v18);
  KeyPath = swift_getKeyPath(&unk_100F05248);
  v21 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(&v40, v19, KeyPath, v21);
  swift_release(v19);
  swift_release(KeyPath);
  swift_release(v21);
  v23 = v40;
  v22 = v41;
  swift_bridgeObjectRelease(v41);
  v24 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v24 = v23 & 0xFFFFFFFFFFFFLL;
  if (!v24)
  {
    v38 = v6;
    v25 = 0xD00000000000001BLL;
    sub_1004B8460(v1, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v27 = sub_1004B804C(&qword_1013E1790);
    v36 = *(_QWORD *)(v27 - 8);
    v37 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 56))(v9, 4, 5);
    sub_100BD0ED4((uint64_t)v12, (uint64_t)v9);
    v29 = v28;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v30 = v39;
    sub_1004B8460(v1, v39, type metadata accessor for CRLEmptyFolderView);
    if ((v29 & 1) != 0)
    {
      v31 = StateObject.wrappedValue.getter(*(_QWORD *)(v30 + *(int *)(v2 + 20)), *(_QWORD *)(v30 + *(int *)(v2 + 20) + 8), *(unsigned __int8 *)(v30 + *(int *)(v2 + 20) + 16), v17, v18);
      v32 = swift_getKeyPath(&unk_100F05200);
      v33 = swift_getKeyPath(&unk_100F05228);
      static Published.subscript.getter(&v40, v31, v32, v33);
      swift_release(v31);
      swift_release(v32);
      swift_release(v33);
      LODWORD(v31) = v40;
      sub_1004B84A4(v30, type metadata accessor for CRLEmptyFolderView);
      if ((_DWORD)v31 != 1)
        return v25;
    }
    else
    {
      sub_1004B84A4(v30, type metadata accessor for CRLEmptyFolderView);
    }
    v34 = (uint64_t)v38;
    sub_1004B8460(v1, (uint64_t)v38, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v35 = (char *)&loc_1006CB178
        + 4 * byte_100F05070[(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 5, v37)];
    __asm { BR              X10 }
  }
  return 0x697966696E67616DLL;
}

void sub_1006CB33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(int *)(v1 + 48) + 8));
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0, v2);
  JUMPOUT(0x1006CB178);
}

void sub_1006CB37C()
{
  JUMPOUT(0x1006CB178);
}

uint64_t sub_1006CB3DC()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1004C4938((uint64_t)v8, (uint64_t)v9, &qword_1013E0230);
  if (!v10)
  {
    sub_1004CB800((uint64_t)v9, &qword_1013E0230);
    goto LABEL_10;
  }
  if ((swift_dynamicCast(&v6, v9, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_10:
    v4 = 0;
    return v4 & 1;
  }
  v3 = v7;
  if (v6 == 0x737961776C41 && v7 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    v4 = 1;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, 0x737961776C41, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v3);
  }
  return v4 & 1;
}

uint64_t sub_1006CB550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v25;
  char v26;
  _OWORD v27[7];

  v4 = sub_1004B804C(&qword_1013ECD10);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013ECD18);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v11 = sub_1004B804C(&qword_1013ECD20);
  v12 = sub_1006CB754(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v13 = GeometryProxy.size.getter(v12);
  GeometryProxy.size.getter(v14);
  v16 = v15;
  v18 = static Alignment.center.getter(v17);
  v26 = 1;
  v25 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v27, *(_QWORD *)&v13, 0, 0, 1, 0, 1, v16, 0, 0, v25, 0, v26, v18, v19);
  sub_1004CB7BC((uint64_t)v6, (uint64_t)v10, &qword_1013ECD10);
  v20 = &v10[*(int *)(v7 + 36)];
  v21 = v27[5];
  *((_OWORD *)v20 + 4) = v27[4];
  *((_OWORD *)v20 + 5) = v21;
  *((_OWORD *)v20 + 6) = v27[6];
  v22 = v27[1];
  *(_OWORD *)v20 = v27[0];
  *((_OWORD *)v20 + 1) = v22;
  v23 = v27[3];
  *((_OWORD *)v20 + 2) = v27[2];
  *((_OWORD *)v20 + 3) = v23;
  sub_1004CB800((uint64_t)v6, &qword_1013ECD10);
  return sub_1004C4938((uint64_t)v10, a2, &qword_1013ECD18);
}

uint64_t sub_1006CB754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  int v35;
  int v36;
  _OWORD v37[7];

  v4 = sub_1004B804C(&qword_1013ECD28);
  __chkstk_darwin(v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013ECD30);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013ECD38);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v11);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v14 = sub_1004B804C(&qword_1013ECD40);
  v15 = sub_1006CBA7C(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  v16 = GeometryProxy.size.getter(v15);
  v17 = sub_1006CB3DC();
  v18 = 0.0;
  if ((v17 & 1) != 0)
  {
    if (qword_1013DCF38 != -1)
      v17 = swift_once(&qword_1013DCF38, sub_1006C9EFC);
    v18 = *(double *)&qword_1013ECC78 + *(double *)&qword_1013ECC78;
  }
  v19 = v16 - v18;
  if (qword_1013DCF30 != -1)
    v17 = swift_once(&qword_1013DCF30, sub_1006C9EEC);
  v20 = qword_1013ECC70;
  if (v19 <= *(double *)&qword_1013ECC70)
    *(double *)&v20 = v19;
  v21 = *(double *)&v20;
  v22 = static Alignment.center.getter(v17);
  sub_1006C9704(0.0, 1, 0.0, 1, v21, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v22, v23, &qword_1013ECD28, &qword_1013ECD30);
  v24 = sub_1004CB800((uint64_t)v6, &qword_1013ECD28);
  GeometryProxy.size.getter(v24);
  v26 = v25;
  v28 = static Alignment.center.getter(v27);
  LOBYTE(v36) = 1;
  LOBYTE(v35) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v37, 0, 1, 0, 1, 0, 1, v26, 0, 0, v35, 0, v36, v28, v29);
  sub_1004CB7BC((uint64_t)v9, (uint64_t)v13, &qword_1013ECD30);
  v30 = &v13[*(int *)(v10 + 36)];
  v31 = v37[5];
  *((_OWORD *)v30 + 4) = v37[4];
  *((_OWORD *)v30 + 5) = v31;
  *((_OWORD *)v30 + 6) = v37[6];
  v32 = v37[1];
  *(_OWORD *)v30 = v37[0];
  *((_OWORD *)v30 + 1) = v32;
  v33 = v37[3];
  *((_OWORD *)v30 + 2) = v37[2];
  *((_OWORD *)v30 + 3) = v33;
  sub_1004CB800((uint64_t)v9, &qword_1013ECD30);
  return sub_1004C4938((uint64_t)v13, a2, &qword_1013ECD38);
}

uint64_t sub_1006CBA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  __n128 v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  __n128 v125;
  char v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(_QWORD, _QWORD, _QWORD);
  void (*v155)(_QWORD, _QWORD, _QWORD);
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  unint64_t v177;
  char v178;
  void (*v179)(_QWORD, _QWORD, _QWORD);
  void (*v180)(_QWORD, _QWORD, _QWORD);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  double v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  char v192;
  unint64_t v193;
  char v194;
  void (*v195)(_QWORD, _QWORD, _QWORD);
  void (*v196)(_QWORD, _QWORD, _QWORD);
  char v197;
  char v198;
  char v199;

  v162 = a2;
  v3 = sub_1004B804C(&qword_1013ECD48);
  __chkstk_darwin(v3);
  v163 = (uint64_t)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v161 = (uint64_t)&v150 - v6;
  v165 = sub_1004B804C(&qword_1013ECD50);
  __chkstk_darwin(v165);
  v167 = (uint64_t *)((char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v166 = type metadata accessor for Text.TruncationMode(0);
  v158 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v171 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1004B804C(&qword_1013ECD58);
  __chkstk_darwin(v164);
  v159 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v169 = (uint64_t)&v150 - v11;
  v157 = sub_1004B804C(&qword_1013ECD60);
  __chkstk_darwin(v157);
  v170 = (uint64_t)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v168 = (uint64_t)&v150 - v14;
  v15 = sub_1004B804C(&qword_1013ECD68);
  __chkstk_darwin(v15);
  v160 = (uint64_t)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v172 = (uint64_t)&v150 - v18;
  v173 = a1;
  v19 = sub_1006CAFE0();
  v21 = Image.init(systemName:)(v19, v20);
  v22 = v21;
  if (qword_1013DCEC8 != -1)
    v21 = swift_once(&qword_1013DCEC8, sub_1006C9AB4);
  v23 = qword_1013ECBF8;
  v24 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(&v191, v23, 0, v23, 0, v24, v25);
  v26 = v191;
  v27 = v192;
  v28 = v194;
  v155 = v195;
  v156 = v193;
  v154 = v196;
  if (qword_1013DCED0 != -1)
    swift_once(&qword_1013DCED0, sub_1006C9AC4);
  v29 = qword_1013ECC00;
  KeyPath = swift_getKeyPath(&unk_100F05110);
  v31 = qword_1013DCED8;
  swift_retain(v29);
  if (v31 != -1)
    swift_once(&qword_1013DCED8, sub_1006C9BAC);
  v32 = qword_1013ECC08;
  v33 = swift_getKeyPath(&unk_100F05140);
  v34 = swift_retain(v32);
  v35 = static Edge.Set.bottom.getter(v34);
  if (qword_1013DCEE0 != -1)
    swift_once(&qword_1013DCEE0, sub_1006C9BC0);
  v36 = EdgeInsets.init(_all:)(*(double *)&qword_1013ECC10);
  v199 = v27;
  v198 = v28;
  v197 = 0;
  v174 = v22;
  v175 = v26;
  v176 = v27;
  v177 = v156;
  v178 = v28;
  v179 = v155;
  v180 = v154;
  v181 = KeyPath;
  v182 = v29;
  v183 = v33;
  v184 = v32;
  v185 = v35;
  v186 = v36;
  v187 = v37;
  v188 = v38;
  v189 = v39;
  v190 = 0;
  v40 = sub_1004B804C(&qword_1013ECD70);
  v41 = sub_1006CCD30();
  View.accessibilityHidden(_:)(1, v40, v41);
  swift_release(v32);
  swift_release(v33);
  swift_release(v29);
  swift_release(KeyPath);
  swift_release(v22);
  v174 = sub_1006C9F08();
  v175 = v42;
  v156 = sub_1004D292C();
  v43 = Text.init<A>(_:)(&v174, &type metadata for String, v156);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  if (qword_1013DCEE8 != -1)
    swift_once(&qword_1013DCEE8, sub_1006C9BD0);
  v50 = v47 & 1;
  v51 = Text.font(_:)(qword_1013ECC18, v43, v45, v47 & 1, v49);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  sub_1005EFC24(v43, v45, v50);
  swift_bridgeObjectRelease(v49);
  if (qword_1013DCEF0 != -1)
    swift_once(&qword_1013DCEF0, sub_1006C9BEC);
  v58 = v55 & 1;
  v59 = Text.fontWeight(_:)(qword_1013ECC20, 0, v51, v53, v58, v57);
  v61 = v60;
  v63 = v62;
  v65 = v64;
  sub_1005EFC24(v51, v53, v58);
  swift_bridgeObjectRelease(v57);
  if (qword_1013DCEF8 != -1)
    swift_once(&qword_1013DCEF8, sub_1006C9C08);
  v66 = v63 & 1;
  v67 = Text.foregroundColor(_:)(qword_1013ECC28, v59, v61, v63 & 1, v65);
  v152 = v68;
  v153 = v69;
  v151 = v70;
  sub_1005EFC24(v59, v61, v66);
  v71 = swift_bridgeObjectRelease(v65);
  v150 = static Edge.Set.bottom.getter(v71);
  if (qword_1013DCF00 != -1)
    swift_once(&qword_1013DCF00, sub_1006C9C1C);
  v72 = EdgeInsets.init(_all:)(*(double *)&qword_1013ECC30);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v79 = swift_getKeyPath(&unk_100F05170);
  v80 = v158;
  v81 = v171;
  v82 = v166;
  v155 = *(void (**)(_QWORD, _QWORD, _QWORD))(v158 + 104);
  v155(v171, enum case for Text.TruncationMode.middle(_:), v166);
  v83 = swift_getKeyPath(&unk_100F051A0);
  v84 = v167;
  v85 = (char *)v167 + *(int *)(v165 + 28);
  v154 = *(void (**)(_QWORD, _QWORD, _QWORD))(v80 + 16);
  v154(v85, v81, v82);
  *v84 = v83;
  v86 = v169;
  sub_1004CB7BC((uint64_t)v84, v169 + *(int *)(v164 + 36), &qword_1013ECD50);
  v88 = v152;
  v87 = v153;
  *(_QWORD *)v86 = v67;
  *(_QWORD *)(v86 + 8) = v88;
  v89 = v151 & 1;
  *(_BYTE *)(v86 + 16) = v151 & 1;
  *(_QWORD *)(v86 + 24) = v87;
  *(_BYTE *)(v86 + 32) = v150;
  *(double *)(v86 + 40) = v72;
  *(_QWORD *)(v86 + 48) = v74;
  *(_QWORD *)(v86 + 56) = v76;
  *(_QWORD *)(v86 + 64) = v78;
  *(_BYTE *)(v86 + 72) = 0;
  *(_QWORD *)(v86 + 80) = v79;
  *(_BYTE *)(v86 + 88) = 1;
  sub_1006CCFD0(v67, v88, v89);
  swift_bridgeObjectRetain(v87);
  swift_retain(v79);
  sub_1004CB800((uint64_t)v84, &qword_1013ECD50);
  v158 = *(_QWORD *)(v80 + 8);
  ((void (*)(char *, uint64_t))v158)(v171, v82);
  sub_1005EFC24(v67, v88, v89);
  swift_release(v79);
  swift_bridgeObjectRelease(v87);
  v90 = swift_getKeyPath(&unk_100F051D0);
  v91 = v170;
  sub_1004CB7BC(v86, v170, &qword_1013ECD58);
  v92 = v91 + *(int *)(v157 + 36);
  *(_QWORD *)v92 = v90;
  *(_QWORD *)(v92 + 8) = 3;
  *(_BYTE *)(v92 + 16) = 0;
  sub_1004CB800(v86, &qword_1013ECD58);
  sub_1004C4938(v91, v168, &qword_1013ECD60);
  v174 = sub_1006CA630();
  v175 = v93;
  v94 = Text.init<A>(_:)(&v174, &type metadata for String, v156);
  v96 = v95;
  v98 = v97;
  v100 = v99;
  if (qword_1013DCF08 != -1)
    swift_once(&qword_1013DCF08, sub_1006C9C2C);
  v101 = v98 & 1;
  v102 = Text.font(_:)(qword_1013ECC38, v94, v96, v98 & 1, v100);
  v104 = v103;
  v106 = v105;
  v108 = v107;
  sub_1005EFC24(v94, v96, v101);
  swift_bridgeObjectRelease(v100);
  if (qword_1013DCF10 != -1)
    swift_once(&qword_1013DCF10, sub_1006C9C48);
  v109 = v106 & 1;
  v110 = Text.fontWeight(_:)(qword_1013ECC40, 0, v102, v104, v109, v108);
  v112 = v111;
  v114 = v113;
  v116 = v115;
  sub_1005EFC24(v102, v104, v109);
  swift_bridgeObjectRelease(v108);
  v117 = v165;
  if (qword_1013DCF18 != -1)
    swift_once(&qword_1013DCF18, sub_1006C9C64);
  v118 = v114 & 1;
  v119 = Text.foregroundColor(_:)(qword_1013ECC48, v110, v112, v118, v116);
  v121 = v120;
  v123 = v122;
  v157 = v124;
  sub_1005EFC24(v110, v112, v118);
  v125 = swift_bridgeObjectRelease(v116);
  LODWORD(v156) = static Edge.Set.bottom.getter(v125);
  if (qword_1013DCF20 != -1)
    swift_once(&qword_1013DCF20, sub_1006C9CBC);
  v126 = v123 & 1;
  v127 = EdgeInsets.init(_all:)(*(double *)&qword_1013ECC50);
  v129 = v128;
  v131 = v130;
  v133 = v132;
  v134 = swift_getKeyPath(&unk_100F05170);
  v135 = v171;
  v136 = v166;
  v155(v171, enum case for Text.TruncationMode.tail(_:), v166);
  v137 = swift_getKeyPath(&unk_100F051A0);
  v138 = v167;
  v154((char *)v167 + *(int *)(v117 + 28), v135, v136);
  *v138 = v137;
  v139 = (uint64_t)v159;
  sub_1004CB7BC((uint64_t)v138, (uint64_t)&v159[*(int *)(v164 + 36)], &qword_1013ECD50);
  *(_QWORD *)v139 = v119;
  *(_QWORD *)(v139 + 8) = v121;
  *(_BYTE *)(v139 + 16) = v126;
  v140 = v157;
  *(_QWORD *)(v139 + 24) = v157;
  *(_BYTE *)(v139 + 32) = v156;
  *(double *)(v139 + 40) = v127;
  *(_QWORD *)(v139 + 48) = v129;
  *(_QWORD *)(v139 + 56) = v131;
  *(_QWORD *)(v139 + 64) = v133;
  *(_BYTE *)(v139 + 72) = 0;
  *(_QWORD *)(v139 + 80) = v134;
  *(_BYTE *)(v139 + 88) = 1;
  sub_1006CCFD0(v119, v121, v126);
  swift_bridgeObjectRetain(v140);
  swift_retain(v134);
  sub_1004CB800((uint64_t)v138, &qword_1013ECD50);
  ((void (*)(char *, uint64_t))v158)(v135, v136);
  sub_1005EFC24(v119, v121, v126);
  swift_release(v134);
  swift_bridgeObjectRelease(v140);
  v141 = v169;
  sub_1004C4938(v139, v169, &qword_1013ECD58);
  v142 = v161;
  sub_1006CACB8(v161);
  v143 = v160;
  sub_1004CB7BC(v172, v160, &qword_1013ECD68);
  v144 = v168;
  v145 = v170;
  sub_1004CB7BC(v168, v170, &qword_1013ECD60);
  sub_1004CB7BC(v141, v139, &qword_1013ECD58);
  v146 = v163;
  sub_1004CB7BC(v142, v163, &qword_1013ECD48);
  v147 = v162;
  sub_1004CB7BC(v143, v162, &qword_1013ECD68);
  v148 = (int *)sub_1004B804C(&qword_1013ECDC0);
  sub_1004CB7BC(v145, v147 + v148[12], &qword_1013ECD60);
  sub_1004CB7BC(v139, v147 + v148[16], &qword_1013ECD58);
  sub_1004CB7BC(v146, v147 + v148[20], &qword_1013ECD48);
  sub_1004CB800(v142, &qword_1013ECD48);
  sub_1004CB800(v141, &qword_1013ECD58);
  sub_1004CB800(v144, &qword_1013ECD60);
  sub_1004CB800(v172, &qword_1013ECD68);
  sub_1004CB800(v146, &qword_1013ECD48);
  sub_1004CB800(v139, &qword_1013ECD58);
  sub_1004CB800(v145, &qword_1013ECD60);
  return sub_1004CB800(v143, &qword_1013ECD68);
}

uint64_t sub_1006CC688@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_1004B8460(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLEmptyFolderView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_101277A08, v7 + v5, v6 | 7);
  result = sub_1006CC808((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *a2 = sub_1006CC84C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_1006CC734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CRLEmptyFolderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = sub_1004B804C(&qword_1013E1790);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v7 + 48) + 8));
  }
  sub_1006C8C4C(*(_QWORD *)(v6 + *(int *)(v1 + 20)), *(_QWORD *)(v6 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1006CC808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLEmptyFolderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006CC84C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLEmptyFolderView(0) - 8) + 80);
  return sub_1006CB550(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1006CC898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v1 = v8;
  v9 = v2;
  v3 = static Axis.Set.vertical.getter();
  ScrollView.init(_:showsIndicators:content:)(v3, 1, sub_1006CD604, &v7, v8, v2);
  v4 = Axis.Set.init(rawValue:)(0);
  v5 = type metadata accessor for ScrollView(0, v1, v2);
  return ScrollView._alwaysBounceAxes.setter(v4, v5);
}

uint64_t sub_1006CC920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007722DC(v8, v9, (uint64_t)v7);
  sub_100767FB0((uint64_t)v7, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

void sub_1006CC9B4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F05200);
  v5 = swift_getKeyPath(&unk_100F05228);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_1006CCA30(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F05200);
  v5 = swift_getKeyPath(&unk_100F05228);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_1006CCAA0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F05248);
  v5 = swift_getKeyPath(&unk_100F05270);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_1006CCB1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F05248);
  v6 = swift_getKeyPath(&unk_100F05270);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

void sub_1006CCB9C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F05290);
  v5 = swift_getKeyPath(&unk_100F052B8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_1006CCC18(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F05290);
  v5 = swift_getKeyPath(&unk_100F052B8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1006CCC88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006CCCB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006CCCD8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1006CCD00(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_1006CCD30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ECD78;
  if (!qword_1013ECD78)
  {
    v1 = sub_1004CB6A4(&qword_1013ECD70);
    sub_1006CCD9C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ECD78);
  }
  return result;
}

unint64_t sub_1006CCD9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ECD80;
  if (!qword_1013ECD80)
  {
    v1 = sub_1004CB6A4(&qword_1013ECD88);
    sub_1006CCE20();
    sub_1004CBA30(&qword_1013E7048, &qword_1013E7050, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ECD80);
  }
  return result;
}

unint64_t sub_1006CCE20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ECD90;
  if (!qword_1013ECD90)
  {
    v1 = sub_1004CB6A4(&qword_1013ECD98);
    sub_1006CCEA4();
    sub_1004CBA30(&qword_1013ECDB0, &qword_1013ECDB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ECD90);
  }
  return result;
}

unint64_t sub_1006CCEA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ECDA0;
  if (!qword_1013ECDA0)
  {
    v1 = sub_1004CB6A4(&qword_1013ECDA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ECDA0);
  }
  return result;
}

uint64_t sub_1006CCF10()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_1006CCF30()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_1006CCF50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Text.TruncationMode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.truncationMode.setter(v4);
}

uint64_t sub_1006CCFD0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1006CCFE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1006CD010@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1006CD040(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1006CD06C(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_1006CD098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ECDC8;
  if (!qword_1013ECDC8)
  {
    v1 = type metadata accessor for CRLEmptyFolderViewDataSource(255);
    result = swift_getWitnessTable(&unk_100EFA1E0, v1);
    atomic_store(result, (unint64_t *)&qword_1013ECDC8);
  }
  return result;
}

unint64_t sub_1006CD0F8()
{
  unint64_t result;

  result = qword_1013ECDD0;
  if (!qword_1013ECDD0)
  {
    result = swift_getWitnessTable(&unk_100F21528, &type metadata for CRLAppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1013ECDD0);
  }
  return result;
}

uint64_t sub_1006CD13C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1006CD1A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_1006CD218(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1006CD228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1006CD258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1006CD288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1006CD2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1006CD2E8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1006CD398 + 4 * byte_100F05076[(v7 - 1)]))();
}

void sub_1006CD3E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for BouncelessScrollView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BouncelessScrollView);
}

uint64_t sub_1006CD5A4()
{
  return sub_1004CBA30(&qword_1013ECE60, &qword_1013ECE68, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t sub_1006CD5D0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10111F884, 1);
}

uint64_t sub_1006CD604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006CC920(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1006CD610(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ScrollView(255, *a1, a1[1]);
  return swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v1);
}

uint64_t sub_1006CD638(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1006CD674(uint64_t a1)
{
  sub_1006CCFD0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

_QWORD *sub_1006CD6A4(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

_QWORD *sub_1006CD6CC(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

void *CRLChangeNotifier.publisher<A>(for:phase:)(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  swift_unknownObjectRetain(a1);
  return v1;
}

void *CRLChangeNotifier.publisher<A>(for:phase:)()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id CRLChangeNotifier.publisherForAllChanges(phase:)()
{
  void *v0;

  sub_100511A70();
  return v0;
}

void *CRLChangeNotifier.publisherForChanges<A>(of:)(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  swift_unknownObjectRetain(a1);
  return v1;
}

BOOL static CRLChangeNotifier.Phase.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void CRLChangeNotifier.Phase.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int CRLChangeNotifier.Phase.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

uint64_t CRLChangeNotifier.ChangeRecordPublisher.source.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1006CD8A8(a2, a3 & 1);
  return a2;
}

uint64_t sub_1006CD8A8(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_unknownObjectRetain(result);
  return result;
}

uint64_t CRLChangeNotifier.ChangeRecordPublisher.phase.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t CRLChangeNotifier.ChangeRecordPublisher.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v13;
  id v14;
  _BYTE *v15;
  id v16;
  __n128 v17;
  _QWORD v19[5];

  v13 = (objc_class *)_s24ChangeRecordSubscriptionCMa(0, a5, a6, a7);
  v14 = a2;
  sub_1006CD8A8(a3, a4 & 1);
  v15 = objc_allocWithZone(v13);
  v15[*(_QWORD *)((swift_isaMask & *(_QWORD *)v15) + 0x138)] = HIBYTE(a4) & 1;
  v16 = sub_1006CE8E8(v14, a3, a4 & 1, a1);
  v19[3] = v13;
  v19[4] = swift_getWitnessTable(&unk_100F05688, v13);
  v19[0] = v16;
  dispatch thunk of Subscriber.receive(subscription:)(v19, a6, a7, v17);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v19);
}

uint64_t _s24ChangeRecordSubscriptionCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&_s24ChangeRecordSubscriptionCMn);
}

uint64_t sub_1006CD9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int16 v5;

  if (*(_BYTE *)(v4 + 17))
    v5 = 256;
  else
    v5 = 0;
  return CRLChangeNotifier.ChangeRecordPublisher.receive<A>(subscriber:)(a1, *(void **)v4, *(_QWORD *)(v4 + 8), v5 | *(unsigned __int8 *)(v4 + 16), *(_QWORD *)(a4 + 16), a2, a3);
}

uint64_t CRLChangeNotifier.ObjectDidChangePublisher.object.getter(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectRetain(a2);
}

uint64_t CRLChangeNotifier.ObjectDidChangePublisher.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v11;
  id v12;
  id v13;
  id v14;
  __n128 v15;
  _QWORD v17[5];

  v11 = (objc_class *)_s27ObjectDidChangeSubscriptionCMa(0, a4, a5, a6);
  swift_unknownObjectRetain(a3);
  v12 = a2;
  v13 = objc_allocWithZone(v11);
  v14 = sub_1006CE8E8(v12, a3, 0, a1);
  v17[3] = v11;
  v17[4] = swift_getWitnessTable(&unk_100F05688, v11);
  v17[0] = v14;
  dispatch thunk of Subscriber.receive(subscription:)(v17, a5, a6, v15);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v17);
}

uint64_t sub_1006CDAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return CRLChangeNotifier.ObjectDidChangePublisher.receive<A>(subscriber:)(a1, *(void **)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(a4 + 16), a2, a3);
}

uint64_t sub_1006CDAE8()
{
  _QWORD *v0;
  char *v1;
  _BYTE v3[24];

  v1 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x80);
  swift_beginAccess(v1, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_1006CDB3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)((swift_isaMask & *v1) + 0x88);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;

}

uint64_t sub_1006CDB60(uint64_t a1, char a2)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x90);
  v4 = *(_QWORD *)v3;
  *(_QWORD *)v3 = a1;
  v5 = v3[8];
  v3[8] = a2;
  return sub_1006CF25C(v4, v5);
}

uint64_t sub_1006CDB98@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v7[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x98);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 96));
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1006CDC18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x98);
  swift_beginAccess(v4, v7, 33, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 96));
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess(v7);
}

void sub_1006CDCA0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _BYTE v44[24];
  char v45[24];

  v2 = v1;
  v42 = a1;
  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[12];
  v5 = type metadata accessor for Optional(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v10);
  v43 = (char *)&v42 - v11;
  v12 = *(_QWORD *)((char *)v1 + v3[14]);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  if (!*(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x88)))
    goto LABEL_4;
  sub_1006CDB98((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_4:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v43, v8, v4);
  v13 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x80));
  swift_beginAccess((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x80), v45, 0, 0);
  v14 = *v13;
  v16 = static Subscribers.Demand.unlimited.getter(v15);
  if ((static Subscribers.Demand.== infix(_:_:)(v14, v16) & 1) != 0)
    goto LABEL_8;
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v14)
  {
LABEL_8:
    v17 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x80));
    swift_beginAccess(v17, v44, 33, 0);
    v18 = *v17;
    v20 = static Subscribers.Demand.unlimited.getter(v19);
    v21 = static Subscribers.Demand.== infix(_:_:)(v18, v20);
    if ((v21 & 1) == 0)
    {
      v22 = static Subscribers.Demand.unlimited.getter(v21);
      v23 = static Subscribers.Demand.== infix(_:_:)(v18, v22);
      if ((v23 & 1) != 0)
      {
        v24 = static Subscribers.Demand.unlimited.getter(v23);
      }
      else
      {
        if (v18 < 0)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        if (!v18)
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        v24 = v18 - 1;
      }
      *v17 = v24;
    }
    swift_endAccess(v44);
  }
  v25 = *(os_unfair_lock_s **)(v12 + 16);
  os_unfair_lock_unlock(v25);
  v27 = static Subscribers.Demand.unlimited.getter(v26);
  if ((static Subscribers.Demand.== infix(_:_:)(v14, v27) & 1) != 0)
    goto LABEL_19;
  if (v14 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (!v14)
    goto LABEL_32;
LABEL_19:
  v28 = *(_QWORD *)(*(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78)) + 16);
  os_unfair_recursive_lock_lock_with_options(v28, 0);
  v29 = dispatch thunk of Subscriber.receive(_:)(v42, v4, v3[13]);
  v30 = os_unfair_recursive_lock_unlock(v28);
  v31 = static Subscribers.Demand.unlimited.getter(v30);
  if ((static Subscribers.Demand.== infix(_:_:)(v29, v31) & 1) != 0)
  {
LABEL_22:
    os_unfair_lock_lock(v25);
    v32 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x80));
    swift_beginAccess(v32, v44, 33, 0);
    v33 = *v32;
    v35 = static Subscribers.Demand.unlimited.getter(v34);
    v36 = static Subscribers.Demand.== infix(_:_:)(v33, v35);
    if ((v36 & 1) != 0)
    {
LABEL_31:
      swift_endAccess(v44);
      os_unfair_lock_unlock(v25);
      goto LABEL_32;
    }
    v37 = static Subscribers.Demand.unlimited.getter(v36);
    v38 = static Subscribers.Demand.== infix(_:_:)(v33, v37);
    v39 = v38;
    v40 = static Subscribers.Demand.unlimited.getter(v38);
    if ((v39 & 1) != 0)
    {
LABEL_30:
      *v32 = v40;
      goto LABEL_31;
    }
    v41 = static Subscribers.Demand.== infix(_:_:)(v29, v40);
    if ((v41 & 1) != 0)
    {
LABEL_28:
      v40 = static Subscribers.Demand.unlimited.getter(v41);
      goto LABEL_30;
    }
    if (((v33 | v29) & 0x8000000000000000) == 0)
    {
      v40 = v33 + v29;
      if (!__OFADD__(v33, v29))
      {
        if ((v40 & 0x8000000000000000) == 0)
          goto LABEL_30;
LABEL_40:
        __break(1u);
        return;
      }
      goto LABEL_28;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v29 < 0)
    goto LABEL_36;
  if (v29)
    goto LABEL_22;
LABEL_32:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v43, v4);
}

void sub_1006CDFFC(uint64_t a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x70)) + 16);
  os_unfair_lock_lock(v3);
  v4 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x80));
  v5 = swift_beginAccess(v4, v14, 33, 0);
  v6 = *v4;
  v7 = static Subscribers.Demand.unlimited.getter(v5);
  v8 = static Subscribers.Demand.== infix(_:_:)(v6, v7);
  if ((v8 & 1) != 0)
    goto LABEL_10;
  v9 = static Subscribers.Demand.unlimited.getter(v8);
  v10 = static Subscribers.Demand.== infix(_:_:)(v6, v9);
  v11 = v10;
  v12 = static Subscribers.Demand.unlimited.getter(v10);
  if ((v11 & 1) != 0)
  {
LABEL_9:
    *v4 = v12;
LABEL_10:
    swift_endAccess(v14);
    os_unfair_lock_unlock(v3);
    return;
  }
  v13 = static Subscribers.Demand.== infix(_:_:)(a1, v12);
  if ((v13 & 1) != 0)
    goto LABEL_7;
  if ((v6 | a1) < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v12 = v6 + a1;
  if (__OFADD__(v6, a1))
  {
LABEL_7:
    v12 = static Subscribers.Demand.unlimited.getter(v13);
    goto LABEL_9;
  }
  if ((v12 & 0x8000000000000000) == 0)
    goto LABEL_9;
LABEL_12:
  __break(1u);
}

void sub_1006CE100()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  void *v8;
  char *v9;
  int v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;

  v1 = swift_isaMask & *v0;
  v2 = *(_QWORD *)(v1 + 0x60);
  v3 = type metadata accessor for Optional(0, v2);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - v4;
  v6 = *(_QWORD *)((char *)v0 + *(_QWORD *)(v1 + 112));
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  os_unfair_lock_lock(v7);
  v8 = *(void **)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x88));
  if (!v8 || (v9 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x90), v10 = v9[8], v10 == 255))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  }
  else
  {
    v11 = *(_QWORD *)v9;
    v12 = v8;
    sub_1006CF244(v11, v10);
    v13 = *(_QWORD *)((swift_isaMask & *v0) + 0x88);
    v14 = *(void **)((char *)v0 + v13);
    *(_QWORD *)((char *)v0 + v13) = 0;

    v15 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x90);
    v16 = *(_QWORD *)v15;
    *(_QWORD *)v15 = 0;
    v17 = v15[8];
    v15[8] = -1;
    sub_1006CF25C(v16, v17);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v5, 1, 1, v2);
    sub_1006CDC18((uint64_t)v5);
    os_unfair_lock_unlock(v7);
    if ((v10 & 1) != 0)
    {
      objc_msgSend(v12, "removeObserver:forChangeSourceOfClass:", v0, swift_getObjCClassFromMetadata(v11, v18));

    }
    else
    {
      sub_1006CD8A8(v11, 0);
      objc_msgSend(v12, "removeObserver:forChangeSource:", v0, v11);

      sub_1006CF25C(v11, v10);
      sub_1006CF25C(v11, v10);
    }
  }
}

void sub_1006CE2D8()
{
  sub_1006CF274();
}

id sub_1006CE2F8()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  _OWORD v4[2];
  objc_super v5;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v4[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x50);
  v4[1] = v1;
  v2 = (objc_class *)_s30BaseChangeNotifierSubscriptionCMa(0, (uint64_t)v4);
  v5.receiver = v0;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_1006CE34C(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  v2 = swift_isaMask & *a1;
  swift_release(*(_QWORD *)((char *)a1 + *(_QWORD *)(v2 + 0x70)));
  swift_release(*(_QWORD *)((char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x78)));

  v3 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x90);
  sub_1006CF25C(*(_QWORD *)v3, v3[8]);
  v4 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0x98);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v2 + 96));
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void sub_1006CE410(uint64_t a1)
{
  sub_1006CDFFC(a1);
}

void sub_1006CE430()
{
  sub_1006CE100();
}

void sub_1006CE450(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  _BYTE v15[32];

  v3 = swift_isaMask & *v2;
  if ((*((_BYTE *)v2 + *(_QWORD *)(v3 + 0x138)) & 1) != 0)
    return;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v6)
    goto LABEL_16;
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      sub_1004CB6E8(a2, (uint64_t)v15);
      swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, *(_QWORD *)(v3 + 288), 7);
      v10 = v14;
      v13[0] = v14;
      v13[1] = v9;
      v11 = v9;
      sub_1006CDCA0((uint64_t)v13);
      swift_unknownObjectRelease(v10);

    }
    while (v6 != v7);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_1006CE5C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006CE754(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *))sub_1006CE450);
}

void sub_1006CE5D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  _BYTE v15[32];

  v3 = swift_isaMask & *v2;
  if (*((_BYTE *)v2 + *(_QWORD *)(v3 + 0x138)) != 1)
    return;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v6)
    goto LABEL_16;
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      sub_1004CB6E8(a2, (uint64_t)v15);
      swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, *(_QWORD *)(v3 + 288), 7);
      v10 = v14;
      v13[0] = v14;
      v13[1] = v9;
      v11 = v9;
      sub_1006CDCA0((uint64_t)v13);
      swift_unknownObjectRelease(v10);

    }
    while (v6 != v7);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_1006CE748(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006CE754(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *))sub_1006CE5D0);
}

uint64_t sub_1006CE754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD *))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[4];

  v9 = type metadata accessor for CRLChangeRecord();
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  swift_unknownObjectRetain(a4);
  v11 = a1;
  _bridgeAnyObjectToAny(_:)(v13, a4);
  swift_unknownObjectRelease(a4);
  a5(v10, v13);

  swift_bridgeObjectRelease(v10);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
}

void sub_1006CE7F0()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = swift_isaMask & *v0;
  v2 = (char *)v0 + *(_QWORD *)(v1 + 0x90);
  v3 = v2[8];
  if ((v3 & 1) == 0)
  {
    v4 = *(_QWORD *)v2;
    v7 = v4;
    sub_1006CF244(v4, v3);
    sub_1006CD8A8(v4, 0);
    if ((swift_dynamicCast(&v6, &v7, (char *)&type metadata for Swift.AnyObject + 8, *(_QWORD *)(v1 + 288), 6) & 1) != 0)
    {
      v5 = v6;
      v7 = v6;
      sub_1006CDCA0((uint64_t)&v7);
      sub_1006CF25C(v4, v3);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      sub_1006CF25C(v4, v3);
    }
  }
}

void sub_1006CE8B4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1006CE7F0();

}

id sub_1006CE8E8(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  objc_class *v29;
  uint64_t v30;
  id v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  id v34;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;

  v40 = a4;
  v39 = a3;
  v38 = a2;
  v6 = *(_QWORD *)((swift_isaMask & *v4) + 0x60);
  v42 = swift_isaMask & *v4;
  v43 = type metadata accessor for Optional(0, v6);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v8 = (char *)&v36 - v7;
  v9 = *(_QWORD *)(v42 + 112);
  v10 = type metadata accessor for CRLUnfairLock();
  v11 = swift_allocObject(v10, 24, 7);
  v12 = v4;
  v13 = (_DWORD *)swift_slowAlloc(4, -1);
  *v13 = 0;
  *(_QWORD *)(v11 + 16) = v13;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)((char *)v4 + v9) = v11;
  v14 = *(_QWORD *)((swift_isaMask & *v12) + 0x78);
  v15 = type metadata accessor for CRLUnfairRecursiveLock();
  v16 = swift_allocObject(v15, 24, 7);
  v17 = (_QWORD *)swift_slowAlloc(8, -1);
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)((char *)v12 + v14) = v16;
  v18 = *(_QWORD *)((swift_isaMask & *v12) + 0x88);
  *(_QWORD *)((char *)v12 + v18) = 0;
  v19 = (char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x90);
  *(_QWORD *)v19 = 0;
  v19[8] = -1;
  v20 = (char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x98);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v22(v20, 1, 1, v6);
  *(_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x80)) = 0;
  v23 = *(void **)((char *)v12 + v18);
  *(_QWORD *)((char *)v12 + v18) = a1;
  v37 = a1;

  v24 = *(_QWORD *)v19;
  v25 = v38;
  *(_QWORD *)v19 = v38;
  LOBYTE(a1) = v39;
  LOBYTE(v23) = v19[8];
  v19[8] = v39 & 1;
  v26 = v25;
  sub_1006CD8A8(v25, a1 & 1);
  sub_1006CF25C(v24, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v8, v40, v6);
  v22(v8, 0, 1, v6);
  v27 = swift_beginAccess(v20, &v44, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v41 + 40))(v20, v8, v43, v27);
  swift_endAccess(&v44);

  v28 = *(_QWORD *)(v42 + 104);
  v44 = *(_OWORD *)(v42 + 80);
  v45 = v6;
  v46 = v28;
  v29 = (objc_class *)_s30BaseChangeNotifierSubscriptionCMa(0, (uint64_t)&v44);
  v47.receiver = v12;
  v47.super_class = v29;
  v31 = objc_msgSendSuper2(&v47, "init");
  if ((a1 & 1) != 0)
  {
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v26, v30);
    v33 = v37;
    objc_msgSend(v37, "addObserver:forChangeSourceOfClass:", v31, ObjCClassFromMetadata);

  }
  else
  {
    v34 = v37;
    objc_msgSend(v37, "addObserver:forChangeSource:", v31, v26);

    sub_1006CED34(v26, 0);
  }
  return v31;
}

uint64_t _s27ObjectDidChangeSubscriptionCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&_s27ObjectDidChangeSubscriptionCMn);
}

unint64_t sub_1006CEBE8()
{
  unint64_t result;

  result = qword_1013ECE88[0];
  if (!qword_1013ECE88[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLChangeNotifier.Phase, &type metadata for CRLChangeNotifier.Phase);
    atomic_store(result, qword_1013ECE88);
  }
  return result;
}

void *sub_1006CEC2C()
{
  return &protocol witness table for Never;
}

uint64_t _s5PhaseOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1006CEC84 + 4 * byte_100F05365[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006CECB8 + 4 * byte_100F05360[v4]))();
}

uint64_t sub_1006CECB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006CECC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006CECC8);
  return result;
}

uint64_t sub_1006CECD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006CECDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006CECE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006CECE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLChangeNotifier.Phase()
{
  return &type metadata for CRLChangeNotifier.Phase;
}

uint64_t sub_1006CED08(uint64_t a1)
{

  return sub_1006CED34(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1006CED34(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_unknownObjectRelease(result);
  return result;
}

uint64_t sub_1006CED40(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  id v7;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 16);
  v7 = v4;
  sub_1006CD8A8(v5, v6);
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t sub_1006CED98(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_1006CD8A8(v7, v8);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1006CED34(v9, v10);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 sub_1006CEE08(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t sub_1006CEE1C(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1006CED34(v6, v7);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t sub_1006CEE74(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1006CEEBC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CRLChangeNotifier.ChangeRecordPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLChangeNotifier.ChangeRecordPublisher);
}

uint64_t sub_1006CEF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_1006CEF10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1006CD8A8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1006CEF54(uint64_t a1)
{
  return sub_1006CED34(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1006CEF64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1006CD8A8(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1006CED34(v5, v6);
  return a1;
}

uint64_t sub_1006CEFB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1006CED34(v5, v6);
  return a1;
}

uint64_t type metadata accessor for CRLChangeNotifier.ChangeRecordPublisher.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLChangeNotifier.ChangeRecordPublisher.Source);
}

uint64_t sub_1006CEFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

_QWORD *sub_1006CF004(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_unknownObjectRetain(v4);
  return a1;
}

uint64_t sub_1006CF038(uint64_t a1)
{

  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t sub_1006CF060(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v8);
  return a1;
}

uint64_t sub_1006CF0B8(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease(v4);
  return a1;
}

uint64_t type metadata accessor for CRLChangeNotifier.ObjectDidChangePublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLChangeNotifier.ObjectDidChangePublisher);
}

uint64_t sub_1006CF100(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = "\b";
  v4[4] = &unk_100F05548;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 96));
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 6, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t _s30BaseChangeNotifierSubscriptionCMa(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &_s30BaseChangeNotifierSubscriptionCMn);
}

uint64_t sub_1006CF1B0(uint64_t a1)
{
  void *v2;

  v2 = &unk_100F055B0;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 312);
}

uint64_t sub_1006CF1F0(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 312);
}

uint64_t sub_1006CF224(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100F05660, a1);
}

uint64_t sub_1006CF234(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100F05638, a1);
}

uint64_t sub_1006CF244(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1006CD8A8(result, a2 & 1);
  return result;
}

uint64_t sub_1006CF25C(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1006CED34(result, a2 & 1);
  return result;
}

void sub_1006CF274()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.BaseChangeNotifierSubscription", 39, "init()", 6, 0);
  __break(1u);
}

id sub_1006CF2A8()
{
  void *v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _UNKNOWN ****v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _BYTE v12[24];

  v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  result = (id)__chkstk_darwin(v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource + 16) & 1) != 0)
  {
    result = objc_msgSend(v0, "info");
    if (result)
    {
      v5 = result;
      v6 = type metadata accessor for CRLUSDZItem(0);
      v7 = swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
      v8 = *(_UNKNOWN *****)(v7 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v8 == &off_10140F528)
        v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v9 = 0;
      swift_beginAccess(v9 + qword_101481450, v12, 32, 0);
      swift_retain(v8);
      v10 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
      CRRegister.wrappedValue.getter(v10);
      swift_endAccess(v12);
      swift_release(v8);
      v11 = *(_OWORD *)&v4[*(int *)(v1 + 24)];
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
      return (id)swift_unknownObjectRelease(v5);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1006CF414()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;

  result = objc_msgSend(v0, "layoutController");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "canvas");

    if (v3)
    {
      v4 = objc_msgSend(v3, "canvasController");

      if (v4)
      {
        v5 = objc_msgSend(v4, "repForLayout:", v0);

        if (v5)
        {
          v6 = type metadata accessor for CRLUSDZRep(0);
          result = (id)swift_dynamicCastClass(v5, v6);
          if (result)
            return result;

        }
      }
    }
    return 0;
  }
  return result;
}

id sub_1006CF4E0(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  id v8;
  id result;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v3 = objc_msgSend(v1, "layoutController");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v3, "canvas");

  if (!v5)
    return 0;
  objc_msgSend(v5, "viewScale");
  v7 = v6;

  v8 = a1;
  result = objc_msgSend(v1, "geometry");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "size");

    v11 = sub_10005FDDC();
    v15 = objc_msgSend(objc_allocWithZone((Class)CRLUSDZImageHitTestManager), "initWith:naturalBounds:canvasViewScale:", v8, v11, v12, v13, v14, v7);

    v16 = OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager;
    v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager] = v15;

    v18 = sub_1006CF414();
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, "invalidateKnobs");

    }
    v20 = *(void **)&v1[v16];
    v21 = v20;
    return v20;
  }
  __break(1u);
  return result;
}

void sub_1006CF650()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  id v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  CGAffineTransform v32;
  objc_super v33;
  _BYTE v34[40];
  _QWORD v35[4];
  char v36;
  CGRect v37;

  v1 = v0;
  v2 = objc_msgSend(v0, "info");
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for CRLUSDZItem(0);
    swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
    sub_100660120((uint64_t)v34);
    swift_unknownObjectRelease(v3);
    sub_10057B588((uint64_t)v34, (uint64_t)v35);
    if ((v36 & 1) != 0)
    {
LABEL_6:
      v33.receiver = v1;
      v33.super_class = (Class)type metadata accessor for CRLUSDZLayout();
      objc_msgSendSuper2(&v33, "boundsInRoot");
      return;
    }
    v5 = *(double *)v35;
    v6 = *(double *)&v35[1];
    v7 = *(double *)&v35[2];
    v8 = *(double *)&v35[3];
    v9 = objc_msgSend(v0, "geometry");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "frame");
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      sub_1000626D8(v12, v14, v16, v18, v5, v6, v7, v8);
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v27 = objc_msgSend(v1, "parent");
      if (v27)
      {
        v28 = v27;
        objc_msgSend(v27, "transformInRoot");
        v30 = *(_OWORD *)&v32.c;
        v31 = *(_OWORD *)&v32.a;
        v29 = *(_OWORD *)&v32.tx;

        *(_OWORD *)&v32.a = v31;
        *(_OWORD *)&v32.c = v30;
        *(_OWORD *)&v32.tx = v29;
        v37.origin.x = v20;
        v37.origin.y = v22;
        v37.size.width = v24;
        v37.size.height = v26;
        CGRectApplyAffineTransform(v37, &v32);
        return;
      }
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1006CF830()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  objc_super v18;
  _BYTE v19[40];
  _QWORD v20[4];
  char v21;

  v1 = objc_msgSend(v0, "info");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for CRLUSDZItem(0);
    swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
    sub_100660120((uint64_t)v19);
    swift_unknownObjectRelease(v2);
    sub_10057B588((uint64_t)v19, (uint64_t)v20);
    if ((v21 & 1) != 0)
    {
      v18.receiver = v0;
      v18.super_class = (Class)type metadata accessor for CRLUSDZLayout();
      objc_msgSendSuper2(&v18, "alignmentFrame");
      return;
    }
    v4 = *(double *)v20;
    v5 = *(double *)&v20[1];
    v6 = *(double *)&v20[2];
    v7 = *(double *)&v20[3];
    v8 = objc_msgSend(v0, "geometry");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "frame");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;

      sub_1000626D8(v11, v13, v15, v17, v4, v5, v6, v7);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_1006CFA1C(void *a1, uint64_t a2, double (*a3)(void))
{
  id v4;
  double v5;

  v4 = a1;
  v5 = a3();

  return v5;
}

void sub_1006CFA78()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  double v14;
  objc_super v15;
  objc_super v16;
  _BYTE v17[40];
  _QWORD v18[4];
  char v19;

  v1 = v0;
  v2 = objc_msgSend(v0, "info");
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for CRLUSDZItem(0);
    swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
    sub_100660120((uint64_t)v17);
    swift_unknownObjectRelease(v3);
    sub_10057B588((uint64_t)v17, (uint64_t)v18);
    if ((v19 & 1) != 0)
    {
      v5 = sub_1006D0A58();
      if (v5)
      {
        v6 = v5;
        if (objc_msgSend(v6, "visibleBoundsComputedFromAsset"))
        {
          objc_msgSend(v6, "visibleBounds");

          return;
        }

      }
      v16.receiver = v1;
      v16.super_class = (Class)type metadata accessor for CRLUSDZLayout();
      objc_msgSendSuper2(&v16, "boundsForStandardKnobs");
    }
    else
    {
      v7 = *(double *)v18;
      v8 = *(double *)&v18[1];
      v9 = *(double *)&v18[2];
      v10 = *(double *)&v18[3];
      v15.receiver = v0;
      v15.super_class = (Class)type metadata accessor for CRLUSDZLayout();
      objc_msgSendSuper2(&v15, "boundsForStandardKnobs");
      sub_1000626D8(v11, v12, v13, v14, v7, v8, v9, v10);
    }
  }
  else
  {
    __break(1u);
  }
}

char *sub_1006CFC84(void *a1)
{
  void *v1;
  void *v2;
  char *result;
  id v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v18;
  uint64_t v19;
  uint64_t (*v20)(__n128);
  __n128 v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  objc_super v62;
  _BYTE v63[40];
  CGRect v64;
  char v65;
  CGRect v66;

  v2 = v1;
  result = (char *)objc_msgSend(v1, "info");
  if (result)
  {
    v5 = result;
    v6 = type metadata accessor for CRLUSDZItem(0);
    result = (char *)swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
    if (a1)
    {
      v7 = result;
      objc_msgSend(a1, "frame");
      v60 = v9;
      v61 = v8;
      v11 = v10;
      v13 = v12;
      sub_100660120((uint64_t)v63);
      sub_10057B588((uint64_t)v63, (uint64_t)&v64);
      if ((v65 & 1) != 0)
        goto LABEL_5;
      x = v64.origin.x;
      y = v64.origin.y;
      width = v64.size.width;
      height = v64.size.height;
      v66.origin.x = 0.0;
      v66.origin.y = 0.0;
      v66.size.width = 0.0;
      v66.size.height = 0.0;
      if (CGRectEqualToRect(v64, v66))
      {
LABEL_5:
        swift_unknownObjectRelease(v5);
      }
      else
      {
        v19 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v20 = *(uint64_t (**)(__n128))(*(_QWORD *)v19 + 288);
        v21 = swift_retain(v19);
        v22 = (void *)v20(v21);
        objc_msgSend(v22, "boundsBeforeRotation", swift_release(v19).n128_f64[0]);
        v24 = v23;
        v57 = v23;
        v58 = v13;
        v59 = v11;
        v26 = v25;
        v28 = v27;
        v30 = v29;
        v56 = v29;

        sub_1000626D8(v24, v26, v28, v30, x, y, width, height);
        v32 = v31;
        v34 = v33;
        v36 = v35;
        v38 = v37;
        sub_100062EB4(0, v35, v37, v61, v59, v58, v60);
        v40 = v39 / v36;
        v41 = sub_100061400(v32, v34, v36, v38);
        sub_100062F48(v57, v26, v28, v56, v41, v42, v40);
        v44 = v43;
        v46 = v45;
        v48 = v47;
        v50 = v49;
        v51 = sub_100061400(v61, v59, v58, v60);
        v53 = sub_1000603B8(v51, v52, v41);
        v54 = sub_1000603D0(v44, v46, v53);
        v18 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:", v54, v55, v48, v50);
        swift_unknownObjectRelease(v5);
        if (v18)
          return (char *)v18;
      }
      v62.receiver = v2;
      v62.super_class = (Class)type metadata accessor for CRLUSDZLayout();
      return (char *)objc_msgSendSuper2(&v62, "computeInfoGeometryFromPureLayoutGeometry:", a1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1006CFF9C()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  id v15;
  id v16;
  double v17;
  double v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  objc_class *v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  char *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  id v42;
  char *v43;
  double v44;
  double v45;
  id v46;
  void *v47;
  double v48;
  double v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double *v56;
  double v57;
  double v58;
  id v59;
  void *v60;
  double v61;
  double v62;
  id v63;
  void *v64;
  CGFloat v65;
  double v66;
  double v67;
  CGAffineTransform v68;
  objc_super v69;
  _BYTE v70[40];
  _QWORD v71[4];
  char v72;

  v1 = v0;
  v2 = objc_msgSend(v0, "info");
  if (!v2)
  {
    __break(1u);
    goto LABEL_40;
  }
  v3 = v2;
  v4 = type metadata accessor for CRLUSDZItem(0);
  v0 = (char *)swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  v5 = (char *)sub_10065FB20();
  if (!v5)
  {
    swift_unknownObjectRelease(v3);
    goto LABEL_20;
  }
  v0 = v5;
  v6 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v7 = objc_msgSend(v6, "providerForAsset:shouldValidate:", v0, 1);
  swift_unknownObjectRelease(v3);

  if (!objc_msgSend(v7, "isValid") || (objc_msgSend(v7, "isError") & 1) != 0)
    goto LABEL_19;
  v8 = OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedWrapPath;
  v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedWrapPath];
  if (v9)
  {
    v10 = v9;
    if ((objc_msgSend(v10, "isEmpty") & 1) == 0)
    {
      v11 = *(id *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedPosterImageDataHashForWrapPath];
      v0 = (char *)objc_msgSend(v7, "imageData");
      v12 = objc_msgSend(v0, "hash");

      if (v11 == v12)
      {
        v13 = objc_msgSend(v10, "copy");
        _bridgeAnyObjectToAny(_:)(&v68, v13);
        swift_unknownObjectRelease(v13);
        v14 = sub_1006D12C4();
        if (swift_dynamicCast(v71, &v68, (char *)&type metadata for Any + 8, v14, 6))
        {
          v0 = (char *)v71[0];

          goto LABEL_35;
        }
        v0 = "invalid nil found when unwrapping value";
        sub_100757E04(&_mh_execute_header, (uint64_t)"computeWrapPath()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 276, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"computeWrapPath()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2u, 276, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

LABEL_20:
        v22 = objc_msgSend(v1, "info");
        if (v22)
        {
          v23 = v22;
          v0 = (char *)swift_dynamicCastClassUnconditional(v22, v4, 0, 0, 0);
          sub_100660120((uint64_t)v70);
          swift_unknownObjectRelease(v23);
          sub_10057B588((uint64_t)v70, (uint64_t)v71);
          if ((v72 & 1) != 0)
          {
            v24 = (objc_class *)type metadata accessor for CRLUSDZLayout();
            v69.receiver = v1;
            v69.super_class = v24;
            v0 = (char *)objc_msgSendSuper2(&v69, "computeWrapPath");
            if (v0)
              return;
            __break(1u);
          }
          v25 = *(double *)v71;
          v26 = *(double *)&v71[1];
          v27 = *(double *)&v71[2];
          v28 = *(double *)&v71[3];
          v29 = (char *)objc_msgSend(v1, "geometry");
          if (v29)
          {
            v0 = v29;
            objc_msgSend(v29, "frame");
            v31 = v30;
            v33 = v32;
            v35 = v34;
            v37 = v36;

            sub_1000626D8(v31, v33, v35, v37, v25, v26, v27, v28);
            v42 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithRect:", v38, v39, v40, v41);
            if (v42)
            {
              v7 = v42;
              v43 = (char *)objc_msgSend(v1, "geometry");
              if (v43)
              {
                v0 = v43;
                objc_msgSend(v43, "frame");
                v45 = v44;

                v46 = objc_msgSend(v1, "geometry");
                if (v46)
                {
                  v47 = v46;
                  objc_msgSend(v46, "frame");
                  v49 = v48;

                  CGAffineTransformMakeTranslation(&v68, -v45, -v49);
                  objc_msgSend(v7, "transformUsingAffineTransform:", &v68);
                  goto LABEL_29;
                }
                goto LABEL_44;
              }
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
    }

  }
  v15 = objc_msgSend(v1, "info");
  if (!v15)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v16 = v15;
  swift_dynamicCastClassUnconditional(v15, v4, 0, 0, 0);
  v0 = (char *)sub_10065F864();
  swift_unknownObjectRelease(v16);
  if (!v0)
  {
LABEL_19:

    goto LABEL_20;
  }
  if ((objc_msgSend(v0, "isEmpty") & 1) != 0
    || (objc_msgSend(v7, "naturalSize"), v17 <= 0.0)
    || (objc_msgSend(v7, "naturalSize"), v18 <= 0.0))
  {

    goto LABEL_20;
  }
  v19 = objc_msgSend(v0, "copy");
  _bridgeAnyObjectToAny(_:)(&v68, v19);
  swift_unknownObjectRelease(v19);
  v20 = sub_1006D12C4();
  if (swift_dynamicCast(v71, &v68, (char *)&type metadata for Any + 8, v20, 6))
  {
    v21 = v71[0];
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computeWrapPath()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 279, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"computeWrapPath()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2u, 279, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v21 = 0;
  }
  v50 = *(void **)&v1[v8];
  *(_QWORD *)&v1[v8] = v21;

  v51 = objc_msgSend(v7, "imageData");
  v52 = objc_msgSend(v51, "hash");

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedPosterImageDataHashForWrapPath] = v52;
  objc_msgSend(v7, "naturalSize");
  v53 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize];
  *(_QWORD *)v53 = v54;
  *((_QWORD *)v53 + 1) = v55;
  v53[16] = 0;
LABEL_35:
  v56 = (double *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize];
  if ((v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize + 16] & 1) == 0)
  {
    v57 = *v56;
    v58 = v56[1];
    v0 = v0;
    v59 = objc_msgSend(v1, "geometry");
    if (v59)
    {
      v60 = v59;
      objc_msgSend(v59, "size");
      v62 = v61;

      v63 = objc_msgSend(v1, "geometry");
      if (v63)
      {
        v64 = v63;
        v65 = v62 / v57;
        objc_msgSend(v63, "size");
        v67 = v66;

        CGAffineTransformMakeScale(&v68, v65, v67 / v58);
        objc_msgSend(v0, "transformUsingAffineTransform:", &v68);

        goto LABEL_29;
      }
LABEL_47:

      __break(1u);
      return;
    }
LABEL_46:

    __break(1u);
    goto LABEL_47;
  }
LABEL_29:

}

id sub_1006D0768()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id result;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN ****v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE v17[24];

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = objc_msgSend(v0, "info");
  if (result)
  {
    v6 = result;
    v7 = type metadata accessor for CRLUSDZItem(0);
    v8 = swift_dynamicCastClassUnconditional(v6, v7, 0, 0, 0);
    v9 = *(_UNKNOWN *****)(v8 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v9 == &off_10140F528)
      v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v10 = 0;
    swift_beginAccess(v10 + qword_101481450, v17, 32, 0);
    swift_retain(v9);
    v11 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    CRRegister.wrappedValue.getter(v11);
    swift_endAccess(v17);
    swift_release(v9);
    v12 = (uint64_t *)&v4[*(int *)(v2 + 24)];
    v14 = *v12;
    v13 = v12[1];
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
    result = (id)swift_unknownObjectRelease(v6);
    v15 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource];
    *(_QWORD *)v15 = v14;
    *((_QWORD *)v15 + 1) = v13;
    v15[16] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1006D08C4(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedWrapPath] = 0;
  v4 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedPosterImageDataHashForWrapPath;
  v6 = v1;
  *(_QWORD *)&v1[v5] = NSNotFound.getter(v6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager] = 0;

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for CRLUSDZLayout();
  v7 = objc_msgSendSuper2(&v9, "initWithInfo:", a1);
  swift_unknownObjectRelease(a1);
  return v7;
}

id sub_1006D09AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZLayout()
{
  return objc_opt_self(_TtC8Freeform13CRLUSDZLayout);
}

__n128 initializeWithCopy for CRLUSDZLayout.OrientationSource(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZLayout.OrientationSource()
{
  return &type metadata for CRLUSDZLayout.OrientationSource;
}

id sub_1006D0A58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  id result;
  id v27;
  uint64_t v28;
  _UNKNOWN ****v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  double v59;
  double v60;
  void *v61;
  double v62;
  double v63;
  double v64;
  double v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  _BYTE v82[32];

  v75 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v75);
  v77 = (uint64_t)&v70 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v74 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v76 = (char *)&v70 - v11;
  __chkstk_darwin(v12);
  v79 = (uint64_t)&v70 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - v15;
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v73 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  *(_QWORD *)&v24 = __chkstk_darwin(v23).n128_u64[0];
  v80 = (char *)&v70 - v25;
  v81 = v0;
  result = objc_msgSend(v0, "info", v24);
  if (!result)
  {
    __break(1u);
    goto LABEL_29;
  }
  v27 = result;
  v78 = type metadata accessor for CRLUSDZItem(0);
  v28 = swift_dynamicCastClassUnconditional(v27, v78, 0, 0, 0);
  v29 = *(_UNKNOWN *****)(v28 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v29 == &off_10140F528)
    v30 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v30 = 0;
  swift_beginAccess(v30 + qword_101481450, v82, 32, 0);
  swift_retain(v29);
  v31 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v31);
  swift_endAccess(v82);
  swift_release(v29);
  sub_1004CB7BC((uint64_t)&v4[*(int *)(v2 + 20)], (uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease(v27);
  v32 = type metadata accessor for CRLAssetData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v7, 1, v32) == 1)
  {
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_8:
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    v36 = &v81[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
    return *(id *)v36;
  }
  v33 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v33(v16, v7, v17);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
  v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v34(v16, 0, 1, v17);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v35(v16, 1, v17) == 1)
    goto LABEL_8;
  v37 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v38 = v80;
  v37(v80, v16, v17);
  v36 = &v81[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
  v39 = *(void **)&v81[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
  v33(v22, v38, v17);
  if (!v39)
  {
    v48 = *(void (**)(char *, uint64_t))(v18 + 8);
    v48(v22, v17);
    v49 = v81;
    goto LABEL_19;
  }
  v72 = v36;
  v40 = v22;
  v41 = v79;
  v70 = (void (*)(char *, uint64_t, uint64_t))v37;
  v71 = v40;
  ((void (*)(uint64_t))v33)(v79);
  v34((char *)v41, 0, 1, v17);
  v42 = (char *)objc_msgSend(v39, "imageAsset");
  v43 = *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  v44 = *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_1004BB5A4(&v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v43);
  v45 = (uint64_t)v76;
  (*(void (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);

  v34((char *)v45, 0, 1, v17);
  v46 = v77;
  v47 = v77 + *(int *)(v75 + 48);
  sub_1004CB7BC(v41, v77, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC(v45, v47, (uint64_t *)&unk_1013E1A50);
  if (v35((char *)v46, 1, v17) == 1)
  {
    sub_1004CB800(v45, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800(v41, (uint64_t *)&unk_1013E1A50);
    v48 = *(void (**)(char *, uint64_t))(v18 + 8);
    v48(v71, v17);
    if (v35((char *)v47, 1, v17) == 1)
    {
      sub_1004CB800(v46, (uint64_t *)&unk_1013E1A50);
      v36 = v72;
LABEL_26:
      v48(v80, v17);
      return *(id *)v36;
    }
    goto LABEL_17;
  }
  v50 = v71;
  v51 = v74;
  sub_1004CB7BC(v46, v74, (uint64_t *)&unk_1013E1A50);
  if (v35((char *)v47, 1, v17) == 1)
  {
    sub_1004CB800(v45, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800(v79, (uint64_t *)&unk_1013E1A50);
    v48 = *(void (**)(char *, uint64_t))(v18 + 8);
    v48(v50, v17);
    v48((char *)v51, v17);
LABEL_17:
    v49 = v81;
    v36 = v72;
    sub_1004CB800(v46, (uint64_t *)&unk_1013F62D0);
    goto LABEL_19;
  }
  v52 = v73;
  v70(v73, v47, v17);
  sub_1006D127C();
  v53 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v52);
  v48 = *(void (**)(char *, uint64_t))(v18 + 8);
  v48(v52, v17);
  sub_1004CB800(v45, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800(v79, (uint64_t *)&unk_1013E1A50);
  v48(v50, v17);
  v48((char *)v51, v17);
  sub_1004CB800(v46, (uint64_t *)&unk_1013E1A50);
  v49 = v81;
  v36 = v72;
  if ((v53 & 1) != 0)
    goto LABEL_26;
LABEL_19:
  result = objc_msgSend(v49, "info");
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v54 = result;
  swift_dynamicCastClassUnconditional(result, v78, 0, 0, 0);
  v55 = sub_10065FB20();
  swift_unknownObjectRelease(v54);
  if (!v55)
    goto LABEL_26;
  v56 = objc_msgSend(v49, "layoutController");
  if (!v56
    || (v57 = v56, v58 = objc_msgSend(v56, "canvas"), v57, !v58))
  {
LABEL_27:
    v48(v80, v17);

    return *(id *)v36;
  }
  objc_msgSend(v58, "viewScale");
  v60 = v59;

  v55 = v55;
  result = objc_msgSend(v49, "geometry");
  if (result)
  {
    v61 = result;
    objc_msgSend(result, "size");

    v62 = sub_10005FDDC();
    v66 = objc_msgSend(objc_allocWithZone((Class)CRLUSDZImageHitTestManager), "initWith:naturalBounds:canvasViewScale:", v55, v62, v63, v64, v65, v60);

    v67 = *(void **)v36;
    *(_QWORD *)v36 = v66;

    v68 = sub_1006CF414();
    if (v68)
    {
      v69 = v68;
      objc_msgSend(v68, "invalidateKnobs");

      goto LABEL_26;
    }
    goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1006D127C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4880;
  if (!qword_1013E4880)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1013E4880);
  }
  return result;
}

unint64_t sub_1006D12C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ED1E0;
  if (!qword_1013ED1E0)
  {
    v1 = objc_opt_self(CRLBezierPath);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013ED1E0);
  }
  return result;
}

id sub_1006D1300()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLiOSPrintCoordinator(0)), "init");
  qword_10147F238 = (uint64_t)result;
  return result;
}

uint64_t sub_1006D1330(uint64_t a1, void *a2, uint64_t a3, char a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v16 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor) = a1;
  swift_retain(a1);
  swift_release(v16);
  v17 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController) = a2;
  v18 = a2;

  v19 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes) = a3;
  swift_bridgeObjectRetain(a3);
  result = swift_bridgeObjectRelease(v19);
  v21 = v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize;
  *(double *)v21 = a5;
  *(double *)(v21 + 8) = a6;
  *(double *)(v21 + 16) = a7;
  *(double *)(v21 + 24) = a8;
  *(_BYTE *)(v21 + 32) = 0;
  *(_BYTE *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_defaultToPrintScenes) = a4;
  return result;
}

void sub_1006D13FC(char a1)
{
  void *v1;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  id v12;
  Class isa;
  NSString v14;
  _BYTE v15[40];
  __int128 v16;
  void *v17;
  _OWORD v18[2];

  v3 = (void *)objc_opt_self(NSUserDefaults);
  v4 = objc_msgSend(v3, "standardUserDefaults");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "dictionaryForKey:", v5);

  if (v6)
  {
    v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    sub_100C9BC14(v7);
    v9 = v8;
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = objc_msgSend(v1, "dictionaryRepresentation");
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  LOBYTE(v16) = a1 & 1;
  v17 = &type metadata for Bool;
  *(_QWORD *)&v18[0] = 0x656353746E697270;
  *((_QWORD *)&v18[0] + 1) = 0xEB0000000073656ELL;
  AnyHashable.init<A>(_:)(v18, &type metadata for String, &protocol witness table for String);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
  sub_1006D29F8(&v16, (uint64_t)v15, isUniquelyReferenced_nonNull_native, v18);
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1004B89A4((uint64_t)v15);
  sub_1004CB800((uint64_t)v18, &qword_1013E0230);
  v12 = objc_msgSend(v3, "standardUserDefaults");
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setObject:forKey:", isa, v14);

}

void sub_1006D163C()
{
  void *v0;
  id v1;
  uint64_t v2;
  char v3;
  char isUniquelyReferenced_nonNull_native;
  char v5;
  char v6;
  id v7;
  Class isa;
  NSString v9;
  _OWORD v10[2];
  __int128 v11;
  void *v12;
  _BYTE v13[40];

  v1 = objc_msgSend(v0, "dictionaryRepresentation");
  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v11 = 0x656353746E697270;
  *((_QWORD *)&v11 + 1) = 0xEB0000000073656ELL;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  v3 = sub_1006D2DB8();
  v12 = &type metadata for Bool;
  LOBYTE(v11) = v3 & 1;
  sub_10050CB14(&v11, v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100825E68(v10, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1004B89A4((uint64_t)v13);
  *(_QWORD *)&v11 = 0xD00000000000001ALL;
  *((_QWORD *)&v11 + 1) = 0x8000000100FC6120;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  v5 = sub_1006D2F14();
  v12 = &type metadata for Bool;
  LOBYTE(v11) = v5 & 1;
  sub_10050CB14(&v11, v10);
  v6 = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100825E68(v10, (uint64_t)v13, v6);
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1004B89A4((uint64_t)v13);
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setObject:forKey:", isa, v9);

}

uint64_t sub_1006D186C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[6] = v0;
  v2 = sub_1004B804C(&qword_1013ED308);
  v1[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[8] = v3;
  v1[9] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[10] = v4;
  v1[11] = v5;
  return swift_task_switch(sub_1006D1900, v4, v5);
}

uint64_t sub_1006D1900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController))
  {
    v3 = static MainActor.shared.getter(a1);
    *(_QWORD *)(v1 + 96) = v3;
    v4 = swift_task_alloc(32);
    *(_QWORD *)(v1 + 104) = v4;
    *(_QWORD *)(v4 + 16) = v2;
    v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v1 + 112) = v5;
    v6 = sub_1004B804C((uint64_t *)&unk_1013ED310);
    *v5 = v1;
    v5[1] = sub_1006D1A04;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 40, v3, &protocol witness table for MainActor, 0xD00000000000001ELL, 0x8000000100FC6140, sub_1006D3E68, v4, v6);
  }
  else
  {
    swift_release(*(_QWORD *)(v1 + 72));
    swift_task_dealloc(*(_QWORD *)(v1 + 56));
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
  }
}

uint64_t sub_1006D1A04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1006D1B28;
  }
  else
  {
    v7 = v2[13];
    swift_release(v2[12]);
    swift_task_dealloc(v7);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1006D1A78;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006D1A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  v3 = *(_QWORD *)(v0 + 40);
  v4 = sub_1004B804C(&qword_1013ED288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = v2 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation;
  swift_beginAccess(v5, v0 + 16, 33, 0);
  sub_1006D3E70(v1, v5);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1006D1B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1006D1B84(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  char *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v4 = sub_1004B804C(&qword_1013ED308);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013ED288);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = (uint64_t)&a2[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation];
  swift_beginAccess(&a2[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation], aBlock, 33, 0);
  sub_1006D3E70((uint64_t)v6, v9);
  swift_endAccess(aBlock);
  v10 = *(void **)&a2[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController];
  if (v10)
  {
    v11 = swift_allocObject(&unk_101278010, 24, 7);
    *(_QWORD *)(v11 + 16) = a2;
    aBlock[4] = sub_1006D3EDC;
    v17 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1006D1FCC;
    aBlock[3] = &unk_101278028;
    v12 = _Block_copy(aBlock);
    v13 = v17;
    v14 = v10;
    v15 = a2;
    objc_msgSend(v14, "presentAnimated:completionHandler:", 1, v12, swift_release(v13).n128_f64[0]);
    _Block_release(v12);

  }
}

void sub_1006D1D10(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  id v18;
  _BYTE v19[24];

  v7 = sub_1004B804C(&qword_1013ED288);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1004B804C(&qword_1013ED308);
  __chkstk_darwin(v11);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v19[-v15 - 8];
  if ((*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_didResume) & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentInteractionController()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSPrintCoordinator.swift", 90, 2, 123, "Completion handler called twice. See 100236782.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentInteractionController()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSPrintCoordinator.swift", 90, 2u, 123, (uint64_t)"Completion handler called twice. See 100236782.", 47, 2u);
    return;
  }
  *(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_didResume) = 1;
  v17 = a4 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation;
  if (a3)
  {
    swift_beginAccess(v17, v19, 0, 0);
    sub_1006D3EFC(v17, (uint64_t)v13);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
    {
      sub_1004CB800((uint64_t)v13, &qword_1013ED308);
      return;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    sub_1004CB800((uint64_t)v13, &qword_1013ED308);
    v18 = a3;
    swift_errorRetain(a3);
    CheckedContinuation.resume(throwing:)(&v18, v7);
  }
  else
  {
    swift_beginAccess(v17, v19, 0, 0);
    sub_1006D3EFC(v17, (uint64_t)v16);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7))
    {
      sub_1004CB800((uint64_t)v16, &qword_1013ED308);
      return;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v16, v7);
    sub_1004CB800((uint64_t)v16, &qword_1013ED308);
    v18 = objc_msgSend(a1, "printInfo");
    CheckedContinuation.resume(returning:)(&v18, v7);
  }
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1006D1FCC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(id, uint64_t, void *);
  id v9;
  id v10;

  v8 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v10 = a2;
  v9 = a4;
  v8(v10, a3, a4);
  swift_release(v7);

}

id sub_1006D2048()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v1[32] = 1;
  v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_defaultToPrintScenes] = 0;
  v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_isPresenting] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController] = 0;
  v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_didResume] = 0;
  v2 = &v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation];
  v3 = sub_1004B804C(&qword_1013ED288);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLiOSPrintCoordinator(0);
  return objc_msgSendSuper2(&v5, "init");
}

id sub_1006D2154()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPrintCoordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006D220C()
{
  return type metadata accessor for CRLiOSPrintCoordinator(0);
}

uint64_t type metadata accessor for CRLiOSPrintCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1013ED268;
  if (!qword_1013ED268)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSPrintCoordinator);
  return result;
}

void sub_1006D2250(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = "\b";
  v4[4] = &unk_100F05740;
  v4[5] = &unk_100F05758;
  v4[6] = &unk_100F05758;
  v4[7] = "\b";
  v4[8] = &unk_100F05758;
  sub_1006D22E8(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_1006D22E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013ED280)
  {
    v2 = sub_1004CB6A4(&qword_1013ED288);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013ED280);
  }
}

uint64_t sub_1006D23C8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes);
  if (!v1)
    return v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v3 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes));
    v4 = _CocoaArrayWrapper.endIndex.getter(v3);
    swift_bridgeObjectRelease(v1);
    if (v4 >= 1)
      goto LABEL_4;
    return 0;
  }
  if (*(uint64_t *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    return 0;
LABEL_4:
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController);
  if (v1)
    v2 = (id)v1;
  return v1;
}

void sub_1006D2490(char a1)
{
  void *v1;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  id v12;
  Class isa;
  NSString v14;
  _OWORD v15[2];
  __int128 v16;
  void *v17;
  _BYTE v18[40];

  v3 = (void *)objc_opt_self(NSUserDefaults);
  v4 = objc_msgSend(v3, "standardUserDefaults");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "dictionaryForKey:", v5);

  if (v6)
  {
    v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    sub_100C9BC14(v7);
    v9 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = objc_msgSend(v1, "dictionaryRepresentation");
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  *(_QWORD *)&v16 = 0xD00000000000001ALL;
  *((_QWORD *)&v16 + 1) = 0x8000000100FC6120;
  AnyHashable.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String);
  v17 = &type metadata for Bool;
  LOBYTE(v16) = a1 & 1;
  sub_10050CB14(&v16, v15);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
  sub_100825E68(v15, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v18);
  v12 = objc_msgSend(v3, "standardUserDefaults", v9);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setObject:forKey:", isa, v14);

}

uint64_t sub_1006D26D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  void (*v23)(uint64_t, unint64_t, uint64_t);
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a1;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_100842EFC(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v5;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = *(_QWORD *)(v10 + 72) * v15;
        v23 = *(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 32);
        v23(a4, v21[7] + v22, v9);
        v23(v21[7] + v22, v28, v9);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a4, 0, 1, v9);
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_10082D4AC();
      goto LABEL_7;
    }
    sub_1008166C0(v18, a3 & 1);
    v25 = sub_100842EFC(a2);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v21 = *v5;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
      sub_10082B090(v15, (uint64_t)v12, v28, v21);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a4, 1, 1, v9);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
  __break(1u);
  return result;
}

uint64_t sub_1006D289C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100842EFC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = *(_QWORD *)(v21 + 8 * v14);
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10082EDF0();
    goto LABEL_7;
  }
  sub_1008198A0(v17, a3 & 1);
  v23 = sub_100842EFC(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_10082B488(v14, (uint64_t)v11, a1, v20);
  return 0;
}

_OWORD *sub_1006D29F8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *result;
  unint64_t v20;
  char v21;
  _BYTE v22[40];

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1008432BC(a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        sub_10050CB14((_OWORD *)(v18[7] + 32 * v12), a4);
        return sub_10050CB14(a1, (_OWORD *)(v18[7] + 32 * v12));
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_10082CEDC();
      goto LABEL_7;
    }
    sub_1008159E4(v15, a3 & 1);
    v20 = sub_1008432BC(a2);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1004B8968(a2, (uint64_t)v22);
      result = sub_10082B018(v12, (uint64_t)v22, a1, v18);
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

id sub_1006D2B44()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (!v2)
    return objc_msgSend((id)objc_opt_self(UIPrintInfo), "printInfo");
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  sub_100C9BC14(v3);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend((id)objc_opt_self(UIPrintInfo), "printInfoWithDictionary:", isa);

  return v7;
}

uint64_t sub_1006D2C9C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  *(double *)(v4 + 16) = a3;
  *(double *)(v4 + 24) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006D2D0C, v6, v7);
}

uint64_t sub_1006D2D0C()
{
  uint64_t v0;
  double v1;
  double v2;
  id v3;
  NSString v4;

  v2 = *(double *)(v0 + 16);
  v1 = *(double *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  v3 = sub_1006D2B44();
  objc_msgSend(v3, "setOrientation:", v2 / v1 > 1.0, v2 / v1);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setJobName:", v4);

  objc_msgSend(v3, "setPrinterID:", 0);
  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t sub_1006D2DB8()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  unsigned __int8 v7;
  __int128 v8;
  __int128 v9;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (!v2)
    return 0;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_100842E98(0x656353746E697270, 0xEB0000000073656ELL), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease(v3);
    goto LABEL_8;
  }
  sub_1004CB6E8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_8:
    sub_1004CB800((uint64_t)&v8, &qword_1013E0230);
    return 0;
  }
  result = swift_dynamicCast(&v7, &v8, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((_DWORD)result)
    return v7;
  return result;
}

uint64_t sub_1006D2F14()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unsigned __int8 v7;
  __int128 v8;
  __int128 v9;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (!v2)
    return 1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_100842E98(0xD00000000000001ALL, 0x8000000100FC6120), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease(v3);
    goto LABEL_8;
  }
  sub_1004CB6E8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_8:
    sub_1004CB800((uint64_t)&v8, &qword_1013E0230);
    return 1;
  }
  if (swift_dynamicCast(&v7, &v8, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    return v7;
  return 1;
}

uint64_t sub_1006D3070()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[71] = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  v1[72] = v2;
  v1[73] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[74] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[75] = v4;
  v1[76] = v5;
  return swift_task_switch(sub_1006D3104, v4, v5);
}

uint64_t sub_1006D3104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor);
  *(_QWORD *)(v0 + 616) = v2;
  if (v2 && *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_isPresenting) = 1;
    swift_retain(v2);
    return swift_task_switch(sub_1006D324C, v2, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 592));
    swift_task_dealloc(*(_QWORD *)(v0 + 584));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006D324C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 616);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 624) = v4;
  *v4 = v0;
  v4[1] = sub_1006D32D0;
  return sub_100618D44(v2, v3, 1);
}

uint64_t sub_1006D32D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 624);
  v3[79] = a1;
  v3[80] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1006D3A88;
  else
    v5 = sub_1006D3340;
  return swift_task_switch(v5, v3[75], v3[76]);
}

id sub_1006D3340()
{
  uint64_t v0;
  void *v1;
  id v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  Class isa;
  id v13;
  id v14;
  id result;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(void **)(v0 + 632);
  v2 = objc_allocWithZone((Class)CRLCanvasImager);
  v3 = v1;
  v4 = objc_msgSend(v2, "initWithBoard:", v3);
  *(_QWORD *)(v0 + 648) = v4;
  v5 = *(char **)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v6 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v8 = v5;
  if (!v7)
  {
    sub_100740DA4();
    v7 = *(_QWORD *)&v5[v6];
  }
  if (v7)
    v9 = v7;
  else
    v9 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v41 = v9;
    else
      v41 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    v42 = sub_1004B804C(&qword_1013E0670);
    v11 = _bridgeCocoaArray<A>(_:)(v41, v42);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    swift_bridgeObjectRetain(v7);
    v10 = swift_bridgeObjectRetain(v9);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
    v11 = v9;
  }

  swift_bridgeObjectRelease(v9);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setInfos:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v13 = objc_allocWithZone((Class)CRLPdfTagger);
  v14 = v4;
  result = objc_msgSend(v13, "init");
  *(_QWORD *)(v0 + 656) = result;
  if (result)
  {
    v16 = result;
    v17 = *(void **)(v0 + 632);
    v18 = *(_QWORD *)(v0 + 584);
    v19 = *(_QWORD *)(v0 + 568);

    *(_BYTE *)(v0 + 776) = 1;
    v20 = OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes;
    *(_QWORD *)(v0 + 664) = OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes;
    v21 = *(_QWORD *)(v19 + v20);
    *(_QWORD *)(v0 + 672) = v21;
    v22 = v19 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize;
    *(_QWORD *)(v0 + 680) = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize);
    *(_QWORD *)(v0 + 688) = *(_QWORD *)(v22 + 8);
    *(_QWORD *)(v0 + 696) = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v0 + 704) = *(_QWORD *)(v22 + 24);
    LOBYTE(v22) = *(_BYTE *)(v22 + 32);
    *(_BYTE *)(v0 + 782) = v22;
    *(_BYTE *)(v0 + 768) = v22;
    swift_bridgeObjectRetain_n(v21, 2);
    v23 = v17;
    v24 = v14;
    v25 = v16;
    v26 = v24;
    v27 = objc_msgSend(v26, "canvas");
    v28 = objc_msgSend(v26, "infos");
    objc_msgSend(v27, "setInfosToDisplay:", v28);

    v29 = objc_msgSend(v26, "canvas");
    objc_msgSend(v29, "nonInteractiveLayoutIfNeeded");

    v30 = objc_msgSend(v26, "canvas");
    objc_msgSend(v30, "unscaledRectOfLayouts");
    v32 = v31;
    v34 = v33;

    v35 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v35, v0 + 528, 0, 0);
    sub_1004D48C8(v35, v18);
    v36 = v23;
    v37 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v37);
    v38 = *(_QWORD *)(v0 + 552);
    v39 = *(_QWORD *)(v0 + 560);
    *(_QWORD *)(v0 + 712) = v39;
    sub_1004D490C(v18);

    v40 = (_QWORD *)swift_task_alloc(dword_1013ED2FC);
    *(_QWORD *)(v0 + 720) = v40;
    *v40 = v0;
    v40[1] = sub_1006D36E4;
    return (id)sub_1006D2C9C(v38, v39, v32, v34);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006D36E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 720);
  v4 = *(_QWORD *)(*v1 + 712);
  *(_QWORD *)(*v1 + 728) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_1006D374C, *(_QWORD *)(v2 + 600), *(_QWORD *)(v2 + 608));
}

uint64_t sub_1006D374C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  objc_class *v14;
  id v15;
  _BYTE *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 568) + *(_QWORD *)(v0 + 664));
  if (!v1)
    goto LABEL_4;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v34 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v34 = *(_QWORD *)(*(_QWORD *)(v0 + 568) + *(_QWORD *)(v0 + 664));
    swift_bridgeObjectRetain(v1);
    v35 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v1);
    if (!v35)
      goto LABEL_4;
  }
  else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    sub_1006D13FC(0);
  }
  v38 = *(_BYTE *)(v0 + 782);
  v37 = *(_QWORD *)(v0 + 704);
  v36 = *(_OWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = *(_QWORD *)(v0 + 672);
  v4 = *(void **)(v0 + 656);
  v5 = *(void **)(v0 + 648);
  v6 = *(void **)(v0 + 632);
  v39 = *(void **)(v0 + 728);
  v40 = *(_QWORD *)(v0 + 568);
  sub_1006D13FC(*(_BYTE *)(v40 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_defaultToPrintScenes));
  *(_QWORD *)(v0 + 272) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 280) = v3;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_BYTE *)(v0 + 320) = 1;
  *(_WORD *)(v0 + 321) = 256;
  *(_QWORD *)(v0 + 328) = v2;
  *(_OWORD *)(v0 + 336) = v36;
  *(_QWORD *)(v0 + 352) = v37;
  *(_BYTE *)(v0 + 360) = v38;
  *(_QWORD *)(v0 + 368) = 0;
  *(_QWORD *)(v0 + 376) = v5;
  *(_QWORD *)(v0 + 384) = v4;
  *(_QWORD *)(v0 + 392) = v6;
  v7 = *(_OWORD *)(v0 + 272);
  v8 = *(_OWORD *)(v0 + 288);
  v9 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v7;
  *(_OWORD *)(v0 + 32) = v8;
  v10 = *(_OWORD *)(v0 + 336);
  v11 = *(_OWORD *)(v0 + 352);
  v12 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v10;
  *(_OWORD *)(v0 + 96) = v11;
  sub_1006D3DDC((_QWORD *)(v0 + 272));

  swift_bridgeObjectRelease(v3);
  v13 = objc_msgSend((id)objc_opt_self(UIPrintInteractionController), "sharedPrintController");
  *(_QWORD *)(v0 + 736) = v13;
  v14 = (objc_class *)type metadata accessor for CRLiOSPrintPageRenderer();
  objc_allocWithZone(v14);
  sub_1006D3DDC((_QWORD *)(v0 + 272));
  v15 = v39;
  v16 = sub_1008AE3B8((_OWORD *)(v0 + 16), v15);

  sub_1006D3E20(v0 + 272);
  objc_msgSend(v13, "setPrintInfo:", v15);
  objc_msgSend(v13, "setPrintPageRenderer:", v16);
  objc_msgSend(v13, "setDelegate:", v40);
  if ((sub_1006D2DB8() & 1) != 0)
  {
    v17 = objc_msgSend(v13, "printInfo");
    if (v17)
    {
      v18 = v17;
      sub_1008AE134();
      objc_msgSend(v18, "setOrientation:", v19);

    }
  }
  v20 = *(_QWORD *)(v0 + 568);

  sub_1006D3E20(v0 + 272);
  v21 = *(void **)(v20 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController);
  *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController) = v13;
  v22 = v13;

  v23 = objc_msgSend(v22, "printPageRenderer");
  if (v23)
  {
    v24 = v23;
    v25 = swift_dynamicCastClass(v23, v14);
    if (v25)
    {
      v26 = (void *)v25;
      v27 = *(void **)(v0 + 728);
      v28 = *(_QWORD *)(v0 + 568);
      objc_allocWithZone((Class)type metadata accessor for CRLiOSPrintOptionsViewController());
      v29 = v27;
      v30 = v24;
      v31 = sub_1009FB1FC(v29, v26);
      v24 = *(void **)(v28 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController);
      *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController) = v31;

    }
  }
  v32 = (_QWORD *)swift_task_alloc(dword_1013ED27C);
  *(_QWORD *)(v0 + 744) = v32;
  *v32 = v0;
  v32[1] = sub_1006D3AD0;
  return sub_1006D186C();
}

uint64_t sub_1006D3A88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 616);
  swift_release(*(_QWORD *)(v0 + 592));
  swift_release(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 584));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D3AD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 744);
  v3[94] = a1;
  v3[95] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1006D3CB8;
  else
    v5 = sub_1006D3B48;
  return swift_task_switch(v5, v3[75], v3[76]);
}

uint64_t sub_1006D3B48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  char v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 752);
  swift_release(*(_QWORD *)(v0 + 592));
  v2 = *(void **)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 616);
  if (v1)
  {
    v4 = *(id *)(v0 + 752);
    v5 = sub_1006D2DB8();
    sub_1006D13FC(v5 & 1);

    v6 = v4;
    sub_1006D163C();

  }
  swift_release(v3);
  v7 = *(void **)(v0 + 736);
  v8 = *(_QWORD *)(v0 + 704);
  v9 = *(_QWORD *)(v0 + 680);
  v10 = *(_QWORD *)(v0 + 672);
  v15 = *(_QWORD *)(v0 + 656);
  v11 = *(_QWORD *)(v0 + 648);
  v12 = *(void **)(v0 + 632);
  v14 = *(_OWORD *)(v0 + 688);

  *(_QWORD *)(v0 + 400) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 408) = v10;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_BYTE *)(v0 + 448) = *(_BYTE *)(v0 + 776);
  *(_WORD *)(v0 + 449) = 256;
  *(_DWORD *)(v0 + 451) = *(_DWORD *)(v0 + 777);
  *(_BYTE *)(v0 + 455) = *(_BYTE *)(v0 + 781);
  *(_QWORD *)(v0 + 456) = v9;
  *(_OWORD *)(v0 + 464) = v14;
  *(_QWORD *)(v0 + 480) = v8;
  *(_BYTE *)(v0 + 488) = *(_BYTE *)(v0 + 768);
  *(_DWORD *)(v0 + 492) = *(_DWORD *)(v0 + 772);
  *(_DWORD *)(v0 + 489) = *(_DWORD *)(v0 + 769);
  *(_QWORD *)(v0 + 496) = 0;
  *(_QWORD *)(v0 + 504) = v11;
  *(_QWORD *)(v0 + 512) = v15;
  *(_QWORD *)(v0 + 520) = v12;
  sub_1006D3E20(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 584));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D3CB8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v1 = *(void **)(v0 + 736);
  v2 = *(void **)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 696);
  v5 = *(_QWORD *)(v0 + 672);
  v6 = *(void **)(v0 + 632);
  v7 = *(_QWORD *)(v0 + 616);
  v8 = *(_QWORD *)(v0 + 592);
  v10 = *(_OWORD *)(v0 + 680);
  v11 = *(_OWORD *)(v0 + 648);

  swift_release(v8);
  swift_release(v7);
  *(_QWORD *)(v0 + 144) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + 152) = v5;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_BYTE *)(v0 + 192) = *(_BYTE *)(v0 + 776);
  *(_WORD *)(v0 + 193) = 256;
  *(_DWORD *)(v0 + 195) = *(_DWORD *)(v0 + 777);
  *(_BYTE *)(v0 + 199) = *(_BYTE *)(v0 + 781);
  *(_OWORD *)(v0 + 200) = v10;
  *(_QWORD *)(v0 + 216) = v4;
  *(_QWORD *)(v0 + 224) = v3;
  *(_BYTE *)(v0 + 232) = *(_BYTE *)(v0 + 768);
  *(_DWORD *)(v0 + 236) = *(_DWORD *)(v0 + 772);
  *(_DWORD *)(v0 + 233) = *(_DWORD *)(v0 + 769);
  *(_QWORD *)(v0 + 240) = 0;
  *(_OWORD *)(v0 + 248) = v11;
  *(_QWORD *)(v0 + 264) = v6;
  sub_1006D3E20(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 584));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1006D3DDC(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = (void *)a1[13];
  v3 = (void *)a1[14];
  v4 = (void *)a1[15];
  swift_bridgeObjectRetain(a1[1]);
  v5 = v2;
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t sub_1006D3E20(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 104);
  v4 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease(v2);
  return a1;
}

void sub_1006D3E68(uint64_t a1)
{
  uint64_t v1;

  sub_1006D1B84(a1, *(char **)(v1 + 16));
}

uint64_t sub_1006D3E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013ED308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006D3EB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1006D3EDC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1006D1D10(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1006D3EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006D3EF4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006D3EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013ED308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1006D3F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  double result;
  _QWORD v28[3];
  _QWORD v29[4];

  v4 = v3;
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v10, &qword_1013E01F0);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013E01F0);
    v14 = 12544;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v15);
      swift_unknownObjectRetain(v15);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v14 = v21 | 0x3100;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = *v4;
  v23 = type metadata accessor for _AppExtensionIdentity(0);
  v24 = (_QWORD *)(v20 | v18);
  if (v20 | v18)
  {
    v29[0] = 0;
    v29[1] = 0;
    v24 = v29;
    v29[2] = v18;
    v29[3] = v20;
  }
  v28[0] = 1;
  v28[1] = v24;
  v28[2] = v22;
  v25 = swift_task_create(v14, v28, v23, a2);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t sub_1006D40D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v0 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TaskPriority(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  v5 = swift_allocObject(&unk_101278278, 32, 7);
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v2, &qword_1013E01F0);
    v8 = 0;
    v9 = 0;
    v10 = 7168;
  }
  else
  {
    v11 = TaskPriority.rawValue.getter(v7);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    v10 = v11 | 0x1C00;
    v12 = *v6;
    if (*v6)
    {
      v13 = *(_QWORD *)(v5 + 24);
      ObjectType = swift_getObjectType(*v6);
      swift_unknownObjectRetain(v12);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v9 = v15;
      swift_unknownObjectRelease(v12);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v16 = type metadata accessor for _AppExtensionIdentity(0);
  if (v9 | v8)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v8;
    v19[3] = v9;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v10, v17, v16, &unk_1013ED648);
}

uint64_t sub_1006D426C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1006D4284, 0, 0);
}

uint64_t sub_1006D4284()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for _AppExtensionIdentity(0);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_1006D4304;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(*(_QWORD *)(v0 + 16), v1, v1, 0, 0, &unk_1013ED658, 0, v1);
}

uint64_t sub_1006D4304()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1006D4370, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1006D4370()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D437C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013ED660) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[4] = swift_task_alloc(v3);
  v2[5] = swift_task_alloc(v3);
  v4 = sub_1004B804C(&qword_1013E01F0);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006D440C, 0, 0);
}

uint64_t sub_1006D440C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[6];
  v2 = type metadata accessor for TaskPriority(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v4 = swift_allocObject(&unk_1012782A0, 49, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0xD000000000000016;
  *(_QWORD *)(v4 + 40) = 0x8000000100FC6400;
  *(_BYTE *)(v4 + 48) = 5;
  sub_1006D3F44(v1, (uint64_t)&unk_1013ED670, v4);
  sub_1004CB800(v1, &qword_1013E01F0);
  v3(v1, 1, 1, v2);
  v5 = swift_allocObject(&unk_1012782C8, 32, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_1006D3F44(v1, (uint64_t)&unk_1013ED680, v5);
  sub_1004CB800(v1, &qword_1013E01F0);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
  v0[7] = v6;
  v7 = sub_1004B804C(&qword_1013ED688);
  *v6 = v0;
  v6[1] = sub_1006D4568;
  return ThrowingTaskGroup.next(isolation:)(v0[5], 0, 0, v7);
}

uint64_t sub_1006D4568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1006D475C;
  else
    v3 = sub_1006D45CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006D45CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = type metadata accessor for _AppExtensionIdentity(0);
  sub_1004B804C(&qword_1013E0210);
  ThrowingTaskGroup.cancelAll()();
  sub_1004CB7BC(v1, v2, &qword_1013ED660);
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 40);
    sub_1004CB800(*(_QWORD *)(v0 + 32), &qword_1013ED660);
    v6 = sub_100694FA8();
    swift_allocError(&type metadata for CRLUSDRendering.RendererError, v6, 0, 0);
    *(_QWORD *)v7 = 0xD000000000000016;
    *(_QWORD *)(v7 + 8) = 0x8000000100FC6400;
    *(_BYTE *)(v7 + 16) = 5;
    swift_willThrow(v8);
    sub_1004CB800(v5, &qword_1013ED660);
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    sub_1004CB800(v12, &qword_1013ED660);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v14, v13, v3);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D475C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D47AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v6 + 328) = a6;
  *(_QWORD *)(v6 + 160) = a4;
  *(_QWORD *)(v6 + 168) = a5;
  *(_QWORD *)(v6 + 152) = a1;
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013ED660) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 176) = swift_task_alloc(v7);
  *(_QWORD *)(v6 + 184) = swift_task_alloc(v7);
  v8 = type metadata accessor for _AppExtensionQuery.Results.AsyncIterator(0);
  *(_QWORD *)(v6 + 192) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 200) = v9;
  *(_QWORD *)(v6 + 208) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for _AppExtensionQuery.Results(0);
  *(_QWORD *)(v6 + 216) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 224) = v11;
  *(_QWORD *)(v6 + 232) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for _AppExtensionQuery(0);
  *(_QWORD *)(v6 + 240) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 248) = v13;
  *(_QWORD *)(v6 + 256) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006D4898, 0, 0);
}

uint64_t sub_1006D4898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = _AppExtensionQuery.init(extensionPointIdentifier:)(0xD000000000000029, 0x8000000100FC6460);
  v2 = _AppExtensionQuery.results.getter(v1);
  _AppExtensionQuery.Results.makeAsyncIterator()(v2);
  v3 = sub_1004B7878(&qword_1013ED690, (uint64_t (*)(uint64_t))&type metadata accessor for _AppExtensionQuery.Results.AsyncIterator, (uint64_t)&protocol conformance descriptor for _AppExtensionQuery.Results.AsyncIterator);
  v0[33] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[34] = v4;
  *v4 = v0;
  v4[1] = sub_1006D4964;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v0[24], v3);
}

uint64_t sub_1006D4964()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 272));
  if (v0)
  {
    *(_QWORD *)(v2 + 312) = v0;
    v3 = sub_1006D4C48;
  }
  else
  {
    *(_QWORD *)(v2 + 280) = 0;
    v3 = sub_1006D49CC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006D49CC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 136);
  return swift_task_switch(sub_1006D49E8, 0, 0);
}

uint64_t sub_1006D49E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (*(_QWORD *)(v0 + 288))
  {
    v1 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 296) = static MainActor.shared.getter(v1);
    v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    return swift_task_switch(sub_1006D4BD4, v2, v3);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    v6 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 168);
    v7 = *(_BYTE *)(v0 + 328);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 88, 0, 0);
    v8 = (id)static OS_os_log.crlThreeDimensionalObjects;
    v9 = static os_log_type_t.error.getter(v8);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v9, "(QueryExtension) unable to find extension", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

    v10 = sub_100694FA8();
    swift_allocError(&type metadata for CRLUSDRendering.RendererError, v10, 0, 0);
    *(_QWORD *)v11 = v6;
    *(_QWORD *)(v11 + 8) = v5;
    *(_BYTE *)(v11 + 16) = v7;
    sub_100689D34(v6, v5, v7);
    swift_willThrow(v12);
    v14 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v16, *(_QWORD *)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc(v13);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006D4BD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = v0[36];
  v2 = v0[35];
  v3 = v0[23];
  swift_release(v0[37]);
  sub_1006D5118(v1, v3);
  v0[38] = v2;
  swift_bridgeObjectRelease(v0[36]);
  if (v2)
    v4 = sub_1006D5004;
  else
    v4 = sub_1006D4D54;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1006D4C48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 312);
  v1 = sub_1004B804C(&qword_1013E0210);
  swift_willThrowTypedImpl(v0 + 144, v1, &protocol self-conformance witness table for Error);
  return swift_task_switch(sub_1006D4CA8, 0, 0);
}

uint64_t sub_1006D4CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v4, *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D4D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 176);
  sub_1004CB7BC(*(_QWORD *)(v0 + 184), v1, &qword_1013ED660);
  v2 = type metadata accessor for _AppExtensionIdentity(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 176);
    sub_1004CB800(*(_QWORD *)(v0 + 184), &qword_1013ED660);
    sub_1004CB800(v4, &qword_1013ED660);
    v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 320) = v5;
    *v5 = v0;
    v5[1] = sub_1006D50B0;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 136, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 264));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176), v2);
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 232);
    v25 = *(_QWORD *)(v0 + 248);
    v26 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 208);
    v23 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 176);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 112, 0, 0);
    v11 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v14 = v11;
    v15 = _AppExtensionIdentity.bundleIdentifier.getter();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v17;
    v19 = static os_log_type_t.debug.getter(v18);
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v19, "(QueryExtension) using extension: %{public}@", 44, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v20);

    sub_1004CB800(v10, &qword_1013ED660);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v9, v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v8, v24);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v7, v26);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006D5004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v4, *(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D50B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 320));
  if (v0)
  {
    *(_QWORD *)(v2 + 312) = v0;
    v3 = sub_1006D4C48;
  }
  else
  {
    *(_QWORD *)(v2 + 280) = 0;
    v3 = sub_1006D49CC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006D5118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  int64_t v20;
  id v21;
  int64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  unint64_t v29;
  unint64_t v30;
  double *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *, char *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __n128 v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  int64_t v71;
  char *v72;
  char *v73;
  uint64_t (*v74)(char *, uint64_t, char *);
  void (*v75)(char *, unint64_t, char *, __n128);
  char *v76;
  uint64_t v77;
  char v78[72];
  char v79[48];
  char v80[8];
  double *v81;

  v5 = sub_1004B804C(&qword_1013ED660);
  __chkstk_darwin(v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for _AppExtensionIdentity(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - v13;
  result = static Task<>.checkCancellation()(v15);
  if (v2)
    return result;
  v77 = v9;
  v72 = v7;
  v65 = 0;
  v76 = (char *)v8;
  if (qword_1013DD7E8 != -1)
    goto LABEL_32;
  while (1)
  {
    v73 = v11;
    v66 = a2;
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v80, 0, 0);
    v17 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v79);
    v70 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v67 = (_QWORD *)inited;
    v68 = inited + 32;
    v20 = *(_QWORD *)(a1 + 16);
    v69 = a1;
    v71 = v20;
    if (v20)
    {
      v63 = v18;
      v81 = _swiftEmptyArrayStorage;
      v64 = v17;
      v21 = v17;
      sub_1006006EC(0, v20, 0);
      a1 += (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      v75 = *(void (**)(char *, unint64_t, char *, __n128))(v77 + 72);
      v74 = *(uint64_t (**)(char *, uint64_t, char *))(v77 + 16);
      v22 = v20;
      do
      {
        v23 = v76;
        v24 = v74(v14, a1, v76);
        v25 = _AppExtensionIdentity.bundleIdentifier.getter(v24);
        v27 = v26;
        (*(void (**)(char *, char *))(v77 + 8))(v14, v23);
        v28 = v81;
        if ((swift_isUniquelyReferenced_nonNull_native(v81) & 1) == 0)
        {
          sub_1006006EC(0, *((_QWORD *)v28 + 2) + 1, 1);
          v28 = v81;
        }
        v30 = *((_QWORD *)v28 + 2);
        v29 = *((_QWORD *)v28 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_1006006EC(v29 > 1, v30 + 1, 1);
          v28 = v81;
        }
        *((_QWORD *)v28 + 2) = v30 + 1;
        v31 = &v28[2 * v30];
        *((_QWORD *)v31 + 4) = v25;
        *((_QWORD *)v31 + 5) = v27;
        a1 += (uint64_t)v75;
        --v22;
      }
      while (v22);
      v20 = v71;
      v17 = v64;
      v18 = v63;
    }
    else
    {
      v32 = v17;
      v28 = _swiftEmptyArrayStorage;
    }
    v81 = v28;
    v33 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v34 = sub_100500464();
    v35 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v33, v34);
    v37 = v36;
    swift_bridgeObjectRelease(v28);
    v38 = v67;
    v67[7] = &type metadata for String;
    v38[8] = sub_1004CFC2C();
    v38[4] = v35;
    v38[5] = v37;
    v40 = static os_log_type_t.debug.getter(v39);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v40, "(QueryExtension) found extensions: [%{public}@]", 47, 2, (uint64_t)v38);
    swift_setDeallocating(v38);
    v41 = v38[2];
    v42 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v68, v41, v42);

    v43 = swift_initStackObject(v18, v78);
    v44 = v43;
    *(_OWORD *)(v43 + 16) = v70;
    *(_QWORD *)(v43 + 56) = &type metadata for Int;
    *(_QWORD *)(v43 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v43 + 32) = v20;
    if (v20 == 1)
    {
      swift_bridgeObjectRelease(v43);
      v14 = v76;
      v45 = v69;
      v46 = v72;
      a2 = v77;
      goto LABEL_15;
    }
    a1 = 62;
    sub_100757E04(&_mh_execute_header, (uint64_t)"findExtensionIdentity()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRendererExtensionShared.swift", 133, 2, 55, "Unexpectedly found %d extension identities. Using first found.", 62, 2u, v43);
    sub_1004F5394(v44, (uint64_t)"findExtensionIdentity()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRendererExtensionShared.swift", 133, 2u, 55, (uint64_t)"Unexpectedly found %d extension identities. Using first found.", 62, 2u);
    swift_bridgeObjectRelease(v44);
    v14 = v76;
    v45 = v69;
    v46 = v72;
    a2 = v77;
    if (!v20)
      break;
LABEL_15:
    v47 = v45 + ((*(unsigned __int8 *)(a2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a2 + 80));
    v74 = *(uint64_t (**)(char *, uint64_t, char *))(a2 + 72);
    v75 = *(void (**)(char *, unint64_t, char *, __n128))(a2 + 16);
    v48 = swift_bridgeObjectRetain(v45);
    v49 = 0;
    v11 = "identities. Using first found.";
    *(_QWORD *)&v70 = 0x8000000100FC6610;
    while (1)
    {
      v75(v46, v47, v14, v48);
      v50 = v49 + 1;
      if (__OFADD__(v49, 1))
        break;
      a1 = *(_QWORD *)(a2 + 56);
      ((void (*)(char *, _QWORD, uint64_t, char *))a1)(v46, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, char *))(a2 + 48))(v46, 1, v14) == 1)
        goto LABEL_28;
      v51 = *(uint64_t (**)(char *, char *, char *))(a2 + 32);
      v52 = v51(v73, v46, v14);
      v53 = _AppExtensionIdentity.bundleIdentifier.getter(v52);
      v55 = v54;
      if (v53 == 0xD000000000000027 && v54 == (_QWORD)v70)
      {
        swift_bridgeObjectRelease(v69);
        v58 = swift_bridgeObjectRelease(0x8000000100FC6610);
LABEL_25:
        v59 = v66;
        ((void (*)(uint64_t, char *, char *, __n128))v51)(v66, v73, v14, v58);
        v60 = v59;
        v61 = 0;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))a1)(v60, v61, 1, v14);
      }
      v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, 0xD000000000000027, 0x8000000100FC6610, 0);
      v57 = swift_bridgeObjectRelease(v55);
      if ((v56 & 1) != 0)
      {
        v58 = swift_bridgeObjectRelease(v69);
        v14 = v76;
        goto LABEL_25;
      }
      a2 = v77;
      v14 = v76;
      (*(void (**)(char *, char *, __n128))(v77 + 8))(v73, v76, v57);
      ++v49;
      v47 += (unint64_t)v74;
      v46 = v72;
      if (v50 == v71)
        goto LABEL_27;
    }
    __break(1u);
LABEL_32:
    swift_once(&qword_1013DD7E8, sub_100A04074);
  }
  a1 = *(_QWORD *)(v77 + 56);
  v48 = swift_bridgeObjectRetain(v69);
LABEL_27:
  ((void (*)(char *, uint64_t, uint64_t, char *, __n128))a1)(v46, 1, 1, v14, v48);
LABEL_28:
  swift_bridgeObjectRelease(v69);
  v60 = v66;
  v61 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))a1)(v60, v61, 1, v14);
}

uint64_t sub_1006D57FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1006D584C;
  return static Task<>.sleep(nanoseconds:)(2000000000);
}

uint64_t sub_1006D584C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_1006D58B8, 0, 0);
}

uint64_t sub_1006D58B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = *(_QWORD *)(v1 + 48);
  static Task<>.checkCancellation()(a1);
  if (!v2)
  {
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v1 + 16, 0, 0);
    v3 = (id)static OS_os_log.crlThreeDimensionalObjects;
    v5 = static os_log_type_t.debug.getter(v4);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "(QueryExtension) timed out looking for extension", 48, 2, (uint64_t)_swiftEmptyArrayStorage);

    v6 = sub_100694FA8();
    swift_allocError(&type metadata for CRLUSDRendering.RendererError, v6, 0, 0);
    *(_QWORD *)v7 = 0;
    *(_QWORD *)(v7 + 8) = 0;
    *(_BYTE *)(v7 + 16) = 6;
    swift_willThrow(v8);
  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1006D59B4(uint64_t a1)
{
  return sub_1006D59EC(a1, (uint64_t (*)(_QWORD))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init(), &qword_10147F240);
}

uint64_t sub_1006D59D0(uint64_t a1)
{
  return sub_1006D59EC(a1, (uint64_t (*)(_QWORD))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init(), &qword_10147F248);
}

uint64_t sub_1006D59EC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;

  v6 = a2(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  result = a3();
  *a4 = result;
  return result;
}

id sub_1006D5A34(uint64_t a1)
{
  return sub_1006D5A5C(a1, &protocolRef__CRLUSDAsyncRenderingDelegateXPC, &qword_10147F250);
}

id sub_1006D5A48(uint64_t a1)
{
  return sub_1006D5A5C(a1, &protocolRef__CRLUSDAsyncRenderingXPC, &qword_10147F258);
}

id sub_1006D5A5C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSXPCInterface), "interfaceWithProtocol:", *a2);
  *a3 = result;
  return result;
}

id sub_1006D5AA4()
{
  id v0;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(NSXPCInterface), "interfaceWithProtocol:", &OBJC_PROTOCOL___CRLUSDRenderingExtensionAPIEndpointProtocol);
  if (qword_1013DCF58 != -1)
    swift_once(&qword_1013DCF58, sub_1006D5A34);
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", qword_10147F250, "makeCoreRERendererProxyForUUID:delegateProxy:flags:response:", 1, 0);
  if (qword_1013DCF60 != -1)
    swift_once(&qword_1013DCF60, sub_1006D5A48);
  result = objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", qword_10147F258, "makeCoreRERendererProxyForUUID:delegateProxy:flags:response:", 0, 1);
  qword_10147F260 = (uint64_t)v0;
  return result;
}

uint64_t sub_1006D5B98(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  v35 = a3;
  v32 = a2;
  v4 = sub_1004B804C(&qword_1013ED7A8);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  __chkstk_darwin(v4);
  v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013ED7B0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013ED7B8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013ED7C0);
  v36 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v16 = a1[4];
  sub_1004BB5A4(a1, v17);
  v18 = sub_1006DD214();
  v19 = v16;
  v20 = v35;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys, v18, v17, v19);
  if (!v20)
  {
    v37 = 0;
    v22 = sub_1006DD2E0();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys, &v37, v13, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys, v22);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v13);
  }
  if (v20 == 1)
  {
    v38 = 1;
    v21 = sub_1006DD29C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys, &v38, v13, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys, v21);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v13);
  }
  v39 = 2;
  v24 = sub_1006DD258();
  v25 = v31;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys, &v39, v13, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys, v24);
  v26 = v34;
  KeyedEncodingContainer.encode(_:forKey:)(v32, v20, v27, v34);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v13);
}

unint64_t sub_1006D5E40()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656E6E6F63736964;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_1006D5EA8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1006DAF10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006D5ECC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD214();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006D5EF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD214();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006D5F1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD29C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006D5F44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD29C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006D5F6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD258();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006D5F94(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD258();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006D5FBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD2E0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006D5FE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006DD2E0();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_1006D600C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1006DB074(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1006D6034(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1006D5B98(a1, *v1, v1[1]);
}

Swift::Int sub_1006D604C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v5, 0);
  if (v2)
  {
    if (v2 != 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)(v5, v1, v2);
      return Hasher._finalize()();
    }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_1006D60C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt v4;
  uint64_t v5;

  v3 = v1[1];
  if (!v3)
  {
    v4 = 0;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    v4 = 1;
LABEL_5:
    Hasher._combine(_:)(v4);
    return;
  }
  v5 = *v1;
  Hasher._combine(_:)(2uLL);
  String.hash(into:)(a1, v5, v3);
}

Swift::Int sub_1006D613C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v6, a1);
  if (v3)
  {
    if (v3 != 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)(v6, v2, v3);
      return Hasher._finalize()();
    }
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

uint64_t sub_1006D61B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return !v4;
  if (v3 == 1)
    return v4 == 1;
  if (v4 < 2)
    return 0;
  v6 = *a1;
  if (v6 != *a2 || v3 != v4)
    return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v3, *a2, v4, 0);
  return 1;
}

void sub_1006D6214(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1)
  {
    swift_errorRetain(a1);
    v2 = (void *)_convertErrorToNSError(_:)(a1);
    v3 = sub_1009591F4(v2);
    if (v5 == -1)
    {
      v15 = a1;
      v14 = sub_1004B804C(&qword_1013EB680);
      CheckedContinuation.resume(throwing:)(&v15, v14);
    }
    else
    {
      v6 = v3;
      v7 = v4;
      v8 = v5;
      v9 = sub_100694FA8();
      v10 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v9, 0, 0);
      *(_QWORD *)v11 = v6;
      *(_QWORD *)(v11 + 8) = v7;
      *(_BYTE *)(v11 + 16) = v8;
      v15 = v10;
      v12 = sub_1004B804C(&qword_1013EB680);
      CheckedContinuation.resume(throwing:)(&v15, v12);
      swift_errorRelease(a1);
    }

  }
  else
  {
    v13 = sub_1004B804C(&qword_1013EB680);
    CheckedContinuation.resume(returning:)(v13, v13);
  }
}

uint64_t sub_1006D6300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v7[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v7[7] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006D6394, v10, v11);
}

uint64_t sub_1006D6394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);
  uint64_t ObjectType;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(void (**)(uint64_t, _QWORD))(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));
  ObjectType = swift_getObjectType(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 0, 1, v6);
  v4(v1, 0);
  sub_1004CB800(v1, (uint64_t *)&unk_1013E1A50);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1006D6498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  void *v12;
  uint64_t v13;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  if (a2)
    v12 = (void *)_convertErrorToNSError(_:)(a2);
  else
    v12 = 0;
  (*(void (**)(uint64_t, Class, void *))(a3 + 16))(a3, isa, v12);

}

uint64_t sub_1006D6598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v8[6] = v14;
  v8[7] = v15;
  v8[4] = a7;
  v8[5] = a8;
  v8[2] = a4;
  v8[3] = a5;
  v9 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v8[8] = v9;
  v8[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v8[10] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v8[11] = v11;
  v8[12] = v12;
  return swift_task_switch(sub_1006D6638, v11, v12);
}

uint64_t sub_1006D6638()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  int *v8;
  _QWORD *v9;
  int *v11;

  if (qword_1013DCF50 != -1)
    swift_once(&qword_1013DCF50, sub_1006D59D0);
  v1 = v0[8];
  v2 = (_QWORD *)v0[9];
  v4 = v0[4];
  v3 = v0[5];
  v5 = sub_1004B7878(&qword_1013ED748, type metadata accessor for CRLUSDRendering.SceneRequest, (uint64_t)&unk_100F1B974);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v2, v1, v4, v3, v1, v5);
  v6 = v0[3];
  ObjectType = swift_getObjectType(v0[2]);
  v8 = *(int **)(v6 + 16);
  v11 = (int *)((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v0[13] = v9;
  *v9 = v0;
  v9[1] = sub_1006D6780;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))v11)(v0[9], ObjectType, v0[3]);
}

uint64_t sub_1006D6780()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  sub_1006DCE5C(v4);
  if (v0)
    v5 = sub_1006D6838;
  else
    v5 = sub_1006D67F4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
}

uint64_t sub_1006D67F4()
{
  uint64_t v0;
  void (*v1)(_QWORD, __n128);
  __n128 v2;

  v1 = *(void (**)(_QWORD, __n128))(v0 + 48);
  v2 = swift_release(*(_QWORD *)(v0 + 80));
  v1(0, v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D6838()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  swift_release(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(void (**)(uint64_t))(v0 + 48);
  swift_errorRetain(v1);
  v2(v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D68AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v8[24] = v13;
  v8[25] = v14;
  v8[22] = a7;
  v8[23] = a8;
  v8[21] = a5;
  v8[11] = a4;
  v9 = type metadata accessor for MainActor(0);
  v8[26] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v8[27] = v10;
  v8[28] = v11;
  return swift_task_switch(sub_1006D692C, v10, v11);
}

uint64_t sub_1006D692C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int128 v6;
  __int128 v7;
  int *v8;
  _QWORD *v9;
  int *v11;

  if (qword_1013DCF50 != -1)
    swift_once(&qword_1013DCF50, sub_1006D59D0);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = sub_1006DCD28();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)((_QWORD *)(v0 + 96), &type metadata for CRLUSDRendering.SceneConfiguration, v1, v2, &type metadata for CRLUSDRendering.SceneConfiguration, v3);
  v4 = *(_QWORD *)(v0 + 168);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 88));
  v6 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 160);
  v7 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 32) = v7;
  v8 = *(int **)(v4 + 24);
  v11 = (int *)((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  *(_QWORD *)(v0 + 232) = v9;
  *v9 = v0;
  v9[1] = sub_1006D6A78;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v11)(v0 + 16, ObjectType, *(_QWORD *)(v0 + 168));
}

uint64_t sub_1006D6A78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1006D6B18;
  else
    v4 = sub_1006D6ADC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

uint64_t sub_1006D6ADC()
{
  uint64_t v0;
  void (*v1)(_QWORD, __n128);
  __n128 v2;

  v1 = *(void (**)(_QWORD, __n128))(v0 + 192);
  v2 = swift_release(*(_QWORD *)(v0 + 208));
  v1(0, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D6B18()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  swift_release(*(_QWORD *)(v0 + 208));
  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(void (**)(uint64_t))(v0 + 192);
  swift_errorRetain(v1);
  v2(v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D6B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v8[7] = v13;
  v8[8] = v14;
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a4;
  v8[4] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[9] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v8[10] = v10;
  v8[11] = v11;
  return swift_task_switch(sub_1006D6C00, v10, v11);
}

uint64_t sub_1006D6C00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  int *v11;

  if (qword_1013DCF50 != -1)
    swift_once(&qword_1013DCF50, sub_1006D59D0);
  v2 = v0[5];
  v1 = v0[6];
  v3 = sub_1004B804C(&qword_1013ED610);
  v4 = sub_1006DCBD0(&qword_1013ED710, (void (*)(void))sub_1006DCC38, (uint64_t)&protocol conformance descriptor for <A> [A]);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v0 + 2, v3, v2, v1, v3, v4);
  v5 = v0[4];
  ObjectType = swift_getObjectType(v0[3]);
  v7 = v0[2];
  v0[12] = v7;
  v8 = *(int **)(v5 + 40);
  v11 = (int *)((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v0[13] = v9;
  *v9 = v0;
  v9[1] = sub_1006D6D54;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v11)(v7, ObjectType, v0[4]);
}

uint64_t sub_1006D6D54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1006D6DFC;
  }
  else
  {
    swift_bridgeObjectRelease(v2[12]);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1006D6DC0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006D6DC0()
{
  uint64_t v0;
  void (*v1)(_QWORD, __n128);
  __n128 v2;

  v1 = *(void (**)(_QWORD, __n128))(v0 + 56);
  v2 = swift_release(*(_QWORD *)(v0 + 72));
  v1(0, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D6DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(void (**)(uint64_t))(v0 + 56);
  swift_errorRetain(v2);
  v3(v2);
  swift_errorRelease(v2);
  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1006D6E74(void *a1, int a2, void *a3, void *aBlock, void (*a5)(uint64_t, unint64_t, id, void *))
{
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;

  v8 = _Block_copy(aBlock);
  v9 = a3;
  v13 = a1;
  v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v12 = v11;

  _Block_copy(v8);
  a5(v10, v12, v13, v8);
  _Block_release(v8);
  _Block_release(v8);
  sub_1004BBBC8(v10, v12);

}

uint64_t sub_1006D6F1C(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  int *v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, float);

  v8[2] = a7;
  v8[3] = a8;
  v12 = type metadata accessor for UTType(0);
  v8[4] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[5] = v13;
  v8[6] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v8[7] = v14;
  v8[8] = static MainActor.shared.getter(v14);
  ObjectType = swift_getObjectType(a5);
  v16 = *(int **)(a6 + 48);
  v19 = (uint64_t (*)(uint64_t, uint64_t, float))((char *)v16 + *v16);
  v17 = (_QWORD *)swift_task_alloc(v16[1]);
  v8[9] = v17;
  *v17 = v8;
  v17[1] = sub_1006D6FE8;
  return v19(ObjectType, a6, a1);
}

uint64_t sub_1006D6FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 72);
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  if (v1)
    v8 = sub_1006D726C;
  else
    v8 = sub_1006D7078;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_1006D7078()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  void *v3;
  CFMutableDataRef Mutable;
  __CFData *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __CFString *v12;
  CGImageDestinationRef v13;
  void (*v14)(uint64_t, unint64_t, _QWORD);
  __CFData *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(_QWORD, unint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_release(*(_QWORD *)(v0 + 64));
  if (!v1)
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD, __n128))(v0 + 16))(0, 0xF000000000000000, 0, v2);
    goto LABEL_11;
  }
  v3 = *(void **)(v0 + 80);
  Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
  {
LABEL_10:
    v19 = sub_100694FA8();
    v20 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v19, 0, 0);
    *(_QWORD *)v21 = 0xD000000000000019;
    *(_QWORD *)(v21 + 8) = 0x8000000100FC6700;
    *(_BYTE *)(v21 + 16) = 0;
    swift_willThrow(v22);

    v23 = *(void (**)(_QWORD, unint64_t, uint64_t))(v0 + 16);
    swift_errorRetain(v20);
    v23(0, 0xF000000000000000, v20);
    swift_errorRelease(v20);
    swift_errorRelease(v20);
    goto LABEL_11;
  }
  v5 = Mutable;
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = static UTType.png.getter();
  UTType.identifier.getter(v9);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v12 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = CGImageDestinationCreateWithData(v5, v12, 1uLL, 0);

  if (!v13)
  {
    v13 = v5;
LABEL_9:

    goto LABEL_10;
  }
  CGImageDestinationAddImage(v13, (CGImageRef)v3, 0);
  if (!CGImageDestinationFinalize(v13))
  {

    goto LABEL_9;
  }
  v14 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 16);
  v15 = v5;
  v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v18 = v17;

  sub_1004BE310(v16, v18);
  v14(v16, v18, 0);
  sub_1004BBBC8(v16, v18);
  sub_1004BBBC8(v16, v18);

LABEL_11:
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D726C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, unint64_t, uint64_t);

  swift_release(*(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void (**)(_QWORD, unint64_t, uint64_t))(v0 + 16);
  swift_errorRetain(v1);
  v2(0, 0xF000000000000000, v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererReceiverProxy()
{
  return objc_opt_self(_TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy);
}

uint64_t sub_1006D73A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[6] = a1;
  v2[7] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v5);
  v2[11] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v2[12] = v6;
  v2[13] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[14] = v7;
  v2[15] = v8;
  return swift_task_switch(sub_1006D7448, v7, v8);
}

uint64_t sub_1006D7448()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[8];
  v4 = v0[9];
  v5 = v0[6];
  v6 = v0[7];
  *(_QWORD *)(v6 + 16) = v5;
  swift_unknownObjectRetain(v5);
  UUID.init()(v7);
  v8 = OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid;
  v0[16] = OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v6 + v8, v2, v3);
  v0[5] = v6;
  v0[17] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[18] = v10;
  v0[19] = v11;
  return swift_task_switch(sub_1006D74F4, v10, v11);
}

uint64_t sub_1006D74F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[20] = v2;
  v3 = (_QWORD *)swift_task_alloc(48);
  v1[21] = v3;
  v3[2] = v1 + 5;
  v3[3] = sub_1006D77C0;
  v3[4] = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v1[22] = v4;
  *v4 = v1;
  v4[1] = sub_1006D75B4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1[10], v2, &protocol witness table for MainActor, 0xD000000000000011, 0x8000000100FC63C0, sub_1006DB560, v3, v1[8]);
}

uint64_t sub_1006D75B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[18];
    v5 = v2[19];
    v6 = sub_1006D7710;
  }
  else
  {
    v7 = v2[21];
    swift_release(v2[20]);
    swift_task_dealloc(v7);
    v4 = v2[18];
    v5 = v2[19];
    v6 = sub_1006D7628;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006D7628()
{
  _QWORD *v0;

  swift_release(v0[17]);
  return swift_task_switch(sub_1006D7660, v0[14], v0[15]);
}

uint64_t sub_1006D7660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 56);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(v2);
  swift_beginAccess(v7 + v1, v0 + 16, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v7 + v1, v4, v5);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1006D7710()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v2 = v0[17];
  swift_release(v0[20]);
  swift_release(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1006D775C, v0[14], v0[15]);
}

uint64_t sub_1006D775C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(v1);
  swift_release(v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1006D77C0(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v4 = sub_1004B804C(&qword_1013EAFF8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_101278228, v10 + v6, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1006DB57C;
  v14 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1006D7AC0;
  aBlock[3] = &unk_101278240;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v8, "getUUID:", v12, swift_release(v14).n128_f64[0]);
  _Block_release(v12);
}

uint64_t sub_1006D78FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - v12;
  sub_1004CB7BC(a1, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    if (a2)
    {
      v21 = a2;
      swift_errorRetain(a2);
    }
    else
    {
      v16 = sub_100694FA8();
      v17 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v16, 0, 0);
      *(_QWORD *)v18 = 0;
      *(_QWORD *)(v18 + 8) = 0;
      *(_BYTE *)(v18 + 16) = 5;
      v21 = v17;
    }
    v19 = sub_1004B804C(&qword_1013EAFF8);
    return CheckedContinuation.resume(throwing:)(&v21, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v14 = sub_1004B804C(&qword_1013EAFF8);
    CheckedContinuation.resume(returning:)(v10, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_1006D7AC0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, void *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  swift_retain(v9);
  v13 = a3;
  v10(v8, a3);
  swift_release(v9);

  return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
}

void sub_1006D7BC0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[5];
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v7 = sub_1004B804C(&qword_1013EB680);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = *a1;
  if (qword_1013DCF48 != -1)
    swift_once(&qword_1013DCF48, sub_1006D59B4);
  v11 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v12 = sub_1004B7878(&qword_1013ED630, type metadata accessor for CRLUSDRendering.SceneRequest, (uint64_t)&unk_100F1B94C);
  v13 = dispatch thunk of JSONEncoder.encode<A>(_:)(a4, v11, v12);
  if (!v4)
  {
    v15 = v13;
    v16 = v14;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1004BBBC8(v15, v16);
    v18 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v7);
    v19 = *(unsigned __int8 *)(v8 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = swift_allocObject(&unk_1012781D8, v20 + v9, v19 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
    aBlock[4] = sub_1006DAF0C;
    v24 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_10053C98C;
    aBlock[3] = &unk_1012781F0;
    v22 = _Block_copy(aBlock);
    objc_msgSend(v10, "loadScene:response:", isa, v22, swift_release(v24).n128_f64[0]);
    _Block_release(v22);

  }
}

void sub_1006D7DA4(void **a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 aBlock;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v7 = sub_1004B804C(&qword_1013EB680);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = *a1;
  v11 = a4[3];
  v26 = a4[2];
  v27 = v11;
  v28 = *((_QWORD *)a4 + 8);
  v12 = a4[1];
  aBlock = *a4;
  v25 = v12;
  if (qword_1013DCF48 != -1)
    swift_once(&qword_1013DCF48, sub_1006D59B4);
  v13 = sub_1006DB504();
  v14 = dispatch thunk of JSONEncoder.encode<A>(_:)(&aBlock, &type metadata for CRLUSDRendering.SceneConfiguration, v13);
  if (!v4)
  {
    v16 = v14;
    v17 = v15;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1004BBBC8(v16, v17);
    v19 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v7);
    v20 = *(unsigned __int8 *)(v8 + 80);
    v21 = (v20 + 16) & ~v20;
    v22 = swift_allocObject(&unk_101278188, v21 + v9, v20 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v22 + v21, (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
    *(_QWORD *)&v26 = sub_1006DAF0C;
    *((_QWORD *)&v26 + 1) = v22;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
    *(_QWORD *)&v25 = sub_10053C98C;
    *((_QWORD *)&v25 + 1) = &unk_1012781A0;
    v23 = _Block_copy(&aBlock);
    objc_msgSend(v10, "updateScene:response:", isa, v23, swift_release(*((_QWORD *)&v26 + 1)).n128_f64[0]);
    _Block_release(v23);

  }
}

uint64_t sub_1006D7F80(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 120) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = v6;
  return swift_task_switch(sub_1006D7FF4, v5, v6);
}

uint64_t sub_1006D7FF4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = sub_1004B804C(&qword_1013EAF60);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 40) = v2;
  *(_QWORD *)(v0 + 72) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  return swift_task_switch(sub_1006D8094, v6, v7);
}

uint64_t sub_1006D8094()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[8];
  v2 = v0[3];
  v3 = swift_task_alloc(32);
  v0[12] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v4 = (_QWORD *)swift_task_alloc(unk_1013EAF54);
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_1006D8138;
  return v6(0xD000000000000012, 0x8000000100FC1760, (uint64_t)sub_1006DD7B4, v3);
}

uint64_t sub_1006D8138()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1006D81A8;
  else
    v5 = sub_1006861F8;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1006D81A8()
{
  _QWORD *v0;

  swift_release(v0[9]);
  return swift_task_switch(sub_1006D81E0, v0[6], v0[7]);
}

uint64_t sub_1006D81E0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_1006D8220(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[5];
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v7 = sub_1004B804C(&qword_1013EB680);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = *a1;
  aBlock[0] = a4;
  if (qword_1013DCF48 != -1)
    swift_once(&qword_1013DCF48, sub_1006D59B4);
  v11 = sub_1004B804C(&qword_1013ED610);
  v12 = sub_1006DCBD0(&qword_1013ED618, (void (*)(void))sub_1006DAEBC, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v13 = dispatch thunk of JSONEncoder.encode<A>(_:)(aBlock, v11, v12);
  if (!v4)
  {
    v15 = v13;
    v16 = v14;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1004BBBC8(v15, v16);
    v18 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v7);
    v19 = *(unsigned __int8 *)(v8 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = swift_allocObject(&unk_101278138, v20 + v9, v19 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
    aBlock[4] = sub_1006DAF0C;
    v24 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_10053C98C;
    aBlock[3] = &unk_101278150;
    v22 = _Block_copy(aBlock);
    objc_msgSend(v10, "performActions:response:", isa, v22, swift_release(v24).n128_f64[0]);
    _Block_release(v22);

  }
}

void sub_1006D840C(void **a1, uint64_t a2, float a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v6 = sub_1004B804C(&qword_1013EAF28);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6, v9);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1012780E8, v12 + v8, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1006DAE4C;
  v17 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1006D86CC;
  aBlock[3] = &unk_101278100;
  v14 = _Block_copy(aBlock);
  v15 = swift_release(v17);
  v15.n128_f32[0] = a3;
  objc_msgSend(v10, "takeSnapshotAt:response:", v14, v15.n128_f64[0]);
  _Block_release(v14);
}

void sub_1006D8558(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  const __CFData *isa;
  CGImageSource *v7;
  CGImageRef ImageAtIndex;
  CGImage *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a2 >> 60 == 15)
  {
    if (a3)
    {
      v16 = a3;
      swift_errorRetain(a3);
      v3 = sub_1004B804C(&qword_1013EAF28);
      CheckedContinuation.resume(throwing:)(&v16, v3);
    }
    else
    {
      v16 = 0;
      v11 = sub_1004B804C(&qword_1013EAF28);
      CheckedContinuation.resume(returning:)(&v16, v11);
    }
  }
  else
  {
    sub_1004BE310(a1, a2);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v7 = CGImageSourceCreateWithData(isa, 0);

    if (v7)
    {
      ImageAtIndex = CGImageSourceCreateImageAtIndex(v7, 0, 0);
      if (ImageAtIndex)
      {
        v16 = (uint64_t)ImageAtIndex;
        v9 = ImageAtIndex;
        v10 = sub_1004B804C(&qword_1013EAF28);
        CheckedContinuation.resume(returning:)(&v16, v10);
        sub_1004BE2FC(a1, a2);

        return;
      }

    }
    v12 = sub_100694FA8();
    v13 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v12, 0, 0);
    *(_QWORD *)v14 = 0xD000000000000019;
    *(_QWORD *)(v14 + 8) = 0x8000000100FC63A0;
    *(_BYTE *)(v14 + 16) = 0;
    v16 = v13;
    v15 = sub_1004B804C(&qword_1013EAF28);
    CheckedContinuation.resume(throwing:)(&v16, v15);
    sub_1004BE2FC(a1, a2);
  }
}

double sub_1006D86CC(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  uint64_t v5;
  void (*v6)(void *, unint64_t, void *);
  id v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  double result;

  v4 = a2;
  v6 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v5);
    v7 = v4;
    v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;

  }
  else
  {
    swift_retain(v5);
    v9 = 0xF000000000000000;
  }
  v10 = a3;
  v6(v4, v9, a3);

  sub_1004BE2FC((uint64_t)v4, v9);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1006D8760()
{
  return sub_1006DAD54(&OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid);
}

uint64_t sub_1006D876C()
{
  return type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(0);
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013ED378, (uint64_t)&nominal type descriptor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy);
}

uint64_t sub_1006D878C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1006D87F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_1006D885C, v4, v5);
}

uint64_t sub_1006D885C()
{
  int8x16_t *v0;
  int8x16_t *v1;
  int8x16_t **v2;
  uint64_t (*v4)(uint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *);

  v1 = (int8x16_t *)swift_task_alloc(32);
  v0[3].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v2 = (int8x16_t **)swift_task_alloc(unk_1013EAF54);
  v0[4].i64[0] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (int8x16_t *)sub_1006D8904;
  return v4(0x6E65635364616F6CLL, 0xED0000293A5F2865, sub_10068E3FC, v1);
}

uint64_t sub_1006D8904()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 56);
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1006DD7E0;
  else
    v5 = sub_10068F0C4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1006D8974(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_1006D89E0, v4, v5);
}

uint64_t sub_1006D89E0()
{
  int8x16_t *v0;
  int8x16_t *v1;
  int8x16_t **v2;
  uint64_t (*v4)(uint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *);

  v1 = (int8x16_t *)swift_task_alloc(32);
  v0[3].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v2 = (int8x16_t **)swift_task_alloc(unk_1013EAF54);
  v0[4].i64[0] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (int8x16_t *)sub_1006D8A88;
  return v4(0x6353657461647075, 0xEF293A5F28656E65, sub_10068E2B0, v1);
}

uint64_t sub_1006D8A88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 56);
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1006D8AF8;
  else
    v5 = sub_10068A8D8;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1006D8AF8()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006D8B2C(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1013ED69C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return sub_1006D7F80(a1, a2);
}

uint64_t sub_1006D8B88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_1006D8BF4, v4, v5);
}

uint64_t sub_1006D8BF4()
{
  int8x16_t *v0;
  int8x16_t *v1;
  int8x16_t **v2;
  uint64_t (*v4)(unint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *);

  v1 = (int8x16_t *)swift_task_alloc(32);
  v0[3].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v4 = (uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v2 = (int8x16_t **)swift_task_alloc(unk_1013EAF54);
  v0[4].i64[0] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (int8x16_t *)sub_1006D8904;
  return v4(0xD000000000000012, 0x8000000100FC1760, sub_10068E118, v1);
}

uint64_t sub_1006D8C94(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  *(float *)(v2 + 80) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  return swift_task_switch(sub_1006D8D04, v4, v5);
}

uint64_t sub_1006D8D04()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(unint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t);

  v1 = *(_DWORD *)(v0 + 80);
  v2 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 48) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_1013EAF20 + dword_1013EAF20);
  v3 = (_QWORD *)swift_task_alloc(unk_1013EAF24);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1006D8DA0;
  return v5(0xD000000000000011, 0x8000000100FC16C0, sub_10068DFFC, v2);
}

uint64_t sub_1006D8DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 56);
  *(_QWORD *)(*(_QWORD *)v2 + 64) = v1;
  swift_task_dealloc(v5);
  v6 = v4[6];
  if (v1)
  {
    swift_task_dealloc(v6);
    v7 = v4[4];
    v8 = v4[5];
    v9 = sub_1006D8E58;
  }
  else
  {
    v4[9] = a1;
    swift_task_dealloc(v6);
    v7 = v4[4];
    v8 = v4[5];
    v9 = sub_1006D8E20;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_1006D8E20()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 72), v1);
}

uint64_t sub_1006D8E58()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006D8E8C(char *a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;

  v32 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate];
  result = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate]);
  if (result)
  {
    v14 = result;
    v31 = *((_QWORD *)v12 + 1);
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v30 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v16(v30, v32, v6);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain(v14);
    v32 = v3;
    v17 = sub_1004BE310(a2, a3);
    v18 = static MainActor.shared.getter(v17);
    v19 = *(unsigned __int8 *)(v7 + 80);
    v20 = (v19 + 48) & ~v19;
    v29 = a3;
    v21 = (v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    v23 = (char *)swift_allocObject(&unk_101278458, v22 + 16, v19 | 7);
    *((_QWORD *)v23 + 2) = v18;
    *((_QWORD *)v23 + 3) = &protocol witness table for MainActor;
    v24 = v30;
    v25 = v31;
    *((_QWORD *)v23 + 4) = v14;
    *((_QWORD *)v23 + 5) = v25;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v23[v20], v24, v6);
    *(_QWORD *)&v23[v21] = v32;
    v26 = (uint64_t *)&v23[v22];
    v27 = v29;
    *v26 = a2;
    v26[1] = v27;
    v28 = sub_100521B98((uint64_t)v11, (uint64_t)&unk_1013ED6E8, (uint64_t)v23);
    swift_release(v28);
    return swift_unknownObjectRelease(v14);
  }
  return result;
}

uint64_t sub_1006D9074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[23] = a8;
  v8[24] = v13;
  v8[21] = a5;
  v8[22] = a6;
  v8[20] = a4;
  v9 = type metadata accessor for MainActor(0);
  v8[25] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006D90F0, v10, v11);
}

uint64_t sub_1006D90F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  swift_release(*(_QWORD *)(v0 + 200));
  if (qword_1013DCF50 != -1)
    swift_once(&qword_1013DCF50, sub_1006D59D0);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = sub_1006DC82C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)((_QWORD *)(v0 + 96), &type metadata for CRLUSDRendering.RendererState, v1, v2, &type metadata for CRLUSDRendering.RendererState, v3);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 160));
  sub_10068EAAC(v0 + 96, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v4, v0 + 16, ObjectType, v5);
  sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D9338(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v44 = a3;
  v45 = a4;
  v43 = a2;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v5[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate];
  result = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate]);
  if (result)
  {
    v16 = result;
    v41 = *((_QWORD *)v14 + 1);
    v17 = type metadata accessor for TaskPriority(0);
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v42 = v13;
    v18(v13, 1, 1, v17);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v39 = v8;
    v40 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v19(v40, a1, v8);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain(v16);
    v38 = v5;
    v21 = v43;
    v20 = v44;
    sub_1004BE310(v43, v44);
    swift_retain(a5);
    v23 = static MainActor.shared.getter(v22);
    v24 = *(unsigned __int8 *)(v9 + 80);
    v37 = a5;
    v25 = (v24 + 48) & ~v24;
    v26 = (v10 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = (char *)swift_allocObject(&unk_101278430, v28 + 16, v24 | 7);
    *((_QWORD *)v29 + 2) = v23;
    *((_QWORD *)v29 + 3) = &protocol witness table for MainActor;
    v30 = v40;
    v31 = v41;
    *((_QWORD *)v29 + 4) = v16;
    *((_QWORD *)v29 + 5) = v31;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v29[v25], v30, v39);
    *(_QWORD *)&v29[v26] = v38;
    v32 = (uint64_t *)&v29[v27];
    *v32 = v21;
    v32[1] = v20;
    v33 = &v29[v28];
    v34 = v37;
    *(_QWORD *)v33 = v45;
    *((_QWORD *)v33 + 1) = v34;
    v35 = sub_100521B98((uint64_t)v42, (uint64_t)&unk_1013ED6D0, (uint64_t)v29);
    swift_release(v35);
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

uint64_t sub_1006D954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 176) = v14;
  *(_OWORD *)(v8 + 160) = v13;
  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 152) = a8;
  *(_QWORD *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 72) = a4;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 184) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 192) = v10;
  *(_QWORD *)(v8 + 200) = v11;
  return swift_task_switch(sub_1006D95D4, v10, v11);
}

uint64_t sub_1006D95D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  int *v6;
  _QWORD *v7;
  int *v9;

  if (qword_1013DCF50 != -1)
    swift_once(&qword_1013DCF50, sub_1006D59D0);
  v1 = v0[19];
  v2 = v0[20];
  v3 = sub_1006DC82C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v0 + 10, &type metadata for CRLUSDRendering.RendererState, v1, v2, &type metadata for CRLUSDRendering.RendererState, v3);
  v4 = v0[17];
  ObjectType = swift_getObjectType(v0[9]);
  sub_10068EAAC((uint64_t)(v0 + 10), (uint64_t)(v0 + 2));
  v6 = *(int **)(v4 + 16);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v0[26] = v7;
  *v7 = v0;
  v7[1] = sub_1006D9718;
  return ((uint64_t (*)(_QWORD, _QWORD *, uint64_t, _QWORD))v9)(v0[18], v0 + 2, ObjectType, v0[17]);
}

uint64_t sub_1006D9718()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[24];
    v5 = v2[25];
    v6 = sub_1006D97C8;
  }
  else
  {
    sub_10068EAE8(v2 + 2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
    v4 = v2[24];
    v5 = v2[25];
    v6 = sub_1006D978C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006D978C()
{
  uint64_t v0;
  void (*v1)(_QWORD, __n128);
  __n128 v2;

  v1 = *(void (**)(_QWORD, __n128))(v0 + 168);
  v2 = swift_release(*(_QWORD *)(v0 + 184));
  v1(0, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D97C8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  swift_release(*(_QWORD *)(v0 + 184));
  sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void (**)(uint64_t))(v0 + 168);
  swift_errorRetain(v1);
  v2(v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D9958(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a6;
  v40 = a7;
  v36 = a4;
  v37 = a5;
  v38 = a2;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v7 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate;
  result = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate);
  if (result)
  {
    v19 = result;
    v35 = *(_QWORD *)(v17 + 8);
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
    type metadata accessor for MainActor(0);
    v34 = a3;
    v36 = v36;
    v37 = v37;
    swift_unknownObjectRetain(v19);
    v21 = v40;
    swift_retain(v40);
    v23 = static MainActor.shared.getter(v22);
    v24 = *(unsigned __int8 *)(v11 + 80);
    v25 = (v24 + 80) & ~v24;
    v26 = (v12 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = (char *)swift_allocObject(&unk_1012783E0, v26 + 16, v24 | 7);
    *((_QWORD *)v27 + 2) = v23;
    *((_QWORD *)v27 + 3) = &protocol witness table for MainActor;
    v28 = v34;
    *((_QWORD *)v27 + 4) = v38;
    *((_QWORD *)v27 + 5) = v28;
    v29 = v37;
    *((_QWORD *)v27 + 6) = v36;
    *((_QWORD *)v27 + 7) = v29;
    v30 = v35;
    *((_QWORD *)v27 + 8) = v19;
    *((_QWORD *)v27 + 9) = v30;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v27[v25], v13, v10);
    v31 = &v27[v26];
    *(_QWORD *)v31 = v39;
    *((_QWORD *)v31 + 1) = v21;
    v32 = sub_100521B98((uint64_t)v16, (uint64_t)&unk_1013ED6C0, (uint64_t)v27);
    swift_release(v32);
    return swift_unknownObjectRelease(v19);
  }
  return result;
}

uint64_t sub_1006D9B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 72) = v14;
  *(_QWORD *)(v8 + 80) = v15;
  *(_OWORD *)(v8 + 56) = v13;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 88) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 96) = v10;
  *(_QWORD *)(v8 + 104) = v11;
  return swift_task_switch(sub_1006D9BE4, v10, v11);
}

uint64_t sub_1006D9BE4()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t ObjectType;
  int *v24;
  _QWORD *v25;
  int *v27;

  v1 = MTLCreateSystemDefaultDevice();
  *(_QWORD *)(v0 + 112) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = *(id *)(v0 + 16);
    if (objc_msgSend(v1, "registryID") == v3)
    {
      v4 = *(void **)(v0 + 32);
      v5 = *(void **)(v0 + 40);
      v6 = *(void **)(v0 + 24);
      swift_unknownObjectRetain(v2);
      v7 = sub_10073F9B0(v2, (char *)v6, (uint64_t)v4, (uint64_t)v5);
      *(_QWORD *)(v0 + 120) = v7;
      *(_QWORD *)(v0 + 128) = v8;
      *(_QWORD *)(v0 + 136) = v9;
      *(_QWORD *)(v0 + 144) = v10;
      v16 = v7;
      v17 = v8;
      v18 = v9;
      v19 = v10;
      v20 = *(_QWORD *)(v0 + 48);
      v21 = *(_QWORD *)(v0 + 56);
      v22 = *(void **)(v0 + 32);

      swift_unknownObjectRelease(v2);
      ObjectType = swift_getObjectType(v20);
      v24 = *(int **)(v21 + 24);
      v27 = (int *)((char *)v24 + *v24);
      v25 = (_QWORD *)swift_task_alloc(v24[1]);
      *(_QWORD *)(v0 + 152) = v25;
      *v25 = v0;
      v25[1] = sub_1006D9DEC;
      return ((uint64_t (*)(_QWORD, id, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v27)(*(_QWORD *)(v0 + 64), v16, v17, v18, v19, ObjectType, *(_QWORD *)(v0 + 56));
    }
    swift_unknownObjectRelease(v2);
  }
  swift_release(*(_QWORD *)(v0 + 88));
  v11 = sub_100694FA8();
  v12 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v11, 0, 0);
  *(_QWORD *)v13 = 0xD00000000000002FLL;
  *(_QWORD *)(v13 + 8) = 0x8000000100FC6670;
  *(_BYTE *)(v13 + 16) = 5;
  swift_willThrow(v14);
  v15 = *(void (**)(uint64_t))(v0 + 72);
  swift_errorRetain(v12);
  v15(v12);
  swift_errorRelease(v12);
  swift_errorRelease(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D9DEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1006D9ED0;
  else
    v4 = sub_1006D9E4C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_1006D9E4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, __n128);
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(void **)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(void (**)(_QWORD, __n128))(v0 + 72);
  v7 = swift_release(*(_QWORD *)(v0 + 88));
  v6(0, v7);
  swift_unknownObjectRelease(v4);
  swift_unknownObjectRelease(v3);
  swift_unknownObjectRelease(v1);

  swift_unknownObjectRelease(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006D9ED0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(void **)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(v4);
  swift_unknownObjectRelease(v3);
  swift_unknownObjectRelease(v1);

  swift_unknownObjectRelease(v5);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(void (**)(uint64_t))(v0 + 72);
  swift_errorRetain(v6);
  v7(v6);
  swift_errorRelease(v6);
  swift_errorRelease(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.RendererDelegateReceiverProxy()
{
  return objc_opt_self(_TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy);
}

uint64_t sub_1006DA0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_1006DA168, v8, v9);
}

uint64_t sub_1006DA168()
{
  int8x16_t *v0;
  uint64_t v1;
  int8x16_t *v2;
  int8x16_t **v3;
  uint64_t (*v5)(unint64_t, unint64_t, uint64_t (*)(void **, uint64_t), int8x16_t *);

  v1 = v0[2].i64[0];
  v2 = (int8x16_t *)swift_task_alloc(48);
  v0[4].i64[0] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t (*)(void **, uint64_t), int8x16_t *))((char *)&dword_1013EB088 + dword_1013EB088);
  v3 = (int8x16_t **)swift_task_alloc(unk_1013EB08C);
  v0[4].i64[1] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (int8x16_t *)sub_1006DA210;
  return v5(0xD00000000000001ELL, 0x8000000100FC1B50, sub_1006DB9F4, v2);
}

uint64_t sub_1006DA210()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 64);
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1006DA2B0;
  else
    v5 = sub_1006DA280;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1006DA280()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006DA2B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006DA2EC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v7;
  NSUUID v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  Class isa;
  uint64_t v17;
  _QWORD v18[8];

  v7 = *a1;
  v8.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  sub_10068EAAC(a5, (uint64_t)v18);
  if (qword_1013DCF48 != -1)
    swift_once(&qword_1013DCF48, sub_1006D59B4);
  v9 = sub_1006DB810();
  v10 = dispatch thunk of JSONEncoder.encode<A>(_:)(v18, &type metadata for CRLUSDRendering.RendererState, v9);
  if (v5)
  {

    v18[0] = v5;
    v12 = sub_1004B804C(&qword_1013EB680);
    return CheckedContinuation.resume(throwing:)(v18, v12);
  }
  else
  {
    v14 = v10;
    v15 = v11;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1004BBBC8(v14, v15);
    objc_msgSend(v7, "rendererStateChanged:state:", v8.super.isa, isa);

    v17 = sub_1004B804C(&qword_1013EB680);
    return CheckedContinuation.resume(returning:)(v17, v17);
  }
}

void sub_1006DA424(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSUUID v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;
  id v27;

  v24 = a2;
  v8 = sub_1004B804C(&qword_1013EB680);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v27 = *a1;
  v11.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  sub_10068EAAC(a5, (uint64_t)aBlock);
  if (qword_1013DCF48 != -1)
    swift_once(&qword_1013DCF48, sub_1006D59B4);
  v12 = sub_1006DB810();
  v13 = dispatch thunk of JSONEncoder.encode<A>(_:)(aBlock, &type metadata for CRLUSDRendering.RendererState, v12);
  if (v5)
  {

  }
  else
  {
    v15 = v13;
    v16 = v14;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1004BBBC8(v15, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v8);
    v18 = *(unsigned __int8 *)(v9 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = swift_allocObject(&unk_101278340, v19 + v10, v18 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20 + v19, (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    aBlock[4] = sub_1006DAF0C;
    v26 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_10053C98C;
    aBlock[3] = &unk_101278358;
    v21 = _Block_copy(aBlock);
    *(_QWORD *)&v22 = swift_release(v26).n128_u64[0];
    objc_msgSend(v27, "rendererStateChangedWithAcknowledge:state:response:", v11.super.isa, isa, v21, v22);
    _Block_release(v21);

  }
}

void sub_1006DA610(id *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  id v14;
  Class isa;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v28 = a6;
  v23 = a5;
  v24 = a2;
  v9 = sub_1004B804C(&qword_1013EB680);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a1;
  *(_QWORD *)&v13 = swift_unknownObjectRetain(a3).n128_u64[0];
  v26 = objc_msgSend(v14, "device", v13);
  v25 = objc_msgSend(v26, "registryID");
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(a4, "newSharedEventHandle");
  v17 = objc_msgSend(v23, "newSharedEventHandle");
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v24, v9);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_1012782F0, v19 + v11, v18 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v20 + v19, v12, v9);
  aBlock[4] = sub_1006DAF0C;
  v30 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_10053C98C;
  aBlock[3] = &unk_101278308;
  v21 = _Block_copy(aBlock);
  *(_QWORD *)&v22 = swift_release(v30).n128_u64[0];
  objc_msgSend(v27, "rendererSharedTextureChangedXPC:deviceID:textureHandle:rendererFrameCountHandle:displayerFrameCountHandle:response:", isa, v25, v28, v16, v17, v21, v22);
  _Block_release(v21);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(v26);

}

uint64_t sub_1006DA7F0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.RendererDelegateSenderProxy()
{
  return objc_opt_self(_TtCO8Freeform29CRLUSDRendererExtensionShared27RendererDelegateSenderProxy);
}

double sub_1006DA834(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = v8 + 15;
  v10 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  type metadata accessor for MainActor(0);
  swift_retain(v3);
  v15 = sub_10068EAE8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689CF4);
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 40) & ~v17;
  v19 = (v9 + v18) & 0xFFFFFFFFFFFFFFF0;
  v20 = (char *)swift_allocObject(&unk_101278390, v19 + 56, v17 | 0xF);
  *((_QWORD *)v20 + 2) = v16;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v18], v10, v6);
  sub_10068EAAC((uint64_t)a2, (uint64_t)&v20[v19]);
  v21 = sub_100521B98((uint64_t)v13, (uint64_t)&unk_1013ED6B0, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1006DA9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[6] = v5;
  v3[7] = v6;
  return swift_task_switch(sub_1006DAA34, v5, v6);
}

uint64_t sub_1006DAA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t v3;
  _QWORD *v4;
  uint64_t (*v6)(unint64_t, unint64_t, void (*)(id *, uint64_t), uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(int8x16_t *)(v0 + 24);
  *(_QWORD *)(v2 + 16) = v1;
  *(int8x16_t *)(v2 + 24) = vextq_s8(v3, v3, 8uLL);
  v6 = (uint64_t (*)(unint64_t, unint64_t, void (*)(id *, uint64_t), uint64_t))((char *)&dword_1013EB088 + dword_1013EB088);
  v4 = (_QWORD *)swift_task_alloc(unk_1013EB08C);
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1006DAADC;
  return v6(0xD00000000000002DLL, 0x8000000100FC1A80, sub_1006DB7F4, v2);
}

uint64_t sub_1006DAADC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 64);
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1006DAB4C;
  else
    v5 = sub_100685F28;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1006DAB4C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006DAB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = type metadata accessor for MainActor(0);
  v6[8] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[9] = v8;
  v6[10] = v9;
  return swift_task_switch(sub_1006DABF4, v8, v9);
}

uint64_t sub_1006DABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 88) = v3;
  v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  *(_QWORD *)(v3 + 56) = v1;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013EB088 + dword_1013EB088);
  v5 = (_QWORD *)swift_task_alloc(unk_1013EB08C);
  *(_QWORD *)(v0 + 96) = v5;
  *v5 = v0;
  v5[1] = sub_1006DACA4;
  return v7(0xD00000000000002CLL, 0x8000000100FC18D0, (uint64_t)sub_1006DB7C8, v3);
}

uint64_t sub_1006DACA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1006DAD14;
  else
    v5 = sub_10068BDE4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_1006DAD14()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006DAD48()
{
  return sub_1006DAD54(&OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared31AsyncRealitySnapshotSenderProxy_uuid);
}

uint64_t sub_1006DAD54(_QWORD *a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  swift_unknownObjectRelease(v1[2]);
  v3 = (char *)v1 + *a1;
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v1, *(unsigned int *)(*v1 + 48), *(unsigned __int16 *)(*v1 + 52));
}

uint64_t sub_1006DADAC()
{
  return type metadata accessor for CRLUSDRendererExtensionShared.AsyncRealitySnapshotSenderProxy(0);
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.AsyncRealitySnapshotSenderProxy(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013ED500, (uint64_t)&nominal type descriptor for CRLUSDRendererExtensionShared.AsyncRealitySnapshotSenderProxy);
}

uint64_t sub_1006DADC8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1006DAE40()
{
  return sub_100634AA4(&qword_1013EAF28);
}

void sub_1006DAE4C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1004B804C(&qword_1013EAF28);
  sub_1006D8558(a1, a2, a3);
}

uint64_t sub_1006DAEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006DAEB4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1006DAEBC()
{
  unint64_t result;

  result = qword_1013ED620;
  if (!qword_1013ED620)
  {
    result = swift_getWitnessTable(&unk_100F1B8BC, &type metadata for CRLUSDRendering.SceneAction);
    atomic_store(result, (unint64_t *)&qword_1013ED620);
  }
  return result;
}

uint64_t sub_1006DAF00()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_1006DAF10(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  char v7;

  if (a1 == 0xD000000000000011)
  {
    v4 = 0x8000000100FC6720;
    if (a2 == 0x8000000100FC6720)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FC6720, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x656E6E6F63736964 && a2 == 0xEC00000064657463)
  {
    v6 = 0xEC00000064657463;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656E6E6F63736964, 0xEC00000064657463, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100FC6740)
  {
    swift_bridgeObjectRelease(0x8000000100FC6740);
    return 2;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FC6740, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_1006DB074(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;

  v44 = sub_1004B804C(&qword_1013ED768);
  v46 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v48 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1004B804C(&qword_1013ED770);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013ED778);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013ED780);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  v49 = a1;
  v14 = sub_1004BB5A4(a1, v12);
  v15 = sub_1006DD214();
  v16 = v50;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys, v15, v12, v13);
  if (!v16)
  {
    v17 = v5;
    v42 = v4;
    v19 = v47;
    v18 = v48;
    v50 = v9;
    v20 = KeyedDecodingContainer.allKeys.getter(v8);
    v21 = v20;
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if (*(_BYTE *)(v20 + 32))
      {
        if (*(_BYTE *)(v20 + 32) == 1)
        {
          v52 = 1;
          v22 = sub_1006DD29C();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys, &v52, v8, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys, v22);
          (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v45);
          v23 = swift_bridgeObjectRelease(v21);
          (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v11, v8, v23);
          v14 = 0;
        }
        else
        {
          v53 = 2;
          v33 = sub_1006DD258();
          v34 = v8;
          v35 = KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys, &v53, v8, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys, v33);
          v38 = v44;
          v14 = (_QWORD *)KeyedDecodingContainer.decode(_:forKey:)(v35, v44);
          v39 = v50;
          (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v38);
          v40 = swift_bridgeObjectRelease(v21);
          (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v11, v34, v40);
        }
      }
      else
      {
        v51 = 0;
        v32 = sub_1006DD2E0();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys, &v51, v8, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys, v32);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v42);
        v37 = swift_bridgeObjectRelease(v21);
        (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v11, v8, v37);
        v14 = 0;
      }
    }
    else
    {
      v14 = v11;
      v24 = type metadata accessor for DecodingError(0);
      swift_allocError(v24, &protocol witness table for DecodingError, 0, 0);
      v25 = v8;
      v26 = v21;
      v28 = v27;
      sub_1004B804C(&qword_1013DF800);
      *v28 = &type metadata for CRLUSDRendererExtensionShared.ExtensionError;
      v29 = KeyedDecodingContainer.codingPath.getter(v25);
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v29, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
      v30.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v24);
      swift_willThrow(v30);
      v31 = swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v11, v25, v31);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v49);
  return v14;
}

unint64_t sub_1006DB504()
{
  unint64_t result;

  result = qword_1013ED628;
  if (!qword_1013ED628)
  {
    result = swift_getWitnessTable(&unk_100F1B54C, &type metadata for CRLUSDRendering.SceneConfiguration);
    atomic_store(result, (unint64_t *)&qword_1013ED628);
  }
  return result;
}

uint64_t sub_1006DB548()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_1006DB554()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_1006DB560(uint64_t a1)
{
  uint64_t v1;

  return sub_10068B78C(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24));
}

uint64_t sub_1006DB570()
{
  return sub_100634AA4(&qword_1013EAFF8);
}

uint64_t sub_1006DB57C(uint64_t a1, uint64_t a2)
{
  sub_1004B804C(&qword_1013EAFF8);
  return sub_1006D78FC(a1, a2);
}

uint64_t sub_1006DB5CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006DB5F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013ED644);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[2] = a1;
  return swift_task_switch(sub_1006D4284, 0, 0);
}

uint64_t sub_1006DB650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1013ED654);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return sub_1006D437C(a1, a2);
}

uint64_t sub_1006DB6A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100689EEC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1006DB6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_1013ED66C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1006D47AC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1006DB758()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1013ED67C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CF80C;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_1006D584C;
  return static Task<>.sleep(nanoseconds:)(2000000000);
}

void sub_1006DB7C8(id *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006DA610(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1006DB7E8()
{
  return sub_100634AA4(&qword_1013EB680);
}

void sub_1006DB7F4(id *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1006DA424(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_1006DB810()
{
  unint64_t result;

  result = qword_1013ED6A0;
  if (!qword_1013ED6A0)
  {
    result = swift_getWitnessTable(L"E7ᇴ!", &type metadata for CRLUSDRendering.RendererState);
    atomic_store(result, &qword_1013ED6A0);
  }
  return result;
}

uint64_t sub_1006DB854()
{
  return sub_100634AA4(&qword_1013EB680);
}

void sub_1006DB860(uint64_t a1)
{
  sub_1004B804C(&qword_1013EB680);
  sub_1006D6214(a1);
}

uint64_t sub_1006DB8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 0xF;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  sub_100689EAC(*(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), *(_QWORD *)(v0 + v6 + 16), *(_QWORD *)(v0 + v6 + 24), *(_QWORD *)(v0 + v6 + 32), *(_QWORD *)(v0 + v6 + 40), *(_QWORD *)(v0 + v6 + 48));
  return swift_deallocObject(v0, v6 + 56, v5);
}

uint64_t sub_1006DB948(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (uint64_t)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_task_alloc(dword_1013ED6AC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_1006DA0F8(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1006DB9F4(void **a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1006DA2EC(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1006DBA10(uint64_t a1)
{
  uint64_t v1;

  sub_100D58EAC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1006DBA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1006DBACC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for UUID(0);
  v3 = v1[4];
  v10 = v1[3];
  v11 = v1[2];
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = (_QWORD *)swift_task_alloc(dword_1013ED6BC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_1006D9B5C(a1, v11, v10, v3, v4, v5, v6, v7);
}

double sub_1006DBBA8(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  int v29;
  Class isa;
  void *v31;
  uint64_t v32;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - v8;
  v10 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1012785C0, 24, 7);
  *(_QWORD *)(v13 + 16) = a2;
  v14 = a1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer);
  if (Strong)
  {
    v16 = Strong;
    v17 = *(_QWORD *)(v14 + 8);
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
    type metadata accessor for MainActor(0);
    _Block_copy(a2);
    swift_retain(v13);
    swift_unknownObjectRetain(v16);
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_1012785E8, 64, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = sub_1006DCE98;
    v21[5] = v13;
    v21[6] = v16;
    v21[7] = v17;
    v22 = sub_100521B98((uint64_t)v12, (uint64_t)&unk_1013ED758, (uint64_t)v21);
    swift_release(v13);
    swift_release(v22);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    v24 = type metadata accessor for UUID(0);
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v9, 1, 1, v24);
    v26 = sub_1006DCA18();
    v27 = swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v26, 0, 0);
    *v28 = xmmword_100F02070;
    sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24);
    _Block_copy(a2);
    isa = 0;
    if (v29 != 1)
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
    }
    v31 = (void *)_convertErrorToNSError(_:)(v27);
    ((void (**)(_QWORD, Class, void *))a2)[2](a2, isa, v31);

    swift_errorRelease(v27);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

double sub_1006DBE58(uint64_t a1, unint64_t a2, char *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  unint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  void *v26;
  uint64_t v27;

  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject(&unk_101278570, 24, 7);
  *(_QWORD *)(v11 + 16) = a4;
  v12 = &a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer];
  Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer]);
  if (Strong)
  {
    v14 = Strong;
    v15 = *((_QWORD *)v12 + 1);
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    type metadata accessor for MainActor(0);
    _Block_copy(a4);
    swift_unknownObjectRetain(v14);
    v17 = a3;
    sub_1004BE310(a1, a2);
    swift_retain(v11);
    v19 = static MainActor.shared.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_101278598, 88, 7);
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v14;
    v20[5] = v15;
    v20[6] = v17;
    v20[7] = a1;
    v20[8] = a2;
    v20[9] = sub_1006DD77C;
    v20[10] = v11;
    v21 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013ED740, (uint64_t)v20);
    swift_release(v11);
    swift_release(v21);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v23 = sub_1006DCA18();
    v24 = swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v23, 0, 0);
    *v25 = xmmword_100F02070;
    _Block_copy(a4);
    v26 = (void *)_convertErrorToNSError(_:)(v24);
    ((void (**)(_QWORD, void *))a4)[2](a4, v26);

    swift_errorRelease(v24);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1006DC068(uint64_t a1, unint64_t a2, char *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  unint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  void *v26;
  uint64_t v27;

  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject(&unk_101278520, 24, 7);
  *(_QWORD *)(v11 + 16) = a4;
  v12 = &a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer];
  Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer]);
  if (Strong)
  {
    v14 = Strong;
    v15 = *((_QWORD *)v12 + 1);
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    type metadata accessor for MainActor(0);
    _Block_copy(a4);
    swift_unknownObjectRetain(v14);
    v17 = a3;
    sub_1004BE310(a1, a2);
    swift_retain(v11);
    v19 = static MainActor.shared.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_101278548, 88, 7);
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v14;
    v20[5] = v15;
    v20[6] = v17;
    v20[7] = a1;
    v20[8] = a2;
    v20[9] = sub_1006DD77C;
    v20[10] = v11;
    v21 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013ED728, (uint64_t)v20);
    swift_release(v11);
    swift_release(v21);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v23 = sub_1006DCA18();
    v24 = swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v23, 0, 0);
    *v25 = xmmword_100F02070;
    _Block_copy(a4);
    v26 = (void *)_convertErrorToNSError(_:)(v24);
    ((void (**)(_QWORD, void *))a4)[2](a4, v26);

    swift_errorRelease(v24);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1006DC278(uint64_t a1, unint64_t a2, char *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  unint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  void *v26;
  uint64_t v27;

  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject(&unk_1012784D0, 24, 7);
  *(_QWORD *)(v11 + 16) = a4;
  v12 = &a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer];
  Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer]);
  if (Strong)
  {
    v14 = Strong;
    v15 = *((_QWORD *)v12 + 1);
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    type metadata accessor for MainActor(0);
    _Block_copy(a4);
    swift_unknownObjectRetain(v14);
    v17 = a3;
    sub_1004BE310(a1, a2);
    swift_retain(v11);
    v19 = static MainActor.shared.getter(v18);
    v20 = (_QWORD *)swift_allocObject(&unk_1012784F8, 88, 7);
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v14;
    v20[5] = v15;
    v20[6] = v17;
    v20[7] = a1;
    v20[8] = a2;
    v20[9] = sub_1006DD77C;
    v20[10] = v11;
    v21 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013ED708, (uint64_t)v20);
    swift_release(v11);
    swift_release(v21);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v23 = sub_1006DCA18();
    v24 = swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v23, 0, 0);
    *v25 = xmmword_100F02070;
    _Block_copy(a4);
    v26 = (void *)_convertErrorToNSError(_:)(v24);
    ((void (**)(_QWORD, void *))a4)[2](a4, v26);

    swift_errorRelease(v24);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

double sub_1006DC488(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD), float a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  void *v23;
  uint64_t v24;

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_101278480, 24, 7);
  *(_QWORD *)(v9 + 16) = a2;
  v10 = a1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(v10 + 8);
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
    type metadata accessor for MainActor(0);
    _Block_copy(a2);
    swift_unknownObjectRetain(v12);
    swift_retain(v9);
    v16 = static MainActor.shared.getter(v15);
    v17 = swift_allocObject(&unk_1012784A8, 72, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v13;
    *(float *)(v17 + 48) = a3;
    *(_QWORD *)(v17 + 56) = sub_10054EF34;
    *(_QWORD *)(v17 + 64) = v9;
    v18 = sub_100521B98((uint64_t)v8, (uint64_t)&unk_1013ED6F8, v17);
    swift_release(v9);
    swift_release(v18);
    swift_unknownObjectRelease(v12);
  }
  else
  {
    v20 = sub_1006DCA18();
    v21 = swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v20, 0, 0);
    *v22 = xmmword_100F02070;
    _Block_copy(a2);
    v23 = (void *)_convertErrorToNSError(_:)(v21);
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v23);

    swift_errorRelease(v21);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t sub_1006DC674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  sub_1004BBBC8(*(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8));
  swift_release(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v5);
}

uint64_t sub_1006DC73C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v3 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v1[3];
  v14 = v1[2];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + v4;
  v10 = *(_QWORD *)((char *)v1 + v5);
  v11 = *(_QWORD *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1013ED6CC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1004CFD00;
  return sub_1006D954C(a1, v14, v6, v7, v8, v9, v10, v11);
}

unint64_t sub_1006DC82C()
{
  unint64_t result;

  result = qword_1013ED6D8;
  if (!qword_1013ED6D8)
  {
    result = swift_getWitnessTable(L"\r7ᇌ!", &type metadata for CRLUSDRendering.RendererState);
    atomic_store(result, &qword_1013ED6D8);
  }
  return result;
}

uint64_t sub_1006DC870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  sub_1004BBBC8(*(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_1006DC91C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = v1[5];
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1013ED6E4);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1004CFD00;
  return sub_1006D9074(a1, v7, v8, v9, v10, v12, v11, v13);
}

uint64_t sub_1006DC9F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1006DCA18()
{
  unint64_t result;

  result = qword_1013F8170;
  if (!qword_1013F8170)
  {
    result = swift_getWitnessTable(&unk_100F05A90, &type metadata for CRLUSDRendererExtensionShared.ExtensionError);
    atomic_store(result, &qword_1013F8170);
  }
  return result;
}

uint64_t sub_1006DCA5C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[4]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1006DCA90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(float *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc(dword_1013ED6F4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_1006D6F1C(v8, a1, v4, v5, v6, v7, v10, v9);
}

uint64_t sub_1006DCB28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_1013ED704);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1006D6B84(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1006DCBD0(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1004CB6A4(&qword_1013ED610);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006DCC38()
{
  unint64_t result;

  result = qword_1013ED718;
  if (!qword_1013ED718)
  {
    result = swift_getWitnessTable(&unk_100F1B8E4, &type metadata for CRLUSDRendering.SceneAction);
    atomic_store(result, &qword_1013ED718);
  }
  return result;
}

uint64_t sub_1006DCC80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_1013ED724);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CF80C;
  return sub_1006D68AC(a1, v12, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_1006DCD28()
{
  unint64_t result;

  result = qword_1013ED730;
  if (!qword_1013ED730)
  {
    result = swift_getWitnessTable(&unk_100F1B574, &type metadata for CRLUSDRendering.SceneConfiguration);
    atomic_store(result, &qword_1013ED730);
  }
  return result;
}

uint64_t sub_1006DCD70()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));

  sub_1004BBBC8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1006DCDB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_1013ED73C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1006D6598(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1006DCE5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1006DCE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006D6498(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1006DCEA0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_unknownObjectRelease(v0[6]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006DCED4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1013ED754);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1006D6300(a1, v4, v5, v6, v7, v9, v8);
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared()
{
  return &type metadata for CRLUSDRendererExtensionShared;
}

unint64_t destroy for CRLWPFontName(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s8Freeform13CRLWPFontNameOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for CRLWPFontName(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for CRLWPFontName(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1006DD184(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1006DD19C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError;
}

unint64_t sub_1006DD1D0()
{
  unint64_t result;

  result = qword_1013ED760;
  if (!qword_1013ED760)
  {
    result = swift_getWitnessTable("Y.7", &type metadata for CRLUSDRendererExtensionShared.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1013ED760);
  }
  return result;
}

unint64_t sub_1006DD214()
{
  unint64_t result;

  result = qword_1013ED788;
  if (!qword_1013ED788)
  {
    result = swift_getWitnessTable(&unk_100F05E40, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED788);
  }
  return result;
}

unint64_t sub_1006DD258()
{
  unint64_t result;

  result = qword_1013ED790;
  if (!qword_1013ED790)
  {
    result = swift_getWitnessTable(&unk_100F05DF0, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED790);
  }
  return result;
}

unint64_t sub_1006DD29C()
{
  unint64_t result;

  result = qword_1013ED798;
  if (!qword_1013ED798)
  {
    result = swift_getWitnessTable(&unk_100F05DA0, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED798);
  }
  return result;
}

unint64_t sub_1006DD2E0()
{
  unint64_t result;

  result = qword_1013ED7A0;
  if (!qword_1013ED7A0)
  {
    result = swift_getWitnessTable(&unk_100F05D50, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1006DD370 + 4 * byte_100F057A1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1006DD3A4 + 4 * asc_100F0579C[v4]))();
}

uint64_t sub_1006DD3A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006DD3AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006DD3B4);
  return result;
}

uint64_t sub_1006DD3C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006DD3C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1006DD3CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006DD3D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1006DD450 + 4 * byte_100F057A6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1006DD470 + 4 * byte_100F057AB[v4]))();
}

_BYTE *sub_1006DD450(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1006DD470(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006DD478(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006DD480(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006DD488(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006DD490(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys;
}

unint64_t sub_1006DD4B0()
{
  unint64_t result;

  result = qword_1013ED7C8;
  if (!qword_1013ED7C8)
  {
    result = swift_getWitnessTable(&unk_100F05BD0, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7C8);
  }
  return result;
}

unint64_t sub_1006DD4F8()
{
  unint64_t result;

  result = qword_1013ED7D0;
  if (!qword_1013ED7D0)
  {
    result = swift_getWitnessTable(&unk_100F05D28, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7D0);
  }
  return result;
}

unint64_t sub_1006DD540()
{
  unint64_t result;

  result = qword_1013ED7D8;
  if (!qword_1013ED7D8)
  {
    result = swift_getWitnessTable(&unk_100F05C48, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7D8);
  }
  return result;
}

unint64_t sub_1006DD588()
{
  unint64_t result;

  result = qword_1013ED7E0;
  if (!qword_1013ED7E0)
  {
    result = swift_getWitnessTable(&unk_100F05C70, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7E0);
  }
  return result;
}

unint64_t sub_1006DD5D0()
{
  unint64_t result;

  result = qword_1013ED7E8;
  if (!qword_1013ED7E8)
  {
    result = swift_getWitnessTable(&unk_100F05BF8, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7E8);
  }
  return result;
}

unint64_t sub_1006DD618()
{
  unint64_t result;

  result = qword_1013ED7F0;
  if (!qword_1013ED7F0)
  {
    result = swift_getWitnessTable(&unk_100F05C20, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7F0);
  }
  return result;
}

unint64_t sub_1006DD660()
{
  unint64_t result;

  result = qword_1013ED7F8;
  if (!qword_1013ED7F8)
  {
    result = swift_getWitnessTable("i-7", &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED7F8);
  }
  return result;
}

unint64_t sub_1006DD6A8()
{
  unint64_t result;

  result = qword_1013ED800;
  if (!qword_1013ED800)
  {
    result = swift_getWitnessTable(&unk_100F05B68, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED800);
  }
  return result;
}

unint64_t sub_1006DD6F0()
{
  unint64_t result;

  result = qword_1013ED808;
  if (!qword_1013ED808)
  {
    result = swift_getWitnessTable(&unk_100F05C98, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED808);
  }
  return result;
}

unint64_t sub_1006DD738()
{
  unint64_t result;

  result = qword_1013ED810;
  if (!qword_1013ED810)
  {
    result = swift_getWitnessTable(&unk_100F05CC0, &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013ED810);
  }
  return result;
}

void sub_1006DD7B4(void **a1, uint64_t a2)
{
  sub_10068E118(a1, a2);
}

void destroy for CRLCanvasLayerAnimator(id *a1)
{

}

uint64_t initializeWithCopy for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  return a1;
}

uint64_t assignWithCopy for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  __int128 v16;
  __int128 v17;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(_OWORD *)(a2 + 32);
  v17 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v16;
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

__n128 initializeWithTake for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasLayerTransformByUnscaledRectTransition()
{
  return &type metadata for CRLCanvasLayerTransformByUnscaledRectTransition;
}

uint64_t sub_1006DDA9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  char v15;
  __int128 v16;
  _BYTE v17[40];
  _QWORD v18[4];
  char v19;

  sub_10057B588(v1 + 32, (uint64_t)v17);
  result = sub_10057B588((uint64_t)v17, (uint64_t)v18);
  if ((v19 & 1) != 0)
  {
    if ((*(_BYTE *)(v1 + 104) & 1) == 0)
    {
      v4 = *(_OWORD *)(v1 + 88);
      *(_OWORD *)a1 = *(_OWORD *)(v1 + 72);
      *(_OWORD *)(a1 + 16) = v4;
      v5 = 62;
LABEL_6:
      *(_BYTE *)(a1 + 256) = v5;
      return result;
    }
    v13 = *(_OWORD *)(v1 + 88);
    *(_OWORD *)a1 = *(_OWORD *)(v1 + 72);
    *(_OWORD *)(a1 + 16) = v13;
    v14 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 48) = v14;
    v15 = 64;
  }
  else
  {
    v6 = v18[1];
    v8 = v18[2];
    v7 = v18[3];
    v10 = *(_QWORD *)(v1 + 72);
    v9 = *(_QWORD *)(v1 + 80);
    v12 = *(_QWORD *)(v1 + 88);
    v11 = *(_QWORD *)(v1 + 96);
    if ((*(_BYTE *)(v1 + 104) & 1) == 0)
    {
      *(_QWORD *)a1 = v18[0];
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v8;
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v12;
      *(_QWORD *)(a1 + 56) = v11;
      v5 = 61;
      goto LABEL_6;
    }
    *(_QWORD *)a1 = v18[0];
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v11;
    v16 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 80) = v16;
    v15 = 63;
  }
  *(_BYTE *)(a1 + 256) = v15;
  return sub_1006DE3CC(v1);
}

CGFloat sub_1006DDB74@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  CGFloat v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  void *v31;
  void *v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat *v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  CGAffineTransform *v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat tx;
  CGFloat ty;
  double v67;
  CGFloat v68;
  uint64_t v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  __int128 v73;
  CGFloat result;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  __int128 v96;
  __int128 v97;
  CGFloat v98;
  __int128 v99;
  __int128 v100;
  CGAffineTransform v101;
  CATransform3D v102;
  _QWORD v103[3];
  double v104;
  _QWORD v105[16];
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _BYTE v114[40];
  _QWORD v115[4];
  char v116;

  sub_10057B588(v1 + 32, (uint64_t)v114);
  sub_10057B588((uint64_t)v114, (uint64_t)v115);
  if ((v116 & 1) != 0)
  {
    objc_msgSend(*(id *)(v1 + 8), "transform");
    v4 = *((double *)&v106 + 1);
    v3 = *(double *)&v106;
    v98 = *(double *)&v107;
    v94 = *(double *)&v108;
    v95 = *((double *)&v107 + 1);
    v92 = *(double *)&v109;
    v93 = *((double *)&v108 + 1);
    v90 = *(double *)&v110;
    v91 = *((double *)&v109 + 1);
    v88 = *(double *)&v111;
    v89 = *((double *)&v110 + 1);
    v86 = *(double *)&v112;
    v87 = *((double *)&v111 + 1);
    v84 = *(double *)&v113;
    v85 = *((double *)&v112 + 1);
    v5 = *((double *)&v113 + 1);
  }
  else
  {
    v6 = *(double *)v115;
    v7 = *(double *)&v115[1];
    v8 = *(double *)&v115[2];
    v9 = *(double *)&v115[3];
    v10 = *(void **)(v1 + 8);
    v11 = *(void **)(v1 + 16);
    v12 = *(void **)(v1 + 24);
    objc_msgSend(v12, "unobscuredScrollViewFrame");
    v15 = sub_100062E78(0, v8, v9, v13, v14) / v8;
    v17 = v16 / v9;
    if (v17 >= v15)
      v18 = v15;
    else
      v18 = v17;
    objc_msgSend(v10, "minimumPinchViewScale");
    v20 = v19;
    objc_msgSend(v10, "maximumPinchViewScale");
    v22 = sub_1003C65EC(v18, v20, v21);
    v23 = sub_100061400(v6, v7, v8, v9);
    v25 = v24;
    objc_msgSend(v10, "contentInset");
    sub_1007092B0(v10, v11, v12, (uint64_t)v105, v22, v23, v25, v26, v27, v28, v29);
    v3 = *(double *)v105;
    v4 = *(double *)&v105[1];
    v98 = *(double *)&v105[2];
    v94 = *(double *)&v105[4];
    v95 = *(double *)&v105[3];
    v92 = *(double *)&v105[6];
    v93 = *(double *)&v105[5];
    v90 = *(double *)&v105[8];
    v91 = *(double *)&v105[7];
    v88 = *(double *)&v105[10];
    v89 = *(double *)&v105[9];
    v86 = *(double *)&v105[12];
    v87 = *(double *)&v105[11];
    v84 = *(double *)&v105[14];
    v85 = *(double *)&v105[13];
    v5 = *(double *)&v105[15];
  }
  v83 = v5;
  v30 = *(void **)(v1 + 8);
  v31 = *(void **)(v1 + 16);
  v32 = *(void **)(v1 + 24);
  v33 = *(double *)(v1 + 72);
  v34 = *(double *)(v1 + 80);
  v35 = *(double *)(v1 + 88);
  v36 = *(double *)(v1 + 96);
  objc_msgSend(v32, "unobscuredScrollViewFrame");
  v39 = sub_100062E78(0, v35, v36, v37, v38) / v35;
  v41 = v40 / v36;
  if (v41 >= v39)
    v42 = v39;
  else
    v42 = v41;
  objc_msgSend(v30, "minimumPinchViewScale");
  v44 = v43;
  objc_msgSend(v30, "maximumPinchViewScale");
  v46 = sub_1003C65EC(v42, v44, v45);
  v47 = sub_100061400(v33, v34, v35, v36);
  v49 = v48;
  objc_msgSend(v30, "contentInset");
  sub_1007092B0(v30, v31, v32, (uint64_t)&v106, v46, v47, v49, v50, v51, v52, v53);
  if ((*(_BYTE *)(v1 + 104) & 1) != 0)
  {
    v63 = *((double *)&v113 + 1);
    v64 = *(double *)&v113;
    v81 = v111;
    v82 = v112;
    v79 = v109;
    v80 = v110;
    v77 = v107;
    v78 = v108;
    v76 = v106;
    v102.m11 = v3;
    v102.m12 = v4;
    v102.m13 = v98;
    v102.m14 = v95;
    v102.m21 = v94;
    v102.m22 = v93;
    v102.m23 = v92;
    v102.m24 = v91;
    v102.m31 = v90;
    v102.m32 = v89;
    v102.m33 = v88;
    v102.m34 = v87;
    v102.m41 = v86;
    v102.m42 = v85;
    v102.m43 = v84;
    v102.m44 = v83;
    CATransform3DGetAffineTransform(&v101, &v102);
    v96 = *(_OWORD *)&v101.c;
    v99 = *(_OWORD *)&v101.a;
    tx = v101.tx;
    ty = v101.ty;
    type metadata accessor for CGAffineTransform(0);
    v68 = v67;
    v104 = v67;
    v69 = swift_allocObject(&unk_101278A08, 64, 7);
    v103[0] = v69;
    *(_OWORD *)(v69 + 16) = v99;
    *(_OWORD *)(v69 + 32) = v96;
    *(CGFloat *)(v69 + 48) = tx;
    *(CGFloat *)(v69 + 56) = ty;
    *(_OWORD *)&v102.m11 = v76;
    *(_OWORD *)&v102.m13 = v77;
    *(_OWORD *)&v102.m21 = v78;
    *(_OWORD *)&v102.m23 = v79;
    *(_OWORD *)&v102.m31 = v80;
    *(_OWORD *)&v102.m33 = v81;
    *(_OWORD *)&v102.m41 = v82;
    v102.m43 = v64;
    v102.m44 = v63;
    CATransform3DGetAffineTransform(&v101, &v102);
    v97 = *(_OWORD *)&v101.c;
    v100 = *(_OWORD *)&v101.a;
    v70 = v101.tx;
    v71 = v101.ty;
    v101.d = v68;
    v72 = COERCE_DOUBLE(swift_allocObject(&unk_101278A08, 64, 7));
    v101.a = v72;
    *(_OWORD *)(*(_QWORD *)&v72 + 16) = v100;
    *(_OWORD *)(*(_QWORD *)&v72 + 32) = v97;
    *(CGFloat *)(*(_QWORD *)&v72 + 48) = v70;
    *(CGFloat *)(*(_QWORD *)&v72 + 56) = v71;
    memset(&v102, 0, 64);
    LOBYTE(v102.m31) = 28;
    v102.m32 = -2.31584178e77;
    *(_QWORD *)&v102.m33 = 0x8000000100FAA6B0;
    sub_10056B738((uint64_t)v103, (uint64_t)&v102);
    v62 = &v101;
  }
  else
  {
    type metadata accessor for CATransform3D(0);
    v55 = v54;
    v101.d = v54;
    v56 = (CGFloat *)swift_allocObject(&unk_1012789E0, 144, 7);
    *(_QWORD *)&v101.a = v56;
    v56[2] = v3;
    v56[3] = v4;
    v56[4] = v98;
    v56[5] = v95;
    v56[6] = v94;
    v56[7] = v93;
    v56[8] = v92;
    v56[9] = v91;
    v56[10] = v90;
    v56[11] = v89;
    v56[12] = v88;
    v56[13] = v87;
    v56[14] = v86;
    v56[15] = v85;
    v56[16] = v84;
    v56[17] = v83;
    v104 = v55;
    v57 = (_OWORD *)swift_allocObject(&unk_1012789E0, 144, 7);
    v103[0] = v57;
    v58 = v111;
    v57[5] = v110;
    v57[6] = v58;
    v59 = v113;
    v57[7] = v112;
    v57[8] = v59;
    v60 = v107;
    v57[1] = v106;
    v57[2] = v60;
    v61 = v109;
    v57[3] = v108;
    v57[4] = v61;
    memset(&v102, 0, 64);
    LOBYTE(v102.m31) = 26;
    v102.m32 = 1.67501583e243;
    v102.m33 = -5.98008217e197;
    sub_10056B738((uint64_t)&v101, (uint64_t)&v102);
    v62 = (CGAffineTransform *)v103;
  }
  sub_10056B738((uint64_t)v62, (uint64_t)&v102.m21);
  v73 = *(_OWORD *)&v102.m23;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v102.m21;
  *(_OWORD *)(a1 + 48) = v73;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)&v102.m31;
  *(CGFloat *)(a1 + 80) = v102.m33;
  result = v102.m11;
  v75 = *(_OWORD *)&v102.m13;
  *(_OWORD *)a1 = *(_OWORD *)&v102.m11;
  *(_OWORD *)(a1 + 16) = v75;
  return result;
}

uint64_t sub_1006DE158@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DDA9C(a1);
}

CGFloat sub_1006DE1A0@<D0>(uint64_t a1@<X8>)
{
  return sub_1006DDB74(a1);
}

BOOL sub_1006DE1E8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[5];
  _OWORD v11[2];
  _OWORD v12[5];
  _BYTE v13[25];

  v2 = a1[5];
  v10[4] = a1[4];
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 89);
  v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  v5 = a2[1];
  v12[0] = *a2;
  v12[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  *(_OWORD *)&v13[9] = *(_OWORD *)((char *)a2 + 89);
  v8 = a2[5];
  v12[4] = a2[4];
  *(_OWORD *)v13 = v8;
  v12[2] = v6;
  v12[3] = v7;
  return sub_1006DE2B8((uint64_t *)v10, (uint64_t *)v12);
}

unint64_t sub_1006DE250(uint64_t a1)
{
  unint64_t result;

  result = sub_1006DE274();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1006DE274()
{
  unint64_t result;

  result = qword_1013ED818;
  if (!qword_1013ED818)
  {
    result = swift_getWitnessTable(&unk_100F05ED0, &type metadata for CRLCanvasLayerTransformByUnscaledRectTransition);
    atomic_store(result, (unint64_t *)&qword_1013ED818);
  }
  return result;
}

BOOL sub_1006DE2B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = a1[1];
  v12 = *a1;
  v6 = a1[2];
  v5 = a1[3];
  v8 = *a2;
  v7 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  sub_100511A70();
  if ((static NSObject.== infix(_:_:)(v4, v7) & 1) == 0
    || (static NSObject.== infix(_:_:)(v12, v8) & 1) == 0
    || (static NSObject.== infix(_:_:)(v6, v10) & 1) == 0
    || (static NSObject.== infix(_:_:)(v5, v9) & 1) == 0)
  {
    return 0;
  }
  if ((a1[8] & 1) == 0)
  {
    if ((a2[8] & 1) != 0 || !CGRectEqualToRect(*((CGRect *)a1 + 1), *((CGRect *)a2 + 1)))
      return 0;
    return CGRectEqualToRect(*(CGRect *)(a1 + 9), *(CGRect *)(a2 + 9));
  }
  if (*((_BYTE *)a2 + 64))
    return CGRectEqualToRect(*(CGRect *)(a1 + 9), *(CGRect *)(a2 + 9));
  return 0;
}

uint64_t sub_1006DE3AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1006DE3BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006DE3CC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(id *)a1;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return a1;
}

uint64_t RandomAccessCollection.lowerBound(where:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v44;
  uint64_t AssociatedConformanceWitness;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t (*v52)(char *);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[32];

  v6 = v5;
  v7 = a3;
  v55 = a2;
  v52 = a1;
  v53 = a4;
  v46 = a5;
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v8 + 8), a3, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v54 = (char *)&v44 - v11;
  v12 = swift_getAssociatedTypeWitness(0, v8, v7, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  v56 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v49 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v51 = (char *)&v44 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v44 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v44 - v20;
  dispatch thunk of Collection.startIndex.getter(v7, v8);
  dispatch thunk of Collection.endIndex.getter(v7, v8);
  v57 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v7, v12, &protocol requirements base descriptor for Collection, &associated conformance descriptor for Collection.Collection.Index: Comparable);
  v50 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v21, v19) & 1) == 0)
  {
    v47 = v19;
    v48 = v10;
    v29 = v51;
    do
    {
      v31 = v53;
      v32 = dispatch thunk of RandomAccessCollection.distance(from:to:)(v21, v19, v7, v53);
      if (v32 >= 0)
        v33 = v32;
      else
        v33 = v32 + 1;
      dispatch thunk of RandomAccessCollection.index(_:offsetBy:)(v21, v33 >> 1, v7, v31);
      v34 = dispatch thunk of Collection.subscript.read(v58, v29, v7, v57);
      v35 = v54;
      (*(void (**)(char *))(v10 + 16))(v54);
      ((void (*)(_BYTE *, _QWORD))v34)(v58, 0);
      LOBYTE(v34) = v52(v35);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v35, AssociatedTypeWitness);
      if ((v34 & 1) != 0)
      {
        v36 = v49;
        dispatch thunk of Collection.index(after:)(v29, v7, v57);
        v37 = v7;
        v38 = v6;
        v39 = v56;
        v40 = *(void (**)(char *, uint64_t))(v56 + 8);
        v40(v29, v12);
        v40(v21, v12);
        v41 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
        v6 = v38;
        v7 = v37;
        v42 = v36;
        v19 = v47;
        v10 = v48;
        v41(v21, v42, v12);
      }
      else
      {
        v30 = v56;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v12);
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v19, v29, v12);
      }
    }
    while ((dispatch thunk of static Equatable.== infix(_:_:)(v21, v19) & 1) == 0);
  }
  v22 = v49;
  dispatch thunk of Collection.endIndex.getter(v7, v57);
  v23 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v12, AssociatedConformanceWitness);
  v24 = v21;
  v25 = v56;
  v26 = *(void (**)(char *, uint64_t))(v56 + 8);
  v26(v22, v12);
  v26(v19, v12);
  if ((v23 & 1) != 0)
  {
    v27 = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v46, v24, v12);
    v28 = 0;
  }
  else
  {
    v26(v24, v12);
    v28 = 1;
    v27 = v46;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v27, v28, 1, v12);
}

uint64_t RandomAccessCollection.binarySearch<A>(_:sortKey:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t AssociatedTypeWitness;
  uint64_t v42;
  void (*v43)(char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];

  v47 = a7;
  v46 = a3;
  v49 = a8;
  v13 = *(_QWORD *)(*(_QWORD *)(a6 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v13 + 8), a4, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v38 = (char *)&v35 - v14;
  v42 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(v15);
  v39 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v13;
  v17 = swift_getAssociatedTypeWitness(255, v13, a4, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  v18 = type metadata accessor for Optional(0, v17);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v35 - v20;
  v22 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v23);
  v48 = (char *)&v35 - v24;
  v51 = a4;
  v52 = a5;
  v44 = a1;
  v45 = a5;
  v53 = a6;
  v54 = v47;
  v43 = a2;
  v55 = a2;
  v56 = v46;
  v57 = a1;
  RandomAccessCollection.lowerBound(where:)((uint64_t (*)(char *))sub_1006DEB80, (uint64_t)v50, a4, a6, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v17) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
LABEL_6:
    v33 = 1;
    v32 = v49;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v32, v33, 1, v17);
  }
  v25 = v48;
  v36 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v36(v48, v21, v17);
  v26 = dispatch thunk of Collection.subscript.read(v58, v25, a4, v37);
  v27 = v40;
  v28 = v38;
  v29 = AssociatedTypeWitness;
  (*(void (**)(char *))(v40 + 16))(v38);
  ((void (*)(_BYTE *, _QWORD))v26)(v58, 0);
  v30 = v39;
  v43(v28);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  v31 = v45;
  LOBYTE(v26) = dispatch thunk of static Equatable.== infix(_:_:)(v44, v30);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v31);
  if ((v26 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v48, v17);
    goto LABEL_6;
  }
  v32 = v49;
  v36(v49, v48, v17);
  v33 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v32, v33, 1, v17);
}

uint64_t sub_1006DEAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint64_t v17;

  v11 = *(_QWORD *)(a6 - 8);
  v12 = __chkstk_darwin(a1);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15(v12);
  LOBYTE(a8) = dispatch thunk of static Comparable.< infix(_:_:)(v14, a4, a6, a8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a6);
  return a8 & 1;
}

uint64_t sub_1006DEB80(uint64_t a1)
{
  uint64_t *v1;

  return sub_1006DEAE0(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t RandomAccessCollection<>.binarySearch(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  _QWORD v12[6];

  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 8) + 8) + 8), a2, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  return RandomAccessCollection.binarySearch<A>(_:sortKey:)(a1, (void (*)(char *))sub_1006DEC30, (uint64_t)v12, a2, AssociatedTypeWitness, a3, a4, a5);
}

uint64_t sub_1006DEC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 24) + 8) + 8) + 8), *(_QWORD *)(v2 + 16), &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t RandomAccessCollection<>.lowerBound(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD v6[6];

  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  v6[5] = a1;
  return RandomAccessCollection.lowerBound(where:)((uint64_t (*)(char *))sub_1006DECD0, (uint64_t)v6, a2, a3, a5);
}

uint64_t sub_1006DECD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v3 = v1[2];
  v4 = v1[3];
  v6 = v1[4];
  v5 = v1[5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 8), v3, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  return dispatch thunk of static Comparable.< infix(_:_:)(a1, v5, AssociatedTypeWitness, v6) & 1;
}

uint64_t Comparable.clamped(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  max<A>(_:_:)(v3, a1, a2, a3);
  v10 = type metadata accessor for ClosedRange(0, a2, a3);
  min<A>(_:_:)(v9, a1 + *(int *)(v10 + 36), a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a2);
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v20;
  void *v21;

  v4 = v3;
  v8 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v11, a1, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v13 = static Array._allocateUninitialized(_:)(0, AssociatedTypeWitness);
  if (Array._getCount()())
    v14 = (void *)sub_1006DF050(v13, AssociatedTypeWitness, a3);
  else
    v14 = &_swiftEmptySetSingleton;
  v15 = swift_bridgeObjectRelease(v13);
  v21 = v14;
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v4, a1, v15);
  v17 = __chkstk_darwin(v16);
  *(&v20 - 4) = a1;
  *(&v20 - 3) = a2;
  *(&v20 - 2) = a3;
  *(&v20 - 1) = (uint64_t)&v21;
  v18 = Sequence.filter(_:)(sub_1006DF358, v17);
  swift_bridgeObjectRelease(v21);
  return v18;
}

uint64_t sub_1006DEF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4, a3, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = __chkstk_darwin(AssociatedTypeWitness);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, AssociatedTypeWitness);
  v14 = type metadata accessor for Set(0, AssociatedTypeWitness, a5);
  LOBYTE(a5) = Set.insert(_:)(v13, v11, v14);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
  return a5 & 1;
}

uint64_t sub_1006DF050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  Swift::Bool IsNativeType;
  void (*v20)(char *, unint64_t, uint64_t);
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  Swift::Int v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v5 = a1;
  v48 = *(_QWORD *)(a2 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v47 = (char *)&v40 - v10;
  v40 = v11;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v40 - v13;
  v15 = Array.count.getter(v12);
  if (v15)
  {
    v16 = v15;
    type metadata accessor for _SetStorage(0, a2, a3);
    v17 = (_QWORD *)static _SetStorage.allocate(capacity:)(v16);
  }
  else
  {
    v17 = &_swiftEmptySetSingleton;
  }
  v43 = Array._getCount()();
  if (!v43)
    return (uint64_t)v17;
  v18 = 0;
  v46 = (char *)(v17 + 7);
  v41 = v14;
  v42 = v5;
  while (1)
  {
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(v18, IsNativeType, v5, a2);
    if (IsNativeType)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
      v20(v14, v5+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v18, a2);
      v21 = __OFADD__(v18, 1);
      v22 = v18 + 1;
      if (v21)
        goto LABEL_20;
    }
    else
    {
      result = _ArrayBuffer._getElementSlowPath(_:)(v18, v5, a2);
      if (v40 != 8)
        goto LABEL_23;
      v39 = result;
      v49 = result;
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
      v20(v14, (unint64_t)&v49, a2);
      swift_unknownObjectRelease(v39);
      v21 = __OFADD__(v18, 1);
      v22 = v18 + 1;
      if (v21)
      {
LABEL_20:
        __break(1u);
        return (uint64_t)v17;
      }
    }
    v23 = v48;
    v44 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v45 = v22;
    v44(v47, v14, a2);
    v24 = dispatch thunk of Hashable._rawHashValue(seed:)(v17[5], a2, a3);
    v25 = -1 << *((_BYTE *)v17 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    v28 = *(_QWORD *)&v46[8 * (v26 >> 6)];
    v29 = 1 << v26;
    v30 = *(_QWORD *)(v23 + 72);
    if (((1 << v26) & v28) != 0)
    {
      v31 = ~v25;
      do
      {
        v20(v8, v17[6] + v30 * v26, a2);
        v32 = a3;
        v33 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v47);
        v34 = *(void (**)(char *, uint64_t))(v48 + 8);
        v34(v8, a2);
        if ((v33 & 1) != 0)
        {
          v34(v47, a2);
          a3 = v32;
          v14 = v41;
          v5 = v42;
          goto LABEL_7;
        }
        v26 = (v26 + 1) & v31;
        v27 = v26 >> 6;
        v28 = *(_QWORD *)&v46[8 * (v26 >> 6)];
        v29 = 1 << v26;
        a3 = v32;
      }
      while ((v28 & (1 << v26)) != 0);
      v14 = v41;
      v5 = v42;
    }
    v35 = v47;
    *(_QWORD *)&v46[8 * v27] = v29 | v28;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v44)(v17[6] + v30 * v26, v35, a2);
    v37 = v17[2];
    v21 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v21)
      break;
    v17[2] = v38;
LABEL_7:
    v18 = v45;
    if (v45 == v43)
      return (uint64_t)v17;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1006DF358(uint64_t a1)
{
  uint64_t *v1;

  return sub_1006DEF4C(a1, v1[5], v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1006DF378@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t KeyPath;
  uint64_t v33;
  id v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  int v74;
  __int128 *v75;
  __int128 *v76;
  int v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  _OWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t (*v121)();
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (**v125)();
  uint64_t v126;
  uint64_t v127;
  __int128 *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;

  v2 = v1;
  v148 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v148);
  v152 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1004B804C(&qword_1013ED868);
  __chkstk_darwin(v150);
  v151 = (uint64_t)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1004B804C(&qword_1013ED870);
  __chkstk_darwin(v149);
  v153 = (uint64_t)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1004B804C(&qword_1013ED878);
  __chkstk_darwin(v134);
  v8 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(qword_1013ECDD8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Font.TextStyle(0, v10);
  v13 = *(_QWORD *)(v154 - 8);
  v14 = __chkstk_darwin(v154);
  v16 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, v14);
  __chkstk_darwin(v17);
  v19 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1004B804C(&qword_1013ED880);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_1004B804C(&qword_1013ED888);
  __chkstk_darwin(v130);
  v136 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1004B804C(&qword_1013ED890);
  __chkstk_darwin(v135);
  v139 = (uint64_t)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1004B804C(&qword_1013ED898);
  __chkstk_darwin(v137);
  v140 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1004B804C(&qword_1013ED8A0);
  __chkstk_darwin(v138);
  v144 = (uint64_t)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_1004B804C(&qword_1013ED8A8);
  __chkstk_darwin(v141);
  v143 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1004B804C(&qword_1013ED8B0);
  __chkstk_darwin(v142);
  v147 = (uint64_t)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1004B804C(&qword_1013ED8B8);
  v155 = *(_QWORD *)(v27 - 8);
  v156 = v27;
  __chkstk_darwin(v27);
  v146 = (uint64_t)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v145 = (uint64_t)&v128 - v30;
  v162 = v2[2];
  v31 = (void *)*((_QWORD *)&v162 + 1);
  KeyPath = swift_getKeyPath(&unk_100F05F98);
  v33 = swift_getKeyPath(&unk_100F05FC0);
  v34 = v31;
  static Published.subscript.getter(&v157, v34, KeyPath, v33);
  swift_release(KeyPath);
  swift_release(v33);
  sub_1006E1014((uint64_t)&v162);
  if (v157 != 1)
  {
    v127 = 1;
    v124 = v156;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(a1, v127, 1, v124);
  }
  v129 = a1;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(&unk_100F05F38);
  v37 = swift_getKeyPath(&unk_100F05F60);
  static Published.subscript.getter(&v157, v34, v36, v37);
  swift_release(v36);
  swift_release(v37);
  sub_1006E1014((uint64_t)&v162);
  v38 = 1;
  if ((_BYTE)v157)
    v38 = 0;
  v39 = 24;
  if ((_BYTE)v157)
    v39 = 8;
  v40._object = *(void **)((char *)v2 + v39);
  v128 = v2;
  v40._countAndFlagsBits = *(_QWORD *)&v2[v38];
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v40);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v41);
  v42 = LocalizedStringKey.init(stringInterpolation:)(v19);
  v43 = Text.init(_:tableName:bundle:comment:)(v42);
  v45 = v44;
  v47 = v46;
  v49 = v48 & 1;
  v50 = v154;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for Font.TextStyle.body(_:), v154);
  v51 = type metadata accessor for Font.Design(0);
  v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v12, 1, 1, v51);
  v53 = static Font.Weight.semibold.getter(v52);
  v54 = static Font.system(_:design:weight:)(v16, v12, *(_QWORD *)&v53, 0);
  sub_1004CB800((uint64_t)v12, qword_1013ECDD8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v50);
  v55 = Text.font(_:)(v54, v43, v45, v49, v47);
  v57 = v56;
  LOBYTE(v50) = v58;
  v60 = v59;
  swift_release(v54);
  sub_1005EFC24(v43, v45, v49);
  swift_bridgeObjectRelease(v47);
  *(_QWORD *)&v157 = v55;
  *((_QWORD *)&v157 + 1) = v57;
  LOBYTE(v158) = v50 & 1;
  *((_QWORD *)&v158 + 1) = v60;
  v61 = enum case for DynamicTypeSize.accessibility1(_:);
  v62 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v8, v61, v62);
  sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v8, v8);
  if ((result & 1) != 0)
  {
    v64 = sub_1004CBA30(&qword_1013ED8C0, &qword_1013ED878, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v65 = v131;
    View.dynamicTypeSize<A>(_:)(v8, &type metadata for Text, v134, &protocol witness table for Text, v64);
    sub_1004CB800((uint64_t)v8, &qword_1013ED878);
    sub_1005EFC24(v157, *((uint64_t *)&v157 + 1), v158);
    v66 = swift_bridgeObjectRelease(*((_QWORD *)&v158 + 1));
    v67 = v132;
    v68 = (uint64_t)v136;
    v69 = v133;
    (*(void (**)(char *, char *, uint64_t, __n128))(v132 + 16))(v136, v65, v133, v66);
    *(_WORD *)(v68 + *(int *)(v130 + 36)) = 1;
    v70 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v65, v69);
    v71 = static Edge.Set.leading.getter(v70);
    v72 = static Edge.Set.trailing.getter();
    v73 = Edge.Set.init(rawValue:)(0);
    v74 = Edge.Set.init(rawValue:)(v73);
    if (Edge.Set.init(rawValue:)(v74 & v71) != v71)
      v73 = Edge.Set.init(rawValue:)(v73 | v71);
    v75 = v128;
    v76 = v128 + 1;
    v77 = Edge.Set.init(rawValue:)(v73);
    if (Edge.Set.init(rawValue:)(v77 & v72) != v72)
      LOBYTE(v73) = Edge.Set.init(rawValue:)(v73 | v72);
    v78 = EdgeInsets.init(_all:)(15.0);
    v80 = v79;
    v82 = v81;
    v84 = v83;
    v85 = v139;
    sub_1004CB7BC(v68, v139, &qword_1013ED888);
    v86 = v85 + *(int *)(v135 + 36);
    *(_BYTE *)v86 = v73;
    *(double *)(v86 + 8) = v78;
    *(_QWORD *)(v86 + 16) = v80;
    *(_QWORD *)(v86 + 24) = v82;
    *(_QWORD *)(v86 + 32) = v84;
    *(_BYTE *)(v86 + 40) = 0;
    v87 = sub_1004CB800(v68, &qword_1013ED888);
    v88 = static Alignment.center.getter(v87);
    _FrameLayout.init(width:height:alignment:)(&v157, 0, 1, 0x4040800000000000, 0, v88, v89);
    v90 = v140;
    sub_1004CB7BC(v85, v140, &qword_1013ED890);
    v91 = (_OWORD *)(v90 + *(int *)(v137 + 36));
    v92 = v158;
    *v91 = v157;
    v91[1] = v92;
    v91[2] = v159;
    v93 = sub_1004CB800(v85, &qword_1013ED890);
    v94 = static Color.white.getter(v93);
    v95 = swift_getKeyPath(&unk_100F060C0);
    v96 = v144;
    sub_1004CB7BC(v90, v144, &qword_1013ED898);
    v97 = (uint64_t *)(v96 + *(int *)(v138 + 36));
    *v97 = v95;
    v97[1] = v94;
    sub_1004CB800(v90, &qword_1013ED898);
    v98 = v152;
    v99 = &v152[*(int *)(v148 + 20)];
    v100 = enum case for RoundedCornerStyle.continuous(_:);
    v101 = type metadata accessor for RoundedCornerStyle(0);
    v102 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 104))(v99, v100, v101);
    __asm { FMOV            V0.2D, #8.0 }
    *v98 = _Q0;
    v108 = static Color.black.getter(v102);
    v109 = v151;
    sub_1006E10DC((uint64_t)v98, v151);
    v110 = v150;
    *(_QWORD *)(v109 + *(int *)(v150 + 52)) = v108;
    *(_WORD *)(v109 + *(int *)(v110 + 56)) = 256;
    sub_1006E1120((uint64_t)v98);
    v111 = v153;
    sub_1004CB7BC(v109, v153, &qword_1013ED868);
    *(_QWORD *)(v111 + *(int *)(v149 + 36)) = 0x3FE999999999999ALL;
    v112 = sub_1004CB800(v109, &qword_1013ED868);
    v113 = static Alignment.center.getter(v112);
    v115 = v114;
    v116 = (uint64_t)v143;
    v117 = (uint64_t)&v143[*(int *)(v141 + 36)];
    sub_1004CB7BC(v111, v117, &qword_1013ED870);
    v118 = (uint64_t *)(v117 + *(int *)(sub_1004B804C(&qword_1013ED8C8) + 36));
    *v118 = v113;
    v118[1] = v115;
    sub_1004CB7BC(v96, v116, &qword_1013ED8A0);
    sub_1004CB800(v111, &qword_1013ED870);
    sub_1004CB800(v96, &qword_1013ED8A0);
    v119 = v147;
    sub_1004CB7BC(v116, v147, &qword_1013ED8A8);
    *(_BYTE *)(v119 + *(int *)(v142 + 36)) = 0;
    sub_1004CB800(v116, &qword_1013ED8A8);
    v120 = *v75;
    v160 = *v76;
    v161 = v120;
    v121 = (uint64_t (*)())swift_allocObject(&unk_101278AD8, 64, 7);
    v122 = v75[1];
    *((_OWORD *)v121 + 1) = *v75;
    *((_OWORD *)v121 + 2) = v122;
    *((_OWORD *)v121 + 3) = v75[2];
    v123 = v146;
    sub_1004CB7BC(v119, v146, &qword_1013ED8B0);
    v124 = v156;
    v125 = (uint64_t (**)())(v123 + *(int *)(v156 + 36));
    *v125 = sub_1006E1160;
    v125[1] = v121;
    v125[2] = 0;
    v125[3] = 0;
    sub_1006E1168((uint64_t)&v162);
    sub_1006E1190((uint64_t)&v161);
    sub_1006E1190((uint64_t)&v160);
    sub_1004CB800(v119, &qword_1013ED8B0);
    v126 = v145;
    sub_1006E11B8(v123, v145);
    a1 = v129;
    sub_1006E11B8(v126, v129);
    v127 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(a1, v127, 1, v124);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006DFF6C(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  void *v16;
  __n128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 v20;
  void *v21;
  _OWORD *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - v13;
  sub_100503E34();
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  static DispatchTime.now()(v17);
  + infix(_:_:)(v11, 1.5);
  v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  v28(v11, v8);
  v18 = *a1;
  v35 = a1[1];
  v36 = v18;
  v34 = a1[2];
  v19 = (_OWORD *)swift_allocObject(&unk_101278B00, 64, 7);
  v20 = a1[1];
  v19[1] = *a1;
  v19[2] = v20;
  v19[3] = a1[2];
  aBlock[4] = sub_1006E1238;
  v33 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101278B18;
  v21 = _Block_copy(aBlock);
  v22 = v33;
  sub_1006E1190((uint64_t)&v36);
  sub_1006E1190((uint64_t)&v35);
  sub_1006E1168((uint64_t)&v34);
  v23 = swift_release(v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v26 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v2, v24);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
  return ((uint64_t (*)(char *, uint64_t))v28)(v14, v8);
}

uint64_t sub_1006E022C(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v5;

  v1 = *(void **)(a1 + 40);
  KeyPath = swift_getKeyPath(&unk_100F05F98);
  v3 = swift_getKeyPath(&unk_100F05FC0);
  v5 = 0;
  return static Published.subscript.setter(&v5, v1, KeyPath, v3);
}

uint64_t property wrapper backing initializer of CRLGelatoInterstitialUIController.isBoardShared(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t CRLConnectorModeMessageViewState.isConnectorModeEnabled.getter()
{
  return sub_1006E0584((uint64_t)&unk_100F05F38, (uint64_t)&unk_100F05F60);
}

uint64_t CRLConnectorModeMessageViewState.isConnectorModeEnabled.setter(char a1)
{
  return sub_1006E0614(a1, (uint64_t)&unk_100F05F38, (uint64_t)&unk_100F05F60);
}

void sub_1006E0314(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1006E068C(a1, (uint64_t)&unk_100F05F38, (uint64_t)&unk_100F05F60, a2);
}

void sub_1006E0328(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1006E068C(a1, (uint64_t)&unk_100F05F38, (uint64_t)&unk_100F05F60, a2);
}

uint64_t sub_1006E034C(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100F05F38, (uint64_t)&unk_100F05F60);
}

uint64_t sub_1006E0360(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100F05F38, (uint64_t)&unk_100F05F60);
}

uint64_t (*CRLConnectorModeMessageViewState.isConnectorModeEnabled.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100F05F38);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100F05F60);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1006E03FC;
}

uint64_t CRLConnectorModeMessageViewState.$isConnectorModeEnabled.getter()
{
  return sub_1006E0830(&OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isConnectorModeEnabled);
}

uint64_t CRLConnectorModeMessageViewState.$isConnectorModeEnabled.setter(uint64_t a1)
{
  return sub_1006E0898(a1, &OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isConnectorModeEnabled);
}

void (*CRLConnectorModeMessageViewState.$isConnectorModeEnabled.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1004B804C(&qword_10140B9B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isConnectorModeEnabled;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1004B804C(&qword_10140B9D0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1006E04E0;
}

uint64_t sub_1006E04F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  uint64_t v10;

  KeyPath = swift_getKeyPath(a3);
  v7 = swift_getKeyPath(a4);
  v8 = a1;
  static Published.subscript.getter(&v10, v8, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);

  return v10;
}

uint64_t CRLConnectorModeMessageViewState.isMessageVisible.getter()
{
  return sub_1006E0584((uint64_t)&unk_100F05F98, (uint64_t)&unk_100F05FC0);
}

uint64_t sub_1006E0584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t CRLConnectorModeMessageViewState.isMessageVisible.setter(char a1)
{
  return sub_1006E0614(a1, (uint64_t)&unk_100F05F98, (uint64_t)&unk_100F05FC0);
}

uint64_t sub_1006E0614(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void sub_1006E0678(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1006E068C(a1, (uint64_t)&unk_100F05F98, (uint64_t)&unk_100F05FC0, a2);
}

void sub_1006E068C(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  *a4 = v9;
}

void sub_1006E0704(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1006E068C(a1, (uint64_t)&unk_100F05F98, (uint64_t)&unk_100F05FC0, a2);
}

uint64_t sub_1006E0728(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100F05F98, (uint64_t)&unk_100F05FC0);
}

uint64_t sub_1006E073C(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100F05F98, (uint64_t)&unk_100F05FC0);
}

uint64_t (*CRLConnectorModeMessageViewState.isMessageVisible.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100F05F98);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100F05FC0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1006E03FC;
}

void sub_1006E07D8(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t CRLConnectorModeMessageViewState.$isMessageVisible.getter()
{
  return sub_1006E0830(&OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isMessageVisible);
}

uint64_t sub_1006E0830(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  swift_beginAccess(v1 + *a1, v4, 33, 0);
  v2 = sub_1004B804C(&qword_10140B9D0);
  Published.projectedValue.getter(v2);
  return swift_endAccess(v4);
}

uint64_t CRLConnectorModeMessageViewState.$isMessageVisible.setter(uint64_t a1)
{
  return sub_1006E0898(a1, &OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isMessageVisible);
}

uint64_t sub_1006E0898(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v13[24];

  v5 = sub_1004B804C(&qword_10140B9B0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, v5, v7);
  swift_beginAccess(v2 + *a2, v13, 33, 0);
  v10 = sub_1004B804C(&qword_10140B9D0);
  Published.projectedValue.setter(v9, v10);
  swift_endAccess(v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

void (*CRLConnectorModeMessageViewState.$isMessageVisible.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1004B804C(&qword_10140B9B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isMessageVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1004B804C(&qword_10140B9D0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1006E04E0;
}

void sub_1006E0A34(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id CRLConnectorModeMessageViewState.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  void (*v7)(char *, char *, uint64_t);
  char *v8;
  objc_class *v9;
  uint64_t v11;
  objc_super v12;
  char v13;

  v1 = sub_1004B804C(&qword_10140B9D0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isConnectorModeEnabled];
  v13 = 0;
  v6 = v0;
  Published.init(initialValue:)(&v13, &type metadata for Bool);
  v7 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v7(v5, v4, v1);
  v8 = &v6[OBJC_IVAR____TtC8Freeform32CRLConnectorModeMessageViewState__isMessageVisible];
  v13 = 0;
  Published.init(initialValue:)(&v13, &type metadata for Bool);
  v7(v8, v4, v1);

  v9 = (objc_class *)type metadata accessor for CRLConnectorModeMessageViewState(0);
  v12.receiver = v6;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, "init");
}

uint64_t type metadata accessor for CRLConnectorModeMessageViewState(uint64_t a1)
{
  uint64_t result;

  result = qword_1013ED858;
  if (!qword_1013ED858)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLConnectorModeMessageViewState);
  return result;
}

id CRLConnectorModeMessageViewState.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLConnectorModeMessageViewState(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006E0D54@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLConnectorModeMessageViewState(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006E0D90()
{
  return type metadata accessor for CRLConnectorModeMessageViewState(0);
}

void sub_1006E0D98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_10063BDBC();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void destroy for CRLConnectorModeMessageView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

_QWORD *initializeWithCopy for CRLConnectorModeMessageView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for CRLConnectorModeMessageView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = (void *)a2[5];
  v9 = (void *)a1[5];
  a1[5] = v8;
  v10 = v8;

  return a1;
}

_QWORD *assignWithTake for CRLConnectorModeMessageView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = (void *)a1[5];
  a1[4] = a2[4];
  a1[5] = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLConnectorModeMessageView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLConnectorModeMessageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectorModeMessageView()
{
  return &type metadata for CRLConnectorModeMessageView;
}

uint64_t sub_1006E1004(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101120218, 1);
}

uint64_t sub_1006E1014(uint64_t a1)
{

  return a1;
}

uint64_t sub_1006E103C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006E1064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006E108C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1006E10B4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1006E10DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006E1120(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006E1160()
{
  uint64_t v0;

  return sub_1006DFF6C((__int128 *)(v0 + 16));
}

uint64_t sub_1006E1168(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_1006E1190(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1006E11B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013ED8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006E1204()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006E1238()
{
  uint64_t v0;

  return sub_1006E022C(v0 + 16);
}

uint64_t sub_1006E1240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006E1250(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006E1258@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;
  v12 = v11;

  v13 = objc_msgSend(v4, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;
  v20 = v19;

  v21 = type metadata accessor for CRLConnectorModeMessageViewState(0);
  v22 = sub_1004B7878(&qword_1013ED8D0, type metadata accessor for CRLConnectorModeMessageViewState, (uint64_t)&protocol conformance descriptor for CRLConnectorModeMessageViewState);
  result = ObservedObject.init(wrappedValue:)(a1, v21, v22);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v18;
  a2[3] = v20;
  a2[4] = result;
  a2[5] = v24;
  return result;
}

unint64_t sub_1006E144C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ED8D8;
  if (!qword_1013ED8D8)
  {
    v1 = sub_1004CB6A4(&qword_1013ED8E0);
    sub_1006E1664(&qword_1013ED8E8, &qword_1013ED8B8, (void (*)(void))sub_1006E14D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013ED8D8);
  }
  return result;
}

unint64_t sub_1006E14D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ED8F0;
  if (!qword_1013ED8F0)
  {
    v1 = sub_1004CB6A4(&qword_1013ED8B0);
    sub_1006E153C();
    sub_1006E17B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ED8F0);
  }
  return result;
}

unint64_t sub_1006E153C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ED8F8;
  if (!qword_1013ED8F8)
  {
    v1 = sub_1004CB6A4(&qword_1013ED8A8);
    sub_1006E15C0();
    sub_1004CBA30(&qword_1013ED920, &qword_1013ED8C8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ED8F8);
  }
  return result;
}

unint64_t sub_1006E15C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013ED900;
  if (!qword_1013ED900)
  {
    v1 = sub_1004CB6A4(&qword_1013ED8A0);
    sub_1006E1664(&qword_1013ED908, &qword_1013ED898, (void (*)(void))sub_1006E16CC);
    sub_1004CBA30(&qword_1013E7048, &qword_1013E7050, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ED900);
  }
  return result;
}

uint64_t sub_1006E1664(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006E16CC()
{
  return sub_1006E1664(&qword_1013ED910, &qword_1013ED890, (void (*)(void))sub_1006E16F0);
}

unint64_t sub_1006E16F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1013ED918;
  if (!qword_1013ED918)
  {
    v1 = sub_1004CB6A4(&qword_1013ED888);
    v2[0] = &type metadata for Text;
    v2[1] = sub_1004CB6A4(&qword_1013ED878);
    v2[2] = &protocol witness table for Text;
    v2[3] = sub_1004CBA30(&qword_1013ED8C0, &qword_1013ED878, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013ED918);
  }
  return result;
}

unint64_t sub_1006E17B8()
{
  unint64_t result;

  result = qword_1013ED928;
  if (!qword_1013ED928)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AllowsHitTestingModifier, &type metadata for _AllowsHitTestingModifier);
    atomic_store(result, (unint64_t *)&qword_1013ED928);
  }
  return result;
}

id sub_1006E198C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  objc_class *ObjectType;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  objc_super v13;
  _QWORD v14[5];

  ObjectType = (objc_class *)swift_getObjectType(v3);
  v14[3] = type metadata accessor for CRLPasteboardNativeDataProvider();
  v14[4] = &off_101290320;
  v14[0] = a1;
  v8 = (char *)objc_allocWithZone(ObjectType);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject] = 0;
  sub_1004E90B0((uint64_t)v14, (uint64_t)&v8[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_channelProvider]);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_store] = a2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_context] = a3;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_options] = 0;
  v13.receiver = v8;
  v13.super_class = ObjectType;
  v9 = a1;
  v10 = objc_msgSendSuper2(&v13, "init");
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);

  v11 = swift_getObjectType(v3);
  swift_deallocPartialClassInstance(v3, v11, 80, 7);
  return v10;
}

uint64_t sub_1006E1AE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch(sub_1006E1AF8, 0, 0);
}

uint64_t sub_1006E1AF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Coordinator;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;

  v1 = v0[7];
  Coordinator = type metadata accessor for CRLSerializableObjectReadCoordinator(0);
  sub_1004E90B0(v1 + OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_channelProvider, (uint64_t)(v0 + 2));
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_store);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_context);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_options);
  v6 = v0[5];
  v7 = v0[6];
  v8 = sub_1004CB9AC((uint64_t)(v0 + 2), v6);
  v0[8] = sub_1009F2D84(v8, (uint64_t)v3, (uint64_t)v4, v5, Coordinator, v6, v7);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 2);
  if ((v5 & 1) != 0)
  {
    v11 = (_QWORD *)swift_task_alloc(dword_10140123C);
    v0[9] = v11;
    *v11 = v0;
    v11[1] = sub_1006E1C34;
    return sub_1009EF3D0();
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_10140121C);
    v0[12] = v9;
    *v9 = v0;
    v9[1] = sub_1006E1D5C;
    return sub_1009EEEF4();
  }
}

uint64_t sub_1006E1C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 72);
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1006E1E8C;
  }
  else
  {
    *(_QWORD *)(v4 + 88) = a1;
    v6 = sub_1006E1CA8;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1006E1CA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE *v3;
  __n128 v4;
  __n128 v5;
  _QWORD *v7;

  if (sub_1001E973C(*(_QWORD *)(v0 + 88)))
  {
    v1 = *(_QWORD *)(v0 + 64);
    v2 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v2, 0, 0);
    *v3 = 14;
    swift_willThrow(v4);
    v5 = swift_release(v1);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc(dword_10140121C);
    *(_QWORD *)(v0 + 96) = v7;
    *v7 = v0;
    v7[1] = sub_1006E1D5C;
    return sub_1009EEEF4();
  }
}

uint64_t sub_1006E1D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1006E1EC0;
  else
    v5 = sub_1006E1DC8;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006E1DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  _BYTE *v9;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for CRLPasteboardObject();
  v3 = swift_dynamicCastClass(v1, v2);
  v4 = *(_QWORD *)(v0 + 64);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 64));
    v7 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject) = v5;

  }
  else
  {
    swift_unknownObjectRelease(v1);
    v8 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v8, 0, 0);
    *v9 = 1;
    swift_willThrow(v10);
    swift_release(v4);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006E1E8C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006E1EC0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006E2010(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  id v5;
  _QWORD *v6;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1013EDA4C;
  v5 = a2;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_1006E2088;
  v6[7] = v5;
  return swift_task_switch(sub_1006E1AF8, 0, 0);
}

uint64_t sub_1006E2088()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *(void **)(*v1 + 16);
  v4 = *v1;
  swift_task_dealloc(v2);

  v5 = *(_QWORD *)(v4 + 24);
  if (v0)
  {
    v6 = (void *)_convertErrorToNSError(_:)(v0);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 24), 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1006E2128()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

id sub_1006E214C(uint64_t a1, uint64_t a2)
{
  return sub_1006E2184(a1, a2, &off_10122DBB8);
}

id sub_1006E2168(uint64_t a1, uint64_t a2)
{
  return sub_1006E2184(a1, a2, &off_10122DBB0);
}

id sub_1006E2184(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[5];

  sub_1004E90B0(*v3 + 16, (uint64_t)v10);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a3);
  v7 = v6;
  v8 = objc_allocWithZone((Class)type metadata accessor for CRLPasteboardReadChannel());
  return sub_10085A4C8(v10, v5, v7);
}

id sub_1006E21FC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v5 = *v2;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLAsset."));
  v8 = v7;
  v14 = v6;
  v15 = v7;
  swift_bridgeObjectRetain(v7);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10 = v14;
  v11 = v15;
  sub_1004E90B0(v5 + 16, (uint64_t)&v14);
  v12 = objc_allocWithZone((Class)type metadata accessor for CRLPasteboardReadChannel());
  return sub_10085A4C8(&v14, v10, v11);
}

uint64_t type metadata accessor for CRLPasteboardObjectReadAssistant()
{
  return objc_opt_self(_TtC8Freeform32CRLPasteboardObjectReadAssistant);
}

uint64_t type metadata accessor for CRLPasteboardObjectReadAssistant.PasteboardChannelProvider()
{
  return objc_opt_self(_TtCC8Freeform32CRLPasteboardObjectReadAssistantP33_7330E271E25E4DF596F095BB82B40F4125PasteboardChannelProvider);
}

uint64_t sub_1006E2370()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006E239C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013EDA3C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013EDA38 + dword_1013EDA38))(v2, v3);
}

id sub_1006E2408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  objc_class *Assistant;
  char *v11;
  double v12;
  id v13;
  objc_super v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  _QWORD v19[5];

  v19[3] = sub_1006E2538();
  v19[4] = &off_101299F18;
  v19[0] = a1;
  sub_1004E90B0((uint64_t)v19, (uint64_t)&v16);
  v8 = type metadata accessor for CRLPasteboardObjectReadAssistant.PasteboardChannelProvider();
  v9 = swift_allocObject(v8, 56, 7);
  sub_1004DB728(&v16, v9 + 16);
  v17 = v8;
  v18 = &off_101278BA0;
  *(_QWORD *)&v16 = v9;
  Assistant = (objc_class *)type metadata accessor for CRLPasteboardObjectReadAssistant();
  v11 = (char *)objc_allocWithZone(Assistant);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject] = 0;
  sub_1004E90B0((uint64_t)&v16, (uint64_t)&v11[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_channelProvider]);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_store] = a2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_context] = a3;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_options] = a4;
  v15.receiver = v11;
  v15.super_class = Assistant;
  *(_QWORD *)&v12 = swift_retain(v9).n128_u64[0];
  v13 = objc_msgSendSuper2(&v15, "init", v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v16);
  swift_release(v9);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v19);
  return v13;
}

unint64_t sub_1006E2538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EDA50[0];
  if (!qword_1013EDA50[0])
  {
    v1 = objc_opt_self(CRLPasteboard);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_1013EDA50);
  }
  return result;
}

uint64_t sub_1006E2574(uint64_t a1)
{
  _QWORD v2[8];

  v2[1] = &unk_100F06210;
  v2[2] = &unk_100F06228;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = &unk_100F06240;
  v2[5] = &unk_100F06240;
  v2[6] = &unk_100F06240;
  v2[7] = &unk_100F06240;
  return swift_initClassMetadata2(a1, 0, 8, v2, a1 + 96);
}

uint64_t sub_1006E25E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  swift_allocObject(v4, 184, 15);
  v10 = (_QWORD *)swift_task_alloc(dword_1013EDB6C);
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_100550210;
  return sub_1006E266C(a1, a2, a3, a4);
}

uint64_t sub_1006E266C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;

  v6 = (_QWORD *)v4;
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = *(_QWORD *)v4;
  v8 = sub_1004B804C(&qword_1013E01F0);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLRealTimeMessengerConfiguration(0);
  v5[9] = v9;
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[11] = v12;
  swift_defaultActor_initialize(v4, v13);
  *(_QWORD *)(v4 + 120) = 0;
  swift_unknownObjectWeakInit(v4 + 112);
  *(_OWORD *)(v4 + 168) = 0u;
  *(_OWORD *)(v4 + 152) = 0u;
  v14 = GroupSession.id.getter((__n128)0);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  v5[12] = v15;
  v5[13] = v16;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  v6[16] = v15;
  v6[17] = v17;
  type metadata accessor for GroupSessionMessenger(0);
  swift_bridgeObjectRetain(v17);
  v18 = swift_retain(a1);
  v6[18] = GroupSessionMessenger.__allocating_init<A>(session:)(v18);
  return swift_task_switch(sub_1006E27C0, v6, 0);
}

uint64_t sub_1006E27C0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 80);
  v44 = *(_QWORD *)(v0 + 88);
  v45 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(int **)(v0 + 72);
  v5 = *(_QWORD **)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 24);
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 32);
  v5[15] = *(_QWORD *)(v0 + 40);
  swift_unknownObjectWeakAssign(v5 + 14, v43);
  v38 = type metadata accessor for CRLRealTimeMessengerImplementation(0);
  v7 = enum case for GroupSessionMessenger.DeliveryMode.reliable(_:);
  v8 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v1, v7, v8);
  v9 = (_QWORD *)(v1 + v2[7]);
  *v9 = 20;
  v10 = enum case for DispatchTimeInterval.seconds(_:);
  v11 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  *(_QWORD *)(v1 + v2[5]) = 88064;
  *(_WORD *)(v1 + v2[6]) = 23;
  v41 = v1;
  v12 = type metadata accessor for CRLRealTimeDataEncryptor();
  v13 = *(_QWORD *)(v4 + 88);
  v14 = *(_QWORD *)(v4 + 80);
  v16 = type metadata accessor for CRLRealTimeMessenger(0, v14, v13, v15);
  v40 = v6;
  swift_retain(v6);
  swift_retain(v5);
  v17 = sub_100DE0BA8(v1, v6, (uint64_t)v5, 0, 0, v38, v12, v16, (uint64_t)&off_1012731D8, (uint64_t)&off_101278CF8);
  v18 = v5[19];
  v5[19] = v17;
  swift_release(v18);
  v19 = type metadata accessor for TaskPriority(0);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v39(v3, 1, 1, v19);
  v20 = swift_allocObject(&unk_101278D48, 24, 7);
  swift_weakInit(v20 + 16, v5);
  v21 = v5[18];
  v22 = (_QWORD *)swift_allocObject(&unk_101278D70, 80, 7);
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v14;
  v22[5] = v13;
  v22[6] = v21;
  v22[7] = v45;
  v22[8] = v46;
  v22[9] = v20;
  swift_bridgeObjectRetain(v46);
  swift_retain(v21);
  v23 = sub_100521B98(v3, (uint64_t)&unk_1013EDB78, (uint64_t)v22);
  v24 = v5[20];
  v5[20] = v23;
  v25 = swift_release(v24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v39)(v3, 1, 1, v19, v25);
  v26 = swift_allocObject(&unk_101278D48, 24, 7);
  swift_weakInit(v26 + 16, v5);
  v27 = v5[18];
  v28 = (_QWORD *)swift_allocObject(&unk_101278D98, 80, 7);
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v14;
  v28[5] = v13;
  v28[6] = v27;
  v28[7] = v45;
  v28[8] = v46;
  v28[9] = v26;
  swift_bridgeObjectRetain(v46);
  swift_retain(v27);
  v29 = sub_100521B98(v3, (uint64_t)&unk_1013EDB88, (uint64_t)v28);
  v30 = v5[21];
  v5[21] = v29;
  v31 = swift_release(v30);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v39)(v3, 1, 1, v19, v31);
  v32 = swift_allocObject(&unk_101278D48, 24, 7);
  swift_weakInit(v32 + 16, v5);
  v33 = v5[18];
  v34 = (_QWORD *)swift_allocObject(&unk_101278DC0, 80, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v14;
  v34[5] = v13;
  v34[6] = v33;
  v34[7] = v45;
  v34[8] = v46;
  v34[9] = v32;
  swift_retain(v33);
  v35 = sub_100521B98(v3, (uint64_t)&unk_1013EDB98, (uint64_t)v34);
  swift_release(v42);
  swift_release(v40);
  swift_unknownObjectRelease(v43);
  v36 = v5[22];
  v5[22] = v35;
  swift_release(v36);
  swift_task_dealloc(v44);
  swift_task_dealloc(v41);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1006E2B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7[98] = a7;
  v7[97] = a6;
  v7[96] = a5;
  v7[95] = a4;
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[99] = swift_task_alloc(v8);
  v7[100] = swift_task_alloc(v8);
  v9 = type metadata accessor for CRLProto_Data(0);
  v7[101] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[102] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[103] = swift_task_alloc(v11);
  v7[104] = swift_task_alloc(v11);
  v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v7[105] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E4CB8);
  v7[106] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v7[107] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[108] = v15;
  v7[109] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLGloballyScopedBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[110] = swift_task_alloc(v16);
  v7[111] = swift_task_alloc(v16);
  v18 = type metadata accessor for BinaryDecodingOptions(0, v17);
  v7[112] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  v7[113] = v19;
  v7[114] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C(&qword_1013E1ED0);
  v7[115] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for UUID(0);
  v7[116] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v7[117] = v22;
  v7[118] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Participant(0);
  v7[119] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v7[120] = v24;
  v7[121] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013EDBF0);
  v7[122] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v7[123] = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[124] = swift_task_alloc(v27);
  v7[125] = swift_task_alloc(v27);
  v7[126] = swift_task_alloc(v27);
  v28 = sub_1004B804C(&qword_1013EDBF8);
  v7[127] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v28 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1004B804C(&qword_1013EDC00);
  v7[128] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v7[129] = v30;
  v7[130] = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1004B804C(&qword_1013EDC08);
  v7[131] = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v7[132] = v32;
  v7[133] = swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006E2E44, 0, 0);
}

uint64_t sub_1006E2E44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[130];
  v2 = v0[129];
  v3 = v0[128];
  v4 = v0[98] + 16;
  v5 = type metadata accessor for CRLRealTimeMessage();
  v6 = sub_1004B7878((unint64_t *)&unk_1014147B0, (uint64_t (*)(uint64_t))type metadata accessor for CRLRealTimeMessage, (uint64_t)&unk_100F13784);
  v7 = sub_1004B7878(&qword_1013EDB60, (uint64_t (*)(uint64_t))type metadata accessor for CRLRealTimeMessage, (uint64_t)&unk_100F1375C);
  GroupSessionMessenger.messages<A>(of:)(v5, v5, v6, v7);
  GroupSessionMessenger.Messages.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess(v4, v0 + 81, 0, 0);
  v8 = sub_1006E6E54(&qword_1013EDC10, &qword_1013EDC08);
  v0[134] = v8;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[135] = v9;
  *v9 = v0;
  v9[1] = sub_1006E2F94;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[127], v0[131], v8);
}

uint64_t sub_1006E2F94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 1080));
  if (v0)
  {
    *(_QWORD *)(v2 + 1096) = v0;
    v3 = sub_1006E3594;
  }
  else
  {
    *(_QWORD *)(v2 + 1088) = 0;
    v3 = sub_1006E2FFC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006E2FFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t inited;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  id v37;
  double (*v38)(char *, uint64_t);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t Strong;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v1 = *(uint64_t **)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 976);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 984) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 1064);
    v4 = *(_QWORD *)(v0 + 1040);
    v5 = *(_QWORD *)(v0 + 1008);
    v6 = *(_QWORD *)(v0 + 1000);
    v7 = *(_QWORD *)(v0 + 992);
    v8 = *(_QWORD *)(v0 + 968);
    v9 = *(_QWORD *)(v0 + 944);
    v10 = *(_QWORD *)(v0 + 920);
    v53 = *(_QWORD *)(v0 + 912);
    v54 = *(_QWORD *)(v0 + 896);
    v55 = *(_QWORD *)(v0 + 888);
    v56 = *(_QWORD *)(v0 + 880);
    v58 = *(_QWORD *)(v0 + 872);
    v59 = *(_QWORD *)(v0 + 848);
    v61 = *(_QWORD *)(v0 + 840);
    v63 = *(_QWORD *)(v0 + 832);
    v65 = *(_QWORD *)(v0 + 824);
    v67 = *(_QWORD *)(v0 + 800);
    v69 = *(_QWORD *)(v0 + 792);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1056) + 8))(v3, *(_QWORD *)(v0 + 1048));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD **)(v0 + 1008);
  v13 = *(int *)(v2 + 48);
  *(_DWORD *)(v0 + 1216) = v13;
  v14 = (char *)v12 + v13;
  v15 = *v1;
  *(_QWORD *)(v0 + 1104) = *v1;
  v16 = (char *)v1 + v13;
  *v12 = v15;
  v17 = type metadata accessor for GroupSessionMessenger.MessageContext(0);
  *(_QWORD *)(v0 + 1112) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v14, v16, v17);
  v19 = qword_1013DCFC0;
  swift_retain(v15);
  if (v19 != -1)
    swift_once(&qword_1013DCFC0, sub_100709C44);
  *(_QWORD *)(v0 + 1120) = CRLAnalyticsOSSignpostManager.beginSignpostIntervalWithReturnedState(for:)(24, 1);
  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 600, 0, 0);
  v20 = static OS_os_log.crlRealTimeMessageTransfer;
  v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v0 + 1128) = v21;
  inited = swift_initStackObject(v21, v0 + 168);
  v24 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v25 = *(_QWORD *)(v15 + 24);
  if (*(_QWORD *)(v25 + 16))
    __asm { BR              X16 }
  if (v22)
  {
    __break(1u);
  }
  else
  {
    v70 = inited + 32;
    v26 = *(_QWORD **)(v0 + 1000);
    v27 = *(_QWORD *)(v0 + 976);
    v28 = *(_QWORD *)(v0 + 968);
    v29 = v15;
    v30 = *(_QWORD *)(v0 + 960);
    v31 = v14;
    v60 = *(_QWORD *)(v0 + 952);
    v32 = *(_QWORD *)(v0 + 944);
    v62 = *(_QWORD *)(v0 + 936);
    v64 = *(_QWORD *)(v0 + 928);
    v33 = *(_QWORD *)(v0 + 776);
    v66 = *(_QWORD *)(v0 + 768);
    v68 = *(_QWORD *)(v0 + 784) + 16;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = 16;
    v34 = (void *)v20;
    v35 = (char *)v26 + *(int *)(v27 + 48);
    v57 = v29;
    *v26 = v29;
    v36 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    *(_QWORD *)(v0 + 1136) = v36;
    v36(v35, v31, v17);
    v37 = v34;
    GroupSessionMessenger.MessageContext.source.getter(v37);
    v38 = *(double (**)(char *, uint64_t))(v18 + 8);
    *(_QWORD *)(v0 + 1144) = v38;
    v39.n128_f64[0] = v38(v35, v17);
    Participant.id.getter(v39);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v28, v60);
    v41 = UUID.uuidString.getter(v40);
    v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v32, v64);
    v24[12] = &type metadata for String;
    v44 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 1152) = v44;
    v24[9] = v41;
    v24[10] = v43;
    v24[17] = &type metadata for String;
    v24[18] = v44;
    v24[13] = v44;
    v24[14] = v66;
    v24[15] = v33;
    v45 = swift_bridgeObjectRetain(v33);
    v46 = static os_log_type_t.default.getter(v45);
    sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v46, "Process messages of size %{public}d received from sender %{public}@ on group session UUID: %{public}@", 101, 2, (uint64_t)v24);
    swift_setDeallocating(v24);
    v47 = v24[2];
    v48 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 1160) = v48;
    swift_arrayDestroy(v70, v47, v48);

    Strong = swift_weakLoadStrong(v68);
    *(_QWORD *)(v0 + 1168) = Strong;
    if (Strong)
      return swift_task_switch(sub_1006E35F8, Strong, 0);
  }
  swift_release(v57);
  v50 = *(_QWORD *)(v0 + 1120);
  v51 = *(_QWORD *)(v0 + 1008);
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(24, 1, v50);
  swift_release(v50);
  sub_1004CB800(v51, &qword_1013EDBF0);
  v52 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 1208) = v52;
  *v52 = v0;
  v52[1] = sub_1006E46C0;
  return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 1016), *(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 1072));
}

uint64_t sub_1006E3594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 752) = *(_QWORD *)(v0 + 1096);
  v1 = sub_1004B804C(&qword_1013E0210);
  v2 = swift_dynamicCast(v1, v0 + 752, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1006E35F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1168);
  *(_QWORD *)(v0 + 1176) = swift_unknownObjectWeakLoadStrong(v1 + 112);
  swift_release(v1);
  return swift_task_switch(sub_1006E3644, 0, 0);
}

uint64_t sub_1006E3644()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *, uint64_t);
  uint64_t (*v3)(char *, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 1176);
  if (v1)
  {
    v2 = *(void (**)(char *, uint64_t))(v0 + 1144);
    v3 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v0 + 1136);
    v4 = *(_QWORD *)(v0 + 1112);
    v5 = *(_QWORD **)(v0 + 992);
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 920);
    v9 = *(_QWORD *)(v0 + 1008) + *(int *)(v0 + 1216);
    v10 = (char *)v5 + *(int *)(*(_QWORD *)(v0 + 976) + 48);
    *v5 = *(_QWORD *)(v0 + 1104);
    v11 = v3(v10, v9, v4);
    GroupSessionMessenger.MessageContext.source.getter(v11);
    v2(v10, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    return swift_task_switch(sub_1006E37A0, v1, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 1104));
    v13 = *(_QWORD *)(v0 + 1120);
    v14 = *(_QWORD *)(v0 + 1008);
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(24, 1, v13);
    swift_release(v13);
    sub_1004CB800(v14, &qword_1013EDBF0);
    v15 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 1208) = v15;
    *v15 = v0;
    v15[1] = sub_1006E46C0;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 1016), *(_QWORD *)(v0 + 1048), *(_QWORD *)(v0 + 1072));
  }
}

uint64_t sub_1006E37A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t Strong;

  v1 = v0[138];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    if (qword_1013DD888 != -1)
    {
      swift_once(&qword_1013DD888, sub_100A05DE4);
      v1 = v0[138];
    }
    v3 = v0[147];
    v4 = v0[145];
    v5 = v0[141];
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 78, 0, 0);
    v6 = (void *)static OS_os_log.realTimeSync;
    inited = swift_initStackObject(v5, v0 + 40);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for UInt64;
    *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
    *(_QWORD *)(inited + 32) = v2;
    *(_QWORD *)(inited + 96) = &type metadata for UInt64;
    *(_QWORD *)(inited + 104) = &protocol witness table for UInt64;
    *(_QWORD *)(inited + 72) = 0;
    v8 = v6;
    v10 = static os_log_type_t.default.getter(v9);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Received a message with version (%d) that is greater than the last supported version (%d) by this device. Dropping the message", 126, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 2, v4);

  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0[147] + 112);
    v0[148] = Strong;
    if (Strong)
    {
      v12 = Strong;
      v11 = sub_1006E3938;
      return swift_task_switch(v11, v12, 0);
    }
    v3 = v0[147];
    v1 = v0[138];
  }
  swift_unknownObjectRelease(v3);
  swift_release(v1);
  sub_1004CB800(v0[115], &qword_1013E1ED0);
  v11 = sub_1006E4528;
  v12 = 0;
  return swift_task_switch(v11, v12, 0);
}

uint64_t sub_1006E3938()
{
  _QWORD *v0;
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  unint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _BYTE *v89;
  __n128 v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  _QWORD *v96;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t *v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  unint64_t v120;

  v1 = v0[138];
  v2 = _swiftEmptyArrayStorage;
  v0[88] = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v110 = v0 + 2;
    v105 = v0 + 54;
    v100 = v0 + 59;
    v5 = v0 + 64;
    v113 = v0 + 69;
    v108 = v0 + 84;
    v109 = v0 + 72;
    v107 = v0 + 87;
    v111 = v0 + 88;
    v103 = v0 + 90;
    v104 = v0 + 89;
    v101 = v0 + 92;
    v102 = v0 + 91;
    v106 = v0 + 93;
    v6 = *(_QWORD *)(v0[148] + 136);
    v7 = v0[136];
    swift_bridgeObjectRetain(v3);
    v98 = v8;
    v9 = (unint64_t *)(v8 + 48);
    v118 = v0 + 64;
    v114 = v6;
    v112 = v0;
    while (2)
    {
      v23 = *(v9 - 1);
      v27 = *v9;
      v120 = *v9;
      v117 = *(v9 - 2);
      v119 = v23;
      switch(v117)
      {
        case 0:
          v28 = type metadata accessor for CRLBoardRealTimeChangeRecord(0);
          v0[67] = v28;
          v0[68] = sub_1004B7878(&qword_1013EDC50, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F10848);
          sub_1004BE310(v23, v27);
          v29 = sub_1004B7878(&qword_1013EDC58, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F107F8);
          v30 = swift_retain(v6);
          dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v28, v23, v27, v28, v29, v30);
          v14 = v7;
          if (v7)
            goto LABEL_4;
          v31 = v101;
          goto LABEL_19;
        case 1:
          v34 = type metadata accessor for CRLBoardItemRealTimeChangeRecord(0);
          v0[67] = v34;
          v0[68] = sub_1004B7878(&qword_1013EDC40, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D488);
          sub_1004BE310(v23, v27);
          v35 = sub_1004B7878(&qword_1013EDC48, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D438);
          v36 = swift_retain(v6);
          dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v34, v23, v27, v34, v35, v36);
          v14 = v7;
          if (v7)
            goto LABEL_4;
          v31 = v102;
          goto LABEL_19;
        case 2:
          v37 = type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord(0);
          v0[67] = v37;
          v0[68] = sub_1004B7878(&qword_1013EDC38, type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord, (uint64_t)&unk_100EF4D8C);
          sub_1004BE310(v23, v27);
          v38 = sub_1004B7878(&qword_1013DF530, type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord, (uint64_t)&unk_100EF4D64);
          v39 = swift_retain(v6);
          dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v37, v23, v27, v37, v38, v39);
          v14 = v7;
          if (v7)
            goto LABEL_4;
          v31 = v103;
          goto LABEL_19;
        case 3:
          v10 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy(0);
          v0[67] = v10;
          v0[68] = sub_1004B7878(&qword_1013EDC28, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy, (uint64_t)&unk_100F2DDE4);
          sub_10050D1B0(v5);
          sub_1004BE310(v23, v27);
          v11 = sub_1004B7878(&qword_1013EDC30, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy, (uint64_t)&unk_100F2DDBC);
          v12 = swift_retain(v6);
          v13 = v11;
          v5 = v118;
          dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v10, v23, v27, v10, v13, v12);
          v14 = v7;
          if (v7)
            goto LABEL_4;
          goto LABEL_20;
        case 4:
          v40 = type metadata accessor for CRLSharePlayRealTimeChangeRecord();
          v0[67] = v40;
          v0[68] = sub_1004B7878(&qword_1013EDC18, (uint64_t (*)(uint64_t))type metadata accessor for CRLSharePlayRealTimeChangeRecord, (uint64_t)&unk_100F28394);
          sub_1004BE310(v23, v27);
          v41 = sub_1004B7878(&qword_1013EDC20, (uint64_t (*)(uint64_t))type metadata accessor for CRLSharePlayRealTimeChangeRecord, (uint64_t)&unk_100F2836C);
          v42 = swift_retain(v6);
          dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v40, v23, v27, v40, v41, v42);
          v14 = v7;
          if (v7)
            goto LABEL_4;
          v31 = v104;
LABEL_19:
          *v5 = *v31;
          goto LABEL_20;
        case 5:
          v51 = v0[113];
          v52 = *v9;
          v53 = v0[112];
          v116 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
          v0[67] = v116;
          v0[68] = sub_1004B7878(&qword_1013E4CB0, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord, (uint64_t)&unk_100EFBBBC);
          v99 = sub_10050D1B0(v118);
          *(_OWORD *)v100 = 0u;
          *((_OWORD *)v100 + 1) = 0u;
          v100[4] = 0;
          sub_1004BE310(v23, v52);
          sub_1004BE310(v23, v52);
          swift_retain(v114);
          BinaryDecodingOptions.init()(v54);
          v55 = sub_1004B7878(&qword_1013E4CC0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23970);
          v5 = v118;
          Message.init(serializedData:extensions:partial:options:)(v23, v52, v100, 0, v53, v51, v55);
          v14 = v7;
          if (v7)
            goto LABEL_4;
          v56 = v0[108];
          v57 = v0[107];
          v58 = v0[106];
          sub_1004CB7BC(v0[114] + *(int *)(v0[113] + 24), v58, &qword_1013E4CB8);
          v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v58, 1, v57);
          v60 = v0[109];
          if ((_DWORD)v59 == 1)
          {
            v61 = v0[107];
            v62 = v0[106];
            v63 = v0[102];
            v64 = v0[101];
            UnknownStorage.init()(v59);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v60 + *(int *)(v61 + 20), 1, 1, v64);
            sub_1004CB800(v62, &qword_1013E4CB8);
          }
          else
          {
            sub_1004B84E0(v0[106], v0[109], type metadata accessor for CRLProto_BoardIdentifier);
          }
          v65 = v0[102];
          v66 = v0[101];
          v67 = v0[100];
          sub_1004CB7BC(v0[109] + *(int *)(v0[107] + 20), v67, (uint64_t *)&unk_1013E16F0);
          v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
          v69 = v68(v67, 1, v66);
          v70 = (_OWORD *)v0[104];
          if ((_DWORD)v69 == 1)
          {
            v71 = v0[100];
            *v70 = xmmword_100EF78C0;
            UnknownStorage.init()(v69);
            sub_1004CB800(v71, (uint64_t *)&unk_1013E16F0);
          }
          else
          {
            sub_1004B84E0(v0[100], (uint64_t)v70, type metadata accessor for CRLProto_Data);
          }
          v72 = (uint64_t *)v0[104];
          v74 = *v72;
          v73 = v72[1];
          sub_1004BE310(*v72, v73);
          sub_1004B84A4((uint64_t)v72, type metadata accessor for CRLProto_Data);
          sub_10067B2E0(v74, v73);
          v75 = (int *)v0[114];
          v76 = v0[111];
          v77 = v0[110];
          v78 = v0[105];
          sub_1004B84A4(v0[109], type metadata accessor for CRLProto_BoardIdentifier);
          sub_1004B84E0(v78, v77, type metadata accessor for CRLBoardIdentifierStorage);
          sub_1004B84E0(v77, v76, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          v79 = *v75;
          v80 = *v75 - 5;
          v81 = v0[114];
          if (v80 >= 0xC)
          {
            v87 = v0[111];
            v88 = sub_100577444();
            v14 = swift_allocError(&type metadata for CRLSerializationError, v88, 0, 0);
            *v89 = 1;
            swift_willThrow(v90);
            sub_1004B84A4(v87, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_1004B84A4(v81, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
            v5 = v118;
LABEL_4:
            v115 = v0[145];
            v15 = v0[144];
            v16 = v0[141];
            sub_1006E6ED8(v5);
            inited = swift_initStackObject(v16, v110);
            *(_OWORD *)(inited + 16) = xmmword_100EF5550;
            *(_QWORD *)(inited + 56) = &type metadata for Int;
            *(_QWORD *)(inited + 64) = &protocol witness table for Int;
            *(_QWORD *)(inited + 32) = v117;
            swift_getErrorValue(v14, v106, v109);
            v18 = Error.fullDescription.getter(v0[73]);
            *(_QWORD *)(inited + 96) = &type metadata for String;
            *(_QWORD *)(inited + 104) = v15;
            *(_QWORD *)(inited + 72) = v18;
            *(_QWORD *)(inited + 80) = v19;
            swift_getErrorValue(v14, v107, v108);
            v20 = Error.publicDescription.getter(v0[85], v0[86]);
            *(_QWORD *)(inited + 136) = &type metadata for String;
            *(_QWORD *)(inited + 144) = v15;
            v6 = v114;
            *(_QWORD *)(inited + 112) = v20;
            *(_QWORD *)(inited + 120) = v21;
            v22 = v14;
            sub_100757E04(&_mh_execute_header, (uint64_t)"createRealTimeChangeRecord(decoder:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeSyncDataSource.swift", 104, 2, 153, "Failed to decode real time change record of payloadType %{public}d with error %@ %{public}@", 91, 2u, inited);
            v23 = v119;
            sub_1004F5394(inited, (uint64_t)"createRealTimeChangeRecord(decoder:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeSyncDataSource.swift", 104, 2u, 153, (uint64_t)"Failed to decode real time change record of payloadType %{public}d with error %@ %{public}@", 91, 2u);
            swift_setDeallocating(inited);
            v24 = swift_arrayDestroy(inited + 32, 3, v115);
LABEL_5:
            swift_willThrow(v24);
            swift_release(v6);
            if (qword_1013DD888 != -1)
              swift_once(&qword_1013DD888, sub_100A05DE4);
            swift_beginAccess(&static OS_os_log.realTimeSync, v113, 0, 0);
            v25 = (id)static OS_os_log.realTimeSync;
            v26 = static os_log_type_t.error.getter(v25);
            sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v26, "Failed to deserialize real time change record.", 46, 2, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004BBBC8(v23, v120);

            swift_errorRelease(v22);
            v5 = v118;
            v0 = v112;
          }
          else
          {
            v82 = v0[101];
            v83 = v0[99];
            sub_1004CB7BC(v81 + *(int *)(v0[113] + 28), v83, (uint64_t *)&unk_1013E16F0);
            v84 = v68(v83, 1, v82);
            v85 = (_OWORD *)v0[103];
            if ((_DWORD)v84 == 1)
            {
              v86 = v0[99];
              *v85 = xmmword_100EF78C0;
              UnknownStorage.init()(v84);
              sub_1004CB800(v86, (uint64_t *)&unk_1013E16F0);
            }
            else
            {
              sub_1004B84E0(v0[99], (uint64_t)v85, type metadata accessor for CRLProto_Data);
            }
            v91 = v0[111];
            v92 = (uint64_t *)v0[103];
            sub_1004B84A4(v0[114], type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
            v93 = *v92;
            v94 = v92[1];
            sub_1004BE310(*v92, v94);
            sub_1004B84A4((uint64_t)v92, type metadata accessor for CRLProto_Data);
            sub_1004B84E0(v91, (uint64_t)v99, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            v6 = v114;
            *(_DWORD *)((char *)v99 + *(int *)(v116 + 20)) = v79;
            v95 = (_QWORD *)((char *)v99 + *(int *)(v116 + 24));
            *v95 = v93;
            v95[1] = v94;
            v5 = v118;
LABEL_20:
            swift_release(v6);
            sub_1004E90B0((uint64_t)v5, (uint64_t)v105);
            v43 = (_QWORD *)*v111;
            if ((swift_isUniquelyReferenced_nonNull_native(*v111) & 1) == 0)
            {
              v43 = sub_100D10748(0, v43[2] + 1, 1, v43);
              *v111 = (uint64_t)v43;
            }
            v45 = v43[2];
            v44 = v43[3];
            if (v45 >= v44 >> 1)
              *v111 = (uint64_t)sub_100D10748((_QWORD *)(v44 > 1), v45 + 1, 1, v43);
            v46 = v0[57];
            v47 = v0[58];
            v48 = sub_1004CB9AC((uint64_t)v105, v46);
            v49 = *(_QWORD *)(v46 - 8);
            v50 = swift_task_alloc((*(_QWORD *)(v49 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v50, v48, v46);
            sub_1005C46A8(v45, v50, v111, v46, v47);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v105);
            swift_task_dealloc(v50);
            sub_1004BBBC8(v23, v120);
            v5 = v118;
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v118);
            v6 = v114;
          }
          v7 = 0;
          v9 += 3;
          if (--v4)
            continue;
          swift_bridgeObjectRelease(v98);
          v2 = (double *)*v111;
          break;
        default:
          v32 = sub_1006E6E94();
          v22 = swift_allocError(&type metadata for CRLRealTimeSyncError, v32, 0, 0);
          *v33 = 0;
          sub_1004BE310(v23, v27);
          v24 = swift_retain(v6);
          goto LABEL_5;
      }
      break;
    }
  }
  v0[149] = v2;
  v96 = (_QWORD *)swift_task_alloc(dword_10140C07C);
  v0[150] = v96;
  *v96 = v0;
  v96[1] = sub_1006E45C4;
  return sub_100C68E78((uint64_t)v2, v0[115]);
}

uint64_t sub_1006E4528()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[140];
  v2 = v0[126];
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(24, 1, v1);
  swift_release(v1);
  sub_1004CB800(v2, &qword_1013EDBF0);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[151] = v3;
  *v3 = v0;
  v3[1] = sub_1006E46C0;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[127], v0[131], v0[134]);
}

uint64_t sub_1006E45C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1192);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 1184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1200));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1006E4628, v2, 0);
}

uint64_t sub_1006E4628()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1176);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 1184));
  return swift_task_switch(sub_1006E4668, v1, 0);
}

uint64_t sub_1006E4668()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[138];
  swift_unknownObjectRelease(v0[147]);
  swift_release(v1);
  sub_1004CB800(v0[115], &qword_1013E1ED0);
  return swift_task_switch(sub_1006E4528, 0, 0);
}

uint64_t sub_1006E46C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 1208));
  if (v0)
  {
    *(_QWORD *)(v2 + 1096) = v0;
    v3 = sub_1006E3594;
  }
  else
  {
    *(_QWORD *)(v2 + 1088) = 0;
    v3 = sub_1006E2FFC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006E4728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7[30] = a6;
  v7[31] = a7;
  v7[28] = a4;
  v7[29] = a5;
  v8 = sub_1004B804C(&qword_1013E1ED0);
  v7[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v7[33] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[34] = v10;
  v7[35] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  v7[36] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[37] = v12;
  v7[38] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013EDBC8);
  v7[39] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[40] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[41] = swift_task_alloc(v15);
  v7[42] = swift_task_alloc(v15);
  v16 = sub_1004B804C(&qword_1013EDBD0);
  v7[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013EDBD8);
  v7[44] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v7[45] = v18;
  v7[46] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013EDBE0);
  v7[47] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[48] = v20;
  v7[49] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006E4890, 0, 0);
}

uint64_t sub_1006E4890()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[45];
  v2 = v0[46];
  v3 = v0[44];
  v4 = v0[31] + 16;
  v5 = type metadata accessor for CRLEncryptedRealTimeMessage();
  v6 = sub_1004B7878(&qword_1013EDB50, (uint64_t (*)(uint64_t))type metadata accessor for CRLEncryptedRealTimeMessage, (uint64_t)&unk_100F3915C);
  v7 = sub_1004B7878(&qword_1013EDB58, (uint64_t (*)(uint64_t))type metadata accessor for CRLEncryptedRealTimeMessage, (uint64_t)&unk_100F39134);
  GroupSessionMessenger.messages<A>(of:)(v5, v5, v6, v7);
  GroupSessionMessenger.Messages.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_beginAccess(v4, v0 + 21, 0, 0);
  v8 = sub_1006E6E54(&qword_1013EDBE8, &qword_1013EDBE0);
  v0[50] = v8;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[51] = v9;
  *v9 = v0;
  v9[1] = sub_1006E49DC;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[43], v0[47], v8);
}

uint64_t sub_1006E49DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 408));
  if (v0)
  {
    *(_QWORD *)(v2 + 416) = v0;
    v3 = sub_1006E4EC0;
  }
  else
  {
    v3 = sub_1006E4A40;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006E4A40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(uint64_t **)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 312);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 320) + 48))(v1, 1, v2) != 1)
  {
    v11 = *(_QWORD **)(v0 + 336);
    v12 = *(int *)(v2 + 48);
    *(_DWORD *)(v0 + 496) = v12;
    v13 = (char *)v11 + v12;
    v14 = *v1;
    *(_QWORD *)(v0 + 424) = *v1;
    v15 = (char *)v1 + v12;
    *v11 = v14;
    v16 = type metadata accessor for GroupSessionMessenger.MessageContext(0);
    *(_QWORD *)(v0 + 432) = v16;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v15, v16);
    v17 = qword_1013DCFC0;
    swift_retain(v14);
    if (v17 != -1)
      swift_once(&qword_1013DCFC0, sub_100709C44);
    *(_QWORD *)(v0 + 440) = CRLAnalyticsOSSignpostManager.beginSignpostIntervalWithReturnedState(for:)(25, 1);
    if (qword_1013DD768 != -1)
      swift_once(&qword_1013DD768, sub_100A02948);
    swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 192, 0, 0);
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_OWORD *)(swift_initStackObject(v18, v0 + 16) + 16) = xmmword_100EF5550;
    __asm { BR              X13 }
  }
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 384) + 8))(v3, *(_QWORD *)(v0 + 376));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v1);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006E4EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 416);
  v1 = sub_1004B804C(&qword_1013E0210);
  v2 = swift_dynamicCast(v1, v0 + 216, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1006E4F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 472) = v2;
  swift_retain(v2);
  swift_release(v1);
  return swift_task_switch(sub_1006E4F6C, 0, 0);
}

void sub_1006E4F6C()
{
  uint64_t v0;
  uint64_t (*v1)(char *, uint64_t, uint64_t);
  void (*v2)(char *, uint64_t);
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;

  if (*(_QWORD *)(v0 + 472))
  {
    v1 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v0 + 448);
    v2 = *(void (**)(char *, uint64_t))(v0 + 456);
    v3 = *(_QWORD *)(v0 + 432);
    v4 = *(_QWORD **)(v0 + 328);
    v5 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 336) + *(int *)(v0 + 496);
    v9 = (char *)v4 + *(int *)(*(_QWORD *)(v0 + 312) + 48);
    *v4 = *(_QWORD *)(v0 + 424);
    v10 = v1(v9, v8, v3);
    GroupSessionMessenger.MessageContext.source.getter(v10);
    v2(v9, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    v11 = (_QWORD *)swift_task_alloc(dword_1014144B4);
    *(_QWORD *)(v0 + 480) = v11;
    *v11 = v0;
    v11[1] = sub_1006E5048;
    sub_100DDC770(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 256));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006E5048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 472);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 424);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 256);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  swift_release(v1);
  swift_release(v2);
  sub_1004CB800(v3, &qword_1013E1ED0);
  return swift_task_switch(sub_1006E50CC, 0, 0);
}

uint64_t sub_1006E50CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[55];
  v2 = v0[42];
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(25, 1, v1);
  swift_release(v1);
  sub_1004CB800(v2, &qword_1013EDBC8);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[61] = v3;
  *v3 = v0;
  v3[1] = sub_1006E5164;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[43], v0[47], v0[50]);
}

uint64_t sub_1006E5164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 488));
  if (v0)
  {
    *(_QWORD *)(v2 + 416) = v0;
    v3 = sub_1006E4EC0;
  }
  else
  {
    v3 = sub_1006E4A40;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006E51C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  v8 = sub_1004B804C(&qword_1013E1ED0);
  v7[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v7[38] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[39] = v10;
  v7[40] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  v7[41] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[42] = v12;
  v7[43] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013EDBA0);
  v7[44] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[45] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[46] = swift_task_alloc(v15);
  v7[47] = swift_task_alloc(v15);
  v7[48] = swift_task_alloc(v15);
  v7[49] = swift_task_alloc(v15);
  v16 = sub_1004B804C(&qword_1013EDBA8);
  v7[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013EDBB0);
  v7[51] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v7[52] = v18;
  v7[53] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013EDBB8);
  v7[54] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[55] = v20;
  v7[56] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006E5348, 0, 0);
}

uint64_t sub_1006E5348()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[52];
  v2 = v0[53];
  v3 = v0[51];
  v4 = v0[36] + 16;
  v5 = type metadata accessor for CRLChunkedRealTimeMessage(0);
  v6 = sub_1004B7878(&qword_1013EDB40, type metadata accessor for CRLChunkedRealTimeMessage, (uint64_t)&unk_100F0B040);
  v7 = sub_1004B7878(&qword_1013EDB48, type metadata accessor for CRLChunkedRealTimeMessage, (uint64_t)&unk_100F0B018);
  GroupSessionMessenger.messages<A>(of:)(v5, v5, v6, v7);
  GroupSessionMessenger.Messages.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_beginAccess(v4, v0 + 26, 0, 0);
  v8 = sub_1006E6E54(&qword_1013EDBC0, &qword_1013EDBB8);
  v0[57] = v8;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[58] = v9;
  *v9 = v0;
  v9[1] = sub_1006E5494;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[50], v0[54], v8);
}

uint64_t sub_1006E5494()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 464));
  if (v0)
  {
    *(_QWORD *)(v2 + 472) = v0;
    v3 = sub_1006E59EC;
  }
  else
  {
    v3 = sub_1006E54F8;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006E54F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  __int16 v31;
  char *v32;
  uint64_t v33;
  double (*v34)(char *, uint64_t);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v1 = *(uint64_t **)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 352);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 360) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 448);
    v4 = *(_QWORD *)(v0 + 424);
    v6 = *(_QWORD *)(v0 + 384);
    v5 = *(_QWORD *)(v0 + 392);
    v8 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 344);
    v10 = *(_QWORD *)(v0 + 320);
    v62 = *(_QWORD *)(v0 + 296);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(v3, *(_QWORD *)(v0 + 432));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v62);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD **)(v0 + 392);
    v13 = *(int *)(v2 + 48);
    *(_DWORD *)(v0 + 552) = v13;
    v14 = (char *)v12 + v13;
    v15 = *v1;
    *(_QWORD *)(v0 + 480) = *v1;
    v16 = (char *)v1 + v13;
    *v12 = v15;
    v17 = type metadata accessor for GroupSessionMessenger.MessageContext(0);
    *(_QWORD *)(v0 + 488) = v17;
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v14, v16, v17);
    v19 = qword_1013DCFC0;
    swift_retain(v15);
    if (v19 != -1)
      swift_once(&qword_1013DCFC0, sub_100709C44);
    *(_QWORD *)(v0 + 496) = CRLAnalyticsOSSignpostManager.beginSignpostIntervalWithReturnedState(for:)(26, 1);
    if (qword_1013DD768 != -1)
      swift_once(&qword_1013DD768, sub_100A02948);
    v20 = *(_QWORD **)(v0 + 384);
    v50 = *(_QWORD **)(v0 + 376);
    v51 = *(_QWORD **)(v0 + 368);
    v21 = *(_QWORD *)(v0 + 352);
    v56 = *(_QWORD *)(v0 + 336);
    v57 = *(_QWORD *)(v0 + 328);
    v52 = *(_QWORD *)(v0 + 344);
    v53 = *(_QWORD *)(v0 + 320);
    v58 = *(_QWORD *)(v0 + 312);
    v59 = *(_QWORD *)(v0 + 304);
    v63 = *(_QWORD *)(v0 + 288) + 16;
    v60 = *(_QWORD *)(v0 + 280);
    v61 = *(_QWORD *)(v0 + 272);
    swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 232, 0, 0);
    v22 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E30;
    v54 = (char *)v20 + *(int *)(v21 + 48);
    *v20 = v15;
    v49 = v18;
    v25 = *(void (**)(void))(v18 + 16);
    *(_QWORD *)(v0 + 504) = v25;
    v25();
    v55 = v22;
    v26 = UUID.uuidString.getter(v55);
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v29;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    v30 = (char *)v50 + *(int *)(v21 + 48);
    *v50 = v15;
    ((void (*)(char *, char *, uint64_t))v25)(v30, v14, v17);
    v31 = *(_WORD *)(v15 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
    *(_QWORD *)(inited + 96) = &type metadata for UInt16;
    *(_QWORD *)(inited + 104) = &protocol witness table for UInt16;
    *(_WORD *)(inited + 72) = v31;
    v32 = (char *)v51 + *(int *)(v21 + 48);
    *v51 = v15;
    v33 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v32, v14, v17);
    GroupSessionMessenger.MessageContext.source.getter(v33);
    v34 = *(double (**)(char *, uint64_t))(v49 + 8);
    *(_QWORD *)(v0 + 512) = v34;
    v35.n128_f64[0] = v34(v32, v17);
    Participant.id.getter(v35);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v52, v57);
    v37 = UUID.uuidString.getter(v36);
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v53, v59);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v29;
    *(_QWORD *)(inited + 112) = v37;
    *(_QWORD *)(inited + 120) = v39;
    *(_QWORD *)(inited + 176) = &type metadata for String;
    *(_QWORD *)(inited + 184) = v29;
    *(_QWORD *)(inited + 152) = v61;
    *(_QWORD *)(inited + 160) = v60;
    v40 = swift_bridgeObjectRetain(v60);
    ((void (*)(char *, uint64_t, __n128))v34)(v30, v17, v40);
    v41.n128_f64[0] = v34(v54, v17);
    v42 = static os_log_type_t.default.getter(v41);
    sub_100A06EBC((uint64_t)v55, &_mh_execute_header, v42, "Process received chunked message with chainID: %{public}@ chunkIndex: %{public}d received from sender %{public}@ on group session UUID: %{public}@", 146, 2, inited);
    swift_setDeallocating(inited);
    v43 = *(_QWORD *)(inited + 16);
    v44 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v43, v44);

    Strong = swift_weakLoadStrong(v63);
    *(_QWORD *)(v0 + 520) = Strong;
    if (Strong)
    {
      return swift_task_switch(sub_1006E5A50, Strong, 0);
    }
    else
    {
      swift_release(v15);
      v46 = *(_QWORD *)(v0 + 496);
      v47 = *(_QWORD *)(v0 + 392);
      CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(26, 1, v46);
      swift_release(v46);
      sub_1004CB800(v47, &qword_1013EDBA0);
      v48 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 544) = v48;
      *v48 = v0;
      v48[1] = sub_1006E5C98;
      return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 456));
    }
  }
}

uint64_t sub_1006E59EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 472);
  v1 = sub_1004B804C(&qword_1013E0210);
  v2 = swift_dynamicCast(v1, v0 + 256, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1006E5A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 528) = v2;
  swift_retain(v2);
  swift_release(v1);
  return swift_task_switch(sub_1006E5A9C, 0, 0);
}

void sub_1006E5A9C()
{
  uint64_t v0;
  uint64_t (*v1)(char *, uint64_t, uint64_t);
  void (*v2)(char *, uint64_t);
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;

  if (*(_QWORD *)(v0 + 528))
  {
    v1 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v0 + 504);
    v2 = *(void (**)(char *, uint64_t))(v0 + 512);
    v3 = *(_QWORD *)(v0 + 488);
    v4 = *(_QWORD **)(v0 + 384);
    v5 = *(_QWORD *)(v0 + 328);
    v6 = *(_QWORD *)(v0 + 336);
    v7 = *(_QWORD *)(v0 + 296);
    v8 = *(_QWORD *)(v0 + 392) + *(int *)(v0 + 552);
    v9 = (char *)v4 + *(int *)(*(_QWORD *)(v0 + 352) + 48);
    *v4 = *(_QWORD *)(v0 + 480);
    v10 = v1(v9, v8, v3);
    GroupSessionMessenger.MessageContext.source.getter(v10);
    v2(v9, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    v11 = (_QWORD *)swift_task_alloc(dword_1014144BC);
    *(_QWORD *)(v0 + 536) = v11;
    *v11 = v0;
    v11[1] = sub_1006E5B78;
    sub_100DDD0C8(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 296));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006E5B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 528);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 480);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 296);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 536));
  swift_release(v1);
  swift_release(v2);
  sub_1004CB800(v3, &qword_1013E1ED0);
  return swift_task_switch(sub_1006E5C00, 0, 0);
}

uint64_t sub_1006E5C00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[62];
  v2 = v0[49];
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(26, 1, v1);
  swift_release(v1);
  sub_1004CB800(v2, &qword_1013EDBA0);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[68] = v3;
  *v3 = v0;
  v3[1] = sub_1006E5C98;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[50], v0[54], v0[57]);
}

uint64_t sub_1006E5C98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 544));
  if (v0)
  {
    *(_QWORD *)(v2 + 472) = v0;
    v3 = sub_1006E59EC;
  }
  else
  {
    v3 = sub_1006E54F8;
  }
  return swift_task_switch(v3, 0, 0);
}

_QWORD *sub_1006E5CFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[20];
  if (v1)
  {
    swift_retain(v0[20]);
    Task.cancel()();
    swift_release(v1);
  }
  v2 = v0[21];
  if (v2)
  {
    swift_retain(v0[21]);
    Task.cancel()();
    swift_release(v2);
  }
  v3 = v0[22];
  if (v3)
  {
    swift_retain(v0[22]);
    Task.cancel()();
    swift_release(v3);
  }
  sub_1004CBB0C((uint64_t)(v0 + 14));
  swift_bridgeObjectRelease(v0[17]);
  swift_release(v0[18]);
  swift_release(v0[19]);
  swift_release(v0[20]);
  swift_release(v0[21]);
  swift_release(v0[22]);
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_1006E5DF8()
{
  uint64_t v0;

  sub_1006E5CFC();
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLRealTimeMessenger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLRealTimeMessenger);
}

uint64_t sub_1006E5E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1006E5E34, v1, 0);
}

uint64_t sub_1006E5E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (qword_1013DCFC0 != -1)
    swift_once(&qword_1013DCFC0, sub_100709C44);
  v1 = v0[3];
  result = CRLAnalyticsOSSignpostManager.beginSignpostIntervalWithReturnedState(for:)(27, 1);
  v0[4] = result;
  v3 = *(_QWORD *)(v1 + 152);
  v0[5] = v3;
  if (v3)
  {
    swift_retain(v3);
    return swift_task_switch(sub_1006E5EC4, v3, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006E5EC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[5];
  v2 = sub_1008B867C();
  v3 = v1 + OBJC_IVAR____TtC8Freeform34CRLRealTimeMessengerImplementation__configuration;
  LOBYTE(v2) = *(_QWORD *)(v3 + *(int *)(type metadata accessor for CRLRealTimeMessengerConfiguration(0) + 20)) < v2;
  v4 = (uint64_t **)swift_task_alloc(dword_1014144D4);
  v0[6] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_1006E5F54;
  return sub_100DDFC94(v0[2], v2);
}

uint64_t sub_1006E5F54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 24);
    v5 = sub_1006E6018;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 24);
    swift_release(*(_QWORD *)(v2 + 40));
    v5 = sub_1006E5FC8;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1006E5FC8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(27, 1, v1);
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1006E6018()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1006E6054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1006E606C, v1, 0);
}

uint64_t sub_1006E606C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t **v5;

  if (qword_1013DCFC0 != -1)
    swift_once(&qword_1013DCFC0, sub_100709C44);
  v1 = v0[3];
  result = CRLAnalyticsOSSignpostManager.beginSignpostIntervalWithReturnedState(for:)(28, 1);
  v0[4] = result;
  v3 = *(_QWORD *)(v1 + 152);
  v0[5] = v3;
  if (v3)
  {
    v4 = dword_1014144CC;
    swift_retain(v3);
    v5 = (uint64_t **)swift_task_alloc(v4);
    v0[6] = (uint64_t)v5;
    *v5 = v0;
    v5[1] = (uint64_t *)sub_1006E6118;
    return sub_100DDF864(v0[2]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006E6118()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 24);
    v5 = sub_1006E6018;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 24);
    swift_release(*(_QWORD *)(v2 + 40));
    v5 = sub_1006E618C;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1006E618C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(28, 1, v1);
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1006E61DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = a1;
  v2[21] = v1;
  v3 = type metadata accessor for Participants(0);
  v2[22] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[23] = v4;
  v2[24] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006E623C, v1, 0);
}

uint64_t sub_1006E623C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  v1 = v0[23];
  v19 = v0[24];
  v3 = v0[21];
  v2 = v0[22];
  v4 = v0[20];
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 16, 0, 0);
  v5 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = sub_1008B867C();
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  v8 = *(_QWORD *)(v3 + 128);
  v9 = *(_QWORD *)(v3 + 136);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = sub_1004CFC2C();
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = v9;
  v10 = v5;
  v11 = swift_bridgeObjectRetain(v9);
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v12, "Transfer messages of size %{public}d to all participants on group session UUID: %{public}@.", 91, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v13);

  v0[19] = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v19, enum case for Participants.all(_:), v2);
  v14 = (_QWORD *)swift_task_alloc(async function pointer to GroupSessionMessenger.send<A>(_:to:)[1]);
  v0[25] = v14;
  v15 = type metadata accessor for CRLRealTimeMessage();
  v16 = sub_1004B7878((unint64_t *)&unk_1014147B0, (uint64_t (*)(uint64_t))type metadata accessor for CRLRealTimeMessage, (uint64_t)&unk_100F13784);
  v17 = sub_1004B7878(&qword_1013EDB60, (uint64_t (*)(uint64_t))type metadata accessor for CRLRealTimeMessage, (uint64_t)&unk_100F1375C);
  *v14 = v0;
  v14[1] = sub_1006E6450;
  return GroupSessionMessenger.send<A>(_:to:)(v0 + 19, v0[24], v15, v16, v17);
}

uint64_t sub_1006E6450()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*v1 + 192);
  v2 = *(_QWORD *)(*v1 + 200);
  v4 = *(_QWORD *)(*v1 + 176);
  v5 = *(_QWORD *)(*v1 + 184);
  v6 = *v1;
  *(_QWORD *)(v6 + 208) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    return swift_task_switch(sub_1006E64F0, *(_QWORD *)(v6 + 168), 0);
  swift_task_dealloc(*(_QWORD *)(v6 + 192));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1006E64F0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006E6524(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[20] = a1;
  v2[21] = v1;
  v3 = type metadata accessor for Participants(0);
  v2[22] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[23] = v4;
  v2[24] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006E6584, v1, 0);
}

void sub_1006E6584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  v1 = *(_QWORD *)(v0 + 160);
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 128, 0, 0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_OWORD *)(swift_initStackObject(v2, v0 + 16) + 16) = xmmword_100EF5A10;
  __asm { BR              X13 }
}

uint64_t sub_1006E6808(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for Participants(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006E6868, v1, 0);
}

uint64_t sub_1006E6868()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v0[2] = v0[3];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for Participants.all(_:), v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to GroupSessionMessenger.send<A>(_:to:)[1]);
  v0[8] = v4;
  v5 = type metadata accessor for CRLChunkedRealTimeMessage(0);
  v6 = sub_1004B7878(&qword_1013EDB40, type metadata accessor for CRLChunkedRealTimeMessage, (uint64_t)&unk_100F0B040);
  v7 = sub_1004B7878(&qword_1013EDB48, type metadata accessor for CRLChunkedRealTimeMessage, (uint64_t)&unk_100F0B018);
  *v4 = v0;
  v4[1] = sub_1006E694C;
  return GroupSessionMessenger.send<A>(_:to:)(v0 + 2, v0[7], v5, v6, v7);
}

uint64_t sub_1006E694C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*v1 + 56);
  v2 = *(_QWORD *)(*v1 + 64);
  v4 = *(_QWORD *)(*v1 + 40);
  v5 = *(_QWORD *)(*v1 + 48);
  v6 = *v1;
  *(_QWORD *)(v6 + 72) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    return swift_task_switch(sub_1005D66C8, *(_QWORD *)(v6 + 32), 0);
  swift_task_dealloc(*(_QWORD *)(v6 + 56));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1006E69EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1013EDAE4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_1006E5E34, v4, 0);
}

uint64_t sub_1006E6A50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1013EDAEC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_1006E606C, v4, 0);
}

uint64_t sub_1006E6AB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EDAF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1006E61DC(a1);
}

uint64_t sub_1006E6B00(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EDAFC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1006E6524(a1);
}

uint64_t sub_1006E6B4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EDB04);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1006E6808(a1);
}

uint64_t sub_1006E6B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1013EDB0C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1004CF80C;
  v6[3] = a2;
  v6[4] = v2;
  v6[2] = a1;
  return swift_task_switch(sub_100552AF0, v2, 0);
}

uint64_t sub_1006E6C08()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006E6C30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[6];
  v7 = v1[7];
  v9 = v1[8];
  v8 = v1[9];
  v10 = (_QWORD *)swift_task_alloc(dword_1013EDB74);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1006E2B7C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1006E6CD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[6];
  v7 = v1[7];
  v9 = v1[8];
  v8 = v1[9];
  v10 = (_QWORD *)swift_task_alloc(dword_1013EDB84);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CF80C;
  return sub_1006E4728(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1006E6D78()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1006E6DB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[6];
  v7 = v1[7];
  v9 = v1[8];
  v8 = v1[9];
  v10 = (_QWORD *)swift_task_alloc(dword_1013EDB94);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1006E51C8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1006E6E54(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for GroupSessionMessenger.Messages<A>.Iterator, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006E6E94()
{
  unint64_t result;

  result = qword_1014147A0;
  if (!qword_1014147A0)
  {
    result = swift_getWitnessTable(&unk_100F20990, &type metadata for CRLRealTimeSyncError);
    atomic_store(result, (unint64_t *)&qword_1014147A0);
  }
  return result;
}

_QWORD *sub_1006E6ED8(_QWORD *result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result[3] - 8);
  if ((*(_DWORD *)(v1 + 80) & 0x20000) != 0)
    return (_QWORD *)swift_slowDealloc(*result, *(_QWORD *)(v1 + 64)+ ((*(_DWORD *)(v1 + 80) + 16) & ~(unint64_t)*(_DWORD *)(v1 + 80)), *(_DWORD *)(v1 + 80) | 7);
  return result;
}

uint64_t sub_1006E6F0C()
{
  return sub_1004B7878(&qword_1013EDC60, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F063E4);
}

uint64_t type metadata accessor for CRLBoardEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EDD18;
  if (!qword_1013EDD18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardEntity);
  return result;
}

uint64_t sub_1006E6F74()
{
  return sub_1004B7878(&qword_1013EDC68, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F0641C);
}

uint64_t sub_1006E6FA0()
{
  return sub_1004B7878(&qword_1013EDC70, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F0644C);
}

unint64_t sub_1006E6FD0()
{
  unint64_t result;

  result = qword_1013EDC78;
  if (!qword_1013EDC78)
  {
    result = swift_getWitnessTable(&unk_100F2EF10, &type metadata for CRLBoardQuery);
    atomic_store(result, (unint64_t *)&qword_1013EDC78);
  }
  return result;
}

uint64_t sub_1006E7014()
{
  return sub_1004B7878(&qword_1013E99D8, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F065AC);
}

uint64_t sub_1006E7040()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t sub_1006E7048@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  _QWORD v66[3];

  v60 = a7;
  v61 = a3;
  v62 = a4;
  v63 = a6;
  v55 = a5;
  v64 = a1;
  v65 = a2;
  v59 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v59 - 8);
  v9 = __chkstk_darwin(v59);
  v58 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v56 = (char *)&v55 - v11;
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013EDD88);
  v25 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v27(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Board entity name property", 26, 2);
  *a8 = _IntentUpdatableEntityProperty<>.init(title:intent:)(v24, &type metadata for CRLRenameBoardIntent);
  sub_1004B804C(&qword_1013EDD90);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x696445207473614CLL, 0xEB00000000646574);
  static Locale.current.getter(v28);
  v27(v15, v26, v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Board entity property title", 27, 2);
  a8[1] = EntityProperty<>.init(title:)(v24);
  sub_1004B804C(&qword_1013EDD98);
  v29 = String.LocalizationValue.init(stringLiteral:)(0x657469726F766146, 0xE800000000000000);
  static Locale.current.getter(v29);
  v27(v15, v26, v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Board entity property title", 27, 2);
  a8[2] = EntityProperty<>.init(title:)(v24);
  v30 = String.LocalizationValue.init(stringLiteral:)(0x69724720776F6853, 0xE900000000000064);
  static Locale.current.getter(v30);
  v27(v15, v26, v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Board entity property title", 27, 2);
  a8[3] = EntityProperty<>.init(title:)(v24);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100FC6E00);
  static Locale.current.getter(v31);
  v27(v15, v26, v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Board entity property title", 27, 2);
  a8[4] = EntityProperty<>.init(title:)(v24);
  swift_unknownObjectWeakInit(a8 + 5, 0);
  v32 = (int *)type metadata accessor for CRLBoardEntity(0);
  v33 = (char *)a8 + v32[12];
  *(_OWORD *)v33 = xmmword_100F062D0;
  swift_unknownObjectWeakAssign(a8 + 5, v64);
  sub_1004B8460(v65, (uint64_t)a8 + v32[10], type metadata accessor for CRLBoardIdentifier);
  v34 = (int *)type metadata accessor for CRLBoardViewModelMetadata(0);
  v35 = v55;
  v36 = v55 + v34[6];
  v37 = sub_100BC1474(v36);
  v39 = v38;
  swift_bridgeObjectRelease(v40);
  v41 = (_QWORD *)((char *)a8 + v32[11]);
  *v41 = v37;
  v41[1] = v39;
  v42 = *(_QWORD *)v33;
  v43 = *((_QWORD *)v33 + 1);
  v44 = v63;
  v45 = v60;
  sub_10057939C(v63, v60);
  sub_1004BE2FC(v42, v43);
  *(_QWORD *)v33 = v44;
  *((_QWORD *)v33 + 1) = v45;
  v46 = v45;
  v47 = v56;
  v48 = v57;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v50 = v36;
  v51 = v59;
  v49(v56, v50, v59);
  v52 = v58;
  v49(v58, (uint64_t)v47, v51);
  EntityProperty.wrappedValue.setter(v52);
  v53.n128_f64[0] = (*(double (**)(char *, uint64_t))(v48 + 8))(v47, v51);
  v66[0] = v61;
  v66[1] = v62;
  _IntentUpdatableEntityProperty.wrappedValue.setter(v66, v53);
  LOBYTE(v66[0]) = *(_BYTE *)(v35 + 1);
  EntityProperty.wrappedValue.setter(v66);
  LOBYTE(v66[0]) = *(_BYTE *)(v35 + v34[13]);
  EntityProperty.wrappedValue.setter(v66);
  LOBYTE(v66[0]) = *(_BYTE *)(v35 + v34[14]);
  EntityProperty.wrappedValue.setter(v66);
  sub_1004BE2FC(v63, v46);

  sub_1004B84A4(v35, type metadata accessor for CRLBoardViewModelMetadata);
  return sub_1004B84A4(v65, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_1006E7644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  __n128 v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  __n128 v51;
  __n128 v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = v5;
  v64 = a4;
  v65 = a5;
  v10 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  v11 = __chkstk_darwin(v10);
  v60 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v58 - v13;
  v15 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for CRLBoardViewModelMetadata(0);
  v19 = *((_QWORD *)v18 - 1);
  __chkstk_darwin(v18);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v61 = v18;
    v22 = swift_bridgeObjectRetain(a2);
    _IntentUpdatableEntityProperty.wrappedValue.getter(&v66, v22);
    v23 = v67;
    if (v66 == a1 && v67 == a2)
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v23);
      v6 = v5;
      v18 = v61;
    }
    else
    {
      v59 = a3;
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v67, a1, a2, 0);
      v25 = swift_bridgeObjectRelease(v23);
      if ((v24 & 1) != 0)
      {
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        v66 = a1;
        v67 = a2;
        _IntentUpdatableEntityProperty.wrappedValue.setter(&v66, v25);
      }
      v6 = v5;
      v18 = v61;
      a3 = v59;
    }
  }
  sub_1006E957C(a3, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18) == 1)
  {
    result = sub_1006E95C4((uint64_t)v17);
  }
  else
  {
    sub_1004B84E0((uint64_t)v17, (uint64_t)v21, type metadata accessor for CRLBoardViewModelMetadata);
    v27 = v6;
    v28 = (uint64_t *)(v6 + *(int *)(type metadata accessor for CRLBoardEntity(0) + 44));
    v30 = *v28;
    v29 = v28[1];
    v31 = (uint64_t)&v21[v18[6]];
    v32 = sub_100BC1474(v31);
    v34 = v33;
    swift_bridgeObjectRelease(v35);
    if (v30 == v32 && v29 == v34)
    {
      v38 = swift_bridgeObjectRelease(v29);
    }
    else
    {
      v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v29, v32, v34, 0);
      v38 = swift_bridgeObjectRelease(v34);
      if ((v37 & 1) == 0)
      {
        v39 = sub_100BC1474(v31);
        v41 = v40;
        v43 = v42;
        swift_bridgeObjectRelease(v29);
        v38 = swift_bridgeObjectRelease(v43);
        *v28 = v39;
        v28[1] = v41;
      }
    }
    v6 = v27;
    EntityProperty.wrappedValue.getter(v38);
    sub_1004B7878((unint64_t *)&qword_1013EDD80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v44 = v63;
    v45 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v31);
    v46 = v62;
    v47 = *(void (**)(char *, uint64_t))(v62 + 8);
    v47(v14, v44);
    if ((v45 & 1) == 0)
    {
      v49 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
      v49(v14, v31, v44);
      v50 = v60;
      v49(v60, (uint64_t)v14, v44);
      v6 = v27;
      EntityProperty.wrappedValue.setter(v50);
      v47(v14, v44);
    }
    EntityProperty.wrappedValue.getter(v48);
    if (v66 != v21[1])
    {
      LOBYTE(v66) = v21[1];
      EntityProperty.wrappedValue.setter(&v66);
    }
    EntityProperty.wrappedValue.getter(v51);
    if (v66 != v21[v18[13]])
    {
      LOBYTE(v66) = v21[v18[13]];
      EntityProperty.wrappedValue.setter(&v66);
    }
    EntityProperty.wrappedValue.getter(v52);
    if (v66 != v21[v18[14]])
    {
      LOBYTE(v66) = v21[v18[14]];
      EntityProperty.wrappedValue.setter(&v66);
    }
    result = sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardViewModelMetadata);
  }
  if (v65 >> 60 != 15)
  {
    v53 = (uint64_t *)(v6 + *(int *)(type metadata accessor for CRLBoardEntity(0) + 48));
    v54 = *v53;
    v55 = v53[1];
    v56 = v64;
    v57 = v65;
    sub_1004BE310(v64, v65);
    result = sub_1004BE2FC(v54, v55);
    *v53 = v56;
    v53[1] = v57;
  }
  return result;
}

uint64_t sub_1006E7A60()
{
  uint64_t v0;
  _QWORD v2[2];
  _BYTE v3[40];

  sub_1004B804C(&qword_1013E1128);
  v2[0] = 0xD00000000000001FLL;
  v2[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v2, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v0 = static AppDependencyManager.shared.getter();
  qword_10147F278 = AppDependency.__allocating_init(key:manager:)(v3, v0);
  qword_10147F298 = type metadata accessor for CRLBoardEntityQueryPerformer(0);
  unk_10147F2A0 = &off_10129B510;
  sub_10050D1B0(qword_10147F280);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v3, 0, 0);
  return Logger.init(_:)((id)static OS_os_log.appIntents);
}

void sub_1006E7B6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  _QWORD v19[2];

  v4 = type metadata accessor for CRLBoardEntity(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 40);
  if (Strong)
  {
    v8 = (void *)Strong;
    v19[1] = a2;
    if (qword_1013DCB60 != -1)
      swift_once(&qword_1013DCB60, sub_100637218);
    v9 = qword_10147ECC0;
    sub_1004B8460(a1, (uint64_t)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardEntity);
    v10 = *(unsigned __int8 *)(v5 + 80);
    v11 = (v10 + 24) & ~v10;
    v12 = swift_allocObject(&unk_101278E08, v11 + v6, v10 | 7);
    *(_QWORD *)(v12 + 16) = v8;
    sub_1004B84E0((uint64_t)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for CRLBoardEntity);
    v13 = (void *)objc_opt_self(CKAllowedSharingOptions);
    v14 = v8;
    v15 = objc_msgSend(v13, "standardOptions");
    v16 = sub_1004B7878(&qword_1013EDDE0, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F06344);
    static CKShareTransferRepresentation.ExportedShare.prepareShare(container:allowedSharingOptions:preparationHandler:)(v9, v15, &unk_1013EDDD8, v12, v4, v16);
    swift_release(v12);

  }
  else
  {
    v17 = sub_1006E9618();
    swift_allocError(&type metadata for CRLBoardEntity.BoardEntityError, v17, 0, 0);
    swift_willThrow(v18);
  }
}

uint64_t sub_1006E7D30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v4 = *(int *)(type metadata accessor for CRLBoardEntity(0) + 40);
  *(_DWORD *)(v2 + 48) = v4;
  v5 = a2 + v4;
  v6 = (_QWORD *)swift_task_alloc(dword_10140DEFC);
  *(_QWORD *)(v2 + 32) = v6;
  *v6 = v2;
  v6[1] = sub_1006E7DA0;
  return sub_100C9C704(v5, 0);
}

uint64_t sub_1006E7DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  if (a1)
    return (*(uint64_t (**)(uint64_t))(v6 + 8))(a1);
  v8 = *(int *)(v4 + 48);
  v9 = *(_QWORD *)(v4 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_10140E2E4);
  *(_QWORD *)(v4 + 40) = v10;
  *v10 = v6;
  v10[1] = sub_1006E7E60;
  return sub_100CA1FEC(v9 + v8);
}

uint64_t sub_1006E7E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 40);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_1006E7EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_1004B804C(&qword_1013EDDB8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013EDDC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013EDDB0);
  sub_100501DE0(v7, qword_10147F2A8);
  sub_1004F2A1C(v7, (uint64_t)qword_10147F2A8);
  v8 = type metadata accessor for CRLBoardEntity(0);
  v9 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  _EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, v8, v9);
  v10._object = (void *)0x8000000100FC6E80;
  v10._countAndFlagsBits = 0xD000000000000014;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  _EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return _EntityURLRepresentation.init(stringInterpolation:)(v6, v8, v9);
}

uint64_t sub_1006E8050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;

  v28 = a1;
  v1 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v1);
  v29 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v27 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v16);
  v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v18(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Entity type name", 16, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v29, 1, 1, v13);
  v19 = sub_1004B804C(&qword_1013EDDA0);
  v26 = swift_allocObject(v19, ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ 4 * *(_QWORD *)(v14 + 72), *(unsigned __int8 *)(v14 + 80) | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100EF5E30;
  v20 = String.LocalizationValue.init(stringLiteral:)(0x616F626574696857, 0xEA00000000006472);
  static Locale.current.getter(v20);
  v18(v6, v17, v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Board entity name synonym", 25, 2);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x7361766E6143, 0xE600000000000000);
  static Locale.current.getter(v21);
  v18(v6, v17, v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Board entity name synonym", 25, 2);
  v22 = String.LocalizationValue.init(stringLiteral:)(0x6D726F6665657246, 0xE800000000000000);
  static Locale.current.getter(v22);
  v18(v6, v17, v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Board entity name synonym", 25, 2);
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100FC6E60);
  static Locale.current.getter(v23);
  v18(v6, v17, v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Board entity name synonym", 25, 2);
  return TypeDisplayRepresentation.init(name:numericFormat:synonyms:)(v27, v29, v26);
}

uint64_t sub_1006E848C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  Swift::String v22;
  __n128 v23;
  void *object;
  Swift::String v25;
  __n128 v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37[2];
  Swift::String v38;

  v37[1] = a1;
  v2 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v2);
  v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v37[0] = (uint64_t)v37 - v6;
  v7 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue.StringInterpolation(0, v12);
  __chkstk_darwin(v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)v37 - v20;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, v19);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  _IntentUpdatableEntityProperty.wrappedValue.getter(&v38, v23);
  object = v38._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v38);
  swift_bridgeObjectRelease(object);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
  LocalizedStringResource.init(stringInterpolation:)(v21);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1, v26);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
  v28 = type metadata accessor for CRLBoardEntity(0);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v1 + *(int *)(v28 + 44)));
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v29);
  LocalizedStringResource.init(stringInterpolation:)(v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v30 = v1 + *(int *)(v28 + 48);
  v31 = *(_QWORD *)(v30 + 8);
  if (v31 >> 60 == 15)
  {
    v32 = type metadata accessor for DisplayRepresentation.Image(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v4, 1, 1, v32);
  }
  else
  {
    v33 = *(_QWORD *)v30;
    sub_1004BE310(*(_QWORD *)v30, *(_QWORD *)(v30 + 8));
    DisplayRepresentation.Image.init(data:isTemplate:)(v33, v31, 2);
    v34 = type metadata accessor for DisplayRepresentation.Image(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v4, 0, 1, v34);
  }
  v35 = v37[0];
  sub_10065F320((uint64_t)v4, v37[0]);
  return DisplayRepresentation.init(title:subtitle:image:)(v14, v9, v35);
}

uint64_t sub_1006E8758@<X0>(uint64_t a1@<X8>)
{
  if (qword_1013DCF70 != -1)
    swift_once(&qword_1013DCF70, sub_1006E7A60);
  return sub_1006E981C(&qword_10147F278, a1);
}

uint64_t sub_1006E87A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101120458, 1);
}

uint64_t sub_1006E87B8(uint64_t a1, uint64_t a2)
{
  return CKShareTransferRepresentation.init(exporter:)(sub_1006E7B6C, 0, a1, a2);
}

uint64_t sub_1006E87D0()
{
  return sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
}

uint64_t sub_1006E87FC()
{
  return sub_1004B7878(&qword_1013EDC80, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F06484);
}

uint64_t sub_1006E8828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCF78 != -1)
    swift_once(&qword_1013DCF78, sub_1006E7EB4);
  v2 = sub_1004B804C(&qword_1013EDDB0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147F2A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1006E88A0()
{
  return sub_1004B7878(&qword_1013EDC88, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064AC);
}

uint64_t sub_1006E88CC()
{
  return sub_1004B7878(&qword_1013EDC90, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064D4);
}

uint64_t sub_1006E88F8()
{
  return sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
}

uint64_t sub_1006E8924()
{
  return sub_1004B7878((unint64_t *)&unk_1013EDC98, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F06554);
}

uint64_t sub_1006E8950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004B8460(v2 + *(int *)(a1 + 40), a2, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_1006E8978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1004B7878(&qword_1013EDDA8, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F0637C);
  v4 = _URLRepresentableEntity.urlRepresentationParameter.getter(a1, v3);
  return sub_1006E9604(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v4, v5);
}

uint64_t sub_1006E89DC()
{
  return sub_1004CBA30(&qword_1013EDCA8, &qword_1013EDCB0, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1006E8A08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1006E8A58()
{
  return sub_1004B7878(&qword_1013EDCB8, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F06584);
}

uint64_t sub_1006E8A88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&unk_1013EDC98, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F06554);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1006E8AD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  uint64_t v11;
  uint64_t v12;

  v2 = UUID.uuidString.getter(a1);
  v4 = v3;
  v11 = v2;
  v12 = v3;
  swift_bridgeObjectRetain(v3);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v7 = *v6;
  v8 = (void *)v6[1];
  swift_bridgeObjectRetain(v12);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_1006E8B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v16[16];

  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v12);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain(a2);
  sub_10067B81C(a1, a2, (uint64_t)v10);
  sub_1004B84E0((uint64_t)v10, (uint64_t)v14, type metadata accessor for CRLBoardIdentifierStorage);
  sub_1004B84E0((uint64_t)v14, a4, type metadata accessor for CRLBoardIdentifier);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a4, 0, 1, a3);
}

uint64_t *sub_1006E8C88(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    a1[1] = v8;
    a1[2] = v9;
    v10 = a2[3];
    v11 = a2[4];
    a1[3] = v10;
    a1[4] = v11;
    v12 = a2 + 5;
    swift_retain(v5);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v11);
    swift_unknownObjectWeakCopyInit(a1 + 5, v12);
    v13 = a3[10];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v18 = &v14[v17];
    v19 = &v15[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = a3[11];
    v22 = a3[12];
    v23 = (uint64_t *)((char *)a1 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)a1 + v22;
    v27 = (uint64_t *)((char *)a2 + v22);
    v28 = *(uint64_t *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v25);
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    else
    {
      v29 = *v27;
      sub_1004BE310(*v27, v28);
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
    }
  }
  return a1;
}

void sub_1006E8DE4(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_unknownObjectWeakDestroy(a1 + 5);
  v4 = (char *)a1 + a2[10];
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)&v4[*(int *)(v6 + 20) + 8]);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[11] + 8));
  v7 = (_QWORD *)((char *)a1 + a2[12]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_1004BBBC8(*v7, v8);
}

uint64_t *sub_1006E8EB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;

  v6 = *a2;
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[2];
  v9 = a2[3];
  a1[2] = v8;
  a1[3] = v9;
  v10 = a2[4];
  a1[4] = v10;
  v11 = a2 + 5;
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_unknownObjectWeakCopyInit(a1 + 5, v11);
  v12 = a3[10];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = a3[11];
  v21 = a3[12];
  v22 = (uint64_t *)((char *)a1 + v20);
  v23 = (uint64_t *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (char *)a1 + v21;
  v26 = (uint64_t *)((char *)a2 + v21);
  v27 = *(uint64_t *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v24);
  if (v27 >> 60 == 15)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  else
  {
    v28 = *v26;
    sub_1004BE310(*v26, v27);
    *(_QWORD *)v25 = v28;
    *((_QWORD *)v25 + 1) = v27;
  }
  return a1;
}

uint64_t *sub_1006E8FEC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[2];
  v11 = a1[2];
  a1[2] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[3];
  v13 = a1[3];
  a1[3] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[4];
  v15 = a1[4];
  a1[4] = v14;
  swift_retain(v14);
  swift_release(v15);
  swift_unknownObjectWeakCopyAssign(a1 + 5, a2 + 5);
  v16 = a3[10];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  v24 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = a3[11];
  v26 = (uint64_t *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  *v26 = *v27;
  v28 = v27[1];
  v29 = v26[1];
  v26[1] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  v30 = a3[12];
  v31 = (uint64_t *)((char *)a1 + v30);
  v32 = (uint64_t *)((char *)a2 + v30);
  v33 = *(uint64_t *)((char *)a2 + v30 + 8);
  if (*(unint64_t *)((char *)a1 + v30 + 8) >> 60 != 15)
  {
    if (v33 >> 60 != 15)
    {
      v35 = *v32;
      sub_1004BE310(v35, v33);
      v36 = *v31;
      v37 = v31[1];
      *v31 = v35;
      v31[1] = v33;
      sub_1004BBBC8(v36, v37);
      return a1;
    }
    sub_100586C00((uint64_t)v31);
    goto LABEL_6;
  }
  if (v33 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v31 = *(_OWORD *)v32;
    return a1;
  }
  v34 = *v32;
  sub_1004BE310(v34, v33);
  *v31 = v34;
  v31[1] = v33;
  return a1;
}

uint64_t sub_1006E91B4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeInit(a1 + 40, a2 + 40);
  v7 = a3[10];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  v12 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t *sub_1006E925C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  v8 = a1[2];
  a1[2] = a2[2];
  swift_release(v8);
  v9 = a1[3];
  a1[3] = a2[3];
  swift_release(v9);
  v10 = a1[4];
  a1[4] = a2[4];
  swift_release(v10);
  swift_unknownObjectWeakTakeAssign(a1 + 5, a2 + 5);
  v11 = a3[10];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v16 = &v12[v15];
  v17 = &v13[v15];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v20 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease(v20);
  v21 = a3[11];
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  v26 = v22[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease(v26);
  v27 = a3[12];
  v28 = (uint64_t *)((char *)a1 + v27);
  v29 = (uint64_t *)((char *)a2 + v27);
  v30 = *(uint64_t *)((char *)a1 + v27 + 8);
  if (v30 >> 60 != 15)
  {
    v31 = v29[1];
    if (v31 >> 60 != 15)
    {
      v32 = *v28;
      *v28 = *v29;
      v28[1] = v31;
      sub_1004BBBC8(v32, v30);
      return a1;
    }
    sub_100586C00((uint64_t)v28);
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
  return a1;
}

uint64_t sub_1006E93AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E93B8);
}

uint64_t sub_1006E93B8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CRLBoardIdentifier(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t sub_1006E9434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E9440);
}

char *sub_1006E9440(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for CRLBoardIdentifier(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1006E94B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = "\b";
  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    v4[7] = &unk_100F06610;
    v4[8] = &unk_100F06628;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1006E9550()
{
  return sub_1004CBA30(&qword_1013EDD70, &qword_1013EDD78, (uint64_t)&protocol conformance descriptor for CKShareTransferRepresentation<A>);
}

uint64_t sub_1006E957C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E4690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006E95C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E4690);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006E9604(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_1006E9618()
{
  unint64_t result;

  result = qword_1013EDDC8;
  if (!qword_1013EDDC8)
  {
    result = swift_getWitnessTable(&unk_100F066BC, &type metadata for CRLBoardEntity.BoardEntityError);
    atomic_store(result, &qword_1013EDDC8);
  }
  return result;
}

uint64_t sub_1006E965C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  v1 = (int *)type metadata accessor for CRLBoardEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_unknownObjectWeakDestroy(v0 + v4 + 40);
  v6 = v0 + v4 + v1[10];
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[11] + 8));
  v9 = (uint64_t *)(v0 + v4 + v1[12]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_1004BBBC8(*v9, v10);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1006E9760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardEntity(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v0 + ((v2 + 24) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1013EDDD4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1006E97CC;
  return sub_1006E7D30(v3, v4);
}

uint64_t sub_1006E97CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1006E981C(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for CRLiOSBoardEntity.BoardQuery(a2, a1);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLBoardEntity.BoardEntityError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1006E9898 + 4 * byte_100F062E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1006E98B8 + 4 * byte_100F062E5[v4]))();
}

_BYTE *sub_1006E9898(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1006E98B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006E98C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006E98C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006E98D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006E98D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardEntity.BoardEntityError()
{
  return &type metadata for CRLBoardEntity.BoardEntityError;
}

unint64_t sub_1006E98F8()
{
  unint64_t result;

  result = qword_1013EDDE8;
  if (!qword_1013EDDE8)
  {
    result = swift_getWitnessTable(&unk_100F06694, &type metadata for CRLBoardEntity.BoardEntityError);
    atomic_store(result, (unint64_t *)&qword_1013EDDE8);
  }
  return result;
}

void *sub_1006E993C()
{
  void *result;

  result = (void *)sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  off_1013EDDF0 = result;
  return result;
}

uint64_t sub_1006E9960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1004B804C(&qword_1013E04F0);
  sub_100501DE0(v0, qword_1013EDDF8);
  v1 = sub_1004F2A1C(v0, (uint64_t)qword_1013EDDF8);
  v2 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t type metadata accessor for CRLAnalyticsApplicationLaunch()
{
  return objc_opt_self(_TtC8Freeform29CRLAnalyticsApplicationLaunch);
}

void sub_1006E99E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_100CE1280();
  if (!v10)
    goto LABEL_24;
  v12 = v9;
  v13 = v10;
  v14 = v11;
  v15 = (_QWORD *)*a5;
  v17 = sub_100842E98(v9, v10);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_10082DBC8();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v27 = (uint64_t *)(v24[6] + 16 * v17);
    *v27 = v12;
    v27[1] = v13;
    *(_QWORD *)(v24[7] + 8 * v17) = v14;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v30;
LABEL_13:
    sub_100CE1280();
    if (v32)
    {
      v34 = v31;
      v35 = v32;
      v36 = v33;
      do
      {
        v42 = (_QWORD *)*a5;
        v44 = sub_100842E98(v34, v35);
        v45 = v42[2];
        v46 = (v43 & 1) == 0;
        v47 = v45 + v46;
        if (__OFADD__(v45, v46))
          goto LABEL_25;
        v48 = v43;
        if (v42[3] < v47)
        {
          sub_1008171C4(v47, 1);
          v49 = sub_100842E98(v34, v35);
          if ((v48 & 1) != (v50 & 1))
            goto LABEL_27;
          v44 = v49;
        }
        v51 = (_QWORD *)*a5;
        if ((v48 & 1) != 0)
        {
          swift_bridgeObjectRelease(v35);
          v37 = v51[7];
          v38 = 8 * v44;

          *(_QWORD *)(v37 + v38) = v36;
        }
        else
        {
          v51[(v44 >> 6) + 8] |= 1 << v44;
          v52 = (uint64_t *)(v51[6] + 16 * v44);
          *v52 = v34;
          v52[1] = v35;
          *(_QWORD *)(v51[7] + 8 * v44) = v36;
          v53 = v51[2];
          v29 = __OFADD__(v53, 1);
          v54 = v53 + 1;
          if (v29)
            goto LABEL_26;
          v51[2] = v54;
        }
        sub_100CE1280();
        v34 = v39;
        v35 = v40;
        v36 = v41;
      }
      while (v40);
    }
LABEL_24:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_1004D284C(a1);
    swift_release(a3);
    return;
  }
  sub_1008171C4(v20, a4 & 1);
  v22 = sub_100842E98(v12, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease(v13);
    v25 = v24[7];
    v26 = 8 * v17;

    *(_QWORD *)(v25 + v26) = v14;
    goto LABEL_13;
  }
LABEL_27:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

id sub_1006E9CCC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain(v2);
  return v4;
}

unint64_t sub_1006E9D04()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  __int128 *v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unsigned int v35;
  unint64_t v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  __int128 *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unsigned int v51;
  unint64_t v52;
  char v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  __int128 *v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  NSString v77;
  unint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v80;
  id v81;
  char v82;
  uint64_t v83;
  id v84;
  id v85;
  char v86;
  NSString v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  id v91;
  char v92;
  uint64_t v93;
  id v94;
  id v95;
  char v96;
  NSString v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  id v101;
  char v102;
  uint64_t v103;
  id v104;
  id v105;
  char v106;
  NSString v107;
  char v108;
  uint64_t v109;
  id v110;
  char v111;
  uint64_t v112;
  id v113;
  char v114;
  uint64_t v115;
  unsigned int v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  _QWORD v120[3];
  uint64_t v121;
  __int128 v122;
  __int128 v123;

  v0 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v115 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  v3 = (void *)objc_opt_self(NSUserDefaults);
  v4 = objc_msgSend(v3, "standardUserDefaults");
  v5 = sub_1004B804C(&qword_1013E1790);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v2, 1, 5, v5);
  sub_100BCB498();
  v8 = v7;
  sub_10060AA30((uint64_t)v2);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v4, "objectForKey:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  if (v10)
  {
    _bridgeAnyObjectToAny(_:)(&v122, v10);
    swift_unknownObjectRelease(v10);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004D28A4((uint64_t)&v122, (uint64_t)v120);
  if (!v121)
  {
    v15 = (__int128 *)v120;
LABEL_24:
    sub_1004CB800((uint64_t)v15, &qword_1013E0230);
    goto LABEL_25;
  }
  v11 = sub_1004B804C(&qword_1013FA4C0);
  if ((swift_dynamicCast(&v118, v120, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
    goto LABEL_25;
  v12 = v118;
  v118 = qword_101413180;
  v119 = off_101413188;
  swift_bridgeObjectRetain(off_101413188);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1008432BC((uint64_t)v120), (v14 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_22;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_40:
    swift_bridgeObjectRelease(v12);
    goto LABEL_25;
  }
  v16 = v118;
  v118 = qword_101413160;
  v119 = (char *)off_101413168;
  swift_bridgeObjectRetain(off_101413168);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v12 + 16) && (v17 = sub_1008432BC((uint64_t)v120), (v18 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v12 + 56) + 32 * v17, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
  {
LABEL_22:
    swift_bridgeObjectRelease(v12);
LABEL_23:
    v15 = &v122;
    goto LABEL_24;
  }
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
    goto LABEL_40;
  v19 = v118;
  v118 = qword_101413170;
  v119 = off_101413178;
  swift_bridgeObjectRetain(off_101413178);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v12 + 16) && (v20 = sub_1008432BC((uint64_t)v120), (v21 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v12 + 56) + 32 * v20, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  swift_bridgeObjectRelease(v12);
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    switch(v118)
    {
      case 2:
        v116 = v19;
        v76 = 0x8000000100FC6F50;
LABEL_133:
        v77 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v76);
        v78 = v117;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v117);
        v120[0] = v78;
        sub_100826868((uint64_t)v77, 0x6472616F426C6C61, 0xEF794274726F5373, isUniquelyReferenced_nonNull_native);
        v80 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v81 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v16);
        v82 = swift_isUniquelyReferenced_nonNull_native(v80);
        v120[0] = v80;
        sub_100826868((uint64_t)v81, 0xD000000000000016, 0x8000000100FC7070, v82);
        v83 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v84 = objc_allocWithZone((Class)NSNumber);
        v85 = objc_msgSend(v84, "initWithBool:", v116);
        v86 = swift_isUniquelyReferenced_nonNull_native(v83);
        v120[0] = v83;
        sub_100826868((uint64_t)v85, 0xD000000000000014, 0x8000000100FC7090, v86);
        v117 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        break;
      case 1:
        v116 = v19;
        v72 = 1702125892;
        goto LABEL_132;
      case 0:
        v116 = v19;
        v72 = 1701667150;
LABEL_132:
        v76 = v72 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        goto LABEL_133;
    }
  }
LABEL_25:
  v22 = objc_msgSend(v3, "standardUserDefaults");
  v6(v2, 2, 5, v5);
  sub_100BCB498();
  v24 = v23;
  sub_10060AA30((uint64_t)v2);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v22, "objectForKey:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  if (v26)
  {
    _bridgeAnyObjectToAny(_:)(&v122, v26);
    swift_unknownObjectRelease(v26);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004D28A4((uint64_t)&v122, (uint64_t)v120);
  if (!v121)
  {
    v31 = (__int128 *)v120;
LABEL_49:
    sub_1004CB800((uint64_t)v31, &qword_1013E0230);
    goto LABEL_50;
  }
  v27 = sub_1004B804C(&qword_1013FA4C0);
  if ((swift_dynamicCast(&v118, v120, (char *)&type metadata for Any + 8, v27, 6) & 1) == 0)
    goto LABEL_50;
  v28 = v118;
  v118 = qword_101413180;
  v119 = off_101413188;
  swift_bridgeObjectRetain(off_101413188);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v28 + 16) && (v29 = sub_1008432BC((uint64_t)v120), (v30 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_47;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_65:
    swift_bridgeObjectRelease(v28);
    goto LABEL_50;
  }
  v32 = v118;
  v118 = qword_101413160;
  v119 = (char *)off_101413168;
  swift_bridgeObjectRetain(off_101413168);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v28 + 16) && (v33 = sub_1008432BC((uint64_t)v120), (v34 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v28 + 56) + 32 * v33, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
  {
LABEL_47:
    swift_bridgeObjectRelease(v28);
LABEL_48:
    v31 = &v122;
    goto LABEL_49;
  }
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
    goto LABEL_65;
  v35 = v118;
  v118 = qword_101413170;
  v119 = off_101413178;
  swift_bridgeObjectRetain(off_101413178);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v28 + 16) && (v36 = sub_1008432BC((uint64_t)v120), (v37 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v28 + 56) + 32 * v36, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  swift_bridgeObjectRelease(v28);
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_48;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    switch(v118)
    {
      case 0:
        v116 = v35;
        v73 = 0xEC000000656D614ELL;
        goto LABEL_136;
      case 2:
        v116 = v35;
        v73 = 0x8000000100FC6F50;
        goto LABEL_136;
      case 1:
        v116 = v35;
        v73 = 0xEC00000065746144;
LABEL_136:
        v87 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v73);
        v88 = v117;
        v89 = swift_isUniquelyReferenced_nonNull_native(v117);
        v120[0] = v88;
        sub_100826868((uint64_t)v87, 0xD000000000000012, 0x8000000100FC7010, v89);
        v90 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v91 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v32);
        v92 = swift_isUniquelyReferenced_nonNull_native(v90);
        v120[0] = v90;
        sub_100826868((uint64_t)v91, 0xD000000000000019, 0x8000000100FC7030, v92);
        v93 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v94 = objc_allocWithZone((Class)NSNumber);
        v95 = objc_msgSend(v94, "initWithBool:", v116);
        v96 = swift_isUniquelyReferenced_nonNull_native(v93);
        v120[0] = v93;
        sub_100826868((uint64_t)v95, 0xD000000000000017, 0x8000000100FC7050, v96);
        v117 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        break;
    }
  }
LABEL_50:
  v38 = objc_msgSend(v3, "standardUserDefaults");
  v6(v2, 3, 5, v5);
  sub_100BCB498();
  v40 = v39;
  sub_10060AA30((uint64_t)v2);
  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend(v38, "objectForKey:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

  if (v42)
  {
    _bridgeAnyObjectToAny(_:)(&v122, v42);
    swift_unknownObjectRelease(v42);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004D28A4((uint64_t)&v122, (uint64_t)v120);
  if (!v121)
  {
    v47 = (__int128 *)v120;
LABEL_74:
    sub_1004CB800((uint64_t)v47, &qword_1013E0230);
    goto LABEL_75;
  }
  v43 = sub_1004B804C(&qword_1013FA4C0);
  if ((swift_dynamicCast(&v118, v120, (char *)&type metadata for Any + 8, v43, 6) & 1) == 0)
    goto LABEL_75;
  v44 = v118;
  v118 = qword_101413180;
  v119 = off_101413188;
  swift_bridgeObjectRetain(off_101413188);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v44 + 16) && (v45 = sub_1008432BC((uint64_t)v120), (v46 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v44 + 56) + 32 * v45, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_72;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_90:
    swift_bridgeObjectRelease(v44);
    goto LABEL_75;
  }
  v48 = v118;
  v118 = qword_101413160;
  v119 = (char *)off_101413168;
  swift_bridgeObjectRetain(off_101413168);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v44 + 16) && (v49 = sub_1008432BC((uint64_t)v120), (v50 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v44 + 56) + 32 * v49, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
  {
LABEL_72:
    swift_bridgeObjectRelease(v44);
LABEL_73:
    v47 = &v122;
    goto LABEL_74;
  }
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
    goto LABEL_90;
  v51 = v118;
  v118 = qword_101413170;
  v119 = off_101413178;
  swift_bridgeObjectRetain(off_101413178);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v44 + 16) && (v52 = sub_1008432BC((uint64_t)v120), (v53 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v44 + 56) + 32 * v52, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  swift_bridgeObjectRelease(v44);
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_73;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    switch(v118)
    {
      case 0:
        v116 = v51;
        v74 = 0xEC000000656D614ELL;
        goto LABEL_139;
      case 2:
        v116 = v51;
        v74 = 0x8000000100FC6F50;
        goto LABEL_139;
      case 1:
        v116 = v51;
        v74 = 0xEC00000065746144;
LABEL_139:
        v97 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v74);
        v98 = v117;
        v99 = swift_isUniquelyReferenced_nonNull_native(v117);
        v120[0] = v98;
        sub_100826868((uint64_t)v97, 0xD000000000000014, 0x8000000100FC6FB0, v99);
        v100 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v101 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v48);
        v102 = swift_isUniquelyReferenced_nonNull_native(v100);
        v120[0] = v100;
        sub_100826868((uint64_t)v101, 0xD00000000000001BLL, 0x8000000100FC6FD0, v102);
        v103 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v104 = objc_allocWithZone((Class)NSNumber);
        v105 = objc_msgSend(v104, "initWithBool:", v116);
        v106 = swift_isUniquelyReferenced_nonNull_native(v103);
        v120[0] = v103;
        sub_100826868((uint64_t)v105, 0xD000000000000019, 0x8000000100FC6FF0, v106);
        v117 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        break;
    }
  }
LABEL_75:
  v54 = objc_msgSend(v3, "standardUserDefaults");
  v6(v2, 4, 5, v5);
  sub_100BCB498();
  v56 = v55;
  sub_10060AA30((uint64_t)v2);
  v57 = String._bridgeToObjectiveC()();
  v58 = objc_msgSend(v54, "objectForKey:", v57, swift_bridgeObjectRelease(v56).n128_f64[0]);

  if (v58)
  {
    _bridgeAnyObjectToAny(_:)(&v122, v58);
    swift_unknownObjectRelease(v58);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  v59 = v117;
  sub_1004D28A4((uint64_t)&v122, (uint64_t)v120);
  if (!v121)
  {
    v64 = (__int128 *)v120;
LABEL_99:
    sub_1004CB800((uint64_t)v64, &qword_1013E0230);
    return v59;
  }
  v60 = sub_1004B804C(&qword_1013FA4C0);
  if ((swift_dynamicCast(&v118, v120, (char *)&type metadata for Any + 8, v60, 6) & 1) == 0)
    return v59;
  v61 = v118;
  v118 = qword_101413180;
  v119 = off_101413188;
  swift_bridgeObjectRetain(off_101413188);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v61 + 16) && (v62 = sub_1008432BC((uint64_t)v120), (v63 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v61 + 56) + 32 * v62, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_97;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_101:
    swift_bridgeObjectRelease(v61);
    return v59;
  }
  v65 = v118;
  v118 = qword_101413160;
  v119 = (char *)off_101413168;
  swift_bridgeObjectRetain(off_101413168);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v61 + 16) && (v66 = sub_1008432BC((uint64_t)v120), (v67 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v61 + 56) + 32 * v66, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
  {
LABEL_97:
    swift_bridgeObjectRelease(v61);
LABEL_98:
    v64 = &v122;
    goto LABEL_99;
  }
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
    goto LABEL_101;
  v68 = v118;
  v118 = qword_101413170;
  v119 = off_101413178;
  swift_bridgeObjectRetain(off_101413178);
  AnyHashable.init<A>(_:)(&v118, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v61 + 16) && (v69 = sub_1008432BC((uint64_t)v120), (v70 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v61 + 56) + 32 * v69, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  swift_bridgeObjectRelease(v61);
  sub_1004B89A4((uint64_t)v120);
  if (!*((_QWORD *)&v123 + 1))
    goto LABEL_98;
  if ((swift_dynamicCast(&v118, &v122, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    switch(v118)
    {
      case 0:
        v75 = 0xEC000000656D614ELL;
        goto LABEL_142;
      case 2:
        v75 = 0x8000000100FC6F50;
        goto LABEL_142;
      case 1:
        v75 = 0xEC00000065746144;
LABEL_142:
        v107 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v75);
        v108 = swift_isUniquelyReferenced_nonNull_native(v59);
        v120[0] = v59;
        sub_100826868((uint64_t)v107, 0xD000000000000012, 0x8000000100FC6F30, v108);
        v109 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v110 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v65);
        v111 = swift_isUniquelyReferenced_nonNull_native(v109);
        v120[0] = v109;
        sub_100826868((uint64_t)v110, 0xD000000000000019, 0x8000000100FC6F70, v111);
        v112 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v113 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v68);
        v114 = swift_isUniquelyReferenced_nonNull_native(v112);
        v120[0] = v112;
        sub_100826868((uint64_t)v113, 0xD000000000000017, 0x8000000100FC6F90, v114);
        v59 = v120[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        break;
    }
  }
  return v59;
}

uint64_t sub_1006EAF48(uint64_t a1, uint64_t a2)
{
  id v4;
  char isUniquelyReferenced_nonNull_native;
  void *v6;
  id v7;
  char v8;
  void *v9;
  void *v11;
  void *v12;
  _BYTE v13[24];

  if (qword_1013DCF80 != -1)
    swift_once(&qword_1013DCF80, sub_1006E993C);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
  swift_beginAccess(&off_1013EDDF0, v13, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1013EDDF0);
  v11 = off_1013EDDF0;
  off_1013EDDF0 = (_UNKNOWN *)0x8000000000000000;
  sub_100826868((uint64_t)v4, 0x6472616F426C6C61, 0xED0000746E756F43, isUniquelyReferenced_nonNull_native);
  v6 = off_1013EDDF0;
  off_1013EDDF0 = v11;
  swift_bridgeObjectRelease(v6);
  swift_endAccess(v13);
  v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2);
  swift_beginAccess(&off_1013EDDF0, v13, 33, 0);
  v8 = swift_isUniquelyReferenced_nonNull_native(off_1013EDDF0);
  v12 = off_1013EDDF0;
  off_1013EDDF0 = (_UNKNOWN *)0x8000000000000000;
  sub_100826868((uint64_t)v7, 0xD000000000000012, 0x8000000100FC6F10, v8);
  v9 = off_1013EDDF0;
  off_1013EDDF0 = v12;
  swift_bridgeObjectRelease(v9);
  return swift_endAccess(v13);
}

uint64_t sub_1006EB0CC(uint64_t a1)
{
  char isUniquelyReferenced_nonNull_native;
  void *v3;
  void *v5;
  _BYTE v6[24];

  if (qword_1013DCF80 != -1)
    swift_once(&qword_1013DCF80, sub_1006E993C);
  swift_beginAccess(&off_1013EDDF0, v6, 33, 0);
  swift_bridgeObjectRetain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1013EDDF0);
  v5 = off_1013EDDF0;
  off_1013EDDF0 = (_UNKNOWN *)0x8000000000000000;
  sub_1006E99E8(a1, (uint64_t)sub_1006E9CCC, 0, isUniquelyReferenced_nonNull_native, &v5);
  v3 = off_1013EDDF0;
  off_1013EDDF0 = v5;
  swift_bridgeObjectRelease(v3);
  return swift_endAccess(v6);
}

void sub_1006EB194(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  char isUniquelyReferenced_nonNull_native;
  void *v41;
  char *v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void *v47;
  NSString v48;
  void *v49;
  Class isa;
  char *v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  void *v57;
  _BYTE v58[24];
  char v59[24];
  char v60[72];
  char v61[32];

  v56 = a5;
  v55 = a4;
  v53 = a3;
  v54 = a2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - v10;
  v12 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  if (qword_1013DD748 != -1)
    swift_once(&qword_1013DD748, sub_100A023E8);
  swift_beginAccess(&static OS_os_log.crlBoardLibrary, v61, 0, 0);
  v18 = (void *)static OS_os_log.crlBoardLibrary;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v19, v60);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = a1;
  v21 = v18;
  v23 = static os_log_type_t.default.getter(v22);
  sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "Snapshot's All Boards count: %d", 31, 2, inited);
  swift_setDeallocating(inited);
  v24 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v24);

  if ((byte_1013EDE10 & 1) == 0)
  {
    v51 = v11;
    if (qword_1013DCF88 != -1)
      swift_once(&qword_1013DCF88, sub_1006E9960);
    v25 = sub_1004F2A1C(v12, (uint64_t)qword_1013EDDF8);
    swift_beginAccess(v25, v59, 0, 0);
    sub_1004E1F60(v25, (uint64_t)v17);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
    v27 = v26(v17, 1, v6);
    v28 = sub_1004CB800((uint64_t)v17, &qword_1013E04F0);
    if (v27 == 1)
    {
      Date.init(timeIntervalSinceNow:)(v28, 120.0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      swift_beginAccess(v25, v58, 33, 0);
      sub_10056AFBC((uint64_t)v14, v25);
      swift_endAccess(v58);
    }
    if (qword_1013DCF80 != -1)
      swift_once(&qword_1013DCF80, sub_1006E993C);
    swift_beginAccess(&off_1013EDDF0, v58, 32, 0);
    v29 = off_1013EDDF0;
    if (*((_QWORD *)off_1013EDDF0 + 2)
      && (v30 = sub_100842E98(0x6472616F426C6C61, 0xED0000746E756F43), (v31 & 1) != 0))
    {
      v32 = *(void **)(v29[7] + 8 * v30);
      swift_endAccess(v58);
      v33 = objc_opt_self(NSNumber);
      v34 = swift_dynamicCastObjCClass(v32, v33);
      if (v34)
      {
        v35 = (void *)v34;
        v36 = v32;
        v37 = v35;
        if ((uint64_t)objc_msgSend(v35, "integerValue") < a1)
          goto LABEL_18;
LABEL_17:
        v37 = v35;
        if (*((_QWORD *)off_1013EDDF0 + 2))
        {
LABEL_19:
          if (!v26((char *)v25, 1, v6))
          {
            v42 = v51;
            v43.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v7 + 16))(v51, v25, v6);
            v44 = v52;
            static Date.now.getter(v43);
            v45 = Date.compare(_:)(v44);
            v46 = *(void (**)(char *, uint64_t))(v7 + 8);
            v46(v44, v6);
            v46(v42, v6);
            if (v45 == -1)
              goto LABEL_22;
          }
          if ((v56 & 1) != 0)
          {
LABEL_22:
            byte_1013EDE10 = 1;
            v47 = (void *)objc_opt_self(CRLAnalyticsLogger);
            v48 = String._bridgeToObjectiveC()();
            v49 = off_1013EDDF0;
            sub_100511A70();
            swift_bridgeObjectRetain(v49);
            isa = Dictionary._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v47, "sendEventInDomain:lazily:eventPayload:", v48, 1, isa, swift_bridgeObjectRelease(v49).n128_f64[0]);

          }
          return;
        }
LABEL_18:
        v38 = objc_allocWithZone((Class)NSNumber);
        v39 = objc_msgSend(v38, "initWithBool:", v53 & 1);
        swift_beginAccess(&off_1013EDDF0, v58, 33, 0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1013EDDF0);
        v57 = off_1013EDDF0;
        off_1013EDDF0 = (_UNKNOWN *)0x8000000000000000;
        sub_100826868((uint64_t)v39, 0x6F4D6B7261446E69, 0xEA00000000006564, isUniquelyReferenced_nonNull_native);
        v41 = off_1013EDDF0;
        off_1013EDDF0 = v57;
        swift_bridgeObjectRelease(v41);
        swift_endAccess(v58);
        sub_1006EAF48(a1, v54);
        sub_1006EB0CC(v55);
        v35 = v37;
        goto LABEL_19;
      }
    }
    else
    {
      swift_endAccess(v58);
    }
    v35 = 0;
    v37 = 0;
    if (a1 > 0)
      goto LABEL_18;
    goto LABEL_17;
  }
}

void sub_1006EB740(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1006EB7A0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_1006EB7F8(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  int64_t v37;
  Swift::Int v38;
  uint64_t v39;
  void *v40;
  objc_super v41;
  _QWORD v42[5];

  v4 = v3;
  v41.receiver = v4;
  v41.super_class = (Class)type metadata accessor for CRLUSDZEditor();
  objc_msgSendSuper2(&v41, "selectionDidChangeFromSelection:toSelection:withFlags:", a1, a2, a3);
  v8 = objc_msgSend(v4, "interactiveCanvasController");
  if (v8)
  {
    v9 = v8;
    v10 = type metadata accessor for CRLBoardItemSelection();
    if (swift_dynamicCastClass(a2, v10))
    {
      v11 = type metadata accessor for CRLUSDZItem(0);
      v12 = a2;
      v13 = sub_1005028D4(v11);
      v14 = v13;
      v36 = v12;
      if ((v13 & 0xC000000000000001) != 0)
      {
        if (v13 >= 0)
          v13 &= 0xFFFFFFFFFFFFFF8uLL;
        v15 = __CocoaSet.makeIterator()(v13);
        v16 = type metadata accessor for CRLBoardItem(0);
        v17 = sub_10058528C();
        v13 = (Swift::Int)Set.Iterator.init(_cocoa:)(v42, v15, v16, v17);
        v14 = v42[0];
        v38 = v42[1];
        v18 = v42[2];
        v19 = v42[3];
        v20 = v42[4];
      }
      else
      {
        v19 = 0;
        v21 = -1 << *(_BYTE *)(v13 + 32);
        v38 = v13 + 56;
        v18 = ~v21;
        v22 = -v21;
        if (v22 < 64)
          v23 = ~(-1 << v22);
        else
          v23 = -1;
        v20 = v23 & *(_QWORD *)(v13 + 56);
      }
      v35 = v18;
      v37 = (unint64_t)(v18 + 64) >> 6;
      if (v14 < 0)
        goto LABEL_14;
      while (1)
      {
        if (v20)
        {
          v24 = (v20 - 1) & v20;
          v25 = __clz(__rbit64(v20)) | (v19 << 6);
          v26 = v19;
        }
        else
        {
          v31 = v19 + 1;
          if (__OFADD__(v19, 1))
          {
            __break(1u);
            return;
          }
          if (v31 >= v37)
            goto LABEL_34;
          v32 = *(_QWORD *)(v38 + 8 * v31);
          v26 = v19 + 1;
          if (!v32)
          {
            v26 = v19 + 2;
            if (v19 + 2 >= v37)
              goto LABEL_34;
            v32 = *(_QWORD *)(v38 + 8 * v26);
            if (!v32)
            {
              v26 = v19 + 3;
              if (v19 + 3 >= v37)
                goto LABEL_34;
              v32 = *(_QWORD *)(v38 + 8 * v26);
              if (!v32)
              {
                v26 = v19 + 4;
                if (v19 + 4 >= v37)
                  goto LABEL_34;
                v32 = *(_QWORD *)(v38 + 8 * v26);
                if (!v32)
                {
                  v33 = v19 + 5;
                  while (v37 != v33)
                  {
                    v32 = *(_QWORD *)(v38 + 8 * v33++);
                    if (v32)
                    {
                      v26 = v33 - 1;
                      goto LABEL_30;
                    }
                  }
LABEL_34:
                  sub_1004D284C(v14);

                  break;
                }
              }
            }
          }
LABEL_30:
          v24 = (v32 - 1) & v32;
          v25 = __clz(__rbit64(v32)) + (v26 << 6);
        }
        v30 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v25);
        if (!v30)
          goto LABEL_34;
        while (1)
        {
          v34 = objc_msgSend(v9, "repForInfo:", v30, v35, v36);
          objc_msgSend(v34, "invalidateKnobs");

          v19 = v26;
          v20 = v24;
          if ((v14 & 0x8000000000000000) == 0)
            break;
LABEL_14:
          v27 = __CocoaSet.Iterator.next()(v13);
          if (v27)
          {
            v28 = v27;
            v39 = v27;
            v29 = type metadata accessor for CRLBoardItem(0);
            swift_unknownObjectRetain(v28);
            swift_dynamicCast(&v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, v29, 7);
            v30 = v40;
            swift_unknownObjectRelease(v28);
            v26 = v19;
            v24 = v20;
            if (v30)
              continue;
          }
          goto LABEL_34;
        }
      }
    }

  }
}

uint64_t sub_1006EBBB0()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _UNKNOWN ****v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  __n128 v31;
  __n128 v32;
  _BYTE v33[24];

  v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "boardItems", v2);
  v6 = type metadata accessor for CRLBoardItem(0);
  v7 = sub_10058528C();
  v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

  if ((v8 & 0xC000000000000001) != 0)
  {
    if (v8 < 0)
      v9 = v8;
    else
      v9 = v8 & 0xFFFFFFFFFFFFFF8;
    v10 = __CocoaSet.count.getter(v9);
  }
  else
  {
    v10 = *(_QWORD *)(v8 + 16);
  }
  *(_QWORD *)&v11 = swift_bridgeObjectRelease().n128_u64[0];
  if (v10 != 1)
    goto LABEL_14;
  v12 = objc_msgSend(v0, "boardItems", v11);
  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v6, v7);

  v14 = (void *)sub_100857E90(v13);
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_14;
  v15 = type metadata accessor for CRLUSDZItem(0);
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
    goto LABEL_13;
  v17 = v16;
  if (qword_1013DD120 != -1)
    swift_once(&qword_1013DD120, sub_1007B58D0);
  if ((byte_10147F5F8 & 1) != 0)
  {
LABEL_13:

LABEL_14:
    sub_100757E04(&_mh_execute_header, (uint64_t)"canResetOrientation", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZEditor.swift", 84, 2, 26, "expected single selected board item to be a 3D object", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"canResetOrientation", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZEditor.swift", 84, 2u, 26, (uint64_t)"expected single selected board item to be a 3D object", 53, 2u);
    v18 = 0;
    return v18 & 1;
  }
  v20 = *(_UNKNOWN *****)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v20 == &off_10140F528)
    v21 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v21 = 0;
  swift_beginAccess(v21 + qword_101481450, v33, 32, 0);
  swift_retain(v20);
  v22 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v22);
  swift_endAccess(v33);
  swift_release(v20);
  v32 = *(__n128 *)&v4[*(int *)(v1 + 24)];
  sub_1006ED158((uint64_t)v4);
  v31 = (__n128)matrix_identity_float4x4.columns[3];
  v23 = CRL3DRotation.rawValue.getter(v32);
  v25 = v24;
  v26 = CRL3DRotation.rawValue.getter(v31);
  v28 = v27;
  sub_1007B38CC(v23, v25);
  v30 = v29;
  sub_1004BBBC8(v26, v28);
  sub_1004BBBC8(v23, v25);

  v18 = v30 ^ 1;
  return v18 & 1;
}

void sub_1006EBEC8()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;

  v1 = objc_msgSend(v0, "boardItems");
  v2 = type metadata accessor for CRLBoardItem(0);
  v3 = sub_10058528C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = v4;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    v6 = __CocoaSet.count.getter(v5);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 16);
  }
  *(_QWORD *)&v7 = swift_bridgeObjectRelease().n128_u64[0];
  if (v6 != 1)
    goto LABEL_15;
  v8 = objc_msgSend(v0, "boardItems", v7);
  v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v2, v3);

  v18 = (id)sub_100857E90(v9);
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_15;
  v10 = type metadata accessor for CRLUSDZItem(0);
  v11 = swift_dynamicCastClass(v18, v10);
  if (!v11)
  {

LABEL_15:
    sub_100757E04(&_mh_execute_header, (uint64_t)"resetOrientation()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZEditor.swift", 84, 2, 35, "expected single selected board item to be a 3D object", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resetOrientation()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZEditor.swift", 84, 2u, 35, (uint64_t)"expected single selected board item to be a 3D object", 53, 2u);
    return;
  }
  v12 = v11;
  v13 = objc_msgSend(v0, "interactiveCanvasController");
  if (!v13)
    goto LABEL_17;
  v14 = v13;
  v17 = objc_msgSend(v13, "repForInfo:", v12);

  if (!v17)
    goto LABEL_17;
  v15 = type metadata accessor for CRLUSDZRep(0);
  if (!swift_dynamicCastClass(v17, v15))
  {

LABEL_17:
    sub_100757E04(&_mh_execute_header, (uint64_t)"resetOrientation()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZEditor.swift", 84, 2, 40, "Unable to get rep for 3D object.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resetOrientation()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZEditor.swift", 84, 2u, 40, (uint64_t)"Unable to get rep for 3D object.", 32, 2u);
    v16 = v18;
    goto LABEL_18;
  }
  sub_1009BE010();

  v16 = v17;
LABEL_18:

}

uint64_t sub_1006EC18C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, __n128 a5, double a6, double a7, double a8, double a9)
{
  unint64_t v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10[13].n128_u64[0] = a4;
  v10[13].n128_u64[1] = v9;
  v10[12].n128_u64[0] = a2;
  v10[12].n128_u64[1] = a3;
  v10[11].n128_f64[0] = a8;
  v10[11].n128_f64[1] = a9;
  v10[10].n128_f64[0] = a6;
  v10[10].n128_f64[1] = a7;
  v10[1] = a5;
  v10[9].n128_u64[1] = a1;
  v11 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  v10[14].n128_u64[0] = v11;
  v10[14].n128_u64[1] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v10[15].n128_u64[0] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006EC230, v13, v14);
}

uint64_t sub_1006EC230()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  float64x2_t v4;
  float64x2_t v5;
  uint64_t v6;
  _UNKNOWN ****v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t *v12;
  float32x2_t v13;
  int8x16_t v14;
  objc_class *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  double v30;
  id v31;
  id v32;
  uint64_t v33;
  __int128 v35;
  float64x2_t v36;
  float64x2_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(int **)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v5.f64[0] = *(float64_t *)(v0 + 160);
  v4.f64[0] = *(float64_t *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 152);
  v5.f64[1] = *(float64_t *)(v0 + 176);
  v37 = v5;
  v4.f64[1] = *(float64_t *)(v0 + 184);
  v35 = *(_OWORD *)(v0 + 16);
  v36 = v4;
  swift_release(*(_QWORD *)(v0 + 240));
  v7 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v7 == &off_10140F528)
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v8 = 0;
  swift_beginAccess(v8 + qword_101481450, v0 + 104, 32, 0);
  swift_retain(v7);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v9);
  swift_endAccess(v0 + 104);
  swift_release(v7);
  *(_OWORD *)(v1 + v2[6]) = v35;
  v10 = v1 + v2[5];
  sub_1006ED118(v10);
  sub_10069BF0C(v6, v10);
  v11 = type metadata accessor for CRLAssetData(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = (int8x16_t *)(v1 + v2[7]);
  v13 = vcvt_f32_f64(v37);
  v14.i64[0] = v13.u32[0];
  v14.i64[1] = v13.u32[1];
  *v12 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v36), 0x20uLL), v14);
  v12[1].i8[0] = 0;
  if (qword_1013DD8C0 != -1)
    swift_once(&qword_1013DD8C0, sub_100A0685C);
  v15 = *(objc_class **)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v17 = *(char **)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.assetManagement, v0 + 128, 0, 0);
  v18 = (void *)static OS_os_log.assetManagement;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v19, v0 + 32);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v21 = v18;
  v22 = UUID.uuidString.getter(v21);
  v24 = v23;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(inited + 40) = v24;
  v26 = static os_log_type_t.info.getter(v25);
  sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v26, "Setting new poster asset with UUID %{public}@", 45, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v27);

  v28 = sub_1006EC54C();
  v29 = sub_10097BF60(v15, v17, v16, v38);
  *(_QWORD *)&v30 = swift_release(v28).n128_u64[0];
  if (v29)
  {
    v31 = objc_msgSend(*(id *)(v0 + 216), "interactiveCanvasController", v30);
    v32 = objc_msgSend(v31, "commandController");

    if (v32)
    {
      sub_1006A5F54(v29, 0, 0, 4, 0);

    }
  }
  v33 = *(_QWORD *)(v0 + 232);
  sub_1006ED158(v33);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006EC54C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC8Freeform13CRLUSDZEditor____lazy_storage___commandProvider;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform13CRLUSDZEditor____lazy_storage___commandProvider];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform13CRLUSDZEditor____lazy_storage___commandProvider];
  }
  else
  {
    v4 = objc_msgSend(v0, "editingCoordinator");
    v5 = type metadata accessor for CRLUSDZItemCommandProvider();
    v3 = swift_allocObject(v5, 32, 7);
    v6 = swift_unknownObjectWeakInit(v3 + 16);
    *(_QWORD *)(v3 + 24) = 0;
    swift_unknownObjectWeakAssign(v6, v4);

    v7 = *(_QWORD *)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

void sub_1006EC5F8(void *a1, double a2, double a3)
{
  void *v3;
  unint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  void *v24;
  id v25;
  id v26;
  NSString v27;
  id v28;
  id v29;
  NSString v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  NSString v37;
  id v38;
  objc_super v39;
  _QWORD v40[5];

  v7 = sub_1006ED194();
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(v7, v8), "instancesRespondToSelector:", "addMiniFormatterElementsToArray:atPoint:"))
  {
    v39.receiver = v3;
    v39.super_class = (Class)type metadata accessor for CRLUSDZEditor();
    objc_msgSendSuper2(&v39, "addMiniFormatterElementsToArray:atPoint:", a1, a2, a3);
  }
  v40[3] = &type metadata for CRLFeatureFlags;
  v40[4] = sub_1004DB6DC();
  LOBYTE(v40[0]) = 20;
  v9 = isFeatureEnabled(_:)(v40);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v40);
  if ((v9 & 1) != 0)
  {
    v10 = objc_msgSend(v3, "boardItems");
    v11 = type metadata accessor for CRLBoardItem(0);
    v12 = sub_10058528C();
    v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, v11, v12);

    if ((v13 & 0xC000000000000001) != 0)
    {
      if (v13 < 0)
        v14 = v13;
      else
        v14 = v13 & 0xFFFFFFFFFFFFFF8;
      v15 = __CocoaSet.count.getter(v14);
    }
    else
    {
      v15 = *(_QWORD *)(v13 + 16);
    }
    swift_bridgeObjectRelease(v13);
    if (v15 <= 1)
    {
      v16 = (void *)objc_opt_self(NSBundle);
      v17 = objc_msgSend(v16, "mainBundle");
      v18 = String._bridgeToObjectiveC()();
      v19 = String._bridgeToObjectiveC()();
      v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v22 = v21;

      v23 = String._bridgeToObjectiveC()();
      v24 = (void *)objc_opt_self(CRLImage);
      v25 = objc_msgSend(v24, "crl_quickInspectorImageNamed:", v23);

      v26 = objc_allocWithZone((Class)CRLQuickInspectorElement);
      v27 = String._bridgeToObjectiveC()();
      v28 = objc_msgSend(v26, "initWithName:image:type:options:", v27, v25, 2, 0x800000, swift_bridgeObjectRelease(v22).n128_f64[0]);

      objc_msgSend(v28, "setTag:", 14);
      objc_msgSend(a1, "addObject:", v28);
      v29 = objc_msgSend(v16, "mainBundle");
      v30 = String._bridgeToObjectiveC()();
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, v31, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v34 = v33;

      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend(v24, "crl_quickInspectorImageNamed:", v35);

      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v34);
      v38 = objc_msgSend((id)objc_opt_self(CRLQuickInspectorElement), "elementWithName:image:type:action:", v37, v36, 2, "showPreview:");

      objc_msgSend(v38, "setTag:", 19);
      objc_msgSend(a1, "addObject:", v38);

    }
  }
}

id sub_1006ECAC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZEditor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZEditor()
{
  return objc_opt_self(_TtC8Freeform13CRLUSDZEditor);
}

void sub_1006ECBDC(uint64_t a1, uint64_t a2, NSString a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  id v9;
  NSArray v10;
  NSArray v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v9 = objc_msgSend(objc_allocWithZone((Class)CRLMediaReplacingHelper), "initWithEditor:", v5);
  type metadata accessor for CRLAsset();
  v10.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (a3)
    a3 = String._bridgeToObjectiveC()();
  if (a4)
  {
    v13[4] = a4;
    v14 = a5;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = *(_QWORD *)"";
    v13[2] = sub_1006EB740;
    v13[3] = &unk_101279130;
    a4 = _Block_copy(v13);
    v12 = v14;
    swift_retain(a5);
    v11.super.isa = (Class)swift_release(v12).n128_u64[0];
  }
  objc_msgSend(v9, "replaceSelectedMediaWithData:actionString:completion:", v10.super.isa, a3, a4, *(double *)&v11.super.isa);
  _Block_release(a4);

}

void sub_1006ECDD8(uint64_t a1, uint64_t a2, Class isa, uint64_t a4, NSString a5, void *a6, uint64_t a7)
{
  uint64_t v7;
  id v13;
  NSArray v14;
  NSArray v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;

  v13 = objc_msgSend(objc_allocWithZone((Class)CRLMediaReplacingHelper), "initWithEditor:", v7);
  type metadata accessor for URL(0);
  v14.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (isa)
    isa = Array._bridgeToObjectiveC()().super.isa;
  if (a5)
    a5 = String._bridgeToObjectiveC()();
  if (a6)
  {
    v17[4] = a6;
    v18 = a7;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = *(_QWORD *)"";
    v17[2] = sub_1005D2FC0;
    v17[3] = &unk_1012790E0;
    a6 = _Block_copy(v17);
    v16 = v18;
    swift_retain(a7);
    v15.super.isa = (Class)swift_release(v16).n128_u64[0];
  }
  objc_msgSend(v13, "replaceCanvasElementInfo:withFilesAtURLs:allowedTypes:actionString:completion:", a1, v14.super.isa, isa, a5, a6, *(double *)&v15.super.isa);
  _Block_release(a6);

}

uint64_t sub_1006ED0DC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006ED100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006ED110(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006ED118(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006ED158(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1006ED194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E5AE0;
  if (!qword_1013E5AE0)
  {
    v1 = objc_opt_self(CRLBoardItemEditor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E5AE0);
  }
  return result;
}

id sub_1006ED1DC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  id v17;
  objc_super v19;

  v9 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item];
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_dimsThumbnail] = 0;
  v12 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardTitle];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_lastEditedTimestampText];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_folderName];
  *v15 = 0;
  v15[1] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_canShowFavoriteButton] = 1;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState] = 0;
  v16 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16);
  *(_QWORD *)&v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController] = 0;
  v19.receiver = v4;
  v19.super_class = (Class)_s11iOSListItemCMa(0);
  v17 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  sub_1006ED380();

  return v17;
}

id sub_1006ED380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id result;
  void *v13;
  uint64_t v14;

  v1 = sub_1004B804C(&qword_1014073C0);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIBackgroundConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)_s8ListItemC18ListViewControllerCMa()), "init");
  v9 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController) = v8;
  v10 = v8;
  if (!v9)
    goto LABEL_4;
  v11 = v9;
  objc_msgSend(v11, "removeFromParentViewController");
  result = objc_msgSend(v11, "view");
  if (result)
  {
    v13 = result;
    objc_msgSend(result, "removeFromSuperview");

LABEL_4:
    sub_1006EDCD4();

    sub_1006EDCD4();
    static UIBackgroundConfiguration.listPlainCell()();
    UIBackgroundConfiguration.backgroundColor.setter(0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    UICollectionViewCell.backgroundConfiguration.setter(v3);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __break(1u);
  return result;
}

void sub_1006ED5A0(char a1)
{
  char *v1;
  void *v3;
  _BYTE *v4;
  unsigned int v5;
  _BYTE *v6;
  int v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)_s11iOSListItemCMa(0);
  objc_msgSendSuper2(&v8, "setSelected:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController];
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "isSelected");
    v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = v5;
    v6 = *(_BYTE **)&v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge];
    v7 = v6[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
    v6[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = v5;
    if (v5 != v7)
      objc_msgSend(v6, "setNeedsDisplay");

  }
  else
  {
    __break(1u);
  }
}

void sub_1006ED660(char a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  char *v7;

  v2 = *(_BYTE **)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (v2)
  {
    v4 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode;
    v2[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode] = a1 & 1;
    v5 = *(void **)&v2[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge];
    v7 = v2;
    objc_msgSend(v5, "setHidden:", (a1 & 1) == 0);
    v6 = *(void **)&v7[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint];
    if (v6)
      objc_msgSend(v6, "setActive:", v2[v4]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1006ED70C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v4+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "superview");
    if (!v5)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"thumbnailFrameInItem", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController-iOSListItem.swift", 112, 2, 90, "Thumbnail image view has no superview, so we can't determine a rect for the zoom animation.", 91, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"thumbnailFrameInItem", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController-iOSListItem.swift", 112, 2u, 90, (uint64_t)"Thumbnail image view has no superview, so we can't determine a rect for the zoom animation.", 91, 2u);
      v8 = 0;
      v10 = 0;
      v12 = 0;
      v14 = 0;
      goto LABEL_6;
    }
    v6 = *(_QWORD *)(v1 + v3);
    if (v6)
    {
      objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "frame");
      objc_msgSend(v5, "convertRect:toCoordinateSpace:", v1);
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

LABEL_6:
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v14;
      *(_BYTE *)(a1 + 32) = v5 == 0;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1006ED890(uint64_t a1, uint64_t a2)
{
  sub_1006ED8B8(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardTitle, sub_100B3057C);
}

void sub_1006ED8A4(uint64_t a1, uint64_t a2)
{
  sub_1006ED8B8(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_lastEditedTimestampText, sub_1007F4410);
}

void sub_1006ED8B8(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  void *v10;
  id v11;

  v6 = (uint64_t *)(v4 + *a3);
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  if (a2)
  {
    if (v8)
    {
      v9 = v7 == a1 && v8 == a2;
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v7, v8, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v8);
        return;
      }
    }
  }
  else if (!v8)
  {
    return;
  }
  v10 = *(void **)(v4 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (v10)
  {
    v11 = v10;
    a4();
    swift_bridgeObjectRelease(v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_1006ED978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  id v17;

  v3 = v2;
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName + 8);
  if (!v6)
  {
    if (!a2)
      return;
LABEL_10:
    v8 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController;
    v9 = *(char **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
    if (v9)
    {
      v10 = *(void **)&v9[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];
      v11 = v9;
      sub_1007F4198();
      v13 = v12;
      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setText:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

      v15 = *(void **)(v3 + v8);
      if (v15)
      {
        v16 = objc_msgSend(v15, "view");
        if (v16)
        {
          v17 = v16;
          objc_msgSend(v16, "setNeedsUpdateConstraints");

          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  if (!a2)
    goto LABEL_10;
  v7 = *v5 == a1 && v6 == a2;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, a1, a2, 0) & 1) == 0)
    goto LABEL_10;
}

void sub_1006EDAA0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  int v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (v1)
  {
    v2 = *(_BYTE **)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
    v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite);
    v4 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
    v2[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = v3;
    v5 = *(void **)&v2[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView];
    v6 = v3 ^ 1u;
    v8 = v2;
    objc_msgSend(v5, "setHidden:", v6);
    if (v2[v4] == 1)
      v7 = v8[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] ^ 1;
    else
      v7 = 1;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView], "setHidden:", v7 & 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1006EDB88(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  char v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v2 = v1;
  v4 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController;
  v5 = *(char **)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (!v5)
  {

    __break(1u);
    goto LABEL_14;
  }
  v6 = *(void **)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView];
  if (v6)
  {
    if (!a1)
      goto LABEL_8;
    sub_1004B8930(0, &qword_1013E2388, SWAttributionView_ptr);
    v13 = a1;
    v7 = v6;
    v8 = static NSObject.== infix(_:_:)(v7, v13);

    if ((v8 & 1) != 0)
    {
LABEL_11:

      return;
    }
    v5 = *(char **)(v2 + v4);
    if (v5)
    {
LABEL_8:
      v13 = a1;
      v9 = v5;
      sub_100B30438(a1);

      v10 = *(void **)(v2 + v4);
      if (v10)
      {
        v11 = objc_msgSend(v10, "view");
        if (v11)
        {
          v12 = v11;
          objc_msgSend(v11, "setNeedsUpdateConstraints");

          goto LABEL_11;
        }
        goto LABEL_15;
      }
LABEL_14:

      __break(1u);
LABEL_15:

      __break(1u);
      return;
    }

    __break(1u);
  }
  if (a1)
    goto LABEL_8;
}

void sub_1006EDCD4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  id v28;

  v28 = objc_msgSend(v0, "contentView");
  v1 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController];
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  v3 = v2 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  *(_QWORD *)(v3 + 8) = &off_101279198;
  swift_unknownObjectWeakAssign(v3, v0);
  v4 = *(void **)&v0[v1];
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v4, "loadViewIfNeeded");
  v5 = *(void **)&v0[v1];
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = objc_msgSend(v5, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v28, "addSubview:", v6);
    v8 = objc_msgSend(v28, "layer");
    objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = objc_msgSend(v0, "contentView");
    sub_1008900A0(v0, v9);

    sub_1008900A0(v28, v7);
    objc_msgSend(v8, "setMasksToBounds:", 0);
    v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v11 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EF5560;
    v12 = objc_msgSend(v0, "separatorLayoutGuide");
    v13 = objc_msgSend(v12, "leadingAnchor");

    v14 = *(_QWORD *)&v0[v1];
    if (v14)
    {
      v15 = objc_msgSend(*(id *)(v14+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_textLayoutGuide), "leadingAnchor");
      v16 = objc_msgSend(v13, "constraintEqualToAnchor:", v15);

      *(_QWORD *)(v11 + 32) = v16;
      v17 = objc_msgSend(v0, "separatorLayoutGuide");
      v18 = objc_msgSend(v17, "trailingAnchor");

      v19 = *(void **)&v0[v1];
      if (v19)
      {
        v20 = objc_msgSend(v19, "view");
        if (v20)
        {
          v21 = v20;
          v22 = (void *)objc_opt_self(NSLayoutConstraint);
          v23 = objc_msgSend(v21, "trailingAnchor");

          v24 = objc_msgSend(v18, "constraintEqualToAnchor:", v23);
          *(_QWORD *)(v11 + 40) = v24;
          specialized Array._endMutation()(v25);
          v26 = v11;
          sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

          return;
        }
        goto LABEL_16;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"didUpdateViewController()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController-iOSListItem.swift", 112, 2, 196, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didUpdateViewController()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController-iOSListItem.swift", 112, 2u, 196, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

}

uint64_t sub_1006EE0B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double *v25;
  unint64_t v26;
  unint64_t v27;
  double *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  double *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  double *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double *v71;
  char v72[24];
  objc_super v73;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v68 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v70 = (uint64_t)&v67 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - v10;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v12);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - v16;
  v18 = (objc_class *)_s11iOSListItemCMa(0);
  v73.receiver = v1;
  v73.super_class = v18;
  v19 = objc_msgSendSuper2(&v73, "accessibilityLabel");
  if (!v19)
    goto LABEL_9;
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v24 = v21 & 0xFFFFFFFFFFFFLL;
  if (!v24)
  {
    swift_bridgeObjectRelease(v23);
LABEL_9:
    v25 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  v67 = v1;
  v25 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v27 = *((_QWORD *)v25 + 2);
  v26 = *((_QWORD *)v25 + 3);
  if (v27 >= v26 >> 1)
    v25 = (double *)sub_100D0EF94((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  *((_QWORD *)v25 + 2) = v27 + 1;
  v28 = &v25[2 * v27];
  *((_QWORD *)v28 + 4) = v21;
  *((_QWORD *)v28 + 5) = v23;
  v1 = v67;
LABEL_10:
  v29 = (uint64_t)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item], v72, 0, 0);
  sub_10057B540(v29, (uint64_t)v17);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v30(v17, 1, v4))
  {
    sub_1006F00F4((uint64_t)v17);
  }
  else
  {
    sub_10068FB24((uint64_t)v17, (uint64_t)v11);
    sub_1006F00F4((uint64_t)v17);
    v31 = sub_100BCB654();
    v33 = v32;
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v35 = *((_QWORD *)v25 + 2);
    v34 = *((_QWORD *)v25 + 3);
    if (v35 >= v34 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v34 > 1), v35 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v35 + 1;
    v36 = &v25[2 * v35];
    *((_QWORD *)v36 + 4) = v31;
    *((_QWORD *)v36 + 5) = v33;
  }
  sub_10057B540(v29, (uint64_t)v14);
  if (v30(v14, 1, v4))
  {
    sub_1006F00F4((uint64_t)v14);
  }
  else
  {
    v37 = v70;
    sub_10068FB24((uint64_t)v14, v70);
    sub_1006F00F4((uint64_t)v14);
    v38 = v69;
    sub_10068FB24(v37, v69);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38, v4);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v40 = v38;
        v41 = v68;
        sub_1004B84E0(v40, v68, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BCAD68();
        v43 = v42;
        v45 = v44;
        v46 = v41;
        v47 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        v49 = (uint64_t *)(v38 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
        v43 = *v49;
        v45 = v49[1];
        v47 = type metadata accessor for CRLBoardIdentifier;
        v46 = v38;
      }
      sub_1004B84A4(v46, v47);
    }
    else
    {
      v43 = sub_100BCE3AC();
      v45 = v48;
    }
    sub_1004B84A4(v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v51 = *((_QWORD *)v25 + 2);
    v50 = *((_QWORD *)v25 + 3);
    if (v51 >= v50 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v50 > 1), v51 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v51 + 1;
    v52 = &v25[2 * v51];
    *((_QWORD *)v52 + 4) = v43;
    *((_QWORD *)v52 + 5) = v45;
  }
  v53 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText
                     + 8];
  if (v53)
  {
    v54 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText];
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText
                                          + 8]);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v56 = *((_QWORD *)v25 + 2);
    v55 = *((_QWORD *)v25 + 3);
    if (v56 >= v55 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v55 > 1), v56 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v56 + 1;
    v57 = &v25[2 * v56];
    *((_QWORD *)v57 + 4) = v54;
    *((_QWORD *)v57 + 5) = v53;
  }
  v58 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName + 8];
  if (v58)
  {
    v59 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName];
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName
                                          + 8]);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v61 = *((_QWORD *)v25 + 2);
    v60 = *((_QWORD *)v25 + 3);
    if (v61 >= v60 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v60 > 1), v61 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v61 + 1;
    v62 = &v25[2 * v61];
    *((_QWORD *)v62 + 4) = v59;
    *((_QWORD *)v62 + 5) = v58;
  }
  v71 = v25;
  v63 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v64 = sub_100500464();
  v65 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v63, v64);
  swift_bridgeObjectRelease(v25);
  return v65;
}

uint64_t sub_1006EE668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate);
  if (Strong)
  {
    v5 = Strong;
    v6 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    v7 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 5, 5, v7);
    sub_100BD0ED4(v6, (uint64_t)v3);
    LOBYTE(v6) = v8;
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    swift_unknownObjectRelease(v5);
    if ((v6 & 1) != 0)
      return 0;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite) != 1)
    return 0;
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  return v13;
}

id sub_1006EE818(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_1006EE880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate);
  if (!Strong)
    return 0;
  v5 = Strong;
  v6 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v7 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 5, 5, v7);
  sub_100BD0ED4(v6, (uint64_t)v3);
  LOBYTE(v6) = v8;
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v6 & 1) != 0
    || *(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState) == 1)
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v11 == 1)
  {
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    swift_unknownObjectRelease(v5);

  }
  else
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v12, "localizedStringForKey:value:table:", v16, v17, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    swift_unknownObjectRelease(v5);

  }
  return v9;
}

double *sub_1006EEB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  double *v36;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v1);
  v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v31 - v5;
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = _swiftEmptyArrayStorage;
  v10 = v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v12 = Strong;
  v13 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  swift_unknownObjectRetain(v13);
  swift_unknownObjectRelease(v12);
  v14 = type metadata accessor for CRLBoardLibrary();
  v15 = swift_dynamicCastClass(v13, v14);
  if (!v15)
  {
    swift_unknownObjectRelease(v13);
    return _swiftEmptyArrayStorage;
  }
  v16 = v15;
  v34 = v13;
  v32 = v9;
  v17 = v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item;
  swift_beginAccess(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item, v35, 0, 0);
  sub_10057B540(v17, (uint64_t)v6);
  v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  if (v19(v6, 1, v18) == 1)
  {
    swift_unknownObjectRelease(v34);
    sub_1006F00F4((uint64_t)v6);
    return _swiftEmptyArrayStorage;
  }
  if (swift_getEnumCaseMultiPayload(v6, v18) != 2)
  {
    swift_unknownObjectRelease(v34);
    v28 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v29 = (uint64_t)v6;
LABEL_13:
    sub_1004B84A4(v29, v28);
    return _swiftEmptyArrayStorage;
  }
  v33 = v0;
  v20 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v6[*(int *)(v20 + 48) + 8]);
  v21 = (uint64_t)v32;
  sub_1004B84E0((uint64_t)v6, (uint64_t)v32, type metadata accessor for CRLBoardIdentifier);
  v22 = swift_unknownObjectWeakLoadStrong(v10);
  if (!v22)
  {
    swift_unknownObjectRelease(v34);
    v28 = type metadata accessor for CRLBoardIdentifier;
    v29 = v21;
    goto LABEL_13;
  }
  v23 = v22;
  sub_10057B540(v17, (uint64_t)v3);
  v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v3, 1, v18);
  if ((_DWORD)v24 == 1)
  {
    __break(1u);
    JUMPOUT(0x1006EF15CLL);
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v24);
  v31[-2] = v32;
  swift_bridgeObjectRetain(v25);
  v26 = (char *)sub_100C9D0C0((uint64_t (*)(id *))sub_1006F01E8, (uint64_t)&v31[-4], v25);
  swift_bridgeObjectRelease(v25);
  v27 = sub_100B8A5D4((uint64_t)v3, v26);
  swift_unknownObjectRelease(v23);

  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (*((_QWORD *)v27 + 2))
  {
    swift_bridgeObjectRetain(v27);
    v31[1] = "/FillTool";
    __asm { BR              X8 }
  }
  swift_unknownObjectRelease(v34);
  sub_1004B84A4((uint64_t)v32, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease(v27);
  return _swiftEmptyArrayStorage;
}

BOOL sub_1006EF18C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = Strong;
    v11 = static MainActor.shared.getter(v10);
    v12 = swift_allocObject(&unk_101279438, 41, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v12 + 32) = v10;
    *(_BYTE *)(v12 + 40) = a3;
    v13 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_1013EDF80, v12);
    swift_release(v13);

  }
  return Strong != 0;
}

uint64_t sub_1006EF2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 208) = a5;
  *(_QWORD *)(v5 + 144) = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  *(_QWORD *)(v5 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 160) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 168) = v8;
  *(_QWORD *)(v5 + 176) = v9;
  return swift_task_switch(sub_1006EF344, v8, v9);
}

uint64_t sub_1006EF344()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 144)+ OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate);
  *(_QWORD *)(v0 + 184) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 144) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item;
    swift_beginAccess(v3, v0 + 88, 0, 0);
    sub_10057B540(v3, v2);
    v4 = (_QWORD *)swift_task_alloc(dword_1014074CC);
    *(_QWORD *)(v0 + 192) = v4;
    *v4 = v0;
    v4[1] = sub_1006EF414;
    return sub_100B88A00(*(_BYTE *)(v0 + 208), *(_QWORD *)(v0 + 152));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006EF414()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 184);
  v3 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  sub_1006F00F4(v5);
  swift_unknownObjectRelease(v4);
  if (v0)
    v6 = sub_1006EF4C8;
  else
    v6 = sub_1006EF490;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
}

uint64_t sub_1006EF490()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006EF4C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release(*(_QWORD *)(v0 + 160));
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 112, 0, 0);
  v2 = (void *)static OS_os_log.crlDefault;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 136) = v1;
  v5 = v2;
  swift_errorRetain(v1);
  v6 = sub_1004B804C(&qword_1013E0210);
  v7 = String.init<A>(describing:)(v0 + 136, v6);
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v10 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v11 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v11, "Error calling action for item: %@", 33, 2, inited);
  swift_setDeallocating(inited);
  v12 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v12);

  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006EF638()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate]);
  if (Strong)
  {
    v8 = Strong;
    v9 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    v10 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 5, 5, v10);
    sub_100BD0ED4(v9, (uint64_t)v6);
    LOBYTE(v9) = v11;
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if ((v9 & 1) == 0
      && v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState] != 1)
    {
      v14 = type metadata accessor for TaskPriority(0);
      v12 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = v0;
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_101279348, 40, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      v18 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013EDF68, (uint64_t)v17);
      swift_unknownObjectRelease(v8);
      swift_release(v18);
      return v12;
    }
    swift_unknownObjectRelease(v8);
  }
  return 0;
}

uint64_t sub_1006EF800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[5] = a4;
  v5 = sub_1004B804C(&qword_1013E01F0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[8] = v7;
  v4[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E3830) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v8);
  v4[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v4[12] = v9;
  v4[13] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v4[14] = v10;
  v4[15] = v11;
  return swift_task_switch(sub_1006EF8F0, v10, v11);
}

uint64_t sub_1006EF8F0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 40)+ OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate);
  *(_QWORD *)(v0 + 128) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item;
    swift_beginAccess(v4, v0 + 16, 0, 0);
    v5 = sub_10057B540(v4, v3);
    *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_1006EF9EC, v6, v7);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006EF9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 136));
  sub_10057B540(v2, v1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5 == 1)
  {
    sub_1006F00F4(v6);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    sub_1004B84E0(v6, v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v9 = sub_1004B804C(&qword_1014072D0);
    v10 = *(unsigned __int8 *)(v7 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = swift_allocObject(v9, v11 + *(_QWORD *)(v7 + 72), v10 | 7);
    *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
    v13 = v12 + v11;
    sub_10068FB24(v8, v12 + v11);
    v14 = sub_100BCDE20(v12);
    v15 = sub_100AF87D0((uint64_t)v14);
    swift_bridgeObjectRelease(v14);
    if (*(_QWORD *)(v15 + 16))
    {
      v16 = *(_QWORD *)(v0 + 48);
      v17 = *(id *)(v0 + 128);
      sub_100BB3C58(v15, (uint64_t)v17);
      v19 = v18;
      swift_unknownObjectRelease(v17);
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
      v21 = swift_allocObject(&unk_101279370, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      swift_retain(v21);
      v23 = static MainActor.shared.getter(v22);
      v24 = swift_allocObject(&unk_101279398, 49, 7);
      *(_QWORD *)(v24 + 16) = v23;
      *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = v15;
      *(_BYTE *)(v24 + 48) = v19 & 1;
      swift_release(v21);
      v25 = sub_100521B98(v16, (uint64_t)&unk_1013EDF70, v24);
      objc_msgSend(v17, "setEditing:animated:", 0, 1, swift_release(v25).n128_f64[0]);
    }
    else
    {
      swift_bridgeObjectRelease(v15);
    }
    v26 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 56);
    swift_setDeallocating(v12);
    swift_arrayDestroy(v13, *(_QWORD *)(v12 + 16), v27);
    swift_deallocClassInstance(v12, 32, 7);
    sub_1004B84A4(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  v28 = *(_QWORD *)(v0 + 128);
  sub_1006F00F4(*(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(v28);
  return swift_task_switch(sub_1006EFC54, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_1006EFC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1006EFCE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s11iOSListItemCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006EFDC4()
{
  return _s11iOSListItemCMa(0);
}

uint64_t _s11iOSListItemCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EDF50;
  if (!qword_1013EDF50)
    return swift_getSingletonMetadata(a1, &_s11iOSListItemCMn);
  return result;
}

void sub_1006EFE08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_100F06748;
  sub_10050AB74(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100F06760;
    v4[3] = &unk_100F06748;
    v4[4] = &unk_100F06748;
    v4[5] = &unk_100F06748;
    v4[6] = &unk_100F06748;
    v4[7] = &unk_100F06760;
    v4[8] = &unk_100F06760;
    v4[9] = &unk_100F06778;
    v4[10] = &unk_100F06790;
    v4[11] = &unk_100F067A8;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

uint64_t sub_1006EFEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10057B540(v3, a1);
}

void sub_1006EFF04(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (v2)
  {
    v3 = objc_retain(*(id *)(v2
                           + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView));
    objc_msgSend(v3, "setImage:", a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006EFF70@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_1006ED70C((uint64_t)v3);
  return sub_10057B588((uint64_t)v3, a1);
}

uint64_t sub_1006EFFAC(uint64_t a1, uint64_t a2)
{
  return sub_1006EFFD4(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardTitle);
}

uint64_t sub_1006EFFBC(uint64_t a1, uint64_t a2)
{
  return sub_1006EFFD4(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_lastEditedTimestampText);
}

uint64_t sub_1006EFFC8(uint64_t a1, uint64_t a2)
{
  return sub_1006EFFD4(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName);
}

uint64_t sub_1006EFFD4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v4 = (uint64_t *)(v3 + *a3);
  v5 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  return v5;
}

id sub_1006F0008()
{
  void *v0;

  return objc_msgSend(v0, "isSelected");
}

id sub_1006F0028()
{
  void *v0;

  return objc_msgSend(v0, "isHighlighted");
}

uint64_t sub_1006F0048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (v1)
    return *(unsigned __int8 *)(v1
                              + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode);
  __break(1u);
  return result;
}

uint64_t sub_1006F0070()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState);
}

uint64_t sub_1006F0080()
{
  return sub_1006F0278(40);
}

uint64_t sub_1006F0088(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EDF64);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1006EF800(a1, v4, v5, v6);
}

uint64_t sub_1006F00F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006F0134()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1006F0168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_101407494);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100B96728(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1006F01E8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004DEFE8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1006F0204()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006F0228()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

BOOL sub_1006F024C(uint64_t a1)
{
  uint64_t v1;

  return sub_1006EF18C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1006F0258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006F0268(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1006F0270()
{
  return sub_1006F0278(41);
}

uint64_t sub_1006F0278(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1006F02B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_1013EDF7C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_1006EF2B0(a1, v4, v5, v6, v7);
}

void sub_1006F032C()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v8;

  v1 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item];
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_dimsThumbnail] = 0;
  v4 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardTitle];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_lastEditedTimestampText];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_folderName];
  *v7 = 0;
  v7[1] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_canShowFavoriteButton] = 1;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState] = 0;
  v8 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSFolderGridViewController-iOSListItem.swift", 57, 2, 32, 0);
  __break(1u);
}

void sub_1006F05A4()
{
  char *v0;
  char *v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v1 = &v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_observedToolkit];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_observedToolkit]);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "removeToolkitObserver:", v0);

  }
  swift_unknownObjectWeakAssign(v1, 0);
  v4 = objc_msgSend(v0, "viewIfLoaded");
  if (v4)
  {
    v5 = v4;
    v6 = objc_opt_self(PKCanvasView);
    v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
    if (v7)
      objc_msgSend(v7, "_setContentCoordinateSpace:", 0);

  }
  v8 = OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager], "teardown");
  v9 = *(void **)&v0[v8];
  *(_QWORD *)&v0[v8] = 0;

  v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_isTornDown] = 1;
}

id CRLiOSPencilKitCanvasViewController.__deallocating_deinit()
{
  _BYTE *v0;
  objc_super v2;

  if ((v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_isTornDown] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 105, "CRLiOSPencilKitCanvasViewController must be torn down before deinit.", 68, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 105, (uint64_t)"CRLiOSPencilKitCanvasViewController must be torn down before deinit.", 68, 2u);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilKitCanvasViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall CRLiOSPencilKitCanvasViewController.loadView()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *Strong;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate];
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate]);
  v7 = objc_msgSend(Strong, "pencilKitSnapshotViewForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(Strong);
  v8 = objc_msgSend(objc_allocWithZone((Class)PKCanvasView), "initWithFrame:sixChannelBlend:snapshotView:", 1, v7, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = v8;
  UIView.traitOverrides.getter();
  UIMutableTraits.userInterfaceStyle.setter(1, v2, &protocol witness table for UITraitOverrides);
  UIView.traitOverrides.setter(v4);

  v10 = (void *)objc_opt_self(UIColor);
  v11 = v9;
  v12 = objc_msgSend(v10, "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  objc_msgSend(v11, "setOpaque:", 0);
  objc_msgSend(v11, "setUserInteractionEnabled:", 0);
  objc_msgSend(v11, "setHidden:", 1);
  objc_msgSend(v11, "set_disableUndoManager:", 1);
  objc_msgSend(v11, "_setDisableTileRendering:", 1);
  objc_msgSend(v11, "setDelegate:", v1);
  v13 = (void *)swift_unknownObjectUnownedLoadStrong(v5);
  v14 = objc_msgSend(v13, "interactiveCanvasControllerForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(v13);
  v15 = objc_msgSend(v14, "canvasView");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "unscaledCoordinateSpace");
    objc_msgSend(v11, "_setContentCoordinateSpace:", v17);

    swift_unknownObjectRelease(v17);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 145, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 145, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v18 = (void *)swift_unknownObjectUnownedLoadStrong(v5);
  v19 = objc_msgSend(v18, "freehandDrawingToolkitForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(v18);
  if (v19)
  {
    objc_msgSend(v19, "addToolkitObserver:", v1);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 150, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 150, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  objc_msgSend(v1, "setView:", v11);

}

Swift::Void __swiftcall CRLiOSPencilKitCanvasViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  void *Strong;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CRLiOSPencilKitCanvasViewController();
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v1[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate]);
  v4 = objc_msgSend(Strong, "freehandDrawingToolkitForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(Strong);
  if (v4)
  {
    v5 = objc_msgSend(v4, "currentTool");
    v6 = objc_msgSend(v1, "view");
    if (v6)
    {
      v7 = v6;
      v8 = objc_opt_self(PKCanvasView);
      objc_msgSend(v5, "updatePencilKitToolIfAppropriateFor:", swift_dynamicCastObjCClassUnconditional(v7, v8, 0, 0, 0));

    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall CRLiOSPencilKitCanvasViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for CRLiOSPencilKitCanvasViewController();
  objc_msgSendSuper2(&v7, "viewDidAppear:", a1);
  if (objc_msgSend((id)objc_opt_self(CRLFeatureFlagsHelper), "isOSFeatureEnabled:", 1))
  {
    v3 = OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager])
    {
      v4 = objc_msgSend(objc_allocWithZone((Class)CRLFreehandDrawingPKSelectionManager), "initWithDelegate:", v1);
      v5 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v4;
      v6 = v4;

      objc_msgSend(v6, "updatePKStrokesFromAllFreehandDrawingItemsOnCanvas");
    }
  }
}

id sub_1006F107C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  id v9;
  __int128 v11;
  _BYTE v12[40];
  double v13[4];
  char v14;

  v3 = objc_msgSend(v1, "view");
  if (!v3)
    __break(1u);
  v4 = v3;
  v5 = objc_opt_self(PKCanvasView);
  v6 = (void *)swift_dynamicCastObjCClassUnconditional(v4, v5, 0, 0, 0);
  if (objc_msgSend(v6, "isRulerActive")
    && (v11 = xmmword_100EEC438,
        objc_msgSend(v6, "rulerSnapLineOriginAndNormal:topSide:", &v11, a1 & 1),
        sub_1006F1554(1, (uint64_t)v12, v7, v8, *(double *)&v11, *((double *)&v11 + 1)),
        sub_1004C4938((uint64_t)v12, (uint64_t)v13, &qword_1013EE160),
        (v14 & 1) == 0))
  {
    v9 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithStart:end:", v13[0], v13[1], v13[2], v13[3]);

  }
  else
  {

    return 0;
  }
  return v9;
}

id sub_1006F124C()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  _BYTE v10[72];
  _QWORD v11[8];
  char v12;

  sub_1006F134C((uint64_t)v10);
  sub_1004C4938((uint64_t)v10, (uint64_t)v11, &qword_1013EE168);
  if ((v12 & 1) != 0)
    return 0;
  v1 = *(double *)v11;
  v2 = *(double *)&v11[1];
  v3 = *(double *)&v11[2];
  v4 = *(double *)&v11[3];
  v5 = *(double *)&v11[4];
  v6 = *(double *)&v11[5];
  v7 = *(double *)&v11[6];
  v8 = *(double *)&v11[7];
  v0 = objc_msgSend(objc_allocWithZone((Class)CRLBezierPath), "init");
  objc_msgSend(v0, "moveToPoint:", v1, v2);
  objc_msgSend(v0, "lineToPoint:", v3, v4);
  objc_msgSend(v0, "lineToPoint:", v5, v6);
  objc_msgSend(v0, "lineToPoint:", v7, v8);
  objc_msgSend(v0, "closePath");
  return v0;
}

id sub_1006F134C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  char v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  __int128 v22;
  __int128 v23;
  double v24;
  double v25;
  double v26;
  double v27;
  _BYTE v28[40];
  _BYTE v29[40];
  _OWORD v30[2];
  char v31;
  _OWORD v32[2];
  char v33;

  v26 = INFINITY;
  v27 = INFINITY;
  v3 = objc_msgSend(v1, "view");
  if (!v3)
    __break(1u);
  v4 = v3;
  v5 = objc_opt_self(PKCanvasView);
  v6 = 1;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v4, v5, 0, 0, 0), "rulerSnapLineOriginAndNormal:topSide:", &v26, 1);
  v8 = v7;
  v10 = v9;

  sub_1006F1554(0, (uint64_t)v28, v8, v10, v26, v27);
  result = (id)sub_1004C4938((uint64_t)v28, (uint64_t)v32, &qword_1013EE160);
  v12 = 0uLL;
  if ((v33 & 1) != 0)
  {
    v13 = 0uLL;
    v14 = 0uLL;
    v15 = 0uLL;
LABEL_8:
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v15;
    *(_BYTE *)(a1 + 64) = v6;
    return result;
  }
  v22 = v32[1];
  v23 = v32[0];
  v24 = INFINITY;
  v25 = INFINITY;
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v16 = result;
    v17 = objc_opt_self(PKCanvasView);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v16, v17, 0, 0, 0), "rulerSnapLineOriginAndNormal:topSide:", &v24, 0);
    v19 = v18;
    v21 = v20;

    sub_1006F1554(0, (uint64_t)v29, v19, v21, v24, v25);
    result = (id)sub_1004C4938((uint64_t)v29, (uint64_t)v30, &qword_1013EE160);
    if ((v31 & 1) != 0)
    {
      v13 = 0uLL;
      v14 = 0uLL;
      v15 = 0uLL;
      v12 = 0uLL;
    }
    else
    {
      v6 = 0;
      v12 = v30[0];
      v15 = v30[1];
      v14 = v22;
      v13 = v23;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1006F1554(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  void *Strong;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  CGFloat v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  double v44;
  BOOL v45;
  double v46;
  char v47;
  double v48;
  CGFloat v49;
  double v50;
  double v51;
  CGRect v52;
  CGRect v53;

  v7 = v6;
  v14 = v6 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v6 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate);
  v16 = objc_msgSend(Strong, "interactiveCanvasControllerForPencilKitCanvasViewController:", v6);
  swift_unknownObjectRelease(Strong);
  v17 = objc_msgSend(v16, "canvasView");
  if (v17)
  {
    v18 = v17;
    v19 = (void *)swift_unknownObjectUnownedLoadStrong(v14);
    v20 = objc_msgSend(v19, "pencilKitRulerHostingViewForPencilKitCanvasViewController:", v7);
    swift_unknownObjectRelease(v19);
    objc_msgSend(v20, "convertPoint:toCoordinateSpace:", v18, a3, a4);
    objc_msgSend(v16, "convertBoundsToUnscaledPoint:");
    v22 = v21;
    v50 = v23;
    objc_msgSend(v16, "visibleBoundsRectForTiling");
    objc_msgSend(v16, "convertBoundsToUnscaledRect:");
    v24 = a5;
    x = v52.origin.x;
    y = v52.origin.y;
    width = v52.size.width;
    height = v52.size.height;
    v29 = CGRectGetWidth(v52);
    v30 = a6;
    v31 = v29 * v29;
    v49 = y;
    v53.origin.x = x;
    v53.origin.y = y;
    v53.size.width = width;
    v53.size.height = height;
    v32 = CGRectGetHeight(v53);
    v33 = ceil(sqrt(v31 + v32 * v32));
    v34 = sub_100062028(1, v24, v30, 1.57079633);
    v36 = sub_1000603DC(v34, v35, v33);
    v37 = sub_1000603B8(v22, v50, v36);
    v39 = v38;
    v41 = sub_1000603D0(v22, v50, v36);
    v42 = v40;
    if ((a1 & 1) != 0)
    {
      v51 = sub_100061570(v37, v39, x, v49, width, height, v41, v40);
      v48 = v43;
      v41 = sub_100061570(v41, v42, x, v49, width, height, v37, v39);
      v42 = v44;
      v37 = v51;
      v39 = v48;
    }
    v45 = sub_100061890(v37, v39);

    v46 = 0.0;
    if (!v45 && !sub_100061890(v41, v42))
    {
      v47 = 0;
      v46 = v37;
      goto LABEL_9;
    }
    v47 = 1;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"unscaledRulerEdgePathEndPoints(rulerEdgeOriginInRulerHost:rulerEdgeNormal:clampRulerPathToVisibleCanvasPath:)", 109, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 241, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"unscaledRulerEdgePathEndPoints(rulerEdgeOriginInRulerHost:rulerEdgeNormal:clampRulerPathToVisibleCanvasPath:)", 109, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 241, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    v47 = 1;
    v46 = 0.0;
  }
  v39 = 0.0;
  v41 = 0.0;
  v42 = 0.0;
LABEL_9:
  *(double *)a2 = v46;
  *(CGFloat *)(a2 + 8) = v39;
  *(double *)(a2 + 16) = v41;
  *(CGFloat *)(a2 + 24) = v42;
  *(_BYTE *)(a2 + 32) = v47;
}

id CRLiOSParticipantContactViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void CRLiOSPencilKitCanvasViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSPencilKitCanvasViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

Swift::Void __swiftcall CRLiOSPencilKitCanvasViewController._canvasView(_:didChangeHiddenState:)(PKCanvasView _, Swift::Bool didChangeHiddenState)
{
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  void *Strong;

  v4 = objc_msgSend(v2, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setHidden:", didChangeHiddenState);

    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v2[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate], v6);
    objc_msgSend(Strong, "pencilKitViewWantsSuppressedFreehandContent:forPencilKitCanvasViewController:", !didChangeHiddenState, v2);
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    __break(1u);
  }
}

UIView __swiftcall CRLiOSPencilKitCanvasViewController._canvasViewRulerHostingView(_:)(PKCanvasView a1)
{
  return (UIView)sub_1006F245C((uint64_t)a1.super.super.super.super.isa, (SEL *)&selRef_pencilKitRulerHostingViewForPencilKitCanvasViewController_);
}

uint64_t CRLiOSPencilKitCanvasViewController._canvasView(_:beganStroke:)(uint64_t a1, uint64_t a2)
{
  return sub_1006F1C48(a1, a2, (SEL *)&selRef_prepareForPencilKitBeganStroke_);
}

uint64_t CRLiOSPencilKitCanvasViewController._canvasView(_:endedStroke:shapeStrokes:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate, a2);
  objc_msgSend(Strong, "prepareForPencilKitEndingOrCancellingStroke:", v2);
  return swift_unknownObjectRelease(Strong);
}

uint64_t CRLiOSPencilKitCanvasViewController._canvasView(_:cancelledStroke:)(uint64_t a1, uint64_t a2)
{
  return sub_1006F1C48(a1, a2, (SEL *)&selRef_prepareForPencilKitEndingOrCancellingStroke_);
}

uint64_t sub_1006F1C48(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *Strong;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate, a2);
  objc_msgSend(Strong, *a3, v3);
  return swift_unknownObjectRelease(Strong);
}

uint64_t sub_1006F1C9C(void *a1, uint64_t a2, void *a3, void *a4, SEL *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *Strong;
  uint64_t v19;

  v9 = type metadata accessor for PKStroke(0, a2);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a3;
  v14 = a4;
  v15 = a1;
  static PKStroke._unconditionallyBridgeFromObjectiveC(_:)(a4);

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v15[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate], v16);
  objc_msgSend(Strong, *a5, v15);

  swift_unknownObjectRelease(Strong);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

id CRLiOSPencilKitCanvasViewController._canvasView(_:hoverShouldBeActiveAt:)(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  unsigned __int8 v26;
  int v27;
  id v28;
  void *v29;
  id v30;
  id v31;

  v4 = v3;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate);
  v9 = objc_msgSend(Strong, "interactiveCanvasControllerForPencilKitCanvasViewController:", v4);
  if ((objc_msgSend(v9, "isInDynamicOperation", swift_unknownObjectRelease(Strong).n128_f64[0]) & 1) == 0
    && (objc_msgSend(v9, "isDynamicOperationEnding") & 1) == 0)
  {
    v11 = objc_msgSend(v9, "layerHost");
    if (v11)
    {
      v12 = v11;
      if ((objc_msgSend(v11, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v13 = objc_msgSend(v12, "asiOSCVC");
        *(_QWORD *)&v14 = swift_unknownObjectRelease(v12).n128_u64[0];
LABEL_9:
        v15 = objc_msgSend(v9, "canvasView", v14);
        objc_msgSend(a1, "convertPoint:toView:", v15, a2, a3);
        v17 = v16;
        v19 = v18;

        objc_msgSend(v9, "convertBoundsToUnscaledPoint:", v17, v19);
        v21 = v20;
        v23 = v22;
        if (!v13
          || (v24 = objc_msgSend(v13, "pencilHoverGestureHandler")) == 0
          || (v25 = v24, sub_100965BD4(v21, v23), v27 = v26, v25, v27 == 8))
        {
          v28 = objc_msgSend(v9, "layerHost");
          if (v28)
          {
            v29 = v28;
            if ((objc_msgSend(v28, "respondsToSelector:", "asiOSCVC") & 1) != 0)
            {
              v30 = objc_msgSend(v29, "asiOSCVC");
              v31 = objc_msgSend(v30, "pencilMediator", swift_unknownObjectRelease(v29).n128_f64[0]);

              if (v31)
              {
                v10 = objc_msgSend(v31, "shouldAllowPencilKitHoverPreviewAtUnscaledPoint:", v21, v23);

                swift_unknownObjectRelease(v31);
LABEL_19:
                v9 = v13;
                goto LABEL_20;
              }
            }
            else
            {
              swift_unknownObjectRelease(v29);
            }
          }
          sub_100757E04(&_mh_execute_header, (uint64_t)"_canvasView(_:hoverShouldBeActiveAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 452, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_canvasView(_:hoverShouldBeActiveAt:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 452, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }

        v10 = 0;
        goto LABEL_19;
      }
      swift_unknownObjectRelease(v12);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"_canvasView(_:hoverShouldBeActiveAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 441, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_canvasView(_:hoverShouldBeActiveAt:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 441, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v13 = 0;
    goto LABEL_9;
  }
  v10 = 0;
LABEL_20:

  return v10;
}

Swift::Void __swiftcall CRLiOSPencilKitCanvasViewController.toolkitDidUpdateCurrentToolSelection()()
{
  char *v0;
  void *v1;
  void *Strong;
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  v1 = v0;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate]);
  v3 = objc_msgSend(Strong, "freehandDrawingToolkitForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(Strong);
  if (v3)
  {
    v4 = objc_msgSend(v3, "currentTool");
    v6 = objc_msgSend(v1, "view");
    if (v6)
    {
      v5 = objc_opt_self(PKCanvasView);
      objc_msgSend(v4, "updatePencilKitToolIfAppropriateFor:", swift_dynamicCastObjCClassUnconditional(v6, v5, 0, 0, 0));

    }
    else
    {
      __break(1u);
    }
  }
}

PKCanvasView __swiftcall CRLiOSPencilKitCanvasViewController.pencilKitCanvasView(for:)(CRLFreehandDrawingPKSelectionManager *a1)
{
  void *v1;
  PKCanvasView result;
  Class isa;
  uint64_t v4;

  result.super.super.super.super.isa = (Class)objc_msgSend(v1, "view");
  if (result.super.super.super.super.isa)
  {
    isa = result.super.super.super.super.isa;
    v4 = objc_opt_self(PKCanvasView);
    return (PKCanvasView)swift_dynamicCastObjCClassUnconditional(isa, v4, 0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void __swiftcall CRLiOSPencilKitCanvasViewController.interactiveCanvasController(for:)(CRLInteractiveCanvasController *__return_ptr retstr, CRLFreehandDrawingPKSelectionManager *a2)
{
  sub_1006F245C((uint64_t)a2, (SEL *)&selRef_interactiveCanvasControllerForPencilKitCanvasViewController_);
}

id sub_1006F245C(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *Strong;
  id v5;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate);
  v5 = objc_msgSend(Strong, *a2, v2);
  swift_unknownObjectRelease(Strong);
  return v5;
}

id sub_1006F24C4(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *Strong;
  id v8;
  char *v9;
  id v10;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&a1[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate]);
  v8 = a3;
  v9 = a1;
  v10 = objc_msgSend(Strong, *a4, v9);

  swift_unknownObjectRelease(Strong);
  return v10;
}

Swift::Void __swiftcall CRLiOSPencilKitCanvasViewController.removeSmartSelectionViewIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionView);
  if (v2)
  {
    objc_msgSend(v2, "removeFromSuperview");
    v3 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = 0;

  }
}

uint64_t type metadata accessor for CRLiOSPencilKitCanvasViewController()
{
  return objc_opt_self(_TtC8Freeform35CRLiOSPencilKitCanvasViewController);
}

void _s8Freeform35CRLiOSPencilKitCanvasViewControllerC07_canvasF18WillCreateSnapshotyySo08PKCanvasF0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate);
  v16 = objc_msgSend(Strong, "interactiveCanvasControllerForPencilKitCanvasViewController:", v1);
  v4 = objc_msgSend(v16, "layerHost", swift_unknownObjectRelease(Strong).n128_f64[0]);
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  if ((objc_msgSend(v4, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v5);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"_canvasViewWillCreateSnapshot(_:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2, 464, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_canvasViewWillCreateSnapshot(_:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilKitCanvasViewController.swift", 105, 2u, 464, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_10:
    v15 = v16;
    goto LABEL_11;
  }
  v6 = objc_msgSend(v5, "asiOSCVC");
  swift_unknownObjectRelease(v5);
  v7 = (void *)swift_unknownObjectUnownedLoadStrong(v2);
  v8 = objc_msgSend(v7, "freehandDrawingToolkitForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(v7);
  if (!v8)
  {

    goto LABEL_10;
  }
  v9 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v9, "begin");
  v10 = objc_msgSend(v8, "currentTool");
  v11 = objc_msgSend(v10, "type");

  if (v11 != (id)8)
  {
LABEL_7:
    v14 = (void *)swift_unknownObjectUnownedLoadStrong(v2);
    objc_msgSend(v14, "prepareForPencilKitSnapshottingForPencilKitCanvasViewController:", v1);
    objc_msgSend(v9, "flush", swift_unknownObjectRelease(v14).n128_f64[0]);
    objc_msgSend(v9, "commit");

    v15 = v8;
LABEL_11:

    return;
  }
  v12 = objc_msgSend(v6, "pencilHoverGestureHandler");
  if (v12)
  {
    v13 = v12;
    sub_100965AE0();

    goto LABEL_7;
  }
  __break(1u);
}

void _s8Freeform35CRLiOSPencilKitCanvasViewControllerC021installSmartSelectionF0_3forySo6UIViewCSg_So36CRLFreehandDrawingPKSelectionManagerCtF_0(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  void *Strong;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  objc_msgSend(v1, "removeSmartSelectionViewIfNecessary");
  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionView] = a1;
  v4 = a1;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v1[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate]);
  v15 = objc_msgSend(Strong, "interactiveCanvasControllerForPencilKitCanvasViewController:", v1);
  swift_unknownObjectRelease(Strong);
  if (!a1)
    goto LABEL_8;
  v6 = v4;
  v7 = objc_msgSend(v15, "layerHost");
  if (!v7)
  {

LABEL_8:
    v12 = v15;
LABEL_9:

    return;
  }
  v8 = v7;
  if ((objc_msgSend(v7, "respondsToSelector:", "asiOSCVC") & 1) != 0)
  {
    v13 = objc_msgSend(v8, "asiOSCVC");
    swift_unknownObjectRelease(v8);
    v9 = objc_msgSend(v13, "canvasView");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "addSubview:", v6);

    }
    objc_msgSend(v6, "resignFirstResponder", v13);
    v11 = objc_msgSend(v15, "textInputResponder");
    objc_msgSend(v11, "becomeFirstResponder");

    v12 = v14;
    goto LABEL_9;
  }

  swift_unknownObjectRelease(v8);
}

id _s8Freeform35CRLiOSPencilKitCanvasViewControllerC19currentDocumentMode3forSo0b10OSDocumentJ0CSgSo36CRLFreehandDrawingPKSelectionManagerC_tF_0()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  void *v4;
  id v5;
  id result;
  id v7;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate);
  v2 = objc_msgSend(Strong, "interactiveCanvasControllerForPencilKitCanvasViewController:", v0);
  swift_unknownObjectRelease(Strong);
  v3 = objc_msgSend(v2, "layerHost");
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  if ((objc_msgSend(v3, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {

LABEL_9:
    swift_unknownObjectRelease(v4);
    return 0;
  }
  v5 = objc_msgSend(v4, "asiOSCVC");
  swift_unknownObjectRelease(v4);
  result = objc_msgSend(v5, "delegate");
  if (result)
  {
    v4 = result;
    if ((objc_msgSend(result, "respondsToSelector:", "currentDocumentMode") & 1) != 0)
    {
      v7 = objc_msgSend(v4, "currentDocumentMode");

      swift_unknownObjectRelease(v4);
      return v7;
    }

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006F2BD4(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectUnownedDestroy(a1, a2);
  return a1;
}

ValueMetadata *type metadata accessor for CRLiOSPencilKitCanvasViewController.CRLiOSPencilKitRulerEdgePoints()
{
  return &type metadata for CRLiOSPencilKitCanvasViewController.CRLiOSPencilKitRulerEdgePoints;
}

uint64_t sub_1006F2C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10070228C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1006F2C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10070228C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1006F2CE0()
{
  uint64_t v0;
  char v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v5[5];

  v5[3] = &type metadata for CRLFeatureFlags;
  v5[4] = (id)sub_1004DB6DC();
  LOBYTE(v5[0]) = 11;
  v1 = isFeatureEnabled(_:)(v5);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5);
  if ((v1 & 1) == 0)
    return 0;
  KeyPath = swift_getKeyPath(&unk_100F06958);
  v3 = swift_getKeyPath(&unk_100F06980);
  static Published.subscript.getter(v5, v0, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  if (!v5[0])
    return 0;

  return 1;
}

uint64_t sub_1006F2E14()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F06958);
  v2 = swift_getKeyPath(&unk_100F06980);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

char *sub_1006F2F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _BYTE v15[24];

  v1 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v10, v15, 0, 0);
    sub_1004CB7BC(v10, (uint64_t)v7, (uint64_t *)&unk_101405E90);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      sub_1004B8460((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
      v12 = *(_QWORD *)&v4[*(int *)(v1 + 24)];
      swift_retain(v12);
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      swift_unknownObjectRelease(v9);
      v11 = sub_100642358();
      swift_release(v12);
      return v11;
    }
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
    swift_unknownObjectRelease(v9);
  }
  return 0;
}

void *sub_1006F3134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v10, v17, 0, 0);
    sub_1004CB7BC(v10, (uint64_t)v7, (uint64_t *)&unk_101405E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
      swift_unknownObjectRelease(v9);
    }
    else
    {
      sub_1004B8460((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
      v12 = *(_QWORD *)&v4[*(int *)(v1 + 24)];
      swift_retain(v12);
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      swift_unknownObjectRelease(v9);
      v13 = sub_100642358();
      swift_release(v12);
      if (v13)
      {
        KeyPath = swift_getKeyPath(&unk_100F069B0);
        v15 = swift_getKeyPath(&unk_100F069D8);
        static Published.subscript.getter(&v16, v13, KeyPath, v15);

        swift_release(KeyPath);
        swift_release(v15);
        return (void *)v16;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

id sub_1006F3528()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_followingParticipantsStartEndFollowTimer];
  if (v1)
    objc_msgSend(v1, "invalidate");
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CRLFollowCoordinator(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1006F394C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v1 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "anyObject");
  if (v8)
  {
    v9 = v8;
    v10 = (char *)objc_msgSend(v8, "board");

    if (v10)
    {
      v11 = (uint64_t)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
      swift_beginAccess(&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo], v15, 0, 0);
      sub_1004CB7BC(v11, (uint64_t)v7, (uint64_t *)&unk_101405E90);

      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
      {
        sub_1004B8460((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
        v12 = *v4;
        swift_retain(*v4);
        sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        return v12;
      }
      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
    }
  }
  return 0;
}

uint64_t sub_1006F3AF4()
{
  return type metadata accessor for CRLFollowCoordinator(0);
}

uint64_t type metadata accessor for CRLFollowCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EE2B0;
  if (!qword_1013EE2B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFollowCoordinator);
  return result;
}

uint64_t sub_1006F3B38(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  int v29;
  char *v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63[72];
  _OWORD v64[2];
  uint64_t v65;

  v3 = sub_1004B804C(&qword_1013EE310);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for CRLStartOrEndFollow(0);
  v6 = *(_QWORD *)(v62 - 8);
  v7 = __chkstk_darwin(v62);
  v59 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v61 = (uint64_t)&v57 - v9;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v57 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v57 - v17;
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v1;
  sub_1006F8440((uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v64, 0, 0);
    v23 = (id)static OS_os_log.crlFollow;
    v25 = static os_log_type_t.default.getter(v24);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v25, "Unable to retrieve the localPresenceUUID in sendStartFollowMessage", 66, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  v26 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v60 = v22;
  v26(v16, v22, v19);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v27(v16, 0, 1, v19);
  v26(v13, a1, v19);
  v27(v13, 0, 1, v19);
  sub_1008AF608((uint64_t)v16, (uint64_t)v13, v5);
  v28 = v62;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v62);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v28);
  v30 = v60;
  if (v29 == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013EE310);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v64, 0, 0);
    v31 = (id)static OS_os_log.crlFollow;
    v33 = static os_log_type_t.default.getter(v32);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v33, "Unable to generate an CRLStartOrEndFollow object in sendEndFollowMessage", 72, 2, (uint64_t)_swiftEmptyArrayStorage);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v30, v19);
    return 0;
  }
  v36 = v61;
  sub_1004B84E0((uint64_t)v5, v61, type metadata accessor for CRLStartOrEndFollow);
  type metadata accessor for CRContext(0);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  v37 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v64);
  sub_1004CB800((uint64_t)v64, (uint64_t *)&unk_1014064C0);
  v38 = sub_1008AF84C();
  v40 = v39;

  sub_1004BE310(v38, v40);
  v41 = sub_1006F394C();
  if (v41)
  {
    v42 = v41;
    sub_1004BE310(v38, v40);
    sub_100CE140C(2, v38, v40, 1, v42);
    swift_release(v42);
    sub_1004BBBC8(v38, v40);
  }
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v64, 0, 0);
  v43 = (void *)static OS_os_log.crlFollow;
  v44 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v44, v63);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v46 = v59;
  sub_1004B8460(v36, v59, type metadata accessor for CRLStartOrEndFollow);
  v47 = v43;
  v48 = String.init<A>(describing:)(v46, v28);
  v49 = v36;
  v50 = v48;
  v52 = v51;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v50;
  v53 = inited + 32;
  *(_QWORD *)(inited + 40) = v52;
  v55 = static os_log_type_t.default.getter(v54);
  sub_100A06EBC((uint64_t)v47, &_mh_execute_header, v55, "Sending end follow message: %@", 30, 2, inited);
  swift_setDeallocating(inited);
  v56 = sub_1004B804C(&qword_1013E0190);
  v34 = 1;
  swift_arrayDestroy(v53, 1, v56);

  sub_1004BBBC8(v38, v40);
  sub_1004BBBC8(v38, v40);
  sub_1004B84A4(v49, type metadata accessor for CRLStartOrEndFollow);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
  return v34;
}

uint64_t sub_1006F42A8(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  int v29;
  char *v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63[72];
  _OWORD v64[2];
  uint64_t v65;

  v3 = sub_1004B804C(&qword_1013EE310);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for CRLStartOrEndFollow(0);
  v6 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v59 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v57 - v9;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - v17;
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v1;
  sub_1006F8440((uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v64, 0, 0);
    v23 = (id)static OS_os_log.crlFollow;
    v25 = static os_log_type_t.default.getter(v24);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v25, "Unable to retrieve the localPresenceUUID in sendStartFollowMessage", 66, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  v26 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v60 = v22;
  v26(v15, v22, v19);
  v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v27(v15, 0, 1, v19);
  v26(v12, a1, v19);
  v27(v12, 0, 1, v19);
  sub_1008AF608((uint64_t)v15, (uint64_t)v12, v5);
  v28 = v62;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v62);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v28);
  v30 = v60;
  if (v29 == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013EE310);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v64, 0, 0);
    v31 = (id)static OS_os_log.crlFollow;
    v33 = static os_log_type_t.default.getter(v32);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v33, "Unable to generate a CRLStartOrEndFollow object in sendStartFollowMessage", 73, 2, (uint64_t)_swiftEmptyArrayStorage);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v30, v19);
    return 0;
  }
  v36 = v61;
  sub_1004B84E0((uint64_t)v5, v61, type metadata accessor for CRLStartOrEndFollow);
  type metadata accessor for CRContext(0);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  v37 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v64);
  sub_1004CB800((uint64_t)v64, (uint64_t *)&unk_1014064C0);
  v38 = sub_1008AF84C();
  v40 = v39;

  sub_1004BE310(v38, v40);
  v41 = sub_1006F394C();
  if (v41)
  {
    v42 = v41;
    sub_1004BE310(v38, v40);
    sub_100CE140C(1, v38, v40, 1, v42);
    swift_release(v42);
    sub_1004BBBC8(v38, v40);
  }
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v64, 0, 0);
  v43 = (void *)static OS_os_log.crlFollow;
  v44 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v44, v63);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v46 = v59;
  sub_1004B8460(v36, v59, type metadata accessor for CRLStartOrEndFollow);
  v47 = v43;
  v48 = String.init<A>(describing:)(v46, v28);
  v49 = v36;
  v50 = v48;
  v52 = v51;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v50;
  v53 = inited + 32;
  *(_QWORD *)(inited + 40) = v52;
  v55 = static os_log_type_t.default.getter(v54);
  sub_100A06EBC((uint64_t)v47, &_mh_execute_header, v55, "Sending start follow message: %@", 32, 2, inited);
  swift_setDeallocating(inited);
  v56 = sub_1004B804C(&qword_1013E0190);
  v34 = 1;
  swift_arrayDestroy(v53, 1, v56);

  sub_1004BBBC8(v38, v40);
  sub_1004BBBC8(v38, v40);
  sub_1004B84A4(v49, type metadata accessor for CRLStartOrEndFollow);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
  return v34;
}

uint64_t sub_1006F4A18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  id v29;
  __n128 v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[72];
  _BYTE v70[32];
  uint64_t v71;

  v66 = a1;
  v68 = type metadata accessor for CRLRefuseOrEndFollow(0);
  __chkstk_darwin(v68);
  v67 = (uint64_t)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - v4;
  __chkstk_darwin(v6);
  v65 = (uint64_t)&v60 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - v18;
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v60 - v25;
  v64 = v1;
  sub_1006F8440((uint64_t)v19);
  v27 = v21;
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v28(v19, 1, v20) == 1)
  {
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v70, 0, 0);
    v29 = (id)static OS_os_log.crlFollow;
    v31 = static os_log_type_t.default.getter(v30);
    sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v31, "Unable to retrieve the localPresenceUUID in sendRefuseFollowMessage", 67, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  v62 = v10;
  v32 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v32(v26, v19, v20);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v16, v26, v20);
  v63 = v27;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v16, 0, 1, v20);
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1013E1A50);
  if (v28(v13, 1, v20) == 1)
  {
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v70, 0, 0);
    v33 = (id)static OS_os_log.crlFollow;
    v35 = static os_log_type_t.default.getter(v34);
    sub_100A06EBC((uint64_t)v33, &_mh_execute_header, v35, "Unable to generate a CRLRefuseFollow object in sendRefuseFollowMessage", 70, 2, (uint64_t)_swiftEmptyArrayStorage);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v20);
    return 0;
  }
  v61 = v26;
  v32(v23, v13, v20);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
  v32(v5, v23, v20);
  v36 = v68;
  *(_QWORD *)&v5[*(int *)(v68 + 20)] = v66;
  v37 = v65;
  sub_1004B84E0((uint64_t)v5, v65, type metadata accessor for CRLRefuseOrEndFollow);
  sub_1004B84E0(v37, (uint64_t)v62, type metadata accessor for CRLRefuseOrEndFollow);
  type metadata accessor for CRContext(0);
  v71 = 0;
  memset(v70, 0, sizeof(v70));
  v38 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v70);
  sub_1004CB800((uint64_t)v70, (uint64_t *)&unk_1014064C0);
  v41 = sub_100BE96C4();
  v43 = v42;
  v44 = v20;

  sub_1004BE310(v41, v43);
  v45 = sub_1006F394C();
  if (v45)
  {
    v46 = v45;
    sub_1004BE310(v41, v43);
    sub_100CE140C(7, v41, v43, 1, v46);
    swift_release(v46);
    sub_1004BBBC8(v41, v43);
  }
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v70, 0, 0);
  v47 = (void *)static OS_os_log.crlFollow;
  v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v48, v69);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v50 = (uint64_t)v62;
  v51 = v67;
  sub_1004B8460((uint64_t)v62, v67, type metadata accessor for CRLRefuseOrEndFollow);
  v52 = v47;
  v53 = String.init<A>(describing:)(v51, v36);
  v55 = v54;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v53;
  v56 = inited + 32;
  *(_QWORD *)(inited + 40) = v55;
  v58 = static os_log_type_t.default.getter(v57);
  sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v58, "Sent a refuse follow message: %@", 32, 2, inited);
  swift_setDeallocating(inited);
  v59 = sub_1004B804C(&qword_1013E0190);
  v39 = 1;
  swift_arrayDestroy(v56, 1, v59);

  sub_1004BBBC8(v41, v43);
  sub_1004BBBC8(v41, v43);
  sub_1004B84A4(v50, type metadata accessor for CRLRefuseOrEndFollow);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v44);
  return v39;
}

void sub_1006F51D0(char a1)
{
  uint64_t v1;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  id v9[5];

  v9[3] = &type metadata for CRLFeatureFlags;
  v9[4] = (id)sub_1004DB6DC();
  LOBYTE(v9[0]) = 11;
  v3 = isFeatureEnabled(_:)(v9);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
  if ((v3 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F06958);
    v5 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(v9, v1, KeyPath, v5);
    swift_release(KeyPath);
    swift_release(v5);
    if (v9[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v9, 0, 0);
      v6 = (id)static OS_os_log.crlFollow;
      v8 = static os_log_type_t.default.getter(v7);
      sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(a1 & 1);
    }
  }
}

void sub_1006F534C(int a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void (**v17)(char *, uint64_t, uint64_t, uint64_t, __n128);
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void (**v23)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v24;
  char *v25;
  uint64_t v26;
  void (**v27)(char *, uint64_t, uint64_t, uint64_t, __n128);
  int v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const __CFString *v33;
  const __CFString *v34;
  char *v35;
  char *v36;
  char *v37;
  void (*v38)(const __CFString *, char *, const __CFString *);
  char *v39;
  const __CFString *v40;
  char v41;
  void (*v42)(const __CFString *, const __CFString *);
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (**v77)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  __objc2_meth_list **p_class_meths;
  uint64_t v82;
  char *v83;
  void (**v84)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t i;
  id v90;
  void *v91;
  unint64_t v92;
  void *v93;
  const __CFString *v94;
  const __CFString *v95;
  char *v96;
  char *v97;
  char *v98;
  unint64_t v99;
  void (*v100)(const __CFString *, char *, const __CFString *);
  char *v101;
  const __CFString *v102;
  char v103;
  void (*v104)(const __CFString *, const __CFString *);
  char *v105;
  id v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (**v128)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  id v137;
  uint64_t v138;
  void *v139;
  char *v140;
  char *v141;
  int v142;
  void (**v143)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (**v144)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v145;
  id v146;
  unint64_t v147;
  const __CFString *v148;
  const __CFString *v149;
  const __CFString *v150;
  unint64_t length;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE v155[24];
  id v156[5];
  uint64_t v157;
  char v158[24];
  char v159[72];
  char v160[24];
  char v161[24];
  char v162[32];

  v2 = v1;
  v142 = a1;
  v148 = (const __CFString *)type metadata accessor for Date(0);
  length = v148[-1].length;
  v3 = __chkstk_darwin(v148);
  v150 = (const __CFString *)((char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v149 = (const __CFString *)((char *)&v138 - v5);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (***)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 - 8);
  __chkstk_darwin(v9);
  v140 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100F06958);
  v13 = swift_getKeyPath(&unk_100F06980);
  static Published.subscript.getter(v156, v2, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v144 = v10;
  v145 = v9;
  if (v156[0])
  {

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"localParticipantDidEndFollowing(shouldShowRefollowPlacard:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 230, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"localParticipantDidEndFollowing(shouldShowRefollowPlacard:)", 59, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 230, (uint64_t)"invalid nil value found", 23, 2u);
  }
  v14 = swift_getKeyPath(&unk_100F06958);
  v15 = swift_getKeyPath(&unk_100F06980);
  static Published.subscript.getter(v156, v2, v14, v15);
  swift_release(v14);
  v16 = swift_release(v15);
  v17 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))v156[0];
  v18 = &unk_100EF5000;
  if (!v156[0])
    goto LABEL_32;
  v141 = v8;
  v19 = swift_getKeyPath(&unk_100F06A08);
  v20 = swift_getKeyPath(&unk_100F06A30);
  v143 = v17;
  static Published.subscript.getter(v156, v17, v19, v20);
  swift_release(v19);
  swift_release(v20);
  v21 = v156[0];
  if (!((unint64_t)v156[0] >> 62))
  {
    v22 = *(_QWORD *)(((unint64_t)v156[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v156[0]);
    v23 = v143;
    if (v22)
      goto LABEL_7;
    goto LABEL_31;
  }
  if ((uint64_t)v156[0] < 0)
    v44 = v156[0];
  else
    v44 = (id)((unint64_t)v156[0] & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(v156[0]);
  v22 = _CocoaArrayWrapper.endIndex.getter(v44);
  v23 = v143;
  if (!v22)
  {
LABEL_31:

    swift_bridgeObjectRelease_n(v21, 2);
    v8 = v141;
LABEL_32:
    v144[7](v8, 1, 1, v145, v16);
    goto LABEL_33;
  }
LABEL_7:
  v152 = (unint64_t)v21 & 0xC000000000000001;
  v139 = v2;
  if (((unint64_t)v21 & 0xC000000000000001) != 0)
  {
    v24 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
  }
  else
  {
    if (!*(_QWORD *)(((unint64_t)v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_75;
    }
    v24 = (char *)*((id *)v21 + 4);
  }
  v25 = v24;
  v147 = v22 - 1;
  if (v22 != 1)
  {
    if (v22 < 2)
    {
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    if (!v152)
    {
      v30 = *(_QWORD *)(((unint64_t)v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v30 < 2 || v147 >= v30)
        goto LABEL_114;
    }
    v31 = 0;
    v146 = v21;
    v32 = length;
    v34 = v148;
    v33 = v149;
    do
    {
      if (v152)
        v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31 + 1, v21);
      else
        v35 = (char *)*((id *)v21 + v31 + 5);
      v36 = v35;
      v37 = &v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess(&v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v162, 0, 0);
      v38 = *(void (**)(const __CFString *, char *, const __CFString *))(v32 + 16);
      v38(v33, v37, v34);
      v39 = &v36[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess(&v36[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v161, 0, 0);
      v40 = v150;
      v38(v150, v39, v34);
      v41 = static Date.< infix(_:_:)(v33, v40);
      v42 = *(void (**)(const __CFString *, const __CFString *))(v32 + 8);
      v42(v40, v34);
      v42(v33, v34);
      if ((v41 & 1) != 0)
        v43 = v25;
      else
        v43 = v36;
      if ((v41 & 1) != 0)
        v25 = v36;

      ++v31;
      v21 = v146;
    }
    while (v147 != v31);
  }

  swift_bridgeObjectRelease_n(v21, 2);
  v27 = v144;
  v26 = v145;
  v8 = v141;
  ((void (*)(char *, char *, uint64_t))v144[2])(v141, &v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID], v145);

  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v27[7])(v8, 0, 1, v26);
  v28 = ((uint64_t (*)(char *, uint64_t, uint64_t))v27[6])(v8, 1, v26);
  v2 = v139;
  v18 = (_OWORD *)&unk_100EF5000;
  if (v28 != 1)
  {
    v29 = v140;
    ((void (*)(char *, char *, uint64_t))v27[4])(v140, v8, v26);
    sub_1006F3B38(v29);
    ((void (*)(char *, uint64_t))v27[1])(v29, v26);
    goto LABEL_36;
  }
LABEL_33:
  sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v160, 0, 0);
  v45 = (void *)static OS_os_log.crlFollow;
  v46 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v46, v159);
  *(_OWORD *)(inited + 16) = v18[228];
  v48 = swift_getKeyPath(&unk_100F06958);
  v49 = swift_getKeyPath(&unk_100F06980);
  v50 = v45;
  static Published.subscript.getter(v156, v2, v48, v49);
  swift_release(v48);
  swift_release(v49);
  v51 = v156[0];
  v52 = sub_1004B804C(&qword_1013EE2D0);
  v53 = Optional.debugDescription.getter(v52);
  v55 = v54;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v53;
  *(_QWORD *)(inited + 40) = v55;
  v57 = static os_log_type_t.default.getter(v56);
  sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v57, "Did not have a presence UUID to send an endFollowMessage to for participant: %@", 79, 2, inited);
  swift_setDeallocating(inited);
  v58 = *(_QWORD *)(inited + 16);
  v59 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v58, v59);

LABEL_36:
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v158, 0, 0);
  v60 = (void *)static OS_os_log.crlFollow;
  v61 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v62 = swift_initStackObject(v61, &v157);
  *(_OWORD *)(v62 + 16) = v18[228];
  v63 = swift_getKeyPath(&unk_100F06958);
  v64 = swift_getKeyPath(&unk_100F06980);
  v65 = v60;
  static Published.subscript.getter(v156, v2, v63, v64);
  swift_release(v63);
  swift_release(v64);
  v66 = v156[0];
  v67 = sub_1004B804C(&qword_1013EE2D0);
  v68 = Optional.debugDescription.getter(v67);
  v70 = v69;

  *(_QWORD *)(v62 + 56) = &type metadata for String;
  *(_QWORD *)(v62 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v62 + 32) = v68;
  *(_QWORD *)(v62 + 40) = v70;
  v72 = static os_log_type_t.default.getter(v71);
  sub_100A06EBC((uint64_t)v65, &_mh_execute_header, v72, "Stopped following participant: %@", 33, 2, v62);
  swift_setDeallocating(v62);
  v73 = *(_QWORD *)(v62 + 16);
  v74 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v62 + 32, v73, v74);

  v75 = swift_getKeyPath(&unk_100F06958);
  v76 = swift_getKeyPath(&unk_100F06980);
  static Published.subscript.getter(v156, v2, v75, v76);
  swift_release(v75);
  swift_release(v76);
  v77 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))v156[0];
  v78 = swift_getKeyPath(&unk_100F06958);
  v79 = swift_getKeyPath(&unk_100F06980);
  v156[0] = 0;
  v80 = v2;
  v152 = (unint64_t)v80;
  static Published.subscript.setter(v156, v80, v78, v79);
  *(_QWORD *)&v80[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp] = 0;
  p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___PKCanvasViewDelegate + 32);
  v144 = v77;
  if (!v77)
    goto LABEL_72;
  v82 = swift_getKeyPath(&unk_100F06A08);
  v83 = (char *)swift_getKeyPath(&unk_100F06A30);
  v84 = v77;
  static Published.subscript.getter(v156, v84, v82, v83);
  swift_release(v82);
  swift_release(v83);
  v14 = (uint64_t)v156[0];
  if (!((unint64_t)v156[0] >> 62))
  {
    v19 = *(_QWORD *)(((unint64_t)v156[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v156[0]);
    if (v19)
      goto LABEL_41;
    goto LABEL_71;
  }
  if ((uint64_t)v156[0] < 0)
    v106 = v156[0];
  else
    v106 = (id)((unint64_t)v156[0] & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(v156[0]);
  v19 = _CocoaArrayWrapper.endIndex.getter(v106);
  if (!v19)
  {
LABEL_71:

    swift_bridgeObjectRelease_n(v14, 2);
    p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___PKCanvasViewDelegate + 32);
LABEL_72:
    sub_100757E04(&_mh_execute_header, (uint64_t)"localParticipantDidEndFollowing(shouldShowRefollowPlacard:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 245, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"localParticipantDidEndFollowing(shouldShowRefollowPlacard:)", 59, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 245, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_82;
  }
LABEL_41:
  v147 = v14 & 0xC000000000000001;
  v143 = v84;
  if ((v14 & 0xC000000000000001) != 0)
  {
LABEL_75:
    v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    goto LABEL_44;
  }
  if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_77;
  }
  v85 = (char *)*(id *)(v14 + 32);
LABEL_44:
  v83 = v85;
  v146 = (id)(v19 - 1);
  if (v19 != 1)
  {
    if (v19 < 2)
    {
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
      return;
    }
    if (!v147)
    {
      v92 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v92 < 2 || (unint64_t)v146 >= v92)
        goto LABEL_115;
    }
    v93 = 0;
    v145 = v14;
    v95 = v148;
    v94 = v149;
    do
    {
      if (v147)
        v96 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)((char *)v93 + 1, v14);
      else
        v96 = (char *)*(id *)(v14 + 8 * (_QWORD)v93 + 40);
      v97 = v96;
      v98 = &v83[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess(&v83[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], &v154, 0, 0);
      v99 = length;
      v100 = *(void (**)(const __CFString *, char *, const __CFString *))(length + 16);
      v100(v94, v98, v95);
      v101 = &v97[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess(&v97[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], &v153, 0, 0);
      v102 = v150;
      v100(v150, v101, v95);
      v103 = static Date.< infix(_:_:)(v94, v102);
      v104 = *(void (**)(const __CFString *, const __CFString *))(v99 + 8);
      v104(v102, v95);
      v104(v94, v95);
      if ((v103 & 1) != 0)
        v105 = v83;
      else
        v105 = v97;
      if ((v103 & 1) != 0)
        v83 = v97;

      v93 = (char *)v93 + 1;
      v14 = v145;
    }
    while (v146 != v93);
  }
  swift_bridgeObjectRelease_n(v14, 2);

  v86 = objc_msgSend(*(id *)(v152 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects");
  v87 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v86, v87);

  if ((unint64_t)v14 >> 62)
  {
LABEL_77:
    if (v14 < 0)
      v107 = v14;
    else
      v107 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v88 = _CocoaArrayWrapper.endIndex.getter(v107);
    if (v88)
      goto LABEL_47;
    goto LABEL_81;
  }
  v88 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v14);
  if (v88)
  {
LABEL_47:
    if (v88 < 1)
    {
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    for (i = 0; i != v88; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0)
        v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
      else
        v90 = *(id *)(v14 + 8 * i + 32);
      v91 = v90;
      objc_msgSend(v90, "updateCollaboratorHUDForStopFollowingCollaborator:", v83);

    }
  }
LABEL_81:
  swift_bridgeObjectRelease_n(v14, 2);

  p_class_meths = &OBJC_PROTOCOL___PKCanvasViewDelegate.class_meths;
LABEL_82:
  v108 = objc_msgSend(*(id *)((char *)p_class_meths[61] + v152), "allObjects");
  v109 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v110 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v108, v109);

  if ((unint64_t)v110 >> 62)
  {
    if (v110 < 0)
      v123 = v110;
    else
      v123 = v110 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v110);
    v111 = _CocoaArrayWrapper.endIndex.getter(v123);
    if (!v111)
      goto LABEL_94;
  }
  else
  {
    v111 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v110);
    if (!v111)
      goto LABEL_94;
  }
  v112 = objc_opt_self(NSNotificationCenter);
  if (v111 < 1)
  {
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  v113 = (void *)v112;
  v114 = 0;
  length = v110 & 0xC000000000000001;
  v149 = CFSTR("CRLCanvasWillZoomNotification");
  v150 = CFSTR("CRLCanvasWillScrollNotification");
  v148 = CFSTR("CRLEditorControllerSelectionPathDidChangeNotification");
  v115 = v110;
  v116 = v152;
  do
  {
    if (length)
      v117 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v114, v110);
    else
      v117 = *(id *)(v110 + 8 * v114 + 32);
    v118 = v117;
    ++v114;
    v119 = objc_msgSend(v113, "defaultCenter");
    objc_msgSend(v119, "removeObserver:name:object:", v116, v150, v118);

    v120 = objc_msgSend(v113, "defaultCenter");
    objc_msgSend(v120, "removeObserver:name:object:", v116, v149, v118);

    v121 = objc_msgSend(v113, "defaultCenter");
    v122 = objc_msgSend(v118, "editorController");
    objc_msgSend(v121, "removeObserver:name:object:", v116, v148, v122);

    v110 = v115;
  }
  while (v111 != v114);
LABEL_94:
  swift_bridgeObjectRelease_n(v110, 2);
  v124 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v152
                                                               + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects"));
  v125 = sub_1004B804C(&qword_1013EE2D8);
  v126 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v124, v125);

  if ((unint64_t)v126 >> 62)
  {
    if (v126 < 0)
      v132 = v126;
    else
      v132 = v126 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v126);
    v127 = _CocoaArrayWrapper.endIndex.getter(v132);
    v128 = v144;
    if (v127)
    {
LABEL_96:
      if (v127 >= 1)
      {
        v129 = 0;
        v130 = v142 & 1;
        do
        {
          if ((v126 & 0xC000000000000001) != 0)
          {
            v131 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v129, v126);
          }
          else
          {
            v131 = *(void **)(v126 + 8 * v129 + 32);
            swift_unknownObjectRetain(v131);
          }
          ++v129;
          objc_msgSend(v131, "didEndFollowingParticipant:shouldShowRefollowPlacard:", v128, v130);
          swift_unknownObjectRelease(v131);
        }
        while (v127 != v129);
        goto LABEL_106;
      }
      goto LABEL_110;
    }
  }
  else
  {
    v127 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v126);
    v128 = v144;
    if (v127)
      goto LABEL_96;
  }
LABEL_106:
  swift_bridgeObjectRelease_n(v126, 2);
  v133 = v152;
  sub_1006F8EA4((uint64_t)v156);
  v134 = v133 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver;
  swift_beginAccess(v133 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver, v155, 33, 0);
  sub_100582338((uint64_t)v156, v134, &qword_1013EE2F8);
  swift_endAccess(v155);
  v135 = (void *)objc_opt_self(NSNotificationCenter);
  v136 = objc_msgSend(v135, "defaultCenter");
  if (qword_1013DCB88 != -1)
    swift_once(&qword_1013DCB88, sub_10063870C);
  objc_msgSend(v136, "removeObserver:name:object:", v133, qword_10147ECF0, 0);

  v137 = objc_msgSend(v135, "defaultCenter");
  objc_msgSend(v137, "removeObserver:name:object:", v133, UIDeviceOrientationDidChangeNotification, 0);

}

void sub_1006F63B4(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t KeyPath;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t inited;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  double v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  __n128 v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t, __n128);
  char *v54;
  __n128 v55;
  char *v56;
  char v57;
  void (*v58)(char *, uint64_t);
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  char *v66;
  id v67;
  char *v68;
  id v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  __n128 v90;
  uint64_t v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char *v112;
  id v113;
  void *v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  int v121;
  void *v122;
  uint64_t v123;
  unint64_t v124;
  __int128 v125;
  char *v126;
  char *v127;
  id v128[3];
  ValueMetadata *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134[24];
  char v135[24];
  char v136[32];

  v3 = v2;
  v121 = a2;
  v122 = a1;
  v4 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v4);
  v120 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v127 = *(char **)(v6 - 8);
  __chkstk_darwin(v6);
  v126 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v117 - v9;
  if (qword_1013DD7C8 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
LABEL_2:
    swift_beginAccess(&static OS_os_log.crlFollow, v136, 0, 0);
    v11 = (id)static OS_os_log.crlFollow;
    v13 = static os_log_type_t.default.getter(v12);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Wants to start following a collaborator", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

    v119 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant;
    v14 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant);
    if (v14)
    {
      type metadata accessor for CRLCollaborationParticipant(0);
      v15 = v122;
      v16 = v14;
      v17 = static NSObject.== infix(_:_:)(v16, v15);

      if ((v17 & 1) != 0)
        return;
    }
    KeyPath = swift_getKeyPath(&unk_100F06A08);
    v19 = (char *)swift_getKeyPath(&unk_100F06A30);
    static Published.subscript.getter(v128, v122, KeyPath, v19);
    swift_release(KeyPath);
    swift_release(v19);
    v20 = (uint64_t)v128[0];
    if ((unint64_t)v128[0] >> 62)
    {
      if ((uint64_t)v128[0] < 0)
        v19 = (char *)v128[0];
      else
        v19 = (char *)((unint64_t)v128[0] & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v128[0]);
      v21 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (!v21)
      {
LABEL_56:
        swift_bridgeObjectRelease_n(v20, 2);
        v69 = (id)static OS_os_log.crlFollow;
        v71 = static os_log_type_t.default.getter(v70);
        sub_100A06EBC((uint64_t)v69, &_mh_execute_header, v71, "Unable to retrieve the latestPresence of the collaborator we are trying to follow in localParticipantWantsToStartFollowing", 122, 2, (uint64_t)_swiftEmptyArrayStorage);
        goto LABEL_82;
      }
    }
    else
    {
      v21 = *(_QWORD *)(((unint64_t)v128[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v128[0]);
      if (!v21)
        goto LABEL_56;
    }
    *(_QWORD *)&v125 = v20 & 0xC000000000000001;
    v118 = v3;
    if ((v20 & 0xC000000000000001) != 0)
    {
      v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
    }
    else
    {
      if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_59;
      }
      v22 = (char *)*(id *)(v20 + 32);
    }
    v19 = v22;
    v124 = v21 - 1;
    if (v21 != 1)
    {
      if (v21 < 2)
      {
        __break(1u);
        goto LABEL_65;
      }
      if (!(_QWORD)v125)
      {
        v45 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v45 < 2 || v124 >= v45)
          goto LABEL_85;
      }
      v46 = 0;
      v123 = v20;
      v47 = v127;
      do
      {
        if ((_QWORD)v125)
          v48 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v46 + 1, v20);
        else
          v48 = (char *)*(id *)(v20 + 8 * v46 + 40);
        v49 = v48;
        v50 = &v19[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        v51 = swift_beginAccess(&v19[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v135, 0, 0);
        v52 = v19;
        v53 = (void (*)(char *, char *, uint64_t, __n128))*((_QWORD *)v47 + 2);
        v53(v10, v50, v6, v51);
        v54 = &v49[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        v55 = swift_beginAccess(&v49[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v134, 0, 0);
        v56 = v126;
        v53(v126, v54, v6, v55);
        v57 = static Date.< infix(_:_:)(v10, v56);
        v58 = (void (*)(char *, uint64_t))*((_QWORD *)v47 + 1);
        v58(v56, v6);
        v58(v10, v6);
        if ((v57 & 1) != 0)
          v59 = v52;
        else
          v59 = v49;
        if ((v57 & 1) != 0)
          v19 = v49;
        else
          v19 = v52;

        ++v46;
        v20 = v123;
      }
      while (v124 != v46);
    }
    swift_bridgeObjectRelease_n(v20, 2);
    v23 = (void *)static OS_os_log.crlFollow;
    v126 = (char *)sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v126, &v133);
    v125 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = &v19[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
    v26 = v23;
    v127 = v25;
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v124 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v124;
    *(_QWORD *)(inited + 32) = v27;
    v30 = inited + 32;
    *(_QWORD *)(inited + 40) = v29;
    v32 = static os_log_type_t.default.getter(v31);
    sub_100A06EBC(v26, &_mh_execute_header, v32, "Wants to start following presence ID: %{public}@", 48, 2, inited);
    swift_setDeallocating(inited);
    v33 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v30, 1, v33);

    v34 = v118;
    v35 = sub_1006F3134();
    LOBYTE(v26) = sub_10062230C(v122, (uint64_t)v35);
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
    if ((v26 & 1) != 0)
    {
      v37 = (id)static OS_os_log.crlFollow;
      v39 = static os_log_type_t.default.getter(v38);
      sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v39, "Detected circular follow request. Notifying delegate and aborting.", 66, 2, (uint64_t)_swiftEmptyArrayStorage);

      v40 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v34
                                                                  + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects"));
      v41 = sub_1004B804C(&qword_1013EE2D8);
      v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);

      if (!((unint64_t)v20 >> 62))
      {
        v42 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v20);
        if (!v42)
          goto LABEL_63;
        goto LABEL_13;
      }
LABEL_59:
      if (v20 < 0)
        v72 = v20;
      else
        v72 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v42 = _CocoaArrayWrapper.endIndex.getter(v72);
      if (!v42)
        goto LABEL_63;
LABEL_13:
      if (v42 < 1)
      {
        __break(1u);
LABEL_85:
        __break(1u);
        return;
      }
      for (i = 0; i != v42; ++i)
      {
        if ((v20 & 0xC000000000000001) != 0)
        {
          v44 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v20);
        }
        else
        {
          v44 = *(void **)(v20 + 8 * i + 32);
          swift_unknownObjectRetain(v44);
        }
        objc_msgSend(v44, "showFollowFailedAlertFor:", 1);
        swift_unknownObjectRelease(v44);
      }
LABEL_63:

      swift_bridgeObjectRelease_n(v20, 2);
      return;
    }
    v123 = v33;
    v60 = objc_msgSend(*(id *)(v34 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects", v36);
    v61 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

    if (!((unint64_t)v20 >> 62))
    {
      v6 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v20);
      if (!v6)
        break;
      goto LABEL_36;
    }
LABEL_65:
    v73 = v20 < 0 ? v20 : v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v6 = _CocoaArrayWrapper.endIndex.getter(v73);
    if (!v6)
      break;
LABEL_36:
    v3 = 4;
    v62 = 0;
    if ((v20 & 0xC000000000000001) != 0)
    {
LABEL_37:
      v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v20);
      goto LABEL_39;
    }
    while (1)
    {
      v63 = *(id *)(v20 + 8 * v3);
LABEL_39:
      v64 = v63;
      v65 = v62 + 1;
      if (__OFADD__(v62, 1))
        break;
      v66 = (char *)objc_msgSend(v63, "selectionModelTranslator");
      if (!v66
        || (v10 = v66,
            v67 = objc_msgSend(v66, "selectionPathForInfos:", 0),
            v10,
            !v67))
      {
        v67 = v64;
        goto LABEL_46;
      }
      v68 = (char *)objc_msgSend(v64, "editorController");
      if (!v68)
      {

LABEL_46:
        if (v65 == v6)
          goto LABEL_69;
        goto LABEL_47;
      }
      v10 = v68;
      objc_msgSend(v68, "setSelectionPath:withFlags:", v67, 0);

      if (v65 == v6)
        goto LABEL_69;
LABEL_47:
      v62 = ++v3 - 4;
      if ((v20 & 0xC000000000000001) != 0)
        goto LABEL_37;
    }
    __break(1u);
  }
LABEL_69:
  swift_bridgeObjectRelease_n(v20, 2);
  v74 = swift_getKeyPath(&unk_100F06958);
  v75 = swift_getKeyPath(&unk_100F06980);
  v76 = v118;
  static Published.subscript.getter(v128, v118, v74, v75);
  swift_release(v74);
  swift_release(v75);
  v77 = v128[0];
  if (v128[0])
  {
    type metadata accessor for CRLCollaborationParticipant(0);
    if ((static NSObject.== infix(_:_:)(v77, v122) & 1) == 0)
    {
      v78 = (uint64_t)(id)static OS_os_log.crlFollow;
      v80 = static os_log_type_t.default.getter(v79);
      sub_100A06EBC(v78, &_mh_execute_header, v80, "Already following another user. Ending that follow session.", 59, 2, (uint64_t)_swiftEmptyArrayStorage);

      v129 = &type metadata for CRLFeatureFlags;
      v130 = sub_1004DB6DC();
      LOBYTE(v128[0]) = 11;
      LOBYTE(v78) = isFeatureEnabled(_:)(v128);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v128);
      if ((v78 & 1) != 0)
      {
        v81 = swift_getKeyPath(&unk_100F06958);
        v82 = swift_getKeyPath(&unk_100F06980);
        static Published.subscript.getter(v128, v76, v81, v82);
        swift_release(v81);
        swift_release(v82);
        if (v128[0])
        {

          v83 = (id)static OS_os_log.crlFollow;
          v85 = static os_log_type_t.default.getter(v84);
          sub_100A06EBC((uint64_t)v83, &_mh_execute_header, v85, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_1006F534C(0);
        }
      }
    }

  }
  v86 = type metadata accessor for CRLFollowViewportState(0);
  v87 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v120, 1, 1, v86);
  v88 = v76 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply;
  swift_beginAccess(v76 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply, v128, 33, 0);
  sub_100582338(v87, v88, &qword_1013EE2E0);
  swift_endAccess(v128);
  if (*(_BYTE *)(v76 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
  {
    v89 = (id)static OS_os_log.crlFollow;
    v91 = static os_log_type_t.default.getter(v90);
    sub_100A06EBC((uint64_t)v89, &_mh_execute_header, v91, "We have followers that can no longer follow us. Notifying them.", 63, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1006F4A18(0);
  }
  *(_BYTE *)(v76 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowIsRefollow) = v121 & 1;
  if ((sub_1006F42A8(v127) & 1) != 0)
  {
    v92 = *(void **)(v76 + v119);
    v93 = v122;
    *(_QWORD *)(v76 + v119) = v122;
    v94 = v93;

    v95 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer;
    v96 = *(void **)(v76 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer);
    if (v96)
    {
      v97 = v96;
      objc_msgSend(v97, "invalidate");
      v98 = *(void **)(v76 + v95);
      *(_QWORD *)(v76 + v95) = 0;

    }
    v99 = (void *)static OS_os_log.crlFollow;
    v100 = swift_initStackObject(v126, &v132);
    *(_OWORD *)(v100 + 16) = v125;
    v101 = v99;
    v102 = UUID.uuidString.getter(v101);
    v103 = v124;
    *(_QWORD *)(v100 + 56) = &type metadata for String;
    *(_QWORD *)(v100 + 64) = v103;
    *(_QWORD *)(v100 + 32) = v102;
    *(_QWORD *)(v100 + 40) = v104;
    v106 = static os_log_type_t.default.getter(v105);
    sub_100A06EBC((uint64_t)v101, &_mh_execute_header, v106, "Starting timer for start follow request for presence ID: %{public}@", 67, 2, v100);
    swift_setDeallocating(v100);
    swift_arrayDestroy(v100 + 32, 1, v123);

    v107 = (void *)objc_opt_self(NSTimer);
    v108 = swift_allocObject(&unk_1012796F0, 24, 7);
    swift_unknownObjectWeakInit(v108 + 16);
    v109 = swift_allocObject(&unk_101279718, 32, 7);
    *(_QWORD *)(v109 + 16) = v108;
    *(_QWORD *)(v109 + 24) = v19;
    v130 = (unint64_t)sub_100701EE8;
    v131 = v109;
    v128[0] = _NSConcreteStackBlock;
    v128[1] = *(id *)"";
    v128[2] = sub_1004C6194;
    v129 = (ValueMetadata *)&unk_101279730;
    v110 = _Block_copy(v128);
    v111 = v131;
    v112 = v19;
    swift_release(v111);
    v113 = objc_msgSend(v107, "scheduledTimerWithTimeInterval:repeats:block:", 0, v110, 5.0);
    _Block_release(v110);
    v114 = *(void **)(v76 + v95);
    *(_QWORD *)(v76 + v95) = v113;

  }
  else
  {
    v69 = (id)static OS_os_log.crlFollow;
    v116 = static os_log_type_t.default.getter(v115);
    sub_100A06EBC((uint64_t)v69, &_mh_execute_header, v116, "Failed to send start follow message. Aborting", 45, 2, (uint64_t)_swiftEmptyArrayStorage);

LABEL_82:
  }
}

void sub_1006F7010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  __int128 v36;
  _BYTE v37[72];
  _BYTE v38[72];
  _BYTE v39[24];
  _BYTE v40[32];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v39, 0, 0);
    v7 = (void *)static OS_os_log.crlFollow;
    v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v8, v38);
    v36 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v10 = (char *)(a3 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID);
    v11 = v7;
    v12 = UUID.uuidString.getter(v11);
    v14 = v13;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v12;
    v15 = inited + 32;
    *(_QWORD *)(inited + 40) = v14;
    v17 = static os_log_type_t.default.getter(v16);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v17, "Start follow timer fired for presence ID: %{public}@", 52, 2, inited);
    swift_setDeallocating(inited);
    v18 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v15, 1, v18);

    if ((sub_1006F2CE0() & 1) != 0)
      goto LABEL_19;
    v19 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant;
    v20 = *(void **)&v6[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant];
    if (!v20)
      goto LABEL_19;
    v21 = (void *)static OS_os_log.crlFollow;
    v22 = swift_initStackObject(v8, v37);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v22 + 56) = type metadata accessor for CRLCollaborationParticipant(0);
    *(_QWORD *)(v22 + 64) = sub_1004B7878(&qword_1013EE308, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v22 + 32) = v20;
    v23 = v20;
    v24 = v21;
    v26 = static os_log_type_t.default.getter(v25);
    sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "Start follow session failed for unknown reason. unconfirmedFollowingParticipant: %@", 83, 2, v22);
    swift_setDeallocating(v22);
    swift_arrayDestroy(v22 + 32, 1, v18);

    v27 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates], "allObjects");
    v28 = sub_1004B804C(&qword_1013EE2D8);
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

    if ((unint64_t)v29 >> 62)
    {
      if (v29 < 0)
        v33 = v29;
      else
        v33 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
      v30 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (v30)
        goto LABEL_8;
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v29);
      if (v30)
      {
LABEL_8:
        if (v30 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v30; ++i)
        {
          if ((v29 & 0xC000000000000001) != 0)
          {
            v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v29);
          }
          else
          {
            v32 = *(void **)(v29 + 8 * i + 32);
            swift_unknownObjectRetain(v32);
          }
          objc_msgSend(v32, "showFollowFailedAlertFor:", 0, v36);
          swift_unknownObjectRelease(v32);
        }
      }
    }
    swift_bridgeObjectRelease_n(v29, 2);
    v34 = *(void **)&v6[v19];
    *(_QWORD *)&v6[v19] = 0;

    v35 = *(void **)&v6[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer];
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer] = 0;

    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp] = 0;
    sub_1006F3B38(v10);

LABEL_19:
  }
}

void sub_1006F7444(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  void *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  NSString v73;
  unint64_t v74;
  Class isa;
  NSString v76;
  unint64_t v77;
  Class v78;
  id v79;
  id v80;
  uint64_t v81;
  id v82;
  _BYTE *v83;
  void *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char v95[24];
  char v96[72];
  _QWORD v97[3];
  void *v98[3];

  v87 = type metadata accessor for UUID(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for Date(0);
  v93 = *(_QWORD *)(v94 - 8);
  v4 = __chkstk_darwin(v94);
  v92 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v91 = (char *)&v81 - v6;
  KeyPath = swift_getKeyPath(&unk_100F06958);
  v8 = swift_getKeyPath(&unk_100F06980);
  static Published.subscript.getter(v98, v1, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = v98[0];
  if (v98[0])
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"localParticipantDidStartFollowing(collaborator:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 365, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"localParticipantDidStartFollowing(collaborator:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 365, (uint64_t)"expected nil value, but non-nil found", 37, 2u);

  }
  v10 = swift_getKeyPath(&unk_100F06958);
  i = swift_getKeyPath(&unk_100F06980);
  v98[0] = a1;
  v12 = a1;
  v13 = v1;
  static Published.subscript.setter(v98, v13, v10, i);
  v14 = *(void **)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant];
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant] = 0;

  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp] = 0;
  v15 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer;
  v16 = *(void **)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer];
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v17, "invalidate");
    i = *(_QWORD *)&v13[v15];
    *(_QWORD *)&v13[v15] = 0;

  }
  v18 = (uint64_t)&selRef_alignToOrigin;
  v19 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates], "allObjects");
  v20 = sub_1004B804C(&qword_1013EE2D8);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v24 = v21;
    else
      v24 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (!v22)
      goto LABEL_17;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v21);
    if (!v22)
      goto LABEL_17;
  }
  if (v22 < 1)
  {
    __break(1u);
    goto LABEL_68;
  }
  for (i = 0; i != v22; ++i)
  {
    if ((v21 & 0xC000000000000001) != 0)
    {
      v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
    }
    else
    {
      v23 = *(void **)(v21 + 8 * i + 32);
      swift_unknownObjectRetain(v23);
    }
    objc_msgSend(v23, "didStartFollowingParticipant:", v12);
    swift_unknownObjectRelease(v23);
  }
LABEL_17:
  swift_bridgeObjectRelease_n(v21, 2);
  v25 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers], "allObjects");
  v26 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v31 = v21;
    else
      v31 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v27 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (!v27)
      goto LABEL_29;
  }
  else
  {
    v27 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v21);
    if (!v27)
      goto LABEL_29;
  }
  if (v27 < 1)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v28 = 0;
  do
  {
    if ((v21 & 0xC000000000000001) != 0)
      v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v21);
    else
      v29 = *(id *)(v21 + 8 * v28 + 32);
    v30 = v29;
    ++v28;
    v98[0] = v29;
    sub_1006F7EEC(v98, (uint64_t)v13, (unint64_t)v12);

  }
  while (v27 != v28);
LABEL_29:
  swift_bridgeObjectRelease_n(v21, 2);
  sub_1006F8EA4((uint64_t)v98);
  v32 = (uint64_t)&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver];
  swift_beginAccess(&v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver], v97, 33, 0);
  sub_100582338((uint64_t)v98, v32, &qword_1013EE2F8);
  swift_endAccess(v97);
  v33 = (void *)objc_opt_self(NSNotificationCenter);
  v34 = objc_msgSend(v33, "defaultCenter");
  if (qword_1013DCB88 != -1)
    swift_once(&qword_1013DCB88, sub_10063870C);
  objc_msgSend(v34, "addObserver:selector:name:object:", v13, "groupSessionPresenceWasAddedWithNotification:", qword_10147ECF0, 0);

  v35 = objc_msgSend(v33, "defaultCenter");
  objc_msgSend(v35, "addObserver:selector:name:object:", v13, "deviceDidRotateWhileFollowingNotification:", UIDeviceOrientationDidChangeNotification, 0);

  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v98, 0, 0);
  v36 = (void *)static OS_os_log.crlFollow;
  v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  i = swift_initStackObject(v37, v96);
  *(_OWORD *)(i + 16) = xmmword_100EF5E40;
  v38 = swift_getKeyPath(&unk_100F06A08);
  v39 = swift_getKeyPath(&unk_100F06A30);
  v40 = v36;
  static Published.subscript.getter(v97, v12, v38, v39);
  swift_release(v38);
  swift_release(v39);
  v21 = v97[0];
  if (!(v97[0] >> 62))
  {
    v18 = *(_QWORD *)((v97[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v97[0]);
    if (v18)
      goto LABEL_35;
LABEL_58:
    swift_bridgeObjectRelease_n(v21, 2);
    v47 = 0;
    goto LABEL_59;
  }
  if (v97[0] < 0)
    v64 = v97[0];
  else
    v64 = v97[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v97[0]);
  v18 = _CocoaArrayWrapper.endIndex.getter(v64);
  if (!v18)
    goto LABEL_58;
LABEL_35:
  v90 = v21 & 0xC000000000000001;
  v84 = a1;
  v83 = v13;
  v82 = v40;
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_69:
    v41 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
    goto LABEL_38;
  }
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_71;
  }
  v41 = (char *)*(id *)(v21 + 32);
LABEL_38:
  v42 = v41;
  v89 = v18 - 1;
  v81 = i;
  if (v18 != 1)
  {
    if (v18 >= 2)
    {
      if (v90 || (v49 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10), v49 >= 2) && v89 < v49)
      {
        v50 = 0;
        v88 = v12;
        v51 = v21;
        v52 = v93;
        v53 = v91;
        v54 = v94;
        do
        {
          if (v90)
            v55 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v50 + 1, v21);
          else
            v55 = (char *)*(id *)(v21 + 8 * v50 + 40);
          v56 = v55;
          v57 = &v42[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          swift_beginAccess(&v42[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v97, 0, 0);
          v58 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
          v58(v53, v57, v54);
          v59 = &v56[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          swift_beginAccess(&v56[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v95, 0, 0);
          v60 = v92;
          v58(v92, v59, v54);
          v61 = static Date.< infix(_:_:)(v53, v60);
          v62 = *(void (**)(char *, uint64_t))(v52 + 8);
          v62(v60, v54);
          v62(v53, v54);
          if ((v61 & 1) != 0)
            v63 = v42;
          else
            v63 = v56;
          if ((v61 & 1) != 0)
            v42 = v56;

          ++v50;
          v12 = v88;
          v21 = v51;
        }
        while (v89 != v50);
        goto LABEL_39;
      }
LABEL_72:
      __break(1u);
      return;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_39:
  swift_bridgeObjectRelease_n(v21, 2);
  v43 = v86;
  v44 = v85;
  v45 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v85, &v42[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID], v87);

  v47 = UUID.uuidString.getter(v46);
  v18 = v48;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  a1 = v84;
  v13 = v83;
  i = v81;
  v40 = v82;
LABEL_59:
  v65 = i + 32;
  *(_QWORD *)(i + 56) = &type metadata for String;
  *(_QWORD *)(i + 64) = sub_1004CFC2C();
  if (v18)
    v67 = v47;
  else
    v67 = 0;
  v68 = 0xE000000000000000;
  if (v18)
    v68 = v18;
  *(_QWORD *)(i + 32) = v67;
  *(_QWORD *)(i + 40) = v68;
  v69 = static os_log_type_t.default.getter(v66);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v69, "Started following presence ID: %{public}@", 41, 2, i);
  swift_setDeallocating(i);
  v70 = *(_QWORD *)(i + 16);
  v71 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v65, v70, v71);

  v72 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v73 = String._bridgeToObjectiveC()();
  v74 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(12);
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v72, "sendEventInDomain:lazily:eventPayload:", v73, 1, isa, swift_bridgeObjectRelease(v74).n128_f64[0]);

  if (v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowIsRefollow] == 1)
  {
    v13[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowIsRefollow] = 0;
    v76 = String._bridgeToObjectiveC()();
    v77 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(13);
    v78 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v72, "sendEventInDomain:lazily:eventPayload:", v76, 1, v78, swift_bridgeObjectRelease(v77).n128_f64[0]);

  }
  v79 = sub_100700E5C();
  v80 = v12;
  sub_1009989F4(a1);

}

void sub_1006F7EEC(void **a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char v40[24];
  _QWORD v41[3];
  uint64_t v42;

  v38 = a3;
  v5 = type metadata accessor for Date(0);
  v42 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - v8;
  v10 = *a1;
  v11 = (void *)objc_opt_self(NSNotificationCenter);
  v12 = objc_msgSend(v11, "defaultCenter");
  objc_msgSend(v12, "addObserver:selector:name:object:", a2, "canvasDidZoomOrScrollWhileFollowingNotification:", CFSTR("CRLCanvasWillScrollNotification"), v10);

  v13 = objc_msgSend(v11, "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", a2, "canvasDidZoomOrScrollWhileFollowingNotification:", CFSTR("CRLCanvasWillZoomNotification"), v10);

  v14 = objc_msgSend(v11, "defaultCenter");
  v35 = v10;
  v15 = objc_msgSend(v10, "editorController");
  objc_msgSend(v14, "addObserver:selector:name:object:", a2, "selectionPathDidChangeWithNotification:", CFSTR("CRLEditorControllerSelectionPathDidChangeNotification"), v15);

  KeyPath = swift_getKeyPath(&unk_100F06A08);
  v17 = swift_getKeyPath(&unk_100F06A30);
  static Published.subscript.getter(v41, v38, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  v18 = v41[0];
  if (!(v41[0] >> 62))
  {
    v19 = *(_QWORD *)((v41[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v41[0]);
    if (v19)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease_n(v18, 2);
    sub_100757E04(&_mh_execute_header, (uint64_t)"localParticipantDidStartFollowing(collaborator:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 383, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"localParticipantDidStartFollowing(collaborator:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 383, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  if (v41[0] < 0)
    v34 = v41[0];
  else
    v34 = v41[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v41[0]);
  v19 = _CocoaArrayWrapper.endIndex.getter(v34);
  if (!v19)
    goto LABEL_26;
LABEL_3:
  v38 = v18 & 0xC000000000000001;
  if ((v18 & 0xC000000000000001) != 0)
  {
    v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    v20 = (char *)*(id *)(v18 + 32);
  }
  v21 = v20;
  v37 = v19 - 1;
  if (v19 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease_n(v18, 2);
    objc_msgSend(v35, "updateCollaboratorHUDForBeginFollowingCollaborator:", v21);

    return;
  }
  if (v19 >= 2)
  {
    if (v38 || (v22 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10), v22 >= 2) && v37 < v22)
    {
      v23 = 0;
      v36 = v18;
      v24 = v42;
      do
      {
        if (v38)
          v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23 + 1, v18);
        else
          v25 = (char *)*(id *)(v18 + 8 * v23 + 40);
        v26 = v25;
        v27 = &v21[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        swift_beginAccess(&v21[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v41, 0, 0);
        v28 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
        v28(v9, v27, v5);
        v29 = &v26[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        swift_beginAccess(&v26[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v40, 0, 0);
        v30 = v39;
        v28(v39, v29, v5);
        v31 = static Date.< infix(_:_:)(v9, v30);
        v32 = *(void (**)(char *, uint64_t))(v24 + 8);
        v32(v30, v5);
        v32(v9, v5);
        if ((v31 & 1) != 0)
          v33 = v21;
        else
          v33 = v26;
        if ((v31 & 1) != 0)
          v21 = v26;

        ++v23;
        v18 = v36;
      }
      while (v37 != v23);
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1006F8440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v3 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v12, v21, 0, 0);
    sub_1004CB7BC(v12, (uint64_t)v9, (uint64_t *)&unk_101405E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
    {
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
      swift_unknownObjectRelease(v11);
    }
    else
    {
      sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
      v15 = *(_QWORD *)&v6[*(int *)(v3 + 24)];
      swift_retain(v15);
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      swift_unknownObjectRelease(v11);
      v16 = sub_1006421D0();
      swift_release(v15);
      if (v16)
      {
        v17 = &v16[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
        v18 = type metadata accessor for UUID(0);
        v19 = *(_QWORD *)(v18 - 8);
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v19 + 16))(a1, v17, v18);

        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
      }
    }
  }
  v13 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
}

void sub_1006F8654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  const __CFString *v25;
  const __CFString *v26;
  const __CFString *v27;
  unint64_t v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  _BYTE v33[24];
  _BYTE v34[40];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006F8440((uint64_t)v3);
  v4 = type metadata accessor for UUID(0);
  v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E1A50);
  if (v5 == 1)
    return;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) = 1;
  sub_1006F8EA4((uint64_t)v34);
  v6 = v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver, v33, 33, 0);
  sub_100582338((uint64_t)v34, v6, &qword_1013EE2F8);
  swift_endAccess(v33);
  v7 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects");
  v8 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v21 = v9;
    else
      v21 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v21);
    if (v10)
      goto LABEL_4;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (v10)
    {
LABEL_4:
      v11 = objc_opt_self(NSNotificationCenter);
      if (v10 < 1)
      {
        __break(1u);
        return;
      }
      v12 = (void *)v11;
      v13 = 0;
      v31 = "canvasDidScrollWhileHostingWithNotification:";
      v32 = "canvasUpdateScrollWhileHostingWithNotification:";
      v29 = "canvasDidZoomWhileHostingWithNotification:";
      v30 = "canvasUpdateZoomWhileHostingWithNotification:";
      v28 = v9 & 0xC000000000000001;
      v27 = CFSTR("CRLCanvasUpdateScrollNotification");
      v26 = CFSTR("CRLCanvasDidScrollNotification");
      v25 = CFSTR("CRLCanvasUpdateZoomNotification");
      v14 = v9;
      do
      {
        if (v28)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9);
        else
          v15 = *(id *)(v9 + 8 * v13 + 32);
        v16 = v15;
        ++v13;
        v17 = objc_msgSend(v12, "defaultCenter", v25);
        objc_msgSend(v17, "addObserver:selector:name:object:", v0, v32, v27, v16);

        v18 = objc_msgSend(v12, "defaultCenter");
        objc_msgSend(v18, "addObserver:selector:name:object:", v0, v31, v26, v16);

        v19 = objc_msgSend(v12, "defaultCenter");
        objc_msgSend(v19, "addObserver:selector:name:object:", v0, v30, v25, v16);

        v20 = objc_msgSend(v12, "defaultCenter");
        objc_msgSend(v20, "addObserver:selector:name:object:", v0, v29, CFSTR("CRLCanvasDidZoomNotification"), v16);

        v9 = v14;
      }
      while (v10 != v13);
    }
  }
  swift_bridgeObjectRelease_n(v9, 2);
  sub_1006F9DEC(0, 1);
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v34, 0, 0);
  v22 = (id)static OS_os_log.crlFollow;
  v24 = static os_log_type_t.default.getter(v23);
  sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v24, "Started hosting a follow session", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

}

void sub_1006F8A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const __CFString *v28;
  const __CFString *v29;
  const __CFString *v30;
  unint64_t v31;
  _BYTE v32[24];
  _QWORD v33[5];

  v1 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v1);
  v27 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"localParticipantDidStopHosting()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 458, "localParticipantDidStopHosting called when not being followed", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"localParticipantDidStopHosting()", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 458, (uint64_t)"localParticipantDidStopHosting called when not being followed", 61, 2u);
  }
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects", v26);
  v4 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v17 = v5;
    else
      v17 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v6)
      goto LABEL_15;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (!v6)
      goto LABEL_15;
  }
  v7 = objc_opt_self(NSNotificationCenter);
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  v8 = (void *)v7;
  v9 = 0;
  v31 = v5 & 0xC000000000000001;
  v30 = CFSTR("CRLCanvasUpdateScrollNotification");
  v29 = CFSTR("CRLCanvasDidScrollNotification");
  v28 = CFSTR("CRLCanvasUpdateZoomNotification");
  v10 = v5;
  do
  {
    if (v31)
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v5);
    else
      v11 = *(id *)(v5 + 8 * v9 + 32);
    v12 = v11;
    ++v9;
    v13 = objc_msgSend(v8, "defaultCenter");
    objc_msgSend(v13, "removeObserver:name:object:", v0, v30, v12);

    v14 = objc_msgSend(v8, "defaultCenter");
    objc_msgSend(v14, "removeObserver:name:object:", v0, v29, v12);

    v15 = objc_msgSend(v8, "defaultCenter");
    objc_msgSend(v15, "removeObserver:name:object:", v0, v28, v12);

    v16 = objc_msgSend(v8, "defaultCenter");
    objc_msgSend(v16, "removeObserver:name:object:", v0, CFSTR("CRLCanvasDidZoomNotification"), v12);

    v5 = v10;
  }
  while (v6 != v9);
LABEL_15:
  v18 = swift_bridgeObjectRelease_n(v5, 2);
  *(_BYTE *)(v0 + v26) = 0;
  sub_1006F8EA4(v33, v18);
  v19 = v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver, v32, 33, 0);
  sub_100582338((uint64_t)v33, v19, &qword_1013EE2F8);
  swift_endAccess(v32);
  v20 = type metadata accessor for CRLFollowViewportState(0);
  v21 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v27, 1, 1, v20);
  v22 = v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend, v33, 33, 0);
  sub_100582338(v21, v22, &qword_1013EE2E0);
  swift_endAccess(v33);
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v33, 0, 0);
  v23 = (id)static OS_os_log.crlFollow;
  v25 = static os_log_type_t.default.getter(v24);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v25, "Stopped hosting a follow session", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

}

void sub_1006F8EA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _BYTE v38[24];
  char v39[24];
  _BYTE v40[24];
  uint64_t v41;

  v37 = sub_1004B804C(&qword_1013EE2F0);
  v3 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver, v39, 0, 0);
  sub_1004CB7BC(v13, (uint64_t)v40, &qword_1013EE2F8);
  v14 = v41;
  sub_1004CB800((uint64_t)v40, &qword_1013EE2F8);
  if (v14)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  v35 = v3;
  v36 = v12;
  v33 = v9;
  v34 = v5;
  v15 = v37;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
  v17 = a1;
  if (Strong)
  {
    v18 = Strong;
    v19 = v1;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v20, v40, 0, 0);
    v21 = (uint64_t)v36;
    sub_1004CB7BC(v20, (uint64_t)v36, (uint64_t *)&unk_101405E90);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v21, 1, v6))
    {
      v25 = (uint64_t)v33;
      sub_1004B8460(v21, (uint64_t)v33, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800(v21, (uint64_t *)&unk_101405E90);
      v26 = *(_QWORD *)(v25 + *(int *)(v6 + 24));
      swift_retain(v26);
      sub_1004B84A4(v25, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      swift_unknownObjectRelease(v18);
      swift_beginAccess(v26 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection__activeParticipants, v38, 33, 0);
      v27 = sub_1004B804C((uint64_t *)&unk_1013E8E50);
      v28 = v34;
      Published.projectedValue.getter(v27);
      swift_endAccess(v38);
      v29 = swift_allocObject(&unk_1012796F0, 24, 7);
      swift_unknownObjectWeakInit(v29 + 16, v19);
      v30 = sub_1004CBA30(&qword_1013EE300, &qword_1013EE2F0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v31 = Publisher<>.sink(receiveValue:)(sub_100701DA0, v29, v15, v30);
      v32 = swift_release(v29);
      (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v28, v15, v32);
      *(_QWORD *)(v17 + 24) = type metadata accessor for AnyCancellable(0);
      *(_QWORD *)(v17 + 32) = &protocol witness table for AnyCancellable;
      swift_release(v26);
      *(_QWORD *)v17 = v31;
      return;
    }
    sub_1004CB800(v21, (uint64_t *)&unk_101405E90);
    swift_unknownObjectRelease(v18);
  }
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v38, 0, 0);
  v22 = (id)static OS_os_log.crlFollow;
  v24 = static os_log_type_t.default.getter(v23);
  sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v24, "Unable to retrieve the collaborationParticipants in addRemoveActiveParticipantObserver", 86, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(_QWORD *)(v17 + 32) = 0;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
}

void sub_1006F925C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[32];
  _QWORD v50[3];
  id v51[3];
  _BYTE v52[24];

  v4 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1004B804C((uint64_t *)&unk_101405E90);
  v9 = __chkstk_darwin(v8);
  v11 = &v47[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v13 = &v47[-v12 - 8];
  v14 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v16 = (char *)Strong;
    KeyPath = swift_getKeyPath(&unk_100F06958);
    v18 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(v51, v16, KeyPath, v18);
    swift_release(KeyPath);
    swift_release(v18);
    if (!v51[0])
      goto LABEL_12;
    v19 = v51[0];
    v20 = sub_100701DA8(v14, (uint64_t)v19);

    if ((v20 & 1) == 0)
    {
      v21 = swift_unknownObjectWeakLoadStrong(&v16[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate]);
      if (!v21)
      {
LABEL_8:
        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v48, 0, 0);
        v28 = (id)static OS_os_log.crlFollow;
        v30 = static os_log_type_t.default.getter(v29);
        sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "Calling didEndFollowing because the participant we were following is no longer an active participant", 100, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(0);
        goto LABEL_11;
      }
      v22 = v21;
      v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
          + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
      swift_beginAccess(v23, v49, 0, 0);
      sub_1004CB7BC(v23, (uint64_t)v13, (uint64_t *)&unk_101405E90);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
      {
        sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_101405E90);
        swift_unknownObjectRelease(v22);
        goto LABEL_8;
      }
      sub_1004B8460((uint64_t)v13, (uint64_t)v7, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_101405E90);
      v24 = *(_QWORD *)&v7[*(int *)(v4 + 24)];
      swift_retain(v24);
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      swift_unknownObjectRelease(v22);
      v25 = (uint64_t *)(v24 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants);
      swift_beginAccess(v24 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants, v47, 0, 0);
      v26 = *v25;
      swift_bridgeObjectRetain(v26);
      v27 = sub_100C9DB50((uint64_t)v19, v26);
      swift_release(v24);
      swift_bridgeObjectRelease(v26);
      if ((v27 & 1) == 0)
        goto LABEL_8;
    }
LABEL_11:

LABEL_12:
    if (v16[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed] != 1)
    {
LABEL_20:

      return;
    }
    v31 = swift_unknownObjectWeakLoadStrong(&v16[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate]);
    if (v31)
    {
      v32 = v31;
      v33 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
          + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
      swift_beginAccess(v33, v51, 0, 0);
      sub_1004CB7BC(v33, (uint64_t)v11, (uint64_t *)&unk_101405E90);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
      {
        sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101405E90);
        swift_unknownObjectRelease(v32);
      }
      else
      {
        sub_1004B8460((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101405E90);
        v37 = *(_QWORD *)&v7[*(int *)(v4 + 24)];
        swift_retain(v37);
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        swift_unknownObjectRelease(v32);
        v34 = sub_100642358();
        swift_release(v37);
        if (v34)
        {
          v38 = swift_getKeyPath(&unk_100F069B0);
          v39 = swift_getKeyPath(&unk_100F069D8);
          static Published.subscript.getter(v50, v34, v38, v39);
          swift_release(v38);
          swift_release(v39);
          v40 = v50[0];
          if ((v50[0] & 0xC000000000000001) != 0)
          {
            if (v50[0] < 0)
              v41 = v50[0];
            else
              v41 = v50[0] & 0xFFFFFFFFFFFFFF8;
            v42 = __CocoaSet.count.getter(v41);
          }
          else
          {
            v42 = *(_QWORD *)(v50[0] + 16);
          }
          swift_bridgeObjectRelease(v40);
          if (!v42)
          {
            if (qword_1013DD7C8 != -1)
              swift_once(&qword_1013DD7C8, sub_100A03AC0);
            swift_beginAccess(&static OS_os_log.crlFollow, v50, 0, 0);
            v43 = (id)static OS_os_log.crlFollow;
            v45 = static os_log_type_t.default.getter(v44);
            sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v45, "Calling localParticipantDidStopHosting because there are no longer any followers", 80, 2, (uint64_t)_swiftEmptyArrayStorage);

            sub_1006F8A3C();
          }
          goto LABEL_19;
        }
      }
    }
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v50, 0, 0);
    v34 = (char *)(id)static OS_os_log.crlFollow;
    v36 = static os_log_type_t.default.getter(v35);
    sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v36, "Unable to retrieve the collaborationParticipants local participant in the active participant observer", 101, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_19:

    v16 = v34;
    goto LABEL_20;
  }
}

id sub_1006F982C()
{
  return sub_1006F9850((SEL *)&selRef_shouldPreventSyncingContentOffset);
}

id sub_1006F9844()
{
  return sub_1006F9850((SEL *)&selRef_shouldPreventSyncingViewScale);
}

id sub_1006F9850(SEL *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects");
  v4 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
    goto LABEL_12;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v12))
  {
    v7 = 4;
    while (1)
    {
      v8 = (v5 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5)
         : *(id *)(v5 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(v8, *a1);
      if ((v11 & 1) != 0)
        goto LABEL_18;

      ++v7;
      if (v10 == v6)
        goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (v5 < 0)
      v12 = v5;
    else
      v12 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  v11 = 0;
LABEL_17:
  v9 = 0;
LABEL_18:
  swift_bridgeObjectRelease_n(v5, 2);

  return v11;
}

void sub_1006F99A0(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  id v6;
  id v7;

  if (*((_BYTE *)a1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
  {
    v6 = a3;
    v7 = a1;
    if ((a4() & 1) == 0)
      sub_1006F9AB0(v6, 0);

  }
}

void sub_1006F9AB0(void *a1, char a2)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewportHasUpdated(notification:forceReliableUpdate:)", 53, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 554, "viewportHasUpdated called when not being followed", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewportHasUpdated(notification:forceReliableUpdate:)", 53, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 554, (uint64_t)"viewportHasUpdated called when not being followed", 49, 2u);
    return;
  }
  v5 = objc_msgSend(a1, "object");
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v10, v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1004C4938((uint64_t)v10, (uint64_t)v11, &qword_1013E0230);
  if (!v12)
  {
    sub_1004CB800((uint64_t)v11, &qword_1013E0230);
    goto LABEL_13;
  }
  v7 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  if ((swift_dynamicCast(&v9, v11, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewportHasUpdated(notification:forceReliableUpdate:)", 53, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 558, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewportHasUpdated(notification:forceReliableUpdate:)", 53, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 558, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_14:
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewportHasUpdated(notification:forceReliableUpdate:)", 53, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 560, "CRLFollowCoordinator receiving viewport notifications for unknown ICC", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewportHasUpdated(notification:forceReliableUpdate:)", 53, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 560, (uint64_t)"CRLFollowCoordinator receiving viewport notifications for unknown ICC", 69, 2u);
    return;
  }
  v8 = v9;
  if ((objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "containsObject:", v9) & 1) == 0)
  {

    goto LABEL_14;
  }
  if (*(uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_syncingViewportStateCounter) <= 0)
    sub_1006F9DEC(a1, a2 & 1);

}

void sub_1006F9DEC(void *a1, int a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  __n128 v46;
  uint64_t v47;
  id v48;
  double v49;
  float v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  __uint64_t *v59;
  uint64_t (*v60)(char *, uint64_t, int *);
  int v61;
  __uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  CGFloat *v69;
  __uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  __uint64_t *v73;
  CGFloat *v74;
  id v75;
  _QWORD v76[2];
  int v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __uint64_t *v81;
  id v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  id v92[2];
  CGRect v93;

  v5 = (int *)type metadata accessor for CRLFollowViewportState(0);
  v86 = *((_QWORD *)v5 - 1);
  __chkstk_darwin(v5);
  v81 = (_QWORD *)((char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v7);
  v80 = (uint64_t)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v85 = (uint64_t)v76 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)v76 - v12;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v14);
  v84 = (uint64_t)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v76 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)v76 - v20;
  v22 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v79 = (char *)v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)v76 - v26;
  sub_1006F8440((uint64_t)v21);
  v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v83((uint64_t)v21, 1, v22) != 1)
  {
    v76[0] = *(_QWORD *)(v23 + 32);
    ((void (*)(char *, char *, uint64_t))v76[0])(v27, v21, v22);
    if (a1)
    {
      v31 = v27;
      v32 = objc_msgSend(a1, "object");
      if (v32)
      {
        v33 = v32;
        _bridgeAnyObjectToAny(_:)(&v90, v32);
        swift_unknownObjectRelease(v33);
      }
      else
      {
        v90 = 0u;
        v91 = 0u;
      }
      sub_1004C4938((uint64_t)&v90, (uint64_t)&v88, &qword_1013E0230);
      v27 = v31;
      if (*((_QWORD *)&v89 + 1))
      {
        v34 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
        if ((swift_dynamicCast(v92, &v88, (char *)&type metadata for Any + 8, v34, 6) & 1) != 0)
        {
          v35 = v92[0];
          if (v92[0])
            goto LABEL_18;
          goto LABEL_16;
        }
LABEL_15:
        v92[0] = 0;
LABEL_16:
        v36 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "anyObject");
        v37 = v92[0];
        v92[0] = v36;

        v35 = v92[0];
        if (!v92[0])
        {
          if (qword_1013DD7C8 != -1)
            swift_once(&qword_1013DD7C8, sub_100A03AC0);
          swift_beginAccess(&static OS_os_log.crlFollow, &v88, 0, 0);
          v45 = (id)static OS_os_log.crlFollow;
          v47 = static os_log_type_t.default.getter(v46);
          sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v47, "Unable to retrieve an interactive canvas controller to generate a viewport", 74, 2, (uint64_t)_swiftEmptyArrayStorage);

          (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
          goto LABEL_49;
        }
        if (!a1)
        {
          v78 = v27;
          v77 = a2;
          v48 = v92[0];
          goto LABEL_31;
        }
LABEL_18:
        v82 = v35;
        v38 = objc_msgSend(a1, "userInfo");
        v77 = a2;
        v78 = v27;
        if (v38)
        {
          v39 = v38;
          v40 = v2;
          v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          v87[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLInteractiveCanvasControllerViewScaleKey"));
          v87[1] = v42;
          AnyHashable.init<A>(_:)(v87, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v41 + 16) && (v43 = sub_1008432BC((uint64_t)&v88), (v44 & 1) != 0))
          {
            sub_1004CB6E8(*(_QWORD *)(v41 + 56) + 32 * v43, (uint64_t)&v90);
          }
          else
          {
            v90 = 0u;
            v91 = 0u;
          }
          swift_bridgeObjectRelease(v41);
          sub_1004B89A4((uint64_t)&v88);
          if (*((_QWORD *)&v91 + 1))
          {
            if ((swift_dynamicCast(&v88, &v90, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
            {
              v49 = *(double *)&v88;
              v2 = v40;
              v48 = v82;
              goto LABEL_35;
            }
            v2 = v40;
            v48 = v82;
LABEL_34:
            objc_msgSend(v48, "currentViewScale");
LABEL_35:
            v50 = v49;
            objc_msgSend(v48, "visibleBoundsRectForTiling");
            v82 = v48;
            objc_msgSend(v48, "convertBoundsToUnscaledRect:");
            v52 = v51;
            v54 = v53;
            v56 = v55;
            v58 = v57;
            v76[1] = v2;
            v59 = (__uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend);
            swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend, &v88, 1, 0);
            sub_1004CB7BC((uint64_t)v59, (uint64_t)v13, &qword_1013EE2E0);
            v60 = *(uint64_t (**)(char *, uint64_t, int *))(v86 + 48);
            v61 = v60(v13, 1, v5);
            sub_1004CB800((uint64_t)v13, &qword_1013EE2E0);
            if (v61 == 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v78, v22);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
              v62 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
              v63 = v84;
              sub_1004CB7BC((uint64_t)v18, v84, (uint64_t *)&unk_1013E1A50);
              if (v83(v63, 1, v22) == 1)
              {
                sub_1004CB800(v63, (uint64_t *)&unk_1013E1A50);
                sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
                v64 = 1;
                v65 = v77;
                v66 = v85;
              }
              else
              {
                v71 = v79;
                v72 = (void (*)(char *, char *, uint64_t))v76[0];
                ((void (*)(char *, uint64_t, uint64_t))v76[0])(v79, v63, v22);
                sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
                v73 = v81;
                v72((char *)v81 + v5[5], v71, v22);
                *(float *)((char *)v73 + v5[6]) = v50;
                v74 = (CGFloat *)((char *)v73 + v5[7]);
                *v74 = v52;
                v74[1] = v54;
                v74[2] = v56;
                v74[3] = v58;
                *v73 = v62;
                v66 = v85;
                sub_1004B84E0((uint64_t)v73, v85, type metadata accessor for CRLFollowViewportState);
                v64 = 0;
                v65 = v77;
              }
              v75 = v82;
              (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v86 + 56))(v66, v64, 1, v5);
              swift_beginAccess(v59, &v90, 33, 0);
              sub_100582338(v66, (uint64_t)v59, &qword_1013EE2E0);
              swift_endAccess(&v90);
              sub_1006FBA68(v65 & 1);

              goto LABEL_48;
            }
            if ((v77 & 1) == 0)
            {
              v67 = v80;
              sub_1004CB7BC((uint64_t)v59, v80, &qword_1013EE2E0);
              if (v60((char *)v67, 1, v5) == 1)
              {
LABEL_54:
                __break(1u);
                return;
              }
              v93.origin.x = v52;
              v93.origin.y = v54;
              v93.size.width = v56;
              v93.size.height = v58;
              v68 = CGRectEqualToRect(v93, *(CGRect *)(v67 + v5[7]));
              sub_1004B84A4(v67, type metadata accessor for CRLFollowViewportState);
              if (v68)
              {
                (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v22);

LABEL_49:
                return;
              }
            }
            if (v60((char *)v59, 1, v5) == 1)
            {
              __break(1u);
            }
            else
            {
              *(float *)((char *)v59 + v5[6]) = v50;
              if (v60((char *)v59, 1, v5) != 1)
              {
                v69 = (CGFloat *)((char *)v59 + v5[7]);
                *v69 = v52;
                v69[1] = v54;
                v69[2] = v56;
                v69[3] = v58;
                v70 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
                if (v60((char *)v59, 1, v5) != 1)
                {
                  *v59 = v70;
                  sub_1006FBA68(v77 & 1);

LABEL_48:
                  (*(void (**)(char *, uint64_t))(v23 + 8))(v78, v22);
                  goto LABEL_49;
                }
                goto LABEL_53;
              }
            }
            __break(1u);
LABEL_53:
            __break(1u);
            goto LABEL_54;
          }
          v2 = v40;
          v48 = v82;
LABEL_33:
          sub_1004CB800((uint64_t)&v90, &qword_1013E0230);
          goto LABEL_34;
        }
        v48 = v82;
LABEL_31:
        v90 = 0u;
        v91 = 0u;
        goto LABEL_33;
      }
    }
    else
    {
      v88 = 0u;
      v89 = 0u;
    }
    sub_1004CB800((uint64_t)&v88, &qword_1013E0230);
    goto LABEL_15;
  }
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E1A50);
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, &v88, 0, 0);
  v28 = (id)static OS_os_log.crlFollow;
  v30 = static os_log_type_t.default.getter(v29);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "Unable to retrieve the localPresenceUUID in generateAndSendViewportUpdate", 73, 2, (uint64_t)_swiftEmptyArrayStorage);

}

void sub_1006FA788(int a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  void *v38;
  uint64_t v39;
  _BYTE *v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[5];
  uint64_t v61;
  char v62[24];
  char v63[32];

  v54 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLFollowViewportState(0);
  v59 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v59 + 64);
  __chkstk_darwin(v8);
  v53 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v55 = (uint64_t)&v49 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - v19;
  v21 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_shouldSyncViewportState;
  if (v1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_shouldSyncViewportState] != 1)
    return;
  v50 = v5;
  v51 = v3;
  v52 = v2;
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply], v63, 0, 0);
  sub_1004CB7BC(v22, (uint64_t)v20, &qword_1013EE2E0);
  v23 = sub_1006FF86C((uint64_t)v20);
  sub_1004CB800((uint64_t)v20, &qword_1013EE2E0);
  v24 = v1;
  if ((sub_1006F2CE0() & 1) == 0)
  {
    if ((v23 & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"syncViewportStateIfNeeded(_:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 629, "syncViewportStateIfNeeded called when not following", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"syncViewportStateIfNeeded(_:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 629, (uint64_t)"syncViewportStateIfNeeded called when not following", 51, 2u);
      return;
    }
    goto LABEL_6;
  }
  if ((v23 & 1) != 0)
  {
LABEL_6:
    v25 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
    v26 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_expectingViewportFromUUID];
    swift_beginAccess(&v24[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_expectingViewportFromUUID], aBlock, 33, 0);
    sub_100582338((uint64_t)v14, v26, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(aBlock);
  }
  v24[v21] = 0;
  sub_1004CB7BC(v22, (uint64_t)v17, &qword_1013EE2E0);
  v27 = v59;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v17, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v17, &qword_1013EE2E0);
    sub_100757E04(&_mh_execute_header, (uint64_t)"syncViewportStateIfNeeded(_:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 641, "syncViewportStateIfNeeded called with no viewportToApply", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"syncViewportStateIfNeeded(_:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 641, (uint64_t)"syncViewportStateIfNeeded called with no viewportToApply", 56, 2u);
  }
  else
  {
    v28 = v55;
    sub_1004B84E0((uint64_t)v17, v55, type metadata accessor for CRLFollowViewportState);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v62, 0, 0);
    v29 = (id)static OS_os_log.crlFollow;
    v31 = static os_log_type_t.default.getter(v30);
    sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v31, "syncing ViewportState to canvas", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v32 = (void *)static OS_dispatch_queue.main.getter();
    v33 = v53;
    sub_1004B8460(v28, v53, type metadata accessor for CRLFollowViewportState);
    v34 = *(unsigned __int8 *)(v27 + 80);
    v35 = (v34 + 24) & ~v34;
    v36 = swift_allocObject(&unk_101279600, v35 + v9 + 2, v34 | 7);
    *(_QWORD *)(v36 + 16) = v24;
    sub_1004B84E0(v33, v36 + v35, type metadata accessor for CRLFollowViewportState);
    v37 = (_BYTE *)(v36 + v35 + v9);
    *v37 = v54 & 1;
    v37[1] = v23 & 1;
    aBlock[4] = sub_100701CD0;
    v61 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101279618;
    v38 = _Block_copy(aBlock);
    v39 = v61;
    v40 = v24;
    v41 = swift_release(v39);
    v42 = v56;
    static DispatchQoS.unspecified.getter(v41);
    aBlock[0] = _swiftEmptyArrayStorage;
    v43 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v44 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v45 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    v46 = v50;
    v47 = v44;
    v48 = v52;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v47, v45, v52, v43);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v42, v46, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v48);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v58);
    sub_1004B84A4(v28, type metadata accessor for CRLFollowViewportState);
  }
}

void sub_1006FADFC(_BYTE *a1, uint64_t a2, int a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _BYTE *v41;
  __n128 v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[4];
  int v51;
  void (*v52)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  void *aBlock[5];
  uint64_t v64;

  v51 = a3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v50[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1004B804C(&qword_1013E04F0);
  v16 = __chkstk_darwin(v15);
  v18 = &v50[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_syncingViewportStateCounter];
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    v61 = v8;
    v62 = v7;
    *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_syncingViewportStateCounter] = v21;
    v54 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isUpdatingLocalICCState;
    a1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isUpdatingLocalICCState] = 1;
    static Date.now.getter(v16);
    v22 = type metadata accessor for Date(0);
    v52 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
    v53 = v22;
    ((void (*)(_BYTE *, _QWORD, uint64_t))v52)(v18, 0, 1);
    v23 = (uint64_t)&a1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp];
    swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp], aBlock, 33, 0);
    v55 = v23;
    sub_100582338((uint64_t)v18, v23, &qword_1013E04F0);
    swift_endAccess(aBlock);
    v24 = sub_100700E5C();
    sub_10099B358();
    sub_10099BC60(a2);

    v25 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers], "allObjects");
    v26 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    v59 = v11;
    v60 = v10;
    v57 = v14;
    v58 = v12;
    v56 = v18;
    if (!((unint64_t)v8 >> 62))
    {
      v27 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      if (v27)
        goto LABEL_4;
LABEL_15:
      swift_bridgeObjectRelease_n(v8, 2);
      a1[v54] = 0;
      v34 = (uint64_t)v56;
      static Date.now.getter(v35);
      v52(v34, 0, 1, v53);
      v36 = v55;
      swift_beginAccess(v55, aBlock, 33, 0);
      sub_100582338(v34, v36, &qword_1013E04F0);
      swift_endAccess(aBlock);
      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v37 = (void *)static OS_dispatch_queue.main.getter();
      v38 = swift_allocObject(&unk_101279650, 24, 7);
      *(_QWORD *)(v38 + 16) = a1;
      aBlock[4] = sub_100701D14;
      v64 = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void **)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_101279668;
      v39 = _Block_copy(aBlock);
      v40 = v64;
      v41 = a1;
      v42 = swift_release(v40);
      v43 = v57;
      static DispatchQoS.unspecified.getter(v42);
      aBlock[0] = _swiftEmptyArrayStorage;
      v44 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v45 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v46 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
      v47 = v60;
      v48 = v45;
      v49 = v62;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v48, v46, v62, v44);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v47, v39);
      _Block_release(v39);

      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v47, v49);
      (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v43, v59);
      return;
    }
  }
  if (v8 < 0)
    v33 = v8;
  else
    v33 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v27 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v27)
    goto LABEL_15;
LABEL_4:
  if (v27 >= 1)
  {
    v28 = 0;
    v29 = v51 & 1;
    v30 = a4 & 1;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v8);
      else
        v31 = *(id *)(v8 + 8 * v28 + 32);
      v32 = v31;
      ++v28;
      aBlock[0] = v31;
      sub_1006FB294(aBlock, a2, v29, v30, (uint64_t)a1);

    }
    while (v27 != v28);
    goto LABEL_15;
  }
  __break(1u);
}

double sub_1006FB294(void **a1, uint64_t a2, char a3, int a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  double result;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  void *v45;
  void *v46;
  void *v47;
  char *v48;
  __n128 v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  __n128 v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  _QWORD aBlock[5];
  uint64_t v91;
  char v92[24];
  char v93[16];

  v88 = a5;
  LODWORD(v89) = a4;
  v80 = type metadata accessor for DispatchWorkItemFlags(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for DispatchQoS(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v75 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for DispatchTimeInterval(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v71 = (char **)((char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = type metadata accessor for DispatchTime(0);
  v70 = *(_QWORD *)(v82 - 8);
  v11 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v82);
  v69 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v74 = (char *)&v69 - v13;
  v14 = type metadata accessor for CRLFollowViewportState(0);
  v84 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v83 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v19);
  v85 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  v86 = v21;
  v87 = v22;
  __chkstk_darwin(v21);
  v81 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v28);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a1;
  objc_msgSend(v31, "scrollCenteredOrZoomToUnscaledRect:shouldAnimateScroll:", a3 & 1, *(double *)(a2 + *(int *)(v14 + 28)), *(double *)(a2 + *(int *)(v14 + 28) + 8), *(double *)(a2 + *(int *)(v14 + 28) + 16), *(double *)(a2 + *(int *)(v14 + 28) + 24));
  if ((v89 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v88 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
    if (Strong)
    {
      v34 = Strong;
      v35 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
          + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
      swift_beginAccess(v35, v93, 0, 0);
      sub_1004CB7BC(v35, (uint64_t)v30, (uint64_t *)&unk_101405E90);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v30, 1, v24))
      {
        sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_101405E90);
        swift_unknownObjectRelease(v34);
        return result;
      }
      sub_1004B8460((uint64_t)v30, (uint64_t)v27, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_101405E90);
      v36 = *(char **)&v27[*(int *)(v24 + 24)];
      swift_retain(v36);
      sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      swift_unknownObjectRelease(v34);
      v37 = v88 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply;
      swift_beginAccess(v88 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply, v92, 0, 0);
      sub_1004CB7BC(v37, (uint64_t)v18, &qword_1013EE2E0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v18, 1, v14))
      {
        sub_1004CB800((uint64_t)v18, &qword_1013EE2E0);
        v38 = (uint64_t)v85;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v85, 1, 1, v86);
LABEL_8:
        swift_release(v36);
        sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
        return result;
      }
      v39 = v83;
      sub_1004B8460((uint64_t)v18, v83, type metadata accessor for CRLFollowViewportState);
      sub_1004CB800((uint64_t)v18, &qword_1013EE2E0);
      v40 = v39 + *(int *)(v14 + 20);
      v42 = v86;
      v41 = v87;
      v43 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 32);
      v38 = (uint64_t)v85;
      v43(v85, v40, v86);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v42);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v38, 1, v42) == 1)
        goto LABEL_8;
      v44 = v81;
      v43(v81, v38, v42);
      v45 = sub_100642EE8();
      if (v45)
      {
        v47 = v46;

        sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
        v88 = static OS_dispatch_queue.main.getter();
        v48 = v69;
        static DispatchTime.now()(v49);
        v50 = v71;
        *v71 = 250;
        v51 = v72;
        v52 = v73;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v72 + 104))(v50, enum case for DispatchTimeInterval.milliseconds(_:), v73);
        v85 = v36;
        v53 = v74;
        + infix(_:_:)(v48, v50);
        (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v50, v52);
        v89 = *(void (**)(char *, uint64_t))(v70 + 8);
        v89(v48, v82);
        v54 = swift_allocObject(&unk_1012796A0, 32, 7);
        *(_QWORD *)(v54 + 16) = v31;
        *(_QWORD *)(v54 + 24) = v47;
        aBlock[4] = sub_100701D64;
        v91 = v54;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_1012796B8;
        v55 = _Block_copy(aBlock);
        v56 = v91;
        v57 = v31;
        v58 = v47;
        v59 = swift_release(v56);
        v60 = v75;
        static DispatchQoS.unspecified.getter(v59);
        aBlock[0] = _swiftEmptyArrayStorage;
        v61 = v44;
        v62 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v63 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
        v64 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
        v65 = v78;
        v66 = v63;
        v67 = v80;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v66, v64, v80, v62);
        v68 = (void *)v88;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v53, v60, v65, v55);
        swift_release(v85);
        _Block_release(v55);

        (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v67);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v60, v77);
        v89(v53, v82);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v61, v86);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v87 + 8))(v44, v42);
        *(_QWORD *)&result = swift_release(v36).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_1006FBA68(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;
  _BYTE v46[32];

  v2 = v1;
  v42 = a1;
  v3 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - v5;
  v7 = type metadata accessor for CRLFollowViewportState(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  v14 = v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend, v46, 0, 0);
  sub_1004CB7BC(v14, (uint64_t)v6, &qword_1013EE2E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, &qword_1013EE2E0);
    sub_100757E04(&_mh_execute_header, (uint64_t)"sendViewportUpdate(forceReliable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 686, "sendViewportUpdate called with invalid viewport", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sendViewportUpdate(forceReliable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 686, (uint64_t)"sendViewportUpdate called with invalid viewport", 47, 2u);
  }
  else
  {
    v40 = v10;
    sub_1004B84E0((uint64_t)v6, (uint64_t)v13, type metadata accessor for CRLFollowViewportState);
    type metadata accessor for CRContext(0);
    v45 = 0;
    memset(v44, 0, sizeof(v44));
    v15 = v13;
    v16 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v44);
    sub_1004CB800((uint64_t)v44, (uint64_t *)&unk_1014064C0);
    v41 = (uint64_t)v15;
    v17 = sub_100929DD4();
    v19 = v18;

    sub_1004BE310(v17, v19);
    v20 = v19;
    v21 = sub_1006F394C();
    v22 = v42;
    if (v21)
    {
      v23 = v21;
      sub_1004BE310(v17, v20);
      sub_1007019C4(3, 0, 0, 3, v17, v20, v22 & 1, v23);
      swift_release(v23);
      sub_1004BBBC8(v17, v20);
    }
    v39 = v20;
    v24 = v41;
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v44, 0, 0);
    v25 = (void *)static OS_os_log.crlFollow;
    v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v26, &v43);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v28 = (uint64_t)v40;
    sub_1004B8460(v24, (uint64_t)v40, type metadata accessor for CRLFollowViewportState);
    v29 = v25;
    v30 = String.init<A>(describing:)(v28, v7);
    v32 = v31;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v33 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v30;
    *(_QWORD *)(inited + 40) = v32;
    v34 = 1702195828;
    if ((v22 & 1) == 0)
      v34 = 0x65736C6166;
    v35 = 0xE500000000000000;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v33;
    if ((v22 & 1) != 0)
      v35 = 0xE400000000000000;
    *(_QWORD *)(inited + 64) = v33;
    *(_QWORD *)(inited + 72) = v34;
    *(_QWORD *)(inited + 80) = v35;
    v36 = static os_log_type_t.debug.getter();
    sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v36, "Enqueuing viewport update: viewport:%@, usesReliable:%@", 55, 2, inited);
    swift_setDeallocating(inited);
    v37 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v37);

    v38 = v39;
    sub_1004BBBC8(v17, v39);
    sub_1004BBBC8(v17, v38);
    sub_1004B84A4(v24, type metadata accessor for CRLFollowViewportState);
  }
}

void sub_1006FBFD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char v31[24];

  v3 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v31, 0, 0);
  v6 = (id)static OS_os_log.crlFollow;
  v7 = static os_log_type_t.debug.getter();
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v7, "will addViewPortUpdate", 22, 2, (uint64_t)_swiftEmptyArrayStorage);

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isProcessingViewportUpdates) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"addViewPortUpdate(_:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 704, "Adding a follow viewport update when not processing viewport updates", 68, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addViewPortUpdate(_:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 704, (uint64_t)"Adding a follow viewport update when not processing viewport updates", 68, 2u);
  }
  sub_1004B8460((uint64_t)a1, (uint64_t)v5, type metadata accessor for CRLFollowViewportState);
  v8 = type metadata accessor for CRLFollowViewportState(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  v9 = sub_1006FF86C((uint64_t)v5);
  sub_1004CB800((uint64_t)v5, &qword_1013EE2E0);
  if ((v9 & 1) != 0)
    sub_1006FC3B8(a1);
  v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant);
  if (!v10)
  {
    if ((sub_1006F2CE0() & 1) == 0)
      return;
    goto LABEL_13;
  }
  v11 = (char *)a1 + *(int *)(v8 + 20);
  KeyPath = swift_getKeyPath(&unk_100F06A08);
  v13 = swift_getKeyPath(&unk_100F06A30);
  v14 = v10;
  static Published.subscript.getter(&v30, v14, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v15 = (uint64_t)v30;
  __chkstk_darwin(v16);
  v28 = v11;
  v17 = sub_100C9D0C0((uint64_t (*)(id *))sub_1007022D0, (uint64_t)&v27, v15);
  swift_bridgeObjectRelease(v15);

  if (v17)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportIsInitialViewport) = 1;
    sub_1006FC3B8(a1);
  }

  if ((sub_1006F2CE0() & 1) != 0)
  {
LABEL_13:
    v18 = swift_getKeyPath(&unk_100F06958);
    v19 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(&v30, v1, v18, v19);
    swift_release(v18);
    swift_release(v19);
    v20 = v30;
    if (v30)
    {
      v21 = (char *)a1 + *(int *)(v8 + 20);
      v22 = swift_getKeyPath(&unk_100F06A08);
      v23 = swift_getKeyPath(&unk_100F06A30);
      static Published.subscript.getter(&v30, v20, v22, v23);
      swift_release(v22);
      swift_release(v23);
      v24 = (uint64_t)v30;
      __chkstk_darwin(v25);
      v28 = v21;
      v26 = sub_100C9D0C0((uint64_t (*)(id *))sub_100701BA8, (uint64_t)&v27, v24);

      swift_bridgeObjectRelease(v24);
      if (v26)
      {

        sub_1006FC3B8(a1);
      }
    }
  }
}

void sub_1006FC3B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp) < *a1)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp) = *a1;
    sub_1004B8460((uint64_t)a1, (uint64_t)v5, type metadata accessor for CRLFollowViewportState);
    v6 = type metadata accessor for CRLFollowViewportState(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
    v7 = v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateInBatch;
    swift_beginAccess(v7, v12, 33, 0);
    sub_100582338((uint64_t)v5, v7, &qword_1013EE2E0);
    swift_endAccess(v12);
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v12, 0, 0);
    v8 = (id)static OS_os_log.crlFollow;
    v10 = static os_log_type_t.default.getter(v9);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "added viewport update as latest", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

void sub_1006FC530(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  id *v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  __n128 v45;
  void (*v46)(char *, char *, uint64_t, __n128);
  char *v47;
  __n128 v48;
  char v49;
  void (*v50)(char *, uint64_t);
  void *v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id *v58;
  id *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _OWORD v63[2];
  id v64[3];
  ValueMetadata *v65;
  unint64_t v66;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v53 - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v13 = (id *)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = &type metadata for CRLFeatureFlags;
  v66 = sub_1004DB6DC();
  LOBYTE(v64[0]) = 11;
  v17 = isFeatureEnabled(_:)(v64);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v64);
  if ((v17 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F06958);
    v19 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(v64, v2, KeyPath, v19);
    swift_release(KeyPath);
    swift_release(v19);
    if (v64[0])
    {

      v20 = objc_msgSend(a1, "object");
      if (v20)
      {
        v21 = v20;
        _bridgeAnyObjectToAny(_:)(v63, v20);
        swift_unknownObjectRelease(v21);
      }
      else
      {
        memset(v63, 0, sizeof(v63));
      }
      sub_1004C4938((uint64_t)v63, (uint64_t)v64, &qword_1013E0230);
      if (!v65)
      {
        v38 = &qword_1013E0230;
        v39 = v64;
LABEL_19:
        sub_1004CB800((uint64_t)v39, v38);
        return;
      }
      v22 = type metadata accessor for CRLCollaborationParticipant(0);
      if ((swift_dynamicCast(&v62, v64, (char *)&type metadata for Any + 8, v22, 6) & 1) != 0)
      {
        v59 = v13;
        v23 = v62;
        v24 = swift_getKeyPath(&unk_100F06958);
        v25 = swift_getKeyPath(&unk_100F06980);
        v26 = v23;
        static Published.subscript.getter(v64, v2, v24, v25);
        swift_release(v24);
        swift_release(v25);
        v27 = v64[0];
        if (v64[0])
        {
          v26 = v26;
          v28 = static NSObject.== infix(_:_:)(v26, v27);

          if ((v28 & 1) != 0)
          {
            v29 = swift_getKeyPath(&unk_100F06A08);
            v30 = swift_getKeyPath(&unk_100F06A30);
            v53 = v26;
            static Published.subscript.getter(v64, v26, v29, v30);
            swift_release(v29);
            swift_release(v30);
            v31 = v64[0];
            if ((unint64_t)v64[0] >> 62)
            {
              if ((uint64_t)v64[0] < 0)
                v52 = v64[0];
              else
                v52 = (id)((unint64_t)v64[0] & 0xFFFFFFFFFFFFFF8);
              swift_bridgeObjectRetain(v64[0]);
              v32 = _CocoaArrayWrapper.endIndex.getter(v52);
              v33 = v59;
              if (v32)
              {
LABEL_12:
                v57 = (unint64_t)v31 & 0xC000000000000001;
                if (((unint64_t)v31 & 0xC000000000000001) != 0)
                {
                  v34 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
                }
                else
                {
                  if (!*(_QWORD *)(((unint64_t)v31 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
                    goto LABEL_45;
                  }
                  v34 = (char *)*((id *)v31 + 4);
                }
                v35 = v34;
                v56 = v32 - 1;
                v58 = (id *)v31;
                if (v32 == 1)
                  goto LABEL_16;
                if (v32 >= 2)
                {
                  if (v57
                    || (v40 = *(_QWORD *)(((unint64_t)v31 & 0xFFFFFFFFFFFFF8) + 0x10), v40 >= 2) && v56 < v40)
                  {
                    v41 = 0;
                    v54 = v16;
                    v55 = v2;
                    do
                    {
                      if (v57)
                        v42 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v41 + 1, v58);
                      else
                        v42 = (char *)v58[v41 + 5];
                      v43 = v42;
                      v44 = &v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
                      v45 = swift_beginAccess(&v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v64, 0, 0);
                      v46 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
                      v46(v10, v44, v4, v45);
                      v47 = &v43[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
                      v48 = swift_beginAccess(&v43[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v63, 0, 0);
                      v46(v7, v47, v4, v48);
                      v49 = static Date.< infix(_:_:)(v10, v7);
                      v50 = *(void (**)(char *, uint64_t))(v5 + 8);
                      v50(v7, v4);
                      v50(v10, v4);
                      if ((v49 & 1) != 0)
                        v51 = v35;
                      else
                        v51 = v43;
                      if ((v49 & 1) != 0)
                        v35 = v43;

                      ++v41;
                      v33 = v59;
                      v16 = v54;
                    }
                    while (v56 != v41);
LABEL_16:
                    swift_bridgeObjectRelease_n(v58, 2);
                    v37 = v60;
                    v36 = v61;
                    (*(void (**)(id *, char *, uint64_t))(v60 + 16))(v33, &v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID], v61);

                    (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
                    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36) != 1)
                    {
                      (*(void (**)(char *, id *, uint64_t))(v37 + 32))(v16, v33, v36);
                      sub_1006F42A8(v16);

                      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v36);
                      return;
                    }
                    goto LABEL_42;
                  }
                  goto LABEL_46;
                }
LABEL_45:
                __break(1u);
LABEL_46:
                __break(1u);
                return;
              }
            }
            else
            {
              v32 = *(_QWORD *)(((unint64_t)v64[0] & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v64[0]);
              v33 = v59;
              if (v32)
                goto LABEL_12;
            }
            swift_bridgeObjectRelease_n(v31, 2);
            (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v33, 1, 1, v61);
LABEL_42:

            v38 = (uint64_t *)&unk_1013E1A50;
            v39 = v33;
            goto LABEL_19;
          }
        }
        else
        {

        }
      }
    }
  }
}

void sub_1006FCB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v1 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v10, 0, 0);
  v4 = (id)static OS_os_log.crlFollow;
  v5 = static os_log_type_t.debug.getter();
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v5, "willProcessViewportUpdates", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

  v6 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isProcessingViewportUpdates;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isProcessingViewportUpdates) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willProcessViewportUpdates()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 757, "Called willProcessViewportUpdates when we already began processing viewport updates!", 84, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willProcessViewportUpdates()", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 757, (uint64_t)"Called willProcessViewportUpdates when we already began processing viewport updates!", 84, 2u);
  }
  v7 = v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateInBatch;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateInBatch, v9, 0, 0);
  sub_1004CB7BC(v7, (uint64_t)v3, &qword_1013EE2E0);
  v8 = type metadata accessor for CRLFollowViewportState(0);
  LODWORD(v7) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v3, 1, v8);
  sub_1004CB800((uint64_t)v3, &qword_1013EE2E0);
  if ((_DWORD)v7 != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willProcessViewportUpdates()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 758, "Called willProcessViewportUpdates when we already have a received viewport update!", 82, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willProcessViewportUpdates()", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 758, (uint64_t)"Called willProcessViewportUpdates when we already have a received viewport update!", 82, 2u);
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportIsInitialViewport) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willProcessViewportUpdates()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 759, "Called willProcessViewportUpdates when isInitialViewport is not reset!", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willProcessViewportUpdates()", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 759, (uint64_t)"Called willProcessViewportUpdates when isInitialViewport is not reset!", 70, 2u);
  }
  *(_BYTE *)(v0 + v6) = 1;
}

uint64_t sub_1006FCE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v1 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v17[-v5 - 8];
  v7 = type metadata accessor for CRLFollowViewportState(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v19, 0, 0);
  v11 = (id)static OS_os_log.crlFollow;
  v12 = static os_log_type_t.debug.getter();
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v12, "didProcessViewportUpdates", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

  v13 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isProcessingViewportUpdates;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isProcessingViewportUpdates) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"didProcessViewportUpdates()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2, 767, "Called didProcessViewportUpdates before we began processing viewport updates!", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didProcessViewportUpdates()", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLFollowCoordinator.swift", 94, 2u, 767, (uint64_t)"Called didProcessViewportUpdates before we began processing viewport updates!", 77, 2u);
  }
  v14 = v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateInBatch;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateInBatch, v18, 0, 0);
  sub_1004CB7BC(v14, (uint64_t)v6, &qword_1013EE2E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, &qword_1013EE2E0);
  }
  else
  {
    sub_1004B84E0((uint64_t)v6, (uint64_t)v10, type metadata accessor for CRLFollowViewportState);
    sub_1006FD1B4((uint64_t)v10);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFollowViewportState);
  }
  *(_BYTE *)(v0 + v13) = 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v3, 1, 1, v7);
  swift_beginAccess(v14, v17, 33, 0);
  sub_100582338((uint64_t)v3, v14, &qword_1013EE2E0);
  result = swift_endAccess(v17);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportIsInitialViewport) = 0;
  return result;
}

void sub_1006FD1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  BOOL v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];

  v3 = type metadata accessor for CRLFollowViewportState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v35 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013EE2E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v9);
  v36 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  v34 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportIsInitialViewport;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportIsInitialViewport) == 1)
  {
    v17 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant);
    if (v17)
    {
      v18 = qword_1013DD7C8;
      v19 = v17;
      if (v18 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v38, 0, 0);
      v20 = (id)static OS_os_log.crlFollow;
      v22 = static os_log_type_t.default.getter(v21);
      sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v22, "Starting follow session due to initial viewport update", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F7444(v19);
    }
  }
  v23 = v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply, v40, 0, 0);
  v37 = a1;
  sub_1004B8460(a1, (uint64_t)v16, type metadata accessor for CRLFollowViewportState);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v24(v16, 0, 1, v3);
  v25 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1004CB7BC(v23, (uint64_t)v8, &qword_1013EE2E0);
  sub_1004CB7BC((uint64_t)v16, v25, &qword_1013EE2E0);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v8, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v16, &qword_1013EE2E0);
    if (v26(v25, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v8, &qword_1013EE2E0);
LABEL_13:
      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v39, 0, 0);
      v29 = (id)static OS_os_log.crlFollow;
      v31 = static os_log_type_t.default.getter(v30);
      sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v31, "not applying viewport update because viewport did not change", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

      return;
    }
    goto LABEL_11;
  }
  sub_1004CB7BC((uint64_t)v8, (uint64_t)v13, &qword_1013EE2E0);
  if (v26(v25, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v16, &qword_1013EE2E0);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFollowViewportState);
LABEL_11:
    sub_1004CB800((uint64_t)v8, &qword_1013EE2E8);
    goto LABEL_16;
  }
  v27 = v35;
  sub_1004B84E0(v25, v35, type metadata accessor for CRLFollowViewportState);
  v28 = sub_100929BB8((uint64_t)v13, v27);
  sub_1004B84A4(v27, type metadata accessor for CRLFollowViewportState);
  sub_1004CB800((uint64_t)v16, &qword_1013EE2E0);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFollowViewportState);
  sub_1004CB800((uint64_t)v8, &qword_1013EE2E0);
  if (v28)
    goto LABEL_13;
LABEL_16:
  v32 = v36;
  sub_1004B8460(v37, v36, type metadata accessor for CRLFollowViewportState);
  v24((char *)v32, 0, 1, v3);
  swift_beginAccess(v23, v39, 33, 0);
  sub_100582338(v32, v23, &qword_1013EE2E0);
  swift_endAccess(v39);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_shouldSyncViewportState) = 1;
  if ((sub_1006F9844() & 1) == 0 && (sub_1006F982C() & 1) == 0)
    sub_1006FA788(*(unsigned __int8 *)(v1 + v34));
}

void sub_1006FD650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void *v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  char *v39;
  char *v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  __n128 v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[24];
  _BYTE v88[72];
  _QWORD v89[6];

  v3 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLStartOrEndFollow(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89[3] = &type metadata for CRLFeatureFlags;
  v89[4] = sub_1004DB6DC();
  LOBYTE(v89[0]) = 11;
  v13 = isFeatureEnabled(_:)(v89);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v89);
  if ((v13 & 1) != 0)
  {
    v81 = v6;
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v89, 0, 0);
    v14 = (void *)static OS_os_log.crlFollow;
    v79 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v79, v88);
    v78 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v82 = a1;
    sub_1004B8460(a1, (uint64_t)v12, type metadata accessor for CRLStartOrEndFollow);
    v16 = v14;
    v83 = (void *)v10;
    v17 = String.init<A>(describing:)(v12, v10);
    v19 = v18;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v80 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v80;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v21 = static os_log_type_t.default.getter(v20);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v21, "Received start follow message: %@", 33, 2, inited);
    swift_setDeallocating(inited);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v22);

    v23 = v1;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
    if (!Strong)
      goto LABEL_7;
    v25 = Strong;
    v26 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v26, v87, 0, 0);
    sub_1004CB7BC(v26, (uint64_t)v9, (uint64_t *)&unk_101405E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
    {
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
      swift_unknownObjectRelease(v25);
LABEL_7:
      v27 = (id)static OS_os_log.crlFollow;
      v29 = static os_log_type_t.default.getter(v28);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "Unable to retrieve the CollaborationParticipants when processing a start follow message", 87, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_8:

      return;
    }
    v30 = (uint64_t)v81;
    sub_1004B8460((uint64_t)v9, (uint64_t)v81, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
    v31 = *(_QWORD *)(v30 + *(int *)(v3 + 24));
    swift_retain(v31);
    sub_1004B84A4(v30, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    swift_unknownObjectRelease(v25);
    v32 = sub_100642EE8();
    if (v32)
    {
      v34 = v32;

      v35 = sub_100642EE8();
      if (v35)
      {
        v37 = v35;

        if ((sub_1006F2CE0() & 1) != 0)
        {
          v83 = v34;
          v38 = v37;
          v39 = sub_100642358();
          if (v39)
          {
            v40 = v39;
            type metadata accessor for CRLCollaborationParticipant(0);
            v27 = v38;
            v41 = static NSObject.== infix(_:_:)(v27, v40);

            v34 = v83;
            if ((v41 & 1) != 0)
            {
              sub_1006F4A18(1);
LABEL_25:
              swift_release(v31);

              goto LABEL_8;
            }
          }
          else
          {

            v34 = v83;
          }
        }
        v27 = v37;
        sub_100638874(v37);
        v51 = sub_100642358();
        if (v51)
        {
          v52 = v51;
          KeyPath = swift_getKeyPath(&unk_100F069B0);
          v54 = swift_getKeyPath(&unk_100F069D8);
          static Published.subscript.getter(&v85, v52, KeyPath, v54);
          swift_release(KeyPath);
          swift_release(v54);
          v55 = v85;
          if ((v85 & 0xC000000000000001) != 0)
          {
            if (v85 < 0)
              v56 = v85;
            else
              v56 = v85 & 0xFFFFFFFFFFFFFF8;
            v57 = __CocoaSet.count.getter(v56);
          }
          else
          {
            v57 = *(_QWORD *)(v85 + 16);
          }
          swift_bridgeObjectRelease(v55);
          if (v57 == 1 && (*(_BYTE *)(v23 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) & 1) == 0)
          {
            v58 = (id)static OS_os_log.crlFollow;
            v60 = static os_log_type_t.default.getter(v59);
            sub_100A06EBC((uint64_t)v58, &_mh_execute_header, v60, "User wasn't hosting yet, so start the hosting session which will send out a viewport update to confirm the follow request.", 122, 2, (uint64_t)_swiftEmptyArrayStorage);

            sub_1006F8654();
          }
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          if ((static NSObject.== infix(_:_:)(v27, v52) & 1) != 0)
          {
            v61 = (void *)static OS_os_log.crlFollow;
            v62 = swift_initStackObject(v79, &v84);
            *(_OWORD *)(v62 + 16) = v78;
            v63 = v61;
            v83 = v52;
            v64 = v63;
            v65 = UUID.uuidString.getter(v63);
            v66 = v80;
            *(_QWORD *)(v62 + 56) = &type metadata for String;
            *(_QWORD *)(v62 + 64) = v66;
            *(_QWORD *)(v62 + 32) = v65;
            *(_QWORD *)(v62 + 40) = v67;
            v69 = static os_log_type_t.default.getter(v68);
            sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v69, "Received a start follow message from presence ID: %{public}@", 60, 2, v62);
            swift_setDeallocating(v62);
            swift_arrayDestroy(v62 + 32, 1, v22);

            v52 = (char *)v83;
            sub_1006FFC54(v34);
            v70 = swift_getKeyPath(&unk_100F069B0);
            v71 = swift_getKeyPath(&unk_100F069D8);
            static Published.subscript.getter(&v85, v52, v70, v71);
            swift_release(v70);
            swift_release(v71);
            v72 = v85;
            if ((v85 & 0xC000000000000001) != 0)
            {
              if (v85 < 0)
                v73 = v85;
              else
                v73 = v85 & 0xFFFFFFFFFFFFFF8;
              v74 = __CocoaSet.count.getter(v73);
            }
            else
            {
              v74 = *(_QWORD *)(v85 + 16);
            }
            swift_bridgeObjectRelease(v72);
            if (v74 > 1 || *(_BYTE *)(v23 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
            {
              v75 = (id)static OS_os_log.crlFollow;
              v77 = static os_log_type_t.default.getter(v76);
              sub_100A06EBC((uint64_t)v75, &_mh_execute_header, v77, "User is already hosting another follow, but still generating and sending a viewport update to confirm the follow request.", 121, 2, (uint64_t)_swiftEmptyArrayStorage);

              sub_1006F9DEC(0, 1);
            }
          }
          swift_release(v31);

          goto LABEL_8;
        }
        goto LABEL_25;
      }

    }
    v42 = (void *)static OS_os_log.crlFollow;
    v43 = swift_initStackObject(v79, &v86);
    *(_OWORD *)(v43 + 16) = xmmword_100EF5A10;
    v27 = v42;
    v44 = UUID.uuidString.getter(v27);
    v45 = v80;
    *(_QWORD *)(v43 + 56) = &type metadata for String;
    *(_QWORD *)(v43 + 64) = v45;
    *(_QWORD *)(v43 + 32) = v44;
    *(_QWORD *)(v43 + 40) = v46;
    v47 = UUID.uuidString.getter(v44);
    *(_QWORD *)(v43 + 96) = &type metadata for String;
    *(_QWORD *)(v43 + 104) = v45;
    *(_QWORD *)(v43 + 72) = v47;
    *(_QWORD *)(v43 + 80) = v48;
    v50 = static os_log_type_t.default.getter(v49);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v50, "Unable to retrieve the CRLCollaborationParticipant for the given follower (%{public}@) or host presence UUID (%{public}@) when starting a follow", 144, 2, v43);
    swift_setDeallocating(v43);
    swift_arrayDestroy(v43 + 32, 2, v22);
    swift_release(v31);
    goto LABEL_8;
  }
}

void sub_1006FDE20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char v13;
  void *v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  char *v35;
  void *v36;
  char *v37;
  char *v38;
  char v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  __int128 v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[24];
  char v80[72];
  _QWORD v81[6];

  v3 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)type metadata accessor for CRLStartOrEndFollow(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81[3] = &type metadata for CRLFeatureFlags;
  v81[4] = sub_1004DB6DC();
  LOBYTE(v81[0]) = 11;
  v13 = isFeatureEnabled(_:)(v81);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v81);
  if ((v13 & 1) != 0)
  {
    v72 = v6;
    v74 = v10;
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v81, 0, 0);
    v14 = (void *)static OS_os_log.crlFollow;
    v71 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v71, v80);
    v69 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v73 = a1;
    sub_1004B8460(a1, (uint64_t)v12, type metadata accessor for CRLStartOrEndFollow);
    v16 = v14;
    v17 = String.init<A>(describing:)(v12, v74);
    v19 = v18;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v70 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v70;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v21 = static os_log_type_t.default.getter(v20);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v21, "Received end follow message: %@", 31, 2, inited);
    swift_setDeallocating(inited);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v22);

    v23 = v1;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
    if (Strong)
    {
      v25 = Strong;
      v26 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
          + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
      swift_beginAccess(v26, v79, 0, 0);
      sub_1004CB7BC(v26, (uint64_t)v9, (uint64_t *)&unk_101405E90);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
      {
        v30 = (uint64_t)v72;
        sub_1004B8460((uint64_t)v9, (uint64_t)v72, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
        v31 = *(_QWORD *)(v30 + *(int *)(v3 + 24));
        swift_retain(v31);
        sub_1004B84A4(v30, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        swift_unknownObjectRelease(v25);
        v32 = sub_100642EE8();
        if (v32)
        {
          v34 = v32;

          v35 = (char *)sub_100642EE8();
          if (v35)
          {
            v27 = v35;

            sub_100638874(0);
            v37 = sub_100642358();
            if (v37)
            {
              v38 = v37;
              v74 = v34;
              sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
              v39 = static NSObject.== infix(_:_:)(v27, v38);
              v40 = v70;
              if ((v39 & 1) != 0)
              {
                v41 = (void *)static OS_os_log.crlFollow;
                v42 = swift_initStackObject(v71, &v75);
                *(_OWORD *)(v42 + 16) = v69;
                v43 = v41;
                v44 = UUID.uuidString.getter(v43);
                *(_QWORD *)(v42 + 56) = &type metadata for String;
                *(_QWORD *)(v42 + 64) = v40;
                *(_QWORD *)(v42 + 32) = v44;
                *(_QWORD *)(v42 + 40) = v45;
                v47 = static os_log_type_t.default.getter(v46);
                sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v47, "Received a stop follow message from presence ID: %{public}@", 59, 2, v42);
                swift_setDeallocating(v42);
                swift_arrayDestroy(v42 + 32, 1, v22);

                sub_1006FFFE4(v74);
              }
              v48 = (void *)static OS_os_log.crlFollow;
              v49 = swift_initStackObject(v71, &v77);
              *(_OWORD *)(v49 + 16) = v69;
              v50 = v48;
              v51 = UUID.uuidString.getter(v50);
              *(_QWORD *)(v49 + 56) = &type metadata for String;
              *(_QWORD *)(v49 + 64) = v40;
              *(_QWORD *)(v49 + 32) = v51;
              *(_QWORD *)(v49 + 40) = v52;
              v54 = static os_log_type_t.default.getter(v53);
              sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v54, "Received a stop follow message from presence ID: %{public}@", 59, 2, v49);
              swift_setDeallocating(v49);
              swift_arrayDestroy(v49 + 32, 1, v22);

              KeyPath = swift_getKeyPath(&unk_100F069B0);
              v56 = swift_getKeyPath(&unk_100F069D8);
              static Published.subscript.getter(&v76, v38, KeyPath, v56);
              swift_release(KeyPath);
              swift_release(v56);
              v57 = v76;
              if ((v76 & 0xC000000000000001) != 0)
              {
                if (v76 < 0)
                  v58 = v76;
                else
                  v58 = v76 & 0xFFFFFFFFFFFFFF8;
                v59 = __CocoaSet.count.getter(v58);
              }
              else
              {
                v59 = *(_QWORD *)(v76 + 16);
              }
              swift_bridgeObjectRelease(v57);
              if (!v59 && *(_BYTE *)(v23 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
                sub_1006F8A3C();
              swift_release(v31);

              v27 = v38;
            }
            else
            {
              swift_release(v31);

            }
            goto LABEL_8;
          }

        }
        v60 = (void *)static OS_os_log.crlFollow;
        v61 = swift_initStackObject(v71, &v78);
        *(_OWORD *)(v61 + 16) = xmmword_100EF5A10;
        v27 = v60;
        v62 = UUID.uuidString.getter(v27);
        v63 = v70;
        *(_QWORD *)(v61 + 56) = &type metadata for String;
        *(_QWORD *)(v61 + 64) = v63;
        *(_QWORD *)(v61 + 32) = v62;
        *(_QWORD *)(v61 + 40) = v64;
        v65 = UUID.uuidString.getter(v62);
        *(_QWORD *)(v61 + 96) = &type metadata for String;
        *(_QWORD *)(v61 + 104) = v63;
        *(_QWORD *)(v61 + 72) = v65;
        *(_QWORD *)(v61 + 80) = v66;
        v68 = static os_log_type_t.default.getter(v67);
        sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v68, "Unable to retrieve the CRLCollaborationParticipant for the given follower (%{public}@) or host presence UUID (%{public}@) when ending a follow", 142, 2, v61);
        swift_setDeallocating(v61);
        swift_arrayDestroy(v61 + 32, 2, v22);
        swift_release(v31);
LABEL_8:

        return;
      }
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
      swift_unknownObjectRelease(v25);
    }
    v27 = (char *)(id)static OS_os_log.crlFollow;
    v29 = static os_log_type_t.default.getter(v28);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "Unable to retrieve the CollaborationParticipants when processing an end follow message", 86, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_8;
  }
}

void sub_1006FE4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  NSString v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v72;
  unint64_t v73;
  void *v74;
  id v75;
  BOOL v76;
  void *v77;
  uint64_t v78;
  id v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void *v89;
  Class v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t inited;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t KeyPath;
  uint64_t v105;
  void *v106;
  id v107;
  char v108;
  id v109;
  __n128 v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *i;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v136;
  unint64_t v137;
  void *v138;
  id v139;
  BOOL v140;
  void *v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t, uint64_t);
  char *v146;
  uint64_t v147;
  id v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void *v155;
  Class isa;
  uint64_t v157;
  id v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  NSString v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *j;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  id v172;
  uint64_t v173;
  NSString *v174;
  unint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187[72];
  _QWORD v188[3];
  _QWORD v189[5];

  v2 = v1;
  v185 = a1;
  v3 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v3);
  v5 = (char *)&v169 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v180 = (char *)&v169 - v7;
  __chkstk_darwin(v8);
  v179 = (char *)&v169 - v9;
  __chkstk_darwin(v10);
  v182 = (char *)&v169 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v169 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v169 - v16;
  v18 = type metadata accessor for PersonNameComponents(0);
  v183 = *(_QWORD *)(v18 - 8);
  v184 = v18;
  __chkstk_darwin(v18);
  v178 = (char *)&v169 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v181 = (char *)&v169 - v21;
  v22 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v169 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v26);
  v28 = (char *)&v169 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189[3] = &type metadata for CRLFeatureFlags;
  v189[4] = sub_1004DB6DC();
  LOBYTE(v189[0]) = 11;
  v29 = isFeatureEnabled(_:)(v189);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v189);
  if ((v29 & 1) == 0)
    return;
  v30 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant)
    && (sub_1006F2CE0() & 1) == 0)
  {
    return;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate);
  if (!Strong)
  {
LABEL_7:
    if (qword_1013DD7C8 != -1)
      goto LABEL_110;
    goto LABEL_8;
  }
  v32 = Strong;
  v177 = v5;
  v33 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
      + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v33, v189, 0, 0);
  sub_1004CB7BC(v33, (uint64_t)v28, (uint64_t *)&unk_101405E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22))
  {
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_101405E90);
    swift_unknownObjectRelease(v32);
    goto LABEL_7;
  }
  sub_1004B8460((uint64_t)v28, (uint64_t)v25, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_101405E90);
  v37 = *(_QWORD *)&v25[*(int *)(v22 + 24)];
  swift_retain(v37);
  sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  swift_unknownObjectRelease(v32);
  v38 = v185;
  v173 = v37;
  v39 = sub_100642EE8();
  if (!v39)
  {
    if (qword_1013DD7C8 != -1)
      goto LABEL_112;
    goto LABEL_59;
  }
  v41 = v39;

  v42 = *(void **)(v2 + v30);
  if (!v42)
  {
    if ((sub_1006F2CE0() & 1) == 0
      || (KeyPath = swift_getKeyPath(&unk_100F06958),
          v105 = swift_getKeyPath(&unk_100F06980),
          static Published.subscript.getter(v188, v2, KeyPath, v105),
          swift_release(KeyPath),
          swift_release(v105),
          (v106 = (void *)v188[0]) == 0))
    {
      swift_release(v173);
      v34 = v41;
      goto LABEL_9;
    }
    type metadata accessor for CRLCollaborationParticipant(0);
    v34 = v41;
    v107 = v106;
    v108 = static NSObject.== infix(_:_:)(v107, v34);

    if ((v108 & 1) == 0)
      goto LABEL_60;
    v172 = v34;
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v188, 0, 0);
    v109 = (id)static OS_os_log.crlFollow;
    v111 = static os_log_type_t.default.getter(v110);
    sub_100A06EBC((uint64_t)v109, &_mh_execute_header, v111, "Calling didEndFollowing because we received an end or refuse follow message from the following participant", 106, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1006F534C(0);
    v112 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                                 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects"));
    v113 = sub_1004B804C(&qword_1013EE2D8);
    v114 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v112, v113);

    v115 = (uint64_t)v177;
    if ((unint64_t)v114 >> 62)
    {
      if (v114 < 0)
        v167 = v114;
      else
        v167 = v114 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v114, 2);
      v116 = _CocoaArrayWrapper.endIndex.getter(v167);
      swift_bridgeObjectRelease(v114);
      if (v116)
        goto LABEL_68;
    }
    else
    {
      v116 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v114);
      if (v116)
      {
LABEL_68:
        v117 = *(int *)(type metadata accessor for CRLRefuseOrEndFollow(0) + 20);
        v182 = (char *)OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant;
        v171 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact;
        v118 = v114 & 0xC000000000000001;
        v119 = 4;
        v174 = CKCurrentUserDefaultName;
        v181 = (char *)v114;
        v176 = v117;
        v175 = v114 & 0xC000000000000001;
        v120 = 0;
        if ((v114 & 0xC000000000000001) == 0)
          goto LABEL_70;
LABEL_69:
        for (i = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v120, v114); ; swift_unknownObjectRetain(i))
        {
          v122 = v120 + 1;
          if (__OFADD__(v120, 1))
          {
            __break(1u);
LABEL_112:
            swift_once(&qword_1013DD7C8, sub_100A03AC0);
LABEL_59:
            swift_beginAccess(&static OS_os_log.crlFollow, v188, 0, 0);
            v95 = (void *)static OS_os_log.crlFollow;
            v96 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v96, v187);
            *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
            v34 = v95;
            v98 = UUID.uuidString.getter(v34);
            v100 = v99;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v98;
            *(_QWORD *)(inited + 40) = v100;
            v102 = static os_log_type_t.default.getter(v101);
            sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v102, "Unable to retrieve the CRLCollaborationParticipant for the given follower presence UUID (%{public}@) when refusing a follow", 123, 2, inited);
            swift_setDeallocating(inited);
            v103 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, 1, v103);
LABEL_60:
            swift_release(v173);
            goto LABEL_9;
          }
          v123 = *(_QWORD *)(v185 + v117);
          if (!v123)
            break;
          if (v123 != 1)
            goto LABEL_126;
          objc_msgSend(i, "showFollowRefusedAlert");
          swift_unknownObjectRelease(i);
LABEL_102:
          if (v122 == v116)
            goto LABEL_123;
          v120 = ++v119 - 4;
          if (v118)
            goto LABEL_69;
LABEL_70:
          i = *(void **)(v114 + 8 * v119);
        }
        v124 = v116;
        v125 = v172;
        sub_10063A69C();
        v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
        v128 = v127;
        v129 = objc_msgSend(*(id *)&v182[(_QWORD)v125], "userIdentity");
        v130 = objc_msgSend(v129, "userRecordID");

        if (v130)
        {
          v131 = objc_msgSend(v130, "recordName");

          v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
          v134 = v133;

          if (v126 == v132 && v128 == v134)
          {
            swift_bridgeObjectRelease_n(v128, 2);
            v115 = (uint64_t)v177;
            goto LABEL_88;
          }
          v136 = _stringCompareWithSmolCheck(_:_:expecting:)(v126, v128, v132, v134, 0);
          swift_bridgeObjectRelease(v128);
          v137 = swift_bridgeObjectRelease(v134).n128_u64[0];
          v115 = (uint64_t)v177;
          if ((v136 & 1) != 0)
            goto LABEL_88;
        }
        else
        {
          v137 = swift_bridgeObjectRelease(v128).n128_u64[0];
        }
        v138 = *(void **)((char *)v172 + v171);
        if (v138)
        {
          v139 = v138;
          v140 = sub_10063AD80();

          if (v140)
          {
            v141 = *(void **)((char *)v172 + v171);
            v142 = v183;
            if (v141)
            {
              v143 = v141;
              v144 = (uint64_t)v180;
              sub_10063AF70();

              v145 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56);
              v146 = (char *)v144;
              v147 = 0;
            }
            else
            {
              v145 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v183 + 56);
              v144 = (uint64_t)v180;
              v146 = v180;
              v147 = 1;
            }
            v151 = v184;
            v145(v146, v147, 1, v184);
            v152 = (uint64_t)v179;
LABEL_92:
            sub_1004C4938(v144, v152, &qword_1013F4270);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v152, 1, v151) == 1)
            {
              sub_1004CB800(v152, &qword_1013F4270);
            }
            else
            {
              v153 = v178;
              (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v178, v152, v151);
              v154 = v151;
              v155 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
              isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
              v157 = v142;
              v158 = objc_msgSend(v155, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

              v159 = static String._unconditionallyBridgeFromObjectiveC(_:)(v158);
              v161 = v160;

              if ((v161 & 0x2000000000000000) != 0)
                v162 = HIBYTE(v161) & 0xF;
              else
                v162 = v159 & 0xFFFFFFFFFFFFLL;
              (*(void (**)(char *, uint64_t))(v157 + 8))(v153, v154);
              if (v162)
              {
                v115 = (uint64_t)v177;
                v116 = v124;
                v114 = (uint64_t)v181;
                v117 = v176;
                v118 = v175;
LABEL_101:
                v164 = String._bridgeToObjectiveC()();
                objc_msgSend(i, "showFollowEndedAlertWithHostShortName:", v164, swift_bridgeObjectRelease(v161).n128_f64[0]);
                swift_unknownObjectRelease(i);

                goto LABEL_102;
              }
              swift_bridgeObjectRelease(v161);
              v115 = (uint64_t)v177;
            }
            v116 = v124;
            v117 = v176;
            v118 = v175;
            sub_10063B4E0();
            v161 = v163;
            v114 = (uint64_t)v181;
            goto LABEL_101;
          }
        }
LABEL_88:
        v148 = objc_msgSend(*(id *)&v182[(_QWORD)v172], "userIdentity", *(double *)&v137);
        v149 = objc_msgSend(v148, "nameComponents");

        v142 = v183;
        if (v149)
        {
          static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v149);

          v150 = 0;
        }
        else
        {
          v150 = 1;
        }
        v151 = v184;
        v144 = (uint64_t)v180;
        v152 = (uint64_t)v179;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v115, v150, 1, v184);
        sub_1004C4938(v115, v144, &qword_1013F4270);
        goto LABEL_92;
      }
    }
LABEL_123:
    swift_release(v173);
    v166 = v114;
    goto LABEL_118;
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v43 = v42;
  if ((static NSObject.== infix(_:_:)(v43, v41) & 1) == 0)
  {
    swift_release(v173);

    v34 = v41;
    goto LABEL_9;
  }
  v172 = v43;
  v44 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer;
  v45 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer);
  if (v45)
  {
    v46 = v45;
    objc_msgSend(v46, "invalidate");
    v47 = *(void **)(v2 + v44);
    *(_QWORD *)(v2 + v44) = 0;

  }
  v48 = *(void **)(v2 + v30);
  *(_QWORD *)(v2 + v30) = 0;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp) = 0;
  v49 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects"));
  v50 = sub_1004B804C(&qword_1013EE2D8);
  v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

  if ((unint64_t)v51 >> 62)
  {
    if (v51 < 0)
      v165 = v51;
    else
      v165 = v51 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v51, 2);
    v52 = _CocoaArrayWrapper.endIndex.getter(v165);
    swift_bridgeObjectRelease(v51);
    if (v52)
      goto LABEL_18;
    goto LABEL_117;
  }
  v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v51);
  if (!v52)
  {
LABEL_117:
    swift_release(v173);

    v166 = v51;
LABEL_118:
    swift_bridgeObjectRelease_n(v166, 2);
    v34 = v172;
    goto LABEL_9;
  }
LABEL_18:
  v53 = *(int *)(type metadata accessor for CRLRefuseOrEndFollow(0) + 20);
  v178 = (char *)OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant;
  v171 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact;
  v179 = (char *)(v51 & 0xC000000000000001);
  v54 = 4;
  v174 = CKCurrentUserDefaultName;
  v170 = v41;
  v177 = (char *)v51;
  v176 = v52;
  v175 = v53;
  while (1)
  {
    v58 = v54 - 4;
    v180 = (char *)v54;
    if (!v179)
      break;
    v59 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v54 - 4, v51);
    v60 = v58 + 1;
    if (__OFADD__(v58, 1))
      goto LABEL_109;
LABEL_28:
    v61 = *(_QWORD *)(v38 + v53);
    if (!v61)
    {
      sub_10063A69C();
      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
      v64 = v63;
      v65 = objc_msgSend(*(id *)&v178[(_QWORD)v41], "userIdentity");
      v66 = objc_msgSend(v65, "userRecordID");

      if (v66)
      {
        v67 = objc_msgSend(v66, "recordName");

        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v70 = v69;

        if (v62 == v68 && v64 == v70)
        {
          swift_bridgeObjectRelease_n(v64, 2);
          goto LABEL_45;
        }
        v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v64, v68, v70, 0);
        swift_bridgeObjectRelease(v64);
        v73 = swift_bridgeObjectRelease(v70).n128_u64[0];
        if ((v72 & 1) != 0)
        {
LABEL_45:
          v83 = objc_msgSend(*(id *)&v178[(_QWORD)v41], "userIdentity", *(double *)&v73);
          v84 = objc_msgSend(v83, "nameComponents");

          v78 = v183;
          if (v84)
          {
            v85 = (uint64_t)v182;
            static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v84);

            v86 = 0;
            v87 = v184;
          }
          else
          {
            v86 = 1;
            v87 = v184;
            v85 = (uint64_t)v182;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v85, v86, 1, v87);
          sub_1004C4938(v85, (uint64_t)v14, &qword_1013F4270);
          goto LABEL_49;
        }
      }
      else
      {
        v73 = swift_bridgeObjectRelease(v64).n128_u64[0];
      }
      v74 = *(void **)((char *)v41 + v171);
      if (!v74)
        goto LABEL_45;
      v75 = v74;
      v76 = sub_10063AD80();

      if (!v76)
        goto LABEL_45;
      v77 = *(void **)((char *)v41 + v171);
      v78 = v183;
      if (v77)
      {
        v79 = v77;
        sub_10063AF70();

        v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
        v81 = v14;
        v82 = 0;
      }
      else
      {
        v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v183 + 56);
        v81 = v14;
        v82 = 1;
      }
      v87 = v184;
      v80(v81, v82, 1, v184);
LABEL_49:
      sub_1004C4938((uint64_t)v14, (uint64_t)v17, &qword_1013F4270);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v17, 1, v87) == 1)
      {
        sub_1004CB800((uint64_t)v17, &qword_1013F4270);
      }
      else
      {
        v88 = v181;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v181, v17, v87);
        v89 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
        v90 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
        v91 = objc_msgSend(v89, "localizedStringFromPersonNameComponents:style:options:", v90, 1, 0);

        v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
        v56 = v93;

        if ((v56 & 0x2000000000000000) != 0)
          v94 = HIBYTE(v56) & 0xF;
        else
          v94 = v92 & 0xFFFFFFFFFFFFLL;
        (*(void (**)(char *, uint64_t))(v78 + 8))(v88, v87);
        if (v94)
        {
          v41 = v170;
          v51 = (uint64_t)v177;
          v52 = v176;
LABEL_21:
          v57 = String._bridgeToObjectiveC()();
          objc_msgSend(v59, "showFollowEndedAlertWithHostShortName:", v57, swift_bridgeObjectRelease(v56).n128_f64[0]);
          swift_unknownObjectRelease(v59);

          v38 = v185;
          v53 = v175;
          if (v60 == v52)
            goto LABEL_117;
          goto LABEL_22;
        }
        swift_bridgeObjectRelease(v56);
        v41 = v170;
      }
      v51 = (uint64_t)v177;
      v52 = v176;
      sub_10063B4E0();
      v56 = v55;
      goto LABEL_21;
    }
    if (v61 != 1)
    {
      v188[0] = *(_QWORD *)(v38 + v53);
      for (j = v188; ; j = &v186)
      {
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLRefuseOrEndFollowReason, j, &type metadata for CRLRefuseOrEndFollowReason, &type metadata for Int);
        __break(1u);
LABEL_126:
        v186 = v123;
      }
    }
    objc_msgSend(v59, "showFollowRefusedAlert");
    swift_unknownObjectRelease(v59);
    if (v60 == v52)
      goto LABEL_117;
LABEL_22:
    v54 = (uint64_t)(v180 + 1);
  }
  v59 = *(void **)(v51 + 8 * v54);
  swift_unknownObjectRetain(v59);
  v60 = v58 + 1;
  if (!__OFADD__(v58, 1))
    goto LABEL_28;
LABEL_109:
  __break(1u);
LABEL_110:
  swift_once(&qword_1013DD7C8, sub_100A03AC0);
LABEL_8:
  swift_beginAccess(&static OS_os_log.crlFollow, v188, 0, 0);
  v34 = (id)static OS_os_log.crlFollow;
  v36 = static os_log_type_t.default.getter(v35);
  sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v36, "Unable to retrieve the CollaborationParticipants when processing an end follow message", 86, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_9:

}

uint64_t sub_1006FF86C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  uint64_t v26;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];

  v34 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v8 = __chkstk_darwin(v7);
  v32 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - v10;
  v12 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLFollowViewportState(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v14, &qword_1013EE2E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v19 = &qword_1013EE2E0;
    v20 = (uint64_t)v14;
LABEL_9:
    sub_1004CB800(v20, v19);
    v25 = 0;
    return v25 & 1;
  }
  sub_1004B84E0((uint64_t)v14, (uint64_t)v18, type metadata accessor for CRLFollowViewportState);
  v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v11, &v18[*(int *)(v15 + 20)], v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v21);
  v22 = v33 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_expectingViewportFromUUID;
  swift_beginAccess(v33 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_expectingViewportFromUUID, v35, 0, 0);
  v23 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_1004CB7BC((uint64_t)v11, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC(v22, v23, (uint64_t *)&unk_1013E1A50);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v24((uint64_t)v6, 1, v21) != 1)
  {
    v26 = v32;
    sub_1004CB7BC((uint64_t)v6, v32, (uint64_t *)&unk_1013E1A50);
    if (v24(v23, 1, v21) != 1)
    {
      v28 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v31, v23, v21);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v28);
      v29 = *(void (**)(char *, uint64_t))(v2 + 8);
      v29(v28, v21);
      sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLFollowViewportState);
      v29((char *)v26, v21);
      sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
      return v25 & 1;
    }
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLFollowViewportState);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v26, v21);
    goto LABEL_8;
  }
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLFollowViewportState);
  if (v24(v23, 1, v21) != 1)
  {
LABEL_8:
    v19 = (uint64_t *)&unk_1013F62D0;
    v20 = (uint64_t)v6;
    goto LABEL_9;
  }
  sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  v25 = 1;
  return v25 & 1;
}

void sub_1006FFC54(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[80];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[72];
  _BYTE v43[32];

  v2 = v1;
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  v4 = &static OS_os_log.crlFollow;
  swift_beginAccess(&static OS_os_log.crlFollow, v43, 0, 0);
  v5 = (void *)static OS_os_log.crlFollow;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  v15 = inited + 32;
  *(_QWORD *)(inited + 40) = v13;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC(v8, &_mh_execute_header, v17, "Adding a pending active participant follow start: %@", 52, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v15, 1, v18);

  v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowEndParticipants);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowEndParticipants, v41, 0, 0);
  v20 = *v19;
  swift_bridgeObjectRetain(*v19);
  LOBYTE(v8) = sub_100C9DB50((uint64_t)v9, v20);
  swift_bridgeObjectRelease(v20);
  if ((v8 & 1) == 0)
  {
    v36 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants, v40, 33, 0);
    v25 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v4 = *(uint64_t **)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v4 < v24 >> 1)
    {
LABEL_8:
      v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v25);
      specialized Array._endMutation()(v37);
      swift_endAccess(v40);
      goto LABEL_9;
    }
LABEL_15:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, (char *)v4 + 1, 1);
    goto LABEL_8;
  }
  swift_beginAccess(v19, v40, 33, 0);
  v21 = v9;
  v22 = sub_100644404(v19, (uint64_t)v21);

  v23 = *v19;
  if ((unint64_t)*v19 >> 62)
  {
    if (v23 < 0)
      v38 = *v19;
    else
      v38 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v19);
    v25 = (id)_CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v23);
    if ((uint64_t)v25 >= v22)
      goto LABEL_6;
    goto LABEL_14;
  }
  v24 = v23 & 0xFFFFFFFFFFFFF8;
  v25 = *(id *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)v25 < v22)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_6:
  sub_100CFE8B4(v22, (uint64_t)v25);
  swift_endAccess(v40);
  v26 = (void *)static OS_os_log.crlFollow;
  v27 = swift_initStackObject(v6, v39);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5E40;
  v28 = v21;
  v29 = v26;
  v30 = objc_msgSend(v28, "description");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  *(_QWORD *)(v27 + 56) = &type metadata for String;
  *(_QWORD *)(v27 + 64) = v14;
  *(_QWORD *)(v27 + 32) = v31;
  *(_QWORD *)(v27 + 40) = v33;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v35, "This participant was pending an end follow so we just cancelled the placard: %@", 79, 2, v27);
  swift_setDeallocating(v27);
  swift_arrayDestroy(v27 + 32, 1, v18);

LABEL_9:
  sub_100700B9C();
}

void sub_1006FFFE4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[80];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[72];
  _BYTE v43[32];

  v2 = v1;
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  v4 = &static OS_os_log.crlFollow;
  swift_beginAccess(&static OS_os_log.crlFollow, v43, 0, 0);
  v5 = (void *)static OS_os_log.crlFollow;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  v15 = inited + 32;
  *(_QWORD *)(inited + 40) = v13;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC(v8, &_mh_execute_header, v17, "Adding a pending active participant follow end: %@", 50, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v15, 1, v18);

  v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants, v41, 0, 0);
  v20 = *v19;
  swift_bridgeObjectRetain(*v19);
  LOBYTE(v8) = sub_100C9DB50((uint64_t)v9, v20);
  swift_bridgeObjectRelease(v20);
  if ((v8 & 1) == 0)
  {
    v36 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowEndParticipants);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowEndParticipants, v40, 33, 0);
    v25 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v4 = *(uint64_t **)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v4 < v24 >> 1)
    {
LABEL_8:
      v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v25);
      specialized Array._endMutation()(v37);
      swift_endAccess(v40);
      goto LABEL_9;
    }
LABEL_15:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, (char *)v4 + 1, 1);
    goto LABEL_8;
  }
  swift_beginAccess(v19, v40, 33, 0);
  v21 = v9;
  v22 = sub_100644404(v19, (uint64_t)v21);

  v23 = *v19;
  if ((unint64_t)*v19 >> 62)
  {
    if (v23 < 0)
      v38 = *v19;
    else
      v38 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v19);
    v25 = (id)_CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v23);
    if ((uint64_t)v25 >= v22)
      goto LABEL_6;
    goto LABEL_14;
  }
  v24 = v23 & 0xFFFFFFFFFFFFF8;
  v25 = *(id *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)v25 < v22)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_6:
  sub_100CFE8B4(v22, (uint64_t)v25);
  swift_endAccess(v40);
  v26 = (void *)static OS_os_log.crlFollow;
  v27 = swift_initStackObject(v6, v39);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5E40;
  v28 = v21;
  v29 = v26;
  v30 = objc_msgSend(v28, "description");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  *(_QWORD *)(v27 + 56) = &type metadata for String;
  *(_QWORD *)(v27 + 64) = v14;
  *(_QWORD *)(v27 + 32) = v31;
  *(_QWORD *)(v27 + 40) = v33;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v35, "This participant was pending a start follow so we just cancelled the placard: %@", 80, 2, v27);
  swift_setDeallocating(v27);
  swift_arrayDestroy(v27 + 32, 1, v18);

LABEL_9:
  sub_100700B9C();
}

void sub_100700374()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __objc2_meth_list **p_class_meths;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t j;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t k;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t m;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE v66[24];
  _BYTE v67[112];
  _BYTE v68[24];
  _BYTE v69[32];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants, v69, 1, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v29 = *v1;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v2);
    p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___PKCanvasViewDelegate + 32);
    if (v30)
      goto LABEL_5;
  }
  else
  {
    p_class_meths = &OBJC_PROTOCOL___PKCanvasViewDelegate.class_meths;
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
  }
  v4 = (uint64_t *)((char *)p_class_meths[74] + v0);
  swift_beginAccess(v4, v65, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
LABEL_5:
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v68, 0, 0);
    v6 = (void *)static OS_os_log.crlFollow;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v67);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v9 = *v1;
    v10 = sub_1004B804C((uint64_t *)&unk_1013E8BE0);
    *(_QWORD *)(inited + 56) = v10;
    v11 = sub_1004CBA30((unint64_t *)&qword_1013E8E90, (uint64_t *)&unk_1013E8BE0, (uint64_t)&protocol conformance descriptor for [A]);
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 32) = v9;
    v12 = (uint64_t *)((char *)p_class_meths[74] + v0);
    swift_beginAccess(v12, v66, 1, 0);
    v13 = *v12;
    *(_QWORD *)(inited + 96) = v10;
    *(_QWORD *)(inited + 104) = v11;
    *(_QWORD *)(inited + 72) = v13;
    v14 = v6;
    swift_bridgeObjectRetain(v9);
    v15 = swift_bridgeObjectRetain(v13);
    v16 = static os_log_type_t.default.getter(v15);
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "Processing pending start follow: %@ and end follows: %@", 55, 2, inited);
    swift_setDeallocating(inited);
    v17 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v17);

    v19 = *v12;
    if ((unint64_t)*v12 >> 62)
    {
      if (v19 < 0)
        v31 = *v12;
      else
        v31 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v12);
      v20 = _CocoaArrayWrapper.endIndex.getter(v31);
      v18 = swift_bridgeObjectRelease(v19).n128_u64[0];
      if (v20 == 1)
      {
LABEL_9:
        v21 = *v12;
        if ((unint64_t)*v12 >> 62)
        {
          if (v21 < 0)
            v38 = *v12;
          else
            v38 = v21 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v12);
          v22 = (void *)_CocoaArrayWrapper.endIndex.getter(v38);
          if (v22)
          {
LABEL_11:
            if ((v21 & 0xC000000000000001) != 0)
            {
              v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
            }
            else
            {
              if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_52;
              }
              v23 = *(id *)(v21 + 32);
            }
            v22 = v23;
            v24 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects", swift_bridgeObjectRelease(v21).n128_f64[0]);
            v25 = sub_1004B804C(&qword_1013EE2D8);
            v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

            if (!((unint64_t)v21 >> 62))
            {
              v26 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v21);
              if (v26)
              {
LABEL_16:
                if (v26 < 1)
                {
                  __break(1u);
LABEL_110:
                  __break(1u);
                  goto LABEL_111;
                }
                for (i = 0; i != v26; ++i)
                {
                  if ((v21 & 0xC000000000000001) != 0)
                  {
                    v28 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
                  }
                  else
                  {
                    v28 = *(void **)(v21 + 8 * i + 32);
                    swift_unknownObjectRetain(v28);
                  }
                  objc_msgSend(v28, "remoteParticipantDidEndFollowingLocalParticipantWithRemoteParticipant:", v22);
                  swift_unknownObjectRelease(v28);
                }
              }
LABEL_56:
              swift_bridgeObjectRelease_n(v21, 2);

              goto LABEL_62;
            }
LABEL_52:
            if (v21 < 0)
              v41 = v21;
            else
              v41 = v21 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v21);
            v26 = _CocoaArrayWrapper.endIndex.getter(v41);
            if (v26)
              goto LABEL_16;
            goto LABEL_56;
          }
        }
        else
        {
          v22 = *(void **)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*v12);
          if (v22)
            goto LABEL_11;
        }
        v18 = swift_bridgeObjectRelease(v21).n128_u64[0];
        goto LABEL_62;
      }
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v20 == 1)
        goto LABEL_9;
    }
    if (v20 < 2)
      goto LABEL_62;
    v32 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects"));
    v33 = sub_1004B804C(&qword_1013EE2D8);
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v42 = v34;
      else
        v42 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v34);
      v35 = _CocoaArrayWrapper.endIndex.getter(v42);
      if (v35)
        goto LABEL_34;
    }
    else
    {
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v34);
      if (v35)
      {
LABEL_34:
        if (v35 < 1)
        {
LABEL_111:
          __break(1u);
          goto LABEL_112;
        }
        for (j = 0; j != v35; ++j)
        {
          if ((v34 & 0xC000000000000001) != 0)
          {
            v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v34);
          }
          else
          {
            v37 = *(void **)(v34 + 8 * j + 32);
            swift_unknownObjectRetain(v37);
          }
          objc_msgSend(v37, "multipleRemoteParticipantsDidEndFollowingLocalParticipantsWithNumberOfParticipants:", v20);
          swift_unknownObjectRelease(v37);
        }
      }
    }
    swift_bridgeObjectRelease_n(v34, 2);
LABEL_62:
    v43 = *v1;
    if ((unint64_t)*v1 >> 62)
    {
      if (v43 < 0)
        v53 = *v1;
      else
        v53 = v43 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v1);
      v44 = _CocoaArrayWrapper.endIndex.getter(v53);
      v18 = swift_bridgeObjectRelease(v43).n128_u64[0];
      if (v44 == 1)
        goto LABEL_64;
    }
    else
    {
      v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v44 == 1)
      {
LABEL_64:
        v45 = *v1;
        if ((unint64_t)*v1 >> 62)
        {
          if (v45 < 0)
            v60 = *v1;
          else
            v60 = v45 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v1);
          v46 = (void *)_CocoaArrayWrapper.endIndex.getter(v60);
          if (v46)
          {
LABEL_66:
            if ((v45 & 0xC000000000000001) != 0)
            {
              v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
            }
            else
            {
              if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_97;
              }
              v47 = *(id *)(v45 + 32);
            }
            v46 = v47;
            v48 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects", swift_bridgeObjectRelease(v45).n128_f64[0]);
            v49 = sub_1004B804C(&qword_1013EE2D8);
            v0 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

            if (!((unint64_t)v0 >> 62))
            {
              v50 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v0);
              if (v50)
                goto LABEL_71;
              goto LABEL_101;
            }
LABEL_97:
            if (v0 < 0)
              v61 = v0;
            else
              v61 = v0 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v0);
            v50 = _CocoaArrayWrapper.endIndex.getter(v61);
            if (v50)
            {
LABEL_71:
              if (v50 >= 1)
              {
                for (k = 0; k != v50; ++k)
                {
                  if ((v0 & 0xC000000000000001) != 0)
                  {
                    v52 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v0);
                  }
                  else
                  {
                    v52 = *(void **)(v0 + 8 * k + 32);
                    swift_unknownObjectRetain(v52);
                  }
                  objc_msgSend(v52, "remoteParticipantDidStartFollowingLocalParticipantWithRemoteParticipant:", v46);
                  swift_unknownObjectRelease(v52);
                }
                goto LABEL_101;
              }
              goto LABEL_110;
            }
LABEL_101:
            swift_bridgeObjectRelease_n(v0, 2);

            goto LABEL_107;
          }
        }
        else
        {
          v46 = *(void **)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*v1);
          if (v46)
            goto LABEL_66;
        }
        swift_bridgeObjectRelease(v45);
LABEL_107:
        v63 = *v1;
        *v1 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v63);
        v64 = *v12;
        *v12 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v64);
        return;
      }
    }
    if (v44 < 2)
      goto LABEL_107;
    v54 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates), "allObjects", *(double *)&v18);
    v55 = sub_1004B804C(&qword_1013EE2D8);
    v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

    if ((unint64_t)v56 >> 62)
    {
      if (v56 < 0)
        v62 = v56;
      else
        v62 = v56 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v56);
      v57 = _CocoaArrayWrapper.endIndex.getter(v62);
      if (!v57)
        goto LABEL_106;
    }
    else
    {
      v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v56);
      if (!v57)
        goto LABEL_106;
    }
    if (v57 < 1)
    {
LABEL_112:
      __break(1u);
      return;
    }
    for (m = 0; m != v57; ++m)
    {
      if ((v56 & 0xC000000000000001) != 0)
      {
        v59 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(m, v56);
      }
      else
      {
        v59 = *(void **)(v56 + 8 * m + 32);
        swift_unknownObjectRetain(v59);
      }
      objc_msgSend(v59, "multipleRemoteParticipantsDidStartFollowingLocalParticipantWithNumberOfParticipants:", v44);
      swift_unknownObjectRelease(v59);
    }
LABEL_106:
    swift_bridgeObjectRelease_n(v56, 2);
    goto LABEL_107;
  }
  if (v5 < 0)
    v39 = v5;
  else
    v39 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v40 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v5);
  if (v40)
    goto LABEL_5;
}

void sub_100700B9C()
{
  char *v0;
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v1 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_followingParticipantsStartEndFollowTimer;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_followingParticipantsStartEndFollowTimer])
  {
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, v14, 0, 0);
    v2 = (id)static OS_os_log.crlFollow;
    v4 = static os_log_type_t.default.getter(v3);
    sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Starting a timer to process start/end follow messages.", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

    v5 = (void *)objc_opt_self(NSTimer);
    v6 = swift_allocObject(&unk_101279510, 24, 7);
    *(_QWORD *)(v6 + 16) = v0;
    aBlock[4] = sub_10070197C;
    v13 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_101279528;
    v7 = _Block_copy(aBlock);
    v8 = v13;
    v9 = v0;
    swift_release(v8);
    v10 = objc_msgSend(v5, "scheduledTimerWithTimeInterval:repeats:block:", 0, v7, 5.0);
    _Block_release(v7);
    v11 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v10;

  }
}

double sub_100700DF0()
{
  double v0;
  double result;

  objc_msgSend((id)objc_opt_self(CRLInteractiveCanvasController), "zoomAnimationDefaultDuration");
  result = v0 + 0.1;
  qword_1013EE1D0 = *(_QWORD *)&result;
  return result;
}

id sub_100700E5C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator____lazy_storage___accessibilityExperienceCoordinator;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator____lazy_storage___accessibilityExperienceCoordinator];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator____lazy_storage___accessibilityExperienceCoordinator];
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0));
    v6 = sub_100998548(v0);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v4[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t sub_100700FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  double v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  void *v26;
  char v27;
  uint64_t KeyPath;
  uint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  id v34[5];
  _BYTE v35[72];
  _BYTE v36[24];
  _BYTE v37[32];

  v1 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v34[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34[-1] - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)objc_msgSend((id)objc_opt_self(CRLAccessibility), "isVoiceOverEnabled");
  if ((_DWORD)result)
  {
    result = sub_1006F2CE0();
    if ((result & 1) != 0)
    {
      v12 = v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp;
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp, v37, 0, 0);
      sub_1004CB7BC(v12, (uint64_t)v6, &qword_1013E04F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        return sub_1004CB800((uint64_t)v6, &qword_1013E04F0);
      }
      else
      {
        v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        v14 = Date.timeIntervalSinceNow.getter(v13);
        v15 = sub_1003C65B0(fabs(v14), 0.01);
        if (qword_1013DCF90 != -1)
          swift_once(&qword_1013DCF90, sub_100700DF0);
        if (sub_1003C65B0(*(double *)&qword_1013EE1D0, 0.01) < v15)
        {
          if (qword_1013DD7C8 != -1)
            swift_once(&qword_1013DD7C8, sub_100A03AC0);
          swift_beginAccess(&static OS_os_log.crlFollow, v36, 0, 0);
          v16 = (void *)static OS_os_log.crlFollow;
          v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v17, v35);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v19 = v16;
          v20 = Date.timeIntervalSinceNow.getter(v19);
          *(_QWORD *)(inited + 56) = &type metadata for Double;
          *(_QWORD *)(inited + 64) = &protocol witness table for Double;
          v21.n128_f64[0] = fabs(v20);
          *(_QWORD *)(inited + 32) = v21.n128_u64[0];
          v22 = static os_log_type_t.default.getter(v21);
          sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v22, "Ending follow due to exceeding disconnect cutoff: %f.", 53, 2, inited);
          swift_setDeallocating(inited);
          v23 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v23);

          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v3, 1, 1, v7);
          swift_beginAccess(v12, v34, 33, 0);
          sub_100582338((uint64_t)v3, v12, &qword_1013E04F0);
          swift_endAccess(v34);
          v24 = (char *)sub_100700E5C();
          Strong = swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator]);
          if (Strong)
          {
            v26 = (void *)Strong;
            v34[3] = &type metadata for CRLFeatureFlags;
            v34[4] = (id)sub_1004DB6DC();
            LOBYTE(v34[0]) = 11;
            v27 = isFeatureEnabled(_:)(v34);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
            if ((v27 & 1) != 0)
            {
              KeyPath = swift_getKeyPath(&unk_100F06958);
              v29 = swift_getKeyPath(&unk_100F06980);
              static Published.subscript.getter(v34, v26, KeyPath, v29);
              swift_release(KeyPath);
              swift_release(v29);
              if (v34[0])
              {

                v30 = (id)static OS_os_log.crlFollow;
                v32 = static os_log_type_t.default.getter(v31);
                sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v32, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

                sub_1006F534C(1);
              }
            }

          }
          else
          {
            v26 = v24;
          }

        }
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
  return result;
}

id sub_100701404()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  objc_class *v20;
  uint64_t v22;
  objc_super v23;
  uint64_t v24;

  v1 = sub_1004B804C(&qword_1013EE318);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates;
  v7 = (void *)objc_opt_self(NSHashTable);
  v8 = v0;
  *(_QWORD *)&v0[v6] = objc_msgSend(v7, "weakObjectsHashTable");
  v9 = OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers;
  *(_QWORD *)&v8[v9] = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  v10 = &v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToSend];
  v11 = type metadata accessor for CRLFollowViewportState(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_viewportToApply], 1, 1, v11);
  v13 = &v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator__followingParticipant];
  v24 = 0;
  v14 = sub_1004B804C(&qword_1013EE2D0);
  Published.init(initialValue:)(&v24, v14);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v13, v4, v1);
  v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowingParticipant] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowTimer] = 0;
  v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_unconfirmedFollowIsRefollow] = 0;
  v15 = &v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_activeParticipantObserver];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0;
  v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_shouldSyncViewportState] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_syncingViewportStateCounter] = 0;
  v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isUpdatingLocalICCState] = 0;
  v16 = &v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_expectingViewportFromUUID];
  v17 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowStartParticipants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_pendingFollowEndParticipants] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_followingParticipantsStartEndFollowTimer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateTimestamp] = 0;
  v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isProcessingViewportUpdates] = 0;
  v12(&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportUpdateInBatch], 1, 1, v11);
  v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_latestViewportIsInitialViewport] = 0;
  v18 = &v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp];
  v19 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator____lazy_storage___accessibilityExperienceCoordinator] = 0;

  v20 = (objc_class *)type metadata accessor for CRLFollowCoordinator(0);
  v23.receiver = v8;
  v23.super_class = v20;
  return objc_msgSendSuper2(&v23, "init");
}

void sub_10070170C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[24];

  v11[0] = &unk_100F068B8;
  v11[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v11[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1007018C8(319, (unint64_t *)&qword_1013EE2C0, type metadata accessor for CRLFollowViewportState);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v11[3] = v4;
    v11[4] = v4;
    sub_100701870(319);
    if (v6 <= 0x3F)
    {
      v11[5] = *(_QWORD *)(v5 - 8) + 64;
      v11[6] = &unk_100F068D0;
      v11[7] = &unk_100F068E8;
      v11[8] = &unk_100F068E8;
      v11[9] = &unk_100F068D0;
      v11[10] = &unk_100F06900;
      v11[11] = &unk_100F068D0;
      v11[12] = (char *)&value witness table for Builtin.Int64 + 64;
      v11[13] = &unk_100F068D0;
      sub_1007018C8(319, (unint64_t *)&qword_1013E6950, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
      if (v8 <= 0x3F)
      {
        v11[14] = *(_QWORD *)(v7 - 8) + 64;
        v11[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v11[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v11[17] = &unk_100F068E8;
        v11[18] = (char *)&value witness table for Builtin.Int64 + 64;
        v11[19] = &unk_100F068D0;
        v11[20] = v4;
        v11[21] = &unk_100F068D0;
        sub_1007018C8(319, (unint64_t *)&qword_1013F2430, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
        if (v10 <= 0x3F)
        {
          v11[22] = *(_QWORD *)(v9 - 8) + 64;
          v11[23] = &unk_100F068E8;
          swift_updateClassMetadata2(a1, 256, 24, v11, a1 + 80);
        }
      }
    }
  }
}

void sub_100701870(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013EE2C8)
  {
    v2 = sub_1004CB6A4(&qword_1013EE2D0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013EE2C8);
  }
}

void sub_1007018C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_100701914@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLFollowCoordinator(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100701958()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10070197C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  sub_100700374();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_followingParticipantsStartEndFollowTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_followingParticipantsStartEndFollowTimer) = 0;

}

uint64_t sub_1007019AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1007019BC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_1007019C4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t a6, char a7, uint64_t a8)
{
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;
  __int128 v24[2];
  _QWORD v25[5];

  v25[3] = &type metadata for CRLBoardAuxiliaryRealTimeChange;
  v25[4] = &off_10126E930;
  v16 = swift_allocObject(&unk_101279560, 41, 7);
  v25[0] = v16;
  *(_BYTE *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_QWORD *)(v16 + 32) = a6;
  *(_BYTE *)(v16 + 40) = a7;
  v17 = *(NSObject **)(a8 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  sub_1004E90B0((uint64_t)v25, (uint64_t)v24);
  v18 = swift_allocObject(&unk_101279588, 88, 7);
  *(_QWORD *)(v18 + 16) = a8;
  *(_BYTE *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a3;
  sub_1004DB728(v24, v18 + 48);
  v19 = swift_allocObject(&unk_1012795B0, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_100701C1C;
  *(_QWORD *)(v19 + 24) = v18;
  v22[4] = sub_1005B71BC;
  v23 = v19;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = *(_QWORD *)"";
  v22[2] = sub_100618D24;
  v22[3] = &unk_1012795C8;
  v20 = _Block_copy(v22);
  v21 = v23;
  sub_1004BE310(a5, a6);
  swift_bridgeObjectRetain(a3);
  swift_retain(v19);
  swift_retain(a8);
  swift_release(v21);
  dispatch_sync(v17, v20);
  _Block_release(v20);
  LOBYTE(a8) = swift_isEscapingClosureAtFileLocation(v19, "", 89, 597, 26, 1);
  swift_release(v18);
  swift_release(v19);
  if ((a8 & 1) != 0)
    __break(1u);
  else
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v25);
}

uint64_t sub_100701BA8(_QWORD *a1)
{
  return sub_100639EE0(a1) & 1;
}

uint64_t sub_100701BC4()
{
  uint64_t v0;

  sub_1004BBBC8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100701BE8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 6);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100701C1C()
{
  uint64_t v0;

  return sub_1005F6980(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (_QWORD *)(v0 + 48));
}

uint64_t sub_100701C30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100701C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CRLFollowViewportState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 2;

  v7 = v0 + *(int *)(v1 + 20) + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject(v0, v6, v5);
}

void sub_100701CD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CRLFollowViewportState(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1006FADFC(*(_BYTE **)(v0 + 16), v0 + v2, *(unsigned __int8 *)(v0 + *(_QWORD *)(v1 + 64) + v2), *(_BYTE *)(v0 + *(_QWORD *)(v1 + 64) + v2 + 1));
}

void sub_100701D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_syncingViewportStateCounter);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_syncingViewportStateCounter) = v4;
}

uint64_t sub_100701D38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100701D64()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "showCollaboratorHUDForCollaborator:withSelectionPath:allowScroll:", *(_QWORD *)(v0 + 24), 0, 0);
}

uint64_t sub_100701D7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100701DA0(uint64_t *a1)
{
  uint64_t v1;

  sub_1006F925C(a1, v1);
}

uint64_t sub_100701DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = static NSObject.== infix(_:_:)(v6, a2);

      if ((v9 & 1) == 0)
      {
        ++v5;
        if (v8 != v4)
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v9 = 0;
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v9 & 1;
}

uint64_t sub_100701EBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100701EE8(uint64_t a1)
{
  uint64_t v1;

  sub_1006F7010(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100701EF0()
{
  uint64_t v0;
  char v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  id v7[5];

  v7[3] = &type metadata for CRLFeatureFlags;
  v7[4] = (id)sub_1004DB6DC();
  LOBYTE(v7[0]) = 11;
  v1 = isFeatureEnabled(_:)(v7);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
  if ((v1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F06958);
    v3 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(v7, v0, KeyPath, v3);
    swift_release(KeyPath);
    swift_release(v3);
    if (v7[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v7, 0, 0);
      v4 = (id)static OS_os_log.crlFollow;
      v6 = static os_log_type_t.default.getter(v5);
      sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "Calling didEndFollowing because of a selection path change", 58, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }
}

void sub_100702028()
{
  uint64_t v0;
  char v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4[5];

  v4[3] = &type metadata for CRLFeatureFlags;
  v4[4] = (id)sub_1004DB6DC();
  LOBYTE(v4[0]) = 11;
  v1 = isFeatureEnabled(_:)(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
  if ((v1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F06958);
    v3 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(v4, v0, KeyPath, v3);
    swift_release(KeyPath);
    swift_release(v3);
    if (v4[0])
    {

      *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_shouldSyncViewportState) = 1;
      sub_1006FA788(0);
    }
  }
}

void sub_1007020EC()
{
  uint64_t v0;
  char v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  id v7[5];

  v7[3] = &type metadata for CRLFeatureFlags;
  v7[4] = (id)sub_1004DB6DC();
  LOBYTE(v7[0]) = 11;
  v1 = isFeatureEnabled(_:)(v7);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
  if ((v1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F06958);
    v3 = swift_getKeyPath(&unk_100F06980);
    static Published.subscript.getter(v7, v0, KeyPath, v3);
    swift_release(KeyPath);
    swift_release(v3);
    if (v7[0])
    {

      if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isUpdatingLocalICCState) & 1) == 0)
      {
        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v7, 0, 0);
        v4 = (id)static OS_os_log.crlFollow;
        v6 = static os_log_type_t.default.getter(v5);
        sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "Calling didEndFollowing because of a zoom/scroll notification", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(1);
      }
    }
  }
}

ValueMetadata *type metadata accessor for CRLFollowFailedReason()
{
  return &type metadata for CRLFollowFailedReason;
}

unint64_t sub_100702248()
{
  unint64_t result;

  result = qword_1013EE320;
  if (!qword_1013EE320)
  {
    result = swift_getWitnessTable(&unk_100F06B30, &type metadata for CRLFollowFailedReason);
    atomic_store(result, (unint64_t *)&qword_1013EE320);
  }
  return result;
}

unint64_t sub_10070228C()
{
  unint64_t result;

  result = qword_1013EE328;
  if (!qword_1013EE328)
  {
    result = swift_getWitnessTable(&unk_100F06AB8, &type metadata for CRLFollowFailedReason);
    atomic_store(result, (unint64_t *)&qword_1013EE328);
  }
  return result;
}

uint64_t sub_1007022D0(_QWORD *a1)
{
  return sub_100701BA8(a1) & 1;
}

uint64_t sub_100702318(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[15] = a1;
  v2[16] = v1;
  v3 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  v2[17] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v4);
  v2[19] = swift_task_alloc(v4);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v5);
  v2[21] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v2[22] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007023EC, v7, v8);
}

uint64_t sub_1007023EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 128);
  v32 = *(_QWORD *)(v0 + 136);
  v33 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 176));
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(v1, v5, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  sub_10057EE1C(v1, v3);
  v9 = v4 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL;
  swift_beginAccess(v4 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL, v0 + 72, 33, 0);
  sub_10067E7F4(v3, v9);
  swift_endAccess(v0 + 72);
  v10 = v2 + *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
  v8(v2, v5, v6);
  v11 = v5 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 24);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_OWORD *)(v11 + 16);
  v14 = *(_OWORD *)(v11 + 32);
  v15 = *(_OWORD *)(v11 + 48);
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_OWORD *)(v10 + 16) = v13;
  *(_OWORD *)(v10 + 32) = v14;
  *(_OWORD *)(v10 + 48) = v15;
  *(_QWORD *)(v10 + 64) = v12;
  swift_storeEnumTagMultiPayload(v2, v32, 0);
  sub_100703F20(v2, v33);
  v16 = v4 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_backendState;
  swift_beginAccess(v4 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_backendState, v0 + 96, 33, 0);
  sub_100703F64(v33, v16);
  swift_endAccess(v0 + 96);
  v17 = v4 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate);
  if (Strong)
  {
    v19 = Strong;
    v20 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v17 + 8);
    ObjectType = swift_getObjectType(Strong);
    v23 = v20 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_uuid;
    *(double *)&v24 = BoundingBox.init()();
    v34 = v25;
    v35 = v24;
    v26 = sub_1008D6E10((uint64_t)_swiftEmptyArrayStorage);
    v27 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
    *(_OWORD *)(v0 + 16) = v35;
    *(_OWORD *)(v0 + 32) = v34;
    *(_QWORD *)(v0 + 48) = v26;
    *(_QWORD *)(v0 + 56) = 1;
    *(_QWORD *)(v0 + 64) = v27;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v23, v0 + 16, ObjectType, v21);
    swift_unknownObjectRelease(v19);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v27);
  }
  v28 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 144);
  v29 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100702658(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(QLThumbnailGenerator), "sharedGenerator");
  objc_msgSend(v2, "cancelRequest:", a1);

}

uint64_t sub_1007026B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = v4;
  v3[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[7] = v5;
  v3[8] = v6;
  return swift_task_switch(sub_100702724, v5, v6);
}

uint64_t sub_100702724(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v1[4];
  v3 = static MainActor.shared.getter(a1);
  v1[9] = v3;
  v4 = swift_task_alloc(32);
  v1[10] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[11] = v5;
  v6 = sub_1004B804C((uint64_t *)&unk_101409880);
  *v5 = v1;
  v5[1] = sub_1007027E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 2, v3, &protocol witness table for MainActor, 0xD000000000000011, 0x8000000100FC16C0, sub_100703FAC, v4, v6);
}

uint64_t sub_1007027E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = *(_QWORD *)(*v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10070284C, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10070284C()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = *(void ***)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = *v1;
  *v1 = *(void **)(v0 + 16);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100702894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v4 = sub_1004B804C(&qword_1013EE580);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = objc_msgSend((id)objc_opt_self(QLThumbnailGenerator), "sharedGenerator");
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_101279868, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100703EB0;
  v13 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100702A48;
  aBlock[3] = &unk_101279880;
  v11 = _Block_copy(aBlock);
  objc_msgSend(v7, "generateRepresentationsForRequest:updateHandler:", a2, v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);

}

uint64_t sub_1007029F0(id a1)
{
  uint64_t v1;
  id v3;

  if (a1)
    a1 = objc_msgSend(a1, "UIImage");
  v3 = a1;
  v1 = sub_1004B804C(&qword_1013EE580);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

void sub_100702A48(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(void *, uint64_t, void *);
  id v9;
  id v10;

  v8 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v10 = a2;
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

uint64_t sub_100702AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004CB800(v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL, &qword_1013E04D0);
  sub_1004CBB0C(v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate);
  sub_100702FC8(v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_backendState);
  v1 = v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100702B4C()
{
  return _s17QLSnapshotBackendCMa(0);
}

uint64_t _s17QLSnapshotBackendCMa(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EE358, (uint64_t)&_s17QLSnapshotBackendCMn);
}

void sub_100702B68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v8[0] = &unk_100F06B88;
  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v8[2] = &unk_100F06BA0;
    v4 = _s17QLSnapshotBackendC12BackendStateOMa(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for UUID(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 5, v8, a1 + 80);
      }
    }
  }
}

uint64_t _s17QLSnapshotBackendC12BackendStateOMa(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EE508, (uint64_t)&_s17QLSnapshotBackendC12BackendStateOMn);
}

uint64_t *sub_100702C30(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v15);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(_QWORD *)a2;
      v17 = *((_QWORD *)a2 + 1);
      v18 = a2[16];
      sub_100689D34(v16, v17, v18);
      *a1 = v16;
      a1[1] = v17;
      *((_BYTE *)a1 + 16) = v18;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
      v11 = (char *)a1 + v10;
      v12 = &a2[v10];
      v13 = *((_OWORD *)v12 + 3);
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 3) = v13;
      *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
      v14 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v14;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_100702D54(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 1)
  {
    sub_100689EEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  }
  else if (!EnumCaseMultiPayload)
  {
    v4 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
}

uint64_t *sub_100702DB8(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = *(_QWORD *)a2;
    v14 = *((_QWORD *)a2 + 1);
    v15 = a2[16];
    sub_100689D34(v13, v14, v15);
    *a1 = v13;
    a1[1] = v14;
    *((_BYTE *)a1 + 16) = v15;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v11;
    *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
    v12 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v12;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t *sub_100702EB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  if (a1 != a2)
  {
    sub_100702FC8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *a2;
      v15 = a2[1];
      v16 = *((_BYTE *)a2 + 16);
      sub_100689D34(v14, v15, v16);
      *a1 = v14;
      a1[1] = v15;
      *((_BYTE *)a1 + 16) = v16;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v11 = *((_OWORD *)v10 + 1);
      v12 = *((_OWORD *)v10 + 2);
      v13 = *((_OWORD *)v10 + 3);
      *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
      *((_OWORD *)v9 + 2) = v12;
      *((_OWORD *)v9 + 3) = v13;
      *((_OWORD *)v9 + 1) = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100702FC8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100703004(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = *((_OWORD *)v9 + 3);
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 3) = v10;
    *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
    v11 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v11;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1007030BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;

  if (a1 != a2)
  {
    sub_100702FC8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_OWORD *)v9 + 3);
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *((_OWORD *)v8 + 3) = v10;
      *((_QWORD *)v8 + 8) = *((_QWORD *)v9 + 8);
      v11 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100703184(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, "H");
    v5[0] = v4;
    v5[1] = &unk_100F06BE0;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t sub_100703204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_uuid;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100703248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EE36C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100702318(a1);
}

uint64_t sub_100703294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1007032FC, v2, v3);
}

uint64_t sub_1007032FC()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100703330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter();
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100703FA8, v2, v3);
}

uint64_t sub_100703398()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1013EE568 + dword_1013EE568);
  v1 = (_QWORD *)swift_task_alloc(unk_1013EE56C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10065E614;
  return v3();
}

BOOL sub_1007033F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  void (*v34)(char *, uint64_t);
  _OWORD v36[4];
  uint64_t v37;
  _OWORD v38[4];
  uint64_t v39;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v36 - v12;
  v14 = sub_1004B804C(&qword_1013EE588);
  __chkstk_darwin(v14);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v16[*(int *)(v17 + 48)];
  sub_100703D94(a1, (uint64_t)v16);
  sub_100703D94(a2, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v8);
  if (!EnumCaseMultiPayload)
  {
    sub_100703D94((uint64_t)v16, (uint64_t)v13);
    v28 = *(int *)(sub_1004B804C(&qword_1013EE490) + 48);
    v29 = *(_OWORD *)&v13[v28 + 48];
    v36[2] = *(_OWORD *)&v13[v28 + 32];
    v36[3] = v29;
    v37 = *(_QWORD *)&v13[v28 + 64];
    v30 = *(_OWORD *)&v13[v28 + 16];
    v36[0] = *(_OWORD *)&v13[v28];
    v36[1] = v30;
    if (!swift_getEnumCaseMultiPayload(v18, v8))
    {
      v31 = *(_OWORD *)(v18 + v28 + 48);
      v38[2] = *(_OWORD *)(v18 + v28 + 32);
      v38[3] = v31;
      v39 = *(_QWORD *)(v18 + v28 + 64);
      v32 = *(_OWORD *)(v18 + v28 + 16);
      v38[0] = *(_OWORD *)(v18 + v28);
      v38[1] = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      v33 = static URL.== infix(_:_:)(v13, v7);
      v34 = *(void (**)(char *, uint64_t))(v5 + 8);
      v34(v7, v4);
      v34(v13, v4);
      if ((v33 & 1) != 0)
      {
        v27 = sub_1009586C0((uint64_t)v36, (uint64_t)v38);
        goto LABEL_14;
      }
      sub_100702FC8((uint64_t)v16);
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100703D94((uint64_t)v16, (uint64_t)v10);
    v20 = *(_QWORD *)v10;
    v21 = *((_QWORD *)v10 + 1);
    v22 = v10[16];
    if (swift_getEnumCaseMultiPayload(v18, v8) == 1)
    {
      v23 = *(_QWORD *)v18;
      v24 = *(_QWORD *)(v18 + 8);
      v25 = *(_BYTE *)(v18 + 16);
      sub_10095887C(v20, v21, v22);
      v27 = v26;
      sub_100689EEC(v20, v21, v22);
      sub_100689EEC(v23, v24, v25);
LABEL_14:
      sub_100702FC8((uint64_t)v16);
      return v27;
    }
    sub_100689EEC(v20, v21, v22);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload(v18, v8) != 2)
  {
LABEL_10:
    sub_1004CB800((uint64_t)v16, &qword_1013EE588);
    return 0;
  }
  sub_100702FC8((uint64_t)v16);
  return 1;
}

uint64_t sub_1007036D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[10] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[11] = v2;
  v1[12] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[13] = v3;
  v1[14] = v4;
  return swift_task_switch(sub_100703748, v3, v4);
}

uint64_t sub_100703748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  NSURL *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  v3 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v1 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_backendState;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_100703D94(v4, v3);
  if (swift_getEnumCaseMultiPayload(v3, v2))
  {
    swift_release(*(_QWORD *)(v0 + 96));
    sub_100702FC8(v3);
LABEL_5:
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v5 = *(_QWORD *)(v0 + 80);
  v6 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 120) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 128) = v8;
  v8(v3, v6);
  swift_task_dealloc(v3);
  v3 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 136) = v3;
  v9 = sub_1004B804C(&qword_1013E04D0);
  v10 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v5 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL;
  swift_beginAccess(v11, v0 + 40, 0, 0);
  sub_1005773FC(v11, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 96));
    sub_1004CB800(v10, &qword_1013E04D0);
    swift_task_dealloc(v10);
    goto LABEL_5;
  }
  v13 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, v10, v6);
  swift_task_dealloc(v10);
  v14 = *(double *)(v13 + 16);
  v15 = *(double *)(v13 + 24);
  v16 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  URL._bridgeToObjectiveC()(v17);
  v19 = v18;
  v20 = objc_msgSend(v16, "initWithFileAtURL:size:scale:representationTypes:", v18, 4, v14, v15, 1.0);
  *(_QWORD *)(v0 + 144) = v20;

  objc_msgSend(v20, "setIconMode:", 0);
  *(_QWORD *)(v0 + 64) = 0;
  v21 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 152) = v21;
  *(_QWORD *)(v21 + 16) = v20;
  v22 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 160) = v22;
  *(_QWORD *)(v22 + 16) = v0 + 64;
  *(_QWORD *)(v22 + 24) = v20;
  if (!sub_100DE6FA0(2, 18, 0, 0))
    return swift_task_switch(sub_100703AAC, 0, 0);
  v23 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  *(_QWORD *)(v0 + 168) = v23;
  *v23 = v0;
  v23[1] = sub_100703A50;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v23, &unk_1013EE578, v22, sub_100703DD8, v21, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_100703A50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = v1[19];
  swift_task_dealloc(v1[20]);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100703CDC, v1[13], v1[14]);
}

uint64_t sub_100703AAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[11];
  v2 = swift_task_addCancellationHandler(sub_100703DD8, v0[19]);
  v0[22] = v2;
  v0[23] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[24] = v3;
  v0[25] = v4;
  return swift_task_switch(sub_100703B20, v3, v4);
}

uint64_t sub_100703B20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v1[18];
  v3 = static MainActor.shared.getter(a1);
  v1[26] = v3;
  v4 = swift_task_alloc(32);
  v1[27] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[28] = v5;
  v6 = sub_1004B804C((uint64_t *)&unk_101409880);
  *v5 = v1;
  v5[1] = sub_100703BE4;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 9, v3, &protocol witness table for MainActor, 0xD000000000000011, 0x8000000100FC16C0, sub_100703E44, v4, v6);
}

uint64_t sub_100703BE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 216);
  v3 = *(_QWORD *)(*v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100703C4C, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_100703C4C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 72);

  *(_QWORD *)(v0 + 64) = v1;
  return swift_task_switch(sub_100703C94, 0, 0);
}

uint64_t sub_100703C94()
{
  _QWORD *v0;
  uint64_t v1;

  swift_task_removeCancellationHandler(v0[22]);
  v1 = v0[19];
  swift_task_dealloc(v0[20]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100703CDC, v0[13], v0[14]);
}

uint64_t sub_100703CDC()
{
  uint64_t v0;
  __n128 v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;

  v1 = swift_release(*(_QWORD *)(v0 + 96));
  v2 = *(void **)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(void **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  if (v2)
  {
    v7 = v2;
    v8 = objc_msgSend(v7, "CGImage");

    v6(v3, v5);
  }
  else
  {
    ((void (*)(_QWORD, _QWORD, __n128))v6)(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120), v1);

    v8 = 0;
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(id))(v0 + 8))(v8);
}

uint64_t sub_100703D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100703DD8()
{
  uint64_t v0;

  sub_100702658(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100703DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1013EE574);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1004CF80C;
  return sub_1007026B4(a1, v5, v4);
}

void sub_100703E44(uint64_t a1)
{
  uint64_t v1;

  sub_100702894(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100703E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EE580);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100703EB0(void *a1)
{
  sub_1004B804C(&qword_1013EE580);
  return sub_1007029F0(a1);
}

uint64_t sub_100703F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100703F18(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100703F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100703F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17QLSnapshotBackendC12BackendStateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100703FB0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v0;
  result = (uint64_t)objc_msgSend(v0, "numberOfSections");
  if (result < 0)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v6 = result;
  if (result)
  {
    v7 = 0;
    v8 = _swiftEmptyArrayStorage;
    while (v7 != v6)
    {
      result = (uint64_t)objc_msgSend(v14, "numberOfItemsInSection:", v7);
      if (result < 0)
        goto LABEL_18;
      v9 = result;
      if (result)
      {
        v10 = 0;
        do
        {
          IndexPath.init(item:section:)(v10, v7);
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = (_QWORD *)sub_100D11224(0, v8[2] + 1, 1, (unint64_t)v8);
          v12 = v8[2];
          v11 = v8[3];
          if (v12 >= v11 >> 1)
            v8 = (_QWORD *)sub_100D11224(v11 > 1, v12 + 1, 1, (unint64_t)v8);
          ++v10;
          v8[2] = v12 + 1;
          result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12, v4, v1);
        }
        while (v9 != v10);
      }
      if (++v7 == v6)
        return (uint64_t)v8;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100704150()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1006ED194();
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLBoardItemEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "boardItems");
    swift_unknownObjectRelease(v5);
    v9 = type metadata accessor for CRLBoardItem(0);
    v10 = sub_10058528C();
    v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  }
  else
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  return v11;
}

id sub_100704228()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterBoardItemDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterBoardItemDataProvider()
{
  return objc_opt_self(_TtC8Freeform37CRLMiniFormatterBoardItemDataProvider);
}

uint64_t *sub_100704278(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v27);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (char *)a1 + v10;
    v15 = (char *)a2 + v10;
    v16 = type metadata accessor for CRLAssetReferrerIdentifier(0);
    swift_bridgeObjectRetain(v13);
    LODWORD(v13) = swift_getEnumCaseMultiPayload(v15, v16);
    v8((uint64_t *)v14, (uint64_t *)v15, v7);
    if ((_DWORD)v13 == 1)
    {
      v17 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v18 = &v14[v17];
      v19 = &v15[v17];
      v8((uint64_t *)&v14[v17], (uint64_t *)v19, v7);
      v20 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v21 = &v18[v20];
      v22 = &v19[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      swift_bridgeObjectRetain(v23);
      v24 = v14;
      v25 = v16;
      v26 = 1;
    }
    else
    {
      v28 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v29 = &v14[v28];
      v30 = &v15[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      swift_bridgeObjectRetain(v31);
      v24 = v14;
      v25 = v16;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
  }
  return a1;
}

double sub_1007043E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  LODWORD(a1) = swift_getEnumCaseMultiPayload(v6, v7);
  v5(v6, v4);
  if ((_DWORD)a1 == 1)
  {
    v6 += *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v5(v6, v4);
  }
  v8 = *(_QWORD *)(v6 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20) + 8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1007044A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a1 + v9;
  v14 = a2 + v9;
  v15 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  swift_bridgeObjectRetain(v12);
  LODWORD(v12) = swift_getEnumCaseMultiPayload(v14, v15);
  v7(v13, v14, v6);
  if ((_DWORD)v12 == 1)
  {
    v16 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v17 = v13 + v16;
    v18 = v14 + v16;
    v7(v13 + v16, v18, v6);
    v19 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v20 = (_QWORD *)(v17 + v19);
    v21 = (_QWORD *)(v18 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = 1;
  }
  else
  {
    v23 = 0;
    v24 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v25 = (_QWORD *)(v13 + v24);
    v26 = (_QWORD *)(v14 + v24);
    v22 = v26[1];
    *v25 = *v26;
    v25[1] = v22;
  }
  swift_bridgeObjectRetain(v22);
  swift_storeEnumTagMultiPayload(v13, v15, v23);
  return a1;
}

uint64_t sub_1007045E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v12 = v9[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 24);
    v14 = a1 + v13;
    v15 = a2 + v13;
    sub_100704758(a1 + v13);
    v16 = type metadata accessor for CRLAssetReferrerIdentifier(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v18(v14, v15, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v19 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v20 = v14 + v19;
      v21 = v15 + v19;
      v18(v14 + v19, v21, v6);
      v22 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v23 = (_QWORD *)(v20 + v22);
      v24 = (_QWORD *)(v21 + v22);
      *v23 = *v24;
      v25 = v24[1];
      v23[1] = v25;
      v26 = 1;
    }
    else
    {
      v26 = 0;
      v27 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v28 = (_QWORD *)(v14 + v27);
      v29 = (_QWORD *)(v15 + v27);
      *v28 = *v29;
      v25 = v29[1];
      v28[1] = v25;
    }
    swift_bridgeObjectRetain(v25);
    swift_storeEnumTagMultiPayload(v14, v16, v26);
  }
  return a1;
}

uint64_t sub_100704758(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100704794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  v7(v9, v10, v6);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v14 = v9 + v13;
    v15 = v10 + v13;
    v7(v9 + v13, v15, v6);
    v16 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(v14 + *(int *)(v16 + 20)) = *(_OWORD *)(v15 + *(int *)(v16 + 20));
    v17 = 1;
  }
  else
  {
    v18 = type metadata accessor for CRLBoardIdentifierStorage(0);
    v17 = 0;
    *(_OWORD *)(v9 + *(int *)(v18 + 20)) = *(_OWORD *)(v10 + *(int *)(v18 + 20));
  }
  swift_storeEnumTagMultiPayload(v9, v11, v17);
  return a1;
}

uint64_t sub_1007048A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = v9[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease(v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = a1 + v14;
    v16 = a2 + v14;
    sub_100704758(a1 + v14);
    v17 = type metadata accessor for CRLAssetReferrerIdentifier(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v19(v15, v16, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v20 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v21 = v15 + v20;
      v22 = v16 + v20;
      v19(v15 + v20, v22, v6);
      v23 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)(v21 + *(int *)(v23 + 20)) = *(_OWORD *)(v22 + *(int *)(v23 + 20));
      v24 = 1;
    }
    else
    {
      v25 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v24 = 0;
      *(_OWORD *)(v15 + *(int *)(v25 + 20)) = *(_OWORD *)(v16 + *(int *)(v25 + 20));
    }
    swift_storeEnumTagMultiPayload(v15, v17, v24);
  }
  return a1;
}

uint64_t sub_1007049E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007049F0);
}

uint64_t sub_1007049F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for CRLAssetReferrerIdentifier(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100704A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100704AA8);
}

uint64_t sub_100704AA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for CRLAssetReferrerIdentifier(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLAssetAddress(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EE610;
  if (!qword_1013EE610)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetAddress);
  return result;
}

uint64_t sub_100704B8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100F06C70;
    result = type metadata accessor for CRLAssetReferrerIdentifier(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void sub_100704C18(uint64_t a1, const mach_header_64 *a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9)
{
  sub_100704C44(a1, a2, a3, a4, a5, a6, a7, a8, a9, &qword_1013EE6D8);
}

void sub_100704C44(uint64_t a1, const mach_header_64 *a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  _BYTE v38[72];
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1);
  v14 = sub_1004B804C(a10);
  String.init<A>(describing:)(&ObjectType, v14);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v35, v38);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v33 = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 56) = v33;
  v32 = sub_1006B06EC();
  *(_QWORD *)(inited + 64) = v32;
  *(_QWORD *)(inited + 32) = v17;
  v31 = v17;
  sub_100757E04(a2, a3, a4, a5, a6, a7, a8, a9, "Abstract method not overridden by %{public}@", 44, 2u, inited);
  sub_1004F5394(inited, a3, a4, a5, a6, a7, a8, a9, (uint64_t)"Abstract method not overridden by %{public}@", 44, 2u);
  swift_setDeallocating(inited);
  v19 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v19);
  v20 = swift_allocObject(v35, 112, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v20 + 56) = v33;
  *(_QWORD *)(v20 + 64) = v32;
  *(_QWORD *)(v20 + 32) = v31;
  v21 = v31;
  v22 = NSInternalInconsistencyException;
  v23 = StaticString.description.getter(a3, a4, a5);
  v25 = v24;
  *(_QWORD *)(v20 + 96) = &type metadata for String;
  *(_QWORD *)(v20 + 104) = sub_1004CFC2C();
  *(_QWORD *)(v20 + 72) = v23;
  *(_QWORD *)(v20 + 80) = v25;
  String.init(format:_:)(0xD000000000000027, 0x8000000100FC9800, v20);
  v27 = v26;
  v28 = objc_allocWithZone((Class)NSException);
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v28, "initWithName:reason:userInfo:", v22, v29, 0, swift_bridgeObjectRelease(v27).n128_f64[0]);

  objc_msgSend(v30, "raise");
}

double *sub_100704F8C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView];
  if (!v4)
    return _swiftEmptyArrayStorage;
  v5 = *(void **)&v0[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView];
  if (!v5)
    return _swiftEmptyArrayStorage;
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = v4;
  v8 = v5;
  v9 = v0;
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_1012798F0, 40, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  v12 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013EE6C8, (uint64_t)v11);
  swift_release(v12);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v14 + 32) = v8;
  *(_QWORD *)(v14 + 40) = v7;
  v17 = v14;
  specialized Array._endMutation()(v14);
  return (double *)v17;
}

uint64_t sub_1007050E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100705154, v6, v7);
}

uint64_t sub_100705154()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(__n128))((swift_isaMask & *v1) + 0x188))(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1007051A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t Strong;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc;
  v5 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "repForTextEditingInspecting");
  if (!v5)
    goto LABEL_11;
  v6 = v5;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor);
  if (!Strong)
  {
LABEL_10:

LABEL_11:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v8 = (char *)Strong;
  v9 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!v9)
    goto LABEL_8;
  if (*(_QWORD *)(*(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "layoutForInfo:");

    if (v11)
    {
      v12 = type metadata accessor for CRLWPLayout();
      v13 = swift_dynamicCastClass(v11, v12);
      if (v13)
      {
        v14 = (void *)v13;

        v15 = objc_msgSend(v14, "geometry");
        objc_msgSend(v15, "frame");
        v17 = v16;
        v19 = v18;
        v21 = v20;
        v23 = v22;

        objc_msgSend(v6, "convertNaturalRectToUnscaledCanvas:", v17, v19, v21, v23);
        v28 = sub_1000616BC(v17, v19, v21, v23, v24, v25, v26, v27);
        v30 = v29;
        v32 = v31;
        v34 = v33;
        v35 = *(id *)(a1 + v4);
        objc_msgSend(v35, "convertUnscaledToBoundsRect:", v28, v30, v32, v34);
        v37 = v36;
        v39 = v38;
        v41 = v40;
        v43 = v42;

        *(_QWORD *)a2 = v37;
        *(_QWORD *)(a2 + 8) = v39;
        *(_QWORD *)(a2 + 16) = v41;
        *(_QWORD *)(a2 + 24) = v43;
        return;
      }

      v6 = v8;
      goto LABEL_9;
    }
LABEL_8:
    v11 = v8;
LABEL_9:

    v6 = v11;
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1007053B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView), "removeFromSuperview");
  v2 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView), "removeFromSuperview");
  v3 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView), "removeFromSuperview");
  v4 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  v5 = *(void **)(v0 + v2);
  *(_QWORD *)(v0 + v2) = 0;

  v6 = *(void **)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;

}

void sub_10070543C()
{
  uint64_t v0;

  sub_100704C44(v0, &_mh_execute_header, (uint64_t)"setupDecoratorViews()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController.swift", 99, 2u, 132, &qword_1013EE6A8);
}

void sub_100705494()
{
  uint64_t v0;

  sub_100704C44(v0, &_mh_execute_header, (uint64_t)"addSelectionManager()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController.swift", 99, 2u, 138, &qword_1013EE6A8);
}

void sub_1007054EC()
{
  uint64_t v0;

  sub_100704C44(v0, &_mh_execute_header, (uint64_t)"removeSelectionManager()", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController.swift", 99, 2u, 142, &qword_1013EE6A8);
}

void sub_100705544()
{
  uint64_t v0;

  sub_100704C44(v0, &_mh_execute_header, (uint64_t)"refresh()", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController.swift", 99, 2u, 146, &qword_1013EE6A8);
}

id sub_1007055C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSelectionViewController()
{
  return objc_opt_self(_TtC8Freeform26CRLSelectionViewController);
}

uint64_t sub_100705680()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1007056AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EE6C4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_1007050E8(a1, v4, v5, v6);
}

id sub_100705718(void *a1, uint64_t a2)
{
  char v4;
  id result;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  objc_super v9;
  _QWORD v10[5];

  v10[3] = &type metadata for CRLUIKitFeatureFlags;
  v10[4] = sub_1005E9710();
  v4 = isFeatureEnabled(_:)(v10);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
  result = 0;
  if ((v4 & 1) != 0)
  {
    v6 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionViewController_i());
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_lastRotation] = 0;
    v7 = swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_editor], 0);
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView] = 0;
    v6[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_isGlowAnimationEnabled] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc] = a1;
    swift_unknownObjectWeakAssign(v7, a2);
    v9.receiver = v6;
    v9.super_class = (Class)type metadata accessor for CRLSelectionViewController();
    v8 = a1;
    return objc_msgSendSuper2(&v9, "init");
  }
  return result;
}

uint64_t sub_10070581C()
{
  uint64_t result;

  qword_10147F340 = 97;
  *(_QWORD *)algn_10147F348 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F06F40);
  qword_10147F350 = result;
  return result;
}

uint64_t sub_100705858()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DCF98 != -1)
    swift_once(&qword_1013DCF98, sub_10070581C);
  v0 = qword_10147F340;
  v1 = qword_10147F350;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10147F348);
  swift_retain(v1);
  return v0;
}

uint64_t sub_1007058CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_10070590C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[248];
  _BYTE v18[120];
  _BYTE v19[232];
  _BYTE v20[48];
  uint64_t v21;
  _BYTE v22[232];
  _BYTE v23[248];

  v4 = sub_1004B804C((uint64_t *)&unk_1013F5510);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for CRLShapeItemCRDTData(0);
  __chkstk_darwin(v10);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  memset(v18, 0, 112);
  sub_1004C39E8((uint64_t)v22);
  sub_1004C4938((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1013F1530);
  memset(v20, 0, sizeof(v20));
  v21 = 0;
  sub_100C085D8((uint64_t)v18, (uint64_t)v19, (uint64_t)v20, (uint64_t)v20, (uint64_t)v12, 0.0);
  *(_QWORD *)&v12[*(int *)(v10 + 20)] = _swiftEmptyDictionarySingleton;
  v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  v14 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  sub_10054F488((uint64_t)v23);
  sub_1004C4938((uint64_t)v23, (uint64_t)v17, &qword_1013E1B50);
  return sub_10055EA9C((uint64_t)v12, (uint64_t)v9, (uint64_t)v6, (uint64_t)v17, a2);
}

uint64_t sub_100705AF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013EEC28, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06D6C);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100705B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100705B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_100705BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100705C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100705C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100705CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100705D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100705D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100705DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100705E44()
{
  sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100705E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100705ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_100705F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013EEC40, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06DCC);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100705F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013EEC40, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06DCC);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100705FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_100706060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_1007060BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10070610C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_10147F358;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1004B8460(v3, a1, type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_100706164()
{
  return 10;
}

double sub_100706170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLWPStickyNoteItemData(0);
  v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    v9 = v7 + qword_10147F358;
    swift_beginAccess(v7 + qword_10147F358, v12, 0, 0);
    sub_1004B8460(v9, (uint64_t)v5, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    swift_beginAccess(v1 + qword_10147F358, v11, 33, 0);
    v10 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
    swift_retain(a1);
    CRStruct_1.merge(_:)(v5, v3, v10);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    swift_endAccess(v11);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1007062A0(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v35;
  uint64_t v36;
  _BYTE v37[24];
  _BYTE v38[24];

  v2 = v1;
  v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4);
  v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  v18 = *(_QWORD *)(*v2 + 632);
  v19 = (uint64_t)v2 + v18;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v18, v37, 0, 0);
    sub_1004CB7BC(v19, (uint64_t)v14, &qword_1013F5530);
    v20 = sub_1004CBA30(&qword_1013E2A20, &qword_1013F5530, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v12, v20);
    sub_1004CB800((uint64_t)v14, &qword_1013F5530);
    v21 = (uint64_t)v2 + qword_10147F358;
    swift_beginAccess((char *)v2 + qword_10147F358, v38, 0, 0);
    sub_1004B8460(v21, (uint64_t)v8, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v22 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
    CRStruct_1.copy(renamingReferences:)(0, v6, v22);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v18, v38, 0, 0);
    sub_1004CB7BC(v19, (uint64_t)v17, &qword_1013F5530);
    v23 = (uint64_t)v2 + qword_10147F358;
    swift_beginAccess((char *)v2 + qword_10147F358, v37, 0, 0);
    sub_1004B8460(v23, (uint64_t)v11, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  }
  v35 = v11;
  v24 = (uint64_t)v17;
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v14, &qword_1013F5530);
  sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  v25 = v2[4];
  v26 = v2[5];
  v29 = v2 + 2;
  v28 = v2[2];
  v27 = v29[1];
  v30 = type metadata accessor for CRLWPStickyNoteItemData(0);
  v31 = swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  sub_1004B8460((uint64_t)v8, v31 + qword_10147F358, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  v32 = v36;
  sub_1004B8460((uint64_t)v8, v36, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  sub_100708908(v32, v31 + *(_QWORD *)(*(_QWORD *)v31 + 752));
  *(_QWORD *)(v31 + qword_10140A310) = 0;
  sub_1004C4938((uint64_t)v14, v31 + *(_QWORD *)(*(_QWORD *)v31 + 632), &qword_1013F5530);
  v33 = sub_1005E1000(v27, v25, v26, v28);
  sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  sub_1004CB800(v24, &qword_1013F5530);
  return v33;
}

uint64_t sub_100706628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];

  v3 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v24[-v7];
  v9 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v24[-v13];
  v15 = type metadata accessor for CRLWPStickyNoteItemData(0);
  v16 = swift_dynamicCastClass(a1, v15);
  if (!v16)
    goto LABEL_5;
  v17 = v16;
  v18 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v18, v27, 0, 0);
  sub_1004CB7BC(v18, (uint64_t)v14, &qword_1013F5530);
  v19 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 632);
  swift_beginAccess(v19, v26, 0, 0);
  sub_1004CB7BC(v19, (uint64_t)v11, &qword_1013F5530);
  swift_retain(a1);
  LOBYTE(v19) = sub_100D5ED0C((uint64_t)v14, (uint64_t)v11);
  sub_1004CB800((uint64_t)v11, &qword_1013F5530);
  sub_1004CB800((uint64_t)v14, &qword_1013F5530);
  if ((v19 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v22 = 0;
    return v22 & 1;
  }
  v20 = v1 + qword_10147F358;
  swift_beginAccess(v20, v25, 0, 0);
  sub_1004B8460(v20, (uint64_t)v8, type metadata accessor for CRLWPShapeItemCRDTData);
  v21 = v17 + qword_10147F358;
  swift_beginAccess(v17 + qword_10147F358, v24, 0, 0);
  sub_1004B8460(v21, (uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
  v22 = sub_100562730((uint64_t)v8, (uint64_t)v5);
  swift_release(a1);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPShapeItemCRDTData);
  return v22 & 1;
}

uint64_t sub_100706870(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_10147F358;
  swift_beginAccess(v2 + qword_10147F358, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v7, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v12 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
    CRStruct_1.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013EEC40, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06DCC);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  return v16;
}

uint64_t sub_100706A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v17[-v7];
  v9 = type metadata accessor for CRLWPStickyNoteItemData(0);
  v10 = swift_dynamicCastClass(a1, v9);
  if (v10)
  {
    v11 = v10;
    v12 = v1 + qword_10147F358;
    swift_beginAccess(v12, v18, 0, 0);
    sub_1004B8460(v12, (uint64_t)v8, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v13 = v11 + qword_10147F358;
    swift_beginAccess(v11 + qword_10147F358, v17, 0, 0);
    sub_1004B8460(v13, (uint64_t)v5, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v14 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
    v15 = CRStruct_1.hasDelta(from:)(v5, v3, v14);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    return v15 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLWPStickyNoteItemData.swift", 38, 2, 86, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100706BEC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_1013EEC60);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_10147F358;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v19 = v17 + qword_10147F358;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v20 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
    swift_retain(a1);
    v21 = v31;
    CRStruct_1.delta(_:from:)(v31, v6, v30, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_1013EEC60);
    v22 = sub_1004B804C(&qword_1013EEC38);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_1013EEC60);
      swift_release(a1);
      sub_1004CB800((uint64_t)v12, &qword_1013EEC60);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_1013EEC30, &qword_1013EEC38, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_1013EEC60);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLWPStickyNoteItemData.swift", 38, 2, 99, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_100706F60(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v3 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v3);
  v46 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013EEC38);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v13 = sub_1004CBA30(&qword_1013EEC30, &qword_1013EEC38, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
  v14 = a2;
  LOBYTE(a2) = v9;
  v16 = v48;
  PartialCRDT.init(serializedData:)(a1, v14, v9, v13);
  if (!v16)
  {
    v43 = v8;
    v44 = v6;
    v45 = v5;
    v48 = v10;
    v17 = v47;
    swift_beginAccess(v47 + qword_10147F358, v51, 33, 0);
    v18 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
    v19 = sub_1004B7878(&qword_1013EEC58, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06F14);
    LODWORD(a2) = CRStruct_1.merge(delta:)(v12, v18, v19);
    swift_endAccess(v51);
    if ((a2 & 1) == 0)
    {
      v41 = v9;
      v42 = a2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v20 = (void *)static OS_os_log.realTimeSync;
      v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v21, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v23 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 632);
      swift_beginAccess(v23, v49, 0, 0);
      v24 = v23;
      v25 = v46;
      sub_1004CB7BC(v24, v46, &qword_1013F5530);
      v26 = v20;
      v27 = sub_1004B804C(&qword_1013E1A80);
      v28 = v43;
      CRRegister.wrappedValue.getter(v27);
      v29 = sub_1004CB800(v25, &qword_1013F5530);
      v30 = UUID.uuidString.getter(v29);
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v33 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v33;
      *(_QWORD *)(inited + 32) = v30;
      *(_QWORD *)(inited + 40) = v32;
      v52 = v17;
      v34 = type metadata accessor for CRLWPStickyNoteItemData(0);
      swift_retain(v17);
      v35 = String.init<A>(describing:)(&v52, v34);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v33;
      *(_QWORD *)(inited + 72) = v35;
      *(_QWORD *)(inited + 80) = v36;
      v37 = static os_log_type_t.error.getter(v35);
      sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v37, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      a2 = *(_QWORD *)(inited + 16);
      v38 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, a2, v38);

      LOBYTE(a2) = v42;
      v9 = v41;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
  }
  return a2 & 1;
}

uint64_t sub_10070733C()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_10147F358, type metadata accessor for CRLWPStickyNoteItemCRDTData);
}

uint64_t sub_100707364()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), &qword_1013F5530);

  sub_1004B84A4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 752), type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B84A4(v0 + qword_10147F358, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLWPStickyNoteItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EE778, (uint64_t)&nominal type descriptor for CRLWPStickyNoteItemData);
}

uint64_t sub_1007073F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLWPStickyNoteItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 960);
    if (!result)
      return 0;
  }
  return result;
}

void (*sub_10070745C(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLWPShapeItemCRDTData(0) - 8) + 64);
  v3[10] = malloc(v4);
  v5 = malloc(v4);
  v6 = qword_10147F358;
  v3[11] = v5;
  v3[12] = v6;
  v7 = v1 + v6;
  swift_beginAccess(v7, v3, 0, 0);
  sub_1004B8460(v7, (uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
  return sub_100707504;
}

void sub_100707504(char **a1, char a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = *a1;
  v4 = (void *)*((_QWORD *)*a1 + 11);
  v3 = *((_QWORD *)*a1 + 12);
  v5 = (void *)*((_QWORD *)*a1 + 10);
  v6 = *((_QWORD *)*a1 + 9) + v3;
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(*((_QWORD *)*a1 + 11), (uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_beginAccess(v6, v2 + 24, 33, 0);
    sub_10070894C((uint64_t)v5, v6);
    swift_endAccess(v2 + 24);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
  }
  else
  {
    swift_beginAccess(*((_QWORD *)*a1 + 9) + v3, v2 + 48, 33, 0);
    sub_10070894C((uint64_t)v4, v6);
    swift_endAccess(v2 + 48);
  }
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLWPShapeItemCRDTData);
  free(v4);
  free(v5);
  free(v2);
}

uint64_t type metadata accessor for CRLWPStickyNoteItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EEBE0, (uint64_t)&nominal type descriptor for CRLWPStickyNoteItemCRDTData);
}

char *sub_1007075F8(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __n128 v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v58 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v58 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v58);
  }
  else
  {
    v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = v7[6];
    v13 = &a1[v12];
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[v7[7]], (char *)a2 + v7[7], v15);
    v17 = v7[8];
    v18 = &a1[v17];
    v19 = (char *)a2 + v17;
    v20 = sub_1004B804C(&qword_1013F55A0);
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v22 = v7[9];
    v23 = *(uint64_t *)((char *)a2 + v22);
    *(_QWORD *)&a1[v22] = v23;
    v24 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
    v25 = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)&a1[v24] = v25;
    v26 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
    v27 = v26[5];
    v28 = &a1[v27];
    v29 = (char *)a2 + v27;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    v30 = sub_1004B804C((uint64_t *)&unk_1013E8570);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    v32 = type metadata accessor for CRLWPStorageCRDTData(0);
    v31(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v30);
    v33 = *(int *)(v32 + 24);
    v34 = *(_QWORD *)&v29[v33];
    *(_QWORD *)&v28[v33] = v34;
    v35 = v26[6];
    v36 = &a1[v35];
    v37 = (char *)a2 + v35;
    v38 = swift_bridgeObjectRetain(v34);
    ((void (*)(char *, char *, uint64_t, __n128))v21)(v36, v37, v20, v38);
    v39 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
    v40 = v39[5];
    v41 = &v36[v40];
    v42 = &v37[v40];
    v43 = sub_1004B804C(&qword_1013E27E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = v39[6];
    v45 = &v36[v44];
    v46 = &v37[v44];
    v47 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = v39[7];
    v49 = *(_QWORD *)&v37[v48];
    *(_QWORD *)&v36[v48] = v49;
    v50 = v26[7];
    v51 = &a1[v50];
    v52 = (char *)a2 + v50;
    swift_bridgeObjectRetain(v49);
    v53 = sub_1004B804C(&qword_1013F3C70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = v26[8];
    v55 = *(uint64_t *)((char *)a2 + v54);
    *(_QWORD *)&a1[v54] = v55;
    v56 = *(int *)(a3 + 20);
    v57 = *(uint64_t *)((char *)a2 + v56);
    *(_QWORD *)&a1[v56] = v57;
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v57);
  }
  return a1;
}

double sub_1007078E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;

  v4 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v6 = a1 + v5[5];
  v7 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v5[6];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + v5[7], v9);
  v11 = a1 + v5[8];
  v12 = sub_1004B804C(&qword_1013F55A0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[9]));
  v14 = type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v14 + 20)));
  v15 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  v16 = a1 + v15[5];
  v17 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
  v18(v16, v17);
  v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  v18(v16 + *(int *)(v19 + 20), v17);
  v20 = swift_bridgeObjectRelease(*(_QWORD *)(v16 + *(int *)(v19 + 24)));
  v21 = a1 + v15[6];
  ((void (*)(uint64_t, uint64_t, __n128))v13)(v21, v12, v20);
  v22 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v23 = v21 + v22[5];
  v24 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = v21 + v22[6];
  v26 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  swift_bridgeObjectRelease(*(_QWORD *)(v21 + v22[7]));
  v27 = a1 + v15[7];
  v28 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v15[8]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t sub_100707B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v5 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + v6[7], a2 + v6[7], v14);
  v16 = v6[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v21 = v6[9];
  v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  v23 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  v26 = v25[5];
  v27 = a1 + v26;
  v28 = a2 + v26;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  v29 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v30(v27, v28, v29);
  v31 = type metadata accessor for CRLWPStorageCRDTData(0);
  v30(v27 + *(int *)(v31 + 20), v28 + *(int *)(v31 + 20), v29);
  v32 = *(int *)(v31 + 24);
  v33 = *(_QWORD *)(v28 + v32);
  *(_QWORD *)(v27 + v32) = v33;
  v34 = v25[6];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = swift_bridgeObjectRetain(v33);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v20)(v35, v36, v19, v37);
  v38 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v39 = v38[5];
  v40 = v35 + v39;
  v41 = v36 + v39;
  v42 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = v38[6];
  v44 = v35 + v43;
  v45 = v36 + v43;
  v46 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v38[7];
  v48 = *(_QWORD *)(v36 + v47);
  *(_QWORD *)(v35 + v47) = v48;
  v49 = v25[7];
  v50 = a1 + v49;
  v51 = a2 + v49;
  swift_bridgeObjectRetain(v48);
  v52 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  v53 = v25[8];
  v54 = *(_QWORD *)(a2 + v53);
  *(_QWORD *)(a1 + v53) = v54;
  v55 = *(int *)(a3 + 20);
  v56 = *(_QWORD *)(a2 + v55);
  *(_QWORD *)(a1 + v55) = v56;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v56);
  return a1;
}

uint64_t sub_100707DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v5 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + v6[7], a2 + v6[7], v14);
  v16 = v6[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v21 = v6[9];
  v22 = *(_QWORD *)(a2 + v21);
  v23 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  v27 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  v28 = v27[5];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24);
  v32(v29, v30, v31);
  v33 = type metadata accessor for CRLWPStorageCRDTData(0);
  v32(v29 + *(int *)(v33 + 20), v30 + *(int *)(v33 + 20), v31);
  v34 = *(int *)(v33 + 24);
  v35 = *(_QWORD *)(v30 + v34);
  v36 = *(_QWORD *)(v29 + v34);
  *(_QWORD *)(v29 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  v37 = swift_bridgeObjectRelease(v36);
  v38 = v27[6];
  v39 = a1 + v38;
  v40 = a2 + v38;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v20)(a1 + v38, a2 + v38, v19, v37);
  v41 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v42 = v41[5];
  v43 = v39 + v42;
  v44 = v40 + v42;
  v45 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  v46 = v41[6];
  v47 = v39 + v46;
  v48 = v40 + v46;
  v49 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  v50 = v41[7];
  v51 = *(_QWORD *)(v40 + v50);
  v52 = *(_QWORD *)(v39 + v50);
  *(_QWORD *)(v39 + v50) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = v27[7];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  v57 = v27[8];
  v58 = *(_QWORD *)(a2 + v57);
  v59 = *(_QWORD *)(a1 + v57);
  *(_QWORD *)(a1 + v57) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59);
  v60 = *(int *)(a3 + 20);
  v61 = *(_QWORD *)(a2 + v60);
  v62 = *(_QWORD *)(a1 + v60);
  *(_QWORD *)(a1 + v60) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  return a1;
}

uint64_t sub_1007080C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v5 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  v6 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + v6[7], a2 + v6[7], v14);
  v16 = v6[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(a1 + *(int *)(v21 + 20)) = *(_QWORD *)(a2 + *(int *)(v21 + 20));
  v22 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  v23 = v22[5];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v28 = type metadata accessor for CRLWPStorageCRDTData(0);
  v27(v24 + *(int *)(v28 + 20), v25 + *(int *)(v28 + 20), v26);
  *(_QWORD *)(v24 + *(int *)(v28 + 24)) = *(_QWORD *)(v25 + *(int *)(v28 + 24));
  v29 = v22[6];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v20(a1 + v29, a2 + v29, v19);
  v32 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v33 = v32[5];
  v34 = v30 + v33;
  v35 = v31 + v33;
  v36 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  v37 = v32[6];
  v38 = v30 + v37;
  v39 = v31 + v37;
  v40 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  *(_QWORD *)(v30 + v32[7]) = *(_QWORD *)(v31 + v32[7]);
  v41 = v22[7];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  *(_QWORD *)(a1 + v22[8]) = *(_QWORD *)(a2 + v22[8]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100708360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v5 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  v6 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = v6[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + v6[7], a2 + v6[7], v14);
  v16 = v6[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v21 = v6[9];
  v22 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_bridgeObjectRelease(v22);
  v23 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v24 = *(_QWORD *)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease(v24);
  v25 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  v26 = v25[5];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40);
  v30(v27, v28, v29);
  v31 = type metadata accessor for CRLWPStorageCRDTData(0);
  v30(v27 + *(int *)(v31 + 20), v28 + *(int *)(v31 + 20), v29);
  v32 = *(int *)(v31 + 24);
  v33 = *(_QWORD *)(v27 + v32);
  *(_QWORD *)(v27 + v32) = *(_QWORD *)(v28 + v32);
  v34 = swift_bridgeObjectRelease(v33);
  v35 = v25[6];
  v36 = a1 + v35;
  v37 = a2 + v35;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v20)(a1 + v35, a2 + v35, v19, v34);
  v38 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v39 = v38[5];
  v40 = v36 + v39;
  v41 = v37 + v39;
  v42 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = v38[6];
  v44 = v36 + v43;
  v45 = v37 + v43;
  v46 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = v38[7];
  v48 = *(_QWORD *)(v36 + v47);
  *(_QWORD *)(v36 + v47) = *(_QWORD *)(v37 + v47);
  swift_bridgeObjectRelease(v48);
  v49 = v25[7];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
  v53 = v25[8];
  v54 = *(_QWORD *)(a1 + v53);
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);
  swift_bridgeObjectRelease(v54);
  v55 = *(int *)(a3 + 20);
  v56 = *(_QWORD *)(a1 + v55);
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  swift_bridgeObjectRelease(v56);
  return a1;
}

uint64_t sub_100708628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100708634);
}

uint64_t sub_100708634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1007086B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007086BC);
}

uint64_t sub_1007086BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100708734(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLWPShapeItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1007087A8()
{
  return sub_1004B7878(&qword_1013EEC18, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06CEC);
}

uint64_t sub_1007087D4()
{
  return sub_1004B7878(&qword_1013EEC20, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06D34);
}

uint64_t sub_100708800()
{
  return sub_1004B7878(&qword_1013EEC28, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06D6C);
}

uint64_t sub_10070882C()
{
  return sub_1004CBA30(&qword_1013EEC30, &qword_1013EEC38, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_100708858()
{
  return sub_1004B7878(&qword_1013EEC40, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06DCC);
}

uint64_t sub_100708884()
{
  return sub_1004B7878(&qword_1013EEC48, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06E4C);
}

uint64_t sub_1007088B0()
{
  return sub_1004B7878(&qword_1013E2960, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8910);
}

uint64_t sub_1007088DC()
{
  return sub_1004B7878(&qword_1013EEC50, type metadata accessor for CRLWPStickyNoteItemCRDTData, (uint64_t)&unk_100F06EAC);
}

uint64_t sub_100708908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070894C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100708990(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  sub_100511A70();
  if ((static NSObject.== infix(_:_:)(v3, v7) & 1) != 0
    && (static NSObject.== infix(_:_:)(v2, v6) & 1) != 0
    && (static NSObject.== infix(_:_:)(v5, v9) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(v4, v8) & 1;
  }
  else
  {
    return 0;
  }
}

void sub_100708A2C(void *a1, void *a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double x;
  double v18;
  double y;
  double v20;
  double width;
  double v22;
  double height;
  id v24;
  unsigned int v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  uint64_t v34;
  uint64_t inited;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  CGFloat v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  id v83;
  unsigned int v84;
  double v85;
  unsigned int v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  CGFloat v93;
  double v94;
  double v95;
  double v96;
  double v97;
  CGFloat v98;
  double v99;
  double v100;
  id v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double r2;
  CGFloat v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  CGAffineTransform v118;
  char v119[120];
  CGSize v120;
  CGSize v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;

  objc_msgSend(a1, "unscaledSize");
  v121.width = 0.0;
  v121.height = 0.0;
  if (!CGSizeEqualToSize(v120, v121))
  {
    v110 = a10;
    v112 = a9;
    objc_msgSend(a1, "unscaledSize", 0.0, 0.0);
    x = sub_10005FDDC();
    y = v18;
    width = v20;
    height = v22;
    v24 = objc_msgSend(a3, "canvas");
    v25 = objc_msgSend(v24, "isAnchoredAtRight");

    v114 = a8;
    v116 = a7;
    if (v25)
    {
      CGAffineTransformMakeScale(&v118, -1.0, 1.0);
      v122.origin.x = x;
      v122.origin.y = y;
      v122.size.width = width;
      v122.size.height = height;
      v123 = CGRectApplyAffineTransform(v122, &v118);
      x = v123.origin.x;
      y = v123.origin.y;
      width = v123.size.width;
      height = v123.size.height;
    }
    objc_msgSend(a3, "growUnscaledCanvasLayerRect:withViewScale:", x, y, width, height, a6);
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v108 = x;
    v107 = y;
    if (!sub_10005FFE0(v26, v28, v30, v32, x, y, width, height))
    {
      v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v34, v119);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      objc_msgSend(a1, "unscaledSize");
      v118.a = v36;
      v118.b = v37;
      type metadata accessor for CGSize(0);
      v39 = String.init<A>(describing:)(&v118, v38);
      v41 = v40;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v42 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v39;
      *(_QWORD *)(inited + 64) = v42;
      *(_QWORD *)(inited + 40) = v41;
      v118.a = v27;
      v118.b = v29;
      v118.c = v31;
      v118.d = v33;
      type metadata accessor for CGRect(0);
      v44 = String.init<A>(describing:)(&v118, v43);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v42;
      *(_QWORD *)(inited + 72) = v44;
      *(_QWORD *)(inited + 80) = v45;
      sub_100757E04(&_mh_execute_header, (uint64_t)"fixedScaledBounds(scrollViewSize:viewScale:contentInset:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Canvas/CRLCanvasLayerAnimator.swift", 115, 2, 121, "expected canvas layer not to shrink in -growUnscaledCanvasLayerRect:, but jumped from %@ to %@, ignoring provided rect.", 119, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"fixedScaledBounds(scrollViewSize:viewScale:contentInset:)", 57, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Canvas/CRLCanvasLayerAnimator.swift", 115, 2u, 121, (uint64_t)"expected canvas layer not to shrink in -growUnscaledCanvasLayerRect:, but jumped from %@ to %@, ignoring provided rect.", 119, 2u);
      swift_setDeallocating(inited);
      v46 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v46);
      v27 = x;
      v29 = y;
      v31 = width;
      v33 = height;
    }
    v48 = v110;
    v47 = v112;
    v49 = sub_100060FD8(v27, v29, v31, v33, a6);
    v111 = v50 + v116;
    v113 = v49 + v114;
    v51 = v114 + v48;
    v53 = v52 - (v114 + v48);
    v54 = v116 + v47;
    v56 = v55 - (v116 + v47);
    if (objc_msgSend(a3, "shouldResizeCanvasToScrollView"))
    {
      v105 = v56;
      r2 = v53;
      v57 = objc_msgSend(a3, "canvas");
      objc_msgSend(v57, "contentsScale");
      v104 = v58;

      v59 = sub_10005FDDC();
      v61 = v60;
      v63 = v62;
      objc_msgSend(a2, "scrollableAreaContentInsets", v59);
      v66 = v64 + v65;
      v67 = width;
      v68 = v61 - v66;
      v71 = v63 - (v69 + v70);
      v72 = sub_100060FD8(v108, v107, v67, height, a6);
      v74 = v73;
      v75 = v72 + v114;
      v77 = v76 - v51;
      v79 = v78 - v54;
      v80 = sub_1000603B8(v68, v71, v77);
      v109 = v71;
      if (v80 <= 0.0)
      {
        v87 = v116;
        v89 = v111;
        v88 = v113;
        v90 = v105;
      }
      else
      {
        v82 = v80;
        v115 = v81;
        v83 = objc_msgSend(a3, "canvas");
        v84 = objc_msgSend(v83, "isAnchoredAtRight");

        v85 = 0.0;
        if (v84)
          v85 = v82;
        v75 = v75 - v85;
        v86 = objc_msgSend(a1, "horizontallyCenteredInScrollView");
        v87 = v116;
        v77 = v68;
        v89 = v111;
        v88 = v113;
        v90 = v105;
        if (v86)
        {
          v91 = sub_10006309C(v75 + v82 * -0.5, v104);
          v88 = v113;
          v90 = v105;
          v75 = v91;
        }
        v81 = v115;
      }
      v94 = v74 + v87;
      if (v81 <= 0.0)
      {
        v98 = v79;
      }
      else
      {
        v95 = v88;
        v96 = v90;
        v97 = v81;
        v98 = v109;
        if (objc_msgSend(a1, "verticallyCenteredInScrollView"))
          v94 = sub_10006309C(v94 + v97 * -0.5, v104);
        v90 = v96;
        v88 = v95;
      }
      v124.origin.x = v75;
      v124.origin.y = v94;
      v124.size.width = v77;
      v124.size.height = v98;
      v99 = v89;
      v100 = r2;
      v125 = CGRectUnion(v124, *(CGRect *)&v88);
      v92 = v125.origin.x;
      v93 = v125.origin.y;
      v53 = v125.size.width;
      v56 = v125.size.height;
    }
    else
    {
      v93 = v111;
      v92 = v113;
    }
    v101 = objc_msgSend(a3, "canvas");
    objc_msgSend(v101, "contentsScale");
    v103 = v102;

    sub_100063150(v92, v93, v53, v56, v103);
  }
}

double sub_100708FAC(void *a1, void *a2, id a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double MinX;
  double v40;
  double v41;
  double MinY;
  double v43;
  double v45;
  CGRect v48;
  CGRect v49;

  objc_msgSend(a3, "unobscuredFrameOfView:", a2);
  v19 = v18;
  v21 = v20;
  sub_100708A2C(a1, a2, a3, v18, v20, a6, a7, a8, a9, a10);
  v45 = v22;
  if (!objc_msgSend(a3, "shouldCanvasScrollingSizeGrowToFitBoardContent"))
  {
    objc_msgSend(a1, "unscaledSize");
    sub_1000603DC(v23, v24, a6);
  }
  v25 = sub_10005FDDC();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = sub_1000603DC(a4, a5, a6);
  v34 = sub_1000603B8(v32, v33, v45);
  v36 = v35;
  v37 = -0.5;
  if (v19 >= v29)
  {
    v40 = 0.0;
    if (v21 >= v31)
      goto LABEL_6;
    goto LABEL_5;
  }
  v38 = v34 + v19 * -0.5;
  v48.origin.x = v25;
  v48.origin.y = v27;
  v48.size.width = v29;
  v48.size.height = v31;
  MinX = CGRectGetMinX(v48);
  v34 = sub_1003C65EC(v38, MinX, v29 - v19);
  v37 = -0.5;
  v40 = v34;
  if (v21 < v31)
  {
LABEL_5:
    v41 = v36 + v21 * v37;
    v49.origin.x = v25;
    v49.origin.y = v27;
    v49.size.width = v29;
    v49.size.height = v31;
    MinY = CGRectGetMinY(v49);
    v34 = sub_1003C65EC(v41, MinY, v31 - v21);
  }
LABEL_6:
  objc_msgSend(a2, "adjustedContentInset", v34, v37);
  return v40 - v43;
}

_QWORD *initializeWithCopy for CRLCanvasLayerAnimator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for CRLCanvasLayerAnimator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t assignWithTake for CRLCanvasLayerAnimator(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for CRLCanvasLayerAnimator()
{
  return &type metadata for CRLCanvasLayerAnimator;
}

CGFloat sub_1007092B0@<D0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>)
{
  double v20;
  double v21;
  CGFloat v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat m21;
  double v43;
  double v44;
  double v45;
  double v46;
  double MinX;
  CGFloat v48;
  double MinY;
  CGFloat Height;
  CGFloat result;
  CGFloat m11;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  double v61;
  CGFloat m22;
  double v63;
  __int128 v64;
  double v65;
  __int128 v66;
  CGFloat v67;
  CGFloat ty;
  CGFloat v69;
  CGFloat tx;
  CGFloat v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  CGFloat v76;
  CGFloat v77;
  CATransform3D t1;
  CGAffineTransform v79;
  CGAffineTransform t2;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;

  v72 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v74 = *(_OWORD *)&CGAffineTransformIdentity.a;
  ty = CGAffineTransformIdentity.ty;
  tx = CGAffineTransformIdentity.tx;
  objc_msgSend(a1, "bounds");
  v67 = v20;
  v22 = v21;
  v76 = v24;
  v77 = v23;
  v25 = sub_1000603B8(0.0, 0.0, v20);
  v61 = v26;
  v63 = v25;
  objc_msgSend(a2, "frame");
  v65 = a5;
  sub_100708A2C(a1, a2, a3, v27, v28, a5, a8, a9, a10, a11);
  v30 = v29;
  v31 = sub_100708FAC(a1, a2, a3, a6, a7, a5, a8, a9, a10, a11);
  v32 = sub_1000603B8(0.0, 0.0, v30);
  v34 = v33;
  objc_msgSend(a2, "contentOffset");
  v36 = sub_1000603B8(v63, v61, v35);
  v38 = v37;
  v39 = sub_1000603B8(v32, v34, v31);
  *(_OWORD *)&t1.m11 = v74;
  *(_OWORD *)&t1.m13 = v72;
  t1.m21 = tx;
  t1.m22 = ty;
  CGAffineTransformTranslate(&t2, (CGAffineTransform *)&t1, v39 - v36, v40 - v38);
  v73 = *(_OWORD *)&t2.c;
  v75 = *(_OWORD *)&t2.a;
  v69 = t2.ty;
  v71 = t2.tx;
  objc_msgSend(a1, "viewScale");
  CGAffineTransformMakeScale((CGAffineTransform *)&t1, v65 / v41, v65 / v41);
  v64 = *(_OWORD *)&t1.m13;
  v66 = *(_OWORD *)&t1.m11;
  m21 = t1.m21;
  m22 = t1.m22;
  objc_msgSend(a1, "anchorPoint");
  v44 = v43;
  v46 = v45;
  v81.origin.x = v67;
  v81.origin.y = v22;
  v81.size.width = v77;
  v81.size.height = v76;
  MinX = CGRectGetMinX(v81);
  v82.origin.x = v67;
  v82.origin.y = v22;
  v82.size.width = v77;
  v82.size.height = v76;
  v48 = MinX + v44 * CGRectGetWidth(v82);
  v83.origin.x = v67;
  v83.origin.y = v22;
  v83.size.width = v77;
  v83.size.height = v76;
  MinY = CGRectGetMinY(v83);
  v84.origin.x = v67;
  v84.origin.y = v22;
  v84.size.width = v77;
  v84.size.height = v76;
  Height = CGRectGetHeight(v84);
  *(_OWORD *)&t1.m11 = v66;
  *(_OWORD *)&t1.m13 = v64;
  t1.m21 = m21;
  t1.m22 = m22;
  sub_1000796D4(&t1, &t2, v48, MinY + v46 * Height);
  *(_OWORD *)&t1.m11 = *(_OWORD *)&t2.a;
  *(_OWORD *)&t1.m13 = *(_OWORD *)&t2.c;
  *(_OWORD *)&t1.m21 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = v75;
  *(_OWORD *)&t2.c = v73;
  t2.tx = v71;
  t2.ty = v69;
  CGAffineTransformConcat(&v79, (CGAffineTransform *)&t1, &t2);
  t2 = v79;
  CATransform3DMakeAffineTransform(&t1, &t2);
  result = t1.m44;
  m11 = t1.m11;
  v53 = *(_OWORD *)&t1.m13;
  v54 = *(_OWORD *)&t1.m21;
  v55 = *(_OWORD *)&t1.m23;
  v56 = *(_OWORD *)&t1.m31;
  v57 = *(_OWORD *)&t1.m34;
  v58 = *(_OWORD *)&t1.m42;
  *(_OWORD *)a4 = *(_OWORD *)&t1.m11;
  *(_OWORD *)(a4 + 16) = v53;
  *(_OWORD *)(a4 + 32) = v54;
  *(_OWORD *)(a4 + 48) = v55;
  *(_OWORD *)(a4 + 64) = v56;
  *(CGFloat *)(a4 + 80) = m11;
  *(_OWORD *)(a4 + 88) = v57;
  *(_OWORD *)(a4 + 104) = v58;
  *(CGFloat *)(a4 + 120) = result;
  return result;
}

uint64_t CRLAnalyticsOSSignpostManager.beginSignpostIntervalWithReturnedState(for:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint64_t result;
  void (*v19)(char *, char *, uint64_t);
  uint8_t *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - v11;
  v13 = 0;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) != 1)
    return v13;
  v14 = OSSignposter.logHandle.getter(v10);
  OSSignpostID.init(log:)(v14);
  v15 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(a1, a2 & 1);
  v16 = OSSignposter.logHandle.getter(v15);
  v17 = static os_signpost_type_t.begin.getter();
  result = OS_os_log.signpostsEnabled.getter();
  if ((result & 1) == 0)
  {

    v19 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    goto LABEL_6;
  }
  if (v15)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v19(v8, v12, v5);
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, v17, v21, v15, "", v20, 2u);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_6:
    v19(v8, v12, v5);
    v22 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v13 = OSSignpostIntervalState.init(id:isOpen:)(v8, 1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    return v13;
  }
  __break(1u);
  return result;
}

void CRLAnalyticsOSSignpostManager.endSignpostInterval(for:state:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  const char *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  const char *v25;
  uint64_t v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  void (*v29)(_BYTE *, uint64_t);
  __n128 v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;

  v7 = type metadata accessor for OSSignpostError(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for OSSignpostID(0);
  __chkstk_darwin(v11);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v17 = &v31[-v16];
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) == 1 && a3 != 0)
  {
    v33 = v15;
    v19 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(a1, a2 & 1);
    swift_retain(a3);
    v21 = OSSignposter.logHandle.getter(v20);
    v22 = OSSignpostIntervalState.signpostID.getter();
    v32 = static os_signpost_type_t.end.getter(v22);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      if (v19)
      {
        v23 = swift_retain(a3);
        checkForErrorAndConsumeState(state:)(v23);
        v24 = swift_release(a3);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, __n128))(v8 + 88))(v10, v7, v24) == enum case for OSSignpostError.doubleEnd(_:))
        {
          v25 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
          v25 = "";
        }
        v26 = v33;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 16))(v13, v17, v11);
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        v28 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, (os_signpost_type_t)v32, v28, v19, v25, v27, 2u);
        swift_slowDealloc(v27, -1, -1);

        v29 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
        v29(v17, v11);
        v30 = swift_release(a3);
        ((void (*)(_BYTE *, uint64_t, __n128))v29)(v13, v11, v30);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v17, v11);
      swift_release(a3);
    }
  }
}

uint64_t sub_100709A3C(uint64_t a1)
{
  return sub_100709AA8(a1, qword_10147F360, &qword_1013DD888, (id *)&static OS_os_log.realTimeSync, (uint64_t)sub_100A05DE4);
}

uint64_t sub_100709A60(uint64_t a1)
{
  return sub_100709AA8(a1, qword_10147F378, &qword_1013DD870, (id *)&static OS_os_log.dataSync, (uint64_t)sub_100A059E0);
}

uint64_t sub_100709A84(uint64_t a1)
{
  return sub_100709AA8(a1, qword_10147F390, &qword_1013DD858, (id *)&static OS_os_log.boardStore, (uint64_t)sub_100A05554);
}

uint64_t sub_100709AA8(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v9 = type metadata accessor for Logger(0);
  __chkstk_darwin(v9);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for OSSignposter(0, v12);
  sub_100501DE0(v13, a2);
  sub_1004F2A1C(v13, (uint64_t)a2);
  if (*a3 != -1)
    swift_once(a3, a5);
  swift_beginAccess(a4, v16, 0, 0);
  Logger.init(_:)(*a4);
  return OSSignposter.init(logger:)(v11);
}

id sub_100709B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  id v6;
  id result;
  uint64_t v8;

  v2 = type metadata accessor for OSSignposter(0, a2);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OSSignposter.init()(v3);
  v6 = objc_allocWithZone((Class)type metadata accessor for CRLAnalyticsOSSignpostManager(0));
  result = sub_100709D88((uint64_t)v5);
  qword_10147F3A8 = (uint64_t)result;
  return result;
}

id sub_100709C44(uint64_t a1)
{
  return sub_100709C8C(a1, &qword_1013DCFA0, (uint64_t)qword_10147F360, &qword_10147F3B0, (uint64_t)sub_100709A3C);
}

id sub_100709C68(uint64_t a1)
{
  return sub_100709C8C(a1, &qword_1013DCFA8, (uint64_t)qword_10147F378, &qword_10147F3B8, (uint64_t)sub_100709A60);
}

id sub_100709C8C(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id result;
  uint64_t v16;

  v9 = type metadata accessor for OSSignposter(0, a2);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1)
    swift_once(a2, a5);
  v13 = sub_1004F2A1C(v9, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = objc_allocWithZone((Class)type metadata accessor for CRLAnalyticsOSSignpostManager(0));
  result = sub_100709D88((uint64_t)v12);
  *a4 = result;
  return result;
}

id sub_100709D64(uint64_t a1)
{
  return sub_100709C8C(a1, &qword_1013DCFB0, (uint64_t)qword_10147F390, &qword_10147F3C0, (uint64_t)sub_100709A84);
}

id sub_100709D88(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_super v20;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList] = _swiftEmptyArrayStorage;
  v5 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled;
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = v2;
  v8 = objc_msgSend(v6, "standardUserDefaults");
  v9 = objc_msgSend(v8, "BOOLForKey:", CFSTR("enableOSSignpost"));

  v2[v5] = v9;
  v10 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock;
  v11 = type metadata accessor for CRLUnfairLock();
  v12 = swift_allocObject(v11, 24, 7);
  v13 = (_DWORD *)swift_slowAlloc(4, -1);
  *v13 = 0;
  *(_QWORD *)(v12 + 16) = v13;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)&v7[v10] = v12;
  v14 = &v7[OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signposter];
  v16 = type metadata accessor for OSSignposter(0, v15);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v14, a1, v16);

  v20.receiver = v7;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, "init");
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v18;
}

const char *CRLAnalyticsOSSignpostManager.Task.staticValue.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return (const char *)((uint64_t (*)(const char *, uint64_t))((char *)&loc_100709F2C + 4
                                                                                                 * byte_100F06FB0[a1]))("DragItem", 8);
  if (a1)
    return "KeyboardInput";
  return "MISC";
}

const char *sub_100709F40()
{
  return "CanvasZoom";
}

const char *sub_100709FE0()
{
  return "MiniFormatterOperationLatency";
}

const char *sub_100709FF4()
{
  return "SharedBoardChange";
}

const char *sub_10070A000()
{
  return "SharedItemChange";
}

const char *sub_10070A014()
{
  return "sharedAuxiliaryChange";
}

const char *sub_10070A028()
{
  return "sharedCollabCursorChange";
}

const char *sub_10070A078()
{
  return "IncomingRealTimeMessage";
}

uint64_t sub_10070A0D8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id;
  v2 = type metadata accessor for OSSignpostID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10070A130(uint64_t *a1, uint64_t *a2, __n128 a3)
{
  return sub_10070C118(*a1, *a2, a3);
}

uint64_t CRLAnalyticsOSSignpostManager.Task.hasAsymmetricContext.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    if ((unint64_t)(a1 - 9) < 8)
      return 1;
  }
  else if (a1)
  {
    return 1;
  }
  return 0;
}

uint64_t static CRLAnalyticsOSSignpostManager.Task.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_10070C1F0(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_10070A178(uint64_t a1, uint64_t a2)
{
  return sub_10070C1F0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_10070A194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s8Freeform29CRLAnalyticsOSSignpostManagerC4TaskO8allCasesSayAEGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  NSObject *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  void (*v21)(char *, char *, uint64_t);
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_unfair_lock_s *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  int v40;
  const char *v41;
  uint64_t v42;
  _BYTE v43[24];

  v4 = v3;
  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v38 - v14;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) == 1)
  {
    v16 = a2 & 1;
    result = sub_10070A4C8(a1, a2 & 1);
    if ((result & 1) != 0)
    {
      v17 = OSSignposter.logHandle.getter(result);
      OSSignpostID.init(log:)(v17);
      v41 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(a1, v16);
      v18 = OSSignposter.logHandle.getter(v41);
      v40 = static os_signpost_type_t.begin.getter();
      result = OS_os_log.signpostsEnabled.getter();
      v42 = a3;
      if ((result & 1) != 0)
      {
        if (!v41)
        {
          __break(1u);
          return result;
        }
        v39 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
        v39(v12, v15, v8);
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        v20 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, (os_signpost_type_t)v40, v20, v41, "", v19, 2u);
        swift_slowDealloc(v19, -1, -1);

        v21 = v39;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
      else
      {

        v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      }
      v22 = v16 != 0;
      v21(v12, v15, v8);
      v23 = type metadata accessor for OSSignpostIntervalState(0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v24 = OSSignpostIntervalState.init(id:isOpen:)(v12, 1);
      v25 = swift_release(v24);
      ((void (*)(char *, char *, uint64_t, __n128))v21)(v12, v15, v8, v25);
      v26 = type metadata accessor for CRLAnalyticsOSSignpostManager.CRLSignpostContext(0);
      v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
      v28 = v42;
      *(_QWORD *)(v27 + 16) = v42;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v27 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id, v12, v8);
      v29 = v27 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task;
      *(_QWORD *)v29 = a1;
      *(_BYTE *)(v29 + 8) = v22;
      v30 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock;
      v31 = *(os_unfair_lock_s **)(*(_QWORD *)(v4
                                             + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock)
                                 + 16);
      swift_bridgeObjectRetain(v28);
      os_unfair_lock_lock(v31);
      v32 = (_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList);
      swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList, v43, 33, 0);
      swift_retain(v27);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v35 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v27);
      specialized Array._endMutation()(v36);
      swift_endAccess(v43);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v4 + v30) + 16));
      v37 = swift_release(v27);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v15, v8, v37);
    }
  }
  return result;
}

uint64_t sub_10070A4C8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];

  v5 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v2
                                                      + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock)
                                          + 16));
  v6 = 1;
  if ((a2 & 1) != 0 || !a1)
    goto LABEL_34;
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList, v21, 0, 0);
  v6 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v8)
      goto LABEL_5;
LABEL_23:
    swift_bridgeObjectRelease(v6);
    v8 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_30;
    goto LABEL_24;
  }
  if (v6 < 0)
    v14 = *v7;
  else
    v14 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v8 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v8)
    goto LABEL_23;
LABEL_5:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v20 = v5;
  for (i = 0; i != v8; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    }
    else
    {
      v10 = *(_QWORD *)(v6 + 8 * i + 32);
      swift_retain(v10);
    }
    v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
    if ((*(_BYTE *)(v10 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
      __asm { BR              X8 }
    if (v11 && (static Selector.== infix(_:_:)(v11, a1) & 1) != 0)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized ContiguousArray._endMutation()(v13);
    }
    else
    {
      swift_release(v10);
    }
  }
  swift_bridgeObjectRelease(v6);
  v8 = (uint64_t)_swiftEmptyArrayStorage;
  v5 = v20;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_30;
LABEL_24:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v15 = _swiftEmptyArrayStorage[2];
    goto LABEL_26;
  }
LABEL_30:
  v17 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v15 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_release(_swiftEmptyArrayStorage);
LABEL_26:
  v6 = v15 == 0;
  if (!v15)
  {
LABEL_33:
    swift_release(v8);
    goto LABEL_34;
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_32:
    v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
    swift_unknownObjectRelease(v18);
    goto LABEL_33;
  }
  v16 = _swiftEmptyArrayStorage[2];
  swift_release(_swiftEmptyArrayStorage);
  if (!v16)
  {
    __break(1u);
    JUMPOUT(0x10070A718);
  }
  v6 = 0;
LABEL_34:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v2 + v5) + 16));
  return v6;
}

Swift::Void __swiftcall CRLAnalyticsOSSignpostManager.beginSignpostInterval(name:with:)(NSString name, Swift::OpaquePointer with)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  NSString v14;
  double *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  NSObject *v21;
  int v22;
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  uint8_t *v24;
  os_signpost_id_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __n128 v40;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  int v44;
  void *rawValue;
  _BYTE v46[32];

  v3 = v2;
  v6 = type metadata accessor for OSSignpostID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v41[-v11];
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) == 1)
  {
    v13 = _s8Freeform29CRLAnalyticsOSSignpostManagerC4TaskO8allCasesSayAEGvgZ_0();
    v14 = name;
    v15 = sub_10070CB98(v13, v14);
    swift_bridgeObjectRelease(v13);

    if (!*((_QWORD *)v15 + 2))
    {
      swift_bridgeObjectRelease(v15);
      return;
    }
    rawValue = with._rawValue;
    v16 = *((_QWORD *)v15 + 4);
    v17 = *((unsigned __int8 *)v15 + 40);
    swift_bridgeObjectRelease(v15);
    v19 = OSSignposter.logHandle.getter(v18);
    OSSignpostID.init(log:)(v19);
    v44 = v17;
    v20 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(v16, v17);
    v21 = OSSignposter.logHandle.getter(v20);
    v22 = static os_signpost_type_t.begin.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      v42 = v22;
      v43 = v16;
      if (!v20)
      {
        __break(1u);
        return;
      }
      v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
      v23(v9, v12, v6);
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      v25 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, (os_signpost_type_t)v42, v25, v20, "", v24, 2u);
      swift_slowDealloc(v24, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      v16 = v43;
    }
    else
    {

      v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
    }
    v23(v9, v12, v6);
    v26 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v27 = OSSignpostIntervalState.init(id:isOpen:)(v9, 1);
    v28 = swift_release(v27);
    ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v23)(v9, v12, v6, v28);
    v29 = type metadata accessor for CRLAnalyticsOSSignpostManager.CRLSignpostContext(0);
    v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v31 = rawValue;
    *(_QWORD *)(v30 + 16) = rawValue;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v30 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id, v9, v6);
    v32 = v30 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task;
    *(_QWORD *)v32 = v16;
    *(_BYTE *)(v32 + 8) = v44;
    v33 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock;
    v34 = *(os_unfair_lock_s **)(*(_QWORD *)(v3
                                           + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock)
                               + 16);
    swift_bridgeObjectRetain(v31);
    os_unfair_lock_lock(v34);
    v35 = (_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList);
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList, v46, 33, 0);
    swift_retain(v30);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v30);
    specialized Array._endMutation()(v39);
    swift_endAccess(v46);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v3 + v33) + 16));
    v40 = swift_release(v30);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v12, v6, v40);
  }
}

void CRLAnalyticsOSSignpostManager.emitSignpostEvent(for:with:)(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  NSObject *v16;
  char v17;

  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) == 1)
  {
    v16 = OSSignposter.logHandle.getter(v10);
    v13 = static os_signpost_type_t.event.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
    {
LABEL_6:

      return;
    }
    if ((a4 & 1) == 0)
    {
      if (!a2)
      {
        __break(1u);
        goto LABEL_6;
      }
      goto LABEL_11;
    }
    if ((unint64_t)a2 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (a2 >> 11 == 27)
      {
LABEL_15:
        __break(1u);
        return;
      }
      if (a2 >> 16 <= 0x10)
      {
        a2 = &v17;
LABEL_11:
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        v15 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, v13, v15, a2, "", v14, 2u);
        swift_slowDealloc(v14, -1, -1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        return;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
}

Swift::Void __swiftcall CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(CRLCanvasRep_optional *a1)
{
  sub_10070BB6C((uint64_t)a1, (uint64_t (*)(uint64_t))sub_10070AD00);
}

uint64_t sub_10070AD00(void *a1)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  _BYTE v39[24];
  int64_t v40[4];
  _BYTE v41[24];

  v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList, v41, 0, 0);
  v4 = *v3;
  v5 = a1;
  swift_bridgeObjectRetain(v4);
  v6 = 0;
  v8 = (int64_t)sub_10070C48C(v7, a1);
  swift_bridgeObjectRelease(v4);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v9 = v8;
    else
      v9 = v8 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v9))
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if ((v8 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
      goto LABEL_6;
    }
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v6 = *(_QWORD *)(v8 + 32);
      swift_retain(v6);
LABEL_6:
      swift_bridgeObjectRelease(v8);
LABEL_40:
      v17 = *v3;
      swift_bridgeObjectRetain(*v3);
      v8 = sub_100C1A834(v6, v17);
      v19 = v18;
      swift_bridgeObjectRelease(v17);
      if ((v19 & 1) != 0)
      {
LABEL_54:
        v30 = v6;
LABEL_58:
        swift_release(v30);
        return 0;
      }
      if (!a1)
      {
        swift_beginAccess(v6 + 16, v40, 0, 0);
        v10 = *(_QWORD *)(v6 + 16);
        if ((unint64_t)v10 >> 62)
          goto LABEL_64;
        if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_48;
      }
LABEL_44:
      v20 = *(_QWORD *)(v6 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
      if ((*(_BYTE *)(v6 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
      {
        if ((unint64_t)(v20 - 9) < 8)
          goto LABEL_48;
      }
      else if (v20)
      {
        goto LABEL_48;
      }
      if (!a1)
        goto LABEL_54;
      swift_beginAccess(v6 + 16, v39, 0, 0);
      v22 = *(_QWORD *)(v6 + 16);
      v23 = v5;
      swift_bridgeObjectRetain(v22);
      sub_100C1B43C((uint64_t)v23, v22);
      v25 = v24;
      v27 = v26;
      swift_bridgeObjectRelease(v22);
      if ((v27 & 1) != 0)
      {
        swift_release(v6);

        return 0;
      }
      swift_beginAccess(v6 + 16, v38, 33, 0);
      v28 = (void *)sub_100C5C9AC(v25);
      swift_endAccess(v38);

      v29 = *(_QWORD *)(v6 + 16);
      if ((unint64_t)v29 >> 62)
      {
        if (v29 < 0)
          v35 = *(_QWORD *)(v6 + 16);
        else
          v35 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)(v6 + 16));
        v36 = _CocoaArrayWrapper.endIndex.getter(v35);
        swift_bridgeObjectRelease(v29);
        if (v36)
          goto LABEL_53;
      }
      else if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_53:

        goto LABEL_54;
      }
      swift_beginAccess(v3, v38, 33, 0);
      v37 = sub_100C5C9AC(v25);
      swift_endAccess(v38);
      swift_release(v37);

      return v6;
    }
    __break(1u);
LABEL_29:
    if (v6 < 0)
      v8 = v6;
    else
      v8 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v10 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v10)
    {
LABEL_33:
      swift_bridgeObjectRelease(v6);
      v8 = (int64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_56;
      goto LABEL_34;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRelease(v8);
  v6 = *v3;
  v40[0] = (int64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v6 >> 62)
    goto LABEL_29;
  v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v6);
  if (!v10)
    goto LABEL_33;
LABEL_13:
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_62;
  }
  for (i = 0; i != v10; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      v13 = v12;
    }
    else
    {
      v13 = *(_QWORD *)(v6 + 8 * i + 32);
      swift_retain(v13);
    }
    v14 = *(_QWORD *)(v13 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
    if ((*(_BYTE *)(v13 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
    {
      if ((unint64_t)(v14 - 9) >= 8)
        goto LABEL_15;
    }
    else if (!v14)
    {
LABEL_15:
      swift_release(v13);
      continue;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v15 = *(_QWORD *)(v40[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
    v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized ContiguousArray._endMutation()(v16);
  }
  swift_bridgeObjectRelease(v6);
  v8 = v40[0];
  if ((v40[0] & 0x8000000000000000) == 0)
  {
LABEL_34:
    if ((v8 & 0x4000000000000000) != 0)
      goto LABEL_56;
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_36;
LABEL_57:
    v30 = v8;
    goto LABEL_58;
  }
LABEL_56:
  swift_bridgeObjectRetain(v8);
  v6 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_release(v8);
  if (!v6)
    goto LABEL_57;
LABEL_36:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_62:
    v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
LABEL_39:
    swift_release(v8);
    goto LABEL_40;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v6 = *(_QWORD *)(v8 + 32);
    swift_retain(v6);
    goto LABEL_39;
  }
  __break(1u);
LABEL_64:
  if (v10 < 0)
    v33 = v10;
  else
    v33 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v10);
  if (v34)
    goto LABEL_44;
LABEL_48:
  swift_beginAccess(v3, v39, 33, 0);
  v21 = sub_100C5C9AC(v8);
  swift_endAccess(v39);
  swift_release(v21);
  return v6;
}

void CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  NSObject *v25;
  uint64_t v26;
  os_signpost_type_t v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  int v34;
  const char *v35;
  uint8_t *v36;
  os_signpost_id_t v37;
  void (*v38)(char *, uint64_t);
  __n128 v39;
  const char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = type metadata accessor for OSSignpostError(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OSSignpostID(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v16 = (char *)&v40 - v15;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) == 1)
  {
    v45 = v14;
    v17 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v3
                                                        + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock)
                                            + 16));
    v18 = sub_10070B554(a1, a2 & 1);
    if (v18)
    {
      v19 = v10;
      v20 = v18;
      v42 = *(void (**)(char *, uint64_t))(v45 + 16);
      v43 = v19;
      v42(v16, v18 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id);
      v21 = type metadata accessor for OSSignpostIntervalState(0);
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      v22 = OSSignpostIntervalState.init(id:isOpen:)(v16, 1);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v3 + v17) + 16));
      v23 = v20;
      v24 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(*(_QWORD *)(v20 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task), *(_BYTE *)(v20 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8));
      v25 = OSSignposter.logHandle.getter(v24);
      v44 = v22;
      v26 = OSSignpostIntervalState.signpostID.getter();
      v27 = static os_signpost_type_t.end.getter(v26);
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v28 = v24;
        v29 = v43;
        v41 = v23;
        if (v28)
        {
          v30 = v28;
          v31 = v44;
          v32 = swift_retain(v44);
          checkForErrorAndConsumeState(state:)(v32);
          v33 = swift_release(v31);
          v34 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 88))(v9, v6, v33);
          v40 = v30;
          if (v34 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v35 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            v35 = "";
          }
          ((void (*)(char *, char *, uint64_t))v42)(v16, v13, v29);
          v36 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v36 = 0;
          v37 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v27, v37, v40, v35, v36, 2u);
          swift_slowDealloc(v36, -1, -1);
          swift_release(v41);

          v38 = *(void (**)(char *, uint64_t))(v45 + 8);
          v38(v13, v29);
          v39 = swift_release(v44);
          ((void (*)(char *, uint64_t, __n128))v38)(v16, v29, v39);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        swift_release(v23);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v43);
        swift_release(v44);
      }
    }
    else
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v3 + v17) + 16));
    }
  }
}

uint64_t sub_10070B554(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  _BYTE v24[32];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList, v24, 0, 0);
  v6 = *v5;
  v23[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v2 = v6;
    else
      v2 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (v7)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease(v6);
    v2 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_33;
    goto LABEL_25;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v6);
  if (!v7)
    goto LABEL_24;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_38:
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    goto LABEL_30;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    }
    else
    {
      v9 = *(_QWORD *)(v6 + 8 * i + 32);
      swift_retain(v9);
    }
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
    if ((*(_BYTE *)(v9 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
      __asm { BR              X9 }
    if (v10)
    {
      if (a2 & 1 | (a1 == 0) || (v10 = static Selector.== infix(_:_:)(v10, a1), (v10 & 1) == 0))
      {
LABEL_5:
        swift_release(v9);
        continue;
      }
    }
    else if (a2 & 1 | (a1 != 0))
    {
      goto LABEL_5;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v11 = *(_QWORD *)(v23[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
    v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
    specialized ContiguousArray._endMutation()(v12);
  }
  swift_bridgeObjectRelease(v6);
  v2 = v23[0];
  if ((v23[0] & 0x8000000000000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x4000000000000000) != 0)
      goto LABEL_33;
    if (*(_QWORD *)(v2 + 16))
      goto LABEL_27;
LABEL_34:
    v19 = v2;
    goto LABEL_35;
  }
LABEL_33:
  swift_bridgeObjectRetain(v2);
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_release(v2);
  if (!v21)
    goto LABEL_34;
LABEL_27:
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_38;
  if (!*(_QWORD *)(v2 + 16))
  {
    __break(1u);
    JUMPOUT(0x10070BAE8);
  }
  v13 = *(_QWORD *)(v2 + 32);
  swift_retain(v13);
LABEL_30:
  swift_release(v2);
  v14 = *v5;
  swift_bridgeObjectRetain(*v5);
  v15 = sub_100C1A834(v13, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v14);
  if ((v17 & 1) != 0)
  {
    v19 = v13;
LABEL_35:
    swift_release(v19);
    return 0;
  }
  swift_beginAccess(v5, v23, 33, 0);
  v18 = sub_100C5C9AC(v15);
  swift_endAccess(v23);
  swift_release(v18);
  return v13;
}

Swift::Void __swiftcall CRLAnalyticsOSSignpostManager.endSignpostInterval(name:)(NSString name)
{
  sub_10070BB6C((uint64_t)name, (uint64_t (*)(uint64_t))sub_10070BEA4);
}

void sub_10070BB6C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  NSObject *v25;
  uint64_t v26;
  os_signpost_type_t v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  int v34;
  const char *v35;
  uint8_t *v36;
  os_signpost_id_t v37;
  void (*v38)(char *, uint64_t);
  __n128 v39;
  const char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = v2;
  v6 = type metadata accessor for OSSignpostError(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OSSignpostID(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v40 - v15;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_signpostsEnabled) == 1)
  {
    v45 = v14;
    v17 = OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v4
                                                        + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager_contextAccessLock)
                                            + 16));
    v18 = a2(a1);
    if (v18)
    {
      v19 = v10;
      v20 = v18;
      v42 = *(void (**)(char *, uint64_t))(v45 + 16);
      v43 = v19;
      v42(v16, v18 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id);
      v21 = type metadata accessor for OSSignpostIntervalState(0);
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      v22 = OSSignpostIntervalState.init(id:isOpen:)(v16, 1);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v4 + v17) + 16));
      v23 = v20;
      v24 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(*(_QWORD *)(v20 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task), *(_BYTE *)(v20 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8));
      v25 = OSSignposter.logHandle.getter(v24);
      v44 = v22;
      v26 = OSSignpostIntervalState.signpostID.getter();
      v27 = static os_signpost_type_t.end.getter(v26);
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v28 = v24;
        v29 = v43;
        v41 = v23;
        if (v28)
        {
          v30 = v28;
          v31 = v44;
          v32 = swift_retain(v44);
          checkForErrorAndConsumeState(state:)(v32);
          v33 = swift_release(v31);
          v34 = (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 88))(v9, v6, v33);
          v40 = v30;
          if (v34 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v35 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            v35 = "";
          }
          ((void (*)(char *, char *, uint64_t))v42)(v16, v12, v29);
          v36 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v36 = 0;
          v37 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v27, v37, v40, v35, v36, 2u);
          swift_slowDealloc(v36, -1, -1);
          swift_release(v41);

          v38 = *(void (**)(char *, uint64_t))(v45 + 8);
          v38(v12, v29);
          v39 = swift_release(v44);
          ((void (*)(char *, uint64_t, __n128))v38)(v16, v29, v39);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        swift_release(v23);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v43);
        swift_release(v44);
      }
    }
    else
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v4 + v17) + 16));
    }
  }
}

uint64_t sub_10070BEA4(void *a1)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];
  _BYTE v17[24];

  v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAnalyticsOSSignpostManager__unsafe_contextList);
  swift_beginAccess(v3, v17, 0, 0);
  v4 = *v3;
  v5 = a1;
  swift_bridgeObjectRetain(v4);
  v7 = (uint64_t)sub_10070C774(v6, (uint64_t)v5);
  swift_bridgeObjectRelease(v4);

  if (!((unint64_t)v7 >> 62))
  {
    result = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 0;
  }
  if (v7 < 0)
    v15 = v7;
  else
    v15 = v7 & 0xFFFFFFFFFFFFFF8;
  result = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!result)
    goto LABEL_13;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(_QWORD *)(v7 + 32);
    swift_retain(v9);
LABEL_6:
    swift_bridgeObjectRelease(v7);
    v10 = *v3;
    swift_bridgeObjectRetain(*v3);
    v11 = sub_100C1A834(v9, v10);
    v13 = v12;
    swift_bridgeObjectRelease(v10);
    if ((v13 & 1) == 0)
    {
      swift_beginAccess(v3, v16, 33, 0);
      v14 = sub_100C5C9AC(v11);
      swift_endAccess(v16);
      swift_release(v14);
      return v9;
    }
    swift_release(v9);
    return 0;
  }
  __break(1u);
  return result;
}

void CRLAnalyticsOSSignpostManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLAnalyticsOSSignpostManager", 38, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_10070C118(uint64_t a1, uint64_t a2, __n128 a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  if ((static OSSignpostID.== infix(_:_:)(a1 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id, a2 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id, a3) & 1) != 0)
  {
    v5 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(*(_QWORD *)(a1 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task), *(_BYTE *)(a1 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8));
    v7 = StaticString.description.getter(v5, v6, 2);
    v9 = v8;
    v10 = CRLAnalyticsOSSignpostManager.Task.staticValue.getter(*(_QWORD *)(a2 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task), *(_BYTE *)(a2 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8));
    v12 = StaticString.description.getter(v10, v11, 2);
    if (v7 == v12 && v9 == v13)
    {
      v16 = 1;
      v15 = v9;
    }
    else
    {
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v12, v13, 0);
    }
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10070C1F0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    return ((uint64_t (*)(void))((char *)&loc_10070C220 + 4 * byte_100F06FCE[a1]))();
  if (a1)
  {
    if ((a4 & 1) == 0 && a3)
      return static Selector.== infix(_:_:)(a1, a3);
  }
  else if ((a4 & 1) == 0 && !a3)
  {
    return 1;
  }
  return 0;
}

double *sub_10070C48C(unint64_t a1, void *a2)
{
  int64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36[24];
  double *v37;

  v3 = a1;
  v37 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_42;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v29))
  {
    v30 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v34 = v3 + 32;
    v35 = v3 & 0xFFFFFFFFFFFFFF8;
    v31 = v3 & 0xC000000000000001;
    v32 = i;
    while (1)
    {
      if (v6)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v30);
        v8 = v7;
        v11 = __OFADD__(v5++, 1);
        if (v11)
          goto LABEL_39;
      }
      else
      {
        if (v5 >= *(_QWORD *)(v35 + 16))
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        v8 = *(_QWORD *)(v34 + 8 * v5);
        swift_retain(v8);
        v11 = __OFADD__(v5++, 1);
        if (v11)
          goto LABEL_39;
      }
      if (!a2)
        goto LABEL_5;
      swift_beginAccess(v8 + 16, v36, 0, 0);
      v12 = *(_QWORD *)(v8 + 16);
      if ((unint64_t)v12 >> 62)
      {
        if (v12 < 0)
          v26 = *(_QWORD *)(v8 + 16);
        else
          v26 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*(_QWORD *)(v8 + 16), 2);
        v27 = a2;
        v13 = _CocoaArrayWrapper.endIndex.getter(v26);
        if (!v13)
        {
LABEL_35:
          swift_release(v8);

          swift_bridgeObjectRelease_n(v12, 2);
          goto LABEL_6;
        }
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(*(_QWORD *)(v8 + 16), 2);
        v14 = a2;
        if (!v13)
          goto LABEL_35;
      }
      v33 = v8;
      v15 = (v12 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12)
          : *(id *)(v12 + 32);
      v16 = v15;
      v3 = sub_1004F6160();
      v17 = a2;
      v18 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v18 & 1) == 0)
        break;
LABEL_4:
      a2 = v17;

      v7 = swift_bridgeObjectRelease_n(v12, 2);
      v6 = v31;
      i = v32;
      v8 = v33;
LABEL_5:
      v3 = (int64_t)&v37;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v9 = *((_QWORD *)v37 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
      specialized ContiguousArray._endMutation()(v10);
LABEL_6:
      if (v5 == i)
        return v37;
    }
    if (v13 == 1)
    {
LABEL_27:
      swift_release(v33);
      a2 = v17;

      swift_bridgeObjectRelease_n(v12, 2);
      v6 = v31;
      i = v32;
      goto LABEL_6;
    }
    if ((v12 & 0xC000000000000001) != 0)
    {
      v19 = 1;
      while (1)
      {
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v12);
        a2 = (void *)(v19 + 1);
        if (__OFADD__(v19, 1))
          goto LABEL_40;
        v21 = v20;
        v22 = static NSObject.== infix(_:_:)(v20, v17);
        swift_unknownObjectRelease(v21);
        if ((v22 & 1) != 0)
          goto LABEL_4;
        ++v19;
        if (a2 == (void *)v13)
          goto LABEL_27;
      }
    }
    v23 = 5;
    while (1)
    {
      a2 = (void *)(v23 - 3);
      if (__OFADD__(v23 - 4, 1))
        break;
      v24 = *(id *)(v12 + 8 * v23);
      v25 = static NSObject.== infix(_:_:)(v24, v17);

      if ((v25 & 1) != 0)
        goto LABEL_4;
      ++v23;
      if (a2 == (void *)v13)
        goto LABEL_27;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    if (v3 < 0)
      v29 = v3;
    else
      v29 = v3 & 0xFFFFFFFFFFFFFF8;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10070C774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_24;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        v6 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_21:
          __break(1u);
          return _swiftEmptyArrayStorage;
        }
LABEL_9:
        v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
        if ((*(_BYTE *)(v5 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
          __asm { BR              X9 }
        if (v7)
        {
          v8 = "KeyboardInput";
          v9 = 13;
        }
        else
        {
          v8 = "MISC";
          v9 = 4;
        }
        v10 = StaticString.description.getter(v8, v9, 2);
        v12 = v11;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
        v15 = v13;
        if (v10 == v14 && v12 == v13)
        {
          v16 = swift_bridgeObjectRelease_n(v12, 2);
LABEL_18:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v18 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v5);
          specialized ContiguousArray._endMutation()(v19);
          goto LABEL_5;
        }
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);
        swift_bridgeObjectRelease(v12);
        v16 = swift_bridgeObjectRelease(v15);
        if ((v17 & 1) != 0)
          goto LABEL_18;
        swift_release(v5);
LABEL_5:
        ++v4;
        if (v6 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_24:
      if (a1 < 0)
        v21 = a1;
      else
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
    swift_retain(v5);
    v6 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_21;
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_10070CB98(uint64_t a1, void *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;
  char v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  double *v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  uint64_t v22;
  unint64_t v23;
  double *v24;
  uint64_t v26;

  v2 = 0;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 40;
  v26 = -(uint64_t)v3;
  v23 = v3;
  v24 = _swiftEmptyArrayStorage;
  v22 = a1 + 40;
LABEL_2:
  if (v2 > v3)
    v3 = v2;
  v5 = -(uint64_t)v3;
  v6 = v2 + 1;
  v7 = (_BYTE *)(v4 + 16 * v2);
  while (v26 + v6 != 1)
  {
    v2 = v6++;
    if (v5 + v6 == 2)
    {
      __break(1u);
      JUMPOUT(0x10070CF2CLL);
    }
    v9 = *((_QWORD *)v7 - 1);
    v10 = *v7;
    if ((*v7 & 1) != 0)
      __asm { BR              X8 }
    if (v9)
    {
      v11 = "KeyboardInput";
      v12 = 13;
    }
    else
    {
      v11 = "MISC";
      v12 = 4;
    }
    v13 = StaticString.description.getter(v11, v12, 2);
    v15 = v14;
    v16 = String.init(_:)(a2);
    if (v13 == v16._countAndFlagsBits && v15 == v16._object)
    {
      swift_bridgeObjectRelease_n(v15, 2);
LABEL_16:
      v17 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
      {
        sub_100600B84(0, *((_QWORD *)v24 + 2) + 1, 1);
        v17 = v24;
      }
      v4 = v22;
      v19 = *((_QWORD *)v17 + 2);
      v18 = *((_QWORD *)v17 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_100600B84(v18 > 1, v19 + 1, 1);
        v17 = v24;
      }
      *((_QWORD *)v17 + 2) = v19 + 1;
      v24 = v17;
      v20 = &v17[2 * v19];
      *((_QWORD *)v20 + 4) = v9;
      *((_BYTE *)v20 + 40) = v10;
      v3 = v23;
      goto LABEL_2;
    }
    v7 += 16;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16._countAndFlagsBits, v16._object, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v16._object);
    if ((v8 & 1) != 0)
      goto LABEL_16;
  }
  return v24;
}

uint64_t _s8Freeform29CRLAnalyticsOSSignpostManagerC4TaskO8allCasesSayAEGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1004B804C(&qword_1013EEDA8);
  v1 = swift_allocObject(v0, 512, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100F070F0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 64) = 1;
  *(_BYTE *)(v1 + 72) = 1;
  *(_QWORD *)(v1 + 80) = 2;
  *(_BYTE *)(v1 + 88) = 1;
  *(_QWORD *)(v1 + 96) = 3;
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 112) = 4;
  *(_BYTE *)(v1 + 120) = 1;
  *(_QWORD *)(v1 + 128) = 5;
  *(_BYTE *)(v1 + 136) = 1;
  *(_QWORD *)(v1 + 144) = 6;
  *(_BYTE *)(v1 + 152) = 1;
  *(_QWORD *)(v1 + 160) = 7;
  *(_BYTE *)(v1 + 168) = 1;
  *(_QWORD *)(v1 + 176) = 8;
  *(_BYTE *)(v1 + 184) = 1;
  *(_QWORD *)(v1 + 192) = 9;
  *(_BYTE *)(v1 + 200) = 1;
  *(_QWORD *)(v1 + 208) = 10;
  *(_BYTE *)(v1 + 216) = 1;
  *(_QWORD *)(v1 + 224) = 11;
  *(_BYTE *)(v1 + 232) = 1;
  *(_QWORD *)(v1 + 240) = 12;
  *(_BYTE *)(v1 + 248) = 1;
  *(_QWORD *)(v1 + 256) = 13;
  *(_BYTE *)(v1 + 264) = 1;
  *(_QWORD *)(v1 + 272) = 14;
  *(_BYTE *)(v1 + 280) = 1;
  *(_QWORD *)(v1 + 288) = 15;
  *(_BYTE *)(v1 + 296) = 1;
  *(_QWORD *)(v1 + 304) = Selector.init(_:)(0, 0xE000000000000000);
  *(_BYTE *)(v1 + 312) = 0;
  *(_QWORD *)(v1 + 320) = 18;
  *(_BYTE *)(v1 + 328) = 1;
  *(_QWORD *)(v1 + 336) = 19;
  *(_BYTE *)(v1 + 344) = 1;
  *(_QWORD *)(v1 + 352) = 20;
  *(_BYTE *)(v1 + 360) = 1;
  *(_QWORD *)(v1 + 368) = 21;
  *(_BYTE *)(v1 + 376) = 1;
  *(_QWORD *)(v1 + 384) = 22;
  *(_BYTE *)(v1 + 392) = 1;
  *(_QWORD *)(v1 + 400) = 23;
  *(_BYTE *)(v1 + 408) = 1;
  *(_QWORD *)(v1 + 416) = 24;
  *(_BYTE *)(v1 + 424) = 1;
  *(_QWORD *)(v1 + 432) = 25;
  *(_BYTE *)(v1 + 440) = 1;
  *(_QWORD *)(v1 + 448) = 26;
  *(_BYTE *)(v1 + 456) = 1;
  *(_QWORD *)(v1 + 464) = 27;
  *(_BYTE *)(v1 + 472) = 1;
  *(_QWORD *)(v1 + 480) = 28;
  *(_BYTE *)(v1 + 488) = 1;
  *(_QWORD *)(v1 + 496) = 29;
  *(_BYTE *)(v1 + 504) = 1;
  return v1;
}

uint64_t type metadata accessor for CRLAnalyticsOSSignpostManager.CRLSignpostContext(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EECF8, (uint64_t)&nominal type descriptor for CRLAnalyticsOSSignpostManager.CRLSignpostContext);
}

unint64_t sub_10070D170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EEC88;
  if (!qword_1013EEC88)
  {
    v1 = sub_1004CB6A4(&qword_1013EEC90);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013EEC88);
  }
  return result;
}

uint64_t sub_10070D1BC()
{
  return type metadata accessor for CRLAnalyticsOSSignpostManager(0);
}

uint64_t type metadata accessor for CRLAnalyticsOSSignpostManager(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EECC0, (uint64_t)&nominal type descriptor for CRLAnalyticsOSSignpostManager);
}

uint64_t sub_10070D1D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for OSSignposter(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[2] = &unk_100F07070;
    v5[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10070D268()
{
  return type metadata accessor for CRLAnalyticsOSSignpostManager.CRLSignpostContext(0);
}

uint64_t sub_10070D270(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for OSSignpostID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\t";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10070D2F4(uint64_t a1)
{
  int v2;

  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v2 = -1;
  else
    v2 = 0;
  return (v2 + 1);
}

uint64_t sub_10070D320(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAnalyticsOSSignpostManager.Task()
{
  return &type metadata for CRLAnalyticsOSSignpostManager.Task;
}

unint64_t sub_10070D35C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks, v10, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v8);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v2);
    swift_bridgeObjectRelease(v2);
    v6 = *(unsigned __int16 *)(v9 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
    v7 = *(unsigned __int16 *)(v9 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
    swift_unknownObjectRelease(v9);
    return v6 == v7;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(v2 + 8 * result + 32);
    swift_retain(v5);
    swift_bridgeObjectRelease(v2);
    v6 = *(unsigned __int16 *)(v5 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
    v7 = *(unsigned __int16 *)(v5 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
    swift_release(v5);
    return v6 == v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10070D4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  _BYTE *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v2 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks) = _swiftEmptyArrayStorage;
  if (*(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
  {
    v4 = sub_10070DD18();
    swift_allocError(&type metadata for CRLChunkedRealTimeMessageBufferError, v4, 0, 0);
    *v5 = 3;
    swift_willThrow(v6);
    swift_release(a1);
    swift_bridgeObjectRelease(*(_QWORD *)(v1
                                        + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks));
    v7 = type metadata accessor for CRLContiguousChunkedRealTimeMessageBuffer(0);
    swift_deallocPartialClassInstance(v1, v7, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
  }
  else
  {
    v8 = a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID;
    v9 = v2 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chainID;
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_encrypted) = *(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted);
    v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks, v17, 33, 0);
    swift_retain(a1);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, a1);
    specialized Array._endMutation()(v15);
    swift_endAccess(v17);
    swift_release(a1);
  }
  return v2;
}

void sub_10070D650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  int v23;
  int v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks, v26, 0, 0);
  v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v4);
    if (v6)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v5);
    sub_100757E04(&_mh_execute_header, (uint64_t)"append(_:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLContiguousChunkedRealTimeMessageBuffer.swift", 115, 2, 43, "Logic error. At the time of appending a chunk we must already have at least one item in the chunks array", 104, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"append(_:)", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLContiguousChunkedRealTimeMessageBuffer.swift", 115, 2u, 43, (uint64_t)"Logic error. At the time of appending a chunk we must already have at least one item in the chunks array", 104, 2u);
    return;
  }
  if (v5 < 0)
    v15 = *v4;
  else
    v15 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v6 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v6)
    goto LABEL_22;
LABEL_3:
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
  }
  else if ((v5 & 0xC000000000000001) == 0)
  {
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v2 = *(_QWORD *)(v5 + 8 * v7 + 32);
      swift_retain(v2);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_27;
  }
  v2 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
LABEL_8:
  swift_bridgeObjectRelease(v5);
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_encrypted))
  {
    v8 = 2;
LABEL_39:
    v19 = sub_10070DD18();
    swift_allocError(&type metadata for CRLChunkedRealTimeMessageBufferError, v19, 0, 0);
    *v20 = v8;
    swift_willThrow(v21);
    goto LABEL_40;
  }
  v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v4);
    if (v9)
      goto LABEL_12;
LABEL_31:
    swift_bridgeObjectRelease(v5);
    goto LABEL_32;
  }
LABEL_27:
  if (v5 < 0)
    v16 = v5;
  else
    v16 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v9 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v9)
    goto LABEL_31;
LABEL_12:
  v11 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
LABEL_42:
    v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v5);
    swift_bridgeObjectRelease(v5);
    v23 = *(unsigned __int16 *)(v22 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
    v24 = *(unsigned __int16 *)(v22 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
    swift_unknownObjectRelease(v22);
    if (v23 == v24)
      goto LABEL_17;
    goto LABEL_32;
  }
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_42;
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  v10 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 >= v10)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v5 + 1, 1);
    goto LABEL_36;
  }
  v12 = *(_QWORD *)(v5 + 8 * v11 + 32);
  swift_retain(v12);
  swift_bridgeObjectRelease(v5);
  v13 = *(unsigned __int16 *)(v12 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
  v14 = *(unsigned __int16 *)(v12 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
  swift_release(v12);
  if (v13 == v14)
  {
LABEL_17:
    v8 = 1;
    goto LABEL_39;
  }
LABEL_32:
  if ((static UUID.== infix(_:_:)(v1 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chainID) & 1) == 0)
  {
    v8 = 0;
    goto LABEL_39;
  }
  if (!*(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index)
    || *(unsigned __int16 *)(v2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) != (unsigned __int16)(*(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) - 1))
  {
    v8 = 3;
    goto LABEL_39;
  }
  swift_beginAccess(v4, v25, 33, 0);
  swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v5 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v5 >= v10 >> 1)
    goto LABEL_46;
LABEL_36:
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, a1);
  specialized Array._endMutation()(v18);
  swift_endAccess(v25);
LABEL_40:
  swift_release(v2);
}

void sub_10070DA20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  __int128 v10;

  v10 = xmmword_100EF78C0;
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v8);
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        v5 = *(_QWORD *)(v2 + 8 * v4 + 32);
        swift_retain(v5);
      }
      ++v4;
      v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
      v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8);
      sub_1004BE310(v6, v7);
      Data.append(_:)(v6, v7);
      sub_1004BBBC8(v6, v7);
      swift_release(v5);
    }
    while (v3 != v4);
    swift_bridgeObjectRelease(v2);
  }
}

uint64_t sub_10070DB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chainID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chunks));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10070DBE0()
{
  return type metadata accessor for CRLContiguousChunkedRealTimeMessageBuffer(0);
}

uint64_t type metadata accessor for CRLContiguousChunkedRealTimeMessageBuffer(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EEDE0;
  if (!qword_1013EEDE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLContiguousChunkedRealTimeMessageBuffer);
  return result;
}

uint64_t sub_10070DC24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F07130;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10070DCA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_chainID;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10070DCF0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform41CRLContiguousChunkedRealTimeMessageBuffer_encrypted);
}

void sub_10070DD00(uint64_t a1)
{
  sub_10070D650(a1);
}

unint64_t sub_10070DD18()
{
  unint64_t result;

  result = qword_1013EEEB0;
  if (!qword_1013EEEB0)
  {
    result = swift_getWitnessTable(&unk_100EF5810, &type metadata for CRLChunkedRealTimeMessageBufferError);
    atomic_store(result, (unint64_t *)&qword_1013EEEB0);
  }
  return result;
}

uint64_t sub_10070DD5C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper____lazy_storage___miniFormatterPositionHelper;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper____lazy_storage___miniFormatterPositionHelper];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper____lazy_storage___miniFormatterPositionHelper];
  }
  else
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_reps];
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view]);
    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_distanceToView];
    v7 = type metadata accessor for CRLMiniFormatterPositionHelper();
    v3 = swift_allocObject(v7, 57, 7);
    swift_unknownObjectWeakInit(v3 + 24);
    *(_QWORD *)(v3 + 40) = 0;
    swift_unknownObjectWeakInit(v3 + 32);
    *(_BYTE *)(v3 + 56) = 1;
    *(_QWORD *)(v3 + 16) = v4;
    swift_unknownObjectWeakAssign(v3 + 24, Strong);
    swift_bridgeObjectRetain(v4);
    v8 = v0;

    *(_QWORD *)(v3 + 48) = v6;
    *(_QWORD *)(v3 + 40) = &off_101279D20;
    swift_unknownObjectWeakAssign(v3 + 32, v8);

    v9 = *(_QWORD *)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    swift_retain(v3);
    swift_release(v9);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

void sub_10070DE84()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  _BYTE *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  double v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  _BOOL4 v46;
  unsigned int v47;
  char v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  void **aBlock;
  uint64_t v60;
  void *v61;
  void *v62;
  void (*v63)();
  uint64_t v64;
  CGRect v65;
  CGRect v66;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view]);
  if (Strong)
  {
    v58 = (id)Strong;
    v4 = &v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate];
    v5 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate]);
    if (v5)
    {
      v6 = v5;
      v7 = *(_BYTE *)(*sub_1004BB5A4((_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24))+ OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode);
      swift_unknownObjectRelease(v6);
      if ((v7 & 1) != 0)
      {

        return;
      }
    }
    v8 = OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_isSuppressingReshowMiniFormatter;
    if (v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_isSuppressingReshowMiniFormatter] == 1)
    {
      v9 = swift_unknownObjectWeakLoadStrong(v2);
      if (v9)
      {
        v10 = (void *)v9;
        v11 = swift_unknownObjectWeakLoadStrong(v2);
        if (v11)
        {
          v12 = (void *)v11;
          v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingIn] = 1;
          v13 = *(double *)&qword_1013DBEE8;
          v57 = (id)objc_opt_self(UIView);
          v14 = swift_allocObject(&unk_101279E88, 32, 7);
          *(_QWORD *)(v14 + 16) = v12;
          *(_QWORD *)(v14 + 24) = v1;
          v63 = (void (*)())sub_10070F168;
          v64 = v14;
          aBlock = _NSConcreteStackBlock;
          v60 = *(_QWORD *)"";
          v61 = sub_1005D2FC0;
          v62 = &unk_101279EA0;
          v15 = _Block_copy(&aBlock);
          v16 = v64;
          v17 = v12;
          v18 = v1;
          swift_release(v16);
          v19 = swift_allocObject(&unk_101279ED8, 24, 7);
          *(_QWORD *)(v19 + 16) = v18;
          v63 = sub_10070F16C;
          v64 = v19;
          aBlock = _NSConcreteStackBlock;
          v60 = *(_QWORD *)"";
          v61 = sub_1006084F4;
          v62 = &unk_101279EF0;
          v20 = _Block_copy(&aBlock);
          v21 = v64;
          v22 = v18;
          swift_release(v21);
          objc_msgSend(v57, "animateWithDuration:delay:options:animations:completion:", 0, v15, v20, 0.2, v13);

          _Block_release(v20);
          _Block_release(v15);
        }

        v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator] = 0;
      }
      v1[v8] = 0;
    }
    v23 = OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_reps;
    v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_reps];
    swift_bridgeObjectRetain(v24);
    v26 = sub_1008E3598(v25);
    v28 = v27;
    v30 = v29;
    v32 = v31;
    swift_bridgeObjectRelease(v24);
    v33 = *(_QWORD *)&v1[v23];
    swift_bridgeObjectRetain(v33);
    v35 = (void *)sub_100857EA4(v34);
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v33).n128_u64[0];
    if (!v35)
      goto LABEL_27;
    v37 = objc_msgSend(v35, "interactiveCanvasController", v36);

    if (!v37)
      goto LABEL_27;
    objc_msgSend(v37, "visibleUnscaledRect");
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v45 = v44;

    v65.origin.x = v39;
    v65.origin.y = v41;
    v65.size.width = v43;
    v65.size.height = v45;
    v66.origin.x = v26;
    v66.origin.y = v28;
    v66.size.width = v30;
    v66.size.height = v32;
    v46 = CGRectIntersectsRect(v65, v66);
    v47 = objc_msgSend(v58, "isHidden");
    if (v47 && v46)
    {
      v48 = v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator];
      v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewShouldReappear] = v48 ^ 1;
      if ((v48 & 1) == 0)
      {
        v49 = (void *)swift_unknownObjectWeakLoadStrong(v2);
        if (v49)
        {
          v50 = v49;
          objc_msgSend(v49, "setHidden:", 0);

        }
        v51 = swift_unknownObjectWeakLoadStrong(v4);
        if (!v51)
          goto LABEL_27;
        v52 = v51;
        sub_10080A714();
LABEL_26:
        swift_unknownObjectRelease(v52);
LABEL_27:
        v56 = sub_10070DD5C();
        sub_1008E2EDC();

        swift_release(v56);
        return;
      }
    }
    else
    {
      v1[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewShouldReappear] = 0;
    }
    if (((v47 | v46) & 1) != 0)
      goto LABEL_27;
    v53 = (void *)swift_unknownObjectWeakLoadStrong(v2);
    if (v53)
    {
      v54 = v53;
      objc_msgSend(v53, "setHidden:", 1);

    }
    v55 = swift_unknownObjectWeakLoadStrong(v4);
    if (!v55)
      goto LABEL_27;
    v52 = v55;
    *(_BYTE *)(v55 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isHidingMiniFormatter) = 1;
    objc_msgSend((id)*sub_1004BB5A4((_QWORD *)(v55 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(_QWORD *)(v55 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24)), "dismissSecondLayerPopover");
    goto LABEL_26;
  }
}

id sub_10070E364()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLRepTrackingMiniFormatterViewHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLRepTrackingMiniFormatterViewHelper()
{
  return objc_opt_self(_TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper);
}

void sub_10070E434()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  _BYTE v6[24];

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view);
  if (Strong)
  {
    v2 = (void *)Strong;
    if (qword_1013DD818 != -1)
      swift_once(&qword_1013DD818, sub_100A04944);
    swift_beginAccess(&static OS_os_log.crlMiniFormatter, v6, 0, 0);
    v3 = (id)static OS_os_log.crlMiniFormatter;
    v5 = static os_log_type_t.default.getter(v4);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "[MiniFormatter] RepTrackingViewHelper is beginning dynamic operation", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingOut) = 1;
    sub_10070E51C();

    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator) = 1;
  }
}

void sub_10070E51C()
{
  _BYTE *v0;
  uint64_t Strong;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  void **v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view]);
  if (Strong)
  {
    v2 = (void *)Strong;
    v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingOut] = 1;
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_101279DE8, 32, 7);
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v4 + 24) = v0;
    v17 = sub_10070F128;
    v18 = v4;
    v13 = _NSConcreteStackBlock;
    v14 = *(_QWORD *)"";
    v15 = sub_1005D2FC0;
    v16 = &unk_101279E00;
    v5 = _Block_copy(&v13);
    v6 = v18;
    v7 = v2;
    v8 = v0;
    swift_release(v6);
    v9 = swift_allocObject(&unk_101279E38, 24, 7);
    *(_QWORD *)(v9 + 16) = v8;
    v17 = sub_10070F154;
    v18 = v9;
    v13 = _NSConcreteStackBlock;
    v14 = *(_QWORD *)"";
    v15 = sub_1006084F4;
    v16 = &unk_101279E50;
    v10 = _Block_copy(&v13);
    v11 = v18;
    v12 = v8;
    swift_release(v11);
    objc_msgSend(v3, "animateWithDuration:animations:completion:", v5, v10, 0.2);
    _Block_release(v10);
    _Block_release(v5);

  }
}

void sub_10070E6C8()
{
  _BYTE *v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  double v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _BYTE *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  void **aBlock;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  char v26[24];

  if ((v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_isSuppressingReshowMiniFormatter] & 1) == 0)
  {
    if (qword_1013DD818 != -1)
      swift_once(&qword_1013DD818, sub_100A04944);
    swift_beginAccess(&static OS_os_log.crlMiniFormatter, v26, 0, 0);
    v1 = (id)static OS_os_log.crlMiniFormatter;
    v3 = static os_log_type_t.default.getter(v2);
    sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "[MiniFormatter] RepTrackingViewHelper is ending dynamic operation", 65, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10070DE84();
    v4 = &v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view];
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view]);
    if (Strong)
    {
      v6 = (void *)Strong;
      v7 = swift_unknownObjectWeakLoadStrong(v4);
      if (v7)
      {
        v8 = (void *)v7;
        v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingIn] = 1;
        v9 = *(double *)&qword_1013DBEE8;
        v10 = (void *)objc_opt_self(UIView);
        v11 = swift_allocObject(&unk_101279D48, 32, 7);
        *(_QWORD *)(v11 + 16) = v8;
        *(_QWORD *)(v11 + 24) = v0;
        v24 = sub_10070F0F4;
        v25 = v11;
        aBlock = _NSConcreteStackBlock;
        v21 = *(_QWORD *)"";
        v22 = sub_1005D2FC0;
        v23 = &unk_101279D60;
        v12 = _Block_copy(&aBlock);
        v13 = v25;
        v14 = v8;
        v15 = v0;
        swift_release(v13);
        v16 = swift_allocObject(&unk_101279D98, 24, 7);
        *(_QWORD *)(v16 + 16) = v15;
        v24 = sub_10070F114;
        v25 = v16;
        aBlock = _NSConcreteStackBlock;
        v21 = *(_QWORD *)"";
        v22 = sub_1006084F4;
        v23 = &unk_101279DB0;
        v17 = _Block_copy(&aBlock);
        v18 = v25;
        v19 = v15;
        swift_release(v18);
        objc_msgSend(v10, "animateWithDuration:delay:options:animations:completion:", 0, v12, v17, 0.2, v9);

        _Block_release(v17);
        _Block_release(v12);
      }

      v0[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator] = 0;
    }
  }
}

void sub_10070EACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (qword_1013DD818 != -1)
      swift_once(&qword_1013DD818, sub_100A04944);
    swift_beginAccess(&static OS_os_log.crlMiniFormatter, v11, 0, 0);
    v4 = (id)static OS_os_log.crlMiniFormatter;
    v6 = static os_log_type_t.default.getter(v5);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "[MiniFormatter] RepTrackingViewHelper is beginning zoom operation", 65, 2, (uint64_t)_swiftEmptyArrayStorage);

    v7 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setHidden:", 1);

    }
    v9 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate);
    if (v9)
    {
      v10 = v9;
      *(_BYTE *)(v9 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isHidingMiniFormatter) = 1;
      objc_msgSend((id)*sub_1004BB5A4((_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24)), "dismissSecondLayerPopover");

      swift_unknownObjectRelease(v10);
    }
    else
    {

    }
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator) = 1;
  }
}

void sub_10070EC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (qword_1013DD818 != -1)
      swift_once(&qword_1013DD818, sub_100A04944);
    swift_beginAccess(&static OS_os_log.crlMiniFormatter, v9, 0, 0);
    v4 = (id)static OS_os_log.crlMiniFormatter;
    v6 = static os_log_type_t.default.getter(v5);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "[MiniFormatter] RepTrackingViewHelper is ending zoom operation", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10070DE84();
    v7 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate);
    if (v7)
    {
      v8 = v7;
      sub_10080A714();

      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator) = 0;
  }
}

double sub_10070EDD0(void *a1, uint64_t a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;

  objc_msgSend(a1, "setAlpha:", 1.0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate);
  if (Strong)
  {
    v5 = Strong;
    sub_10080A714();
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

double sub_10070EE28(void *a1, uint64_t a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;

  objc_msgSend(a1, "setAlpha:", 0.0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate);
  if (Strong)
  {
    v5 = Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isHidingMiniFormatter) = 1;
    objc_msgSend((id)*sub_1004BB5A4((_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24)), "dismissSecondLayerPopover");
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

void sub_10070EEB0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(void **)(*sub_1004BB5A4((_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24))+ OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (!v3)
    {
      swift_unknownObjectRelease(v2);
      return;
    }
    v7 = v3;
    v8 = objc_msgSend(v7, "visibleViewController");
    if (v8)
    {
      v4 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v5 = swift_dynamicCastClass(v8, v4);
      if (v5)
      {
        sub_1005C0654(v5, 0);
        swift_unknownObjectRelease(v2);

        v6 = v8;
LABEL_11:

        return;
      }
      swift_unknownObjectRelease(v2);

    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
    v6 = v7;
    goto LABEL_11;
  }
}

id sub_10070EFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  _BYTE *v5;
  char *v11;
  uint64_t v12;
  objc_super v14;

  v11 = &v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  v12 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_view]);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper____lazy_storage___miniFormatterPositionHelper] = 0;
  v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsHiddenDueToCanvasDecorator] = 0;
  v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingOut] = 0;
  v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingIn] = 0;
  v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_isScrollingBoard] = 0;
  v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewShouldReappear] = 0;
  v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_isSuppressingReshowMiniFormatter] = 0;
  swift_unknownObjectWeakAssign(v12, a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_reps] = a2;
  *(double *)&v5[OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_distanceToView] = a5;
  *((_QWORD *)v11 + 1) = a4;
  swift_unknownObjectWeakAssign(v11, a3);
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for CRLRepTrackingMiniFormatterViewHelper();
  return objc_msgSendSuper2(&v14, "init");
}

uint64_t sub_10070F0C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_10070F0F4()
{
  uint64_t v0;

  return sub_10070EDD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10070F0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10070F10C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_10070F114()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingIn) = 0;
}

double sub_10070F128()
{
  uint64_t v0;

  return sub_10070EE28(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10070F130()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10070F154()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingOut) = 0;
}

_QWORD *sub_10070F1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v9 = type metadata accessor for CRLUnfairLock();
  v10 = swift_allocObject(v9, 24, 7);
  v11 = (_DWORD *)swift_slowAlloc(4, -1);
  *v11 = 0;
  *(_QWORD *)(v10 + 16) = v11;
  atomic_thread_fence(memory_order_acq_rel);
  v4[6] = v10;
  v12 = (char *)v4 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryDirectoryForAVAsset) = 0;
  v14 = (char *)v4 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset;
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

void sub_10070F290(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  __chkstk_darwin(v9);
  v11 = &v18[-v10];
  v12 = v1[6];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID, v19, 0, 0);
  sub_1004CB7BC(v13, (uint64_t)v11, (uint64_t *)&unk_1013E1A50);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
    v17 = v1[2];
    v16 = v1[3];
    sub_1004BE310(v17, v16);
    sub_10089AFBC(v17, v16);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v8, a1, v14);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
    sub_1004C4938((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v13, v18, 33, 0);
    sub_100582338((uint64_t)v5, v13, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v18);
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(a1, v11, v14);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
}

void sub_10070F46C()
{
  __asm { BR              X12 }
}

uint64_t sub_10070F49C()
{
  uint64_t v0;

  return BYTE6(v0);
}

void sub_10070F534(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  id v31;
  __n128 v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38[3];
  _BYTE v39[24];

  v35 = a1;
  v2 = v1;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - v8;
  v10 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v10);
  v34 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - v16;
  v37 = v2[6];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v37 + 16));
  v18 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset, v39, 0, 0);
  sub_1004CB7BC(v18, (uint64_t)v17, &qword_1013E04D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v17, 1, v3) != 1)
  {
    v9 = v17;
    goto LABEL_9;
  }
  sub_1004CB800((uint64_t)v17, &qword_1013E04D0);
  v19 = OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryDirectoryForAVAsset;
  v20 = *(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryDirectoryForAVAsset);
  if (v20)
    goto LABEL_5;
  v21 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v38[0] = 0;
  v22 = objc_msgSend(v21, "initWithError:", v38);
  v23 = v38[0];
  if (!v22)
  {
    v31 = v38[0];
    _convertNSErrorToError(_:)(v23);

    swift_willThrow(v32);
    goto LABEL_11;
  }
  v33 = *(id *)((char *)v2 + v19);
  *(_QWORD *)((char *)v2 + v19) = v22;
  v24 = v23;

  v20 = *(void **)((char *)v2 + v19);
  if (v20)
  {
LABEL_5:
    v25 = objc_msgSend(v20, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

    URL.appendingPathComponent(_:)(v2[4], v2[5]);
    v26 = *(void (**)(char *, uint64_t))(v4 + 8);
    v26(v6, v3);
    v27 = v36;
    Data.write(to:options:)(v9, 0, v2[2], v2[3]);
    if (v27)
    {
      v26(v9, v3);
LABEL_11:
      v30 = *(os_unfair_lock_s **)(v37 + 16);
      goto LABEL_12;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v14, v9, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
    v28 = v34;
    sub_1004C4938((uint64_t)v14, v34, &qword_1013E04D0);
    swift_beginAccess(v18, v38, 33, 0);
    sub_100582338(v28, v18, &qword_1013E04D0);
    swift_endAccess(v38);
LABEL_9:
    v29 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v35, v9, v3);
    v30 = *(os_unfair_lock_s **)(v29 + 16);
LABEL_12:
    os_unfair_lock_unlock(v30);
    return;
  }
  __break(1u);
}

void sub_10070F878()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  objc_class *Channel;
  char *v4;
  uint64_t *v5;
  objc_super v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  Channel = (objc_class *)type metadata accessor for CRLMemoryReadChannel();
  v4 = (char *)objc_allocWithZone(Channel);
  v5 = (uint64_t *)&v4[OBJC_IVAR____TtC8Freeform20CRLMemoryReadChannel_data];
  *v5 = v1;
  v5[1] = v2;
  sub_1004BE310(v1, v2);
  v6.receiver = v4;
  v6.super_class = Channel;
  objc_msgSendSuper2(&v6, "init");
  __asm { BR              X9 }
}

void sub_10070F908()
{
  void (*v0)(void);
  void *v1;
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone((Class)CRLReadChannelInputStreamAdapter), "initWithReadChannel:length:closeChannelOnClose:", v1, BYTE6(v2), 1);
  v0();
  objc_msgSend(v3, "close");

}

uint64_t sub_10070F9AC()
{
  _QWORD *v0;

  sub_1004BBBC8(v0[2], v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  sub_1004CB800((uint64_t)v0 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID, (uint64_t *)&unk_1013E1A50);

  sub_1004CB800((uint64_t)v0 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset, &qword_1013E04D0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10070FA24()
{
  return type metadata accessor for CRLDataAssetStorage(0);
}

uint64_t type metadata accessor for CRLDataAssetStorage(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EEF80;
  if (!qword_1013EEF80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLDataAssetStorage);
  return result;
}

void sub_10070FA68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_100F071E8;
  v6[1] = &unk_100F07200;
  v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1007018C8(319, (unint64_t *)&qword_1013E6950, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    v6[4] = &unk_100F07218;
    sub_1007018C8(319, (unint64_t *)&qword_1013EAAF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

void sub_10070FB38()
{
  sub_10070F46C();
}

uint64_t sub_10070FB58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return v1;
}

void sub_10070FB88(uint64_t a1@<X8>)
{
  sub_10070F290(a1);
}

uint64_t sub_10070FBA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  sub_1004BE310(v1, *(_QWORD *)(*(_QWORD *)v0 + 24));
  return v1;
}

CGDataProviderRef sub_10070FBDC()
{
  const __CFData *isa;
  CGDataProviderRef v1;

  isa = Data._bridgeToObjectiveC()().super.isa;
  v1 = CGDataProviderCreateWithCFData(isa);

  return v1;
}

void sub_10070FC14()
{
  sub_10070F878();
}

void sub_10070FC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSURL *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10070F534((uint64_t)v4);
  if (!v0)
  {
    URL._bridgeToObjectiveC()(v5);
    v7 = v6;
    objc_msgSend((id)objc_opt_self(AVAsset), "assetWithURL:", v6);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

void sub_10070FD04(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  if ((a2 & 2) != 0)
  {
    v6 = swift_allocObject(&unk_101279F98, 32, 7);
    *(_QWORD *)(v6 + 16) = a3;
    *(_QWORD *)(v6 + 24) = a4;
    v9[4] = sub_10070FDDC;
    v10 = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = *(_QWORD *)"";
    v9[2] = sub_1005D2FC0;
    v9[3] = &unk_101279FB0;
    v7 = _Block_copy(v9);
    v8 = v10;
    swift_retain(a4);
    swift_release(v8);
    sub_10070FE18(v7);
    _Block_release(v7);
  }
}

uint64_t sub_10070FDB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10070FDDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_10070FE00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10070FE10(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_10070FE18(void *a1)
{
  id v1;
  id v2;
  void (**block)(void);

  block = a1;
  if (+[NSThread isMainThread](NSThread, "isMainThread"))
  {
    block[2]();
  }
  else
  {
    v1 = &_dispatch_main_q;
    v2 = &_dispatch_main_q;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

uint64_t sub_10070FE8C()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  char v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD v13[8];

  v1 = *(void **)(v0 + 56);
  KeyPath = swift_getKeyPath(&unk_100F07330);
  v3 = swift_getKeyPath(&unk_100F07358);
  v4 = v1;
  static Published.subscript.getter((_QWORD *)((char *)v13 + 1), v4, KeyPath, v3);

  swift_release(KeyPath);
  swift_release(v3);
  LODWORD(KeyPath) = BYTE1(v13[0]);
  sub_100711E78(v0, (uint64_t)v13 + 1);
  if ((_DWORD)KeyPath == 1)
  {
    v5 = BYTE1(v13[0]);
    sub_100712358((uint64_t)v13 + 1);
    if ((v5 & 1) != 0)
    {
      v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      return Color.init(_:)(v6);
    }
  }
  else
  {
    sub_100712358((uint64_t)v13 + 1);
  }
  v7 = *(void **)(v0 + 56);
  v8 = swift_getKeyPath(&unk_100F07330);
  v9 = swift_getKeyPath(&unk_100F07358);
  v10 = v7;
  static Published.subscript.getter(v13, v10, v8, v9);

  swift_release(v8);
  swift_release(v9);
  if (LOBYTE(v13[0]) == 1)
    return static Color.accentColor.getter(v11);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  return Color.init(_:)(v6);
}

uint64_t sub_10070FFDC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t KeyPath;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  char *v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  char *v128;
  int *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  void (*v135)(char *, uint64_t);
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177[8];
  uint64_t v178;
  uint64_t v179;
  _OWORD v180[3];
  _OWORD v181[3];

  v155 = a2;
  v153 = sub_1004B804C(&qword_1013EF140);
  __chkstk_darwin(v153);
  v154 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_1004B804C(&qword_1013EF148);
  v168 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v156 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v167 = (char *)&v141 - v6;
  v164 = sub_1004B804C(&qword_1013EF150);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v151 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v147 = (char *)&v141 - v9;
  v175 = sub_1004B804C(&qword_1013EF158);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v166 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v146 = (char *)&v141 - v12;
  v14 = __chkstk_darwin(v13);
  v173 = (char *)&v141 - v15;
  v150 = type metadata accessor for Divider(0, v14);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v148 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1004B804C(&qword_1013EF160);
  v143 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v145 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_1013EF168);
  __chkstk_darwin(v18);
  v152 = (uint64_t)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v165 = (uint64_t)&v141 - v21;
  __chkstk_darwin(v22);
  v176 = (uint64_t)&v141 - v23;
  __chkstk_darwin(v24);
  v169 = (uint64_t)&v141 - v25;
  v170 = type metadata accessor for BorderlessButtonStyle(0);
  v161 = *(char **)(v170 - 8);
  __chkstk_darwin(v170);
  v27 = (char *)&v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_1004B804C(&qword_1013EF170);
  v28 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v30 = (char *)&v141 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_1004B804C(&qword_1013EF178);
  __chkstk_darwin(v160);
  v32 = (char *)&v141 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_1004B804C(&qword_1013EF180);
  v171 = *(_QWORD **)(v172 - 8);
  __chkstk_darwin(v172);
  v162 = (char *)&v141 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v141 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v141 - v38;
  sub_100711E78(a1, (uint64_t)&v179);
  v40 = swift_allocObject(&unk_10127A080, 80, 7);
  sub_100711EB0((uint64_t)&v179, v40 + 16);
  v178 = a1;
  v142 = a1;
  v41 = sub_1004B804C(&qword_1013EF188);
  v42 = sub_1006E1664(&qword_1013EF190, &qword_1013EF188, (void (*)(void))sub_100711F30);
  Button.init(action:label:)(sub_100711F08, v40, sub_100711F28, v177, v41, v42);
  v43 = *(void **)(a1 + 56);
  KeyPath = swift_getKeyPath(&unk_100F07330);
  v45 = swift_getKeyPath(&unk_100F07358);
  v46 = v43;
  static Published.subscript.getter(&v179, v46, KeyPath, v45);

  swift_release(KeyPath);
  swift_release(v45);
  LOBYTE(v46) = v179;
  v47 = swift_getKeyPath(&unk_100F07378);
  v48 = swift_allocObject(&unk_10127A0A8, 17, 7);
  *(_BYTE *)(v48 + 16) = (v46 & 1) == 0;
  v49 = v159;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v30, v159);
  v50 = v160;
  v51 = (uint64_t *)&v32[*(int *)(v160 + 36)];
  *v51 = v47;
  v51[1] = (uint64_t)sub_100712094;
  v51[2] = v48;
  v52 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v49);
  BorderlessButtonStyle.init()(v52);
  v53 = sub_10071209C(&qword_1013EF1A8, &qword_1013EF178, &qword_1013EF1B0, &qword_1013EF170);
  v54 = sub_100712134();
  v55 = v170;
  v159 = v54;
  View.buttonStyle<A>(_:)(v27, v50, v170, v53);
  v56 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v161 + 1);
  v160 = (uint64_t)v27;
  v158 = v56;
  v56((uint64_t)v27, v55);
  sub_1004CB800((uint64_t)v32, &qword_1013EF178);
  v57 = (uint64_t (*)(char *, char *, uint64_t))v171[4];
  v161 = v39;
  v58 = v39;
  v59 = v142;
  v60 = v57(v58, v36, v172);
  if (*(_BYTE *)v59 == 1)
  {
    v61 = v148;
    v62 = Divider.init()(v60);
    v63 = *(_QWORD *)(v59 + 16);
    v64 = static Alignment.center.getter(v62);
    _FrameLayout.init(width:height:alignment:)(v180, 0x3FF0000000000000, 0, v63, 0, v64, v65);
    v66 = v149;
    v67 = (uint64_t)v145;
    v68 = v150;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v145, v61, v150);
    v69 = v144;
    v70 = (_OWORD *)(v67 + *(int *)(v144 + 36));
    v71 = v180[1];
    *v70 = v180[0];
    v70[1] = v71;
    v70[2] = v180[2];
    (*(void (**)(char *, uint64_t))(v66 + 8))(v61, v68);
    v72 = v169;
    sub_100712308(v67, v169);
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56);
    v74 = v69;
    v73(v72, 0, 1, v69);
  }
  else
  {
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56);
    v74 = v144;
    v73(v169, 1, 1, v144);
  }
  sub_100711E78(v59, (uint64_t)&v179);
  v75 = swift_allocObject(&unk_10127A0D0, 80, 7);
  v76 = sub_100711EB0((uint64_t)&v179, v75 + 16);
  __chkstk_darwin(v76);
  *(&v141 - 2) = v59;
  v77 = sub_1004B804C(&qword_1013EF1D0);
  v78 = sub_1006E1664(&qword_1013EF1D8, &qword_1013EF1D0, (void (*)(void))sub_1007121A8);
  v79 = v147;
  v80 = Button.init(action:label:)(sub_100712180, v75, sub_1007121A0, &v141 - 4, v77, v78);
  v81 = v160;
  BorderlessButtonStyle.init()(v80);
  v82 = sub_1004CBA30(&qword_1013EF200, &qword_1013EF150, (uint64_t)&protocol conformance descriptor for Button<A>);
  v83 = v146;
  v84 = v164;
  v85 = v170;
  View.buttonStyle<A>(_:)(v81, v164, v170, v82);
  v158(v81, v85);
  v86 = *(void (**)(char *, uint64_t))(v163 + 8);
  v86(v79, v84);
  v87 = (*(uint64_t (**)(char *, char *, uint64_t))(v174 + 32))(v173, v83, v175);
  v88 = 1;
  v89 = v74;
  if (*(_BYTE *)v59 == 1)
  {
    v90 = v148;
    v91 = Divider.init()(v87);
    v92 = *(_QWORD *)(v59 + 16);
    v93 = static Alignment.center.getter(v91);
    _FrameLayout.init(width:height:alignment:)(v181, 0x3FF0000000000000, 0, v92, 0, v93, v94);
    v95 = v149;
    v96 = (uint64_t)v145;
    v97 = v150;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v145, v90, v150);
    v98 = (_OWORD *)(v96 + *(int *)(v89 + 36));
    v99 = v181[1];
    *v98 = v181[0];
    v98[1] = v99;
    v98[2] = v181[2];
    (*(void (**)(char *, uint64_t))(v95 + 8))(v90, v97);
    sub_100712308(v96, v176);
    v88 = 0;
  }
  v73(v176, v88, 1, v89);
  sub_100711E78(v59, (uint64_t)&v179);
  v100 = swift_allocObject(&unk_10127A0F8, 80, 7);
  v101 = sub_100711EB0((uint64_t)&v179, v100 + 16);
  __chkstk_darwin(v101);
  *(&v141 - 2) = v59;
  v102 = v151;
  Button.init(action:label:)(sub_100712288, v100, sub_1007122A8, &v141 - 4, v77, v78);
  v103 = *(void **)(v59 + 56);
  v104 = swift_getKeyPath(&unk_100F07330);
  v105 = swift_getKeyPath(&unk_100F07358);
  v106 = v103;
  static Published.subscript.getter(&v179, v106, v104, v105);

  swift_release(v104);
  swift_release(v105);
  LOBYTE(v106) = v179;
  v107 = swift_getKeyPath(&unk_100F07378);
  v108 = swift_allocObject(&unk_10127A120, 17, 7);
  *(_BYTE *)(v108 + 16) = (v106 & 1) == 0;
  v109 = (uint64_t)v154;
  v110 = v164;
  (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v154, v102, v164);
  v111 = v153;
  v112 = (uint64_t *)(v109 + *(int *)(v153 + 36));
  *v112 = v107;
  v112[1] = (uint64_t)sub_1007123C8;
  v112[2] = v108;
  v113 = ((uint64_t (*)(char *, uint64_t))v86)(v102, v110);
  v114 = v160;
  BorderlessButtonStyle.init()(v113);
  v115 = sub_10071209C(&qword_1013EF208, &qword_1013EF140, &qword_1013EF200, &qword_1013EF150);
  v116 = v156;
  v117 = v170;
  View.buttonStyle<A>(_:)(v114, v111, v170, v115);
  v158(v114, v117);
  sub_1004CB800(v109, &qword_1013EF140);
  v118 = v168;
  v119 = v167;
  v120 = v157;
  (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v167, v116, v157);
  v121 = (void (*)(char *, char *, uint64_t))v171[2];
  v122 = v162;
  v123 = v172;
  v121(v162, v161, v172);
  sub_1007122C0(v169, v165);
  v124 = *(void (**)(char *, char *, uint64_t))(v174 + 16);
  v125 = v166;
  v124(v166, v173, v175);
  v126 = v152;
  sub_1007122C0(v176, v152);
  v127 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v127(v116, v119, v120);
  v128 = v155;
  v121(v155, v122, v123);
  v129 = (int *)sub_1004B804C(&qword_1013EF210);
  v130 = v165;
  sub_1007122C0(v165, (uint64_t)&v128[v129[12]]);
  v131 = v125;
  v132 = v175;
  v124(&v128[v129[16]], v131, v175);
  v133 = v126;
  sub_1007122C0(v126, (uint64_t)&v128[v129[20]]);
  v134 = v116;
  v127(&v128[v129[24]], v116, v120);
  v135 = *(void (**)(char *, uint64_t))(v168 + 8);
  v135(v167, v120);
  sub_1004CB800(v176, &qword_1013EF168);
  v136 = *(void (**)(char *, uint64_t))(v174 + 8);
  v137 = v132;
  v136(v173, v132);
  sub_1004CB800(v169, &qword_1013EF168);
  v138 = (void (*)(char *, uint64_t))v171[1];
  v139 = v172;
  v138(v161, v172);
  v135(v134, v120);
  sub_1004CB800(v133, &qword_1013EF168);
  v136(v166, v137);
  sub_1004CB800(v130, &qword_1013EF168);
  return ((uint64_t (*)(char *, uint64_t))v138)(v162, v139);
}

double sub_100710E14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  double v52[3];

  v29 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEC0000007466656CLL);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(&v34, v4, 0, v4, 0, v5, v6);
  v7 = v34;
  v8 = v35;
  v9 = v36;
  v10 = v37;
  v12 = v38;
  v11 = v39;
  v13 = sub_10070FE8C();
  KeyPath = swift_getKeyPath(&unk_100F073A8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = static Alignment.center.getter(KeyPath);
  v28 = 1;
  v27 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v40, 0, 1, 0, 1, 0, 1, v15, 0, 0, v27, 0, v28, v16, v17);
  v18 = v40;
  v19 = v41;
  v20 = v42;
  v21 = v44;
  v22 = v45;
  v23 = v46;
  v24 = v48;
  v25 = v50;
  v33 = v43;
  v32 = v47;
  v31 = v49;
  v30 = v51;
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = KeyPath;
  *(_QWORD *)(a2 + 64) = v13;
  *(_QWORD *)(a2 + 72) = v18;
  *(_BYTE *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v20;
  *(_BYTE *)(a2 + 96) = v33;
  *(_QWORD *)(a2 + 104) = v21;
  *(_BYTE *)(a2 + 112) = v22;
  *(_QWORD *)(a2 + 120) = v23;
  *(_BYTE *)(a2 + 128) = v32;
  *(_QWORD *)(a2 + 136) = v24;
  *(_BYTE *)(a2 + 144) = v31;
  *(_QWORD *)(a2 + 152) = v25;
  *(_BYTE *)(a2 + 160) = v30;
  result = v52[0];
  *(_OWORD *)(a2 + 168) = *(_OWORD *)v52;
  return result;
}

double sub_100711048@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  double v53[3];

  v30 = Image.init(systemName:)(0x6C75622E7473696CLL, 0xEB0000000074656CLL);
  v4 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100F073A8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = swift_retain(v4);
  v8 = static Alignment.center.getter(v7);
  v10 = _FrameLayout.init(width:height:alignment:)(&v35, v6, 0, v6, 0, v8, v9);
  v11 = v35;
  v12 = v36;
  v13 = v37;
  v14 = v38;
  v16 = v39;
  v15 = v40;
  v17 = static Alignment.center.getter(v10);
  v29 = 1;
  v28 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v41, 0, 1, 0, 1, 0, 1, v6, 0, 0, v28, 0, v29, v17, v18);
  v19 = v41;
  v20 = v42;
  v21 = v43;
  v22 = v45;
  v23 = v46;
  v24 = v47;
  v25 = v49;
  v26 = v51;
  v34 = v44;
  v33 = v48;
  v32 = v50;
  v31 = v52;
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v11;
  *(_BYTE *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_BYTE *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = v19;
  *(_BYTE *)(a2 + 80) = v20;
  *(_QWORD *)(a2 + 88) = v21;
  *(_BYTE *)(a2 + 96) = v34;
  *(_QWORD *)(a2 + 104) = v22;
  *(_BYTE *)(a2 + 112) = v23;
  *(_QWORD *)(a2 + 120) = v24;
  *(_BYTE *)(a2 + 128) = v33;
  *(_QWORD *)(a2 + 136) = v25;
  *(_BYTE *)(a2 + 144) = v32;
  *(_QWORD *)(a2 + 152) = v26;
  *(_BYTE *)(a2 + 160) = v31;
  result = v53[0];
  *(_OWORD *)(a2 + 168) = *(_OWORD *)v53;
  return result;
}

uint64_t sub_100711278(uint64_t a1, void (*a2)(void))
{
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (result)
  {
    v4 = result;
    a2();
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

double sub_1007112B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  double v52[3];

  v29 = Image.init(systemName:)(0x2E6E6F7276656863, 0xED00007468676972);
  v4 = sub_10070FE8C();
  KeyPath = swift_getKeyPath(&unk_100F073A8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = static Alignment.center.getter(KeyPath);
  v9 = _FrameLayout.init(width:height:alignment:)(&v34, v6, 0, v6, 0, v7, v8);
  v10 = v34;
  v11 = v35;
  v12 = v36;
  v13 = v37;
  v15 = v38;
  v14 = v39;
  v16 = static Alignment.center.getter(v9);
  v28 = 1;
  v27 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v40, 0, 1, 0, 1, 0, 1, v6, 0, 0, v27, 0, v28, v16, v17);
  v18 = v40;
  v19 = v41;
  v20 = v42;
  v21 = v44;
  v22 = v45;
  v23 = v46;
  v24 = v48;
  v25 = v50;
  v33 = v43;
  v32 = v47;
  v31 = v49;
  v30 = v51;
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v10;
  *(_BYTE *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v12;
  *(_BYTE *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v14;
  *(_QWORD *)(a2 + 72) = v18;
  *(_BYTE *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v20;
  *(_BYTE *)(a2 + 96) = v33;
  *(_QWORD *)(a2 + 104) = v21;
  *(_BYTE *)(a2 + 112) = v22;
  *(_QWORD *)(a2 + 120) = v23;
  *(_BYTE *)(a2 + 128) = v32;
  *(_QWORD *)(a2 + 136) = v24;
  *(_BYTE *)(a2 + 144) = v31;
  *(_QWORD *)(a2 + 152) = v25;
  *(_BYTE *)(a2 + 160) = v30;
  result = v52[0];
  *(_OWORD *)(a2 + 168) = *(_OWORD *)v52;
  return result;
}

uint64_t sub_1007114EC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)a1 = static VerticalAlignment.center.getter(a2);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = 0;
  v5 = sub_1004B804C(&qword_1013EF138);
  return sub_10070FFDC(v2, (char *)(a1 + *(int *)(v5 + 44)));
}

uint64_t sub_10071153C()
{
  return sub_100638F84((uint64_t)&unk_100F07468, (uint64_t)&unk_100F07490);
}

void sub_100711550(char a1)
{
  sub_100711704(a1, (uint64_t)&unk_100F07468, (uint64_t)&unk_100F07490);
}

uint64_t sub_100711564()
{
  return sub_100638F84((uint64_t)&unk_100F07420, (uint64_t)&unk_100F07448);
}

void sub_100711578(char a1)
{
  sub_100711704(a1, (uint64_t)&unk_100F07420, (uint64_t)&unk_100F07448);
}

uint64_t sub_10071158C()
{
  return sub_100638F84((uint64_t)&unk_100F073D8, (uint64_t)&unk_100F07400);
}

void sub_1007115A0(char a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100F073D8);
  v4 = swift_getKeyPath(&unk_100F07400);
  static Published.subscript.getter((uint64_t *)((char *)&v11 + 2), v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  LODWORD(v4) = BYTE2(v11);
  v5 = swift_getKeyPath(&unk_100F073D8);
  v6 = swift_getKeyPath(&unk_100F07400);
  BYTE1(v11) = a1;
  v7 = v1;
  static Published.subscript.setter((char *)&v11 + 1, v7, v5, v6);
  v8 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");
  v9 = swift_getKeyPath(&unk_100F07420);
  v10 = swift_getKeyPath(&unk_100F07448);
  static Published.subscript.getter(&v11, v7, v9, v10);
  swift_release(v9);
  swift_release(v10);
  if ((_DWORD)v4 != v11 && (v8 & 1) != 0)
    ObservableObjectPublisher.send()();
}

uint64_t sub_1007116DC()
{
  return sub_100638F84((uint64_t)&unk_100F07330, (uint64_t)&unk_100F07358);
}

void sub_1007116F0(char a1)
{
  sub_100711704(a1, (uint64_t)&unk_100F07330, (uint64_t)&unk_100F07358);
}

void sub_100711704(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter((uint64_t *)((char *)&v15 + 2), v3, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = BYTE2(v15);
  v10 = swift_getKeyPath(a2);
  v11 = swift_getKeyPath(a3);
  BYTE1(v15) = a1;
  v12 = v3;
  static Published.subscript.setter((char *)&v15 + 1, v12, v10, v11);
  v13 = swift_getKeyPath(a2);
  v14 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v15, v12, v13, v14);
  swift_release(v13);
  swift_release(v14);
  if (v9 != v15)
    ObservableObjectPublisher.send()();
}

id sub_100711818()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;
  char *v12;
  char *v13;
  objc_class *v14;
  uint64_t v16;
  objc_super v17;
  char v18;

  v1 = sub_1004B804C(&qword_10140B9D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_objectDidChange;
  v7 = type metadata accessor for ObservableObjectPublisher(0, v3);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = v0;
  *(_QWORD *)&v0[v6] = ObservableObjectPublisher.init()();
  v9 = &v8[OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState__isOpen];
  v18 = 0;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  v10 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v10(v9, v5, v1);
  v11 = &v8[OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState__isCompactUI];
  v18 = 0;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  v10(v11, v5, v1);
  v12 = &v8[OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState__isLandscapeUI];
  v18 = 0;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  v10(v12, v5, v1);
  v13 = &v8[OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState__areNavigatorButtonsEnabled];
  v18 = 1;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  v10(v13, v5, v1);
  v8[OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating] = 0;

  v14 = (objc_class *)type metadata accessor for CRLScenesNavigatorState(0);
  v17.receiver = v8;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, "init");
}

id sub_1007119DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesNavigatorState(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100711AC8()
{
  return type metadata accessor for CRLScenesNavigatorState(0);
}

uint64_t type metadata accessor for CRLScenesNavigatorState(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EF128;
  if (!qword_1013EF128)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLScenesNavigatorState);
  return result;
}

void sub_100711B0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10063BDBC();
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = v5;
    v9 = &unk_100F07278;
    swift_updateClassMetadata2(a1, 256, 6, &v4, a1 + 80);
  }
}

void destroy for CRLScenesNavigatorUI(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_unknownObjectWeakDestroy(a1 + 32);

}

uint64_t initializeWithCopy for CRLScenesNavigatorUI(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = a2 + 32;
  swift_retain(v4);
  swift_unknownObjectWeakCopyInit(a1 + 32, v5);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = v7;
  return a1;
}

uint64_t assignWithCopy for CRLScenesNavigatorUI(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectWeakCopyAssign(a1 + 32, a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  v8 = v6;

  return a1;
}

uint64_t initializeWithTake for CRLScenesNavigatorUI(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectWeakTakeInit(a1 + 32, a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for CRLScenesNavigatorUI(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectWeakTakeAssign(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLScenesNavigatorUI(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLScenesNavigatorUI(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLScenesNavigatorUI()
{
  return &type metadata for CRLScenesNavigatorUI;
}

uint64_t sub_100711E2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101121624, 1);
}

uint64_t sub_100711E3C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLScenesNavigatorState(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100711E78(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLScenesNavigatorUI(a2, a1);
  return a2;
}

uint64_t sub_100711EB0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a2 = *(_BYTE *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  swift_unknownObjectWeakTakeInit(a2 + 32, a1 + 32);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  return a2;
}

uint64_t sub_100711F08()
{
  uint64_t v0;

  return sub_100711278(v0 + 16, sub_100C39B9C);
}

double sub_100711F28@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100710E14(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100711F30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EF198;
  if (!qword_1013EF198)
  {
    v1 = sub_1004CB6A4(&qword_1013EF1A0);
    sub_1006CCEA4();
    sub_1004CBA30(&qword_1013E7048, &qword_1013E7050, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013EF198);
  }
  return result;
}

void sub_100711FB4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F07330);
  v5 = swift_getKeyPath(&unk_100F07358);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

void sub_100712034(char *a1)
{
  sub_1007116F0(*a1);
}

void sub_100712058(char *a1)
{
  sub_1007116F0(*a1);
}

uint64_t sub_100712084()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100712094(_BYTE *a1)
{
  uint64_t v1;

  return sub_100D1C894(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_10071209C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1004CB6A4(a2);
    sub_1004CBA30(a3, a4, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1004CBA30(&qword_1013EF1B8, &qword_1013EF1C0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100712134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EF1C8;
  if (!qword_1013EF1C8)
  {
    v1 = type metadata accessor for BorderlessButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderlessButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1013EF1C8);
  }
  return result;
}

uint64_t sub_100712180()
{
  uint64_t v0;

  return sub_100711278(v0 + 16, sub_100C40E34);
}

double sub_1007121A0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100711048(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1007121A8()
{
  return sub_1006E1664(&qword_1013EF1E0, &qword_1013EF1E8, (void (*)(void))sub_1007121CC);
}

unint64_t sub_1007121CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EF1F0;
  if (!qword_1013EF1F0)
  {
    v1 = sub_1004CB6A4(&qword_1013EF1F8);
    sub_1004CBA30(&qword_1013E7048, &qword_1013E7050, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013EF1F0);
  }
  return result;
}

uint64_t sub_100712254()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectWeakDestroy(v0 + 48);

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100712288()
{
  uint64_t v0;

  return sub_100711278(v0 + 16, sub_100C3976C);
}

double sub_1007122A8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1007112B8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1007122B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1007122C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EF168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100712308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EF160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100712358(uint64_t a1)
{
  destroy for CRLScenesNavigatorUI(a1);
  return a1;
}

uint64_t sub_10071239C()
{
  return sub_1004CBA30(&qword_1013EF218, &qword_1013EF220, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1007123CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UTType(0);
  sub_100501DE0(v3, qword_10147F3F0);
  sub_1004F2A1C(v3, (uint64_t)qword_10147F3F0);
  static UTType.compositeContent.getter();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  return UTType.init(exportedAs:conformingTo:)(0xD000000000000018, 0x8000000100FAA330, v2);
}

uint64_t sub_10071249C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v18 - v8;
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v18 - v8, a1, v2, v7);
  static UTType.rtf.getter(v10);
  sub_10071261C();
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v13 = v12(v5, v2);
  if ((v11 & 1) != 0)
  {
    v12(v9, v2);
    return 0;
  }
  else
  {
    static UTType.rtfd.getter(v13);
    v15 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v9);
    v16 = v12(v5, v2);
    if ((v15 & 1) != 0)
    {
      v12(v9, v2);
      return 1;
    }
    else
    {
      static UTType.flatRTFD.getter(v16);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v9);
      v12(v5, v2);
      v12(v9, v2);
      if ((v17 & 1) != 0)
        return 2;
      else
        return 0;
    }
  }
}

unint64_t sub_10071261C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FFE60;
  if (!qword_1013FFE60)
  {
    v1 = type metadata accessor for UTType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UTType, v1);
    atomic_store(result, (unint64_t *)&qword_1013FFE60);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSupportedRichTextType()
{
  return &type metadata for CRLSupportedRichTextType;
}

unint64_t sub_100712678()
{
  unint64_t result;

  result = qword_1013EF228;
  if (!qword_1013EF228)
  {
    result = swift_getWitnessTable(&unk_100F07544, &type metadata for CRLSupportedRichTextType);
    atomic_store(result, (unint64_t *)&qword_1013EF228);
  }
  return result;
}

uint64_t type metadata accessor for CRLUnknownSyncRemoteRecord()
{
  return objc_opt_self(_TtC8Freeform26CRLUnknownSyncRemoteRecord);
}

double sub_1007126DC()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask);
  if (v1)
  {
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask));
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask));
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

void sub_1007128CC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN ****v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  double v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  _BYTE v41[24];

  v1 = v0;
  v2 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v2);
  v4 = &v41[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C(&qword_1013E04D0);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = objc_msgSend(v0, "interactiveCanvasController", v6);
  if (!v9)
    return;
  v10 = v9;
  v11 = objc_msgSend(v9, "layerHost");

  if (!v11)
    return;
  if ((objc_msgSend(v11, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v11);
    return;
  }
  v40 = objc_msgSend(v11, "asiOSCVC");
  v12 = objc_msgSend(v1, "boardItems", swift_unknownObjectRelease(v11).n128_f64[0]);
  v13 = type metadata accessor for CRLBoardItem(0);
  v14 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

  if ((v15 & 0xC000000000000001) != 0)
  {
    if (v15 < 0)
      v16 = v15;
    else
      v16 = v15 & 0xFFFFFFFFFFFFFF8;
    v17 = __CocoaSet.count.getter(v16);
  }
  else
  {
    v17 = *(_QWORD *)(v15 + 16);
  }
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(v15).n128_u64[0];
  if (v17 != 1
    || (v19 = objc_msgSend(v1, "boardItems", v18),
        v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v19, v13, v14),
        v19,
        v21 = (void *)sub_100857E90(v20),
        swift_bridgeObjectRelease(v20),
        !v21))
  {
LABEL_24:

    return;
  }
  v22 = type metadata accessor for CRLURLItem(0);
  v23 = swift_dynamicCastClass(v21, v22);
  if (!v23)
  {

    goto LABEL_24;
  }
  v24 = *(_UNKNOWN *****)(v23 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v24 == &off_1014007D0)
    v25 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v25 = 0;
  swift_beginAccess(v25 + qword_101480208, v41, 32, 0);
  swift_retain(v24);
  v26 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v26);
  swift_endAccess(v41);
  swift_release(v24);
  v27 = &v4[*(int *)(v2 + 20)];
  v28 = type metadata accessor for URL(0);
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 16))(v8, v27, v28);
  sub_100716C6C((uint64_t)v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v28);
  v30 = objc_allocWithZone((Class)type metadata accessor for CRLInsertEditURLAlert(0));
  v31 = v1;
  v32 = sub_10054FB68(1, (uint64_t)v31, (uint64_t)v8, v30);

  v33 = *(void **)&v31[OBJC_IVAR____TtC8Freeform12CRLURLEditor_editURLAlert];
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Freeform12CRLURLEditor_editURLAlert] = v32;
  v34 = v32;

  v35 = objc_msgSend(v40, "miniFormatterPresenter");
  if (v35)
  {
    v37 = v35;
    objc_msgSend(v35, "dismissMiniFormatter");
    *(_QWORD *)&v36 = swift_unknownObjectRelease(v37).n128_u64[0];
  }
  v38 = objc_msgSend(v40, "presentedViewController", v36);
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v38, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  sub_1007903EC(v40);

}

void sub_100712D6C(void *a1, double a2, double a3)
{
  void *v3;
  void *v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSString v34;
  id v35;
  void *v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  id v54;
  NSString v55;
  NSString v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  id v61;
  NSString v62;
  id v63;
  id v64;
  NSString v65;
  NSString v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  objc_super v75;

  v4 = v3;
  v75.receiver = v3;
  v75.super_class = (Class)type metadata accessor for CRLURLEditor();
  objc_msgSendSuper2(&v75, "addMiniFormatterElementsToArray:atPoint:", a1, a2, a3);
  v8 = objc_msgSend(v3, "boardItems");
  v9 = type metadata accessor for CRLBoardItem(0);
  v10 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  if ((v11 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = v11;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    v13 = __CocoaSet.count.getter(v12);
  }
  else
  {
    v13 = *(_QWORD *)(v11 + 16);
  }
  swift_bridgeObjectRelease(v11);
  if (v13 == 1)
  {
    v14 = (void *)objc_opt_self(NSBundle);
    v15 = objc_msgSend(v14, "mainBundle");
    v73 = v9;
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v20 = v19;

    v21 = String._bridgeToObjectiveC()();
    v22 = (void *)objc_opt_self(CRLImage);
    v23 = objc_msgSend(v22, "crl_quickInspectorImageNamed:", v21);

    v24 = objc_allocWithZone((Class)CRLQuickInspectorElement);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "initWithName:image:type:options:", v25, v23, 2, 2048, swift_bridgeObjectRelease(v20).n128_f64[0]);

    objc_msgSend(v26, "setTag:", 12);
    v27 = objc_msgSend(v14, "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v32 = v31;

    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setToolTip:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

    v74 = a1;
    objc_msgSend(a1, "addObject:", v26);
    v34 = String._bridgeToObjectiveC()();
    v72 = v22;
    v35 = objc_msgSend(v22, "crl_quickInspectorImageNamed:", v34);

    v36 = v14;
    v37 = objc_msgSend(v14, "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = v41;

    v43 = v35;
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42);
    v45 = (void *)objc_opt_self(CRLQuickInspectorElement);
    v46 = objc_msgSend(v45, "elementWithName:image:type:action:", v44, v43, 2, "openItemURL:");

    objc_msgSend(v46, "setTag:", 19);
    v47 = objc_msgSend(v4, "boardItems");
    v48 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v47, v73, v10);

    v49 = (_QWORD *)sub_100857E90(v48);
    v50 = swift_bridgeObjectRelease(v48);
    if (v49)
    {
      (*(void (**)(__n128))((swift_isaMask & *v49) + 0x240))(v50);
      v52 = v51;

      if (v52)
      {
        v49 = String._bridgeToObjectiveC()();
        v50.n128_u64[0] = swift_bridgeObjectRelease(v52).n128_u64[0];
      }
      else
      {
        v49 = 0;
      }
    }
    objc_msgSend(v46, "setToolTip:", v49, v50.n128_f64[0]);

    objc_msgSend(v74, "addObject:", v46);
    sub_100713834();
    if ((v53 & 1) != 0)
    {
      v54 = objc_msgSend(v36, "mainBundle");
      v55 = String._bridgeToObjectiveC()();
      v56 = String._bridgeToObjectiveC()();
      v57 = objc_msgSend(v54, "localizedStringForKey:value:table:", v55, v56, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v59 = v58;

      v60 = String._bridgeToObjectiveC()();
      v61 = objc_msgSend(v72, "crl_quickInspectorImageNamed:", v60);

      v62 = String._bridgeToObjectiveC()();
      v63 = objc_msgSend(v45, "elementWithName:image:type:action:", v62, v61, 2, "reloadMetadata:", swift_bridgeObjectRelease(v59).n128_f64[0]);

      objc_msgSend(v63, "setTag:", 20);
      v64 = objc_msgSend(v36, "mainBundle");
      v65 = String._bridgeToObjectiveC()();
      v66 = String._bridgeToObjectiveC()();
      v67 = objc_msgSend(v64, "localizedStringForKey:value:table:", v65, v66, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v69 = v68;

      v70 = String._bridgeToObjectiveC()();
      objc_msgSend(v63, "setToolTip:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

      v71 = v63;
      objc_msgSend(v74, "addObject:", v71);

    }
  }
}

uint64_t sub_1007135CC(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  objc_class *v20;
  objc_super v22;
  _QWORD v23[3];
  uint64_t v24;

  if ((static Selector.== infix(_:_:)(a1, "editURL:") & 1) != 0)
  {
    v5 = objc_msgSend(v2, "boardItems");
    v6 = type metadata accessor for CRLBoardItem(0);
    v7 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

    if ((v8 & 0xC000000000000001) != 0)
    {
      if (v8 < 0)
        v9 = v8;
      else
        v9 = v8 & 0xFFFFFFFFFFFFFF8;
      v10 = __CocoaSet.count.getter(v9);
    }
    else
    {
      v10 = *(_QWORD *)(v8 + 16);
    }
    swift_bridgeObjectRelease(v8);
    return v10 == 1;
  }
  else if ((static Selector.== infix(_:_:)(a1, "reloadMetadata:") & 1) != 0)
  {
    sub_100713834();
    if ((v11 & 1) != 0)
      return 1;
    else
      return -1;
  }
  else
  {
    sub_1004CB7BC(a2, (uint64_t)v23, &qword_1013E0230);
    v13 = v24;
    if (v24)
    {
      v14 = sub_1004BB5A4(v23, v24);
      v15 = *(_QWORD *)(v13 - 8);
      v16 = __chkstk_darwin(v14);
      v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v15 + 16))(v18, v16);
      v19 = _bridgeAnythingToObjectiveC<A>(_:)(v18, v13);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v23);
    }
    else
    {
      v19 = 0;
    }
    v20 = (objc_class *)type metadata accessor for CRLURLEditor();
    v22.receiver = v2;
    v22.super_class = v20;
    v12 = objc_msgSendSuper2(&v22, "canPerformEditorAction:withSender:", a1, v19);
    swift_unknownObjectRelease(v19);
  }
  return (uint64_t)v12;
}

void sub_100713834()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = sub_1004B804C(&qword_1013E04D0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "interactiveCanvasController", v2);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v0, "boardItems");
    v8 = type metadata accessor for CRLBoardItem(0);
    v9 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v8, v9);

    v11 = v6;
    sub_100716D54(v10, v11);
    v13 = v12;
    swift_bridgeObjectRelease(v10);

    if (!((unint64_t)v13 >> 62))
      goto LABEL_3;
  }
  else
  {
    v13 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_3:
      if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_18:
      swift_bridgeObjectRelease(v13);
      return;
    }
  }
  if (v13 < 0)
    v31 = v13;
  else
    v31 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v13);
  if (!v32)
    goto LABEL_18;
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v15 = v14;
  v16 = objc_msgSend(v0, "interactiveCanvasController", swift_bridgeObjectRelease(v13).n128_f64[0]);
  if (!v16)
  {
    v24 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_9;
LABEL_21:
    if (v24 < 0)
      v33 = v24;
    else
      v33 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v25 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v24);
    goto LABEL_10;
  }
  v17 = v16;
  v18 = objc_msgSend(v0, "boardItems");
  v19 = type metadata accessor for CRLBoardItem(0);
  v20 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v18, v19, v20);

  v22 = v17;
  sub_100716D54(v21, v22);
  v24 = v23;
  swift_bridgeObjectRelease(v21);

  if ((unint64_t)v24 >> 62)
    goto LABEL_21;
LABEL_9:
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  swift_bridgeObjectRelease(v24);
  if (v25 != 1)
  {

    return;
  }
  v26 = *(void (**)(void))((swift_isaMask & *v15) + 0x1B8);
  v27 = v15;
  v26();

  v28 = type metadata accessor for URL(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v4, 1, v28);
  if ((_DWORD)v30 == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
LABEL_29:

    return;
  }
  v34 = URL.scheme.getter(v30);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v28);
  if (!v36)
    goto LABEL_29;
  if (v34 == 0x6567617373656DLL && v36 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);

  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, 0x6567617373656DLL, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v36);

  }
}

void sub_100713BF8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, "interactiveCanvasController", v3);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v1, "boardItems");
    v9 = type metadata accessor for CRLBoardItem(0);
    v10 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

    v12 = v7;
    sub_100716D54(v11, v12);
    v14 = v13;

    swift_bridgeObjectRelease(v11);
    if (!((unint64_t)v14 >> 62))
      goto LABEL_3;
  }
  else
  {
    v14 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_3:
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_16:
      swift_bridgeObjectRelease(v14);
LABEL_18:
      sub_100757E04(&_mh_execute_header, (uint64_t)"reloadMetadata(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLEditor.swift", 83, 2, 192, "Unexpected rep count.", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadMetadata(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLEditor.swift", 83, 2u, 192, (uint64_t)"Unexpected rep count.", 21, 2u);
      return;
    }
  }
  if (v14 < 0)
    v27 = v14;
  else
    v27 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v14);
  if (!v28)
    goto LABEL_16;
LABEL_4:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v15 = *(id *)(v14 + 32);
  }
  v16 = v15;
  swift_bridgeObjectRelease(v14);
  sub_100713834();
  if ((v17 & 1) == 0)
  {

    goto LABEL_18;
  }
  (*(void (**)(void))((swift_isaMask & *v16) + 0x130))();
  v18 = OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask;
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask];
  if (v19)
  {
    swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask]);
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    swift_release(v19);
  }
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
  type metadata accessor for MainActor(0);
  v21 = v16;
  v22 = v1;
  v23 = static MainActor.shared.getter(v22);
  v24 = (_QWORD *)swift_allocObject(&unk_10127A3C8, 48, 7);
  v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v22;
  v24[5] = v21;
  v25 = sub_100618920((uint64_t)v5, (uint64_t)&unk_1013EF370, (uint64_t)v24);
  v26 = *(_QWORD *)&v1[v18];
  *(_QWORD *)&v1[v18] = v25;

  swift_release(v26);
}

uint64_t sub_100713F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[33] = a4;
  v5[34] = a5;
  v6 = type metadata accessor for CancellationError(0);
  v5[35] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[36] = v7;
  v5[37] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E04D0);
  v5[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[39] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[40] = v10;
  v5[41] = v11;
  return swift_task_switch(sub_10071400C, v10, v11);
}

uint64_t sub_10071400C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = objc_msgSend(*(id *)(v0 + 264), "boardItems");
  v2 = type metadata accessor for CRLBoardItem(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  v5 = (void *)sub_100857E90(v4);
  *(_QWORD *)(v0 + 336) = v5;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    v6 = type metadata accessor for CRLURLItem(0);
    v7 = swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v0 + 304);
      v10 = objc_msgSend(*(id *)(v0 + 264), "editingCoordinator");
      v11 = sub_100719214();

      *(_QWORD *)(v0 + 344) = sub_1008D4DDC();
      swift_release(v11);
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
      v13 = (_QWORD *)swift_task_alloc(dword_101400E04);
      *(_QWORD *)(v0 + 352) = v13;
      *v13 = v0;
      v13[1] = sub_1007141A0;
      return sub_1009EA79C(v8, *(_QWORD *)(v0 + 304));
    }
    swift_release(*(_QWORD *)(v0 + 312));

  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 312));
  }
  v15 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007141A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 344);
  v3 = *(_QWORD *)(*v1 + 352);
  v5 = *(_QWORD *)(*v1 + 304);
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc(v3);
  sub_1004CB800(v5, &qword_1013E04D0);
  swift_release(v4);
  if (v0)
    v6 = sub_100714330;
  else
    v6 = sub_100714224;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 320), *(_QWORD *)(v2 + 328));
}

uint64_t sub_100714224()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 312));
  CRLLinkViewHostingRep.tearDownReload()();

  v2 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100714278()
{
  uint64_t v0;

  return swift_task_switch(sub_1007142BC, *(_QWORD *)(*(_QWORD *)v0 + 320), *(_QWORD *)(*(_QWORD *)v0 + 328));
}

uint64_t sub_1007142BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)(v0 + 376);
  v1 = *(void **)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(void **)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 312));
  swift_errorRelease(v3);

  swift_errorRelease(*(_QWORD *)(v0 + 240));
  v5 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100714330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 360);
  CRLLinkViewHostingRep.tearDownReload()();
  *(_QWORD *)(v0 + 240) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  v3 = swift_dynamicCast(v0 + 393, v0 + 240, v2, &type metadata for CRLMetadataProviderError, 0);
  v4 = *(_QWORD *)(v0 + 360);
  if ((v3 & 1) != 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 360));
    v5 = *(_BYTE *)(v0 + 393);
    if ((static Task<>.isCancelled.getter(v6) & 1) != 0 || (sub_10071471C(v5), (*(_QWORD *)(v0 + 368) = v7) == 0))
    {
      v26 = *(void **)(v0 + 336);
      swift_release(*(_QWORD *)(v0 + 312));
    }
    else
    {
      v8 = v7;
      v9 = objc_msgSend(*(id *)(v0 + 264), "interactiveCanvasController");
      *(_QWORD *)(v0 + 376) = v9;
      if (v9)
      {
        v10 = v9;
        v11 = v0 + 16;
        v12 = _convertErrorToNSError(_:)(v8);
        *(_QWORD *)(v0 + 384) = v12;
        *(_QWORD *)(v0 + 56) = v0 + 392;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_100714278;
        v13 = swift_continuation_init(v0 + 16, 0);
        *(_QWORD *)(v0 + 152) = _NSConcreteStackBlock;
        v14 = (_QWORD *)(v0 + 152);
        v14[1] = 0x40000000;
        v14[2] = sub_10091D2A0;
        v14[3] = &unk_10127A3E0;
        v14[4] = v13;
        objc_msgSend(v10, "presentError:completionHandler:", v12, v14);
        return swift_continuation_await(v11);
      }
      v26 = *(void **)(v0 + 336);
      swift_release(*(_QWORD *)(v0 + 312));
      swift_errorRelease(v8);
    }

    v25 = *(_QWORD *)(v0 + 240);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 280);
    swift_release(*(_QWORD *)(v0 + 312));
    swift_errorRelease(*(_QWORD *)(v0 + 240));
    *(_QWORD *)(v0 + 248) = v4;
    swift_errorRetain(v4);
    if (swift_dynamicCast(v16, v0 + 248, v2, v17, 0))
    {
      swift_errorRelease(*(_QWORD *)(v0 + 360));
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      v18 = *(void **)(v0 + 336);
      v20 = *(_QWORD *)(v0 + 288);
      v19 = *(_QWORD *)(v0 + 296);
      v21 = *(_QWORD *)(v0 + 280);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 192, 0, 0);
      v22 = (id)static OS_os_log.crlDefault;
      v24 = static os_log_type_t.default.getter(v23);
      sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v24, "Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
      v25 = *(_QWORD *)(v0 + 248);
    }
    else
    {
      swift_errorRelease(*(_QWORD *)(v0 + 248));
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      v27 = *(_QWORD *)(v0 + 360);
      v28 = *(void **)(v0 + 336);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 216, 0, 0);
      v29 = (void *)static OS_os_log.crlDefault;
      v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v30, v0 + 80);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v0 + 256) = v27;
      swift_errorRetain(v27);
      v32 = v29;
      v33 = String.init<A>(describing:)(v0 + 256, v2);
      v35 = v34;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v36 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v36;
      *(_QWORD *)(inited + 32) = v33;
      *(_QWORD *)(inited + 40) = v35;
      v37 = static os_log_type_t.error.getter(v36);
      sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v37, "Error reloading URL: %@", 23, 2, inited);

      swift_setDeallocating(inited);
      v38 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v38);

      v25 = v27;
    }
  }
  swift_errorRelease(v25);
  v39 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10071471C(char a1)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  __asm { BR              X10 }
}

id sub_10071480C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  char v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  void *v60;
  NSString v61;
  NSString v62;
  id v63;

  v50 = objc_msgSend(v47, *(SEL *)(v49 + 3424));
  v51 = String._bridgeToObjectiveC()();
  v52 = String._bridgeToObjectiveC()();
  v53 = objc_msgSend(v50, *(SEL *)(v48 + 3104), v51, v52, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
  v55 = v54;

  v56 = (void *)objc_opt_self(NSError);
  v57 = sub_1007170B0();
  v58 = swift_allocError(&type metadata for CRLMetadataProviderError, v57, 0, 0);
  *v59 = v45;
  v60 = (void *)_convertErrorToNSError(_:)(v58);
  swift_errorRelease(v58);
  v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  v62 = String._bridgeToObjectiveC()();
  v63 = objc_msgSend(v56, "crl_errorWithError:alertTitle:alertMessage:additionalUserInfo:", v60, v61, v62, 0, swift_bridgeObjectRelease(v55).n128_f64[0]);

  return v63;
}

uint64_t sub_100714BDC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, __n128))
{
  id v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    v10 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v9 = a1;
  }
  a4(v9, v10);

  return sub_1004CB800((uint64_t)v12, &qword_1013E0230);
}

void sub_100714C58(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN ****v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v3 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = objc_msgSend(v1, "boardItems", v4);
  v8 = type metadata accessor for CRLBoardItem(0);
  v9 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v8, v9);

  v11 = (void *)sub_100857E90(v10);
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_8;
  v12 = type metadata accessor for CRLURLItem(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13)
  {

LABEL_8:
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
    return;
  }
  v14 = *(_UNKNOWN *****)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v14 == &off_1014007D0)
    v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v15 = 0;
  swift_beginAccess(v15 + qword_101480208, v22, 32, 0);
  swift_retain(v14);
  v16 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v16);
  swift_endAccess(v22);
  swift_release(v14);
  v17 = &v6[*(int *)(v3 + 20)];
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v19 + 16))(a1, v17, v18);
  sub_100716C6C((uint64_t)v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);

}

void sub_100714E50(char *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = v3;
  v44 = a1;
  v46 = type metadata accessor for URL(0);
  v45 = *(_QWORD *)(v46 - 8);
  v8 = *(_QWORD *)(v45 + 64);
  __chkstk_darwin(v46);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(v3, "boardItems", v11);
  v15 = type metadata accessor for CRLBoardItem(0);
  v16 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, v15, v16);

  if ((v17 & 0xC000000000000001) != 0)
  {
    if (v17 < 0)
      v18 = v17;
    else
      v18 = v17 & 0xFFFFFFFFFFFFFF8;
    v19 = __CocoaSet.count.getter(v18);
  }
  else
  {
    v19 = *(_QWORD *)(v17 + 16);
  }
  swift_bridgeObjectRelease(v17);
  if (v19 == 1)
  {
    v42 = a2;
    v43 = v4;
    v41 = OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask;
    v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask];
    if (v20)
    {
      swift_retain(*(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask]);
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v20);
    }
    v21 = type metadata accessor for TaskPriority(0);
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v40 = v13;
    v22(v13, 1, 1, v21);
    v23 = swift_allocObject(&unk_10127A310, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    v24 = v44;
    v25 = v45;
    v26 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v44 = v5;
    v27 = v46;
    v26((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v46);
    type metadata accessor for MainActor(0);
    swift_retain(v23);
    swift_retain(a3);
    v29 = static MainActor.shared.getter(v28);
    v30 = *(unsigned __int8 *)(v25 + 80);
    v31 = (v30 + 40) & ~v30;
    v32 = a3;
    v33 = (v8 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (char *)swift_allocObject(&unk_10127A388, v33 + 16, v30 | 7);
    *((_QWORD *)v34 + 2) = v29;
    *((_QWORD *)v34 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v34 + 4) = v23;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v34[v31], v9, v27);
    v35 = &v34[v33];
    *(_QWORD *)v35 = v42;
    *((_QWORD *)v35 + 1) = v32;
    swift_release(v23);
    v36 = sub_100618920((uint64_t)v40, (uint64_t)&unk_1013EF358, (uint64_t)v34);
    v37 = *(_QWORD *)&v44[v41];
    *(_QWORD *)&v44[v41] = v36;
    swift_release(v37);
  }
  else
  {
    v38 = sub_100716AD0();
    swift_allocError(&type metadata for CRLURLEditor.CRLURLEditorError, v38, 0, 0);
    swift_willThrow(v39);
  }
}

uint64_t sub_10071515C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[38] = a6;
  v7[39] = a7;
  v7[36] = a4;
  v7[37] = a5;
  v8 = type metadata accessor for CancellationError(0);
  v7[40] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[41] = v9;
  v7[42] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[43] = v10;
  v7[44] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[45] = v11;
  v7[46] = v12;
  return swift_task_switch(sub_1007151F8, v11, v12);
}

uint64_t sub_1007151F8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 288) + 16;
  swift_beginAccess(v1, v0 + 240, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 376) = Strong;
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "boardItems");
    v5 = type metadata accessor for CRLBoardItem(0);
    v6 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

    v8 = (void *)sub_100857E90(v7);
    *(_QWORD *)(v0 + 384) = v8;
    swift_bridgeObjectRelease(v7);
    if (v8)
    {
      v9 = type metadata accessor for CRLURLItem(0);
      v10 = swift_dynamicCastClass(v8, v9);
      if (v10)
      {
        v11 = v10;
        v12 = objc_msgSend(v3, "editingCoordinator");
        v13 = sub_100719214();

        *(_QWORD *)(v0 + 392) = sub_1008D4DDC();
        swift_release(v13);
        *(_QWORD *)(v0 + 400) = static MainActor.shared.getter(v14);
        v15 = (_QWORD *)swift_task_alloc(dword_101400E0C);
        *(_QWORD *)(v0 + 408) = v15;
        *v15 = v0;
        v15[1] = sub_100715450;
        return sub_1009EACE8(v11, *(_QWORD *)(v0 + 296), 0);
      }

    }
    v17 = *(_QWORD *)(v0 + 352);
    sub_100757E04(&_mh_execute_header, (uint64_t)"replace(url:completion:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLEditor.swift", 83, 2, 262, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"replace(url:completion:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLEditor.swift", 83, 2u, 262, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 352);
  }
  swift_release(v17);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100715450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 408);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 344);
  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100715570;
  else
    v6 = sub_1007154D8;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007154D8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[49];
  swift_release(v0[50]);
  swift_release(v1);
  return swift_task_switch(sub_100715518, v0[45], v0[46]);
}

uint64_t sub_100715518()
{
  uint64_t v0;
  __n128 v1;
  void *v2;
  void *v3;

  v1 = swift_release(*(_QWORD *)(v0 + 352));
  v3 = *(void **)(v0 + 376);
  v2 = *(void **)(v0 + 384);
  (*(void (**)(__n128))(v0 + 304))(v1);

  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100715570()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[50];
  swift_release(v0[49]);
  swift_release(v1);
  return swift_task_switch(sub_1007155B0, v0[45], v0[46]);
}

uint64_t sub_1007155B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;

  v1 = *(_QWORD *)(v0 + 416);
  *(_QWORD *)(v0 + 272) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  v3 = swift_dynamicCast(v0 + 496, v0 + 272, v2, &type metadata for CRLMetadataProviderError, 0);
  v4 = *(_QWORD *)(v0 + 416);
  if ((v3 & 1) != 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 416));
    v5 = *(_BYTE *)(v0 + 496);
    if ((static Task<>.isCancelled.getter(v6) & 1) == 0)
    {
      sub_1008902D4(v5);
      *(_QWORD *)(v0 + 424) = v7;
      if (v7)
      {
        v8 = *(_QWORD *)(v0 + 344);
        *(_QWORD *)(v0 + 432) = static MainActor.shared.getter(v7);
        v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 440) = v9;
        *(_QWORD *)(v0 + 448) = v10;
        return swift_task_switch(sub_1007158F4, v9, v10);
      }
    }
    swift_release(*(_QWORD *)(v0 + 352));
    v20 = *(_QWORD *)(v0 + 272);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 320);
    swift_release(*(_QWORD *)(v0 + 352));
    swift_errorRelease(*(_QWORD *)(v0 + 272));
    *(_QWORD *)(v0 + 280) = v4;
    swift_errorRetain(v4);
    if (swift_dynamicCast(v12, v0 + 280, v2, v13, 0))
    {
      swift_errorRelease(*(_QWORD *)(v0 + 416));
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      v15 = *(_QWORD *)(v0 + 328);
      v14 = *(_QWORD *)(v0 + 336);
      v16 = *(_QWORD *)(v0 + 320);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 192, 0, 0);
      v17 = (id)static OS_os_log.crlDefault;
      v19 = static os_log_type_t.default.getter(v18);
      sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      v20 = *(_QWORD *)(v0 + 280);
    }
    else
    {
      swift_errorRelease(*(_QWORD *)(v0 + 280));
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      v21 = *(_QWORD *)(v0 + 416);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 216, 0, 0);
      v22 = (void *)static OS_os_log.crlDefault;
      v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v23, v0 + 80);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v0 + 264) = v21;
      swift_errorRetain(v21);
      v25 = v22;
      v26 = String.init<A>(describing:)(v0 + 264, v2);
      v28 = v27;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v29 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v29;
      *(_QWORD *)(inited + 32) = v26;
      *(_QWORD *)(inited + 40) = v28;
      v30 = static os_log_type_t.error.getter(v29);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v30, "Error replacing URL: %@", 23, 2, inited);
      swift_setDeallocating(inited);
      v31 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v31);

      v20 = v21;
    }
  }
  v32 = swift_errorRelease(v20);
  v34 = *(void **)(v0 + 376);
  v33 = *(void **)(v0 + 384);
  (*(void (**)(uint64_t))(v0 + 304))(v32);

  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007158F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[47];
  v3 = static MainActor.shared.getter(a1);
  v1[57] = v3;
  v4 = swift_task_alloc(32);
  v1[58] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[59] = v5;
  *v5 = v1;
  v5[1] = sub_1007159A8;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000100FCA4C0, sub_10071750C, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1007159A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 464);
  v3 = *(_QWORD *)(*v0 + 456);
  swift_task_dealloc(*(_QWORD *)(*v0 + 472));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100715A10, *(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 448));
}

uint64_t sub_100715A10()
{
  _QWORD *v0;

  swift_release(v0[54]);
  return swift_task_switch(sub_100715A48, v0[45], v0[46]);
}

uint64_t sub_100715A48()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  void *v10;
  void *v11;

  v1 = objc_msgSend(*(id *)(v0 + 376), "interactiveCanvasController");
  *(_QWORD *)(v0 + 480) = v1;
  v2 = *(_QWORD *)(v0 + 424);
  if (v1)
  {
    v3 = v1;
    v4 = v0 + 16;
    v5 = _convertErrorToNSError(_:)(*(_QWORD *)(v0 + 424));
    *(_QWORD *)(v0 + 488) = v5;
    *(_QWORD *)(v0 + 56) = v0 + 497;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_100715B6C;
    v6 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 152) = _NSConcreteStackBlock;
    v7 = (_QWORD *)(v0 + 152);
    v7[1] = 0x40000000;
    v7[2] = sub_10091D2A0;
    v7[3] = &unk_10127A3A0;
    v7[4] = v6;
    objc_msgSend(v3, "presentError:completionHandler:", v5, v7);
    return swift_continuation_await(v4);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 352));
    swift_errorRelease(v2);
    v9 = swift_errorRelease(*(_QWORD *)(v0 + 272));
    v11 = *(void **)(v0 + 376);
    v10 = *(void **)(v0 + 384);
    (*(void (**)(uint64_t))(v0 + 304))(v9);

    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100715B6C()
{
  uint64_t v0;

  return swift_task_switch(sub_100715BB0, *(_QWORD *)(*(_QWORD *)v0 + 360), *(_QWORD *)(*(_QWORD *)v0 + 368));
}

uint64_t sub_100715BB0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 424);
  swift_release(*(_QWORD *)(v0 + 352));
  swift_errorRelease(v3);

  v4 = swift_errorRelease(*(_QWORD *)(v0 + 272));
  v6 = *(void **)(v0 + 376);
  v5 = *(void **)(v0 + 384);
  (*(void (**)(uint64_t))(v0 + 304))(v4);

  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100715C9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLEditor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLURLEditor()
{
  return objc_opt_self(_TtC8Freeform12CRLURLEditor);
}

double sub_100715D44()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask;
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask];
  if (v5)
  {
    swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask]);
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    swift_release(v5);
    v6 = *(_QWORD *)&v0[v4];
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)&v0[v4] = 0;
  swift_release(v6);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v0;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_10127A248, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013EF320, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_100715E80(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask;
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask];
  if (v15)
  {
    swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask]);
    sub_100757E04(&_mh_execute_header, (uint64_t)"didSubmit(url:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLEditor.swift", 83, 2, 302, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didSubmit(url:didChange:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLEditor.swift", 83, 2u, 302, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
    swift_release(v15);
  }
  sub_1004CB7BC(a1, (uint64_t)v10, &qword_1013E04D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013E04D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    if ((a2 & 1) != 0 && !*(_QWORD *)&v2[v24])
    {
      v21 = swift_allocObject(&unk_10127A310, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      swift_retain(v21);
      sub_100714E50(v14, (uint64_t)sub_100716AC0, v21);
      v22.n128_f64[0] = (*(double (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      swift_release_n(v21, 2, v22);
      return;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = v2;
  v18 = static MainActor.shared.getter(v17);
  v19 = (_QWORD *)swift_allocObject(&unk_10127A2E8, 40, 7);
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v17;
  v20 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_1013EF330, (uint64_t)v19);
  swift_release(v20);
}

double sub_100716364(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  double result;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = a1 + 16;
  swift_beginAccess(v5, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    type metadata accessor for MainActor(0);
    v9 = v7;
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_10127A360, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v9;
    v12 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013EF340, (uint64_t)v11);

    swift_release(v12);
  }
  swift_beginAccess(v5, v16, 0, 0);
  v13 = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (v13)
  {
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask];
    *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform12CRLURLEditor_replaceTask] = 0;

    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_1007164C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v6 = static MainActor.shared.getter(v5);
  v4[4] = v6;
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_10071653C, v7, v8);
}

uint64_t sub_10071653C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[2];
  v3 = static MainActor.shared.getter(a1);
  v1[8] = v3;
  v4 = swift_task_alloc(32);
  v1[9] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[10] = v5;
  *v5 = v1;
  v5[1] = sub_1007165EC;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000100FCA4C0, sub_10071692C, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1007165EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100716654, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100716654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10053457C, v2, v3);
}

double sub_1007166AC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  id v19;
  double result;
  char *v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v4 = sub_1004B804C(&qword_1013EF328);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v8 = __chkstk_darwin(v4);
  v9 = *(char **)&a2[OBJC_IVAR____TtC8Freeform12CRLURLEditor_editURLAlert];
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v8);
    v10 = *(unsigned __int8 *)(v5 + 80);
    v11 = (v10 + 24) & ~v10;
    v12 = swift_allocObject(&unk_10127A270, v11 + v6, v10 | 7);
    *(_QWORD *)(v12 + 16) = a2;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    v13 = *(void **)&v9[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
    if (v13)
    {
      v14 = (_QWORD *)swift_allocObject(&unk_10127A298, 40, 7);
      v14[2] = v9;
      v14[3] = sub_1007169AC;
      v14[4] = v12;
      aBlock[4] = sub_100541D18;
      v23 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10127A2B0;
      v15 = _Block_copy(aBlock);
      v16 = v23;
      v17 = v9;
      v18 = a2;
      v19 = v13;
      swift_retain(v12);
      objc_msgSend(v19, "dismissViewControllerAnimated:completion:", 1, v15, swift_release(v16).n128_f64[0]);
      _Block_release(v15);

    }
    else
    {
      v21 = a2;
    }
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  else
  {
    CheckedContinuation.resume(returning:)(v7, v4);
  }
  return result;
}

uint64_t sub_100716870(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform12CRLURLEditor_editURLAlert);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLURLEditor_editURLAlert) = 0;

  v2 = sub_1004B804C(&qword_1013EF328);
  return CheckedContinuation.resume(returning:)(v2, v2);
}

uint64_t sub_1007168C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EF31C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1007164C0(a1, v4, v5, v6);
}

double sub_10071692C(uint64_t a1)
{
  uint64_t v1;

  return sub_1007166AC(a1, *(char **)(v1 + 16));
}

uint64_t sub_100716934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EF328);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007169AC()
{
  uint64_t v0;

  sub_1004B804C(&qword_1013EF328);
  return sub_100716870(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1007169E0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100716A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100716A24(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100716A30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EF31C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_1007164C0(a1, v4, v5, v6);
}

uint64_t sub_100716A9C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100716AC0()
{
  uint64_t v0;

  return sub_100716364(v0);
}

unint64_t sub_100716AD0()
{
  unint64_t result;

  result = qword_1013EF348;
  if (!qword_1013EF348)
  {
    result = swift_getWitnessTable(&unk_100F0764C, &type metadata for CRLURLEditor.CRLURLEditorError);
    atomic_store(result, &qword_1013EF348);
  }
  return result;
}

uint64_t sub_100716B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100716BB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc(dword_1013EF354);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_10071515C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100716C6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100716CA8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100716CDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013EF36C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_100713F54(a1, v4, v5, v7, v6);
}

void sub_100716D54(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD v38[5];
  unint64_t v39;

  v3 = a1;
  v39 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for CRLBoardItem(0);
    v7 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v38, v5, v6, v7);
    v3 = v38[0];
    v35 = v38[1];
    v9 = v38[2];
    v10 = v38[3];
    v11 = v38[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v35 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v34 = (unint64_t)(v9 + 64) >> 6;
  while (v3 < 0)
  {
    v18 = __CocoaSet.Iterator.next()(v8);
    if (!v18)
      goto LABEL_42;
    v19 = v18;
    v36 = v18;
    v20 = type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v37, &v36, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
    v21 = v37;
    *(_QWORD *)&v22 = swift_unknownObjectRelease(v19).n128_u64[0];
    v17 = v10;
    v15 = v11;
    if (!v21)
      goto LABEL_42;
LABEL_36:
    v26 = objc_msgSend(a2, "repForInfo:", v21, v22);
    if (v26)
    {
      v27 = v26;
      v28 = type metadata accessor for CRLURLRep(0);
      v29 = swift_dynamicCastClass(v27, v28);

      if (v29)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v32 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v31 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v32 >= v31 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
        v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
        v8 = (_QWORD *)specialized Array._endMutation()(v33);
      }
      else
      {

      }
    }
    else
    {

    }
    v10 = v17;
    v11 = v15;
  }
  if (v11)
  {
    v15 = (v11 - 1) & v11;
    v16 = __clz(__rbit64(v11)) | (v10 << 6);
    v17 = v10;
LABEL_35:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_42;
    goto LABEL_36;
  }
  v23 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v23 >= v34)
      goto LABEL_42;
    v24 = *(_QWORD *)(v35 + 8 * v23);
    v17 = v10 + 1;
    if (!v24)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_42;
      v24 = *(_QWORD *)(v35 + 8 * v17);
      if (!v24)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_42;
        v24 = *(_QWORD *)(v35 + 8 * v17);
        if (!v24)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v34)
            goto LABEL_42;
          v24 = *(_QWORD *)(v35 + 8 * v17);
          if (!v24)
          {
            v17 = v10 + 5;
            if (v10 + 5 >= v34)
              goto LABEL_42;
            v24 = *(_QWORD *)(v35 + 8 * v17);
            if (!v24)
            {
              v25 = v10 + 6;
              while (v34 != v25)
              {
                v24 = *(_QWORD *)(v35 + 8 * v25++);
                if (v24)
                {
                  v17 = v25 - 1;
                  goto LABEL_34;
                }
              }
LABEL_42:
              sub_1004D284C(v3);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v15 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v17 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

unint64_t sub_1007170B0()
{
  unint64_t result;

  result = qword_1013EF378;
  if (!qword_1013EF378)
  {
    result = swift_getWitnessTable(&unk_100F2D334, &type metadata for CRLMetadataProviderError);
    atomic_store(result, (unint64_t *)&qword_1013EF378);
  }
  return result;
}

BOOL sub_1007170F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _BOOL8 v5;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    if (__CocoaSet.count.getter(a1) != 1)
      return 0;
  }
  else if (*(_QWORD *)(a1 + 16) != 1)
  {
    return 0;
  }
  swift_bridgeObjectRetain(v1);
  v3 = (void *)sub_100857E90(v2);
  swift_bridgeObjectRelease(v1);
  if (!v3)
    return 0;
  v4 = type metadata accessor for CRLURLItem(0);
  v5 = swift_dynamicCastClass(v3, v4) != 0;

  return v5;
}

uint64_t sub_10071718C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _UNKNOWN ****v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  id v17;
  NSURL *v18;
  void *v19;
  void *v20;
  unint64_t v21;
  Class isa;
  _BYTE v24[24];

  v2 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_UNKNOWN *****)(a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v12 == &off_1014007D0)
    v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v13 = 0;
  swift_beginAccess(v13 + qword_101480208, v24, 32, 0);
  swift_retain(v12);
  v14 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v14);
  swift_endAccess(v24);
  v15 = swift_release(v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v9 + 16))(v7, &v4[*(int *)(v2 + 20)], v8, v15);
  sub_100716C6C((uint64_t)v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1004CB800((uint64_t)v7, &qword_1013E04D0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v18);
  v20 = v19;
  v21 = sub_1008D711C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1004B7878((unint64_t *)&qword_1013DEE88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF47EC);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "openURL:options:completionHandler:", v20, isa, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t storeEnumTagSinglePayload for CRLURLEditor.CRLURLEditorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100717468 + 4 * asc_100F075A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100717488 + 4 * byte_100F075A5[v4]))();
}

_BYTE *sub_100717468(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100717488(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100717490(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100717498(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1007174A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1007174A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLURLEditor.CRLURLEditorError()
{
  return &type metadata for CRLURLEditor.CRLURLEditorError;
}

unint64_t sub_1007174C8()
{
  unint64_t result;

  result = qword_1013EF388;
  if (!qword_1013EF388)
  {
    result = swift_getWitnessTable(&unk_100F07624, &type metadata for CRLURLEditor.CRLURLEditorError);
    atomic_store(result, (unint64_t *)&qword_1013EF388);
  }
  return result;
}

uint64_t sub_100717510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;

  v21 = a4;
  v6 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004F370C(v9, (uint64_t)v23);
  if (!v24)
  {
    sub_1004CB800((uint64_t)v23, &qword_1013E0230);
    return 0;
  }
  v10 = sub_1004B804C(&qword_1013EF398);
  if ((swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
    return 0;
  v11 = v22;
  result = Array.count.getter(a2);
  if (result != *(_QWORD *)(v11 + 16))
  {
LABEL_12:
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  v13 = result;
  if (result)
  {
    v14 = 0;
    v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v21 + 8);
    v15 = (_QWORD *)(v11 + 32);
    while (v13 != v14)
    {
      result = Array.subscript.getter(v14, a2, a3);
      if (v14 >= *(_QWORD *)(v11 + 16))
        goto LABEL_16;
      v16 = v15[3];
      v17 = sub_1004BB5A4(v15, v16);
      v24 = v16;
      v18 = sub_10050D1B0(v23);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v18, v17, v16);
      LOBYTE(v17) = v20(v23, a3, v21);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
      result = sub_1004CB800((uint64_t)v23, &qword_1013E0230);
      if ((v17 & 1) == 0)
        goto LABEL_12;
      ++v14;
      v15 += 5;
      if (v13 == v14)
        goto LABEL_10;
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease(v11);
    return 1;
  }
  return result;
}

uint64_t sub_1007176DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_100717510(a1, *v3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

void sub_1007176F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t (*v58)(_QWORD *, uint64_t, uint64_t);
  uint64_t v59;
  char v60;
  __n128 v61;
  _QWORD v62[2];
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  _QWORD v81[4];
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v9 = *(_QWORD *)(a3 - 8);
  v77 = a2;
  v78 = v9;
  __chkstk_darwin(a1);
  v74 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v13);
  v80 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v15, a4, "key value ", 0);
  v17 = type metadata accessor for Optional(0, TupleTypeMetadata2);
  v75 = *(_QWORD *)(v17 - 8);
  v76 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v62 - v21;
  sub_1004F370C(a1, (uint64_t)v82);
  if (!v83)
  {
    sub_1004CB800((uint64_t)v82, &qword_1013E0230);
    return;
  }
  v23 = sub_1004CB6A4(&qword_1013EF390);
  v24 = type metadata accessor for Dictionary(0, a3, v23, a5);
  if ((swift_dynamicCast(v81, v82, (char *)&type metadata for Any + 8, v24, 6) & 1) != 0)
  {
    v25 = v81[0];
    v26 = Dictionary.count.getter(v77, a3, a4, a5);
    if (v26 != Dictionary.count.getter(v25, a3, v23, a5))
    {
      v31 = v25;
LABEL_47:
      swift_bridgeObjectRelease(v31);
      return;
    }
    v73 = v25;
    v69 = v23;
    v70 = a5;
    if ((v77 & 0xC000000000000001) != 0)
    {
      if (v77 < 0)
        v27 = v77;
      else
        v27 = v77 & 0xFFFFFFFFFFFFFF8;
      v28 = __CocoaDictionary.makeIterator()(v27);
      v63 = 0;
      v29 = 0;
      v79 = 0;
      v30 = v28 | 0x8000000000000000;
    }
    else
    {
      v30 = v77;
      v32 = -1 << *(_BYTE *)(v77 + 32);
      v29 = ~v32;
      v33 = *(_QWORD *)(v77 + 64);
      v63 = v77 + 64;
      v34 = -v32;
      if (v34 < 64)
        v35 = ~(-1 << v34);
      else
        v35 = -1;
      v79 = v35 & v33;
    }
    v36 = v73;
    v65 = v30 & 0x7FFFFFFFFFFFFFFFLL;
    v62[1] = v29;
    v64 = (unint64_t)(v29 + 64) >> 6;
    v62[0] = v64 - 1;
    v37 = swift_bridgeObjectRetain(v77);
    v38 = 0;
    v39 = v80;
    v67 = v19;
    v66 = TupleTypeMetadata2;
    v68 = v30;
    while (1)
    {
      v71 = v38;
      v72 = v79;
      if ((v30 & 0x8000000000000000) != 0)
      {
        v43 = __CocoaDictionary.Iterator.next()(v37);
        if (v43)
        {
          v45 = v43;
          v46 = v44;
          _forceBridgeFromObjectiveC<A>(_:_:)(v43, a3, a3);
          swift_unknownObjectRelease(v45);
          _forceBridgeFromObjectiveC<A>(_:_:)(v46, a4, a4);
          swift_unknownObjectRelease(v46);
          v42 = 0;
        }
        else
        {
          v42 = 1;
        }
        v77 = v71;
        v36 = v73;
        v79 = v72;
      }
      else
      {
        if (v79)
        {
          v40 = __clz(__rbit64(v79));
          v79 &= v79 - 1;
          v41 = v40 | (v38 << 6);
          v77 = v38;
          goto LABEL_19;
        }
        v47 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
          __break(1u);
          goto LABEL_50;
        }
        if (v47 < v64)
        {
          v48 = *(_QWORD *)(v63 + 8 * v47);
          if (v48)
            goto LABEL_25;
          v38 += 2;
          if (v47 + 1 >= v64)
          {
            v77 = v47;
            v79 = 0;
            v42 = 1;
            goto LABEL_36;
          }
          v48 = *(_QWORD *)(v63 + 8 * v38);
          if (v48)
          {
            ++v47;
            goto LABEL_25;
          }
          v49 = v47 + 2;
          if (v47 + 2 < v64)
          {
            v48 = *(_QWORD *)(v63 + 8 * v49);
            if (!v48)
            {
              while (1)
              {
                v47 = v49 + 1;
                if (__OFADD__(v49, 1))
                  break;
                if (v47 >= v64)
                {
                  v79 = 0;
                  v42 = 1;
                  v77 = v62[0];
                  goto LABEL_36;
                }
                v48 = *(_QWORD *)(v63 + 8 * v47);
                ++v49;
                if (v48)
                  goto LABEL_25;
              }
LABEL_50:
              __break(1u);
              return;
            }
            v47 += 2;
LABEL_25:
            v79 = (v48 - 1) & v48;
            v77 = v47;
            v41 = __clz(__rbit64(v48)) + (v47 << 6);
LABEL_19:
            (*(void (**)(char *, unint64_t, uint64_t, __n128))(v78 + 16))(v19, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v78 + 72) * v41, a3, v37);
            (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(&v19[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v30 + 56) + *(_QWORD *)(v12 + 72) * v41, a4);
            v42 = 0;
            goto LABEL_36;
          }
        }
        v79 = 0;
        v42 = 1;
        v77 = v38;
      }
LABEL_36:
      v50 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v19, v42, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v22, v19, v76);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v22, 1, TupleTypeMetadata2) == 1)
      {
        sub_1004D284C(v30);
        swift_bridgeObjectRelease(v36);
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, &v22[*(int *)(TupleTypeMetadata2 + 48)], a4);
      v51 = v78;
      v52 = v12;
      v53 = v36;
      v54 = v74;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v74, v22, a3);
      Dictionary.subscript.getter(v82, v54, v53, a3, v69, v70);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v54, a3);
      v55 = v83;
      if (!v83)
      {
        v61 = swift_bridgeObjectRelease(v73);
        (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v39, a4, v61);
        sub_1004CB800((uint64_t)v82, &qword_101405F70);
        sub_1004D284C(v68);
        return;
      }
      v56 = v84;
      sub_1004BB5A4(v82, v83);
      v81[3] = a4;
      v57 = sub_10050D1B0(v81);
      (*(void (**)(_QWORD *, char *, uint64_t))(v52 + 16))(v57, v80, a4);
      v58 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v56 + 8);
      v59 = v56;
      v39 = v80;
      v60 = v58(v81, v55, v59);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, a4);
      sub_1004CB800((uint64_t)v81, &qword_1013E0230);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v82);
      v36 = v73;
      v12 = v52;
      v19 = v67;
      TupleTypeMetadata2 = v66;
      v30 = v68;
      v38 = v77;
      if ((v60 & 1) == 0)
      {
        sub_1004D284C(v68);
        v31 = v36;
        goto LABEL_47;
      }
    }
  }
}

void sub_100717D98(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  sub_1007176F0(a1, *v2, a2[2], a2[3], a2[4]);
}

uint64_t sub_100717DAC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  _QWORD v23[4];
  _QWORD v24[4];

  v3 = v1[3];
  v4 = v1[4];
  sub_1004BB5A4(v1, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 120))(v24, v3, v4);
  sub_1004CB7BC((uint64_t)(v1 + 5), (uint64_t)&v21, &qword_1013EA650);
  if (v22)
  {
    sub_1004DB728(&v21, (uint64_t)&v14);
    v5 = *((_QWORD *)&v15 + 1);
    v6 = v16;
    sub_1004BB5A4(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 112))(v23, v5, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v14);
  }
  else
  {
    sub_1004CB800((uint64_t)&v21, &qword_1013EA650);
    v7 = v1[3];
    v8 = v1[4];
    sub_1004BB5A4(v1, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 120))(v23, v7, v8);
  }
  sub_1004D28A4((uint64_t)v23, (uint64_t)&v21);
  v9 = sub_100717F54();
  sub_1004CB7BC((uint64_t)v24, (uint64_t)v23, &qword_1013E0230);
  sub_1004CB7BC((uint64_t)&v21, (uint64_t)v20, &qword_1013E0230);
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  LOBYTE(v18) = v9;
  *((_QWORD *)&v18 + 1) = sub_1008A4EC8(v9);
  v19 = v10;
  sub_10056B738((uint64_t)v23, (uint64_t)&v14);
  sub_10056B738((uint64_t)v20, (uint64_t)&v16);
  v11 = v17;
  *(_OWORD *)(a1 + 32) = v16;
  *(_OWORD *)(a1 + 48) = v11;
  *(_OWORD *)(a1 + 64) = v18;
  *(_QWORD *)(a1 + 80) = v19;
  v12 = v15;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v12;
  sub_1004CB800((uint64_t)&v21, &qword_1013E0230);
  return sub_1004CB800((uint64_t)v24, &qword_1013E0230);
}

uint64_t sub_100717F54()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  sub_1004CB7BC((uint64_t)(v0 + 5), (uint64_t)&v27, &qword_1013EA650);
  if (!v28)
    goto LABEL_8;
  sub_1004DB728(&v27, (uint64_t)v30);
  v2 = v0[3];
  v3 = v0[4];
  sub_1004BB5A4(v0, v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 88))(&v27, v2, v3);
  v4 = v28;
  v5 = v29;
  sub_1004BB5A4(&v27, v28);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 80))(v4, v5);
  v6 = v31;
  v7 = v32;
  sub_1004BB5A4(v30, v31);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 88))(v24, v6, v7);
  v8 = v25;
  v9 = v26;
  sub_1004BB5A4(v24, v25);
  LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 80))(v8, v9);
  v10 = sub_1008A4EC8(v4);
  v12 = v11;
  v13 = sub_1008A4EC8(v9);
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v27);
    goto LABEL_10;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v27);
  if ((v17 & 1) != 0)
  {
LABEL_10:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
    goto LABEL_11;
  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000056, 0x8000000100FCA7A0, "Freeform/CRLLayerTweenPropertyTransition.swift", 46, 2, 28, 0);
  __break(1u);
LABEL_8:
  sub_1004CB800((uint64_t)&v27, &qword_1013EA650);
LABEL_11:
  v18 = v1[3];
  v19 = v1[4];
  sub_1004BB5A4(v1, v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 88))(v30, v18, v19);
  v20 = v31;
  v21 = v32;
  sub_1004BB5A4(v30, v31);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 80))(v20, v21);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
  return v22;
}

_QWORD *sub_100718198()
{
  _QWORD *result;
  _QWORD v1[11];

  result = (_QWORD *)sub_100717DAC((uint64_t)v1);
  if (v1[10])
  {
    sub_10071D364();
    return sub_1004E9164(v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for CRLLayerTweenPropertyTransition(_QWORD *a1)
{
  uint64_t result;

  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  if (a1[8])
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 5);
  return result;
}

uint64_t initializeWithCopy for CRLLayerTweenPropertyTransition(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 56);
    *v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for CRLLayerTweenPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_1004EA5C8((_QWORD *)a1, (_QWORD *)a2);
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    return a1;
  }
  if (!v4)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  sub_1004EA5C8((_QWORD *)(a1 + 40), (_QWORD *)(a2 + 40));
  return a1;
}

__n128 initializeWithTake for CRLLayerTweenPropertyTransition(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for CRLLayerTweenPropertyTransition(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 40));
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerTweenPropertyTransition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerTweenPropertyTransition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTweenPropertyTransition()
{
  return &type metadata for CRLLayerTweenPropertyTransition;
}

unint64_t sub_100718460(uint64_t a1)
{
  unint64_t result;

  result = sub_100718484();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100718484()
{
  unint64_t result;

  result = qword_1013EF3A0;
  if (!qword_1013EF3A0)
  {
    result = swift_getWitnessTable(&unk_100F07760, &type metadata for CRLLayerTweenPropertyTransition);
    atomic_store(result, (unint64_t *)&qword_1013EF3A0);
  }
  return result;
}

uint64_t sub_1007184C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v4 = (uint64_t)(a1 + 5);
  sub_1004CB7BC((uint64_t)(a1 + 5), (uint64_t)&v18, &qword_1013EA650);
  if (v19)
  {
    sub_1004DB728(&v18, (uint64_t)v14);
    sub_1004CB7BC(a2 + 40, (uint64_t)&v12, &qword_1013EA650);
    if (v13)
    {
      sub_1004DB728(&v12, (uint64_t)&v18);
      v5 = v15;
      v6 = v16;
      sub_1004BB5A4(v14, v15);
      v7 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v6 + 128))(&v18, v5, v6);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v18);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
      goto LABEL_9;
    }
    sub_1004CB800((uint64_t)&v12, &qword_1013EA650);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
  }
  else
  {
    sub_1004CB800((uint64_t)&v18, &qword_1013EA650);
  }
  sub_1004CB7BC(v4, (uint64_t)v14, &qword_1013EA650);
  v8 = v15;
  sub_1004CB800((uint64_t)v14, &qword_1013EA650);
  sub_1004E9128(a2, (uint64_t)v14);
  if (v8)
  {
    sub_1004E90F4(v14);
    v7 = 0;
  }
  else
  {
    sub_1004CB7BC((uint64_t)&v17, (uint64_t)&v18, &qword_1013EA650);
    sub_1004E90F4(v14);
    v7 = v19 == 0;
    sub_1004CB800((uint64_t)&v18, &qword_1013EA650);
  }
LABEL_9:
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 128))(a2, v9, v10) & v7 & 1;
}

uint64_t sub_100718758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t inserted;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[29] = a4;
  v5[30] = v4;
  v5[27] = a2;
  v5[28] = a3;
  v5[26] = a1;
  inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  v5[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(inserted - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_10140B9D0);
  v5[32] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[33] = v8;
  v5[34] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[35] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[36] = v10;
  v5[37] = v11;
  return swift_task_switch(sub_100718818, v10, v11);
}

uint64_t sub_100718818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  char *v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  objc_class *v34;
  char *v35;
  uint64_t v36;
  id v37;
  objc_class *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  objc_class *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  void *v57;
  id v58;
  uint64_t v59;
  id v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(char **)(v0 + 240);
  v63 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(void **)(v0 + 224);
  v7 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_changeNotifier;
  v8 = objc_allocWithZone((Class)CRLChangeNotifier);
  v9 = v4;
  v10 = objc_msgSend(v8, "init");
  v65 = v7;
  v66 = v4;
  *(_QWORD *)&v4[v7] = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator____lazy_storage___commandProvider] = 0;
  v11 = &v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator__enableCollaboratorCursors];
  *(_BYTE *)(v0 + 122) = 1;
  Published.init(initialValue:)(v0 + 122, &type metadata for Bool);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v11, v1, v3);
  v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_didFetchEnableCollaboratorCursors] = 0;
  v12 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers;
  *(_QWORD *)&v9[v12] = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_realTimeSessionUsesEncryption] = 0;
  v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_realTimeSessionNeedsAccountUpgrade] = 0;
  v13 = &v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_crlaxAnyRemoteEditDidHappenCancellable];
  *((_QWORD *)v13 + 4) = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor] = v5;
  v64 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard] = v6;
  v14 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionDispatcher());
  swift_retain(v5);
  v15 = v6;
  v16 = objc_msgSend(v14, "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_selectionDispatcher] = v16;
  objc_allocWithZone((Class)type metadata accessor for CRLCommandController());
  v17 = sub_1006A551C((uint64_t)v15, (uint64_t)v10, (uint64_t)v16);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController] = v17;
  if (v63)
  {
    v18 = *(_QWORD *)(v0 + 232);
    v19 = v18;
  }
  else
  {
    v20 = type metadata accessor for CRLSuspendResumeCoordinator();
    v19 = swift_allocObject(v20, 80, 7);
    *(_QWORD *)(v19 + 24) = 0;
    swift_unknownObjectWeakInit(v19 + 16, 0);
    *(_QWORD *)(v19 + 48) = 0;
    *(_QWORD *)(v19 + 56) = 0;
    *(_QWORD *)(v19 + 64) = sub_1008D5434((uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)(v19 + 72) = &_swiftEmptySetSingleton;
    *(_QWORD *)(v19 + 32) = 0;
    *(_BYTE *)(v19 + 40) = 1;
    v18 = *(_QWORD *)(v0 + 232);
  }
  v22 = *(char **)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 248);
  v23 = *(char **)(v0 + 224);
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator] = v19;
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager] = objc_msgSend(objc_allocWithZone((Class)CRLUndoManager), "initWithCommandController:", v17, swift_retain(v18).n128_f64[0]);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v24, v0 + 80, 0, 0);
  v25 = type metadata accessor for CRLBoardCRDTData(0);
  sub_1004B8460(v24 + *(int *)(v25 + 28), v21, type metadata accessor for CRLBoardInsertStyleData);
  v26 = (objc_class *)type metadata accessor for CRLBoardItemFactory(0);
  v27 = (char *)objc_allocWithZone(v26);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board] = v23;
  sub_1004B8460(v21, (uint64_t)&v27[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_insertStyleSettings], type metadata accessor for CRLBoardInsertStyleData);
  *(_QWORD *)(v0 + 192) = v27;
  *(_QWORD *)(v0 + 200) = v26;
  v28 = v23;
  v29 = objc_msgSendSuper2((objc_super *)(v0 + 192), "init");
  sub_1004B84A4(v21, type metadata accessor for CRLBoardInsertStyleData);
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory] = v29;
  v30 = *(void **)&v9[v64];
  v31 = objc_allocWithZone((Class)CRLSelectionModelTranslator);
  v32 = v30;
  v33 = objc_msgSend(v31, "init");
  v34 = (objc_class *)type metadata accessor for CRLSelectionPathValidator();
  v35 = (char *)objc_allocWithZone(v34);
  v36 = swift_unknownObjectWeakInit(&v35[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board], 0);
  swift_unknownObjectWeakAssign(v36, v32);
  *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v33;
  *(_QWORD *)(v0 + 176) = v35;
  *(_QWORD *)(v0 + 184) = v34;
  v37 = objc_msgSendSuper2((objc_super *)(v0 + 176), "init");

  v38 = (objc_class *)type metadata accessor for CRLCollaboratorCursorCoordinator();
  v39 = (char *)objc_allocWithZone(v38);
  v40 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap;
  v41 = v39;
  *(_QWORD *)&v39[v40] = sub_1008D5544((uint64_t)_swiftEmptyArrayStorage);
  v42 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap;
  *(_QWORD *)&v41[v42] = sub_1008D56EC((uint64_t)_swiftEmptyArrayStorage);
  v41[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__kShouldDisplayLatestSelection] = 1;
  v43 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  *(_QWORD *)&v41[v43] = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 512);
  v41[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors] = 1;
  *(_QWORD *)&v41[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator] = v37;
  v44 = v37;

  *(_QWORD *)(v0 + 128) = v41;
  *(_QWORD *)(v0 + 136) = v38;
  v45 = objc_msgSendSuper2((objc_super *)(v0 + 128), "init");

  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator] = v45;
  v46 = *(_QWORD *)&v66[v65];
  v47 = (objc_class *)type metadata accessor for CRLUIPropertyNotifier();
  v48 = (char *)objc_allocWithZone(v47);
  *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  v49 = &v48[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier];
  swift_unknownObjectWeakInit(&v48[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_changeNotifier], 0);
  v50 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(_QWORD *)&v48[v50] = sub_1008E019C(_swiftEmptyArrayStorage);
  swift_unknownObjectWeakAssign(v49, v46);
  *(_QWORD *)(v0 + 144) = v48;
  *(_QWORD *)(v0 + 152) = v47;
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_uiPropertyNotifier] = objc_msgSendSuper2((objc_super *)(v0 + 144), "init");
  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLFollowCoordinator(0)), "init");

  v51 = type metadata accessor for CRLEditingCoordinator(0);
  *(_QWORD *)(v0 + 160) = v22;
  *(_QWORD *)(v0 + 168) = v51;
  v52 = (char *)objc_msgSendSuper2((objc_super *)(v0 + 160), "init");
  *(_QWORD *)(v0 + 304) = v52;
  v53 = *(_QWORD *)&v52[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];
  swift_unknownObjectWeakAssign(v53 + OBJC_IVAR____TtC8Freeform8CRLBoard_hack_editingCoordinator, v52);
  v54 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_changeNotifier;
  *(_QWORD *)(v0 + 312) = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_changeNotifier;
  v55 = *(void **)&v52[v54];
  v56 = v52;
  objc_msgSend(v55, "addObserver:forChangeSource:", v56, v53);
  objc_msgSend(*(id *)(*(_QWORD *)&v56[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_selectionDispatcher]+ OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_receivers), "addObject:", *(_QWORD *)&v56[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator]);
  swift_unknownObjectWeakAssign(*(_QWORD *)(v53 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 24, v56);
  v57 = (void *)objc_opt_self(NSNotificationCenter);
  v58 = objc_msgSend(v57, "defaultCenter");
  v59 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager;
  objc_msgSend(v58, "addObserver:selector:name:object:", v56, "willUndo", NSUndoManagerWillUndoChangeNotification, *(_QWORD *)&v56[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager]);

  v60 = objc_msgSend(v57, "defaultCenter");
  objc_msgSend(v60, "addObserver:selector:name:object:", v56, "willRedo", NSUndoManagerWillRedoChangeNotification, *(_QWORD *)&v56[v59]);

  v61 = (_QWORD *)swift_task_alloc(dword_1013EF46C);
  *(_QWORD *)(v0 + 320) = v61;
  *v61 = v0;
  v61[1] = sub_100718F20;
  return sub_100719D88();
}

uint64_t sub_100718F20()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 320));
  return swift_task_switch(sub_100718F6C, *(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 296));
}

uint64_t sub_100718F6C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = *(char **)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v16 = *(_QWORD *)(v0 + 272);
  v17 = *(_QWORD *)(v0 + 248);
  v3 = *(void **)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(void **)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 280));
  v7 = *(void **)&v2[v1];
  v8 = sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v0 + 112) = v8;
  *(_WORD *)(v0 + 120) = 257;
  v9 = swift_allocObject(&unk_10127A640, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v2);
  v10 = v7;
  v11 = sub_1004B804C(&qword_1013EF4E8);
  v12 = sub_10071BC10();
  v13 = Publisher<>.sink(receiveValue:)(sub_10071BC08, v9, v11, v12);
  swift_release(v9);

  sub_1006CED34(*(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  *(_QWORD *)(v0 + 40) = type metadata accessor for AnyCancellable(0);
  *(_QWORD *)(v0 + 48) = &protocol witness table for AnyCancellable;
  swift_release(v4);

  swift_release(v6);
  *(_QWORD *)(v0 + 16) = v13;
  v14 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_crlaxAnyRemoteEditDidHappenCancellable];
  swift_beginAccess(v14, v0 + 56, 33, 0);
  sub_100582338(v0 + 16, v14, &qword_1013EE2F8);
  swift_endAccess(v0 + 56);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 304));
}

void sub_100719104(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  void *v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);

    static Date.now.getter(v9);
    v10 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
    v11 = (uint64_t)&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp];
    swift_beginAccess(&v8[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_crlaxFollowFeatureLastScrollTimestamp], v12, 33, 0);
    sub_100582338((uint64_t)v5, v11, &qword_1013E04F0);
    swift_endAccess(v12);

  }
}

uint64_t sub_100719214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator____lazy_storage___commandProvider;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator____lazy_storage___commandProvider);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator____lazy_storage___commandProvider);
  }
  else
  {
    v4 = type metadata accessor for CRLBoardCommandProvider();
    v3 = swift_allocObject(v4, 32, 7);
    v5 = swift_unknownObjectWeakInit(v3 + 16);
    *(_QWORD *)(v3 + 24) = 0;
    swift_unknownObjectWeakAssign(v5, v0);
    v6 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v6);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_100719318()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F078F0);
  v2 = swift_getKeyPath(&unk_100F07918);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_100719404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  KeyPath = swift_getKeyPath(&unk_100F078F0);
  v7 = swift_getKeyPath(&unk_100F07918);
  static Published.subscript.getter(&v16, v1, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) = v16;
  sub_100A0972C();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_didFetchEnableCollaboratorCursors) == 1)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = swift_allocObject(&unk_10127A640, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v1);
    type metadata accessor for MainActor(0);
    swift_retain(v10);
    v12 = static MainActor.shared.getter(v11);
    v13 = (_QWORD *)swift_allocObject(&unk_10127A690, 40, 7);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v10;
    swift_release(v10);
    v14 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013EF518, (uint64_t)v13);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_100719598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[21] = a4;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v4[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v4[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v4[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[25] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[26] = v9;
  v4[27] = v10;
  return swift_task_switch(sub_100719664, v9, v10);
}

uint64_t sub_100719664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 168) + 16;
  swift_beginAccess(v1, v0 + 88, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 224) = Strong;
  if (Strong)
  {
    v3 = Strong;
    v31 = *(_QWORD *)(v0 + 192);
    v4 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v6 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    *(_QWORD *)(v0 + 232) = v6;
    v7 = sub_1004B804C(&qword_1013EF520);
    v8 = type metadata accessor for CRLBoardIdentifierAndValue(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(unsigned __int8 *)(v9 + 80);
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(v7, v12 + v10, v11 | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
    v30 = v13 + v12;
    v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v15 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    v16 = v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 112, 0, 0);
    sub_1004B8460(v16, v4, type metadata accessor for CRLBoardCRDTData);
    v17 = v6;
    swift_retain(v15);
    v18 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v18);
    sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
    swift_release(v15);
    v19 = (uint64_t *)(*(_QWORD *)(v5 + v14) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v20 = *v19;
    v21 = v19[1];
    swift_bridgeObjectRetain(v21);
    sub_10067AFD0(v29, v20, v21, v31);
    KeyPath = swift_getKeyPath(&unk_100F078F0);
    v23 = swift_getKeyPath(&unk_100F07918);
    static Published.subscript.getter((_QWORD *)(v0 + 272), v3, KeyPath, v23);
    swift_release(KeyPath);
    swift_release(v23);
    LOBYTE(KeyPath) = *(_BYTE *)(v0 + 272);
    sub_1004DB5FC(v31, v30);
    *(_BYTE *)(v30 + *(int *)(v8 + 20)) = KeyPath;
    v24 = *(_QWORD *)(v13 + 16);
    if (v24)
      v25 = sub_1004B808C(v13);
    else
      v25 = &_swiftEmptySetSingleton;
    *(_QWORD *)(v0 + 240) = v25;
    swift_setDeallocating(v13);
    swift_arrayDestroy(v30, v24, v8);
    swift_deallocClassInstance(v13, 32, 7);
    return swift_task_switch(sub_100719924, 0, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 200));
    v26 = *(_QWORD *)(v0 + 184);
    v27 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100719924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 248) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 232);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 256) = v2;
  *v2 = v0;
  v2[1] = sub_1007199BC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD000000000000020, 0x8000000100FCADF0, sub_10071BD90, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_1007199BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100719AB8;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 248));
    v4 = sub_100719A28;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100719A28()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[29];
  swift_bridgeObjectRelease(v0[30]);

  return swift_task_switch(sub_100719A64, v0[26], v0[27]);
}

uint64_t sub_100719A64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 200));

  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100719AB8()
{
  _QWORD *v0;

  swift_task_dealloc(v0[31]);
  return swift_task_switch(sub_100719AF0, v0[26], v0[27]);
}

uint64_t sub_100719AF0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(v2);

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(void **)(v0 + 224);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 136, 0, 0);
  v5 = (void *)static OS_os_log.crlDefault;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 160) = v3;
  v8 = v5;
  swift_errorRetain(v3);
  v9 = sub_1004B804C(&qword_1013E0210);
  v10 = String.init<A>(describing:)(v0 + 160, v9);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "Error setting enableCollaboratorCursors: %@", 43, 2, inited);

  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  swift_errorRelease(v3);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100719C94(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F078F0);
  v5 = swift_getKeyPath(&unk_100F07918);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

double sub_100719D10(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F078F0);
  v5 = swift_getKeyPath(&unk_100F07918);
  v7 = v2;
  static Published.subscript.setter(&v7, v3, KeyPath, v5);
  return sub_100719404();
}

uint64_t sub_100719D88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[18] = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  v1[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v1[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v1[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[22] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[23] = v6;
  v1[24] = v7;
  return swift_task_switch(sub_100719E54, v6, v7);
}

uint64_t sub_100719E54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  v4 = *(_QWORD *)(v0[18] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  v0[25] = v5;
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 11, 0, 0);
  sub_1004B8460(v8, v3, type metadata accessor for CRLBoardCRDTData);
  v9 = v5;
  swift_retain(v7);
  v10 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v10);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v11 = (uint64_t *)(*(_QWORD *)(v4 + v6) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain(v13);
  sub_10067AFD0(v2, v12, v13, v1);
  return swift_task_switch(sub_100719F84, 0, 0);
}

uint64_t sub_100719F84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[25];
  v2 = v0[21];
  v3 = swift_task_alloc(32);
  v0[26] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[27] = v4;
  v5 = sub_1004B804C(&qword_1013EFCA0);
  *v4 = v0;
  v4[1] = sub_10071A038;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 29, 0, 0, 0xD000000000000024, 0x8000000100FCAD90, sub_10071BCE8, v3, v5);
}

uint64_t sub_10071A038()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10071A1B8;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 208));
    v4 = sub_10071A0A4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10071A0A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 168);
  *(_BYTE *)(v0 + 234) = *(_BYTE *)(v0 + 232);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);

  return swift_task_switch(sub_10071A0F4, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
}

uint64_t sub_10071A0F4()
{
  uint64_t v0;
  char v1;
  void *v2;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_BYTE *)(v0 + 234);
  v2 = *(void **)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 176));
  v3 = v1 & 1;
  KeyPath = swift_getKeyPath(&unk_100F078F0);
  v5 = swift_getKeyPath(&unk_100F07918);
  *(_BYTE *)(v0 + 233) = v3;
  v6 = v2;
  static Published.subscript.setter(v0 + 233, v6, KeyPath, v5);
  sub_100719404();
  v6[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_didFetchEnableCollaboratorCursors] = 1;
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071A1B8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)v0[25];
  v2 = v0[21];
  swift_task_dealloc(v0[26]);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);

  return swift_task_switch(sub_10071A208, v0[23], v0[24]);
}

uint64_t sub_10071A208()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 176));
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = *(_QWORD *)(v0 + 224);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 112, 0, 0);
  v2 = (void *)static OS_os_log.crlDefault;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 136) = v1;
  v5 = v2;
  swift_errorRetain(v1);
  v6 = sub_1004B804C(&qword_1013E0210);
  v7 = String.init<A>(describing:)(v0 + 136, v6);
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v10 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v11 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v11, "Error fetching enableCollaboratorCursors: %@", 44, 2, inited);
  swift_setDeallocating(inited);
  v12 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v12);

  swift_errorRelease(v1);
  v13 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10071A3A4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, uint64_t))
{
  uint64_t ObjectType;
  id v8;

  ObjectType = swift_getObjectType(a3);
  swift_unknownObjectRetain(a3);
  v8 = a1;
  a4(a3, v8, ObjectType);
  swift_unknownObjectRelease(a3);

}

BOOL sub_10071A498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v3 = *(void **)(v2 + 16);
  if (!v3)
    return 1;
  swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
  v4 = v3;
  v5 = objc_msgSend(v4, "currentUserParticipant");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "permission");
    swift_release(v2);

    v4 = v6;
  }
  else
  {
    v7 = objc_msgSend(v4, "publicPermission");
    swift_release(v2);
  }

  return v7 == (id)3;
}

uint64_t sub_10071A694(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
  {
    v8 = result;
    v9 = v7;
    v10 = a1;
    a4(v8, v9);

    return swift_bridgeObjectRelease(v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10071A728()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(v1 + 40);
    v3 = *(_QWORD *)(v1 + 48);
    if (v3 > 0)
      result = 1;
    else
      result = v2 ^ 1u;
    if ((v2 & 1) == 0 && v3 < 1)
    {
      swift_beginAccess(v1 + 72, v5, 0, 0);
      return *(_QWORD *)(*(_QWORD *)(v1 + 72) + 16) != 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10071A7A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  id v8[5];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v8[3] = &type metadata for CRLFeatureFlags;
  v8[4] = (id)sub_1004DB6DC();
  LOBYTE(v8[0]) = 11;
  v2 = isFeatureEnabled(_:)(v8);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
  if ((v2 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F078A8);
    v4 = swift_getKeyPath(&unk_100F078D0);
    static Published.subscript.getter(v8, v1, KeyPath, v4);
    swift_release(KeyPath);
    swift_release(v4);
    if (v8[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v8, 0, 0);
      v5 = (id)static OS_os_log.crlFollow;
      v7 = static os_log_type_t.default.getter(v6);
      sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v7, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }
}

void sub_10071A91C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[72];
  _BYTE v25[24];

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v25, 0, 0);
  v3 = (void *)static OS_os_log.shareState;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v24);
  v6 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v7 = inited + 32;
  if (a1)
  {
    v22 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
    v23 = sub_10071BC88();
    *(_QWORD *)&v21 = a1;
    sub_1004DB728(&v21, v7);
  }
  else
  {
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    v6[4] = 7104878;
    v6[5] = 0xE300000000000000;
  }
  v8 = v3;
  v9 = a1;
  v11 = static os_log_type_t.default.getter(v10);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v11, "Editing coordinator notifying observers that a share has changed. New share: %@", 79, 2, (uint64_t)v6);
  swift_setDeallocating(v6);
  v12 = v6[2];
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v7, v12, v13);

  v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers), "allObjects"));
  v15 = sub_1004B804C(&qword_1013EF4F8);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_8;
LABEL_18:
    swift_bridgeObjectRelease(v16);
    return;
  }
  if (v16 < 0)
    v20 = v16;
  else
    v20 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v17 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v16);
  if (!v17)
    goto LABEL_18;
LABEL_8:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
      {
        v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
      }
      else
      {
        v19 = *(void **)(v16 + 8 * i + 32);
        swift_unknownObjectRetain(v19);
      }
      objc_msgSend(v19, "shareStateUpdatedWithShare:", v9);
      swift_unknownObjectRelease(v19);
    }
    goto LABEL_18;
  }
  __break(1u);
}

void sub_10071ABDC()
{
  sub_10071AC28((SEL *)&selRef_currentUserLostEditPermissions);
}

void sub_10071AC1C()
{
  sub_10071AC28((SEL *)&selRef_currentUserGainedEditPermissions);
}

void sub_10071AC28(SEL *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  uint64_t v9;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers), "allObjects"));
  v4 = sub_1004B804C(&qword_1013EF4F8);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (v5 < 0)
    v9 = v5;
  else
    v9 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    goto LABEL_13;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      }
      else
      {
        v8 = *(void **)(v5 + 8 * i + 32);
        swift_unknownObjectRetain(v8);
      }
      objc_msgSend(v8, *a1);
      swift_unknownObjectRelease(v8);
    }
    goto LABEL_13;
  }
  __break(1u);
}

id sub_10071AD9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLEditingCoordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10071AF00()
{
  return type metadata accessor for CRLEditingCoordinator(0);
}

uint64_t type metadata accessor for CRLEditingCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EF458;
  if (!qword_1013EF458)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLEditingCoordinator);
  return result;
}

void sub_10071AF44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[18];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = "\b";
  v4[11] = "\b";
  sub_10063BDBC();
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    v4[13] = &unk_100F07810;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = &unk_100F07810;
    v4[16] = &unk_100F07810;
    v4[17] = &unk_100F07828;
    swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 80);
  }
}

uint64_t sub_10071AFFC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLEditingCoordinator(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

double sub_10071B038(uint64_t a1)
{
  uint64_t v1;
  uint64_t inserted;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  char *v21;
  char *v22;
  id v23;
  void *v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  objc_super v30;
  char v31[24];
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;

  inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  __chkstk_darwin(inserted);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v26))
  {
    v28 = v5;
    v29 = v1;
    v7 = 4;
    v5 = &OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
    while (1)
    {
      v1 = v7 - 4;
      v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v1, 1))
        break;
      if (*(_DWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind] == 1)
      {
        v11 = (uint64_t *)(*(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details]
                        + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
        swift_beginAccess(v11, v31, 0, 0);
        v12 = *v11;
        if (*(_QWORD *)(v12 + 16))
        {
          v13 = sub_100843260(3);
          if ((v14 & 1) != 0)
          {
            sub_1004CB7BC(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)v32, &qword_1013E0230);
            *((_QWORD *)&v34 + 1) = sub_1004B804C(&qword_1013E0230);
            *(_QWORD *)&v33 = swift_allocObject(&unk_10127A668, 48, 7);
            sub_1004D28A4((uint64_t)v32, v33 + 16);
            swift_bridgeObjectRelease(a1);
            sub_1004CB800((uint64_t)&v33, &qword_1013E0230);
            v15 = v29;
            v16 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
            v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
                + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
            swift_beginAccess(v17, &v33, 0, 0);
            v18 = type metadata accessor for CRLBoardCRDTData(0);
            v19 = (uint64_t)v28;
            sub_1004B8460(v17 + *(int *)(v18 + 28), (uint64_t)v28, type metadata accessor for CRLBoardInsertStyleData);
            v20 = (objc_class *)type metadata accessor for CRLBoardItemFactory(0);
            v21 = (char *)objc_allocWithZone(v20);
            *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board] = v16;
            sub_1004B8460(v19, (uint64_t)&v21[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_insertStyleSettings], type metadata accessor for CRLBoardInsertStyleData);
            v30.receiver = v21;
            v30.super_class = v20;
            v22 = v16;
            v23 = objc_msgSendSuper2(&v30, "init");
            sub_1004B84A4(v19, type metadata accessor for CRLBoardInsertStyleData);
            v24 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
            *(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory) = v23;

            return result;
          }
        }
        v33 = 0u;
        v34 = 0u;

        sub_1004CB800((uint64_t)&v33, &qword_1013E0230);
      }
      else
      {

      }
      ++v7;
      if (v10 == v6)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v26 = a1;
    else
      v26 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_21:
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

uint64_t sub_10071B48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  __n128 v20;
  _BYTE v23[24];

  v3 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v7);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
      + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v13, v23, 0, 0);
  sub_1004CB7BC(v13, (uint64_t)v9, (uint64_t *)&unk_101405E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
LABEL_4:
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    v18 = sub_100510DAC();
    swift_allocError(&type metadata for CRLEditingCoordinator.CollaborationAccessError, v18, 0, 0);
    *v19 = 0;
    return swift_willThrow(v20);
  }
  sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101405E90);
  v15 = &v6[*(int *)(v3 + 20)];
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v15, v16);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
    goto LABEL_4;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v12, v16);
}

id sub_10071B6FC(uint64_t a1, uint64_t a2)
{
  void *v3;
  id result;

  v3 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers);
  result = objc_msgSend(v3, "containsObject:", a1);
  if ((result & 1) == 0)
    return objc_msgSend(v3, "addObject:", a1);
  return result;
}

id sub_10071B758(uint64_t a1, uint64_t a2)
{
  void *v3;
  id result;

  v3 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers);
  result = objc_msgSend(v3, "containsObject:", a1);
  if ((_DWORD)result)
    return objc_msgSend(v3, "removeObject:", a1);
  return result;
}

uint64_t sub_10071B7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v3[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v3[7] = v6;
  v3[8] = v7;
  return swift_task_switch(sub_10071B844, v6, v7);
}

uint64_t sub_10071B844()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t **v7;

  v1 = v0[5];
  v2 = (void *)v0[3];
  sub_1004B8460(v0[2], v1, type metadata accessor for CRLBoardIdentifier);
  v3 = type metadata accessor for CRLBoardActor(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v0[9] = v4;
  v5 = v2;
  swift_defaultActor_initialize(v4, v6);
  sub_1004DB5FC(v1, v4 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v5;
  v7 = (uint64_t **)swift_task_alloc(dword_1013E835C);
  v0[10] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_10071B8FC;
  return sub_1006197AC();
}

uint64_t sub_10071B8FC(void *a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t **v13;

  v4 = (*v2)[10];
  v5 = *v2;
  v5[11] = (uint64_t)a1;
  v5[12] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_10071BB6C, v5[7], v5[8]);
  v7 = v5[9];
  v9 = (void *)v5[3];
  v8 = v5[4];
  objc_allocWithZone((Class)type metadata accessor for CRLEditingCoordinator(0));
  v10 = dword_1013EF4E4;
  v11 = v9;
  swift_retain(v7);
  v12 = a1;
  swift_retain(v8);
  v13 = (uint64_t **)swift_task_alloc(v10);
  v5[13] = (uint64_t)v13;
  *v13 = v5;
  v13[1] = (uint64_t *)sub_10071B9F4;
  return sub_100718758(v5[3], v5[9], (uint64_t)v12, v5[4]);
}

uint64_t sub_10071B9F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  *(_QWORD *)(*(_QWORD *)v2 + 112) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[7];
    v7 = v4[8];
    v8 = sub_10071BAF0;
  }
  else
  {
    v4[15] = a1;
    v6 = v4[7];
    v7 = v4[8];
    v8 = sub_10071BA68;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10071BA68()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(void **)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));

  swift_release(v2);
  swift_release(v4);
  sub_1004B84A4(v6, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_10071BAF0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 32);

  swift_release(v2);
  swift_release(v3);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  sub_1004B84A4(v5, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071BB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));

  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  swift_release(v2);
  sub_1004B84A4(v5, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10071BBE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10071BC08(uint64_t a1)
{
  uint64_t v1;

  sub_100719104(a1, v1);
}

unint64_t sub_10071BC10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EF4F0;
  if (!qword_1013EF4F0)
  {
    v1 = sub_1004CB6A4(&qword_1013EF4E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLChangeNotifier.ChangeRecordPublisher<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013EF4F0);
  }
  return result;
}

uint64_t sub_10071BC5C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_10071BC88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EF500;
  if (!qword_1013EF500)
  {
    v1 = sub_1004B8930(255, &qword_1013E0240, CKShare_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013EF500);
  }
  return result;
}

double sub_10071BCE8(uint64_t a1)
{
  uint64_t v1;

  return sub_100AA0804(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10071BCF8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10071BD24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EF514);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100719598(a1, v4, v5, v6);
}

double sub_10071BD90(uint64_t a1)
{
  uint64_t v1;

  return sub_100AA0C58(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10071BD98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _BOOL8 v10;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v5 = *(void **)(v4 + 16);
  if (v5)
  {
    swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState));
    v6 = v5;
    v7 = objc_msgSend(v6, "currentUserParticipant");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "permission");
      swift_release(v4);

      v6 = v8;
    }
    else
    {
      v9 = objc_msgSend(v6, "publicPermission");
      swift_release(v4);
    }

    v10 = v9 == (id)3;
  }
  else
  {
    v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t, _BOOL8))(a2 + 16))(a2, v10);
}

uint64_t storeEnumTagSinglePayload for CRLEditingCoordinator.CollaborationAccessError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10071BEBC + 4 * byte_100F077B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10071BEF0 + 4 * byte_100F077B0[v4]))();
}

uint64_t sub_10071BEF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10071BEF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10071BF00);
  return result;
}

uint64_t sub_10071BF0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10071BF14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10071BF18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10071BF20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLEditingCoordinator.CollaborationAccessError()
{
  return &type metadata for CRLEditingCoordinator.CollaborationAccessError;
}

unint64_t sub_10071BF40()
{
  unint64_t result;

  result = qword_1013EF528;
  if (!qword_1013EF528)
  {
    result = swift_getWitnessTable(&unk_100F0799C, &type metadata for CRLEditingCoordinator.CollaborationAccessError);
    atomic_store(result, (unint64_t *)&qword_1013EF528);
  }
  return result;
}

uint64_t sub_10071BF88()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10071BFCC()
{
  return type metadata accessor for CRLFreehandDrawingBucketSyncRecord(0);
}

uint64_t type metadata accessor for CRLFreehandDrawingBucketSyncRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EF558, (uint64_t)&nominal type descriptor for CRLFreehandDrawingBucketSyncRecord);
}

uint64_t sub_10071BFE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_100F07A38;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10071C06C()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_persistenceContext));
  sub_1004BBBC8(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8));
  return sub_1004BE2FC(*(_QWORD *)(v0+ OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData), *(_QWORD *)(v0+ OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData+ 8));
}

uint64_t sub_10071C0B0()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_persistenceContext));
  sub_1004BBBC8(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData), *(_QWORD *)(v0+ OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData+ 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10071C12C()
{
  return type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EF630, (uint64_t)&nominal type descriptor for CRLFreehandDrawingBucketSyncLocalChangeRecord);
}

uint64_t sub_10071C148(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "(";
  v2[1] = &unk_100F07A98;
  v2[2] = &unk_100F07A38;
  v2[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[4] = &unk_100F07AB0;
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 136);
}

void sub_10071C1B4()
{
  uint64_t v0;

}

uint64_t sub_10071C1C4()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10071C218()
{
  return type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EF798, (uint64_t)&nominal type descriptor for CRLFreehandDrawingBucketSyncRemoteRecord);
}

uint64_t sub_10071C234(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = "\t";
  v2[2] = &unk_100F07B18;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 136);
}

id sub_10071C28C(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Class v44;
  double v45;
  id v46;
  id v47;
  NSString v48;
  NSString v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  objc_class *v59;
  char *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  Class v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t ObjectType;
  uint64_t v81;
  double *v82;
  int64_t v83;
  double *v84;
  _QWORD *v85;
  uint64_t v86;
  NSString v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  double *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSString v105;
  double v106;
  id v107;
  uint64_t v109;
  uint64_t v110;
  double *v111;
  void (**v112)(char *, _QWORD);
  id v113;
  uint64_t v114;
  uint64_t v115;
  objc_super v116;
  _QWORD v117[2];
  _OWORD v118[2];
  __int128 v119;
  uint64_t v120;
  double *v121;
  char v122[32];

  v2 = v1;
  v111 = a1;
  v3 = type metadata accessor for CharacterSet(0);
  v114 = *(_QWORD *)(v3 - 8);
  v115 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for NSFastEnumerationIterator(0);
  v112 = *(void (***)(char *, _QWORD))(v109 - 8);
  __chkstk_darwin(v109);
  v7 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DCFD8 != -1)
    swift_once(&qword_1013DCFD8, sub_1007123CC);
  v11 = type metadata accessor for UTType(0);
  sub_1004F2A1C(v11, (uint64_t)qword_10147F3F0);
  v12 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  isa = UTType._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "initWithContentType:", isa);
  v113 = v14;

  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v15, v122, 0, 0);
  sub_1004D48C8(v15, (uint64_t)v10);
  v16 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v16);
  v17 = *((_QWORD *)&v119 + 1);
  sub_1004D490C((uint64_t)v10);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setTitle:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v19 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v20 = swift_allocObject(v19, 80, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5550;
  v21 = (void *)objc_opt_self(NSBundle);
  v22 = objc_msgSend(v21, "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);
  v110 = v2;
  v26 = v25;

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  *(_QWORD *)(v20 + 32) = v27;
  *(_QWORD *)(v20 + 40) = v29;
  v30 = objc_msgSend(v21, "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, v32, 0);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  *(_QWORD *)(v20 + 48) = v34;
  *(_QWORD *)(v20 + 56) = v36;
  v37 = objc_msgSend(v21, "mainBundle");
  v38 = String._bridgeToObjectiveC()();
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  *(_QWORD *)(v20 + 64) = v41;
  *(_QWORD *)(v20 + 72) = v43;
  v44 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v45 = swift_bridgeObjectRelease(v20).n128_u64[0];
  v46 = v113;
  objc_msgSend(v113, "setKeywords:", v44, v45);

  v47 = objc_msgSend(v21, "mainBundle");
  v48 = String._bridgeToObjectiveC()();
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, v49, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v52 = v51;

  v53 = String._bridgeToObjectiveC()();
  objc_msgSend(v46, "setContentDescription:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

  v121 = _swiftEmptyArrayStorage;
  if (v111)
  {
    swift_bridgeObjectRetain(v111);
    sub_10061EAEC(v54);
    v55 = objc_msgSend(objc_allocWithZone((Class)CRLDocumentModelEnumerator), "initWithRootModelObject:flags:filter:", *(_QWORD *)(v110 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer), 0, 0);
  }
  else
  {
    v56 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
    v57 = v110;
    v55 = objc_msgSend(objc_allocWithZone((Class)CRLDocumentModelEnumerator), "initWithRootModelObject:flags:filter:", *(_QWORD *)(v110 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer), 0, 0);
    if (objc_msgSend((id)objc_opt_self(CRLFeatureFlagsHelper), "isOSFeatureEnabled:", 1))
    {
      v58 = *(_QWORD *)(v57 + v56);
      v59 = (objc_class *)type metadata accessor for CRLPKDrawingIndexableModel();
      v60 = (char *)objc_allocWithZone(v59);
      v61 = swift_unknownObjectWeakInit(&v60[OBJC_IVAR____TtC8Freeform26CRLPKDrawingIndexableModel_container]);
      swift_unknownObjectWeakAssign(v61, v58);
      v116.receiver = v60;
      v116.super_class = v59;
      v62 = objc_msgSendSuper2(&v116, "init");
      v63 = sub_1004B804C((uint64_t *)&unk_1013E8830);
      v64 = swift_allocObject(v63, 96, 7);
      *(_OWORD *)(v64 + 16) = xmmword_100EF5A10;
      v65 = *(void **)(v57 + v56);
      v66 = type metadata accessor for CRLRootContainerItem(0);
      *(_QWORD *)(v64 + 32) = v65;
      *(_QWORD *)(v64 + 88) = v59;
      *(_QWORD *)(v64 + 56) = v66;
      *(_QWORD *)(v64 + 64) = v62;
      v67 = objc_allocWithZone((Class)NSArray);
      v68 = v65;
      v69 = v62;
      v70 = Array._bridgeToObjectiveC()().super.isa;
      v71 = objc_msgSend(v67, "initWithArray:", v70, swift_bridgeObjectRelease(v64).n128_f64[0]);

      v72 = objc_msgSend(v71, "objectEnumerator");
      v73 = objc_msgSend(objc_allocWithZone((Class)CRLDocumentModelEnumerator), "initWithEnumerator:filter:", v72, 0);

      v55 = v73;
    }
  }
  v74 = v109;
  v75 = NSEnumerator.makeIterator()();
  NSFastEnumerationIterator.next()(&v119, v75);
  while (v120)
  {
    sub_10050CB14(&v119, v118);
    v76 = sub_1004B804C((uint64_t *)&unk_1013EF880);
    v77 = swift_dynamicCast(v117, v118, (char *)&type metadata for Any + 8, v76, 6);
    if ((v77 & 1) != 0)
    {
      v78 = v117[0];
      v79 = v117[1];
      ObjectType = swift_getObjectType(v117[0]);
      v81 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(ObjectType, v79);
      sub_10061EAEC(v81);
      swift_unknownObjectRelease(v78);
    }
    NSFastEnumerationIterator.next()(&v119, v77);
  }
  v112[1](v7, v74);
  v82 = v121;
  v83 = *((_QWORD *)v121 + 2);
  v84 = _swiftEmptyArrayStorage;
  if (v83)
  {
    v112 = (void (**)(char *, _QWORD))v55;
    *(_QWORD *)&v118[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v121);
    sub_1006006EC(0, v83, 0);
    v111 = v82;
    v85 = v82 + 5;
    do
    {
      v86 = *v85;
      swift_bridgeObjectRetain(*v85);
      v87 = String._bridgeToObjectiveC()();
      v88 = objc_msgSend(v87, "crl_stringByFixingBrokenSurrogatePairs");

      v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
      v91 = v90;

      *(_QWORD *)&v119 = v89;
      *((_QWORD *)&v119 + 1) = v91;
      static CharacterSet.whitespacesAndNewlines.getter(v92);
      v93 = sub_1004D292C();
      v94 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v93);
      v96 = v95;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v5, v115);
      v97 = *((_QWORD *)&v119 + 1);
      swift_bridgeObjectRelease(v86);
      swift_bridgeObjectRelease(v97);
      v84 = *(double **)&v118[0];
      if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v118[0]) & 1) == 0)
      {
        sub_1006006EC(0, *((_QWORD *)v84 + 2) + 1, 1);
        v84 = *(double **)&v118[0];
      }
      v99 = *((_QWORD *)v84 + 2);
      v98 = *((_QWORD *)v84 + 3);
      if (v99 >= v98 >> 1)
      {
        sub_1006006EC(v98 > 1, v99 + 1, 1);
        v84 = *(double **)&v118[0];
      }
      v85 += 2;
      *((_QWORD *)v84 + 2) = v99 + 1;
      v100 = &v84[2 * v99];
      *((_QWORD *)v100 + 4) = v94;
      *((_QWORD *)v100 + 5) = v96;
      --v83;
    }
    while (v83);
    swift_bridgeObjectRelease(v111);
    v82 = v121;
    v55 = v112;
  }
  swift_bridgeObjectRelease(v82);
  *(_QWORD *)&v119 = v84;
  v101 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v102 = sub_100500464();
  BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v101, v102);
  v104 = v103;
  swift_bridgeObjectRelease(v84);
  v105 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v106 = swift_bridgeObjectRelease(v104).n128_u64[0];
  v107 = v113;
  objc_msgSend(v113, "setTextContent:", v105, v106);

  return v107;
}

id sub_10071CCC4(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void sub_10071CCD8(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

ValueMetadata *type metadata accessor for CRLSyncError()
{
  return &type metadata for CRLSyncError;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLSyncError.Code(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10071CCC4(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for CRLSyncError.Code(uint64_t a1)
{
  sub_10071CCD8(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s8Freeform12CRLSyncErrorV4CodeOwca_0(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10071CCC4(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10071CCD8(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLSyncError.Code(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10071CCD8(v4, v5);
  return a1;
}

uint64_t _s8Freeform12CRLSyncErrorV4CodeOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s8Freeform12CRLSyncErrorV4CodeOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10071CE74(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10071CE8C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncError.Code()
{
  return &type metadata for CRLSyncError.Code;
}

void sub_10071CFF0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;

  v5 = OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo__selectedBoardItems;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo__selectedBoardItems);
  swift_bridgeObjectRetain(v6);
  sub_1008D8A00(v7, a1);
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  if ((v9 & 1) == 0)
  {
    v10 = *(_QWORD *)(v2 + v5);
    *(_QWORD *)(v2 + v5) = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    swift_bridgeObjectRelease(v10);
    v11 = sub_1005FF994(a1);
    swift_bridgeObjectRelease(a1);
    v12 = sub_1004E5A80((uint64_t)v11, a2);
    swift_release(v11);
    v13 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_geometry);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_geometry) = v12;

  }
}

id sub_10071D1C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMultiselectResizeInfo();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMultiselectResizeInfo()
{
  return objc_opt_self(_TtC8Freeform24CRLMultiselectResizeInfo);
}

id sub_10071D258(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_parentInfo;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_parentInfo] = 0;
  v1[OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_isSupported] = 1;
  v4 = OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_repClass;
  *(_QWORD *)&v1[v4] = sub_1004B8930(0, (unint64_t *)&unk_1013EF950, off_101229958);
  v5 = *(_QWORD *)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  v6 = v1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v5);
  v7 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo_geometry] = v7;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1004B5FB0((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v8 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform24CRLMultiselectResizeInfo__selectedBoardItems] = v8;

  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for CRLMultiselectResizeInfo();
  return objc_msgSendSuper2(&v10, "init");
}

void sub_10071D364()
{
  __asm { BR              X10 }
}

uint64_t sub_10071D3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  sub_1004F370C(v1, v0);
  result = sub_1004F370C(v1 + 32, v0 + 32);
  *(_BYTE *)(v0 + 256) = 0;
  return result;
}

double destroy for CRLLayerConcretePropertyTransition(_QWORD *a1)
{
  double result;

  if (a1[3])
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  if (a1[7])
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[10]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLLayerConcretePropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  v6 = (_OWORD *)(a1 + 32);
  v7 = (_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  if (v8)
  {
    *(_QWORD *)(a1 + 56) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 48);
    *v6 = *v7;
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for CRLLayerConcretePropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      v5.n128_f64[0] = sub_10071E968((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *(__n128 *)a2;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 56) = v7;
      (**(void (***)(uint64_t, uint64_t, __n128))(v7 - 8))(a1 + 32, a2 + 32, v5);
      goto LABEL_15;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_15;
  }
  if (!v7)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 32));
    goto LABEL_14;
  }
  sub_10071E968((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_15:
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

double sub_10071E968(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  if (a1 != a2)
  {
    v4 = a1[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v12 = *a1;
        v13 = *a2;
        swift_retain(*a2);
        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
        *a1 = v13;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(a1, a2, a1[3]);
      }
    }
    else
    {
      a1[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v11 = *a1;
        if ((v8 & 0x20000) != 0)
        {
          v15 = *a2;
          *a1 = *a2;
          swift_retain(v15);
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v5);
        }
        *(_QWORD *)&result = swift_release(v11).n128_u64[0];
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v16, a1, v4);
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *a1 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v5);
        }
        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v16, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for CRLLayerConcretePropertyTransition(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 24))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  if (*(_QWORD *)(a1 + 56))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 32));
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *type metadata accessor for CRLLayerConcretePropertyTransition()
{
  return &type metadata for CRLLayerConcretePropertyTransition;
}

uint64_t sub_10071EB54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10071EBCC(v1, a1);
}

unint64_t sub_10071EB64(uint64_t a1)
{
  unint64_t result;

  result = sub_10071EB88();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10071EB88()
{
  unint64_t result;

  result = qword_1013EF960;
  if (!qword_1013EF960)
  {
    result = swift_getWitnessTable("=.7", &type metadata for CRLLayerConcretePropertyTransition);
    atomic_store(result, (unint64_t *)&qword_1013EF960);
  }
  return result;
}

uint64_t sub_10071EBCC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLLayerConcretePropertyTransition(a2, a1);
  return a2;
}

BOOL sub_10071EC00(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  BOOL v13;
  BOOL v14;
  _QWORD v16[4];
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  _QWORD v22[11];

  v4 = *(_BYTE *)(a2 + 64);
  v5 = sub_1008A4EC8(*(_BYTE *)(a1 + 64));
  v7 = v6;
  v8 = sub_1008A4EC8(v4);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
    sub_10071EBCC(a1, (uint64_t)v22);
    sub_10071EBCC(a2, (uint64_t)v20);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    sub_10071EBCC(a1, (uint64_t)v22);
    sub_10071EBCC(a2, (uint64_t)v20);
    if ((v12 & 1) == 0)
    {
      sub_1004E9164(v20);
      sub_1004E9164(v22);
      sub_10071EBCC(a1, (uint64_t)v18);
      sub_10071EBCC(a2, (uint64_t)v16);
LABEL_10:
      v14 = 0;
      goto LABEL_11;
    }
  }
  v13 = sub_1008A7434((uint64_t)v22, (uint64_t)&v21);
  sub_1004E9164(v20);
  sub_1004E9164(v22);
  sub_10071EBCC(a1, (uint64_t)v18);
  sub_10071EBCC(a2, (uint64_t)v16);
  if (!v13)
    goto LABEL_10;
  v14 = sub_1008A7434((uint64_t)&v19, (uint64_t)&v17);
LABEL_11:
  sub_1004E9164(v16);
  sub_1004E9164(v18);
  return v14;
}

double sub_10071ED70@<D0>(_OWORD *a1@<X8>)
{
  double result;
  _QWORD v3[11];

  sub_100717DAC((uint64_t)v3);
  if (v3[10])
  {
    sub_1004CB7BC((uint64_t)v3, (uint64_t)a1, &qword_1013E0230);
    sub_1004E9164(v3);
  }
  else
  {
    sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013F04B0);
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double sub_10071EDE0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[320];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];
  uint64_t v14;

  v3 = type metadata accessor for CRLSpringLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100720EB4(v1, (uint64_t)v9);
    sub_1008A5E84();

    sub_100635C68((uint64_t)v9);
    v6 = v11;
    v7 = v12;
    sub_1004BB5A4(v10, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v13, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
    if (v14)
    {
      sub_1004CB7BC((uint64_t)v13, (uint64_t)a1, &qword_1013E0230);
      sub_1004E9164(v13);
      return result;
    }
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v14 = 0;
  }
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F04B0);
  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10071EEE4@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[33];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[5];
  uint64_t v17;

  v3 = type metadata accessor for CRLCanvasLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 40));
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (_QWORD *)(v1 + *(int *)(v3 + 44));
    v7 = v6[3];
    v8 = v6[4];
    sub_1004BB5A4(v6, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 56))(v12, v7, v8);
    sub_1008A5E84();

    sub_1004EA730(v12);
    v9 = v14;
    v10 = v15;
    sub_1004BB5A4(v13, v14);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v10 + 48))(v16, v9, v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
    if (v17)
    {
      sub_1004CB7BC((uint64_t)v16, (uint64_t)a1, &qword_1013E0230);
      sub_1004E9164(v16);
      return result;
    }
  }
  else
  {
    memset(v16, 0, sizeof(v16));
    v17 = 0;
  }
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013F04B0);
  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10071F004@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[304];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];
  uint64_t v14;

  v3 = type metadata accessor for CRLBasicLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1004E91D4(v1, (uint64_t)v9);
    sub_1008A5E84();

    sub_1004E9210((uint64_t)v9);
    v6 = v11;
    v7 = v12;
    sub_1004BB5A4(v10, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v13, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
    if (v14)
    {
      sub_1004CB7BC((uint64_t)v13, (uint64_t)a1, &qword_1013E0230);
      sub_1004E9164(v13);
      return result;
    }
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v14 = 0;
  }
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F04B0);
  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10071F108@<D0>(_OWORD *a1@<X8>)
{
  double result;
  _QWORD v3[4];
  _QWORD v4[7];

  sub_100717DAC((uint64_t)v3);
  if (v4[6])
  {
    sub_1004CB7BC((uint64_t)v4, (uint64_t)a1, &qword_1013E0230);
    sub_1004E9164(v3);
  }
  else
  {
    sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013F04B0);
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double sub_10071F184@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[320];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _BYTE v14[48];
  uint64_t v15;

  v3 = type metadata accessor for CRLSpringLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100720EB4(v1, (uint64_t)v9);
    sub_1008A5E84();

    sub_100635C68((uint64_t)v9);
    v6 = v11;
    v7 = v12;
    sub_1004BB5A4(v10, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v13, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
    if (v15)
    {
      sub_1004CB7BC((uint64_t)v14, (uint64_t)a1, &qword_1013E0230);
      sub_1004E9164(v13);
      return result;
    }
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    memset(v14, 0, sizeof(v14));
    v15 = 0;
  }
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F04B0);
  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10071F28C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[33];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  _OWORD v17[3];
  uint64_t v18;

  v3 = type metadata accessor for CRLCanvasLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 40));
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (_QWORD *)(v1 + *(int *)(v3 + 44));
    v7 = v6[3];
    v8 = v6[4];
    sub_1004BB5A4(v6, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 56))(v12, v7, v8);
    sub_1008A5E84();

    sub_1004EA730(v12);
    v9 = v14;
    v10 = v15;
    sub_1004BB5A4(v13, v14);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v10 + 48))(v16, v9, v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
    if (v18)
    {
      sub_1004CB7BC((uint64_t)v17, (uint64_t)a1, &qword_1013E0230);
      sub_1004E9164(v16);
      return result;
    }
  }
  else
  {
    memset(v16, 0, sizeof(v16));
    memset(v17, 0, sizeof(v17));
    v18 = 0;
  }
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013F04B0);
  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10071F3B0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[304];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _BYTE v14[48];
  uint64_t v15;

  v3 = type metadata accessor for CRLBasicLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1004E91D4(v1, (uint64_t)v9);
    sub_1008A5E84();

    sub_1004E9210((uint64_t)v9);
    v6 = v11;
    v7 = v12;
    sub_1004BB5A4(v10, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v13, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
    if (v15)
    {
      sub_1004CB7BC((uint64_t)v14, (uint64_t)a1, &qword_1013E0230);
      sub_1004E9164(v13);
      return result;
    }
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    memset(v14, 0, sizeof(v14));
    v15 = 0;
  }
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F04B0);
  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10071F4B8(uint64_t a1, uint64_t a2)
{
  return sub_100720610(a1, a2, &qword_1013EF978, type metadata accessor for CRLTweenLayerAnimation, (uint64_t)&unk_100EF6680);
}

uint64_t sub_10071F4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  int v18;
  _BOOL8 v19;
  _BYTE v22[312];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v22[-v6 - 8];
  v8 = type metadata accessor for CRLTweenLayerAnimation(0);
  __chkstk_darwin(v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v22[-v12 - 8];
  sub_1004E91D4(v1 + *(int *)(v14 + 32), (uint64_t)v22);
  v15 = v22[299];
  sub_1004B8460(v1, (uint64_t)v13, type metadata accessor for CRLTweenLayerAnimation);
  if (v15 == 1)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLTweenLayerAnimation);
    sub_1004E9210((uint64_t)v22);
    sub_1004B8460(v1, (uint64_t)v10, type metadata accessor for CRLTweenLayerAnimation);
LABEL_5:
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLTweenLayerAnimation);
    return 1;
  }
  sub_1004CB7BC((uint64_t)&v13[*(int *)(v8 + 36)], (uint64_t)v7, &qword_1013E06C0);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLTweenLayerAnimation);
  v16 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  v18 = v17(v7, 1, v16);
  sub_1004CB800((uint64_t)v7, &qword_1013E06C0);
  sub_1004E9210((uint64_t)v22);
  sub_1004B8460(v1, (uint64_t)v10, type metadata accessor for CRLTweenLayerAnimation);
  if (v18 != 1)
    goto LABEL_5;
  sub_1004CB7BC((uint64_t)&v10[*(int *)(v8 + 40)], (uint64_t)v4, &qword_1013E06C0);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLTweenLayerAnimation);
  v19 = v17(v4, 1, v16) != 1;
  sub_1004CB800((uint64_t)v4, &qword_1013E06C0);
  return v19;
}

uint64_t sub_10071F71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  int v17;
  _BOOL8 v18;
  _BYTE v21[312];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v21[-v6 - 8];
  v8 = type metadata accessor for CRLBasicLayerAnimation(0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v21[-v12 - 8];
  sub_1004E91D4(v1, (uint64_t)v21);
  v14 = v21[299];
  sub_1004B8460(v1, (uint64_t)v13, type metadata accessor for CRLBasicLayerAnimation);
  if (v14 == 1)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004E9210((uint64_t)v21);
    sub_1004B8460(v1, (uint64_t)v10, type metadata accessor for CRLBasicLayerAnimation);
LABEL_5:
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBasicLayerAnimation);
    return 1;
  }
  sub_1004CB7BC((uint64_t)&v13[*(int *)(v8 + 28)], (uint64_t)v7, &qword_1013E06C0);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBasicLayerAnimation);
  v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  v17 = v16(v7, 1, v15);
  sub_1004CB800((uint64_t)v7, &qword_1013E06C0);
  sub_1004E9210((uint64_t)v21);
  sub_1004B8460(v1, (uint64_t)v10, type metadata accessor for CRLBasicLayerAnimation);
  if (v17 != 1)
    goto LABEL_5;
  sub_1004CB7BC((uint64_t)&v10[*(int *)(v8 + 32)], (uint64_t)v4, &qword_1013E06C0);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBasicLayerAnimation);
  v18 = v16(v4, 1, v15) != 1;
  sub_1004CB800((uint64_t)v4, &qword_1013E06C0);
  return v18;
}

uint64_t sub_10071F95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  int v17;
  _BOOL8 v18;
  _BYTE v21[328];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v21[-v6 - 8];
  v8 = type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v21[-v12 - 8];
  sub_100720EB4(v1, (uint64_t)v21);
  v14 = v21[315];
  sub_1004B8460(v1, (uint64_t)v13, type metadata accessor for CRLSpringLayerAnimation);
  if (v14 == 1)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLSpringLayerAnimation);
    sub_100635C68((uint64_t)v21);
    sub_1004B8460(v1, (uint64_t)v10, type metadata accessor for CRLSpringLayerAnimation);
LABEL_5:
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSpringLayerAnimation);
    return 1;
  }
  sub_1004CB7BC((uint64_t)&v13[*(int *)(v8 + 28)], (uint64_t)v7, &qword_1013E06C0);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLSpringLayerAnimation);
  v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  v17 = v16(v7, 1, v15);
  sub_1004CB800((uint64_t)v7, &qword_1013E06C0);
  sub_100635C68((uint64_t)v21);
  sub_1004B8460(v1, (uint64_t)v10, type metadata accessor for CRLSpringLayerAnimation);
  if (v17 != 1)
    goto LABEL_5;
  sub_1004CB7BC((uint64_t)&v10[*(int *)(v8 + 32)], (uint64_t)v4, &qword_1013E06C0);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSpringLayerAnimation);
  v18 = v16(v4, 1, v15) != 1;
  sub_1004CB800((uint64_t)v4, &qword_1013E06C0);
  return v18;
}

void sub_10071FBA0(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  float v20;
  double v21;
  id v22;
  double v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  _BYTE v34[32];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int8 v47;

  v3 = v2;
  v6 = (uint64_t)v2 + *(int *)(type metadata accessor for CRLTweenLayerAnimation(0) + 32);
  sub_1004E91D4(v6, (uint64_t)&v41);
  v7 = v47;
  sub_1004E9210((uint64_t)&v41);
  if (v7 != 1)
    return;
  v8 = v3[4];
  v9 = v3[5];
  sub_1004BB5A4(v3 + 1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v8, v9);
  if (!v10)
    return;
  v11 = (void *)v10;
  sub_1004CB7BC((uint64_t)(v3 + 6), (uint64_t)&v35, &qword_1013EA650);
  if (*((_QWORD *)&v36 + 1))
  {
    sub_1004DB728(&v35, (uint64_t)&v41);
    v12 = *((_QWORD *)&v42 + 1);
    v13 = v43;
    sub_1004BB5A4(&v41, *((uint64_t *)&v42 + 1));
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 64);
    v15 = v11;
    v16 = v14(v12, v13);
    if (v16)
    {
      v17 = (void *)v16;
      sub_1004EB280();
      v18 = v15;
      v19 = static NSObject.== infix(_:_:)(v18, v17);

      if ((v19 & 1) != 0)
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v41);
        goto LABEL_8;
      }
    }
    else
    {

    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000054, 0x8000000100FAF150, "Freeform/CRLTweenLayerAnimation.swift", 37, 2, 55, 0);
    __break(1u);
    return;
  }
  sub_1004CB800((uint64_t)&v35, &qword_1013EA650);
LABEL_8:
  sub_100717DAC((uint64_t)&v41);
  if (v46)
  {
    v37 = v43;
    v38 = v44;
    v39 = v45;
    v40 = v46;
    v35 = v41;
    v36 = v42;
    v20 = (a2 - (*(double *)(v6 + 8) + a1))
        / (*(double *)(v6 + 8) + *(double *)(v6 + 16) + a1 - (*(double *)(v6 + 8) + a1));
    sub_100717DAC((uint64_t)&v41);
    v21 = CACurrentMediaTime();
    v22 = sub_1004E884C((uint64_t)&v41, v21);
    sub_1004CB800((uint64_t)&v41, (uint64_t *)&unk_1013F04B0);
    *(float *)&v23 = v20;
    objc_msgSend(v22, "solveForInput:", v23);

    if (v20 < 0.0 || v20 > 1.0)
    {
      sub_1004E9164(&v35);

    }
    else
    {
      sub_10071D364();
      sub_1008A5388();
      sub_1004EA730(&v41);
      sub_1004CB7BC((uint64_t)v34, (uint64_t)&v41, &qword_1013E0230);
      v25 = *((_QWORD *)&v42 + 1);
      if (*((_QWORD *)&v42 + 1))
      {
        v26 = sub_1004BB5A4(&v41, *((uint64_t *)&v42 + 1));
        v27 = *(_QWORD *)(v25 - 8);
        v28 = __chkstk_darwin(v26);
        v30 = &v34[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(_BYTE *, __n128))(v27 + 16))(v30, v28);
        v31 = _bridgeAnythingToObjectiveC<A>(_:)(v30, v25);
        (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v30, v25);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v41);
      }
      else
      {
        v31 = 0;
      }
      v32 = v40;
      swift_bridgeObjectRetain(v40);
      v33 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setValue:forKeyPath:", v31, v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

      swift_unknownObjectRelease(v31);
      sub_1004CB800((uint64_t)v34, &qword_1013E0230);
      sub_1004E9164(&v35);
    }
  }
  else
  {

    sub_1004CB800((uint64_t)&v41, (uint64_t *)&unk_1013F04B0);
  }
}

void sub_10071FF60(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  int v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[5];
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  unsigned __int8 v39;

  v3 = v2;
  sub_1004E91D4(v2, (uint64_t)v37);
  v6 = v39;
  sub_1004E9210((uint64_t)v37);
  if (v6 != 1)
    return;
  v7 = v3 + *(int *)(type metadata accessor for CRLBasicLayerAnimation(0) + 24);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return;
  v9 = (void *)Strong;
  v10 = swift_unknownObjectWeakLoadStrong(v7);
  if (!v10)
  {
    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0;
    goto LABEL_12;
  }
  v11 = (void *)v10;
  sub_1004E91D4(v3, (uint64_t)v37);
  sub_1008A5E84();

  sub_1004E9210((uint64_t)v37);
  v12 = v27;
  v13 = v28;
  sub_1004BB5A4(v26, v27);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 48))(&v29, v12, v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
  if (!v34)
  {
LABEL_12:

    sub_1004CB800((uint64_t)&v29, (uint64_t *)&unk_1013F04B0);
    return;
  }
  v35[2] = v31;
  v35[3] = v32;
  v35[4] = v33;
  v36 = v34;
  v35[0] = v29;
  v35[1] = v30;
  v14 = (a2 - (*(double *)(v3 + 8) + a1))
      / (*(double *)(v3 + 8) + *(double *)(v3 + 16) + a1 - (*(double *)(v3 + 8) + a1));
  sub_10057D0E0(v14);
  if (v14 < 0.0 || v14 > 1.0)
  {
    sub_1004E9164(v35);

  }
  else
  {
    sub_10071D364();
    sub_1008A5388();
    sub_1004EA730(v37);
    sub_1004CB7BC((uint64_t)&v29, (uint64_t)v37, &qword_1013E0230);
    v16 = v38;
    if (v38)
    {
      v17 = sub_1004BB5A4(v37, v38);
      v18 = *(_QWORD *)(v16 - 8);
      v19 = __chkstk_darwin(v17);
      v21 = (char *)&v26[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      v22 = _bridgeAnythingToObjectiveC<A>(_:)(v21, v16);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v37);
    }
    else
    {
      v22 = 0;
    }
    v23 = v36;
    swift_bridgeObjectRetain(v36);
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKeyPath:", v22, v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

    swift_unknownObjectRelease(v22);
    sub_1004CB800((uint64_t)&v29, &qword_1013E0230);
    sub_1004E9164(v35);
  }
}

void sub_10072022C(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  int v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  float v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[5];
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  unsigned __int8 v40;

  v3 = v2;
  sub_100720EB4(v2, (uint64_t)v38);
  v6 = v40;
  sub_100635C68((uint64_t)v38);
  if (v6 != 1)
    return;
  v7 = v3 + *(int *)(type metadata accessor for CRLSpringLayerAnimation(0) + 24);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return;
  v9 = (void *)Strong;
  v10 = swift_unknownObjectWeakLoadStrong(v7);
  if (!v10)
  {
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v35 = 0;
    goto LABEL_12;
  }
  v11 = (void *)v10;
  sub_100720EB4(v3, (uint64_t)v38);
  sub_1008A5E84();

  sub_100635C68((uint64_t)v38);
  v12 = v28;
  v13 = v29;
  sub_1004BB5A4(v27, v28);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 48))(&v30, v12, v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  if (!v35)
  {
LABEL_12:

    sub_1004CB800((uint64_t)&v30, (uint64_t *)&unk_1013F04B0);
    return;
  }
  v36[2] = v32;
  v36[3] = v33;
  v36[4] = v34;
  v36[0] = v30;
  v36[1] = v31;
  v14 = *(double *)(v3 + 32);
  v37 = v35;
  v15 = (a2 - (v14 + a1)) / (v14 + sub_100D26FA0() + a1 - (v14 + a1));
  sub_100D27200(v15);
  if (v15 < 0.0 || v15 > 1.0)
  {
    sub_1004E9164(v36);

  }
  else
  {
    sub_10071D364();
    sub_1008A5388();
    sub_1004EA730(v38);
    sub_1004CB7BC((uint64_t)&v30, (uint64_t)v38, &qword_1013E0230);
    v17 = v39;
    if (v39)
    {
      v18 = sub_1004BB5A4(v38, v39);
      v19 = *(_QWORD *)(v17 - 8);
      v20 = __chkstk_darwin(v18);
      v22 = (char *)&v27[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v19 + 16))(v22, v20);
      v23 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v17);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v17);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
    }
    else
    {
      v23 = 0;
    }
    v24 = v37;
    swift_bridgeObjectRetain(v37);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKeyPath:", v23, v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

    swift_unknownObjectRelease(v23);
    sub_1004CB800((uint64_t)&v30, &qword_1013E0230);
    sub_1004E9164(v36);
  }
}

double sub_100720504@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[33];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for CRLCanvasLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 40));
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (_QWORD *)(v1 + *(int *)(v3 + 44));
    v7 = v6[3];
    v8 = v6[4];
    sub_1004BB5A4(v6, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 56))(v12, v7, v8);
    sub_1008A5E84();

    sub_1004EA730(v12);
    v9 = v14;
    v10 = v15;
    sub_1004BB5A4(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
  }
  else
  {
    *(_QWORD *)(a1 + 80) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

double sub_1007205F4(uint64_t a1, uint64_t a2)
{
  return sub_100720610(a1, a2, &qword_1013EF970, type metadata accessor for CRLCanvasLayerAnimation, (uint64_t)&unk_100EF83D8);
}

double sub_100720610(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;
  double v13;
  uint64_t v14;
  _BYTE v16[72];

  v10 = sub_1004B804C(&qword_1013EF968);
  inited = swift_initStackObject(v10, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = a1;
  *(_QWORD *)(inited + 64) = sub_1004B7878(a3, a4, a5);
  v12 = sub_10050D1B0((_QWORD *)(inited + 32));
  sub_1004B8460(v5, (uint64_t)v12, a4);
  v13 = sub_1009A3BE4(inited, 0.0);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013EA650);
  swift_arrayDestroy(inited + 32, 1, v14);
  return v13;
}

double sub_1007206F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[304];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(a1 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1004E91D4(v2, (uint64_t)v9);
    sub_1008A5E84();

    sub_1004E9210((uint64_t)v9);
    v6 = v11;
    v7 = v12;
    sub_1004BB5A4(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
  }
  else
  {
    *(_QWORD *)(a2 + 80) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

double sub_1007207BC(uint64_t a1, uint64_t a2)
{
  return sub_100720610(a1, a2, &qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
}

void sub_1007207E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v4 = (*(uint64_t (**)(void))(a2 + 64))();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v6, "begin");
    objc_msgSend(v6, "setDisableActions:", 1);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 120))(v21, a1, a2);
    v7 = v22;
    if (v22)
    {
      v8 = sub_1004BB5A4(v21, v22);
      v9 = *(_QWORD *)(v7 - 8);
      v10 = __chkstk_darwin(v8);
      v12 = (char *)&v21[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
      v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v7);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
    }
    else
    {
      v13 = 0;
    }
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 88))(v21, a1, a2);
    v14 = v22;
    v15 = v23;
    sub_1004BB5A4(v21, v22);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 80))(v14, v15);
    sub_1008A4EC8(v16);
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
    objc_msgSend(v5, "setValue:forKey:", v13, v19);
    swift_unknownObjectRelease(v13);

    objc_msgSend(v6, "commit");
  }
}

uint64_t sub_100720998@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = result;
    sub_1004E90B0(result + 32, (uint64_t)&v15);
    swift_bridgeObjectRetain(v4);
    v5 = v3 - 1;
    if (v3 != 1)
    {
      v6 = v4 + 72;
      do
      {
        sub_1004E90B0(v6, (uint64_t)&v12);
        v8 = v16;
        v7 = v17;
        sub_1004BB5A4(&v15, v16);
        v9 = (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 24) + 8) + 40))(v8);
        v11 = v13;
        v10 = v14;
        sub_1004BB5A4(&v12, v13);
        if (v9 >= (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 24) + 8) + 40))(v11))
        {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v12);
        }
        else
        {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v15);
          sub_1004DB728(&v12, (uint64_t)&v15);
        }
        v6 += 40;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease(v4);
    return sub_1004DB728(&v15, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_100720ABC(unsigned __int8 a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;

  v7 = a2;
  swift_bridgeObjectRetain(a3);
  v9 = sub_100D18240(v8, v7, a1);
  swift_bridgeObjectRelease(a3);

  *(_QWORD *)&v35 = v9;
  swift_bridgeObjectRetain(v9);
  sub_100D151BC(&v35);
  swift_bridgeObjectRelease(v9);
  v10 = v35;
  v11 = _swiftEmptyArrayStorage;
  v38 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(v35 + 16);
  if (v12)
  {
    v13 = 0;
    v14 = v35 + 32;
    v15 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v13 >= *(_QWORD *)(v10 + 16))
      {
        __break(1u);
        goto LABEL_27;
      }
      sub_1004E90B0(v14, (uint64_t)&v35);
      v16 = v36;
      v17 = v37;
      sub_1004BB5A4(&v35, v36);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v17 + 88))(&v32, v16, v17);
      v18 = v33;
      v19 = v34;
      sub_1004BB5A4(&v32, v33);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 136))(v18, v19);
      if (v20 == 2)
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v32);
      }
      else
      {
        v21 = v20;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v32);
        if ((v21 & 1) != 0)
        {
          sub_1004DB728(&v35, (uint64_t)&v32);
          if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
            sub_10060091C(0, *((_QWORD *)v15 + 2) + 1, 1);
          v15 = v38;
          v23 = *((_QWORD *)v38 + 2);
          v22 = *((_QWORD *)v38 + 3);
          if (v23 >= v22 >> 1)
          {
            sub_10060091C(v22 > 1, v23 + 1, 1);
            v15 = v38;
          }
          *((_QWORD *)v15 + 2) = v23 + 1;
          sub_1004DB728(&v32, (uint64_t)&v15[5 * v23 + 4]);
          goto LABEL_5;
        }
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v35);
LABEL_5:
      ++v13;
      v14 += 40;
      if (v12 == v13)
      {
        v11 = v38;
        break;
      }
    }
  }
  swift_release(v10);
  v24 = *((_QWORD *)v11 + 2);
  if (!v24)
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    goto LABEL_19;
  }
  sub_1004E90B0((uint64_t)(v11 + 4), (uint64_t)&v35);
  swift_retain(v11);
  if (v24 == 1)
  {
LABEL_17:
    swift_release(v11);
    sub_1004DB728(&v35, a4);
LABEL_19:
    swift_release(v11);
    return;
  }
  v25 = (uint64_t)(v11 + 9);
  v26 = 1;
  while (v26 < *((_QWORD *)v11 + 2))
  {
    sub_1004E90B0(v25, (uint64_t)&v32);
    v28 = v36;
    v27 = v37;
    sub_1004BB5A4(&v35, v36);
    v29 = (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v27 + 24) + 8) + 40))(v28);
    v31 = v33;
    v30 = v34;
    sub_1004BB5A4(&v32, v33);
    if (v29 >= (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v30 + 24) + 8) + 40))(v31))
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v32);
    }
    else
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v35);
      sub_1004DB728(&v32, (uint64_t)&v35);
    }
    ++v26;
    v25 += 40;
    if (v24 == v26)
      goto LABEL_17;
  }
LABEL_27:
  __break(1u);
  swift_release(v35);
  __break(1u);
}

double sub_100720DCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[320];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(a1 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100720EB4(v2, (uint64_t)v9);
    sub_1008A5E84();

    sub_100635C68((uint64_t)v9);
    v6 = v11;
    v7 = v12;
    sub_1004BB5A4(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
  }
  else
  {
    *(_QWORD *)(a2 + 80) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

double sub_100720E90(uint64_t a1, uint64_t a2)
{
  return sub_100720610(a1, a2, (unint64_t *)&unk_1013EA660, type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&unk_100F33140);
}

uint64_t sub_100720EB4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLSpringLayerAnimation.Def(a2, a1);
  return a2;
}

uint64_t sub_100720EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v3 = *(uint64_t *)((char *)a1 + a3 - 16);
  v4 = *a2;
  v6 = *a1;
  v7 = v4;
  type metadata accessor for WritableKeyPath(0, &type metadata for CRLTextAttributeScope, v3);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v7, &v6) & 1;
}

uint64_t sub_100720F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for WritableKeyPath(0, &type metadata for CRLTextAttributeScope, *(_QWORD *)(a2 + a1 - 16));
  return dispatch thunk of Hashable.hashValue.getter(v2, &protocol witness table for AnyKeyPath);
}

uint64_t sub_100720FA4(uint64_t a1, uint64_t *a2)
{
  return sub_1007CB2CC(*a2);
}

double sub_100720FAC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  double result;

  v4 = *a3;
  swift_retain(*a3);
  sub_1007EB6B8(a1, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100720FF0()
{
  return sub_100733204((uint64_t)&unk_100F07EF0, (uint64_t (*)(void))sub_10072E544);
}

void sub_100721004(void *a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  void *v9;
  int v10;
  id v11;
  char *v12;
  _QWORD v13[8];
  char v14;
  void *v15;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v9 = (void *)qword_10147ECB0;
  v13[3] = type metadata accessor for CRLTextRange();
  v13[0] = a1;
  v13[7] = &type metadata for String;
  v13[4] = a2;
  v13[5] = a3;
  v15 = &type metadata for Bool;
  v10 = a4 & 1;
  v14 = v10;
  v11 = v9;
  v12 = a1;
  swift_bridgeObjectRetain(a3);
  sub_100733FD4(v4, v12, a2, a3, v10);
  swift_arrayDestroy(v13, 3, (char *)&type metadata for Any + 8);

}

void sub_100721108()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  char *KeyPath;
  uint64_t v12;
  char v13;
  id v14[6];

  sub_100736D9C();
  if (v1)
  {
    v2 = (char *)objc_msgSend(v1, "selectedTextRange");
    if (v2)
    {
      v3 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v3)
      {
        v4 = v2;
        v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
        v7 = v3;
        sub_1007D7CB8(v5, v6, v14);

        v8 = (char *)v14[4];
        v9 = (char *)v14[5];
        v10 = (char *)v14[3];

        KeyPath = (char *)swift_getKeyPath(&unk_100F07DA0);
        v12 = sub_100DC9830(KeyPath, v10, v8, v9);
        LOBYTE(v9) = v13;
        swift_release(KeyPath);

        if ((v9 & 1) == 0)
        {

          return;
        }
        if (*(_QWORD *)(v12 + 16))
        {

          sub_10062E238(v12, 1);
          return;
        }
        __break(1u);
      }
      __break(1u);
    }
  }
}

void sub_100721234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *Strong;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  char *v36;
  char *v37;
  char *KeyPath;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  char *v61;
  void *v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  _BYTE *v69;
  uint64_t *v70;
  uint64_t v71;
  id v72;
  CKRecordID v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91[7];

  v2 = v1;
  v84 = a1;
  v83 = sub_1004B804C(&qword_1013F3D40);
  __chkstk_darwin(v83);
  v82 = (uint64_t)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v75 - v5);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!Strong)
    return;
  v78 = Strong;
  v8 = objc_msgSend(Strong, "commandController");
  if (!v8)
  {

    return;
  }
  v77 = v8;
  sub_100736D9C();
  if (!v9)
  {

    return;
  }
  v10 = v9;
  v81 = (char *)objc_msgSend((id)swift_unknownObjectRetain(v9), "selectedTextRange");
  if (!v81)
  {

    swift_unknownObjectRelease(v10);
    return;
  }
  v76 = v10;
  v11 = _swiftEmptyArrayStorage;
  v87 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  v90 = (unint64_t)_swiftEmptyArrayStorage;
  v13 = *(void **)(v12 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v13)
    goto LABEL_54;
  v14 = *(_QWORD *)&v81[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v15 = *(_QWORD *)&v81[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v16 = v13;
  v17 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
  v18 = (uint64_t)objc_msgSend(v16, "characterCount");
  if (v18 < 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(storage:range:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 31, "Bad range when initializing CRLWPStorage.Paragraphs", 51, 2u, (uint64_t)v11);
    sub_100518FC0((uint64_t)v11, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs");
    sub_100519194((uint64_t)v11, (uint64_t)"init(storage:range:)", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2u, 31, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs", 51, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v73, v74);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v19 = v18;
  if (v18 >= v15)
    v20 = v15 & ~(v15 >> 63);
  else
    v20 = v18;
  if ((uint64_t)objc_msgSend(v16, "characterCount") < v20)
    goto LABEL_55;
  if (v19 >= v14)
    v21 = v14;
  else
    v21 = v19;
  if (v14 >= 0)
    v22 = v21;
  else
    v22 = 0;
  v23 = (id)sub_1005037A0(v16, v22, v20);
  v25 = v24;
  v11 = v26;

  v80 = v25;
  if (v25 >= (uint64_t)v11)
  {
    v79 = v23;
    while (1)
    {
      v28 = objc_msgSend(v23, "charIndexForParagraphAtIndex:", v11);
      v29 = objc_msgSend(v23, v17[293]);
      if ((uint64_t)v29 < (uint64_t)v28)
        break;
      NSNotFound.getter(v29);
      objc_msgSend(v23, "paragraphIndexAtCharIndex:", v28);
      v30 = objc_msgSend(v23, "textRangeForParagraphAtIndex:", v11);
      v32 = (uint64_t)v30 + v31;
      if (__OFADD__(v30, v31))
        goto LABEL_46;
      if (__OFADD__(v11, 1))
        goto LABEL_47;
      if (v32 < (uint64_t)v28)
        goto LABEL_48;
      v86 = (char *)v11 + 1;
      v33 = *(void **)(*(_QWORD *)(v2 + v87) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v33)
        goto LABEL_52;
      v34 = v33;
      v85 = v32;
      sub_1007D7CB8((uint64_t)v28, v32, v91);

      v35 = (char *)v91[4];
      v36 = (char *)v91[5];
      v37 = (char *)v91[3];

      KeyPath = (char *)swift_getKeyPath(&unk_100F07DA0);
      v39 = sub_100DC9830(KeyPath, v37, v35, v36);
      LOBYTE(v36) = v40;
      swift_release(KeyPath);

      if ((v36 & 1) != 0)
      {
        if (!*(_QWORD *)(v39 + 16))
          goto LABEL_50;
        v41 = *(_QWORD *)(v39 + 32);
        sub_10062E238(v39, 1);
        v39 = v41;
      }
      if (__OFADD__(v39, v84))
        goto LABEL_49;
      if (((v39 + v84) & (unint64_t)~((v39 + v84) >> 63)) >= 8)
        v42 = 8;
      else
        v42 = (v39 + v84) & ~((v39 + v84) >> 63);
      *v6 = &_swiftEmptySetSingleton;
      v43 = sub_100559A64();
      CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v43);
      swift_getKeyPath(&unk_100F07DA0);
      sub_100AD8690(&v88, 0x7061726761726170, 0xEE006C6576654C68);
      swift_bridgeObjectRelease(v89);
      __chkstk_darwin(v44);
      sub_100737064();
      v45 = swift_getKeyPath(&unk_100F07DC0);
      v88 = v42;
      LOBYTE(v89) = 0;
      v46 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
      v47 = sub_1007370A8();
      CRAttributedString.Attributes.subscript.setter(&v88, v45, v46, v47);
      v48 = *(void **)(*(_QWORD *)(v2 + v87) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v48)
        goto LABEL_53;
      v49 = v48;
      v50 = (char *)objc_msgSend(v81, "start");
      v51 = *(_QWORD *)&v50[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      v52 = objc_msgSend(v49, "paragraphIndexAtCharIndex:", v51);
      sub_10072A46C((uint64_t)v52);
      if ((v54 & 1) != 0 || v53)
      {
        swift_getKeyPath(&unk_100F07DF8);
        sub_100AD8690(&v88, 0x726174537473696CLL, 0xE900000000000074);
        swift_bridgeObjectRelease(v89);
        __chkstk_darwin(v55);
        sub_1007370EC();
        v56 = swift_getKeyPath(&unk_100F07DC0);
        v88 = 1;
        LOBYTE(v89) = 0;
        v57 = sub_100737130();
        CRAttributedString.Attributes.subscript.setter(&v88, v56, v46, v57);
      }
      v58 = *(void **)(v2 + v87);
      v59 = v82;
      sub_1004CB7BC((uint64_t)v6, v82, &qword_1013F3D40);
      v60 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_1013EFC00));
      v61 = v58;
      v62 = (void *)sub_100738804(v61, (uint64_t)v28, v85, v59);

      v63 = v62;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
      v65 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v64 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v65 >= v64 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
      v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
      specialized Array._endMutation()(v66);

      sub_1004CB800((uint64_t)v6, &qword_1013F3D40);
      v11 = (_QWORD *)((char *)v11 + 1);
      v23 = v79;
      v17 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
      if (v80 < (uint64_t)v86)
      {

        v27 = (_QWORD *)v90;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }

  v27 = _swiftEmptyArrayStorage;
LABEL_43:
  v67 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
  v68 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v67, v67, v67);
  v69 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup()), "init");
  v70 = (uint64_t *)&v69[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
  swift_beginAccess(&v69[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], &v88, 1, 0);
  v71 = *v70;
  *v70 = (uint64_t)v27;
  swift_bridgeObjectRelease(v71);
  v72 = v68;
  sub_1006A5F54(v69, 0, v68, 4, 0);

  swift_unknownObjectRelease(v76);
}

