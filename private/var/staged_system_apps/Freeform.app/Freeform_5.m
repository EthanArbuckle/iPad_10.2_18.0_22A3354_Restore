id sub_10060A3A8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore] = 0;
  v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime] = 0;
  v1 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_applicationCoordinator;
  v2 = qword_1013DD4B0;
  v3 = v0;
  if (v2 != -1)
    swift_once(&qword_1013DD4B0, sub_1008FA7E8);
  v4 = (void *)qword_1013F9CF0;
  *(_QWORD *)&v3[v1] = qword_1013F9CF0;
  v5 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus;
  v6 = type metadata accessor for CRLiCloudStatusObserver();
  swift_allocObject(v6, 80, 7);
  v7 = v4;
  *(_QWORD *)&v3[v5] = sub_100946764();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_spotlightManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_keyboardMonitor] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_activeUseManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter] = 0;
  v8 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_insertMenuIdentifier;
  *(_QWORD *)&v3[v8] = String._bridgeToObjectiveC()();
  v9 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_autoFillMenuIdentifier;
  *(_QWORD *)&v3[v9] = String._bridgeToObjectiveC()();

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for CRLiOSAppDelegate();
  return objc_msgSendSuper2(&v11, "init");
}

id sub_10060A560()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSAppDelegate()
{
  return objc_opt_self(_TtC8Freeform17CRLiOSAppDelegate);
}

void sub_10060A6B8()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[5];

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "connectedScenes");

  v2 = sub_1004B8930(0, &qword_1013E7BD8, UIScene_ptr);
  v3 = sub_10060A9D8();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.makeIterator()(v6);
    v5 = Set.Iterator.init(_cocoa:)(v31, v7, v2, v3);
    v4 = v31[0];
    v28 = v31[1];
    v8 = v31[2];
    v9 = v31[3];
    v10 = v31[4];
  }
  else
  {
    v9 = 0;
    v11 = -1 << *(_BYTE *)(v4 + 32);
    v28 = v4 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v4 + 56);
  }
  v14 = (unint64_t)(v8 + 64) >> 6;
  while (1)
  {
    v15 = v9;
    if ((v4 & 0x8000000000000000) == 0)
      break;
    v18 = __CocoaSet.Iterator.next()(v5);
    if (!v18)
      goto LABEL_37;
    v19 = v18;
    v29 = v18;
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v2, 7);
    v20 = v30;
    swift_unknownObjectRelease(v19);
    if (!v20)
      goto LABEL_37;
LABEL_33:
    v24 = objc_opt_self(UIWindowScene);
    v25 = (void *)swift_dynamicCastObjCClass(v20, v24);
    if (v25)
    {
      v26 = objc_msgSend(v25, "delegate");

      if (v26)
      {
        v27 = type metadata accessor for CRLiOSSceneDelegate(0);
        if (swift_dynamicCastClass(v26, v27))
          goto LABEL_37;
        v5 = (_QWORD *)swift_unknownObjectRelease(v26);
      }
    }
    else
    {

    }
  }
  if (v10)
  {
    v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v17 = v16 | (v9 << 6);
LABEL_32:
    v20 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    if (!v20)
      goto LABEL_37;
    goto LABEL_33;
  }
  v21 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v21 >= v14)
      goto LABEL_37;
    v22 = *(_QWORD *)(v28 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v15 + 2;
      if (v15 + 2 >= v14)
        goto LABEL_37;
      v22 = *(_QWORD *)(v28 + 8 * v9);
      if (!v22)
      {
        v9 = v15 + 3;
        if (v15 + 3 >= v14)
          goto LABEL_37;
        v22 = *(_QWORD *)(v28 + 8 * v9);
        if (!v22)
        {
          v9 = v15 + 4;
          if (v15 + 4 >= v14)
            goto LABEL_37;
          v22 = *(_QWORD *)(v28 + 8 * v9);
          if (!v22)
          {
            v23 = v15 + 5;
            while (v14 != v23)
            {
              v22 = *(_QWORD *)(v28 + 8 * v23++);
              if (v22)
              {
                v9 = v23 - 1;
                goto LABEL_31;
              }
            }
LABEL_37:
            sub_1004D284C(v4);
            return;
          }
        }
      }
    }
LABEL_31:
    v10 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v9 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

unint64_t sub_10060A9D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E7BE0;
  if (!qword_1013E7BE0)
  {
    v1 = sub_1004B8930(255, &qword_1013E7BD8, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E7BE0);
  }
  return result;
}

uint64_t sub_10060AA30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10060AA6C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v27 - 8);
  v6 = __chkstk_darwin(v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend((id)objc_opt_self(CRLUserDefaults), "registerUserDefaults");
  sub_100DAD910();
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", v1, "applicationDidEnterBackground", UIApplicationDidEnterBackgroundNotification, 0);

  v14 = *(id *)&v1[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_applicationCoordinator];
  sub_1008FA854();

  v15 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "sharedKeyboardMonitor");
  v16 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_keyboardMonitor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_keyboardMonitor] = v15;

  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v9);
  v17 = (void *)static OS_dispatch_queue.global(qos:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = swift_allocObject(&unk_101271AE0, 24, 7);
  *(_QWORD *)(v18 + 16) = v1;
  aBlock[4] = sub_10060C3E8;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101271AF8;
  v19 = _Block_copy(aBlock);
  v20 = v1;
  static DispatchQoS.unspecified.getter(v21);
  v29 = _swiftEmptyArrayStorage;
  v22 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v24 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v23, v24, v2, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v27);
  swift_release(v31);
  return 1;
}

void sub_10060AD88()
{
  void *v0;
  id v1;
  char v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  v2 = objc_msgSend(v1, "BOOLForKey:", CFSTR("CRLDisplayEdgeGuides"));

  v3 = objc_msgSend(v0, "standardUserDefaults");
  LOBYTE(v1) = objc_msgSend(v3, "BOOLForKey:", CFSTR("CRLDisplayCenterGuides"));

  v4 = objc_msgSend(v0, "standardUserDefaults");
  LOBYTE(v3) = objc_msgSend(v4, "BOOLForKey:", CFSTR("CRLDisplaySpacingGuides"));

  v5 = objc_msgSend(v0, "standardUserDefaults");
  LOBYTE(v4) = objc_msgSend(v5, "BOOLForKey:", CFSTR("CRLDisplaySizingGuides"));

  v6 = objc_msgSend(v0, "standardUserDefaults");
  v7 = objc_msgSend(v6, "BOOLForKey:", CFSTR("CRLUseHapticFeedbackWhenSnapping"));

  v8 = objc_msgSend(v0, "standardUserDefaults");
  LOBYTE(v6) = objc_msgSend(v8, "BOOLForKey:", CFSTR("CRLSelectAndScrollWithApplePencil"));

  sub_100A249D4(v2, (char)v1, (char)v3, (char)v4, v7, (char)v6);
}

void sub_10060AF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void **v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  void *v54;
  uint64_t v55;
  objc_class *v56;
  char *v57;
  char *v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  void (**v65)(char *, uint64_t);
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  _QWORD *v104;
  id v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  id v123;
  char *v124;
  id v125;
  uint64_t v126;
  void *v127;
  void *v128;
  char *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  __n128 v138;
  id v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  void **v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  unint64_t v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD v162[2];
  uint64_t v163;
  uint64_t v164;
  _QWORD v165[5];
  objc_super v166;
  char v167[72];
  char v168[24];
  void **aBlock;
  void **v170;
  double (*v171)(uint64_t, uint64_t);
  void *v172;
  id (*v173)(id);
  _UNKNOWN **v174;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v161 = (uint64_t)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v153 = (uint64_t)&v143 - v5;
  v6 = type metadata accessor for URL(0);
  v155 = *(_QWORD *)(v6 - 8);
  v156 = v6;
  __chkstk_darwin(v6);
  v144 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v152 = (char *)&v143 - v9;
  v10 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v10);
  v154 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self(UIApplication);
  v13 = objc_msgSend(v12, "sharedApplication");
  objc_msgSend(v13, "setApplicationSupportsShakeToEdit:", 1);

  v14 = (void *)objc_opt_self(CRLShapeLibrary);
  v173 = sub_10060841C;
  v174 = 0;
  aBlock = _NSConcreteStackBlock;
  v170 = *(void ***)"";
  v171 = sub_1006084F4;
  v172 = &unk_101271A08;
  v15 = _Block_copy(&aBlock);
  objc_msgSend(v14, "loadDataIfNeededWithCompletion:", v15);
  _Block_release(v15);
  objc_msgSend((id)objc_opt_self(CRLBrushStrokeLoader), "backgroundLoadAllBrushStrokes");
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v159 = v12;
  swift_beginAccess(&static OS_os_log.crlDefault, v168, 0, 0);
  v16 = (void *)static OS_os_log.crlDefault;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v17, v167);
  v157 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v19 = v16;
  v20 = sub_1008FAA68();
  v22 = v21;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  v25 = static os_log_type_t.default.getter(v24);
  sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v25, "App version is %{public}@.", 26, 2, inited);
  swift_setDeallocating(inited);
  v26 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v26);

  type metadata accessor for CRLBoardDataStoreProvider();
  v27 = sub_100BF573C();
  v160 = v17;
  *(_QWORD *)&v157 = v26;
  v158 = v23;
  v28 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore;
  v29 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore) = v27;

  v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  objc_msgSend(v30, "setURL:forKey:", 0, CFSTR("CRLEnsureOwnershipOfDataUserDefault"));
  v31 = *(void ***)(v1 + v28);
  if (!v31)
  {
    __break(1u);
    goto LABEL_41;
  }
  v173 = (id (*)(id))&type metadata for CRLDataStoreUpgrader;
  v174 = &off_1012A1AB0;
  aBlock = v31;
  v170 = v31;
  v151 = v31;
  v32 = sub_1001E9730();
  sub_100D2DC88(v32);
  sub_1006087BC();
  v33 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver;
  v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  if (v34)
  {
    v35 = *(_QWORD *)(v34 + 40);
    swift_retain(v35);
LABEL_10:
    v47 = *(_QWORD *)(v34 + 72);
    swift_retain(v47);
    goto LABEL_11;
  }
  v36 = *(void **)(v1 + v28);
  if (!v36)
  {
LABEL_50:
    __break(1u);
    return;
  }
  v37 = qword_1013DCB60;
  v38 = v36;
  if (v37 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v39 = (void *)qword_10147ECC0;
  v40 = type metadata accessor for CRLBoardShareController();
  v41 = (_QWORD *)swift_allocObject(v40, 144, 15);
  v42 = v39;
  swift_defaultActor_initialize(v41, v43);
  v44 = type metadata accessor for CRLZoneShareController();
  v41[16] = 0;
  v41[17] = 0;
  v45 = swift_allocObject(v44, 120, 15);
  swift_defaultActor_initialize(v45, v46);
  *(_QWORD *)(v45 + 112) = v42;
  v41[14] = v45;
  v41[15] = v38;
  v35 = (uint64_t)v41;
  v34 = *(_QWORD *)(v1 + v33);
  if (v34)
    goto LABEL_10;
  v142 = type metadata accessor for CRLSyncPriorityProvider(0);
  swift_allocObject(v142, *(unsigned int *)(v142 + 48), *(unsigned __int16 *)(v142 + 52));
  v47 = sub_10057FAD8();
LABEL_11:
  v150 = v30;
  v48 = *(void **)(v1 + v28);
  if (!v48)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v49 = objc_allocWithZone((Class)type metadata accessor for CRLBoardLibrary());
  swift_retain(v35);
  swift_retain(v47);
  v50 = sub_100CAC3C4(v48, v35, v47);
  v51 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary;
  v52 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary) = v50;
  v53 = v50;

  v54 = *(void **)(v1 + v51);
  v55 = v160;
  if (!v54)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v148 = v35;
  v56 = (objc_class *)type metadata accessor for CRLBoardLibraryCommandController();
  v57 = (char *)objc_allocWithZone(v56);
  *(_QWORD *)&v57[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v57[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack] = _swiftEmptyArrayStorage;
  v58 = &v57[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary];
  *(_QWORD *)v58 = v54;
  *((_QWORD *)v58 + 1) = &off_10129F490;
  v166.receiver = v57;
  v166.super_class = v56;
  v59 = v54;
  v60 = objc_msgSendSuper2(&v166, "init");
  v61 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController) = v60;

  v62 = *(void **)(v1 + v51);
  if (!v62)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v63 = objc_allocWithZone((Class)type metadata accessor for CRLBoardPreviewImageCache());
  v64 = v62;
  v65 = sub_10059F4A4(v64);

  v66 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache;
  v67 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache) = v65;

  v165[3] = &type metadata for CRLFeatureFlags;
  v165[4] = sub_1004DB6DC();
  LOBYTE(v165[0]) = 19;
  LOBYTE(v65) = isFeatureEnabled(_:)(v165);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v165);
  if ((v65 & 1) != 0)
  {
    v68 = *(void **)(v1 + v28);
    if (!v68)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v69 = type metadata accessor for CRLStencilLibrary(0);
    swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
    v70 = sub_100A1F770(v68);
    v71 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary) = v70;
    swift_release(v71);
  }
  v146 = v47;
  v149 = v51;
  v72 = *(void **)(v1 + v66);
  if (!v72)
    goto LABEL_44;
  v73 = type metadata accessor for CRLSharedBoardThumbnailManager();
  swift_allocObject(v73, 48, 7);
  v74 = v53;
  v75 = sub_100D690C8(v74, v72);
  v76 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager) = v75;
  swift_release(v76);
  v77 = *(void **)(v1 + v66);
  v78 = type metadata accessor for CRLSpotlightManager(0);
  swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
  v79 = v77;
  v145 = v74;
  v80 = sub_100972238(v145, v77);
  v81 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_spotlightManager);
  v147 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_spotlightManager) = v80;
  swift_release(v81);
  v82 = (void *)static OS_os_log.crlDefault;
  v83 = swift_initStackObject(v55, &v164);
  *(_OWORD *)(v83 + 16) = xmmword_100EF5A10;
  v84 = v82;
  v85 = v159;
  v86 = objc_msgSend(v159, "sharedApplication");
  v87 = objc_msgSend(v86, "_launchTestName");

  if (!v87)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
  v90 = v89;

  v91 = v158;
  *(_QWORD *)(v83 + 56) = &type metadata for String;
  *(_QWORD *)(v83 + 64) = v91;
  *(_QWORD *)(v83 + 32) = v88;
  *(_QWORD *)(v83 + 40) = v90;
  v92 = objc_msgSend(v85, "sharedApplication");
  v93 = objc_msgSend(v92, "_extendLaunchTest");

  if (!v93)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
  v96 = v95;

  *(_QWORD *)(v83 + 96) = &type metadata for String;
  *(_QWORD *)(v83 + 104) = v91;
  *(_QWORD *)(v83 + 72) = v94;
  *(_QWORD *)(v83 + 80) = v96;
  v98 = static os_log_type_t.default.getter(v97);
  sub_100A06EBC((uint64_t)v84, &_mh_execute_header, v98, "Launch Test: %@  Extended Launch Test: %@", 41, 2, v83);
  swift_setDeallocating(v83);
  swift_arrayDestroy(v83 + 32, 2, v157);

  v99 = v147;
  v100 = *(void **)(v147 + v149);
  if (!v100)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v101 = type metadata accessor for TaskPriority(0);
  v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56);
  v103 = (uint64_t)v154;
  v102(v154, 1, 1, v101);
  v104 = (_QWORD *)swift_allocObject(&unk_101271A40, 40, 7);
  v104[2] = 0;
  v104[3] = 0;
  v104[4] = v100;
  v105 = v100;
  v106 = sub_1009880C4(v103, (uint64_t)&unk_1013E7C08, (uint64_t)v104);
  swift_release(v106);
  sub_1004CB800(v103, &qword_1013E01F0);

  sub_100C03A6C();
  sub_10060AD88();
  v102((char *)v103, 1, 1, v101);
  type metadata accessor for MainActor(0);
  v107 = v145;
  v108 = static MainActor.shared.getter(v107);
  v109 = (_QWORD *)swift_allocObject(&unk_101271A68, 40, 7);
  v109[2] = v108;
  v109[3] = &protocol witness table for MainActor;
  v109[4] = v107;
  v110 = sub_100521B98(v103, (uint64_t)&unk_1013E7C18, (uint64_t)v109);
  swift_release(v110);
  v111 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v112 = sub_1001FD4E0();
  v114 = v155;
  v113 = v156;
  if (!v112)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v115 = v112;
  v116 = objc_msgSend(v111, "containerURLForSecurityApplicationGroupIdentifier:", v112);

  if (v116)
  {
    v117 = v161;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v116);

    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v114 + 56))(v117, 0, 1, v113);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v117, 1, v113) != 1)
      goto LABEL_27;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v161, 1, 1, v113);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 153, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 153, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_27:
  v118 = v153;
  sub_10057EE1C(v161, v153);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v118, 1, v113) == 1)
  {
    sub_1004CB800(v118, &qword_1013E04D0);
    if (qword_1013DD758 != -1)
      swift_once(&qword_1013DD758, sub_100A02698);
    swift_beginAccess(&static OS_os_log.crlSharingExtension, &v163, 0, 0);
    v119 = (id)static OS_os_log.crlSharingExtension;
    v120 = static os_log_type_t.error.getter(v119);
    sub_100A06EBC((uint64_t)v119, &_mh_execute_header, v120, "Unable to start sharing extension import. App Group container not found", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    v121 = v152;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v152, v118, v113);
    v122 = (uint64_t)v144;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v144, v121, v113);
    v123 = objc_allocWithZone((Class)type metadata accessor for CRLSEImporter(0));
    v124 = v107;
    v125 = sub_1008EA898(v122, v124);

    v126 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter;
    v127 = *(void **)(v99 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter);
    *(_QWORD *)(v99 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter) = v125;

    v128 = *(void **)(v99 + v126);
    if (v128)
    {
      v129 = v128;
      sub_1008E6138();
      sub_1008E5B70();
      objc_msgSend((id)objc_opt_self(NSFileCoordinator), "addFilePresenter:", v129);
      v130 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DDD68 != -1)
        swift_once(&qword_1013DDD68, sub_100BC0B9C);
      objc_msgSend(v130, "addObserver:selector:name:object:", v129, "exportLibrarySnapshot", qword_101480E38, *(_QWORD *)&v129[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary]);

    }
    (*(void (**)(char *, uint64_t))(v114 + 8))(v152, v113);
  }
  v131 = v148;
  v132 = v146;
  if (qword_1013DDDE8 != -1)
    swift_once(&qword_1013DDDE8, sub_100C14DB8);
  v133 = qword_1014810E8;
  v134 = swift_allocObject(&unk_101271A90, 24, 7);
  *(_QWORD *)(v134 + 16) = v107;
  v135 = *(_QWORD *)(v133 + 16);
  v162[0] = 0xD00000000000001FLL;
  v162[1] = 0x8000000100FAFD20;
  v136 = v107;
  swift_retain(v135);
  AnyHashable.init<A>(_:)(v162, &type metadata for String, &protocol witness table for String);
  v137 = swift_allocObject(&unk_101271AB8, 32, 7);
  *(_QWORD *)(v137 + 16) = sub_10060C334;
  *(_QWORD *)(v137 + 24) = v134;
  v138 = swift_retain(v134);
  AppDependencyManager.add<A>(key:dependency:)(v165, sub_10060C364, v137, &type metadata for CRLBoardLibraryProvidingDependency, v138);
  swift_release(v135);
  swift_release(v137);
  sub_1004CB800((uint64_t)v165, &qword_1013E7C20);
  swift_release(v134);
  v139 = (id)static OS_os_log.crlDefault;
  v141 = static os_log_type_t.default.getter(v140);
  sub_100A06EBC((uint64_t)v139, &_mh_execute_header, v141, "Freeform did finish launching", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_release(v131);
  swift_release(v132);

  sub_10060C390((id *)&aBlock);
}

unint64_t sub_10060BF8C()
{
  unint64_t result;

  result = qword_1013E7BF0;
  if (!qword_1013E7BF0)
  {
    result = swift_getWitnessTable(&unk_100F03010, &type metadata for CRLShortcutsProvider);
    atomic_store(result, (unint64_t *)&qword_1013E7BF0);
  }
  return result;
}

void sub_10060BFD0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  char v20[24];

  v1 = v0;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v20, 0, 0);
  v2 = (id)static OS_os_log.crlDefault;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "applicationWillTerminate", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  if (!v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6;
  sub_100CA1B34();

  sub_100608978();
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, &v19, 0, 0);
  v8 = (id)static OS_os_log.sceneManagement;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Calling updateAppShortcutParameters()", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_10060BF8C();
  static AppShortcutsProvider.updateAppShortcutParameters()();
  v11 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter);
  if (v11)
  {
    v12 = (void *)objc_opt_self(NSFileCoordinator);
    v13 = v11;
    objc_msgSend(v12, "removeFilePresenter:", v13);
    v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    objc_msgSend(v14, "removeObserver:name:object:", v13, qword_101480E38, *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary]);

  }
  v15 = *(void **)(v1 + v5);
  if (!v15)
    goto LABEL_14;
  v16 = v15;
  sub_100CADB44();

  v17 = *(void **)(v1 + v5);
  if (v17)
  {
    v18 = v17;
    sub_100CA1D60();

    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_10060C23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10060C24C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10060C258(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140E02C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100CD35B4(a1, v4, v5, v6);
}

uint64_t sub_10060C2C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013E7C14);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_100608530();
}

id sub_10060C334@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_10060C340()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10060C364()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain(*(_QWORD *)(v0 + 24));
  return v1;
}

id *sub_10060C390(id *a1)
{
  destroy for CRLDataStoreUpgradeController(a1);
  return a1;
}

uint64_t sub_10060C3C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10060C3E8()
{
  uint64_t v0;

  sub_10060839C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10060C3FC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10060C690(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10060C424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10060C858();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10060C480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10060C858();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10060C4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10060C89C();
  v7 = sub_10060C814();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10060C528(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10060C89C();
  v5 = sub_10060C858();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_10060C590(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10060C89C();
  v5 = sub_10060C858();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_10060C5E8(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_10060C89C();
  v3 = sub_10060C858();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_10060C634(unint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;

  if (a1 < 0xA)
    return byte_100EFE692[a1];
  type metadata accessor for CRLFreehandDrawingToolType(0);
  v4 = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v3, &v4, v3, &type metadata for UInt);
  __break(1u);
  return result;
}

unint64_t sub_10060C690(unint64_t result)
{
  if (result >= 0xA)
    return 10;
  return result;
}

uint64_t sub_10060C6A0(char a1)
{
  return qword_100EFE6A0[a1];
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingToolTypeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_10060C700 + 4 * byte_100EFE495[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_10060C734 + 4 * asc_100EFE490[v4]))();
}

uint64_t sub_10060C734(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10060C73C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10060C744);
  return result;
}

uint64_t sub_10060C750(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10060C758);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_10060C75C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10060C764(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingToolTypeData()
{
  return &type metadata for CRLFreehandDrawingToolTypeData;
}

unint64_t sub_10060C784()
{
  unint64_t result;

  result = qword_1013E7C28;
  if (!qword_1013E7C28)
  {
    result = swift_getWitnessTable(&unk_100EFE4C0, &type metadata for CRLFreehandDrawingToolTypeData);
    atomic_store(result, (unint64_t *)&qword_1013E7C28);
  }
  return result;
}

unint64_t sub_10060C7CC()
{
  unint64_t result;

  result = qword_1013E7C30;
  if (!qword_1013E7C30)
  {
    result = swift_getWitnessTable(&unk_100EFE508, &type metadata for CRLFreehandDrawingToolTypeData);
    atomic_store(result, (unint64_t *)&qword_1013E7C30);
  }
  return result;
}

unint64_t sub_10060C814()
{
  unint64_t result;

  result = qword_1013E7C38;
  if (!qword_1013E7C38)
  {
    result = swift_getWitnessTable(&unk_100EFE668, &type metadata for CRLFreehandDrawingToolTypeData);
    atomic_store(result, (unint64_t *)&qword_1013E7C38);
  }
  return result;
}

unint64_t sub_10060C858()
{
  unint64_t result;

  result = qword_1013E7C40;
  if (!qword_1013E7C40)
  {
    result = swift_getWitnessTable(&unk_100EFE5F0, &type metadata for CRLFreehandDrawingToolTypeData);
    atomic_store(result, (unint64_t *)&qword_1013E7C40);
  }
  return result;
}

unint64_t sub_10060C89C()
{
  unint64_t result;

  result = qword_1013E7C48;
  if (!qword_1013E7C48)
  {
    result = swift_getWitnessTable(&unk_100EFE5B8, &type metadata for CRLFreehandDrawingToolTypeData);
    atomic_store(result, (unint64_t *)&qword_1013E7C48);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRLLayerAnimationGroup(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for CRLLayerAnimationGroup(_QWORD *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for CRLLayerAnimationGroup(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  return a1;
}

uint64_t *assignWithTake for CRLLayerAnimationGroup(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationGroup()
{
  return &type metadata for CRLLayerAnimationGroup;
}

double sub_10060C9AC(uint64_t a1, double a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    do
    {
      v6 = v5[3];
      v7 = v5[4];
      sub_1004BB5A4(v5, v6);
      v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
      sub_10061FCD8(v8);
      v5 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
  }
  return a2;
}

double sub_10060CA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
LABEL_6:
    sub_10060CF30((uint64_t)&v17);
    return 0.0;
  }
  sub_1004E90B0(a1 + 32, (uint64_t)&v14);
  swift_bridgeObjectRetain(a1);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v8 = a1 + 72;
    do
    {
      sub_1004E90B0(v8, (uint64_t)&v17);
      v10 = v15;
      v9 = v16;
      sub_1004BB5A4(&v14, v15);
      v11 = (*(double (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 40))(v10);
      v13 = *((_QWORD *)&v18 + 1);
      v12 = v19;
      sub_1004BB5A4(&v17, *((uint64_t *)&v18 + 1));
      if (v11 >= (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 40))(v13))
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v17);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v14);
        sub_1004DB728(&v17, (uint64_t)&v14);
      }
      v8 += 40;
      --v3;
    }
    while (v3);
  }
  sub_1004DB728(&v14, (uint64_t)&v17);
  swift_bridgeObjectRelease(a1);
  v4 = *((_QWORD *)&v18 + 1);
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_6;
  v5 = v19;
  sub_1004BB5A4(&v17, *((uint64_t *)&v18 + 1));
  v6 = (*(double (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 40))(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v17);
  return v6;
}

double sub_10060CBB4()
{
  uint64_t v0;

  return sub_10060C9AC(*(_QWORD *)v0, *(double *)(v0 + 8));
}

double sub_10060CBC0()
{
  uint64_t *v0;

  return sub_10060CA54(*v0);
}

uint64_t sub_10060CBC8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, __n128);
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v7 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v20 - v12;
  v14 = *(void (**)(char *, __n128))(v7 + 16);
  v14((char *)&v20 - v12, v11);
  v15 = (_QWORD *)*a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
  *a2 = (uint64_t)v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_100D0FAB4(0, v15[2] + 1, 1, v15);
    *a2 = (uint64_t)v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_100D0FAB4((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *a2 = (uint64_t)v15;
  }
  ((void (*)(char *, char *, uint64_t))v14)(v9, v13, a3);
  sub_1005C46A8(v18, (uint64_t)v9, a2, a3, a4);
  *a2 = (uint64_t)v15;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a3);
}

double sub_10060CD0C(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];
  _BYTE v19[40];
  _QWORD *v20;

  v20 = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    do
    {
      sub_10060CEA0(v4, (uint64_t)v19);
      sub_10060CEE8((uint64_t)v19, (uint64_t)&v15);
      if (v16)
      {
        sub_1004DB728(&v15, (uint64_t)v18);
        sub_1004DB728(v18, (uint64_t)&v15);
        v5 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
        {
          v5 = sub_100D0FAB4(0, v5[2] + 1, 1, v5);
          v20 = v5;
        }
        v7 = v5[2];
        v6 = v5[3];
        if (v7 >= v6 >> 1)
          v20 = sub_100D0FAB4((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
        v8 = v16;
        v9 = v17;
        v10 = sub_1004CB9AC((uint64_t)&v15, v16);
        __chkstk_darwin(v10);
        v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v13 + 16))(v12);
        sub_1005C46A8(v7, (uint64_t)v12, (uint64_t *)&v20, v8, v9);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v15);
      }
      else
      {
        sub_10060CF30((uint64_t)&v15);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  return a2;
}

uint64_t sub_10060CEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F0490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060CEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F0490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060CF30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F0490);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10060CF74()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform10CRLCommand_committed);
}

void sub_10060CF84()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xEE002E7369687420, "Freeform/CRLCommand.swift", 25, 2, 29, 0);
  __break(1u);
}

id sub_10060D05C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommand();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommand()
{
  return objc_opt_self(_TtC8Freeform10CRLCommand);
}

uint64_t initializeWithCopy for AnyCRLCommandChangeContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

_QWORD *assignWithCopy for AnyCRLCommandChangeContext(_QWORD *a1, _QWORD *a2)
{
  sub_1004EA5C8(a1, a2);
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for AnyCRLCommandChangeContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCRLCommandChangeContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCRLCommandChangeContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyCRLCommandChangeContext()
{
  return &type metadata for AnyCRLCommandChangeContext;
}

Swift::Int sub_10060D1FC()
{
  uint64_t v0;
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  AnyHashable.hash(into:)(v2);
  Hasher._combine(_:)(*(_QWORD *)(v0 + 40));
  return Hasher._finalize()();
}

void sub_10060D244(uint64_t a1)
{
  uint64_t v1;

  AnyHashable.hash(into:)(a1);
  Hasher._combine(_:)(*(_QWORD *)(v1 + 40));
}

Swift::Int sub_10060D270(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  AnyHashable.hash(into:)(v3);
  Hasher._combine(_:)(*(_QWORD *)(v1 + 40));
  return Hasher._finalize()();
}

BOOL sub_10060D2B4(uint64_t a1, uint64_t a2)
{
  return (static AnyHashable.== infix(_:_:)() & 1) != 0 && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
}

unint64_t sub_10060D2F8()
{
  unint64_t result;

  result = qword_1013E7C88;
  if (!qword_1013E7C88)
  {
    result = swift_getWitnessTable(&unk_100EFE79C, &type metadata for AnyCRLCommandChangeContext);
    atomic_store(result, (unint64_t *)&qword_1013E7C88);
  }
  return result;
}

Swift::Int sub_10060D33C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10060D380()
{
  Swift::UInt64 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10060D3A8(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

ValueMetadata *type metadata accessor for CRLCommandChangeHint()
{
  return &type metadata for CRLCommandChangeHint;
}

unint64_t sub_10060D3FC()
{
  unint64_t result;

  result = qword_1013E7C90;
  if (!qword_1013E7C90)
  {
    result = swift_getWitnessTable(&unk_100EFE858, &type metadata for CRLCommandChangeHint);
    atomic_store(result, (unint64_t *)&qword_1013E7C90);
  }
  return result;
}

unint64_t sub_10060D444()
{
  unint64_t result;

  result = qword_1013E7C98;
  if (!qword_1013E7C98)
  {
    result = swift_getWitnessTable("y67", &type metadata for CRLCommandChangeHint);
    atomic_store(result, (unint64_t *)&qword_1013E7C98);
  }
  return result;
}

unint64_t sub_10060D48C()
{
  unint64_t result;

  result = qword_1013E7CA0;
  if (!qword_1013E7CA0)
  {
    result = swift_getWitnessTable(&unk_100EFE880, &type metadata for CRLCommandChangeHint);
    atomic_store(result, (unint64_t *)&qword_1013E7CA0);
  }
  return result;
}

unint64_t sub_10060D4D4()
{
  unint64_t result;

  result = qword_1013E7CA8;
  if (!qword_1013E7CA8)
  {
    result = swift_getWitnessTable(&unk_100EFE8B8, &type metadata for CRLCommandChangeHint);
    atomic_store(result, (unint64_t *)&qword_1013E7CA8);
  }
  return result;
}

void sub_10060D658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  double *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  CKRecordID v33;
  Swift::String v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = sub_1004B804C(&qword_1013E7CF8);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_children);
  v38 = v9;
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  v37 = v3;
  v12 = v2 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_indices;
  v13 = IndexSet.first.getter(v10);
  if ((v14 & 1) != 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 30, "trying to reorder a child that we don't know about!", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"trying to reorder a child that we don't know about!");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2u, 30, (uint64_t)"trying to reorder a child that we don't know about!", 51, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v33, v34);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    goto LABEL_20;
  }
  v15 = v13;
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_container);
  v17 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v18 = *(double **)(v16 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v18)
  {
    sub_100740DA4();
    v18 = *(double **)(v16 + v17);
  }
  if (v18)
    v19 = v18;
  else
    v19 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v18);
  v36 = v11;
  v20 = sub_100C1A828((uint64_t)v11, (uint64_t)v19);
  v22 = v21;
  swift_bridgeObjectRelease(v19);
  if ((v22 & 1) != 0)
    goto LABEL_19;
  v23 = v15 < v20;
  *v7 = v8;
  v24 = (char *)v7 + *(int *)(v38 + 52);
  v25 = type metadata accessor for IndexSet(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v12, v25);
  swift_bridgeObjectRetain(v8);
  sub_100BAC250((uint64_t)v7);
  v39 = v26;
  v27 = v37;
  sub_10060DC40(&v39, v23);
  if (v27)
  {
LABEL_20:
    swift_release(v39);
    __break(1u);
    return;
  }
  v28 = v39;
  sub_10060E6BC((uint64_t)v7);
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v30 = (uint64_t *)(v28 + 40);
    do
    {
      v31 = *v30;
      v32 = (id)*(v30 - 1);
      sub_100743B84(v32, v31, a2);
      v30 += 2;

      --v29;
    }
    while (v29);
  }

  swift_release(v28);
}

uint64_t sub_10060DA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_children));
  v1 = v0 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_indices;
  v2 = type metadata accessor for IndexSet(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_actionString
                                             + 8));
}

id sub_10060DA88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReorderContainerChildren(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10060DB30()
{
  return type metadata accessor for CRLCommandReorderContainerChildren(0);
}

uint64_t type metadata accessor for CRLCommandReorderContainerChildren(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E7CE8;
  if (!qword_1013E7CE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandReorderContainerChildren);
  return result;
}

uint64_t sub_10060DB74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for IndexSet(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100EFEA28;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10060DC04()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_actionString);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

void sub_10060DC40(uint64_t *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = sub_100D167C0(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v6[0] = v4 + 32;
  v6[1] = v5;
  sub_10060DCB0(v6, a2 & 1);
  *a1 = v4;
}

void sub_10060DCB0(uint64_t *a1, char a2)
{
  uint64_t v2;
  Swift::Int v5;
  Swift::Int v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  Swift::Int v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  int v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  _QWORD *v36;
  uint64_t v37;
  Swift::Int v38;
  _QWORD *v39;
  uint64_t v40;
  _BOOL4 v41;
  _BOOL4 v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  double *v103;
  Swift::Int v104;
  Swift::Int v105;
  uint64_t v106;
  char *__dst;
  char v108;

  v5 = a1[1];
  v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_137;
    if (v5)
      sub_10060E374(0, v5, 1, a1, a2 & 1);
    return;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_145;
  v8 = v6;
  v108 = a2;
  v101 = a1;
  if (v5 < 2)
  {
    v12 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v5 != 1)
    {
      v16 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
      v15 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      v103 = v12;
      if (v16 >= 2)
      {
        v95 = *v101;
        do
        {
          v96 = v16 - 2;
          if (v16 < 2)
            goto LABEL_132;
          if (!v95)
            goto LABEL_144;
          v97 = *(_QWORD *)&v15[16 * v96 + 32];
          v98 = *(_QWORD *)&v15[16 * v16 + 24];
          sub_10060E400((char *)(v95 + 16 * v97), (char *)(v95 + 16 * *(_QWORD *)&v15[16 * v16 + 16]), v95 + 16 * v98, __dst, v108 & 1);
          if (v2)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
            v15 = sub_100D1664C((uint64_t)v15);
          if (v96 >= *((_QWORD *)v15 + 2))
            goto LABEL_134;
          v99 = &v15[16 * v96 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v15 + 2);
          if (v16 > v100)
            goto LABEL_135;
          memmove(&v15[16 * v16 + 16], &v15[16 * v16 + 32], 16 * (v100 - v16));
          *((_QWORD *)v15 + 2) = v100 - 1;
          v16 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease(v15);
      v103[2] = 0.0;
      swift_bridgeObjectRelease(v103);
      return;
    }
    v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    v9 = v7 >> 1;
    v10 = sub_1004B804C(&qword_1013E7D00);
    v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(v9, v10);
    *(_QWORD *)(v11 + 16) = v9;
    v103 = (double *)v11;
    __dst = (char *)(v11 + 32);
  }
  v13 = 0;
  v14 = *a1;
  v102 = *a1 + 40;
  v15 = (char *)_swiftEmptyArrayStorage;
  v104 = v8;
  v105 = v5;
  v106 = *a1;
  while (1)
  {
    v17 = v13++;
    if (v13 >= v5)
    {
      v22 = v108;
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 16 * v13 + 8);
      v19 = *(_QWORD *)(v14 + 16 * v17 + 8);
      v20 = v19 < v18;
      v21 = v18 < v19;
      v22 = v108;
      if ((v108 & 1) == 0)
        v21 = v20;
      v13 = v17 + 2;
      if (v17 + 2 < v5)
      {
        v23 = (uint64_t *)(v102 + 16 * v17);
        while (1)
        {
          v25 = *v23;
          v23 += 2;
          v24 = v25;
          v26 = v18 < v25;
          v27 = v25 < v18;
          if ((v108 & 1) == 0)
            v27 = v26;
          if (v21 != v27)
            break;
          ++v13;
          v18 = v24;
          if (v5 == v13)
          {
            v13 = v5;
            break;
          }
        }
      }
      if (v21)
      {
        if (v13 < v17)
          goto LABEL_138;
        if (v17 < v13)
        {
          v28 = 16 * v13;
          v29 = 16 * v17;
          v30 = v13;
          v31 = v17;
          do
          {
            if (v31 != --v30)
            {
              if (!v14)
                goto LABEL_143;
              v32 = v14 + v28;
              v33 = *(_QWORD *)(v14 + v29);
              v34 = *(_QWORD *)(v14 + v29 + 8);
              *(_OWORD *)(v14 + v29) = *(_OWORD *)(v14 + v28 - 16);
              *(_QWORD *)(v32 - 16) = v33;
              *(_QWORD *)(v32 - 8) = v34;
            }
            ++v31;
            v28 -= 16;
            v29 += 16;
          }
          while (v31 < v30);
        }
      }
    }
    if (v13 >= v5)
      goto LABEL_53;
    if (__OFSUB__(v13, v17))
      goto LABEL_136;
    if (v13 - v17 >= v8)
      goto LABEL_53;
    v35 = v17 + v8;
    if (__OFADD__(v17, v8))
      goto LABEL_139;
    if (v35 >= v5)
      v35 = v5;
    if (v35 < v17)
      break;
    if (v13 != v35)
    {
      v36 = (_QWORD *)(v14 + 16 * v13);
      do
      {
        v37 = *(_QWORD *)(v14 + 16 * v13 + 8);
        v38 = v17;
        v39 = v36;
        do
        {
          v40 = *(v39 - 1);
          v41 = v40 < v37;
          v42 = v37 < v40;
          if ((v22 & 1) == 0)
            v42 = v41;
          if (!v42)
            break;
          if (!v14)
            goto LABEL_141;
          v43 = *v39;
          *(_OWORD *)v39 = *((_OWORD *)v39 - 1);
          *(v39 - 1) = v37;
          *(v39 - 2) = v43;
          v39 -= 2;
          ++v38;
        }
        while (v13 != v38);
        ++v13;
        v36 += 2;
      }
      while (v13 != v35);
      v13 = v35;
    }
LABEL_53:
    if (v13 < v17)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
      v15 = sub_100D15FCC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v45 = *((_QWORD *)v15 + 2);
    v44 = *((_QWORD *)v15 + 3);
    v16 = v45 + 1;
    v14 = v106;
    if (v45 >= v44 >> 1)
    {
      v94 = sub_100D15FCC((char *)(v44 > 1), v45 + 1, 1, v15);
      v14 = v106;
      v15 = v94;
    }
    *((_QWORD *)v15 + 2) = v16;
    v46 = v15 + 32;
    v47 = &v15[16 * v45 + 32];
    *(_QWORD *)v47 = v17;
    *((_QWORD *)v47 + 1) = v13;
    if (v45)
    {
      while (1)
      {
        v48 = v16 - 1;
        if (v16 >= 4)
        {
          v53 = &v46[16 * v16];
          v54 = *((_QWORD *)v53 - 8);
          v55 = *((_QWORD *)v53 - 7);
          v59 = __OFSUB__(v55, v54);
          v56 = v55 - v54;
          if (v59)
            goto LABEL_120;
          v58 = *((_QWORD *)v53 - 6);
          v57 = *((_QWORD *)v53 - 5);
          v59 = __OFSUB__(v57, v58);
          v51 = v57 - v58;
          v52 = v59;
          if (v59)
            goto LABEL_121;
          v60 = v16 - 2;
          v61 = &v46[16 * v16 - 32];
          v63 = *(_QWORD *)v61;
          v62 = *((_QWORD *)v61 + 1);
          v59 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          if (v59)
            goto LABEL_123;
          v59 = __OFADD__(v51, v64);
          v65 = v51 + v64;
          if (v59)
            goto LABEL_126;
          if (v65 >= v56)
          {
            v83 = &v46[16 * v48];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v59 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v59)
              goto LABEL_130;
            v76 = v51 < v86;
            goto LABEL_90;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v77 = *((_QWORD *)v15 + 4);
            v78 = *((_QWORD *)v15 + 5);
            v59 = __OFSUB__(v78, v77);
            v70 = v78 - v77;
            v71 = v59;
            goto LABEL_84;
          }
          v50 = *((_QWORD *)v15 + 4);
          v49 = *((_QWORD *)v15 + 5);
          v59 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          v52 = v59;
        }
        if ((v52 & 1) != 0)
          goto LABEL_122;
        v60 = v16 - 2;
        v66 = &v46[16 * v16 - 32];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v69 = __OFSUB__(v67, v68);
        v70 = v67 - v68;
        v71 = v69;
        if (v69)
          goto LABEL_125;
        v72 = &v46[16 * v48];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v59 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v59)
          goto LABEL_128;
        if (__OFADD__(v70, v75))
          goto LABEL_129;
        if (v70 + v75 >= v51)
        {
          v76 = v51 < v75;
LABEL_90:
          if (v76)
            v48 = v60;
          goto LABEL_92;
        }
LABEL_84:
        if ((v71 & 1) != 0)
          goto LABEL_124;
        v79 = &v46[16 * v48];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v59 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v59)
          goto LABEL_127;
        if (v82 < v70)
          goto LABEL_15;
LABEL_92:
        v87 = v48 - 1;
        if (v48 - 1 >= v16)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v14)
          goto LABEL_142;
        v88 = v15;
        v89 = &v46[16 * v87];
        v90 = *(_QWORD *)v89;
        v91 = &v46[16 * v48];
        v92 = *((_QWORD *)v91 + 1);
        sub_10060E400((char *)(v14 + 16 * *(_QWORD *)v89), (char *)(v14 + 16 * *(_QWORD *)v91), v14 + 16 * v92, __dst, v108 & 1);
        if (v2)
        {
          v15 = v88;
          goto LABEL_114;
        }
        if (v92 < v90)
          goto LABEL_117;
        if (v48 > *((_QWORD *)v88 + 2))
          goto LABEL_118;
        *(_QWORD *)v89 = v90;
        *(_QWORD *)&v46[16 * v87 + 8] = v92;
        v93 = *((_QWORD *)v88 + 2);
        if (v48 >= v93)
          goto LABEL_119;
        v15 = v88;
        v16 = v93 - 1;
        memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
        *((_QWORD *)v88 + 2) = v93 - 1;
        v14 = v106;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v16 = 1;
LABEL_15:
    v8 = v104;
    v5 = v105;
    if (v13 >= v105)
    {
      v12 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10060E374(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BOOL4 v11;
  _BOOL4 v12;
  uint64_t v13;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = *a4 + 16 * a3;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 16 * a3 + 8);
    v8 = result;
    v9 = (_QWORD *)v6;
    while (1)
    {
      v10 = *(v9 - 1);
      v11 = v10 < v7;
      v12 = v7 < v10;
      if ((a5 & 1) == 0)
        v12 = v11;
      if (!v12)
      {
LABEL_4:
        ++a3;
        v6 += 16;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v13 = *v9;
      *(_OWORD *)v9 = *((_OWORD *)v9 - 1);
      *(v9 - 1) = v7;
      *(v9 - 2) = v13;
      v9 -= 2;
      if (a3 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10060E400(char *__src, char *a2, unint64_t a3, char *__dst, char a5)
{
  char *v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  _BOOL4 v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  _BOOL4 v30;
  char *v31;
  uint64_t result;
  char *v33;
  const void *v34;
  char *v35;

  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 4;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 4;
  v35 = __src;
  v34 = __dst;
  if (v12 >= v14 >> 4)
  {
    if (v13 >= -15)
    {
      if (__dst != a2 || &a2[16 * v15] <= __dst)
        memmove(__dst, a2, 16 * v15);
      v24 = &v6[16 * v15];
      v33 = v24;
      v35 = v8;
      if (v9 < v8 && v13 >= 16)
      {
        v25 = (char *)(a3 - 16);
        do
        {
          v26 = v25 + 16;
          v27 = *((_QWORD *)v24 - 1);
          v28 = *((_QWORD *)v8 - 1);
          v29 = v28 < v27;
          v30 = v27 < v28;
          if ((a5 & 1) == 0)
            v30 = v29;
          if (v30)
          {
            v31 = v8 - 16;
            if (v26 != v8 || v25 >= v8)
              *(_OWORD *)v25 = *(_OWORD *)v31;
            v35 = v8 - 16;
            if (v31 <= v9)
              break;
          }
          else
          {
            v33 = v24 - 16;
            if (v26 < v24 || v25 >= v24 || v26 != v24)
              *(_OWORD *)v25 = *((_OWORD *)v24 - 1);
            v31 = v8;
            v24 -= 16;
            if (v8 <= v9)
              break;
          }
          v25 -= 16;
          v8 = v31;
        }
        while (v24 > v6);
      }
LABEL_48:
      sub_100D1630C((void **)&v35, &v34, &v33);
      return 1;
    }
  }
  else if (v10 >= -15)
  {
    if (__dst != __src || &__src[16 * v12] <= __dst)
      memmove(__dst, __src, 16 * v12);
    v16 = &v6[16 * v12];
    v33 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 16)
    {
      v17 = v6;
      while (1)
      {
        v18 = *((_QWORD *)v8 + 1);
        v19 = *((_QWORD *)v17 + 1);
        v20 = v19 < v18;
        v21 = v18 < v19;
        if ((a5 & 1) == 0)
          v21 = v20;
        if (v21)
        {
          v22 = v8 + 16;
          v23 = v8;
          if (v9 == v8 && v9 < v22)
            goto LABEL_24;
        }
        else
        {
          v6 = v17 + 16;
          v23 = v17;
          v22 = v8;
          if (v9 == v17)
          {
            v17 += 16;
            if (v9 < v6)
              goto LABEL_24;
          }
          else
          {
            v17 += 16;
          }
        }
        *(_OWORD *)v9 = *(_OWORD *)v23;
LABEL_24:
        v9 += 16;
        if (v17 < v16)
        {
          v8 = v22;
          if ((unint64_t)v22 < a3)
            continue;
        }
        v34 = v6;
        v35 = v9;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10060E6BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E7CF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10060E6FC(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t *v7;
  void *v8;
  char *v9;
  id v10;
  NSString v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  CKRecordID v26;
  uint64_t v27;
  objc_super v29;

  v7 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_actionString];
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = v3;
  v10 = objc_msgSend(v8, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *v7 = v15;
  v7[1] = v17;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v25 = a2;
    else
      v25 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 == IndexSet.count.getter())
  {
    if (v18 > 0)
    {
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_children] = a2;
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_container] = a1;
      v19 = &v9[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_indices];
      v20 = type metadata accessor for IndexSet(0);
      v21 = *(_QWORD *)(v20 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a3, v20);
      v22 = a1;

      v29.receiver = v9;
      v29.super_class = (Class)type metadata accessor for CRLCommandReorderContainerChildren(0);
      v23 = objc_msgSendSuper2(&v29, "init");
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
      return (uint64_t)v23;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 19, "Should not enqueue a command with nothing to do", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should not enqueue a command with nothing to do");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2u, 19, (uint64_t)"Should not enqueue a command with nothing to do", 47, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 18, "Number of children and number of indices must match!", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Number of children and number of indices must match!");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2u, 18, (uint64_t)"Number of children and number of indices must match!", 52, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, *(Swift::String *)&v27);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

id sub_10060EC58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  objc_super v9;

  v1 = (char *)objc_msgSend(v0, "start");
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v2 == NSNotFound.getter(v3))
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity];
  v7 = (objc_class *)type metadata accessor for CRLTextPosition();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v5;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v6;
  v9.receiver = v8;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_10060EDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t ObjectType;
  objc_super v16;

  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", a1, 0);
  result = NSNotFound.getter(v4);
  if (result <= a2)
    v6 = 0;
  else
    v6 = a2;
  v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v8 = v7 + v6;
  if (__OFADD__(v7, v6))
  {
    __break(1u);
  }
  else if (v8 >= v7)
  {
    v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v10 = (objc_class *)type metadata accessor for CRLTextRange();
    v11 = (char *)objc_allocWithZone(v10);
    v12 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v13 = &v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v13 = v7;
    *((_QWORD *)v13 + 1) = v8;
    *(_QWORD *)&v11[v12] = v9;
    v16.receiver = v11;
    v16.super_class = v10;
    v14 = objc_msgSendSuper2(&v16, "init");

    ObjectType = swift_getObjectType(v2);
    swift_deallocPartialClassInstance(v2, ObjectType, 40, 7);
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

id sub_10060EF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjCClassMetadata;
  uint64_t ObjectType;
  uint64_t v8;
  void *v9;

  ObjCClassMetadata = swift_getObjCClassMetadata(a1);
  ObjectType = swift_getObjectType(a3);
  v8 = swift_unknownObjectRetain(a3);
  v9 = (void *)a4(v8, ObjCClassMetadata, ObjectType);
  swift_unknownObjectRelease(a3);
  return v9;
}

void sub_10060EFE8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  id v32;
  _QWORD v33[3];
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013F3D90);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, "isEmpty", v12))
  {
    v15 = (char *)objc_msgSend(v2, "start");
    objc_msgSend(a1, "textRangeForParagraphAtCharIndex:", *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location]);

    return;
  }
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v31 = &v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v18 = sub_1007D7CB8(v16, v17, v33);
  v32 = (id)v33[0];
  v19 = *(_QWORD *)(v33[0] + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v19)
    goto LABEL_12;
  v20 = v33[1];
  v21 = v33[2];
  (*(void (**)(id))(*(_QWORD *)v19 + 760))(v18);
  sub_1004D29BC((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)v14);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPShapeItemCRDTData);
  v22 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  CRAttributedString.subscript.getter(v20, v21, v22);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
  v23 = (void *)CRAttributedString.Substring.attributedString.getter(v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = objc_msgSend(v23, "string");

  if (!v24)
  {
LABEL_13:
    __break(1u);
    return;
  }

  v36 = v34;
  v37 = v35;
  sub_1005A73A4((id *)&v36);
  v25 = (char *)objc_msgSend(v2, "start");
  v26 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v26 == NSNotFound.getter(v27))
  {
    v28 = 0;
    goto LABEL_8;
  }
  v29 = *((_QWORD *)v31 + 1);
  v28 = v29 - *(_QWORD *)v31;
  if (__OFSUB__(v29, *(_QWORD *)v31))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_8:
  if (v28 == 1)
  {
    sub_10050312C();
    v30 = (void *)NSString.init(stringLiteral:)("\n", 1, 2);
    static NSObject.== infix(_:_:)(v24, v30);

  }
  else
  {

  }
}

char *sub_10060F348(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  char *result;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  objc_super v12;

  if (!objc_msgSend(v1, "isEmpty"))
    return v11;
  v3 = OBJC_IVAR____TtC8Freeform12CRLTextRange_range;
  if (*(uint64_t *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range] < 1)
    return v11;
  v4 = objc_msgSend(a1, "previousCharacterIndex:");
  result = v11;
  v6 = *(_QWORD *)&v11[v3];
  if (v6 < (uint64_t)v4)
  {
    __break(1u);
  }
  else
  {
    v7 = (objc_class *)type metadata accessor for CRLTextRange();
    v8 = (char *)objc_allocWithZone(v7);
    v9 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v10 = &v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v10 = v4;
    *((_QWORD *)v10 + 1) = v6;
    *(_QWORD *)&v8[v9] = 0;
    v12.receiver = v8;
    v12.super_class = v7;
    return (char *)objc_msgSendSuper2(&v12, "init");
  }
  return result;
}

char *sub_10060F42C(char *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  objc_super v8;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  v3 = *(_QWORD *)&result[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    v4 = (objc_class *)type metadata accessor for CRLTextRange();
    v5 = (char *)objc_allocWithZone(v4);
    v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v7 = v2;
    *((_QWORD *)v7 + 1) = v3;
    *(_QWORD *)&v5[v6] = 0;
    v8.receiver = v5;
    v8.super_class = v4;
    return (char *)objc_msgSendSuper2(&v8, "init");
  }
  return result;
}

id sub_10060F544()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range), 0);
  NSNotFound.getter(v1);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v4 = (objc_class *)type metadata accessor for CRLTextRange();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v7 = v2;
  *((_QWORD *)v7 + 1) = v2;
  *(_QWORD *)&v5[v6] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  v8 = objc_msgSendSuper2(&v10, "init");

  return v8;
}

id sub_10060F64C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8), 0);
  NSNotFound.getter(v1);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v4 = (objc_class *)type metadata accessor for CRLTextRange();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v7 = v2;
  *((_QWORD *)v7 + 1) = v2;
  *(_QWORD *)&v5[v6] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  v8 = objc_msgSendSuper2(&v10, "init");

  return v8;
}

char *sub_10060F758(char *result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  objc_super v16;

  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  if (__OFADD__(*v2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  result = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", &result[*v2], 0);
  v3 = v2[1];
  v4 = __OFSUB__(v3, *v2);
  v5 = v3 - *v2;
  if (v4)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = result;
  result = (char *)NSNotFound.getter(result);
  if (v5 >= (uint64_t)result)
    v7 = 0;
  else
    v7 = v5;
  v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v9 = v8 + v7;
  if (__OFADD__(v8, v7))
    goto LABEL_11;
  if (v9 >= v8)
  {
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v11 = (objc_class *)type metadata accessor for CRLTextRange();
    v12 = (char *)objc_allocWithZone(v11);
    v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v14 = v8;
    *((_QWORD *)v14 + 1) = v9;
    *(_QWORD *)&v12[v13] = v10;
    v16.receiver = v12;
    v16.super_class = v11;
    v15 = objc_msgSendSuper2(&v16, "init");

    return (char *)v15;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10060F8A8(char *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int location;
  Swift::Int length;
  id v14;
  __C::_NSRange_optional v15;

  v3 = (char *)objc_msgSend(v1, "start");
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  result = NSNotFound.getter(v5);
  if (v4 != result
    && __OFSUB__(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8], *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range]))
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = (char *)objc_msgSend(a1, "start");
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v8 == NSNotFound.getter(v9))
  {
    result = 0x7FFFFFFFFFFFFFFFLL;
    v10 = 0;
    goto LABEL_6;
  }
  result = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v11 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v10 = v11 - result;
  if (__OFSUB__(v11, result))
  {
LABEL_10:
    __break(1u);
    return result;
  }
LABEL_6:
  v15 = _NSRange.intersection(_:)(*(__C::_NSRange *)&result);
  if (v15.is_nil)
    return 0;
  location = v15.value.location;
  length = v15.value.length;
  v14 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  return sub_10060EDE4(location, length);
}

BOOL sub_10060F9CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v8;
  _BYTE v9[24];
  uint64_t v10;

  sub_1004F370C(a1, (uint64_t)v9);
  if (v10)
  {
    v2 = type metadata accessor for CRLTextRange();
    if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
    {
      v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
      v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
      v6 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v5 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      if (v4 == v6)
        return v3 == v5;
    }
  }
  else
  {
    sub_1004D28EC((uint64_t)v9);
  }
  return 0;
}

uint64_t sub_10060FA78(char *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  unint64_t v17;

  v3 = (char *)objc_msgSend(v1, "start");
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  result = NSNotFound.getter();
  if (v4 == result)
  {
    v6 = 0x7FFFFFFFFFFFFFFFLL;
    v7 = 0;
  }
  else
  {
    v8 = &v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v9 = *((_QWORD *)v8 + 1);
    v7 = v9 - v6;
    if (__OFSUB__(v9, v6))
    {
      __break(1u);
      goto LABEL_14;
    }
  }
  v10 = (char *)objc_msgSend(a1, "start");
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  result = NSNotFound.getter();
  if (v11 != result)
  {
    v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v15 = __OFSUB__(v14, v12);
    v13 = v14 - v12;
    if (!v15)
      goto LABEL_7;
LABEL_14:
    __break(1u);
    return result;
  }
  v12 = 0x7FFFFFFFFFFFFFFFLL;
  v13 = 0;
LABEL_7:
  v16 = v6 > v12;
  v17 = v13 + v12;
  return !v16 && v7 + v6 >= v17;
}

uint64_t sub_10060FBC0(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  v3 = (char *)objc_msgSend(v1, "start");
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  result = NSNotFound.getter();
  if (v4 == result)
  {
    v6 = 0x7FFFFFFFFFFFFFFFLL;
    v7 = 0;
  }
  else
  {
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v9 = __OFSUB__(v8, v6);
    v7 = v8 - v6;
    if (v9)
    {
      __break(1u);
      return result;
    }
  }
  v10 = v6 > v2;
  v11 = v7 + v6;
  return !v10 && v11 >= v2;
}

uint64_t sub_10060FCB8()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  char *v7;
  uint64_t v8;
  Swift::String v9;
  void *object;
  Swift::String v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;
  unint64_t v30;

  v1 = v0;
  v29 = 0;
  v30 = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for CRLTextRange();
  v2 = objc_msgSendSuper2(&v28, "description");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;
  swift_bridgeObjectRelease(0xE000000000000000);

  v29 = v3;
  v30 = v5;
  v6._countAndFlagsBits = 0x65676E6172207B20;
  v6._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v6);
  v7 = &v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v26 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v27 = v8;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(&v27, &v25, &type metadata for Int, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9._countAndFlagsBits = 3943982;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  _print_unlocked<A, B>(_:_:)(&v26, &v25, &type metadata for Int, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  object = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(object);
  v11._countAndFlagsBits = 0x6874676E656C202CLL;
  v11._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v11);
  v12 = (char *)objc_msgSend(v0, "start");
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  result = NSNotFound.getter(v14);
  if (v13 == result)
  {
    v16 = 0;
  }
  else
  {
    v17 = *((_QWORD *)v7 + 1);
    v16 = v17 - *(_QWORD *)v7;
    if (__OFSUB__(v17, *(_QWORD *)v7))
    {
      __break(1u);
      return result;
    }
  }
  v25._countAndFlagsBits = v16;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v19 = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v19);
  v20._countAndFlagsBits = 0x6666416C6F65202CLL;
  v20._object = (void *)0xEF203A7974696E69;
  String.append(_:)(v20);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] == 1)
    v21 = 1702195828;
  else
    v21 = 0x65736C6166;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] == 1)
    v22 = 0xE400000000000000;
  else
    v22 = 0xE500000000000000;
  v23 = v22;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease(v22);
  v24._countAndFlagsBits = 8200236;
  v24._object = (void *)0xE300000000000000;
  String.append(_:)(v24);
  return v29;
}

id sub_10060FF54()
{
  return sub_1004C3370(type metadata accessor for CRLTextRange);
}

uint64_t type metadata accessor for CRLTextRange()
{
  return objc_opt_self(_TtC8Freeform12CRLTextRange);
}

id sub_10060FF80(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  double *v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  objc_super v13;

  v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
  v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
  v6 = (double *)&v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
  *v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  v6[3] = a5;
  if (a1 == 1)
  {
    v8 = v5;
    v9 = 1;
  }
  else if (a1)
  {
    if (a1 == -1)
    {
      v7 = v5;
    }
    else
    {
      v11 = v5;
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 24, (uint64_t)"Unknown direction.", 18, 2u);
    }
    v9 = -1;
  }
  else
  {
    v10 = v5;
    v9 = 0;
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = v9;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for CRLTextSelectionRect();
  return objc_msgSendSuper2(&v13, "init");
}

uint64_t sub_100610140()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection);
  if ((unint64_t)(result + 1) >= 3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 39, (uint64_t)"Unknown direction.", 18, 2u);
    return -1;
  }
  return result;
}

uint64_t sub_100610254(uint64_t result)
{
  uint64_t v1;

  if ((unint64_t)(result + 1) >= 3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 24, (uint64_t)"Unknown direction.", 18, 2u);
    result = -1;
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection) = result;
  return result;
}

BOOL sub_100610348(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  _BOOL8 v16;
  void *v18;
  _BYTE v19[24];
  uint64_t v20;
  CGRect v21;
  CGRect v22;

  sub_1004F370C(a1, (uint64_t)v19);
  if (!v20)
  {
    sub_1004D28EC((uint64_t)v19);
    return 0;
  }
  v2 = type metadata accessor for CRLTextSelectionRect();
  if ((swift_dynamicCast(&v18, v19, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
    return 0;
  v3 = v18;
  objc_msgSend(v1, "rect");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  objc_msgSend(v3, "rect");
  v22.origin.x = v12;
  v22.origin.y = v13;
  v22.size.width = v14;
  v22.size.height = v15;
  v21.origin.x = v5;
  v21.origin.y = v7;
  v21.size.width = v9;
  v21.size.height = v11;
  v16 = CGRectEqualToRect(v21, v22);

  return v16;
}

uint64_t sub_100610434(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  id v7;
  uint64_t v8;
  id v9;
  char v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v9 = a1;
  }
  v10 = a4(v12);

  sub_1004D28EC((uint64_t)v12);
  return v10 & 1;
}

uint64_t sub_100610534()
{
  char *v0;
  uint64_t ObjectType;
  Swift::String v2;
  void *object;
  Swift::String v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  Swift::String v10;
  unsigned int v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  __int128 v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _OWORD v25[2];
  __int128 v26;

  *(_QWORD *)&v25[0] = 0;
  *((_QWORD *)&v25[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(52);
  v26 = v25[0];
  ObjectType = swift_getObjectType(v0);
  v2._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x3A64616548202D20;
  v4._object = (void *)0xE900000000000020;
  String.append(_:)(v4);
  v5 = objc_msgSend(v0, "containsStart");
  v6 = v5 == 0;
  if (v5)
    v7 = 1702195828;
  else
    v7 = 0x65736C6166;
  if (v6)
    v8 = 0xE500000000000000;
  else
    v8 = 0xE400000000000000;
  v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease(v8);
  v10._countAndFlagsBits = 0x203A6C696154202CLL;
  v10._object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  v11 = objc_msgSend(v0, "containsEnd");
  v12 = v11 == 0;
  if (v11)
    v13 = 1702195828;
  else
    v13 = 0x65736C6166;
  if (v12)
    v14 = 0xE500000000000000;
  else
    v14 = 0xE400000000000000;
  v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 540945696;
  v16._object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  v17 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect + 16];
  v25[0] = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
  v25[1] = v17;
  type metadata accessor for CGRect(0);
  _print_unlocked<A, B>(_:_:)(v25, &v26, v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v19._object = (void *)0x8000000100FBAF70;
  v19._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v19);
  v20 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection];
  if (v20 == -1)
  {
    v21 = 0xE700000000000000;
    v22 = 0x6C61727574614ELL;
  }
  else if (v20)
  {
    if (v20 == 1)
    {
      v21 = 0xED00007466654C20;
      v22 = 0x6F74207468676952;
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 55, "Unknown writing direction.", 26, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"description", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 55, (uint64_t)"Unknown writing direction.", 26, 2u);
      v21 = 0xE800000000000000;
      v22 = 0x2E6E776F6E6B6E55;
    }
  }
  else
  {
    v21 = 0xED00007468676952;
    v22 = 0x206F74207466654CLL;
  }
  v23 = v21;
  String.append(_:)(*(Swift::String *)&v22);
  swift_bridgeObjectRelease(v21);
  return v26;
}

id sub_100610838()
{
  return sub_1004C3370(type metadata accessor for CRLTextSelectionRect);
}

uint64_t type metadata accessor for CRLTextSelectionRect()
{
  return objc_opt_self(_TtC8Freeform20CRLTextSelectionRect);
}

id sub_100610864(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(a1, "length"), 0);
  NSNotFound.getter(v1);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v4 = (objc_class *)type metadata accessor for CRLTextRange();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v7 = v2;
  *((_QWORD *)v7 + 1) = v2;
  *(_QWORD *)&v5[v6] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  v8 = objc_msgSendSuper2(&v10, "init");

  return v8;
}

uint64_t sub_10061093C(void *a1)
{
  char *v2;
  char *v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  objc_super v14;

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v3 = (char *)objc_msgSend(a1, "length");
  result = NSNotFound.getter(v3);
  if ((uint64_t)v3 >= result)
    v5 = 0;
  else
    v5 = v3;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v7 = &v5[v6];
  if (__OFADD__(v6, v5))
  {
    __break(1u);
  }
  else if ((uint64_t)v7 >= v6)
  {
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v9 = (objc_class *)type metadata accessor for CRLTextRange();
    v10 = (char *)objc_allocWithZone(v9);
    v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v12 = v6;
    *((_QWORD *)v12 + 1) = v7;
    *(_QWORD *)&v10[v11] = v8;
    v14.receiver = v10;
    v14.super_class = v9;
    v13 = objc_msgSendSuper2(&v14, "init");

    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

id sub_100610A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_super v15;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  v5 = NSNotFound.getter(a1);
  if (v4 == v5)
  {
    v6 = NSNotFound.getter(v5);
    v7 = 0;
    if (v4 < 0)
      return (id)v7;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
    v7 = 0;
    if (v4 < 0)
      return (id)v7;
  }
  if ((v6 & 0x8000000000000000) == 0)
  {
    if (v6 >= v4)
      v8 = v4;
    else
      v8 = v6;
    if (v6 > v4)
      v4 = v6;
    v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity);
    v10 = (objc_class *)type metadata accessor for CRLTextRange();
    v11 = (char *)objc_allocWithZone(v10);
    v12 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v13 = &v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v13 = v8;
    *((_QWORD *)v13 + 1) = v4;
    *(_QWORD *)&v11[v12] = v9;
    v15.receiver = v11;
    v15.super_class = v10;
    return objc_msgSendSuper2(&v15, "init");
  }
  return (id)v7;
}

id sub_100610B24()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  objc_super v9;

  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  NSNotFound.getter(v0);
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v3 = (objc_class *)type metadata accessor for CRLTextRange();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v6 = &v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v6 = v1;
  *((_QWORD *)v6 + 1) = v1;
  *(_QWORD *)&v4[v5] = v2;
  v9.receiver = v4;
  v9.super_class = v3;
  v7 = objc_msgSendSuper2(&v9, "init");

  return v7;
}

uint64_t sub_100610BF0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t result;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  double *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t RecordZone;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t RecordZoneChanges;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  __int128 v209;
  uint64_t v210;
  uint64_t v211;

  v208 = a2;
  v167 = type metadata accessor for CKSyncEngine.Event.DidSendChanges(0);
  v174 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v165 = (char *)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v166 = (char *)&v159 - v5;
  v178 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  v177 = *(_QWORD *)(v178 - 8);
  v6 = __chkstk_darwin(v178);
  v176 = (char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for CKSyncEngine.SendChangesContext(0, v6);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v169 = (char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for SendChangesContext(0);
  __chkstk_darwin(v170);
  v173 = (char *)&v159 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v175 = (uint64_t)&v159 - v12;
  v164 = type metadata accessor for CKSyncEngine.Event.WillSendChanges(0, v11);
  v168 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v162 = (char *)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v163 = (char *)&v159 - v16;
  RecordZoneChanges = type metadata accessor for CKSyncEngine.Event.DidFetchRecordZoneChanges(0, v15);
  v180 = *(_QWORD *)(RecordZoneChanges - 8);
  __chkstk_darwin(RecordZoneChanges);
  v179 = (char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v181 = (char *)&v159 - v20;
  v186 = type metadata accessor for CKSyncEngine.Event.WillFetchRecordZoneChanges(0, v19);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v183 = (char *)&v159 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v184 = (char *)&v159 - v23;
  v190 = type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges(0);
  v189 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v187 = (char *)&v159 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v188 = (char *)&v159 - v26;
  v27 = type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges(0);
  v193 = *(_QWORD *)(v27 - 8);
  v194 = v27;
  __chkstk_darwin(v27);
  v191 = (char *)&v159 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v192 = (char *)&v159 - v30;
  v31 = type metadata accessor for CKSyncEngine.Event.FetchedRecordZoneChanges(0);
  v197 = *(_QWORD *)(v31 - 8);
  v198 = v31;
  __chkstk_darwin(v31);
  v195 = (char *)&v159 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v196 = (char *)&v159 - v34;
  v35 = type metadata accessor for CKSyncEngine.Event.FetchedDatabaseChanges(0);
  v201 = *(_QWORD *)(v35 - 8);
  v202 = v35;
  __chkstk_darwin(v35);
  v199 = (char *)&v159 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v200 = (char *)&v159 - v38;
  v39 = type metadata accessor for CKSyncEngine.Event.AccountChange.ChangeType(0);
  v40 = __chkstk_darwin(v39);
  v205 = (char *)&v159 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for CKSyncEngine.Event.AccountChange(0, v40);
  v204 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v43 = (char *)&v159 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v203 = (char *)&v159 - v45;
  v207 = type metadata accessor for SyncEvent(0);
  __chkstk_darwin(v207);
  v47 = (char *)&v159 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for CKSyncEngine.Event.StateUpdate(0);
  v49 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v51 = (char *)&v159 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v52);
  v55 = (char *)&v159 - v54;
  v56 = type metadata accessor for CKSyncEngine.Event(0, v53);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = __chkstk_darwin(v56);
  v60 = (char *)&v159 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v57 + 16))(v60, a1, v56, v58);
  result = (*(uint64_t (**)(char *, uint64_t))(v57 + 88))(v60, v56);
  if ((_DWORD)result == enum case for CKSyncEngine.Event.stateUpdate(_:))
  {
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v55, v60, v48);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v55, v48);
    v210 = type metadata accessor for CKSyncEngine.State.Serialization(0);
    v211 = sub_1006126E4(&qword_1013E7D90, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
    sub_10050D1B0(&v209);
    CKSyncEngine.Event.StateUpdate.stateSerialization.getter();
    v62 = *(void (**)(char *, uint64_t))(v49 + 8);
    v62(v51, v48);
    sub_1004DB728(&v209, (uint64_t)v47);
    (*(void (**)(char *, uint64_t))(v57 + 8))(a1, v56);
    v62(v55, v48);
    v63 = 0;
LABEL_14:
    swift_storeEnumTagMultiPayload(v47, v207, v63);
    return sub_1004B84E0((uint64_t)v47, v208, type metadata accessor for SyncEvent);
  }
  v161 = a1;
  if ((_DWORD)result == enum case for CKSyncEngine.Event.accountChange(_:))
  {
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v64 = v203;
    v65 = v204;
    v66 = v206;
    (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v203, v60, v206);
    v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 16))(v43, v64, v66);
    v68 = (uint64_t)v205;
    CKSyncEngine.Event.AccountChange.changeType.getter(v67);
    v69 = sub_100614720(v68);
    v71 = v70;
    v73 = v72;
    v74 = *(void (**)(char *, uint64_t))(v65 + 8);
    v74(v43, v66);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v161, v56);
    v74(v64, v66);
    *(_QWORD *)v47 = v69;
    *((_QWORD *)v47 + 1) = v71;
    v63 = 1;
    v47[16] = v73;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.fetchedDatabaseChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v76 = v200;
    v75 = v201;
    v77 = v202;
    (*(void (**)(char *, char *, uint64_t))(v201 + 32))(v200, v60, v202);
    v78 = (uint64_t)v199;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v199, v76, v77);
    v79 = sub_100614868(v78);
    v81 = v80;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v161, v56);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
    *(_QWORD *)v47 = v79;
    *((_QWORD *)v47 + 1) = v81;
    v63 = 2;
    goto LABEL_14;
  }
  v82 = v56;
  if ((_DWORD)result == enum case for CKSyncEngine.Event.fetchedRecordZoneChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v84 = v196;
    v83 = v197;
    v85 = v198;
    (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v196, v60, v198);
    v86 = (uint64_t)v195;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v195, v84, v85);
    v87 = sub_100614C40(v86);
    v89 = v88;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v161, v56);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
    *(_QWORD *)v47 = v87;
    *((_QWORD *)v47 + 1) = v89;
    v63 = 3;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.sentDatabaseChanges(_:))
  {
    v90 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v91 = v193;
    v92 = v194;
    v93 = *(void (**)(char *, char *, uint64_t))(v193 + 32);
    v206 = v82;
    v94 = v192;
    v93(v192, v60, v194);
    v95 = (uint64_t)v191;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v191, v94, v92);
    v96 = sub_100614F28(v95);
    v98 = v97;
    v100 = v99;
    v102 = v101;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v161, v206);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v94, v92);
    *(_QWORD *)v47 = v96;
    *((_QWORD *)v47 + 1) = v98;
    v63 = 4;
LABEL_13:
    *((_QWORD *)v47 + 2) = v100;
    *((_QWORD *)v47 + 3) = v102;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.sentRecordZoneChanges(_:))
  {
    v160 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v103 = v189;
    v104 = v188;
    v105 = v190;
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v188, v60, v190);
    v106 = (uint64_t)v187;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v187, v104, v105);
    v107 = sub_100615114(v106);
    v109 = v108;
    v100 = v110;
    v102 = v111;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v161, v82);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
    *(_QWORD *)v47 = v107;
    *((_QWORD *)v47 + 1) = v109;
    v63 = 5;
    goto LABEL_13;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.willFetchChanges(_:))
  {
    v112 = *(void (**)(char *, uint64_t))(v57 + 8);
    v112(v60, v56);
    v112(v161, v56);
    v63 = 10;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.willFetchRecordZoneChanges(_:))
  {
    v113 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v114 = v185;
    v115 = v184;
    v116 = v186;
    (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v184, v60, v186);
    v117 = v183;
    v118 = (*(uint64_t (**)(char *, char *, uint64_t))(v114 + 16))(v183, v115, v116);
    RecordZone = CKSyncEngine.Event.WillFetchRecordZoneChanges.zoneID.getter(v118);
    v120 = *(void (**)(char *, uint64_t))(v114 + 8);
    v120(v117, v116);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v161, v56);
    v120(v115, v116);
    *(_QWORD *)v47 = RecordZone;
    v63 = 6;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.didFetchRecordZoneChanges(_:))
  {
    v121 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v56);
    v122 = v180;
    v123 = v181;
    v124 = RecordZoneChanges;
    (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v181, v60, RecordZoneChanges);
    v125 = v179;
    v126 = (*(uint64_t (**)(char *, char *, uint64_t))(v122 + 16))(v179, v123, v124);
    v127 = (id)CKSyncEngine.Event.DidFetchRecordZoneChanges.zoneID.getter(v126);
    v128 = CKSyncEngine.Event.DidFetchRecordZoneChanges.error.getter();
    v129 = *(void (**)(char *, uint64_t))(v122 + 8);
    v129(v125, v124);

    (*(void (**)(char *, uint64_t))(v121 + 8))(v161, v56);
    v129(v123, v124);
    *(_QWORD *)v47 = v127;
    *((_QWORD *)v47 + 1) = v128;
    v63 = 7;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.didFetchChanges(_:))
  {
    v130 = *(void (**)(char *, uint64_t))(v57 + 8);
    v130(v60, v56);
    v130(v161, v56);
    v63 = 11;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.willSendChanges(_:))
  {
    v131 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v82);
    v132 = v168;
    v133 = v163;
    v134 = v164;
    (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v163, v60, v164);
    v135 = v162;
    v136 = (*(uint64_t (**)(char *, char *, uint64_t))(v132 + 16))(v162, v133, v134);
    v137 = v169;
    v138 = CKSyncEngine.Event.WillSendChanges.context.getter(v136);
    v139 = v173;
    v140 = CKSyncEngine.SendChangesContext.reason.getter(v138);
    v141 = v176;
    CKSyncEngine.SendChangesContext.options.getter(v140);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v137, v172);
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(&v139[*(int *)(v170 + 20)], v141, v178);
    v142 = (uint64_t)v139;
    v143 = v175;
    sub_1004B84E0(v142, v175, type metadata accessor for SendChangesContext);
    v144 = *(void (**)(char *, uint64_t))(v168 + 8);
    v144(v135, v134);
    sub_1004B84E0(v143, (uint64_t)v47, type metadata accessor for SendChangesContext);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v161, v82);
    v144(v133, v134);
    v63 = 8;
    goto LABEL_14;
  }
  if ((_DWORD)result == enum case for CKSyncEngine.Event.didSendChanges(_:))
  {
    v145 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 96))(v60, v82);
    v146 = v174;
    v147 = v166;
    v148 = v167;
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v166, v60, v167);
    v149 = v165;
    v150 = (*(uint64_t (**)(char *, char *, uint64_t))(v146 + 16))(v165, v147, v148);
    v151 = v169;
    v152 = CKSyncEngine.Event.DidSendChanges.context.getter(v150);
    v153 = v173;
    v154 = CKSyncEngine.SendChangesContext.reason.getter(v152);
    v155 = v176;
    CKSyncEngine.SendChangesContext.options.getter(v154);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v151, v172);
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(&v153[*(int *)(v170 + 20)], v155, v178);
    v156 = (uint64_t)v153;
    v157 = v175;
    sub_1004B84E0(v156, v175, type metadata accessor for SendChangesContext);
    v158 = *(void (**)(char *, uint64_t))(v174 + 8);
    v158(v149, v148);
    sub_1004B84E0(v157, (uint64_t)v47, type metadata accessor for SendChangesContext);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v161, v82);
    v158(v147, v148);
    v63 = 9;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100611B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6[5] = a5;
  v6[6] = v5;
  v6[3] = a2;
  v6[4] = a4;
  v6[2] = a1;
  v7 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  v6[7] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[8] = v8;
  v6[9] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CKSyncEngine.SendChangesContext(0, v9);
  v6[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SendChangesContext(0);
  v6[13] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[14] = swift_task_alloc(v13);
  v6[15] = swift_task_alloc(v13);
  return swift_task_switch(sub_100611BC8, 0, 0);
}

uint64_t sub_100611BC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  int *v16;

  v1 = v0[14];
  v15 = v0[15];
  v2 = v0[12];
  v3 = v0[13];
  v4 = v0[10];
  v5 = v0[11];
  v7 = v0[8];
  v6 = v0[9];
  v8 = v0[7];
  v9 = v0[5];
  v10 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v2, v0[3], v4);
  v11 = CKSyncEngine.SendChangesContext.reason.getter(v10);
  CKSyncEngine.SendChangesContext.options.getter(v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v1 + *(int *)(v3 + 20), v6, v8);
  sub_1004B84E0(v1, v15, type metadata accessor for SendChangesContext);
  v12 = *(int **)(v9 + 24);
  v16 = (int *)((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc(v12[1]);
  v0[16] = v13;
  *v13 = v0;
  v13[1] = sub_100611CCC;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v16)(v0[2], v0[15], v0[4], v0[5]);
}

uint64_t sub_100611CCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(*v0 + 120);
  v2 = *(_QWORD *)(*v0 + 112);
  v3 = *(_QWORD *)(*v0 + 96);
  v4 = *(_QWORD *)(*v0 + 72);
  v6 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  sub_1004B84A4(v1, type metadata accessor for SendChangesContext);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_100611D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t ChangesOptions;
  uint64_t v8;
  uint64_t ChangesContext;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v6[5] = a5;
  v6[6] = v5;
  v6[3] = a2;
  v6[4] = a4;
  v6[2] = a1;
  ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions(0);
  v6[7] = ChangesOptions;
  v8 = *(_QWORD *)(ChangesOptions - 8);
  v6[8] = v8;
  v6[9] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  ChangesContext = type metadata accessor for CKSyncEngine.FetchChangesContext(0);
  v6[10] = ChangesContext;
  v10 = *(_QWORD *)(ChangesContext - 8);
  v6[11] = v10;
  v6[12] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FetchChangesContext(0);
  v6[13] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[14] = swift_task_alloc(v12);
  v6[15] = swift_task_alloc(v12);
  return swift_task_switch(sub_100611E1C, 0, 0);
}

uint64_t sub_100611E1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Changes;
  int *v12;
  _QWORD *v13;
  uint64_t v15;
  int *v16;

  v1 = v0[14];
  v15 = v0[15];
  v2 = v0[12];
  v3 = v0[13];
  v4 = v0[10];
  v5 = v0[11];
  v7 = v0[8];
  v6 = v0[9];
  v8 = v0[7];
  v9 = v0[5];
  v10 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v2, v0[3], v4);
  Changes = CKSyncEngine.FetchChangesContext.reason.getter(v10);
  CKSyncEngine.FetchChangesContext.options.getter(Changes);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v1 + *(int *)(v3 + 20), v6, v8);
  sub_1004B84E0(v1, v15, type metadata accessor for FetchChangesContext);
  v12 = *(int **)(v9 + 32);
  v16 = (int *)((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc(v12[1]);
  v0[16] = v13;
  *v13 = v0;
  v13[1] = sub_100611F20;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v16)(v0[2], v0[15], v0[4], v0[5]);
}

uint64_t sub_100611F20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(*v0 + 120);
  v2 = *(_QWORD *)(*v0 + 112);
  v3 = *(_QWORD *)(*v0 + 96);
  v4 = *(_QWORD *)(*v0 + 72);
  v6 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  sub_1004B84A4(v1, type metadata accessor for FetchChangesContext);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

void (*sub_100611FBC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CKSyncEngine.State.hasPendingUntrackedChanges.modify();
  return sub_100601B98;
}

uint64_t SendChangesContext.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10061208C(type metadata accessor for SendChangesContext, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions, a1);
}

uint64_t type metadata accessor for SendChangesContext(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E7E40, (uint64_t)&nominal type descriptor for SendChangesContext);
}

uint64_t _s8Freeform19FetchChangesContextV6reason8CloudKit12CKSyncEngineC10SyncReasonOvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CKSyncEngine.SyncReason(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FetchChangesContext.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10061208C(type metadata accessor for FetchChangesContext, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions, a1);
}

uint64_t sub_10061208C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 20);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t type metadata accessor for FetchChangesContext(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E7ED0, (uint64_t)&nominal type descriptor for FetchChangesContext);
}

uint64_t SyncEvent.StateUpdate.stateSerialization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004E90B0(v1, a1);
}

uint64_t SyncEvent.StateUpdate.init(stateSerialization:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004DB728(a1, a2);
}

uint64_t SyncEvent.StateUpdate.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for CKSyncEngine.State.Serialization(0);
  v8 = sub_1006126E4(&qword_1013E7D90, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
  sub_10050D1B0(&v6);
  CKSyncEngine.Event.StateUpdate.stateSerialization.getter();
  v4 = type metadata accessor for CKSyncEngine.Event.StateUpdate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_1004DB728(&v6, a2);
}

void *SyncEvent.AccountChange.changeType.getter(void *a1, void *a2, unsigned __int8 a3)
{
  sub_1006121CC(a1, a2, a3);
  return a1;
}

id sub_1006121CC(id result, void *a2, unsigned __int8 a3)
{
  id v3;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    v3 = result;
    result = a2;
  }
  return result;
}

void SyncEvent.FetchedRecordZoneChanges.Deletion.recordID.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.FetchedRecordZoneChanges.Deletion.recordID.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

BOOL static SyncEvent.FetchedDatabaseChanges.Deletion.Reason.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SyncEvent.FetchedDatabaseChanges.Deletion.Reason.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int SyncEvent.FetchedDatabaseChanges.Deletion.Reason.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

uint64_t SyncEvent.FetchedDatabaseChanges.Deletion.reason.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncEvent.FetchedDatabaseChanges.Deletion.reason.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t SyncEvent.FetchedDatabaseChanges.modifications.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*v1);
  *v1 = a1;
  return result;
}

uint64_t SyncEvent.FetchedRecordZoneChanges.deletions.getter(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

uint64_t SyncEvent.FetchedRecordZoneChanges.Deletion.recordType.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain(a3);
  return a2;
}

uint64_t SyncEvent.FetchedRecordZoneChanges.Deletion.recordType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t SyncEvent.SentRecordZoneChanges.deletedRecordIDs.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRetain(a3);
}

uint64_t SyncEvent.SentRecordZoneChanges.failedRecordDeletes.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_bridgeObjectRetain(a4);
}

uint64_t SyncEvent.SentDatabaseChanges.failedZoneDeletes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.SentRecordZoneChanges.failedRecordDeletes.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

void *SyncEvent.DidFetchRecordZoneChanges.error.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

void SyncEvent.DidFetchRecordZoneChanges.error.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t SyncEvent.WillSendChanges.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004B8460(v1, a1, type metadata accessor for SendChangesContext);
}

void SyncEvent.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for SyncEvent(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v4, v5);
  v6 = (char *)sub_1006124BC + 4 * byte_100EFEA90[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1006124BC()
{
  uint64_t v0;

  sub_1004B84A4(v0, type metadata accessor for SyncEvent);
  return 0x6470556574617453;
}

uint64_t type metadata accessor for SyncEvent(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E7F78, (uint64_t)&nominal type descriptor for SyncEvent);
}

_UNKNOWN **sub_10061268C()
{
  return &protocol witness table for CKSyncEngine.State;
}

uint64_t sub_100612698(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1006126E4(&qword_1013E7DD0, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
  result = sub_1006126E4(&qword_1013E7DD8, (uint64_t)&protocol conformance descriptor for CKSyncEngine.State.Serialization);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1006126E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CKSyncEngine.State.Serialization(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100612728()
{
  unint64_t result;

  result = qword_1013E7DE0;
  if (!qword_1013E7DE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SyncEvent.FetchedDatabaseChanges.Deletion.Reason, &type metadata for SyncEvent.FetchedDatabaseChanges.Deletion.Reason);
    atomic_store(result, (unint64_t *)&qword_1013E7DE0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SendChangesContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100612800(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t destroy for SendChangesContext(uint64_t a1, uint64_t a2)
{
  return sub_1006128B8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t initializeWithCopy for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10061292C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t assignWithCopy for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006129B8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t initializeWithTake for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612A44(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t assignWithTake for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612AD0(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t getEnumTagSinglePayload for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006127C4);
}

uint64_t sub_1006127C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612B68(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t storeEnumTagSinglePayload for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006127DC);
}

uint64_t sub_1006127DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100612BF8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t sub_1006127E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612C8C(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchChangesContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100612800(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t *sub_100612800(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  int v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v14);
  }
  else
  {
    v9 = type metadata accessor for CKSyncEngine.SyncReason(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = a4(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for FetchChangesContext(uint64_t a1, uint64_t a2)
{
  return sub_1006128B8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006128B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10061292C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_10061292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006129B8(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006129B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(a1, a2, v8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612A44(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_100612A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612AD0(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_100612AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(a1, a2, v8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100612B5C);
}

uint64_t sub_100612B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612B68(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_100612B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for CKSyncEngine.SyncReason(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v12 = a1;
  }
  else
  {
    v10 = a4(0);
    v12 = a1 + *(int *)(a3 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  }
  return v11(v12, a2, v10);
}

uint64_t storeEnumTagSinglePayload for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100612BEC);
}

uint64_t sub_100612BEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100612BF8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_100612BF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v10 = type metadata accessor for CKSyncEngine.SyncReason(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    v12 = v10;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v14 = a1;
  }
  else
  {
    v12 = a5(0);
    v14 = a1 + *(int *)(a4 + 20);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  }
  return v13(v14, a2, a2, v12);
}

uint64_t sub_100612C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100612C8C(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_100612C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[2];

  result = type metadata accessor for CKSyncEngine.SyncReason(319);
  if (v7 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    result = a4(319);
    if (v8 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v9, a1 + 16);
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for SyncEvent(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v8;
  char *v9;
  char *v11;
  void *v12;
  unsigned __int8 v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned __int8 *v40;
  uint64_t v41;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v9);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v8;
        (**(void (***)(void *, const void *))(v8 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v11 = *(char **)a2;
        v12 = (void *)*((_QWORD *)a2 + 1);
        v13 = a2[16];
        sub_1006121CC(v11, v12, v13);
        *(_QWORD *)a1 = v11;
        *((_QWORD *)a1 + 1) = v12;
        a1[16] = v13;
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v14 = *(char **)a2;
        v15 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = v14;
        *((_QWORD *)a1 + 1) = v15;
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v15);
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v16 = *(char **)a2;
        v17 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = v16;
        *((_QWORD *)a1 + 1) = v17;
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v17);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v18 = *(char **)a2;
        v19 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v19;
        v21 = *((_QWORD *)a2 + 2);
        v20 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v21;
        *((_QWORD *)a1 + 3) = v20;
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRetain(v20);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v22 = *(char **)a2;
        v23 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v23;
        v25 = *((_QWORD *)a2 + 2);
        v24 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v25;
        *((_QWORD *)a1 + 3) = v24;
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v25);
        swift_bridgeObjectRetain(v24);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v26 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v27 = v26;
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      case 7u:
        v28 = *(char **)a2;
        v29 = (void *)*((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = v28;
        *((_QWORD *)a1 + 1) = v29;
        v30 = v28;
        v31 = v29;
        swift_storeEnumTagMultiPayload(a1, a3, 7);
        break;
      case 8u:
        v32 = type metadata accessor for CKSyncEngine.SyncReason(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
        v33 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        swift_storeEnumTagMultiPayload(a1, a3, 8);
        break;
      case 9u:
        v37 = type metadata accessor for CKSyncEngine.SyncReason(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
        v38 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        swift_storeEnumTagMultiPayload(a1, a3, 9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for SyncEvent(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
      break;
    case 1u:
      sub_100613114((void *)*a1, (void *)a1[1], *((_BYTE *)a1 + 16));
      break;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease(*a1);
      v3 = a1[1];
      goto LABEL_4;
    case 4u:
    case 5u:
      swift_bridgeObjectRelease(*a1);
      swift_bridgeObjectRelease(a1[1]);
      swift_bridgeObjectRelease(a1[2]);
      v3 = a1[3];
LABEL_4:
      swift_bridgeObjectRelease(v3);
      break;
    case 6u:

      break;
    case 7u:

      break;
    case 8u:
    case 9u:
      v4 = type metadata accessor for CKSyncEngine.SyncReason(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = (char *)a1 + *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      v6 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return;
  }
}

void sub_100613114(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2)
      return;

    a1 = a2;
  }

}

char *initializeWithCopy for SyncEvent(char *a1, void **a2, uint64_t a3)
{
  __int128 v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      v7 = a1;
      v8 = a3;
      v9 = 0;
      goto LABEL_13;
    case 1u:
      v10 = *a2;
      v11 = a2[1];
      v12 = *((_BYTE *)a2 + 16);
      sub_1006121CC(v10, v11, v12);
      *(_QWORD *)a1 = v10;
      *((_QWORD *)a1 + 1) = v11;
      a1[16] = v12;
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_13;
    case 2u:
      v13 = *a2;
      v14 = a2[1];
      *(_QWORD *)a1 = v13;
      *((_QWORD *)a1 + 1) = v14;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v14);
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_13;
    case 3u:
      v15 = *a2;
      v16 = a2[1];
      *(_QWORD *)a1 = v15;
      *((_QWORD *)a1 + 1) = v16;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v16);
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_13;
    case 4u:
      v17 = *a2;
      v18 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v18;
      v20 = a2[2];
      v19 = a2[3];
      *((_QWORD *)a1 + 2) = v20;
      *((_QWORD *)a1 + 3) = v19;
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v19);
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_13;
    case 5u:
      v21 = *a2;
      v22 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v22;
      v24 = a2[2];
      v23 = a2[3];
      *((_QWORD *)a1 + 2) = v24;
      *((_QWORD *)a1 + 3) = v23;
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v23);
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_13;
    case 6u:
      v25 = *a2;
      *(_QWORD *)a1 = *a2;
      v26 = v25;
      v7 = a1;
      v8 = a3;
      v9 = 6;
      goto LABEL_13;
    case 7u:
      v27 = *a2;
      v28 = a2[1];
      *(_QWORD *)a1 = v27;
      *((_QWORD *)a1 + 1) = v28;
      v29 = v27;
      v30 = v28;
      v7 = a1;
      v8 = a3;
      v9 = 7;
      goto LABEL_13;
    case 8u:
      v36 = type metadata accessor for CKSyncEngine.SyncReason(0);
      (*(void (**)(char *, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
      v37 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      v38 = &a1[v37];
      v39 = (char *)a2 + v37;
      v40 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v7 = a1;
      v8 = a3;
      v9 = 8;
      goto LABEL_13;
    case 9u:
      v31 = type metadata accessor for CKSyncEngine.SyncReason(0);
      (*(void (**)(char *, void **, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
      v32 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      v33 = &a1[v32];
      v34 = (char *)a2 + v32;
      v35 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      v7 = a1;
      v8 = a3;
      v9 = 9;
LABEL_13:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for SyncEvent(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  if (a1 != (_QWORD *)a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for SyncEvent);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = *((_QWORD *)a2 + 3);
        a1[3] = v6;
        a1[4] = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
        v7 = a1;
        v8 = a3;
        v9 = 0;
        goto LABEL_14;
      case 1u:
        v10 = *(void **)a2;
        v11 = (void *)*((_QWORD *)a2 + 1);
        v12 = a2[16];
        sub_1006121CC(v10, v11, v12);
        *a1 = v10;
        a1[1] = v11;
        *((_BYTE *)a1 + 16) = v12;
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_14;
      case 2u:
        v13 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v14 = *((_QWORD *)a2 + 1);
        a1[1] = v14;
        swift_bridgeObjectRetain(v13);
        swift_bridgeObjectRetain(v14);
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_14;
      case 3u:
        v15 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v16 = *((_QWORD *)a2 + 1);
        a1[1] = v16;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v16);
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_14;
      case 4u:
        v17 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v18 = *((_QWORD *)a2 + 1);
        a1[1] = v18;
        v19 = *((_QWORD *)a2 + 2);
        a1[2] = v19;
        v20 = *((_QWORD *)a2 + 3);
        a1[3] = v20;
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v20);
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_14;
      case 5u:
        v21 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v22 = *((_QWORD *)a2 + 1);
        a1[1] = v22;
        v23 = *((_QWORD *)a2 + 2);
        a1[2] = v23;
        v24 = *((_QWORD *)a2 + 3);
        a1[3] = v24;
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v24);
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_14;
      case 6u:
        v25 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v26 = v25;
        v7 = a1;
        v8 = a3;
        v9 = 6;
        goto LABEL_14;
      case 7u:
        v27 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v28 = (void *)*((_QWORD *)a2 + 1);
        a1[1] = v28;
        v29 = v27;
        v30 = v28;
        v7 = a1;
        v8 = a3;
        v9 = 7;
        goto LABEL_14;
      case 8u:
        v36 = type metadata accessor for CKSyncEngine.SyncReason(0);
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
        v37 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
        v38 = (char *)a1 + v37;
        v39 = &a2[v37];
        v40 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
        v7 = a1;
        v8 = a3;
        v9 = 8;
        goto LABEL_14;
      case 9u:
        v31 = type metadata accessor for CKSyncEngine.SyncReason(0);
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
        v32 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = &a2[v32];
        v35 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        v7 = a1;
        v8 = a3;
        v9 = 9;
LABEL_14:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SyncEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 9)
  {
    v12 = type metadata accessor for CKSyncEngine.SyncReason(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v13 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload(a1, a3, 9);
  }
  else if (EnumCaseMultiPayload == 8)
  {
    v7 = type metadata accessor for CKSyncEngine.SyncReason(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, a3, 8);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for SyncEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for SyncEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 9)
    {
      v12 = type metadata accessor for CKSyncEngine.SyncReason(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload(a1, a3, 9);
    }
    else if (EnumCaseMultiPayload == 8)
    {
      v7 = type metadata accessor for CKSyncEngine.SyncReason(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 8);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100613960(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];
  uint64_t v5;
  uint64_t v6;

  v4[0] = "(";
  v4[1] = &unk_100EFED48;
  v4[2] = &unk_100EFED60;
  v4[3] = &unk_100EFED60;
  v4[4] = &unk_100EFED78;
  v4[5] = &unk_100EFED78;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = &unk_100EFED60;
  result = type metadata accessor for SendChangesContext(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    swift_initEnumMetadataMultiPayload(a1, 256, 10, v4);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.StateUpdate()
{
  return &type metadata for SyncEvent.StateUpdate;
}

ValueMetadata *type metadata accessor for SyncEvent.AccountChange()
{
  return &type metadata for SyncEvent.AccountChange;
}

void destroy for SyncEvent.AccountChange.ChangeType(uint64_t a1)
{
  sub_100613114(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8Freeform9SyncEventO13AccountChangeV10ChangeTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1006121CC(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s8Freeform9SyncEventO13AccountChangeV10ChangeTypeOwca_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1006121CC(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100613114(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO13AccountChangeV10ChangeTypeOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100613114(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.AccountChange.ChangeType()
{
  return &type metadata for SyncEvent.AccountChange.ChangeType;
}

uint64_t destroy for FixupBookkeepingData(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges.Modification()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges.Modification;
}

uint64_t initializeBufferWithCopyOfBuffer for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges.Deletion()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges.Deletion;
}

uint64_t storeEnumTagSinglePayload for SyncEvent.FetchedDatabaseChanges.Deletion.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100613D2C + 4 * byte_100EFEAC9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100613D60 + 4 * byte_100EFEAC4[v4]))();
}

uint64_t sub_100613D60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100613D68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100613D70);
  return result;
}

uint64_t sub_100613D7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100613D84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100613D88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100613D90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges.Deletion.Reason()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges.Deletion.Reason;
}

uint64_t *_s8Freeform20FixupBookkeepingDataVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for FixupBookkeepingData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for FixupBookkeepingData(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedRecordZoneChanges()
{
  return &type metadata for SyncEvent.FetchedRecordZoneChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedRecordZoneChanges.Modification()
{
  return &type metadata for SyncEvent.FetchedRecordZoneChanges.Modification;
}

uint64_t destroy for SyncEvent.FetchedRecordZoneChanges.Deletion(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s8Freeform9SyncEventO24FetchedRecordZoneChangesV8DeletionVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for SyncEvent.FetchedRecordZoneChanges.Deletion(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for SyncEvent.FetchedRecordZoneChanges.Deletion(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedRecordZoneChanges.Deletion()
{
  return &type metadata for SyncEvent.FetchedRecordZoneChanges.Deletion;
}

ValueMetadata *type metadata accessor for SyncEvent.SentDatabaseChanges()
{
  return &type metadata for SyncEvent.SentDatabaseChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.SentDatabaseChanges.FailedZoneSave()
{
  return &type metadata for SyncEvent.SentDatabaseChanges.FailedZoneSave;
}

uint64_t destroy for CRLTransactionChangeSummary(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t *initializeWithCopy for CRLTransactionChangeSummary(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for CRLTransactionChangeSummary(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

_QWORD *assignWithTake for CRLTransactionChangeSummary(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLTransactionChangeSummary(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLTransactionChangeSummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.SentRecordZoneChanges()
{
  return &type metadata for SyncEvent.SentRecordZoneChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.SentRecordZoneChanges.FailedRecordSave()
{
  return &type metadata for SyncEvent.SentRecordZoneChanges.FailedRecordSave;
}

ValueMetadata *type metadata accessor for SyncEvent.WillFetchChanges()
{
  return &type metadata for SyncEvent.WillFetchChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.WillFetchRecordZoneChanges()
{
  return &type metadata for SyncEvent.WillFetchRecordZoneChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.DidFetchChanges()
{
  return &type metadata for SyncEvent.DidFetchChanges;
}

uint64_t assignWithCopy for SyncEvent.DidFetchRecordZoneChanges(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.DidFetchRecordZoneChanges()
{
  return &type metadata for SyncEvent.DidFetchRecordZoneChanges;
}

uint64_t getEnumTagSinglePayload for SyncEvent.WillSendChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006142B8);
}

uint64_t storeEnumTagSinglePayload for SyncEvent.WillSendChanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006142C8);
}

uint64_t type metadata accessor for SyncEvent.WillSendChanges(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E8008, (uint64_t)&nominal type descriptor for SyncEvent.WillSendChanges);
}

uint64_t *_s8Freeform9SyncEventO15WillSendChangesVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for SendChangesContext(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for CKSyncEngine.SyncReason(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  v4 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for CKSyncEngine.SyncReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for CKSyncEngine.SendChangesOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncEvent.DidSendChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100614614);
}

uint64_t sub_100614618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SendChangesContext(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SyncEvent.DidSendChanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100614660);
}

uint64_t sub_100614664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SendChangesContext(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SyncEvent.DidSendChanges(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E8098, (uint64_t)&nominal type descriptor for SyncEvent.DidSendChanges);
}

uint64_t sub_1006146B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for SendChangesContext(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100614720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  v2 = type metadata accessor for CKSyncEngine.Event.AccountChange.ChangeType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if ((_DWORD)result == enum case for CKSyncEngine.Event.AccountChange.ChangeType.signIn(_:)
    || (_DWORD)result == enum case for CKSyncEngine.Event.AccountChange.ChangeType.signOut(_:)
    || (_DWORD)result == enum case for CKSyncEngine.Event.AccountChange.ChangeType.switchAccounts(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    return *(_QWORD *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100614868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  __n128 v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t result;
  char v40;
  double *v41;
  unint64_t v42;
  unint64_t v43;
  double *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  double *v60;

  v2 = type metadata accessor for CKDatabase.DatabaseChange.Deletion.Reason(0);
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  __chkstk_darwin(v2);
  v53 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v57 = (char *)&v46 - v6;
  v56 = type metadata accessor for CKDatabase.DatabaseChange.Deletion(0, v5);
  v54 = *(_QWORD *)(v56 - 8);
  v7 = __chkstk_darwin(v56);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CKDatabase.DatabaseChange.Modification(0, v7);
  v55 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = CKSyncEngine.Event.FetchedDatabaseChanges.modifications.getter(v11);
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  v49 = a1;
  if (v16)
  {
    v60 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    v17 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v52 = v15;
    v18 = v15 + v17;
    v19 = *(_QWORD *)(v55 + 72);
    v20 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v55 + 16);
    do
    {
      v21 = v20(v13, v18, v10);
      v22 = CKDatabase.DatabaseChange.Modification.zoneID.getter(v21);
      v23 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v13, v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v24 = *((_QWORD *)v60 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
      v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
      specialized ContiguousArray._endMutation()(v25);
      v18 += v19;
      --v16;
    }
    while (v16);
    v26 = v60;
    v27 = swift_bridgeObjectRelease(v52);
    a1 = v49;
  }
  else
  {
    v27 = swift_bridgeObjectRelease(v14);
    v26 = _swiftEmptyArrayStorage;
  }
  v28 = CKSyncEngine.Event.FetchedDatabaseChanges.deletions.getter(v27);
  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
  {
LABEL_20:
    v45 = type metadata accessor for CKSyncEngine.Event.FetchedDatabaseChanges(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(a1, v45);
    swift_bridgeObjectRelease(v28);
    return (uint64_t)v26;
  }
  v48 = v26;
  v60 = _swiftEmptyArrayStorage;
  sub_100600AA4(0, v29, 0);
  v30 = *(unsigned __int8 *)(v54 + 80);
  v47 = v28;
  v31 = v28 + ((v30 + 32) & ~v30);
  v52 = *(_QWORD *)(v54 + 72);
  v55 = *(_QWORD *)(v54 + 16);
  v32 = enum case for CKDatabase.DatabaseChange.Deletion.Reason.deleted(_:);
  v51 = enum case for CKDatabase.DatabaseChange.Deletion.Reason.purged(_:);
  v50 = enum case for CKDatabase.DatabaseChange.Deletion.Reason.encryptedDataReset(_:);
  while (1)
  {
    v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v55)(v9, v31, v56);
    v34 = CKDatabase.DatabaseChange.Deletion.zoneID.getter(v33);
    v35 = v57;
    CKDatabase.DatabaseChange.Deletion.reason.getter();
    v37 = v58;
    v36 = v59;
    v38 = v53;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v53, v35, v59);
    result = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v38, v36);
    if ((_DWORD)result != v32)
      break;
    v40 = 0;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v56);
    v41 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
    {
      sub_100600AA4(0, *((_QWORD *)v41 + 2) + 1, 1);
      v41 = v60;
    }
    v43 = *((_QWORD *)v41 + 2);
    v42 = *((_QWORD *)v41 + 3);
    if (v43 >= v42 >> 1)
    {
      sub_100600AA4(v42 > 1, v43 + 1, 1);
      v41 = v60;
    }
    *((_QWORD *)v41 + 2) = v43 + 1;
    v44 = &v41[2 * v43];
    *((_QWORD *)v44 + 4) = v34;
    *((_BYTE *)v44 + 40) = v40;
    v31 += v52;
    if (!--v29)
    {
      v26 = v48;
      a1 = v49;
      v28 = v47;
      goto LABEL_20;
    }
  }
  if ((_DWORD)result == v51)
  {
    v40 = 1;
    goto LABEL_14;
  }
  if ((_DWORD)result == v50)
  {
    v40 = 2;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

double *sub_100614C40(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  __n128 v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  unint64_t v35;
  unint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;

  v44 = type metadata accessor for CKDatabase.RecordZoneChange.Deletion(0);
  v46 = *(_QWORD *)(v44 - 8);
  v2 = __chkstk_darwin(v44);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CKDatabase.RecordZoneChange.Modification(0, v2);
  v45 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = CKSyncEngine.Event.FetchedRecordZoneChanges.modifications.getter(v6);
  v10 = v9;
  v11 = *(_QWORD *)(v9 + 16);
  v43 = a1;
  if (v11)
  {
    v47 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v11);
    v12 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v42 = (double *)v10;
    v13 = v10 + v12;
    v14 = *(_QWORD *)(v45 + 72);
    v15 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v45 + 16);
    do
    {
      v16 = v15(v8, v13, v5);
      v17 = CKDatabase.RecordZoneChange.Modification.record.getter(v16);
      v18 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v8, v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v19 = *((_QWORD *)v47 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized ContiguousArray._endMutation()(v20);
      v13 += v14;
      --v11;
    }
    while (v11);
    v21 = v47;
    v22 = swift_bridgeObjectRelease(v42);
    a1 = v43;
  }
  else
  {
    v22 = swift_bridgeObjectRelease(v9);
    v21 = _swiftEmptyArrayStorage;
  }
  v23 = CKSyncEngine.Event.FetchedRecordZoneChanges.deletions.getter(v22);
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v42 = v21;
    v47 = _swiftEmptyArrayStorage;
    sub_100600AC0(0, v24, 0);
    v25 = *(unsigned __int8 *)(v46 + 80);
    v41 = v23;
    v26 = v23 + ((v25 + 32) & ~v25);
    v45 = *(_QWORD *)(v46 + 72);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16);
    do
    {
      v28 = v44;
      v29 = v27(v4, v26, v44);
      v30 = CKDatabase.RecordZoneChange.Deletion.recordID.getter(v29);
      v31 = CKDatabase.RecordZoneChange.Deletion.recordType.getter();
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v4, v28);
      v34 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
      {
        sub_100600AC0(0, *((_QWORD *)v34 + 2) + 1, 1);
        v34 = v47;
      }
      v36 = *((_QWORD *)v34 + 2);
      v35 = *((_QWORD *)v34 + 3);
      if (v36 >= v35 >> 1)
      {
        sub_100600AC0(v35 > 1, v36 + 1, 1);
        v34 = v47;
      }
      *((_QWORD *)v34 + 2) = v36 + 1;
      v37 = &v34[3 * v36];
      *((_QWORD *)v37 + 4) = v30;
      *((_QWORD *)v37 + 5) = v31;
      *((_QWORD *)v37 + 6) = v33;
      v26 += v45;
      --v24;
    }
    while (v24);
    v21 = v42;
    a1 = v43;
    v23 = v41;
  }
  v38 = type metadata accessor for CKSyncEngine.Event.FetchedRecordZoneChanges(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(a1, v38);
  swift_bridgeObjectRelease(v23);
  return v21;
}

uint64_t sub_100614F28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  double *v31;

  v2 = type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = CKSyncEngine.Event.SentDatabaseChanges.savedZones.getter(v4);
  v8 = CKSyncEngine.Event.SentDatabaseChanges.failedZoneSaves.getter();
  v9 = v8;
  v10 = *(_QWORD *)(v8 + 16);
  if (v10)
  {
    v26 = v7;
    v27 = a1;
    v31 = _swiftEmptyArrayStorage;
    sub_100600ADC(0, v10, 0);
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v25 = v9;
    v12 = v9 + v11;
    v13 = *(_QWORD *)(v3 + 72);
    v28 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v29 = v13;
    v30 = v3;
    do
    {
      v14 = v28(v6, v12, v2);
      v15 = CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave.zone.getter(v14);
      v16 = CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave.error.getter();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v17 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
      {
        sub_100600ADC(0, *((_QWORD *)v17 + 2) + 1, 1);
        v17 = v31;
      }
      v19 = *((_QWORD *)v17 + 2);
      v18 = *((_QWORD *)v17 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_100600ADC(v18 > 1, v19 + 1, 1);
        v17 = v31;
      }
      *((_QWORD *)v17 + 2) = v19 + 1;
      v20 = &v17[2 * v19];
      *((_QWORD *)v20 + 4) = v15;
      *((_QWORD *)v20 + 5) = v16;
      v3 = v30;
      v12 += v29;
      --v10;
    }
    while (v10);
    v21 = swift_bridgeObjectRelease(v25);
    v7 = v26;
    a1 = v27;
  }
  else
  {
    v21 = swift_bridgeObjectRelease(v8);
  }
  CKSyncEngine.Event.SentDatabaseChanges.deletedZoneIDs.getter(v21);
  CKSyncEngine.Event.SentDatabaseChanges.failedZoneDeletes.getter();
  v22 = type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
  return v7;
}

uint64_t sub_100615114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  double *v31;

  v2 = type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = CKSyncEngine.Event.SentRecordZoneChanges.savedRecords.getter(v4);
  v8 = CKSyncEngine.Event.SentRecordZoneChanges.failedRecordSaves.getter();
  v9 = v8;
  v10 = *(_QWORD *)(v8 + 16);
  if (v10)
  {
    v26 = v7;
    v27 = a1;
    v31 = _swiftEmptyArrayStorage;
    sub_100600AF8(0, v10, 0);
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v25 = v9;
    v12 = v9 + v11;
    v13 = *(_QWORD *)(v3 + 72);
    v28 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v29 = v13;
    v30 = v3;
    do
    {
      v14 = v28(v6, v12, v2);
      v15 = CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave.record.getter(v14);
      v16 = CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave.error.getter();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v17 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
      {
        sub_100600AF8(0, *((_QWORD *)v17 + 2) + 1, 1);
        v17 = v31;
      }
      v19 = *((_QWORD *)v17 + 2);
      v18 = *((_QWORD *)v17 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_100600AF8(v18 > 1, v19 + 1, 1);
        v17 = v31;
      }
      *((_QWORD *)v17 + 2) = v19 + 1;
      v20 = &v17[2 * v19];
      *((_QWORD *)v20 + 4) = v15;
      *((_QWORD *)v20 + 5) = v16;
      v3 = v30;
      v12 += v29;
      --v10;
    }
    while (v10);
    v21 = swift_bridgeObjectRelease(v25);
    v7 = v26;
    a1 = v27;
  }
  else
  {
    v21 = swift_bridgeObjectRelease(v8);
  }
  CKSyncEngine.Event.SentRecordZoneChanges.deletedRecordIDs.getter(v21);
  CKSyncEngine.Event.SentRecordZoneChanges.failedRecordDeletes.getter();
  v22 = type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
  return v7;
}

uint64_t sub_100615300(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a3;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a2;
  v6 = type metadata accessor for CKSyncEngine.Event(0, a4);
  v5[6] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[7] = v7;
  v5[8] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SyncEvent(0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100615384, 0, 0);
}

uint64_t sub_100615384()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (char *)v0[8];
  v2 = v0[9];
  v3 = v0[4];
  (*(void (**)(char *, _QWORD, _QWORD))(v0[7] + 16))(v1, v0[2], v0[6]);
  sub_100610BF0(v1, v2);
  v4 = *(int **)(v3 + 16);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_100615418;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v7)(v0[9], v0[3], v0[4]);
}

uint64_t sub_100615418()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 72);
  v2 = *(_QWORD *)(*v0 + 64);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  sub_1004B84A4(v1, type metadata accessor for SyncEvent);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1006154B0(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 104);
}

uint64_t sub_1006154F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CRLTree(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLTree);
}

uint64_t sub_100615524(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 88));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[3] = "\b";
      result = swift_initClassMetadata2(a1, 0, 4, v5, a1 + 104);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t *sub_1006155CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  v3 = type metadata accessor for Optional(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
  swift_weakDestroy((char *)v0 + *(_QWORD *)(*v0 + 128));
  return v0;
}

uint64_t sub_100615658()
{
  uint64_t v0;

  sub_1006155CC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLTreeNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLTreeNode);
}

uint64_t sub_100615688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 80) - 8);
  v35 = a3;
  v36 = v6;
  __chkstk_darwin();
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v9;
  v10 = type metadata accessor for Optional(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v32 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v10, v10, 0, 0);
  v15 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  v17 = (char *)&v32 - v16;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104), a2 + *(_QWORD *)(*(_QWORD *)a2 + 104)) & 1) != 0)
  {
    v33 = v13;
    v34 = v15;
    v32 = v8;
    v18 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 112);
    v19 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 112);
    v20 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v21(v17, v18, v10);
    v21(v20, v19, v10);
    v22 = v36;
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    v24 = v11;
    if (v23(v17, 1, v37) == 1)
    {
      if (v23(v20, 1, v37) == 1)
      {
        v25 = 1;
      }
      else
      {
        v24 = v34;
        v10 = TupleTypeMetadata2;
        v25 = 0;
      }
    }
    else
    {
      v26 = v33;
      v21(v33, (uint64_t)v17, v10);
      if (v23(v20, 1, v37) == 1)
      {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v37);
        v25 = 0;
        v24 = v34;
        v10 = TupleTypeMetadata2;
      }
      else
      {
        v27 = v32;
        v28 = v37;
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v32, v20, v37);
        v25 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v27);
        v29 = v26;
        v30 = *(void (**)(char *, uint64_t))(v22 + 8);
        v30(v27, v28);
        v30(v29, v28);
      }
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v10);
  }
  else
  {
    v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_100615900(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100615688(*a1, *a2, *(_QWORD *)(a4 - 8));
}

void sub_100615910(uint64_t a1, uint64_t a2, char a3, objc_class *a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v31[24];
  uint64_t v32;

  v9 = v8;
  v13 = *(_QWORD *)(a1 + 16);
  v32 = (uint64_t)_swiftEmptyArrayStorage;
  v14 = swift_retain_n(v13, 2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    goto LABEL_36;
  while (1)
  {
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
    specialized Array._endMutation()(v17);
    v18 = v32;
    if (!((unint64_t)v32 >> 62))
      break;
    if (v32 < 0)
      v25 = v32;
    else
      v25 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v16 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
    if (!v16)
      goto LABEL_41;
    while (1)
    {
LABEL_4:
      v19 = (unint64_t)v18 >> 62;
      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v16 = v18;
        else
          v16 = v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v26 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        v15 = v26;
        if (!v26)
          goto LABEL_33;
        swift_bridgeObjectRetain(v18);
        v16 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        if (!v16)
          goto LABEL_34;
      }
      else
      {
        v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v15)
          goto LABEL_33;
      }
      if ((v18 & 0xC000000000000001) == 0)
        break;
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
      if (!v19)
      {
LABEL_9:
        v15 = v18 & 0xFFFFFFFFFFFFF8;
        if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_35;
        goto LABEL_10;
      }
LABEL_21:
      if (v18 < 0)
        v21 = v18;
      else
        v21 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease();
      if (!v22)
        goto LABEL_35;
LABEL_10:
      sub_100CFEBA8(0, 1);
      sub_100ACAC74(v16, a2, a3 & 1, a4, a5, a6, a7, a8);
      if (v9)
      {
        swift_release(v13);
        v24 = v16;
        goto LABEL_42;
      }
      swift_beginAccess(v16 + 48, v31, 0, 0);
      swift_bridgeObjectRetain(*(_QWORD *)(v16 + 48));
      sub_100620C1C(v20);
      swift_release(v16);
      v18 = v32;
      if ((unint64_t)v32 >> 62)
      {
        if (v32 < 0)
          v23 = v32;
        else
          v23 = v32 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v32);
        v16 = _CocoaArrayWrapper.endIndex.getter(v23);
        swift_bridgeObjectRelease();
        if (!v16)
          goto LABEL_41;
      }
      else
      {
        v16 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v16)
          goto LABEL_41;
      }
    }
    v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v16 = *(_QWORD *)(v18 + 32);
      swift_retain(v16);
      if (!v19)
        goto LABEL_9;
      goto LABEL_21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  }
  if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
LABEL_41:
  v24 = v13;
LABEL_42:
  swift_release(v24);
  swift_bridgeObjectRelease();
}

void sub_100615BD4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, char a9, char *a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v33[24];
  uint64_t v34;

  v11 = v10;
  v13 = *(_QWORD **)(a1 + 16);
  v34 = (uint64_t)_swiftEmptyArrayStorage;
  v14 = swift_retain_n(v13, 2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v16 >= v15 >> 1)
    goto LABEL_36;
  while (1)
  {
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
    specialized Array._endMutation()(v17);
    v18 = v34;
    if (!((unint64_t)v34 >> 62))
      break;
    if (v34 < 0)
      v25 = v34;
    else
      v25 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v16 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
    if (!v16)
      goto LABEL_41;
    while (1)
    {
LABEL_4:
      v19 = (unint64_t)v18 >> 62;
      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v16 = (_QWORD *)v18;
        else
          v16 = (_QWORD *)(v18 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(v18);
        v26 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        v15 = v26;
        if (!v26)
          goto LABEL_33;
        swift_bridgeObjectRetain(v18);
        v16 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        if (!v16)
          goto LABEL_34;
      }
      else
      {
        v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v15)
          goto LABEL_33;
      }
      if ((v18 & 0xC000000000000001) == 0)
        break;
      v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
      if (!v19)
      {
LABEL_9:
        v15 = v18 & 0xFFFFFFFFFFFFF8;
        if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_35;
        goto LABEL_10;
      }
LABEL_21:
      if (v18 < 0)
        v21 = v18;
      else
        v21 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease();
      if (!v22)
        goto LABEL_35;
LABEL_10:
      sub_100CFEBB4(0, 1);
      sub_100ACFB30(v16, a2, a3, a4, a5, a6, a7, a8, a9 & 1, a10);
      if (v11)
      {
        swift_release(v13);
        v24 = v16;
        goto LABEL_42;
      }
      swift_beginAccess(v16 + 9, v33, 0, 0);
      swift_bridgeObjectRetain(v16[9]);
      sub_100620F4C(v20);
      swift_release(v16);
      v18 = v34;
      if ((unint64_t)v34 >> 62)
      {
        if (v34 < 0)
          v23 = v34;
        else
          v23 = v34 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v34);
        v16 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v23);
        swift_bridgeObjectRelease();
        if (!v16)
          goto LABEL_41;
      }
      else
      {
        v16 = *(_QWORD **)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v16)
          goto LABEL_41;
      }
    }
    v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v16 = *(_QWORD **)(v18 + 32);
      swift_retain(v16);
      if (!v19)
        goto LABEL_9;
      goto LABEL_21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, (char *)v16 + 1, 1);
  }
  if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
LABEL_41:
  v24 = v13;
LABEL_42:
  swift_release(v24);
  swift_bridgeObjectRelease();
}

void sub_100615E9C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, void *a5, char *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v29[24];
  uint64_t v30;

  v8 = v7;
  v13 = *(_QWORD *)(a1 + 16);
  v30 = (uint64_t)_swiftEmptyArrayStorage;
  v14 = swift_retain_n(v13, 2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    goto LABEL_36;
  while (1)
  {
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
    specialized Array._endMutation()(v17);
    v18 = v30;
    if (!((unint64_t)v30 >> 62))
      break;
    if (v30 < 0)
      v25 = v30;
    else
      v25 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v16 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v18);
    if (!v16)
      goto LABEL_41;
    while (1)
    {
LABEL_4:
      v19 = (unint64_t)v18 >> 62;
      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v16 = v18;
        else
          v16 = v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v26 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease(v18);
        v15 = v26;
        if (!v26)
          goto LABEL_33;
        swift_bridgeObjectRetain(v18);
        v16 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease(v18);
        if (!v16)
          goto LABEL_34;
      }
      else
      {
        v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v15)
          goto LABEL_33;
      }
      if ((v18 & 0xC000000000000001) == 0)
        break;
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
      if (!v19)
      {
LABEL_9:
        v15 = v18 & 0xFFFFFFFFFFFFF8;
        if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_35;
        goto LABEL_10;
      }
LABEL_21:
      if (v18 < 0)
        v21 = v18;
      else
        v21 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v18);
      if (!v22)
        goto LABEL_35;
LABEL_10:
      sub_100CFEBA8(0, 1);
      sub_100B63018(v16, a2, a3, a4, a5, a6, a7);
      if (v8)
      {
        v18 = v30;
        swift_release(v13);
        v24 = v16;
        goto LABEL_42;
      }
      swift_beginAccess(v16 + 48, v29, 0, 0);
      swift_bridgeObjectRetain(*(_QWORD *)(v16 + 48));
      sub_100620C1C(v20);
      swift_release(v16);
      v18 = v30;
      if ((unint64_t)v30 >> 62)
      {
        if (v30 < 0)
          v23 = v30;
        else
          v23 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v30);
        v16 = _CocoaArrayWrapper.endIndex.getter(v23);
        swift_bridgeObjectRelease(v18);
        if (!v16)
          goto LABEL_41;
      }
      else
      {
        v16 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v16)
          goto LABEL_41;
      }
    }
    v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      v16 = *(_QWORD *)(v18 + 32);
      swift_retain(v16);
      if (!v19)
        goto LABEL_9;
      goto LABEL_21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  }
  if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
LABEL_41:
  v24 = v13;
LABEL_42:
  swift_release(v24);
  swift_bridgeObjectRelease(v18);
}

unint64_t sub_10061616C()
{
  unint64_t result;

  result = qword_1013E81E8;
  if (!qword_1013E81E8)
  {
    result = swift_getWitnessTable(&unk_100EFEFA0, &type metadata for CRLInsertShapeToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E81E8);
  }
  return result;
}

unint64_t sub_1006161B4()
{
  unint64_t result;

  result = qword_1013E81F0;
  if (!qword_1013E81F0)
  {
    result = swift_getWitnessTable(&unk_100EFEFC8, &type metadata for CRLInsertShapeToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E81F0);
  }
  return result;
}

uint64_t sub_1006161F8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10111B550, 1) + 8);
}

uint64_t sub_10061621C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10111B528, 1);
}

uint64_t sub_10061622C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

_QWORD *sub_10061625C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_10061627C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10061629C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t KeyPath;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  _QWORD v75[2];
  char *v76;
  char *v77;
  uint64_t *v78;
  char *v79;
  unsigned int v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  void (*v85)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  unsigned int v88;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  _QWORD v95[2];
  _QWORD v96[7];

  v78 = a1;
  v1 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v1);
  v79 = (char *)v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for InputConnectionBehavior(0);
  v89 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v93 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v4);
  v77 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v92 = (char *)v75 - v7;
  v8 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v8);
  v76 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v10);
  v83 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  v91 = v22;
  __chkstk_darwin(v22);
  v87 = (char *)v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v84 = (char *)v75 - v26;
  v75[1] = sub_1004B804C(&qword_1013E1120);
  v27 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v27);
  v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v29(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter title for a board", 27, 2);
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100FBAFB0);
  static Locale.current.getter(v30);
  v80 = v28;
  v82 = v12;
  v29(v15, v28, v12);
  v81 = v29;
  v31 = v83;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter description for a board", 33, 2);
  v90 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v90(v31, 0, 1, v22);
  v32 = type metadata accessor for CRLBoardEntity(0);
  v33 = v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v76, 1, 1, v32);
  v34 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v34);
  v29(v15, v28, v12);
  v35 = v87;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Prompt for selecting a board from the list", 42, 2);
  v36 = v92;
  IntentDialog.init(_:)(v35);
  v37 = type metadata accessor for IntentDialog(0);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v85 = v38;
  v86 = v37;
  v39 = v36;
  v38(v36, 0, 1, v37);
  v40 = v77;
  v38(v77, 1, 1, v37);
  v88 = enum case for InputConnectionBehavior.default(_:);
  v89 = *(_QWORD *)(v89 + 104);
  v41 = v93;
  ((void (*)(char *))v89)(v93);
  v42 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v43 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v84, v31, v33, v39, v40, v41, v42);
  v44 = v78;
  *v78 = v43;
  v76 = (char *)sub_1004B804C(&qword_1013E8240);
  v45 = String.LocalizationValue.init(stringLiteral:)(0x6570616853, 0xE500000000000000);
  static Locale.current.getter(v45);
  v46 = v80;
  v47 = v82;
  v48 = v81;
  v81(v15, v80, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a shape", 34, 2);
  v49 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x8000000100FBB000);
  static Locale.current.getter(v49);
  v50 = v47;
  v48(v15, v46, v47);
  v51 = v83;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter description for shape", 31, 2);
  v90(v51, 0, 1, v91);
  LOBYTE(v95[0]) = 6;
  v52 = String.LocalizationValue.init(stringLiteral:)(0x6873206863696857, 0xEC0000003F657061);
  static Locale.current.getter(v52);
  v48(v15, v46, v50);
  v53 = v87;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Prompt for selecting a shape", 28, 2);
  v54 = v92;
  IntentDialog.init(_:)(v53);
  v56 = v85;
  v55 = v86;
  v85(v54, 0, 1, v86);
  v57 = v40;
  v56(v40, 1, 1, v55);
  sub_1004B804C(&qword_1013E8248);
  KeyPath = swift_getKeyPath(byte_100EFF0A0);
  v96[0] = IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  v59 = v93;
  ((void (*)(char *, _QWORD, uint64_t))v89)(v93, v88, v94);
  v60 = sub_1006183C0();
  v61 = sub_100618404();
  v62 = v84;
  v44[1] = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)(v84, v51, v95, v54, v57, v59, &off_101264B38, v96, &type metadata for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider, v60, v61);
  v87 = (char *)sub_1004B804C(&qword_1013E5388);
  v63 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v63);
  v64 = v80;
  v65 = v82;
  v66 = v81;
  v81(v15, v80, v82);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for text", 31, 2);
  v67 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100FBB060);
  static Locale.current.getter(v67);
  v66(v15, v64, v65);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter description for text", 30, 2);
  v90(v51, 0, 1, v91);
  v68 = type metadata accessor for AttributedString(0);
  v69 = v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v79, 1, 1, v68);
  v70 = v92;
  v85(v92, 1, 1, v86);
  v71 = v93;
  ((void (*)(char *, _QWORD, uint64_t))v89)(v93, v88, v94);
  v44[2] = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v62, v51, v69, v70, v71);
  sub_1004B804C(&qword_1013E1128);
  v95[0] = 0xD00000000000001FLL;
  v95[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v95, &type metadata for String, &protocol witness table for String);
  v72 = type metadata accessor for AppDependencyManager(0);
  v73 = static AppDependencyManager.shared.getter(v72);
  result = AppDependency.__allocating_init(key:manager:)(v96, v73);
  v44[3] = result;
  v44[7] = (uint64_t)&type metadata for CRLBoardItemInsertionPerformer;
  v44[8] = (uint64_t)&off_101291088;
  return result;
}

uint64_t sub_100616CC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[16] = a1;
  v2[17] = v1;
  v3 = sub_1004B804C(&qword_1013E5380);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardEntity(0);
  v2[19] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v5);
  v2[21] = swift_task_alloc(v5);
  v6 = type metadata accessor for Logger(0);
  v2[22] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[23] = v7;
  v2[24] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100616D80, 0, 0);
}

uint64_t sub_100616D80()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v7;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = (_QWORD *)v0[21];
  v2 = (_QWORD *)v0[18];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 7, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  IntentParameter.wrappedValue.getter(v0 + 27);
  v3 = *((unsigned __int8 *)v0 + 216);
  IntentParameter.wrappedValue.getter(v1);
  v4 = IntentParameter.wrappedValue.getter(v2);
  AppDependency.wrappedValue.getter(v4);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v7 = (char *)&dword_101402390 + dword_101402390;
  v5 = (_QWORD *)swift_task_alloc(unk_101402394);
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_100616EB4;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *))v7)(v3, v0[21], v0[18], v0 + 2);
}

uint64_t sub_100616EB4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 200);
  *(_QWORD *)(*(_QWORD *)v2 + 208) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[21];
    sub_1005B858C(v4[18]);
    sub_1005761B8(v6);
    v7 = sub_100617068;
  }
  else
  {
    v8 = v4 + 2;
    v9 = v4[21];
    v10 = v4[18];

    sub_1005B858C(v10);
    sub_1005761B8(v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    v7 = sub_100616F60;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100616F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD **)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 144);
  v6 = IntentParameter.wrappedValue.getter(v4);
  v7 = IntentParameter.projectedValue.getter(v6);
  *(_QWORD *)(v0 + 120) = v7;
  v8 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v9 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v4, v0 + 120, v5, &type metadata for CRLOpenBoardIntent, v8, v9);
  swift_release(v7);
  sub_1005761B8((uint64_t)v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v11);
  swift_task_dealloc(v4);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100617068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 208);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 208);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v23 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v5, v0 + 104, v0 + 80);
    v8 = Error.publicDescription.getter(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
    v10 = v9;
    *(_QWORD *)(v0 + 112) = sub_100BF0F1C(v8, v9, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error inserting shape %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 208);

    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }
  v12 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 144);
  v19 = type metadata accessor for _PrebuiltAppIntentError(0);
  v20 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v19, v20, 0, 0);
  v21.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v21);
  swift_errorRelease(v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc(v13);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006172B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147EC98);
  sub_1004F2A1C(v10, (uint64_t)qword_10147EC98);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x7061685320646441, 0xE900000000000065);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_10061743C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];

  v25[1] = a1;
  v1 = sub_1004B804C(&qword_1013E82B8);
  __chkstk_darwin(v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E82C0);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E8298);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - v12;
  v14 = sub_1006184CC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 2, &type metadata for CRLInsertShapeToBoardIntent, v14);
  v15._countAndFlagsBits = 543450177;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100EFF0F0);
  v17 = sub_1004B804C(&qword_1013E82C8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 544175136;
  v18._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100EFF118);
  v20 = sub_1004B804C(&qword_1013E82D8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for CRLInsertShapeToBoardIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLInsertShapeToBoardIntent, v14);
  v22 = sub_1004CBA30(&qword_1013E82A0, &qword_1013E8298, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for CRLInsertShapeToBoardIntent, v7, v22);
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for CRLInsertShapeToBoardIntent, v7, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
}

uint64_t sub_1006176C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v28[2];

  v28[1] = a1;
  v1 = sub_1004B804C(&qword_1013E82B8);
  __chkstk_darwin(v1);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E82C0);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E8298);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v28 - v12;
  v14 = sub_1006184CC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 3, &type metadata for CRLInsertShapeToBoardIntent, v14);
  v15._countAndFlagsBits = 543450177;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100EFF0F0);
  v17 = sub_1004B804C(&qword_1013E82C8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 0x206874697720;
  v18._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100EFF0A0);
  v20 = sub_1004B804C(&qword_1013E82D0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 544175136;
  v21._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100EFF118);
  v23 = sub_1004B804C(&qword_1013E82D8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v22, v4, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v24);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for CRLInsertShapeToBoardIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLInsertShapeToBoardIntent, v14);
  v25 = sub_1004CBA30(&qword_1013E82A0, &qword_1013E8298, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for CRLInsertShapeToBoardIntent, v7, v25);
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for CRLInsertShapeToBoardIntent, v7, v25);
  return ((uint64_t (*)(char *, uint64_t))v26)(v13, v7);
}

uint64_t sub_1006179A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCB50 != -1)
    swift_once(&qword_1013DCB50, sub_1006172B0);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147EC98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100617A10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v3 = type metadata accessor for EquatableComparisonOperator(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EFF0F0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for EquatableComparisonOperator.equalTo(_:), v3);
  v14 = 1;
  v8 = sub_1004B804C(&qword_1013E8298);
  v9 = sub_1004CBA30(&qword_1013E82A0, &qword_1013E8298, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v10 = sub_100618538();
  v11 = sub_1004CBA30(&qword_1013E82B0, &qword_1013E8240, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  return ParameterSummaryWhenCondition.init<A, B>(_:_:_:_:otherwise:)(KeyPath, v6, &v14, sub_10061743C, 0, sub_1006176C8, 0, v8, v8, &type metadata for CRLShapeTypeEntity, a2, v9, v9, v10, v11);
}

uint64_t sub_100617B60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E8294);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100616CC8(a1);
}

uint64_t sub_100617BB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006184CC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100617BE0()
{
  unint64_t result;

  result = qword_1013E8200;
  if (!qword_1013E8200)
  {
    result = swift_getWitnessTable(&unk_100EFF044, &type metadata for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider);
    atomic_store(result, (unint64_t *)&qword_1013E8200);
  }
  return result;
}

unint64_t sub_100617C28()
{
  unint64_t result;

  result = qword_1013E8208;
  if (!qword_1013E8208)
  {
    result = swift_getWitnessTable(&unk_100F08548, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013E8208);
  }
  return result;
}

unint64_t sub_100617C70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8210;
  if (!qword_1013E8210)
  {
    v1 = sub_1004CB6A4(qword_1013E8218);
    sub_100617C28();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E8210);
  }
  return result;
}

uint64_t sub_100617CD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[2] = a1;
  v2 = type metadata accessor for AttributedString.Index(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[5] = swift_task_alloc(v4);
  v1[6] = swift_task_alloc(v4);
  v5 = type metadata accessor for AttributedString.CharacterView(0);
  v1[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[8] = v6;
  v1[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0);
  v1[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[11] = v8;
  v1[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100617D94, 0, 0);
}

uint64_t sub_100617D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = IntentParameterDependency.wrappedValue.getter();
  if (v1)
  {
    v2 = v1;
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 24);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 32);
    KeyPath = swift_getKeyPath(&unk_100EFF0C8);
    v11 = sub_100618450();
    v23 = v2;
    IntentProjection.subscript.getter(KeyPath, v11);
    v12 = swift_release(KeyPath);
    AttributedString.characters.getter(v12);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v20);
    v13 = sub_1004B7878(&qword_1013E8278, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
    dispatch thunk of Collection.startIndex.getter(v6, v13);
    dispatch thunk of Collection.endIndex.getter(v6, v13);
    sub_1004B7878(&qword_1013E8280, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
    LOBYTE(v2) = dispatch thunk of static Equatable.== infix(_:_:)(v7, v8);
    v14 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v14(v8, v9);
    v14(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v5, v6);
    if ((v2 & 1) != 0)
    {
      v15 = &off_101264B88;
    }
    else
    {
      if (qword_1013DCFE8 != -1)
        swift_once(&qword_1013DCFE8, sub_10074C050);
      v15 = (_UNKNOWN **)qword_10147F558;
      swift_bridgeObjectRetain(qword_10147F558);
    }
    swift_release(v23);
  }
  else
  {
    v15 = &off_101264B88;
  }
  v16 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_UNKNOWN **))(v0 + 8))(v15);
}

uint64_t sub_100617F90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8264);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_100617FE0;
  return sub_100617CD4(v3);
}

uint64_t sub_100617FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10061803C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1004CF80C;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

ValueMetadata *type metadata accessor for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider()
{
  return &type metadata for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider;
}

uint64_t destroy for CRLInsertShapeToBoardIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 4);
}

uint64_t initializeWithCopy for CRLInsertShapeToBoardIntent(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t *, uint64_t);

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a2 + 4;
  v8 = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 56) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v10(a1 + 32, v7, v9);
  return a1;
}

uint64_t *assignWithCopy for CRLInsertShapeToBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  sub_1004EA5C8(a1 + 4, a2 + 4);
  return a1;
}

__n128 initializeWithTake for CRLInsertShapeToBoardIntent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t *assignWithTake for CRLInsertShapeToBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_release(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_release(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_release(v7);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 4);
  v8 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v8;
  a1[8] = a2[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLInsertShapeToBoardIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLInsertShapeToBoardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLInsertShapeToBoardIntent()
{
  return &type metadata for CRLInsertShapeToBoardIntent;
}

uint64_t sub_10061836C()
{
  return sub_1004CBA30(&qword_1013E8230, &qword_1013E8238, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
}

uint64_t sub_100618398@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1006183C0()
{
  unint64_t result;

  result = qword_1013E8250;
  if (!qword_1013E8250)
  {
    result = swift_getWitnessTable(&unk_100EFEFE4, &type metadata for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider);
    atomic_store(result, (unint64_t *)&qword_1013E8250);
  }
  return result;
}

unint64_t sub_100618404()
{
  unint64_t result;

  result = qword_1013E8258;
  if (!qword_1013E8258)
  {
    result = swift_getWitnessTable(&unk_100F08450, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, &qword_1013E8258);
  }
  return result;
}

unint64_t sub_100618450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8268;
  if (!qword_1013E8268)
  {
    v1 = sub_1004CB6A4(&qword_1013E5380);
    sub_1004B7878(&qword_1013E8270, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013E8268);
  }
  return result;
}

unint64_t sub_1006184CC()
{
  unint64_t result;

  result = qword_1013E8288;
  if (!qword_1013E8288)
  {
    result = swift_getWitnessTable(&unk_100EFEF10, &type metadata for CRLInsertShapeToBoardIntent);
    atomic_store(result, &qword_1013E8288);
  }
  return result;
}

uint64_t sub_100618510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100618538()
{
  unint64_t result;

  result = qword_1013E82A8;
  if (!qword_1013E82A8)
  {
    result = swift_getWitnessTable(&unk_100F083B0, &type metadata for CRLShapeTypeEntity);
    atomic_store(result, (unint64_t *)&qword_1013E82A8);
  }
  return result;
}

uint64_t sub_10061857C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1006185A4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextInputLogger()), "init");
  qword_10147ECB0 = (uint64_t)result;
  return result;
}

id sub_10061862C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTextInputLogger();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLTextInputLogger()
{
  return objc_opt_self(_TtC8Freeform18CRLTextInputLogger);
}

void sub_10061868C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_100843264(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(a2 + 56) + 40 * v5;
    v8 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(void **)(v7 + 24);
    v12 = *(_BYTE *)(v7 + 32);
    v13 = v11;
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
  }
  else
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
  }
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)(a3 + 16) = v10;
  *(_QWORD *)(a3 + 24) = v11;
  *(_BYTE *)(a3 + 32) = v12;
}

id sub_100618724(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_100842EFC(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a2 + 56) + 24 * v3;
  v6 = *(id *)v5;
  v7 = *(void **)(v5 + 8);
  v8 = *(void **)(v5 + 16);
  v9 = *(id *)v5;
  v10 = v7;
  v11 = v8;
  return v6;
}

void *sub_100618794(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v12;
  void *v13;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_100843848((uint64_t)a1);
      if ((v9 & 1) != 0)
      {
        v7 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v8);
        v10 = v7;
        return v7;
      }
    }
    return 0;
  }
  if (a2 < 0)
    v3 = a2;
  else
    v3 = a2 & 0xFFFFFFFFFFFFFF8;
  v4 = a1;
  v5 = __CocoaDictionary.lookup(_:)(v4, v3);

  if (!v5)
    return 0;
  v12 = v5;
  v6 = sub_100619F24();
  swift_unknownObjectRetain(v5);
  swift_dynamicCast(&v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, v6, 7);
  v7 = v13;
  swift_unknownObjectRelease(v5);
  return v7;
}

uint64_t sub_100618858(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_100843894((uint64_t)a1);
      if ((v9 & 1) != 0)
      {
        v7 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v8);
        swift_retain(v7);
        return v7;
      }
    }
    return 0;
  }
  if (a2 < 0)
    v3 = a2;
  else
    v3 = a2 & 0xFFFFFFFFFFFFFF8;
  v4 = a1;
  v5 = __CocoaDictionary.lookup(_:)(v4, v3);

  if (!v5)
    return 0;
  v11 = v5;
  v6 = type metadata accessor for CRLSyncRecordGroup();
  swift_unknownObjectRetain(v5);
  swift_dynamicCast(&v12, &v11, (char *)&type metadata for Swift.AnyObject + 8, v6, 7);
  v7 = v12;
  swift_unknownObjectRelease(v5);
  return v7;
}

uint64_t sub_100618920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618954(a1, a2, a3, (uint64_t)&type metadata for () + 8);
}

uint64_t sub_100618930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618BD8(a1, a2, a3, (uint64_t *)&unk_1013E18E0);
}

uint64_t sub_10061893C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618AA0(a1, a2, a3, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for URL);
}

uint64_t sub_100618948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618954(a1, a2, a3, (uint64_t)&type metadata for Bool);
}

uint64_t sub_100618954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned __int8 v19;
  _QWORD v21[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_10056805C(a1);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
    {
LABEL_6:
      v18 = 0;
      return swift_task_create(v11, v18, a4, a2);
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v19 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
      goto LABEL_6;
  }
  v13 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v12);
  swift_unknownObjectRetain(v12);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
  v17 = v16;
  swift_unknownObjectRelease(v12);
  if (!(v17 | v15))
    goto LABEL_6;
  v21[0] = 0;
  v21[1] = 0;
  v18 = v21;
  v21[2] = v15;
  v21[3] = v17;
  return swift_task_create(v11, v18, a4, a2);
}

uint64_t sub_100618A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618BD8(a1, a2, a3, (uint64_t *)&unk_101405F80);
}

uint64_t sub_100618A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618BD8(a1, a2, a3, &qword_1013E83A8);
}

uint64_t sub_100618A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618AA0(a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CGImage);
}

uint64_t sub_100618AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, __n128))
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_10056805C(a1);
    v12 = 7168;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v13);
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      v11 = swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v12 = v19 | 0x1C00;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = a4(0, v11);
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v12, v21, v20, a2);
}

uint64_t sub_100618BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100618BD8(a1, a2, a3, &qword_1013E83B0);
}

uint64_t sub_100618BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_10056805C(a1);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v12);
      swift_unknownObjectRetain(v12);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v18 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = sub_1004B804C(a4);
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v11, v20, v19, a2);
}

uint64_t sub_100618D04(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100618D24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100618D44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 296) = a2;
  *(_QWORD *)(v4 + 304) = v3;
  *(_BYTE *)(v4 + 169) = a3;
  *(_QWORD *)(v4 + 288) = a1;
  v5 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v4 + 312) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(_QWORD *)(v4 + 320) = v6;
  v7 = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v4 + 328) = v7;
  *(_QWORD *)(v4 + 336) = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100618DD0, 0, 0);
}

uint64_t sub_100618DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_sideStore);
  *(_QWORD *)(v0 + 344) = v5;
  v6 = swift_task_alloc(32);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v3;
  v7 = sub_1004B804C(&qword_1013E8368);
  OS_dispatch_queue.sync<A>(execute:)(sub_100619AD0, v6, v7);
  swift_task_dealloc(v6);
  sub_1004E1DFC(*(_QWORD *)(v0 + 264), *(_BYTE *)(v0 + 272));
  sub_1004E1B3C(v3, v1);
  v8 = sub_1004B804C(&qword_1013E7870);
  v9 = *(_QWORD *)(v2 + 72);
  LODWORD(v10) = *(_DWORD *)(v2 + 80);
  *(_DWORD *)(v0 + 172) = v10;
  v10 = v10;
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v8, v11 + v9, v10 | 7);
  *(_QWORD *)(v0 + 352) = v12;
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  sub_1004DB5FC(v1, v12 + v11);
  v13 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 360) = v13;
  *(_QWORD *)(v13 + 16) = v4;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = 1;
  *(_BYTE *)(v13 + 40) = 1;
  v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 368) = v14;
  v15 = type metadata accessor for CRLBoardDatabaseFetchResult();
  *v14 = v0;
  v14[1] = sub_100618F6C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 280, 0, 0, 0x3A5F286863746566, 0xE900000000000029, sub_100619AE8, v13, v15);
}

uint64_t sub_100618F6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 368);
  *(_QWORD *)(*v1 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100619690;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 360));
    v4 = sub_100618FD8;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_100618FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(id, uint64_t, uint64_t, uint64_t, void *, uint64_t, __n128);
  id v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  id v63;
  uint64_t v64;
  int queue;
  NSObject *queuea;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;

  v1 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 352));
  v2 = *(_QWORD *)(v0 + 280);
  swift_beginAccess(v2 + 16, v0 + 240, 0, 0);
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain(v3);
  sub_10061868C(v1, v3, v0 + 176);
  swift_bridgeObjectRelease(v3);
  sub_100619CC8(v0 + 176, v0 + 136);
  v4 = *(_QWORD *)(v0 + 136);
  if (!v4)
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v0 + 216, 0, 0);
    v22 = (void *)static OS_os_log.crlDefault;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = v22;
    v26 = UUID.uuidString.getter(v25);
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v29;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    v30 = static os_log_type_t.error.getter(v29);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v30, "boardIdentifier not found: %{public}@", 37, 2, inited);
    swift_setDeallocating(inited);
    v31 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v31);

    v32 = sub_100619D10();
    swift_allocError(&type metadata for CRLBoardLibrary.BoardError, v32, 0, 0);
    *v33 = 0;
    swift_willThrow(v34);
    v71 = &unk_1013E8388;
    v21 = &unk_101272B78;
    goto LABEL_8;
  }
  v67 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 304);
  queue = *(unsigned __int8 *)(v0 + 169);
  v6 = *(void **)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v9 = *(void **)(v0 + 160);
  v10 = *(unsigned __int8 *)(v0 + 168);
  v11 = v2;
  v12 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, void *, uint64_t, __n128))(v5 + 648);
  v70 = v9;
  v13 = v6;
  swift_retain(v4);
  swift_retain(v8);
  v14 = swift_retain(v7);
  v69 = v7;
  v15 = v12(v13, v4, v8, v7, v9, v10, v14);
  v2 = v11;
  v16 = (void *)v15;
  v17 = type metadata accessor for CRLTransactionContext(0);
  v18 = sub_100619D58();
  v19 = v16;
  v20 = sub_100DBEDB8((uint64_t)v19, v17, v5, v18);

  sub_100B12D40(v11, v20, queue, 2);
  if (v67)
  {
    swift_release(v20);

    swift_release(v4);
    swift_release(v8);
    swift_release(v7);

    v71 = &unk_1013E8390;
    v21 = &unk_101272BA0;
LABEL_8:
    swift_release(v2);
    v37 = *(unsigned __int8 *)(v0 + 172);
    v38 = *(_QWORD *)(v0 + 336);
    v39 = *(_QWORD *)(v0 + 328);
    v40 = *(_QWORD *)(v0 + 312);
    v42 = *(void **)(v0 + 288);
    v41 = *(_QWORD *)(v0 + 296);
    sub_100812A80(v41);
    v43 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v40, 1, 1, v43);
    sub_1004E1B3C(v41, v38);
    v44 = (v37 + 40) & ~v37;
    v45 = (_QWORD *)swift_allocObject(v21, v44 + v39, v37 | 7);
    v45[2] = 0;
    v45[3] = 0;
    v45[4] = v42;
    sub_1004DB5FC(v38, (uint64_t)v45 + v44);
    v46 = v42;
    v47 = sub_100618954(v40, (uint64_t)v71, (uint64_t)v45, (uint64_t)&type metadata for () + 8);
    swift_release(v47);
    swift_task_dealloc(v38);
    swift_task_dealloc(v40);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v35 = v4;
  v68 = v8;
  v36 = (*(uint64_t (**)(void))(*(_QWORD *)v20 + 720))();
  v48 = *(_BYTE *)(v0 + 169);
  objc_msgSend(v19, "fixUp", swift_release(v36).n128_f64[0]);
  if ((v48 & 1) != 0)
  {
    swift_release(v20);
    swift_release(v4);
    swift_release(v8);
    swift_release(v7);

    swift_release(v11);
LABEL_12:
    v54 = *(unsigned __int8 *)(v0 + 172);
    v55 = *(_QWORD *)(v0 + 336);
    v56 = *(_QWORD *)(v0 + 328);
    v57 = *(_QWORD *)(v0 + 312);
    v59 = *(void **)(v0 + 288);
    v58 = *(_QWORD *)(v0 + 296);
    sub_100812A80(v58);
    v60 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v57, 1, 1, v60);
    sub_1004E1B3C(v58, v55);
    v61 = (v54 + 40) & ~v54;
    v62 = (_QWORD *)swift_allocObject(&unk_101272C68, v61 + v56, v54 | 7);
    v62[2] = 0;
    v62[3] = 0;
    v62[4] = v59;
    sub_1004DB5FC(v55, (uint64_t)v62 + v61);
    v63 = v59;
    v64 = sub_100618954(v57, (uint64_t)&unk_1013E83A0, (uint64_t)v62, (uint64_t)&type metadata for () + 8);
    swift_release(v64);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    (*(void (**)(char *))(v0 + 8))(v19);
    return;
  }
  v49 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  queuea = *(NSObject **)(v49 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  v50 = swift_allocObject(&unk_101272BF0, 32, 7);
  *(_QWORD *)(v50 + 16) = v20;
  *(_QWORD *)(v50 + 24) = v49;
  v51 = swift_allocObject(&unk_101272C18, 32, 7);
  *(_QWORD *)(v51 + 16) = sub_100619E50;
  *(_QWORD *)(v51 + 24) = v50;
  *(_QWORD *)(v0 + 120) = sub_10054E858;
  *(_QWORD *)(v0 + 128) = v51;
  *(_QWORD *)(v0 + 88) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 96) = *(_QWORD *)"";
  *(_QWORD *)(v0 + 104) = sub_100618D24;
  *(_QWORD *)(v0 + 112) = &unk_101272C30;
  v52 = _Block_copy((const void *)(v0 + 88));
  v53 = *(_QWORD *)(v0 + 128);
  swift_retain_n(v49, 2);
  swift_retain(v20);
  swift_retain(v51);
  swift_release(v53);
  dispatch_sync(queuea, v52);
  _Block_release(v52);
  LOBYTE(v53) = swift_isEscapingClosureAtFileLocation(v51, "", 89, 314, 26, 1);
  swift_release(v51);
  swift_release(v50);
  swift_release(v35);
  swift_release(v68);
  swift_release(v69);

  swift_release(v2);
  swift_release(v20);
  swift_release(v49);
  if ((v53 & 1) == 0)
    goto LABEL_12;
  __break(1u);
}

uint64_t sub_100619690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_bridgeObjectRelease(v1);
  v2 = *(unsigned __int8 *)(v0 + 172);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 312);
  v7 = *(void **)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 296);
  sub_100812A80(v6);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_1004E1B3C(v6, v3);
  v9 = (v2 + 40) & ~v2;
  v10 = (_QWORD *)swift_allocObject(&unk_101272B50, v9 + v4, v2 | 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v7;
  sub_1004DB5FC(v3, (uint64_t)v10 + v9);
  v11 = v7;
  v12 = sub_100618954(v5, (uint64_t)&unk_1013E8378, (uint64_t)v10, (uint64_t)&type metadata for () + 8);
  swift_release(v12);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006197AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1006197C4, v0, 0);
}

uint64_t sub_1006197C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  unsigned __int8 v4;
  id v5;
  Class isa;
  NSString v7;
  CKRecordID v8;
  Swift::String v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = (void *)objc_opt_self(NSUserDefaults);
  v2 = objc_msgSend(v1, "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "BOOLForKey:", v3);

  if ((v4 & 1) != 0)
  {
    v5 = objc_msgSend(v1, "standardUserDefaults");
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setValue:forKey:", isa, v7);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 16);
    type metadata accessor for CRLBoard(0);
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
    v13 = v11 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
    v14 = (_QWORD *)swift_task_alloc(dword_1013E8364);
    *(_QWORD *)(v0 + 24) = v14;
    *v14 = v0;
    v14[1] = sub_100619978;
    return sub_100618D44(v12, v13, 0);
  }
}

uint64_t sub_100619978(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 24);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_1006199CC()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier);

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100619A08()
{
  return type metadata accessor for CRLBoardActor(0);
}

uint64_t type metadata accessor for CRLBoardActor(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E8348;
  if (!qword_1013E8348)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardActor);
  return result;
}

uint64_t sub_100619A4C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100619AD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100812A38(*(_QWORD *)(v1 + 24), a1);
}

double sub_100619AE8(uint64_t a1)
{
  uint64_t v1;

  return sub_100A9E3E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_100619AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_100619B10, 0, 0);
}

uint64_t sub_100619B10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_100619BA8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD000000000000019, 0x8000000100FBB110, sub_100619F1C, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100619BA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100619C14;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 32));
    v4 = sub_1004CD97C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100619C14()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100619C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E8374);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch(sub_100619B10, 0, 0);
}

uint64_t sub_100619CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101405EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100619D10()
{
  unint64_t result;

  result = qword_1013E8380;
  if (!qword_1013E8380)
  {
    result = swift_getWitnessTable(&unk_100F322D0, &type metadata for CRLBoardLibrary.BoardError);
    atomic_store(result, (unint64_t *)&qword_1013E8380);
  }
  return result;
}

unint64_t sub_100619D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101406AE0;
  if (!qword_101406AE0)
  {
    v1 = type metadata accessor for CRLBoard(255);
    result = swift_getWitnessTable(&unk_100F276E4, v1);
    atomic_store(result, (unint64_t *)&qword_101406AE0);
  }
  return result;
}

uint64_t sub_100619DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E8374);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CF80C;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch(sub_100619B10, 0, 0);
}

uint64_t sub_100619E24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100619E50()
{
  uint64_t v0;

  sub_1005F2548(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100619E58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100619E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100619E78(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100619E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));
  return swift_deallocObject(v0, v4, v5);
}

double sub_100619F1C(uint64_t a1)
{
  uint64_t v1;

  return sub_100AA1E90(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_100619F24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E83B8;
  if (!qword_1013E83B8)
  {
    v1 = objc_opt_self(CKRecord);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E83B8);
  }
  return result;
}

uint64_t sub_100619F78()
{
  return sub_100619F9C() & 1;
}

uint64_t sub_100619F9C()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x78));
}

uint64_t sub_100619FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100619FE0(a3);
}

uint64_t sub_100619FE0(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78)) = result;
  return result;
}

uint64_t sub_10061A000(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;

  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x50);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v26 - v8;
  v11 = *(_QWORD *)(v10 + 88);
  v12 = *(_QWORD *)(v11 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v12, v3, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  __chkstk_darwin(AssociatedTypeWitness);
  v15 = (char *)&v26 - v14;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v12, v3, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 0.0);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v15, v3, v12);
  v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 16) + 24) + 8);
  v16 = dispatch thunk of static Comparable.<= infix(_:_:)(a1, v9, v3);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v9, v3);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19 = v7;
  v26 = a1;
  v20 = a1;
  v21 = v18;
  v18(v7, v20, v3);
  if ((v16 & 1) != 0)
  {
    v17(v7, v3);
LABEL_4:
    v23 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v24 = swift_allocObject(v23, 64, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    *(_QWORD *)(v24 + 32) = 0xD00000000000001ELL;
    *(_QWORD *)(v24 + 40) = 0x8000000100FBB410;
    print(_:separator:terminator:)();
    return swift_bridgeObjectRelease(v24);
  }
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 1.0);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v15, v3, v12);
  v22 = dispatch thunk of static Comparable.> infix(_:_:)(v7, v9, v3, v27);
  v17(v9, v3);
  v17(v19, v3);
  if ((v22 & 1) != 0)
    goto LABEL_4;
  v21(v9, v26, v3);
  return CRLOneEuroFilter.mincutoff.setter((uint64_t)v9);
}

_QWORD *sub_10061A2A8(float a1, float a2)
{
  _QWORD *v2;
  _QWORD *v5;
  float *v6;
  float *v7;
  float *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];
  objc_super v16;

  *(_DWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x60)) = 0;
  *(_DWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x68)) = 0;
  *(_DWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x70)) = 0;
  *((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78)) = 0;
  v16.receiver = v2;
  v16.super_class = (Class)sub_1004B804C((uint64_t *)&unk_1013E8540);
  v5 = objc_msgSendSuper2(&v16, "init");
  v6 = (float *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x60));
  swift_beginAccess(v6, v15, 1, 0);
  *v6 = a2;
  v7 = (float *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x70));
  swift_beginAccess(v7, v14, 1, 0);
  *v7 = a2;
  if (a1 <= 0.0 || a1 > 1.0)
  {
    v9 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v10 = swift_allocObject(v9, 64, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 32) = 0xD00000000000001ELL;
    *(_QWORD *)(v10 + 40) = 0x8000000100FBB410;
    v11 = v5;
    print(_:separator:terminator:)(v10, 32, 0xE100000000000000, 10, 0xE100000000000000);

    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v8 = (float *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x68));
    swift_beginAccess(v8, v13, 1, 0);
    *v8 = a1;
  }
  *((_BYTE *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x78)) = 0;
  return v5;
}

_QWORD *sub_10061A48C(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v5;
  double *v6;
  double *v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];
  objc_super v16;

  *(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x60)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x68)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x70)) = 0;
  *((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78)) = 0;
  v16.receiver = v2;
  v16.super_class = (Class)sub_1004B804C(&qword_1013E8538);
  v5 = objc_msgSendSuper2(&v16, "init");
  v6 = (double *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x60));
  swift_beginAccess(v6, v15, 1, 0);
  *v6 = a2;
  v7 = (double *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x70));
  swift_beginAccess(v7, v14, 1, 0);
  *v7 = a2;
  if (a1 <= 0.0 || a1 > 1.0)
  {
    v9 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v10 = swift_allocObject(v9, 64, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 32) = 0xD00000000000001ELL;
    *(_QWORD *)(v10 + 40) = 0x8000000100FBB410;
    v11 = v5;
    print(_:separator:terminator:)(v10, 32, 0xE100000000000000, 10, 0xE100000000000000);

    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v8 = (double *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x68));
    swift_beginAccess(v8, v13, 1, 0);
    *v8 = a1;
  }
  *((_BYTE *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0x78)) = 0;
  return v5;
}

uint64_t sub_10061A670@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char *v49;
  uint64_t AssociatedTypeWitness;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59[24];
  char v60[24];
  char v61[32];

  v3 = v2;
  v58 = a1;
  v6 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v5 = *(_QWORD *)((swift_isaMask & *v2) + 0x58);
  v51 = *(_QWORD *)(v5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v51, v6, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  v49 = (char *)&v49 - v8;
  v57 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v7);
  v52 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  v14 = __chkstk_darwin(v11);
  v53 = (char *)&v49 - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v49 - v17;
  v19 = __chkstk_darwin(v16);
  v55 = (char *)&v49 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v49 - v21;
  v54 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16) + 8);
  v23 = *(_QWORD *)(v54 + 16);
  v24 = swift_getAssociatedTypeWitness(0, v23, v6, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated type descriptor for ExpressibleByIntegerLiteral.IntegerLiteralType);
  __chkstk_darwin(v24);
  v26 = (char *)&v49 - v25;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v23, v6, v24, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated conformance descriptor for ExpressibleByIntegerLiteral.ExpressibleByIntegerLiteral.IntegerLiteralType: _ExpressibleByBuiltinIntegerLiteral);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v24, AssociatedConformanceWitness);
  v56 = a2;
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v26, v6, v23);
  v28 = swift_isaMask & *v3;
  if (*((_BYTE *)v3 + *(_QWORD *)(v28 + 0x78)) == 1)
  {
    v29 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x68);
    swift_beginAccess(v29, v59, 0, 0);
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v28 + 80) - 8) + 16))(v18, v29);
    dispatch thunk of static Numeric.* infix(_:_:)(v18, v58, v6, v54);
    v30 = *(void (**)(char *, uint64_t))(v57 + 8);
    v30(v18, v6);
    v31 = AssociatedTypeWitness;
    v32 = v51;
    v33 = swift_getAssociatedConformanceWitness(v51, v6, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
    v34 = v49;
    dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(v31, v33, 1.0);
    dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v34, v6, v32);
    v35 = swift_isaMask & *v3;
    v36 = (char *)v3 + *(_QWORD *)(v35 + 0x68);
    swift_beginAccess(v36, v60, 0, 0);
    v37 = v52;
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v35 + 80) - 8) + 16))(v52, v36);
    v39 = v53;
    v38 = v54;
    v51 = *(_QWORD *)(v54 + 8);
    dispatch thunk of static AdditiveArithmetic.- infix(_:_:)(v13, v37, v6);
    v30(v37, v6);
    v30(v13, v6);
    v40 = swift_isaMask & *v3;
    v41 = (char *)v3 + *(_QWORD *)(v40 + 0x70);
    swift_beginAccess(v41, v61, 0, 0);
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v40 + 80) - 8) + 16))(v13, v41);
    dispatch thunk of static Numeric.* infix(_:_:)(v39, v13, v6, v38);
    v30(v13, v6);
    v30(v39, v6);
    v42 = v55;
    dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)(v55, v18, v6, v51);
    v43 = v58;
    v30(v18, v6);
    v30(v42, v6);
    v44 = v56;
    v30(v56, v6);
    v45 = v57;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v44, v22, v6);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  }
  else
  {
    v44 = v56;
    v47 = v57;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v6);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
    v43 = v58;
    v46((uint64_t)v44, v58, v6);
    *((_BYTE *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x78)) = 1;
  }
  v46((uint64_t)v22, v43, v6);
  CRLOneEuroFilter.freq.setter(v22);
  v46((uint64_t)v22, (uint64_t)v44, v6);
  return CRLOneEuroFilter.beta.setter(v22);
}

uint64_t sub_10061AB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_10061A000(a2);
  return sub_10061A670(a1, a3);
}

uint64_t sub_10061AB98()
{
  return sub_100619F9C() & 1;
}

uint64_t _s8Freeform16CRLOneEuroFilterC4freqxvg_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  char v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x60);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_10061AC30(_QWORD *a1, uint64_t a2)
{
  return sub_10061CE58(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_10061E104);
}

id sub_10061AC3C()
{
  return sub_10061CE80((uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for CRLLowPassFilter);
}

uint64_t sub_10061AC48(char *a1)
{
  uint64_t v2;
  void (*v4)(char *, uint64_t);

  v2 = *(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x50);
  v4 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x60)], v2);
  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x68)], v2);
  return ((uint64_t (*)(char *, uint64_t))v4)(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x70)], v2);
}

uint64_t _s8Freeform16CRLOneEuroFilterC4freqxvs_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  _BYTE v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x60);
  swift_beginAccess(v4, v6, 33, 0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess(v6);
}

uint64_t _s8Freeform16CRLOneEuroFilterC9mincutoffxvg_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  char v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x68);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t _s8Freeform16CRLOneEuroFilterC9mincutoffxvs_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  _BYTE v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x68);
  swift_beginAccess(v4, v6, 33, 0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess(v6);
}

uint64_t _s8Freeform16CRLOneEuroFilterC4betaxvg_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  char v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x70);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t _s8Freeform16CRLOneEuroFilterC4betaxvs_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  _BYTE v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x70);
  swift_beginAccess(v4, v6, 33, 0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess(v6);
}

uint64_t CRLOneEuroFilter.dcutoff.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  char v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x78);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLOneEuroFilter.dcutoff.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  _BYTE v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x78);
  swift_beginAccess(v4, v6, 33, 0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess(v6);
}

double sub_10061B034()
{
  return CRLOneEuroFilter.lasttime.getter();
}

double CRLOneEuroFilter.lasttime.getter()
{
  _QWORD *v0;

  return *(double *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x90));
}

void sub_10061B074(double a1)
{
  CRLOneEuroFilter.lasttime.setter(a1);
}

void CRLOneEuroFilter.lasttime.setter(double a1)
{
  _QWORD *v1;

  *(double *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90)) = a1;
}

uint64_t CRLOneEuroFilter.currValue.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  char v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x98);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLOneEuroFilter.currValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  _BYTE v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0x98);
  swift_beginAccess(v4, v6, 33, 0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess(v6);
}

uint64_t sub_10061B1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  __chkstk_darwin(a1);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *))(v8 + 16))((char *)&v10 - v6);
  return a5(v7);
}

uint64_t CRLOneEuroFilter.prevValue.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  char v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0xA0);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLOneEuroFilter.prevValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  _BYTE v6[24];

  v3 = swift_isaMask & *v1;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 0xA0);
  swift_beginAccess(v4, v6, 33, 0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess(v6);
}

uint64_t CRLOneEuroFilter.alpha(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char v70[32];

  v64 = a1;
  v65 = a2;
  v3 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v59 = *(_QWORD *)((swift_isaMask & *v2) + 0x58);
  v4 = *(_QWORD *)(v59 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4, v3, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v68 = (char *)&v54 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v54 - v11;
  v58 = *(_QWORD *)(v3 - 8);
  v13 = __chkstk_darwin(v10);
  v61 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v67 = (char *)&v54 - v16;
  v17 = __chkstk_darwin(v15);
  v60 = (char *)&v54 - v18;
  v19 = __chkstk_darwin(v17);
  v69 = (char *)&v54 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v54 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v54 - v25;
  __chkstk_darwin(v24);
  v62 = (char *)&v54 - v27;
  v66 = v4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 1.0);
  v56 = v26;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v12, v3, v4);
  v29 = swift_isaMask & *v2;
  v30 = (char *)v2 + *(_QWORD *)(v29 + 0x60);
  swift_beginAccess(v30, v70, 0, 0);
  (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v29 + 80) - 8) + 16))(v23, v30);
  v31 = *(_QWORD *)(v59 + 16);
  dispatch thunk of static FloatingPoint./ infix(_:_:)(v26, v23, v3, v31);
  v32 = *(void (**)(char *, uint64_t))(v58 + 8);
  v32(v23, v3);
  v32(v26, v3);
  v57 = v12;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 1.0);
  v33 = v66;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v12, v3, v66);
  v34 = v68;
  v35 = AssociatedConformanceWitness;
  v55 = AssociatedConformanceWitness;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 2.0);
  v36 = v67;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v34, v3, v33);
  v37 = v63;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, v35, 3.14159265);
  v38 = v61;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v37, v3, v33);
  v39 = v60;
  v40 = v36;
  v41 = v36;
  v42 = *(char **)(*(_QWORD *)(v31 + 16) + 8);
  v63 = v42;
  dispatch thunk of static Numeric.* infix(_:_:)(v41, v38, v3, v42);
  v32(v38, v3);
  v32(v40, v3);
  v43 = v69;
  dispatch thunk of static Numeric.* infix(_:_:)(v39, v64, v3, v42);
  v32(v39, v3);
  v44 = v56;
  dispatch thunk of static FloatingPoint./ infix(_:_:)(v23, v43, v3, v31);
  v32(v43, v3);
  v54 = v23;
  v32(v23, v3);
  v45 = v57;
  v46 = v55;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, v55, 1.0);
  v47 = v66;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v45, v3, v66);
  v48 = v68;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, v46, 1.0);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v48, v3, v47);
  v49 = v67;
  v50 = v62;
  dispatch thunk of static FloatingPoint./ infix(_:_:)(v44, v62, v3, v31);
  v51 = v69;
  dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)(v39, v49, v3, *((_QWORD *)v63 + 1));
  v32(v49, v3);
  v32(v39, v3);
  v52 = v54;
  dispatch thunk of static FloatingPoint./ infix(_:_:)(v54, v51, v3, v31);
  v32(v51, v3);
  v32(v52, v3);
  v32(v44, v3);
  return ((uint64_t (*)(char *, uint64_t))v32)(v50, v3);
}

void CRLOneEuroFilter.setFrequency(_:)(uint64_t a1)
{
  sub_10061B894(a1, 0xD000000000000012, 0x8000000100FBB3F0, (void (*)(char *))CRLOneEuroFilter.freq.setter);
}

void CRLOneEuroFilter.setMinCutoff(_:)(uint64_t a1)
{
  sub_10061B894(a1, 0xD000000000000017, 0x8000000100FBB3D0, (void (*)(char *))CRLOneEuroFilter.mincutoff.setter);
}

void sub_10061B894(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  uint64_t v22;

  v20 = a4;
  v21 = a2;
  v22 = a3;
  v6 = *(_QWORD *)((swift_isaMask & *v4) + 0x50);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v19 - v8;
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 88) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v11, v6, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  __chkstk_darwin(AssociatedTypeWitness);
  v14 = (char *)&v19 - v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v11, v6, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 0.0);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v14, v6, v11);
  LOBYTE(v14) = dispatch thunk of static Comparable.<= infix(_:_:)(a1, v9, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v14 & 1) != 0)
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v17 = swift_allocObject(v16, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v17 + 56) = &type metadata for String;
    v18 = v22;
    *(_QWORD *)(v17 + 32) = v21;
    *(_QWORD *)(v17 + 40) = v18;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v20(v9);
  }
}

uint64_t CRLOneEuroFilter.setBeta(_:)(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  __chkstk_darwin(a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return CRLOneEuroFilter.beta.setter(v2);
}

void CRLOneEuroFilter.setDerivateCutoff(_:)(uint64_t a1)
{
  sub_10061B894(a1, 0xD000000000000015, 0x8000000100FBB3B0, (void (*)(char *))CRLOneEuroFilter.dcutoff.setter);
}

_QWORD *CRLOneEuroFilter.__allocating_init(freq:mincutoff:beta:dcutoff:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v5 = v4;
  v10 = objc_allocWithZone(v4);
  v11 = sub_10061E130(a1, a2, a3, a4);
  v12 = *((_QWORD *)v5 + 10);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(a4, v12);
  v13(a3, v12);
  v13(a2, v12);
  v13(a1, v12);
  return v11;
}

_QWORD *sub_10061BBC0(float a1, float a2, float a3, float a4)
{
  _QWORD *v4;
  uint64_t v9;
  objc_class *v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  _QWORD *v16;
  float *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  float *v24;
  float *v25;
  float *v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  float v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  float v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  _DWORD *v40;
  _DWORD *v41;
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  objc_super v50;

  *(_DWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x60)) = 0;
  *(_DWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x68)) = 0;
  *(_DWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x70)) = 0;
  *(_DWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78)) = 0;
  v9 = *(_QWORD *)((swift_isaMask & *v4) + 0x80);
  v10 = (objc_class *)sub_1004B804C((uint64_t *)&unk_1013E8540);
  v11 = objc_allocWithZone(v10);
  v12 = v4;
  *(_QWORD *)((char *)v4 + v9) = sub_10061A2A8(0.5, 0.0);
  v13 = *(_QWORD *)((swift_isaMask & *v12) + 0x88);
  v14 = objc_allocWithZone(v10);
  *(_QWORD *)((char *)v12 + v13) = sub_10061A2A8(0.5, 0.0);
  *(_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x90)) = 0;
  *(_DWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x98)) = 0;
  *(_DWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0xA0)) = 0;

  v50.receiver = v12;
  v50.super_class = (Class)sub_1004B804C(&qword_1013E83C8);
  v15 = objc_msgSendSuper2(&v50, "init");
  v16 = v15;
  if (a1 <= 0.0)
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v22 = swift_allocObject(v21, 64, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 32) = 0xD000000000000012;
    *(_QWORD *)(v22 + 40) = 0x8000000100FBB3F0;
    v23 = v16;
    print(_:separator:terminator:)(v22, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v22);
    if (a2 <= 0.0)
      goto LABEL_3;
  }
  else
  {
    v17 = (float *)((char *)v15 + *(_QWORD *)((swift_isaMask & *v15) + 0x60));
    swift_beginAccess(v17, v49, 1, 0);
    *v17 = a1;
    v18 = v16;
    if (a2 <= 0.0)
    {
LABEL_3:
      v19 = sub_1004B804C((uint64_t *)&unk_1013E8830);
      v20 = swift_allocObject(v19, 64, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v20 + 56) = &type metadata for String;
      *(_QWORD *)(v20 + 32) = 0xD000000000000017;
      *(_QWORD *)(v20 + 40) = 0x8000000100FBB3D0;
      print(_:separator:terminator:)(v20, 32, 0xE100000000000000, 10, 0xE100000000000000);
      swift_bridgeObjectRelease(v20);
      goto LABEL_6;
    }
  }
  v24 = (float *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x68));
  swift_beginAccess(v24, v48, 1, 0);
  *v24 = a2;
LABEL_6:
  v25 = (float *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x70));
  swift_beginAccess(v25, v47, 1, 0);
  *v25 = a3;
  if (a4 <= 0.0)
  {
    v27 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v28 = swift_allocObject(v27, 64, 7);
    *(_OWORD *)(v28 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    *(_QWORD *)(v28 + 32) = 0xD000000000000015;
    *(_QWORD *)(v28 + 40) = 0x8000000100FBB3B0;
    print(_:separator:terminator:)(v28, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    v26 = (float *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x78));
    swift_beginAccess(v26, v46, 1, 0);
    *v26 = a4;
  }
  v29 = (float *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x60));
  swift_beginAccess(v29, v45, 0, 0);
  v30 = 1.0 / (float)((float)((float)(1.0 / (float)(a2 * 6.2832)) / (float)(1.0 / *v29)) + 1.0);
  v31 = objc_allocWithZone(v10);
  v32 = sub_10061A2A8(v30, 0.0);
  v33 = *(_QWORD *)((swift_isaMask & *v16) + 0x80);
  v34 = *(void **)((char *)v16 + v33);
  *(_QWORD *)((char *)v16 + v33) = v32;

  v35 = 1.0 / (float)((float)((float)(1.0 / (float)(a4 * 6.2832)) / (float)(1.0 / *v29)) + 1.0);
  v36 = objc_allocWithZone(v10);
  v37 = sub_10061A2A8(v35, 0.0);
  v38 = *(_QWORD *)((swift_isaMask & *v16) + 0x88);
  v39 = *(void **)((char *)v16 + v38);
  *(_QWORD *)((char *)v16 + v38) = v37;

  *(_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x90)) = 0xBFF0000000000000;
  v40 = (_DWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x98));
  swift_beginAccess(v40, v44, 1, 0);
  *v40 = 0;
  v41 = (_DWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xA0));
  swift_beginAccess(v41, v43, 1, 0);
  *v41 = 0;
  return v16;
}

_QWORD *sub_10061C09C(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  objc_class *v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  _QWORD *v16;
  double *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  double *v24;
  double *v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  double v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  double v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  _QWORD *v41;
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  objc_super v50;

  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x60)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x68)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x70)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78)) = 0;
  v9 = *(_QWORD *)((swift_isaMask & *v4) + 0x80);
  v10 = (objc_class *)sub_1004B804C(&qword_1013E8538);
  v11 = objc_allocWithZone(v10);
  v12 = v4;
  *(_QWORD *)((char *)v4 + v9) = sub_10061A48C(0.5, 0.0);
  v13 = *(_QWORD *)((swift_isaMask & *v12) + 0x88);
  v14 = objc_allocWithZone(v10);
  *(_QWORD *)((char *)v12 + v13) = sub_10061A48C(0.5, 0.0);
  *(_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x90)) = 0;
  *(_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x98)) = 0;
  *(_QWORD *)((char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0xA0)) = 0;

  v50.receiver = v12;
  v50.super_class = (Class)sub_1004B804C(qword_1013E83E0);
  v15 = objc_msgSendSuper2(&v50, "init");
  v16 = v15;
  if (a1 <= 0.0)
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v22 = swift_allocObject(v21, 64, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 32) = 0xD000000000000012;
    *(_QWORD *)(v22 + 40) = 0x8000000100FBB3F0;
    v23 = v16;
    print(_:separator:terminator:)(v22, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v22);
    if (a2 <= 0.0)
      goto LABEL_3;
  }
  else
  {
    v17 = (double *)((char *)v15 + *(_QWORD *)((swift_isaMask & *v15) + 0x60));
    swift_beginAccess(v17, v49, 1, 0);
    *v17 = a1;
    v18 = v16;
    if (a2 <= 0.0)
    {
LABEL_3:
      v19 = sub_1004B804C((uint64_t *)&unk_1013E8830);
      v20 = swift_allocObject(v19, 64, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v20 + 56) = &type metadata for String;
      *(_QWORD *)(v20 + 32) = 0xD000000000000017;
      *(_QWORD *)(v20 + 40) = 0x8000000100FBB3D0;
      print(_:separator:terminator:)(v20, 32, 0xE100000000000000, 10, 0xE100000000000000);
      swift_bridgeObjectRelease(v20);
      goto LABEL_6;
    }
  }
  v24 = (double *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x68));
  swift_beginAccess(v24, v48, 1, 0);
  *v24 = a2;
LABEL_6:
  v25 = (double *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x70));
  swift_beginAccess(v25, v47, 1, 0);
  *v25 = a3;
  if (a4 <= 0.0)
  {
    v27 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v28 = swift_allocObject(v27, 64, 7);
    *(_OWORD *)(v28 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    *(_QWORD *)(v28 + 32) = 0xD000000000000015;
    *(_QWORD *)(v28 + 40) = 0x8000000100FBB3B0;
    print(_:separator:terminator:)(v28, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    v26 = (double *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x78));
    swift_beginAccess(v26, v46, 1, 0);
    *v26 = a4;
  }
  v29 = (double *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x60));
  swift_beginAccess(v29, v45, 0, 0);
  v30 = 1.0 / (1.0 / (a2 * 6.2831853) / (1.0 / *v29) + 1.0);
  v31 = objc_allocWithZone(v10);
  v32 = sub_10061A48C(v30, 0.0);
  v33 = *(_QWORD *)((swift_isaMask & *v16) + 0x80);
  v34 = *(void **)((char *)v16 + v33);
  *(_QWORD *)((char *)v16 + v33) = v32;

  v35 = 1.0 / (1.0 / (a4 * 6.2831853) / (1.0 / *v29) + 1.0);
  v36 = objc_allocWithZone(v10);
  v37 = sub_10061A48C(v35, 0.0);
  v38 = *(_QWORD *)((swift_isaMask & *v16) + 0x88);
  v39 = *(void **)((char *)v16 + v38);
  *(_QWORD *)((char *)v16 + v38) = v37;

  *(_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x90)) = 0xBFF0000000000000;
  v40 = (_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x98));
  swift_beginAccess(v40, v44, 1, 0);
  *v40 = 0;
  v41 = (_QWORD *)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0xA0));
  swift_beginAccess(v41, v43, 1, 0);
  *v41 = 0;
  return v16;
}

_QWORD *CRLOneEuroFilter.init(freq:mincutoff:beta:dcutoff:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v9 = swift_isaMask & *v4;
  v10 = sub_10061E130(a1, a2, a3, a4);
  v11 = *(_QWORD *)(v9 + 80);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(a4, v11);
  v12(a3, v11);
  v12(a2, v11);
  v12(a1, v11);
  return v10;
}

uint64_t CRLOneEuroFilter.updateParams(freq:mincutoff:beta:dcutoff:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void (*v14)(char *, uint64_t);
  id v15;
  uint64_t v17;

  v8 = *(_QWORD *)((swift_isaMask & *v4) + 0x50);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(a1);
  v11 = (char *)&v17 - v10;
  CRLOneEuroFilter.setFrequency(_:)(v12);
  CRLOneEuroFilter.setMinCutoff(_:)(a2);
  CRLOneEuroFilter.setBeta(_:)(a3);
  CRLOneEuroFilter.setDerivateCutoff(_:)(a4);
  v13 = *(id *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x80));
  CRLOneEuroFilter.alpha(_:)(a2, (uint64_t)v11);
  sub_10061A000((uint64_t)v11);

  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  v15 = *(id *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x88));
  CRLOneEuroFilter.alpha(_:)(a4, (uint64_t)v11);
  sub_10061A000((uint64_t)v11);

  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v8);
}

uint64_t CRLOneEuroFilter.filter(value:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __n128 v29;
  char *v30;
  _QWORD *v31;
  double v32;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  __n128 v44;
  char *v45;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v47;
  void *v48;
  char *v49;
  __n128 v50;
  char *v51;
  id v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  __n128 v69;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char v83[24];
  char v84[24];
  char v85[24];
  char v86[24];
  char v87[24];
  char v88[24];
  char v89[24];

  v4 = v3;
  v80 = a1;
  v79 = a2;
  v6 = (_QWORD *)(swift_isaMask & *v3);
  v7 = v6[10];
  v81 = v6[11];
  v8 = *(_QWORD *)(v81 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, v7, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  __chkstk_darwin(AssociatedTypeWitness);
  v11 = (char *)&v71 - v10;
  v12 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v13);
  v77 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v75 = (char *)&v71 - v16;
  __chkstk_darwin(v17);
  v78 = (char *)&v71 - v18;
  __chkstk_darwin(v19);
  v76 = (char *)&v71 - v20;
  __chkstk_darwin(v21);
  v74 = (char *)&v71 - v22;
  __chkstk_darwin(v23);
  v82 = (char *)&v71 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v71 - v26;
  v28 = (char *)v4 + v6[19];
  v29 = swift_beginAccess(v28, v83, 0, 0);
  v73 = v12;
  (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v27, v28, v7, v29);
  v30 = v27;
  CRLOneEuroFilter.prevValue.setter((uint64_t)v27);
  v31 = (_QWORD *)(swift_isaMask & *v4);
  v32 = *(double *)((char *)v4 + v31[18]);
  if (v32 != -1.0 && a3 != -1.0)
  {
    if (v32 == a3)
      goto LABEL_11;
    dispatch thunk of BinaryFloatingPoint.init(_:)(v7, v81, 1.0 / (a3 - v32));
    CRLOneEuroFilter.freq.setter(v27);
    v31 = (_QWORD *)(swift_isaMask & *v4);
  }
  *(double *)((char *)v4 + v31[18]) = a3;
  v34 = *(_QWORD **)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x80));
  v35 = *v34 & swift_isaMask;
  if (*((_BYTE *)v34 + *(_QWORD *)(v35 + 0x78)) == 1)
  {
    v36 = (char *)v34 + *(_QWORD *)((*v34 & swift_isaMask) + 0x60);
    v37 = swift_beginAccess(v36, v84, 0, 0);
    v38 = (uint64_t)v74;
    (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v35 + 80) - 8) + 16))(v74, v36, v37);
    v39 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v81 + 16) + 16) + 8);
    dispatch thunk of static AdditiveArithmetic.- infix(_:_:)(v80, v38, v7);
    v40 = v73;
    v41 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v41(v38, v7);
    v42 = swift_isaMask & *v4;
    v43 = (char *)v4 + *(_QWORD *)(v42 + 0x60);
    v44 = swift_beginAccess(v43, v85, 0, 0);
    (*(void (**)(uint64_t, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v42 + 80) - 8) + 16))(v38, v43, v44);
    dispatch thunk of static Numeric.* infix(_:_:)(v30, v38, v7, v39);
    v41(v38, v7);
    v45 = v30;
    v41((uint64_t)v30, v7);
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v7, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
    dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 0.0);
    dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v11, v7, v8);
    v45 = v27;
    v38 = (uint64_t)v74;
    v40 = v73;
  }
  v47 = (_QWORD *)(swift_isaMask & *v4);
  v48 = *(void **)((char *)v4 + v47[17]);
  v49 = (char *)v4 + v47[15];
  v50 = swift_beginAccess(v49, v86, 0, 0);
  v51 = v76;
  (*(void (**)(char *, char *, __n128))(*(_QWORD *)(v47[10] - 8) + 16))(v76, v49, v50);
  v52 = v48;
  CRLOneEuroFilter.alpha(_:)((uint64_t)v51, v38);
  v53 = *(void (**)(char *, uint64_t))(v40 + 8);
  v53(v51, v7);
  sub_10061A000(v38);
  sub_10061A670((uint64_t)v82, v45);

  v53((char *)v38, v7);
  v54 = swift_isaMask & *v4;
  v55 = (char *)v4 + *(_QWORD *)(v54 + 0x68);
  v56 = swift_beginAccess(v55, v87, 0, 0);
  (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v54 + 80) - 8) + 16))(v51, v55, v56);
  v57 = swift_isaMask & *v4;
  v58 = (char *)v4 + *(_QWORD *)(v57 + 0x70);
  v59 = swift_beginAccess(v58, v88, 0, 0);
  v60 = v75;
  (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v57 + 80) - 8) + 16))(v75, v58, v59);
  v61 = *(_QWORD *)(v81 + 16);
  v62 = *(_QWORD *)(v61 + 16);
  v63 = *(_QWORD *)(*(_QWORD *)(v61 + 24) + 8);
  v72 = v45;
  v64 = v77;
  abs<A>(_:)(v45, v7, v63, v62);
  v65 = *(_QWORD *)(v62 + 8);
  v66 = (uint64_t)v78;
  dispatch thunk of static Numeric.* infix(_:_:)(v60, v64, v7, v65);
  v53(v64, v7);
  v53(v60, v7);
  dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)(v51, v66, v7, *(_QWORD *)(v65 + 8));
  v53((char *)v66, v7);
  v53(v51, v7);
  v67 = *(id *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x80));
  CRLOneEuroFilter.alpha(_:)(v38, v66);
  sub_10061A000(v66);
  sub_10061A670(v80, v51);

  v53((char *)v66, v7);
  CRLOneEuroFilter.currValue.setter((uint64_t)v51);
  v53((char *)v38, v7);
  v53(v72, v7);
  v53(v82, v7);
  v31 = (_QWORD *)(swift_isaMask & *v4);
LABEL_11:
  v68 = (char *)v4 + v31[19];
  v69 = swift_beginAccess(v68, v89, 0, 0);
  return (*(uint64_t (**)(uint64_t, char *, __n128))(*(_QWORD *)(v31[10] - 8) + 16))(v79, v68, v69);
}

void CRLOneEuroFilter.init()()
{
  sub_10061E878();
}

uint64_t sub_10061CE4C(_QWORD *a1, uint64_t a2)
{
  return sub_10061CE58(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_10061E878);
}

uint64_t sub_10061CE58(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  return a3(*(_QWORD *)((swift_isaMask & *a1) + 0x50), *(_QWORD *)((swift_isaMask & *a1) + 0x58));
}

id CRLOneEuroFilter.__deallocating_deinit()
{
  return sub_10061CE80((uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for CRLOneEuroFilter);
}

id sub_10061CE80(uint64_t (*a1)(_QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;
  objc_class *v2;
  objc_super v4;

  v2 = (objc_class *)a1(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50), *(_QWORD *)((swift_isaMask & *v1) + 0x58));
  v4.receiver = v1;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_10061CED0(char *a1)
{
  uint64_t v2;
  void (*v4)(char *, uint64_t);

  v2 = *(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x50);
  v4 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x60)], v2);
  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x68)], v2);
  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x70)], v2);
  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x78)], v2);

  v4(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x98)], v2);
  return ((uint64_t (*)(char *, uint64_t))v4)(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xA0)], v2);
}

float CRLOneEuroFilterF.currValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)
     + *(_QWORD *)((swift_isaMask & **(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)) + 0x98);
  swift_beginAccess(v1, v3, 0, 0);
  return *(float *)v1;
}

float CRLOneEuroFilterF.prevValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)
     + *(_QWORD *)((swift_isaMask & **(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)) + 0xA0);
  swift_beginAccess(v1, v3, 0, 0);
  return *(float *)v1;
}

id CRLOneEuroFilterF.__allocating_init(freq:mincutoff:beta:dcutoff:)(float a1, float a2, float a3, float a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  char *v11;
  objc_super v13;

  v5 = v4;
  v10 = objc_allocWithZone(v4);
  objc_allocWithZone((Class)sub_1004B804C(&qword_1013E83C8));
  v11 = (char *)v10;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f] = sub_10061BBC0(a1, a2, a3, a4);

  v13.receiver = v11;
  v13.super_class = v5;
  return objc_msgSendSuper2(&v13, "init");
}

id CRLOneEuroFilterF.init(freq:mincutoff:beta:dcutoff:)(float a1, float a2, float a3, float a4)
{
  void *v4;
  char *v9;
  objc_super v11;

  objc_allocWithZone((Class)sub_1004B804C(&qword_1013E83C8));
  v9 = v4;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f] = sub_10061BBC0(a1, a2, a3, a4);

  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for CRLOneEuroFilterF();
  return objc_msgSendSuper2(&v11, "init");
}

Swift::Void __swiftcall CRLOneEuroFilterF.updateParams(freq:mincutoff:beta:dcutoff:)(Swift::Float freq, Swift::Float mincutoff, Swift::Float beta, Swift::Float dcutoff)
{
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(Swift::Float *, Swift::Float *, Swift::Float *, Swift::Float *);
  _QWORD *v7;
  Swift::Float v8;
  Swift::Float v9;
  Swift::Float v10;
  Swift::Float v11;

  v5 = *(_QWORD **)(v4 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f);
  v10 = mincutoff;
  v11 = freq;
  v8 = dcutoff;
  v9 = beta;
  v6 = *(void (**)(Swift::Float *, Swift::Float *, Swift::Float *, Swift::Float *))((swift_isaMask & *v5)
                                                                                             + 0x1B0);
  v7 = v5;
  v6(&v11, &v10, &v9, &v8);

}

Swift::Float __swiftcall CRLOneEuroFilterF.filter(value:timestamp:)(Swift::Float value, Swift::Double timestamp)
{
  uint64_t v2;
  _QWORD *v4;
  void (*v5)(uint64_t *__return_ptr, Swift::Float *, double);
  _QWORD *v6;
  Swift::Float v8;
  uint64_t v9;

  v4 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f);
  v8 = value;
  v5 = *(void (**)(uint64_t *__return_ptr, Swift::Float *, double))((swift_isaMask & *v4) + 0x1B8);
  v6 = v4;
  v5(&v9, &v8, timestamp);

  return *(float *)&v9;
}

void CRLOneEuroFilterF.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLOneEuroFilterF", 26, "init()", 6, 0);
  __break(1u);
}

id CRLOneEuroFilterF.__deallocating_deinit()
{
  return sub_1004C3370(type metadata accessor for CRLOneEuroFilterF);
}

double CRLOneEuroFilterPoint.currValue.getter()
{
  uint64_t v0;
  double *v1;
  double v2;
  uint64_t v4;
  _BYTE v5[24];

  v1 = (double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter)
                + *(_QWORD *)((swift_isaMask & **(_QWORD **)(v0
                                                           + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter))
                            + 0x98));
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  swift_beginAccess(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter)+ *(_QWORD *)((swift_isaMask & **(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter)) + 0x98), &v4, 0, 0);
  return v2;
}

double CRLOneEuroFilterPoint.prevValue.getter()
{
  uint64_t v0;
  double *v1;
  double v2;
  uint64_t v4;
  _BYTE v5[24];

  v1 = (double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter)
                + *(_QWORD *)((swift_isaMask & **(_QWORD **)(v0
                                                           + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter))
                            + 0xA0));
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  swift_beginAccess(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter)+ *(_QWORD *)((swift_isaMask & **(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter)) + 0xA0), &v4, 0, 0);
  return v2;
}

id CRLOneEuroFilterPoint.__allocating_init(freq:mincutoff:beta:dcutoff:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  objc_class *v11;
  char *v12;
  id v13;
  objc_super v15;

  v5 = v4;
  v10 = objc_allocWithZone(v4);
  v11 = (objc_class *)sub_1004B804C(qword_1013E83E0);
  objc_allocWithZone(v11);
  v12 = (char *)v10;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter] = sub_10061C09C(a1, a2, a3, a4);
  v13 = objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter] = sub_10061C09C(a1, a2, a3, a4);

  v15.receiver = v12;
  v15.super_class = v5;
  return objc_msgSendSuper2(&v15, "init");
}

id CRLOneEuroFilterPoint.init(freq:mincutoff:beta:dcutoff:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *v9;
  char *v10;
  id v11;
  objc_super v13;

  v9 = (objc_class *)sub_1004B804C(qword_1013E83E0);
  objc_allocWithZone(v9);
  v10 = v4;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter] = sub_10061C09C(a1, a2, a3, a4);
  v11 = objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter] = sub_10061C09C(a1, a2, a3, a4);

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for CRLOneEuroFilterPoint();
  return objc_msgSendSuper2(&v13, "init");
}

Swift::Void __swiftcall CRLOneEuroFilterPoint.updateParams(freq:mincutoff:beta:dcutoff:)(Swift::Double freq, Swift::Double mincutoff, Swift::Double beta, Swift::Double dcutoff)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  void (*v11)(Swift::Double *, Swift::Double *, Swift::Double *, Swift::Double *);
  _QWORD *v12;
  _QWORD *v13;
  void (*v14)(Swift::Double *, Swift::Double *, Swift::Double *, Swift::Double *);
  _QWORD *v15;
  Swift::Double v16;
  Swift::Double v17;
  Swift::Double v18;
  Swift::Double v19;

  v5 = v4;
  v10 = *(_QWORD **)(v4 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter);
  v18 = mincutoff;
  v19 = freq;
  v16 = dcutoff;
  v17 = beta;
  v11 = *(void (**)(Swift::Double *, Swift::Double *, Swift::Double *, Swift::Double *))((swift_isaMask & *v10)
                                                                                                  + 0x1B0);
  v12 = v10;
  v11(&v19, &v18, &v17, &v16);

  v13 = *(_QWORD **)(v5 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter);
  v18 = mincutoff;
  v19 = freq;
  v16 = dcutoff;
  v17 = beta;
  v14 = *(void (**)(Swift::Double *, Swift::Double *, Swift::Double *, Swift::Double *))((swift_isaMask & *v13)
                                                                                                  + 0x1B0);
  v15 = v13;
  v14(&v19, &v18, &v17, &v16);

}

double CRLOneEuroFilterPoint.filter(value:timestamp:)(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  void (*v8)(double *__return_ptr, double *, double);
  _QWORD *v9;
  _QWORD *v10;
  double v11;
  void (*v12)(double *__return_ptr, double *, double);
  _QWORD *v13;
  double v15;
  double v16;
  double v17;

  v4 = v3;
  v7 = *(_QWORD **)(v3 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter);
  v16 = a1;
  v8 = *(void (**)(double *__return_ptr, double *, double))((swift_isaMask & *v7) + 0x1B8);
  v9 = v7;
  v8(&v17, &v16, a3);

  v10 = *(_QWORD **)(v4 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter);
  v11 = v17;
  v15 = a2;
  v12 = *(void (**)(double *__return_ptr, double *, double))((swift_isaMask & *v10) + 0x1B8);
  v13 = v10;
  v12(&v16, &v15, a3);

  return v11;
}

void CRLOneEuroFilterPoint.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLOneEuroFilterPoint", 30, "init()", 6, 0);
  __break(1u);
}

id CRLOneEuroFilterPoint.__deallocating_deinit()
{
  return sub_1004C3370(type metadata accessor for CRLOneEuroFilterPoint);
}

_QWORD *sub_10061DE04(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v9;
  uint64_t v10;
  objc_class *v11;
  _QWORD *v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  objc_super v23;

  v20 = a2;
  v21 = a1;
  v3 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v19 = *(_QWORD *)((swift_isaMask & *v2) + 0x58);
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 16) + 16) + 8) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4, v3, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated type descriptor for ExpressibleByIntegerLiteral.IntegerLiteralType);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v19 - v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated conformance descriptor for ExpressibleByIntegerLiteral.ExpressibleByIntegerLiteral.IntegerLiteralType: _ExpressibleByBuiltinIntegerLiteral);
  v9 = v2;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, AssociatedTypeWitness, AssociatedConformanceWitness);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v7, v3, v4);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, AssociatedTypeWitness, AssociatedConformanceWitness);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v7, v3, v4);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, AssociatedTypeWitness, AssociatedConformanceWitness);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v7, v3, v4);
  *((_BYTE *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0x78)) = 0;

  v11 = (objc_class *)type metadata accessor for CRLLowPassFilter(0, v3, v19, v10);
  v23.receiver = v9;
  v23.super_class = v11;
  v12 = objc_msgSendSuper2(&v23, "init");
  v13 = (char *)v12 + *(_QWORD *)((swift_isaMask & *v12) + 0x60);
  swift_beginAccess(v13, v22, 33, 0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24);
  v15 = v12;
  v16 = v20;
  v14(v13, v20, v3);
  swift_endAccess(v22);
  v17 = (char *)v15 + *(_QWORD *)((swift_isaMask & *v15) + 0x70);
  swift_beginAccess(v17, v22, 33, 0);
  v14(v17, v16, v3);
  swift_endAccess(v22);
  sub_10061A000(v21);

  *((_BYTE *)v15 + *(_QWORD *)((swift_isaMask & *v15) + 0x78)) = 0;
  return v15;
}

_QWORD *sub_10061E0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v7;

  v7 = objc_allocWithZone((Class)type metadata accessor for CRLLowPassFilter(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_10061DE04(a1, a2);
}

void sub_10061E104()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLLowPassFilter", 25, "init()", 6, 0);
  __break(1u);
}

_QWORD *sub_10061E130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_class *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, __n128);
  char *v62;
  __n128 v63;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t AssociatedTypeWitness;
  uint64_t v82;
  _BYTE v83[24];
  objc_super v84;

  v73 = a3;
  v74 = a4;
  v71 = a1;
  v72 = a2;
  v5 = swift_isaMask & *v4;
  v6 = *(_QWORD *)(v5 + 0x50);
  v77 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v79 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v76 = (uint64_t)&v65 - v9;
  v10 = *(_QWORD *)(v5 + 88);
  v82 = *(_QWORD *)(v10 + 8);
  v11 = v10;
  v78 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v82, v6, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  __chkstk_darwin(AssociatedTypeWitness);
  v80 = (char *)&v65 - v12;
  v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 16) + 16) + 8) + 16);
  v14 = swift_getAssociatedTypeWitness(0, v13, v6, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated type descriptor for ExpressibleByIntegerLiteral.IntegerLiteralType);
  __chkstk_darwin(v14);
  v16 = (char *)&v65 - v15;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v13, v6, v14, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated conformance descriptor for ExpressibleByIntegerLiteral.ExpressibleByIntegerLiteral.IntegerLiteralType: _ExpressibleByBuiltinIntegerLiteral);
  v18 = v4;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v14, AssociatedConformanceWitness);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v16, v6, v13);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v14, AssociatedConformanceWitness);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v16, v6, v13);
  v69 = AssociatedConformanceWitness;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v14, AssociatedConformanceWitness);
  v68 = v13;
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v16, v6, v13);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v14, AssociatedConformanceWitness);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v16, v6, v13);
  v66 = *(_QWORD *)((swift_isaMask & *v18) + 0x80);
  v19 = v78;
  v75 = type metadata accessor for CRLLowPassFilter(0, v6, v78, v20);
  v21 = AssociatedTypeWitness;
  v22 = v82;
  v23 = swift_getAssociatedConformanceWitness(v82, v6, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
  v24 = v80;
  v70 = v23;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(v21, v23, 0.5);
  v25 = v76;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v24, v6, v22);
  v26 = (uint64_t)v79;
  sub_1004B2E88(v6, v19);
  v29 = sub_10061E0BC(v25, v26, v27, v28);
  v30 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v30(v26, v6);
  v30(v25, v6);
  *(_QWORD *)((char *)v18 + v66) = v29;
  v66 = *(_QWORD *)((swift_isaMask & *v18) + 0x88);
  v31 = v80;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, v23, 0.5);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v31, v6, v82);
  v32 = (uint64_t)v79;
  sub_1004B2E88(v6, v78);
  v35 = sub_10061E0BC(v25, v32, v33, v34);
  v67 = v30;
  v30(v32, v6);
  v30(v25, v6);
  *(_QWORD *)((char *)v18 + v66) = v35;
  *(_QWORD *)((char *)v18 + *(_QWORD *)((swift_isaMask & *v18) + 0x90)) = 0;
  v36 = v69;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v14, v69);
  v37 = v68;
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v16, v6, v68);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, v14, v36);
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v16, v6, v37);

  v38 = v78;
  v40 = (objc_class *)type metadata accessor for CRLOneEuroFilter(0, v6, v78, v39);
  v84.receiver = v18;
  v84.super_class = v40;
  v41 = objc_msgSendSuper2(&v84, "init");
  CRLOneEuroFilter.setFrequency(_:)(v71);
  v42 = v72;
  CRLOneEuroFilter.setMinCutoff(_:)(v72);
  CRLOneEuroFilter.setBeta(_:)(v73);
  v43 = v74;
  CRLOneEuroFilter.setDerivateCutoff(_:)(v74);
  v44 = v76;
  CRLOneEuroFilter.alpha(_:)(v42, v76);
  v45 = (uint64_t)v79;
  sub_1004B2E88(v6, v38);
  v48 = sub_10061E0BC(v44, v45, v46, v47);
  v49 = v67;
  v67(v45, v6);
  v49(v44, v6);
  v50 = *(_QWORD *)((swift_isaMask & *v41) + 0x80);
  v51 = *(void **)((char *)v41 + v50);
  *(_QWORD *)((char *)v41 + v50) = v48;

  CRLOneEuroFilter.alpha(_:)(v43, v44);
  sub_1004B2E88(v6, v38);
  v54 = sub_10061E0BC(v44, v45, v52, v53);
  v49(v45, v6);
  v49(v44, v6);
  v55 = *(_QWORD *)((swift_isaMask & *v41) + 0x88);
  v56 = *(void **)((char *)v41 + v55);
  *(_QWORD *)((char *)v41 + v55) = v54;

  *(_QWORD *)((char *)v41 + *(_QWORD *)((swift_isaMask & *v41) + 0x90)) = 0xBFF0000000000000;
  v57 = v80;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, v70, 0.0);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v57, v6, v82);

  v58 = (char *)v41 + *(_QWORD *)((swift_isaMask & *v41) + 0x98);
  v59 = swift_beginAccess(v58, v83, 33, 0);
  v60 = v77;
  v61 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v77 + 40);
  v61(v58, v44, v6, v59);
  swift_endAccess(v83);
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v44, v58, v6);
  v62 = (char *)v41 + *(_QWORD *)((swift_isaMask & *v41) + 0xA0);
  v63 = swift_beginAccess(v62, v83, 33, 0);
  v61(v62, v44, v6, v63);
  swift_endAccess(v83);
  return v41;
}

void sub_10061E878()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLOneEuroFilter", 25, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for CRLOneEuroFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLOneEuroFilter);
}

uint64_t type metadata accessor for CRLOneEuroFilterF()
{
  return objc_opt_self(_TtC8Freeform17CRLOneEuroFilterF);
}

uint64_t type metadata accessor for CRLOneEuroFilterPoint()
{
  return objc_opt_self(_TtC8Freeform21CRLOneEuroFilterPoint);
}

uint64_t sub_10061E8F0@<X0>(uint64_t a1@<X8>)
{
  return CRLOneEuroFilter.currValue.getter(a1);
}

uint64_t sub_10061E910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10061B1A4(a1, a2, a3, a4, (uint64_t (*)(char *))CRLOneEuroFilter.currValue.setter);
}

uint64_t sub_10061E92C()
{
  return 16;
}

__n128 sub_10061E938(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10061E944@<X0>(uint64_t a1@<X8>)
{
  return CRLOneEuroFilter.prevValue.getter(a1);
}

uint64_t sub_10061E964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10061B1A4(a1, a2, a3, a4, (uint64_t (*)(char *))CRLOneEuroFilter.prevValue.setter);
}

uint64_t sub_10061E980()
{
  return 16;
}

__n128 sub_10061E98C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10061E998(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = &unk_100EFF1E8;
    result = swift_initClassMetadata2(a1, 0, 4, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLLowPassFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLLowPassFilter);
}

uint64_t sub_10061EA20(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = v4[0];
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = v4[0];
    v4[8] = v4[0];
    result = swift_initClassMetadata2(a1, 0, 9, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10061EABC(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100601E64);
}

uint64_t sub_10061EAC8(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100601E88);
}

uint64_t sub_10061EAD4(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006020B4);
}

uint64_t sub_10061EAE0(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006022C8);
}

void sub_10061EAEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100D0EF94(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_10061EC3C(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006024DC);
}

uint64_t sub_10061EC48(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602904);
}

void sub_10061EC54(uint64_t a1)
{
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;

  v4 = v2;
  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    a1 = __CocoaSet.count.getter(a1);
    v6 = a1;
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 16);
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v7 < 0)
    v23 = *v4;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  v9 = v24 + v6;
  if (__OFADD__(v24, v6))
    goto LABEL_30;
LABEL_8:
  v10 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v10;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v13 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v29 = v10;
    else
      v29 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v14 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v9)
    v14 = v9;
  swift_bridgeObjectRetain(v10);
  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v14, 1, v10);
  swift_bridgeObjectRelease(*v4);
  *v4 = v15;
  v13 = v15 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (*(_QWORD *)(v13 + 24) >> 1) - v16;
  a1 = (uint64_t)sub_10062DEC0(&v56, (uint64_t **)(v13 + 8 * v16 + 32), v17, v5, type metadata accessor for CRLBoardItem, (unint64_t *)&qword_1013E4190);
  if (a1 < v6)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (a1 >= 1)
  {
    v18 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = __OFADD__(v18, a1);
    v20 = v18 + a1;
    if (v19)
    {
      __break(1u);
LABEL_42:
      v30 = __CocoaSet.Iterator.next()(a1);
      if (!v30)
        goto LABEL_86;
      v31 = v30;
      v54 = v30;
      v32 = type metadata accessor for CRLBoardItem(0);
      swift_unknownObjectRetain(v31);
      swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v32, 7);
      v28 = v55;
      a1 = swift_unknownObjectRelease(v31);
      while (2)
      {
        if (!v28)
        {
          v6 = v56;
LABEL_86:
          v21 = v6;
          goto LABEL_24;
        }
        while (1)
        {
          v33 = *v4 & 0xFFFFFFFFFFFFFF8;
          v34 = *(_QWORD *)(v33 + 0x18);
          if (v3 + 1 > (uint64_t)(v34 >> 1))
          {
            a1 = specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v3 + 1, 1);
            v33 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          v35 = *(_QWORD *)(v33 + 24) >> 1;
          if (v3 < v35)
            break;
LABEL_46:
          *(_QWORD *)(v33 + 16) = v3;
        }
        v36 = v33 + 32;
        while (1)
        {
          *(_QWORD *)(v36 + 8 * v3++) = v28;
          v37 = v56;
          v38 = v59;
          if ((v56 & 0x8000000000000000) == 0)
            break;
          v41 = __CocoaSet.Iterator.next()(a1);
          if (!v41)
            goto LABEL_84;
          v42 = v41;
          v54 = v41;
          v43 = type metadata accessor for CRLBoardItem(0);
          swift_unknownObjectRetain(v42);
          swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v43, 7);
          v28 = v55;
          a1 = swift_unknownObjectRelease(v42);
LABEL_58:
          if (!v28)
          {
            v37 = v56;
LABEL_84:
            *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v3;
            v21 = v37;
            goto LABEL_24;
          }
          if (v3 >= v35)
          {
            v33 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_46;
          }
        }
        if (v60)
        {
          v39 = (v60 - 1) & v60;
          v40 = __clz(__rbit64(v60)) | (v59 << 6);
LABEL_54:
          v28 = *(void **)(*(_QWORD *)(v56 + 48) + 8 * v40);
          a1 = v28;
LABEL_55:
          v59 = v38;
          v60 = v39;
          goto LABEL_58;
        }
        v44 = v59 + 1;
        if (__OFADD__(v59, 1))
        {
          __break(1u);
LABEL_109:
          v28 = 0;
          v26 = 0;
          v25 = v1;
LABEL_36:
          v59 = v25;
          v60 = v26;
          continue;
        }
        break;
      }
      v45 = (unint64_t)(v58 + 64) >> 6;
      if (v44 >= v45)
      {
        v28 = 0;
        v39 = 0;
        goto LABEL_55;
      }
      v46 = *(_QWORD *)(v57 + 8 * v44);
      if (v46)
      {
LABEL_64:
        v39 = (v46 - 1) & v46;
        v40 = __clz(__rbit64(v46)) + (v44 << 6);
        v38 = v44;
        goto LABEL_54;
      }
      v47 = v59 + 2;
      if (v59 + 2 < v45)
      {
        v46 = *(_QWORD *)(v57 + 8 * v47);
        if (v46)
        {
LABEL_68:
          v44 = v47;
          goto LABEL_64;
        }
        v1 = v59 + 3;
        if (v59 + 3 >= v45)
          goto LABEL_81;
        v46 = *(_QWORD *)(v57 + 8 * v1);
        if (v46)
        {
          v44 = v59 + 3;
          goto LABEL_64;
        }
        v47 = v59 + 4;
        if (v59 + 4 >= v45)
        {
          v28 = 0;
          v39 = 0;
          v38 = v59 + 3;
          goto LABEL_55;
        }
        v46 = *(_QWORD *)(v57 + 8 * v47);
        if (v46)
          goto LABEL_68;
        v44 = v59 + 5;
        if (v59 + 5 >= v45)
        {
LABEL_81:
          v28 = 0;
          v39 = 0;
          v38 = v47;
          goto LABEL_55;
        }
        v46 = *(_QWORD *)(v57 + 8 * v44);
        if (v46)
          goto LABEL_64;
        v44 = v45 - 1;
        v48 = v59 + 6;
        while (v45 != v48)
        {
          v46 = *(_QWORD *)(v57 + 8 * v48++);
          if (v46)
          {
            v44 = v48 - 1;
            goto LABEL_64;
          }
        }
      }
      v28 = 0;
      v39 = 0;
      v38 = v44;
      goto LABEL_55;
    }
    *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
  }
  if (a1 != v17)
  {
    v21 = v56;
LABEL_24:
    v22 = sub_1004D284C(v21);
    specialized Array._endMutation()(v22);
    return;
  }
LABEL_32:
  v3 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v56;
  v25 = v59;
  if (v56 < 0)
    goto LABEL_42;
  if (v60)
  {
    v26 = (v60 - 1) & v60;
    v27 = __clz(__rbit64(v60)) | (v59 << 6);
LABEL_35:
    v28 = *(void **)(*(_QWORD *)(v56 + 48) + 8 * v27);
    a1 = v28;
    goto LABEL_36;
  }
  v49 = v59 + 1;
  if (!__OFADD__(v59, 1))
  {
    v50 = (unint64_t)(v58 + 64) >> 6;
    if (v49 >= v50)
    {
      v28 = 0;
      v26 = 0;
      goto LABEL_36;
    }
    v51 = *(_QWORD *)(v57 + 8 * v49);
    if (v51)
      goto LABEL_90;
    v52 = v59 + 2;
    if (v59 + 2 >= v50)
    {
LABEL_106:
      v28 = 0;
      v26 = 0;
      v25 = v49;
      goto LABEL_36;
    }
    v51 = *(_QWORD *)(v57 + 8 * v52);
    if (v51)
      goto LABEL_94;
    v1 = v59 + 3;
    if (v59 + 3 < v50)
    {
      v51 = *(_QWORD *)(v57 + 8 * v1);
      if (v51)
      {
        v49 = v59 + 3;
        goto LABEL_90;
      }
      v52 = v59 + 4;
      if (v59 + 4 >= v50)
        goto LABEL_109;
      v51 = *(_QWORD *)(v57 + 8 * v52);
      if (v51)
      {
LABEL_94:
        v49 = v52;
LABEL_90:
        v26 = (v51 - 1) & v51;
        v27 = __clz(__rbit64(v51)) + (v49 << 6);
        v25 = v49;
        goto LABEL_35;
      }
      v49 = v59 + 5;
      if (v59 + 5 < v50)
      {
        v51 = *(_QWORD *)(v57 + 8 * v49);
        if (!v51)
        {
          v49 = v50 - 1;
          v53 = v59 + 6;
          do
          {
            if (v50 == v53)
              goto LABEL_106;
            v51 = *(_QWORD *)(v57 + 8 * v53++);
          }
          while (!v51);
          v49 = v53 - 1;
        }
        goto LABEL_90;
      }
    }
    v28 = 0;
    v26 = 0;
    v25 = v52;
    goto LABEL_36;
  }
  __break(1u);
}

void sub_10061F240(uint64_t a1)
{
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;

  v4 = v2;
  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    a1 = __CocoaSet.count.getter(a1);
    v6 = a1;
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 16);
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v7 < 0)
    v23 = *v4;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  v9 = v24 + v6;
  if (__OFADD__(v24, v6))
    goto LABEL_30;
LABEL_8:
  v10 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v10;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v13 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v29 = v10;
    else
      v29 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v14 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v9)
    v14 = v9;
  swift_bridgeObjectRetain(v10);
  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v14, 1, v10);
  swift_bridgeObjectRelease(*v4);
  *v4 = v15;
  v13 = v15 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (*(_QWORD *)(v13 + 24) >> 1) - v16;
  a1 = (uint64_t)sub_10062CBF8(&v56, (uint64_t **)(v13 + 8 * v16 + 32), v17, v5, (unint64_t *)&qword_1013E56B0, off_101229828, (unint64_t *)&qword_1013E8770);
  if (a1 < v6)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (a1 >= 1)
  {
    v18 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = __OFADD__(v18, a1);
    v20 = v18 + a1;
    if (v19)
    {
      __break(1u);
LABEL_42:
      v30 = __CocoaSet.Iterator.next()(a1);
      if (!v30)
        goto LABEL_86;
      v31 = v30;
      v54 = v30;
      v32 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      swift_unknownObjectRetain(v31);
      swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v32, 7);
      v28 = v55;
      a1 = swift_unknownObjectRelease(v31);
      while (2)
      {
        if (!v28)
        {
          v6 = v56;
LABEL_86:
          v21 = v6;
          goto LABEL_24;
        }
        while (1)
        {
          v33 = *v4 & 0xFFFFFFFFFFFFFF8;
          v34 = *(_QWORD *)(v33 + 0x18);
          if (v3 + 1 > (uint64_t)(v34 >> 1))
          {
            a1 = specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v3 + 1, 1);
            v33 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          v35 = *(_QWORD *)(v33 + 24) >> 1;
          if (v3 < v35)
            break;
LABEL_46:
          *(_QWORD *)(v33 + 16) = v3;
        }
        v36 = v33 + 32;
        while (1)
        {
          *(_QWORD *)(v36 + 8 * v3++) = v28;
          v37 = v56;
          v38 = v59;
          if ((v56 & 0x8000000000000000) == 0)
            break;
          v41 = __CocoaSet.Iterator.next()(a1);
          if (!v41)
            goto LABEL_84;
          v42 = v41;
          v54 = v41;
          v43 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
          swift_unknownObjectRetain(v42);
          swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v43, 7);
          v28 = v55;
          a1 = swift_unknownObjectRelease(v42);
LABEL_58:
          if (!v28)
          {
            v37 = v56;
LABEL_84:
            *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v3;
            v21 = v37;
            goto LABEL_24;
          }
          if (v3 >= v35)
          {
            v33 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_46;
          }
        }
        if (v60)
        {
          v39 = (v60 - 1) & v60;
          v40 = __clz(__rbit64(v60)) | (v59 << 6);
LABEL_54:
          v28 = *(void **)(*(_QWORD *)(v56 + 48) + 8 * v40);
          a1 = v28;
LABEL_55:
          v59 = v38;
          v60 = v39;
          goto LABEL_58;
        }
        v44 = v59 + 1;
        if (__OFADD__(v59, 1))
        {
          __break(1u);
LABEL_109:
          v28 = 0;
          v26 = 0;
          v25 = v1;
LABEL_36:
          v59 = v25;
          v60 = v26;
          continue;
        }
        break;
      }
      v45 = (unint64_t)(v58 + 64) >> 6;
      if (v44 >= v45)
      {
        v28 = 0;
        v39 = 0;
        goto LABEL_55;
      }
      v46 = *(_QWORD *)(v57 + 8 * v44);
      if (v46)
      {
LABEL_64:
        v39 = (v46 - 1) & v46;
        v40 = __clz(__rbit64(v46)) + (v44 << 6);
        v38 = v44;
        goto LABEL_54;
      }
      v47 = v59 + 2;
      if (v59 + 2 < v45)
      {
        v46 = *(_QWORD *)(v57 + 8 * v47);
        if (v46)
        {
LABEL_68:
          v44 = v47;
          goto LABEL_64;
        }
        v1 = v59 + 3;
        if (v59 + 3 >= v45)
          goto LABEL_81;
        v46 = *(_QWORD *)(v57 + 8 * v1);
        if (v46)
        {
          v44 = v59 + 3;
          goto LABEL_64;
        }
        v47 = v59 + 4;
        if (v59 + 4 >= v45)
        {
          v28 = 0;
          v39 = 0;
          v38 = v59 + 3;
          goto LABEL_55;
        }
        v46 = *(_QWORD *)(v57 + 8 * v47);
        if (v46)
          goto LABEL_68;
        v44 = v59 + 5;
        if (v59 + 5 >= v45)
        {
LABEL_81:
          v28 = 0;
          v39 = 0;
          v38 = v47;
          goto LABEL_55;
        }
        v46 = *(_QWORD *)(v57 + 8 * v44);
        if (v46)
          goto LABEL_64;
        v44 = v45 - 1;
        v48 = v59 + 6;
        while (v45 != v48)
        {
          v46 = *(_QWORD *)(v57 + 8 * v48++);
          if (v46)
          {
            v44 = v48 - 1;
            goto LABEL_64;
          }
        }
      }
      v28 = 0;
      v39 = 0;
      v38 = v44;
      goto LABEL_55;
    }
    *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
  }
  if (a1 != v17)
  {
    v21 = v56;
LABEL_24:
    v22 = sub_1004D284C(v21);
    specialized Array._endMutation()(v22);
    return;
  }
LABEL_32:
  v3 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v56;
  v25 = v59;
  if (v56 < 0)
    goto LABEL_42;
  if (v60)
  {
    v26 = (v60 - 1) & v60;
    v27 = __clz(__rbit64(v60)) | (v59 << 6);
LABEL_35:
    v28 = *(void **)(*(_QWORD *)(v56 + 48) + 8 * v27);
    a1 = v28;
    goto LABEL_36;
  }
  v49 = v59 + 1;
  if (!__OFADD__(v59, 1))
  {
    v50 = (unint64_t)(v58 + 64) >> 6;
    if (v49 >= v50)
    {
      v28 = 0;
      v26 = 0;
      goto LABEL_36;
    }
    v51 = *(_QWORD *)(v57 + 8 * v49);
    if (v51)
      goto LABEL_90;
    v52 = v59 + 2;
    if (v59 + 2 >= v50)
    {
LABEL_106:
      v28 = 0;
      v26 = 0;
      v25 = v49;
      goto LABEL_36;
    }
    v51 = *(_QWORD *)(v57 + 8 * v52);
    if (v51)
      goto LABEL_94;
    v1 = v59 + 3;
    if (v59 + 3 < v50)
    {
      v51 = *(_QWORD *)(v57 + 8 * v1);
      if (v51)
      {
        v49 = v59 + 3;
        goto LABEL_90;
      }
      v52 = v59 + 4;
      if (v59 + 4 >= v50)
        goto LABEL_109;
      v51 = *(_QWORD *)(v57 + 8 * v52);
      if (v51)
      {
LABEL_94:
        v49 = v52;
LABEL_90:
        v26 = (v51 - 1) & v51;
        v27 = __clz(__rbit64(v51)) + (v49 << 6);
        v25 = v49;
        goto LABEL_35;
      }
      v49 = v59 + 5;
      if (v59 + 5 < v50)
      {
        v51 = *(_QWORD *)(v57 + 8 * v49);
        if (!v51)
        {
          v49 = v50 - 1;
          v53 = v59 + 6;
          do
          {
            if (v50 == v53)
              goto LABEL_106;
            v51 = *(_QWORD *)(v57 + 8 * v53++);
          }
          while (!v51);
          v49 = v53 - 1;
        }
        goto LABEL_90;
      }
    }
    v28 = 0;
    v26 = 0;
    v25 = v52;
    goto LABEL_36;
  }
  __break(1u);
}

uint64_t sub_10061F854(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602928);
}

uint64_t sub_10061F860(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10060294C);
}

void sub_10061F86C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_100D0FAA0(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

void sub_10061F9E0(uint64_t a1)
{
  sub_1006202F8(a1, (uint64_t (*)(void))sub_100D0FAB4, &qword_1013E20A8);
}

void sub_10061F9F4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_100D0FD48(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E87B0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

void sub_10061FB6C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_100D0FD5C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v24 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v24, 1092, 0);
  __break(1u);
}

void sub_10061FCD8(uint64_t a1)
{
  sub_1006202F8(a1, (uint64_t (*)(void))sub_100D101C4, &qword_1013E8700);
}

uint64_t sub_10061FCEC(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602B84);
}

uint64_t sub_10061FCF8(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602BA8);
}

void sub_10061FD04(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      v9 = *(_QWORD *)(a1 + 16);
      if (v9)
        goto LABEL_5;
LABEL_18:
      if (!v2)
        goto LABEL_19;
      goto LABEL_21;
    }
  }
  if (v4 <= v5)
    v16 = v4 + v2;
  else
    v16 = v4;
  v3 = sub_100D104D4(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  v8 = v3[3] >> 1;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_18;
LABEL_5:
  v10 = v3[2];
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9)
    goto LABEL_24;
  type metadata accessor for ActivityType(0);
  swift_arrayInitWithCopy(v11);
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = v3[2];
  v14 = __OFADD__(v13, v9);
  v15 = v13 + v9;
  if (!v14)
  {
    v3[2] = v15;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
}

uint64_t sub_10061FE74(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602BCC);
}

uint64_t sub_10061FE80(uint64_t a1)
{
  return sub_100621134(a1, (uint64_t (*)(void))sub_100D10734, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

uint64_t sub_10061FE94(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602BF0);
}

uint64_t sub_10061FEA0(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100602E1C);
}

void sub_10061FEAC(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100D109C4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[2 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[2 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_10061FFF4(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100D10AD0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  sub_1004B804C(&qword_1013E56C8);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_100620168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100D0F530(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  sub_1004B804C((uint64_t *)&unk_1013E8840);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1006202D0(uint64_t a1)
{
  return sub_100621134(a1, (uint64_t (*)(void))sub_100D0EC28, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

void sub_1006202E4(uint64_t a1)
{
  sub_1006202F8(a1, (uint64_t (*)(void))sub_100D10C24, (uint64_t *)&unk_1013E8780);
}

void sub_1006202F8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4)
    goto LABEL_21;
  sub_1004B804C(a3);
  swift_arrayInitWithCopy(v11);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return;
  }
  v13 = *(_QWORD *)(v5 + 16);
  v14 = __OFADD__(v13, v4);
  v15 = v13 + v4;
  if (!v14)
  {
    *(_QWORD *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_10062046C(uint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  int64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v3 = *(_QWORD *)(result + 16);
  v4 = (_QWORD *)*v1;
  v5 = *(_QWORD *)(*v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v4;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_100D10C24(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    *v1 = v4;
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_10062C000((uint64_t)&v47, (uint64_t)&v4[5 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (!result)
    goto LABEL_12;
  v14 = v4[2];
  v15 = __OFADD__(v14, result);
  v16 = v14 + result;
  if (!v15)
  {
    v4[2] = v16;
LABEL_12:
    if (result != v12)
      return sub_1004D284C((uint64_t)v47);
LABEL_16:
    v2 = v4[2];
    v4 = v47;
    v13 = v48;
    v7 = v50;
    v39 = v48;
    if (v51)
    {
      v17 = (v51 - 1) & v51;
      v18 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_18:
      sub_1004E90B0(v4[7] + 40 * v18, (uint64_t)&v44);
      v19 = v7;
      goto LABEL_39;
    }
    goto LABEL_20;
  }
  __break(1u);
LABEL_20:
  v20 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_77;
  v21 = (unint64_t)(v49 + 64) >> 6;
  v19 = v7;
  if (v20 < v21)
  {
    v22 = *(_QWORD *)(v13 + 8 * v20);
    if (v22)
    {
LABEL_23:
      v17 = (v22 - 1) & v22;
      v18 = __clz(__rbit64(v22)) + (v20 << 6);
      v7 = v20;
      goto LABEL_18;
    }
    v23 = v7 + 2;
    v19 = v7 + 1;
    if (v7 + 2 < v21)
    {
      v22 = *(_QWORD *)(v13 + 8 * v23);
      if (v22)
      {
LABEL_26:
        v20 = v23;
        goto LABEL_23;
      }
      v19 = v7 + 2;
      if (v7 + 3 < v21)
      {
        v22 = *(_QWORD *)(v39 + 8 * (v7 + 3));
        if (v22)
        {
          v20 = v7 + 3;
          goto LABEL_23;
        }
        v23 = v7 + 4;
        v19 = v7 + 3;
        if (v7 + 4 < v21)
        {
          v22 = *(_QWORD *)(v39 + 8 * v23);
          if (v22)
            goto LABEL_26;
          v20 = v7 + 5;
          v19 = v7 + 4;
          if (v7 + 5 < v21)
          {
            v22 = *(_QWORD *)(v39 + 8 * v20);
            if (v22)
              goto LABEL_23;
            v19 = v21 - 1;
            v24 = v7 + 6;
            while (v21 != v24)
            {
              v22 = *(_QWORD *)(v39 + 8 * v24++);
              if (v22)
              {
                v20 = v24 - 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
    }
  }
  v17 = 0;
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
LABEL_39:
  v50 = v19;
  v51 = v17;
  sub_1004CB7BC((uint64_t)&v44, (uint64_t)&v42, &qword_1013E8790);
  if (!v43)
  {
LABEL_75:
    sub_1004CB800((uint64_t)&v44, &qword_1013E8790);
    sub_1004D284C((uint64_t)v4);
    return sub_1004CB800((uint64_t)&v42, &qword_1013E8790);
  }
  while (1)
  {
    sub_1004CB800((uint64_t)&v42, &qword_1013E8790);
    v25 = (_QWORD *)*v1;
    v26 = *(_QWORD *)(*v1 + 24);
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1)
    {
      v25 = sub_100D10C24((_QWORD *)(v26 > 1), v2 + 1, 1, (_QWORD *)*v1);
      *v1 = v25;
      v27 = v25[3] >> 1;
    }
    sub_1004CB7BC((uint64_t)&v44, (uint64_t)&v40, &qword_1013E8790);
    if (v41)
      break;
LABEL_41:
    sub_1004CB800((uint64_t)&v40, &qword_1013E8790);
LABEL_42:
    *(_QWORD *)(*v1 + 16) = v2;
    sub_1004CB7BC((uint64_t)&v44, (uint64_t)&v42, &qword_1013E8790);
    if (!v43)
      goto LABEL_75;
  }
  v28 = v25 + 4;
  sub_1004DB728(&v40, (uint64_t)&v42);
  if (v2 <= v27)
    v29 = v27;
  else
    v29 = v2;
  if (v2 >= v27)
  {
LABEL_74:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v42);
    v2 = v29;
    goto LABEL_42;
  }
  while (1)
  {
    sub_1004CB800((uint64_t)&v44, &qword_1013E8790);
    result = sub_1004DB728(&v42, (uint64_t)&v28[5 * v2]);
    v4 = v47;
    v30 = v50;
    if (!v51)
      break;
    v31 = (v51 - 1) & v51;
    v32 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_52:
    sub_1004E90B0(v47[7] + 40 * v32, (uint64_t)&v44);
    v33 = v30;
LABEL_72:
    ++v2;
    v50 = v33;
    v51 = v31;
    sub_1004CB7BC((uint64_t)&v44, (uint64_t)&v40, &qword_1013E8790);
    if (!v41)
      goto LABEL_41;
    sub_1004DB728(&v40, (uint64_t)&v42);
    if (v2 == v29)
      goto LABEL_74;
  }
  v34 = v50 + 1;
  if (!__OFADD__(v50, 1))
  {
    v35 = (unint64_t)(v49 + 64) >> 6;
    v33 = v50;
    if (v34 >= v35)
      goto LABEL_71;
    v36 = *(_QWORD *)(v48 + 8 * v34);
    if (v36)
      goto LABEL_56;
    v37 = v50 + 2;
    v33 = v50 + 1;
    if (v50 + 2 >= v35)
      goto LABEL_71;
    v36 = *(_QWORD *)(v48 + 8 * v37);
    if (v36)
    {
LABEL_59:
      v34 = v37;
    }
    else
    {
      v33 = v50 + 2;
      if (v50 + 3 >= v35)
        goto LABEL_71;
      v36 = *(_QWORD *)(v48 + 8 * (v50 + 3));
      if (!v36)
      {
        v37 = v50 + 4;
        v33 = v50 + 3;
        if (v50 + 4 >= v35)
          goto LABEL_71;
        v36 = *(_QWORD *)(v48 + 8 * v37);
        if (!v36)
        {
          v34 = v50 + 5;
          v33 = v50 + 4;
          if (v50 + 5 >= v35)
            goto LABEL_71;
          v36 = *(_QWORD *)(v48 + 8 * v34);
          if (!v36)
          {
            v33 = v35 - 1;
            v38 = v50 + 6;
            while (v35 != v38)
            {
              v36 = *(_QWORD *)(v48 + 8 * v38++);
              if (v36)
              {
                v34 = v38 - 1;
                goto LABEL_56;
              }
            }
LABEL_71:
            v31 = 0;
            v46 = 0;
            v44 = 0u;
            v45 = 0u;
            goto LABEL_72;
          }
          goto LABEL_56;
        }
        goto LABEL_59;
      }
      v34 = v50 + 3;
    }
LABEL_56:
    v31 = (v36 - 1) & v36;
    v32 = __clz(__rbit64(v36)) + (v34 << 6);
    v30 = v34;
    goto LABEL_52;
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

void sub_100620968(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100D10C38(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  sub_1004B804C(&qword_1013E8850);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100620AC8(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100D10D64(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[4 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 32 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_100620C10(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100603458);
}

uint64_t sub_100620C1C(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10060366C);
}

void sub_100620C28(uint64_t a1)
{
  double **v1;
  unint64_t v2;
  double *v3;
  int64_t v4;
  int64_t v5;
  double *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100D11238(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_100620D70(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100603690);
}

uint64_t sub_100620D7C(uint64_t a1)
{
  return sub_100621134(a1, (uint64_t (*)(void))sub_100D10F90, _s15FilterViewModelVMa);
}

uint64_t sub_100620D90(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006038A4);
}

uint64_t sub_100620D9C(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100603AB8);
}

uint64_t sub_100620DA8(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100603EF8);
}

uint64_t sub_100620DB4(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100604124);
}

uint64_t sub_100620DC0(uint64_t a1)
{
  return sub_100621134(a1, (uint64_t (*)(void))sub_100D117A4, type metadata accessor for CRLSpotlightManager.ChangeType);
}

uint64_t sub_100620DD4(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10060435C);
}

uint64_t sub_100620DE0(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100604338);
}

void sub_100620DEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100D11494(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_1004B804C((uint64_t *)&unk_1013E87C0);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100620F4C(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100604380);
}

uint64_t sub_100620F58(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006043A4);
}

uint64_t sub_100620F64(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_100621120(uint64_t a1)
{
  return sub_100621134(a1, (uint64_t (*)(void))sub_100D11A1C, (uint64_t (*)(_QWORD))&type metadata accessor for PKStroke);
}

uint64_t sub_100621134(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

void sub_1006212AC(uint64_t a1)
{
  double **v1;
  unint64_t v2;
  double *v3;
  int64_t v4;
  int64_t v5;
  double *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = *((_QWORD *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_100D11A6C(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    *v1 = v3;
    v8 = *((_QWORD *)v3 + 3) >> 1;
  }
  v10 = *((_QWORD *)v3 + 2);
  v11 = v8 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    if (v11 < (uint64_t)v12)
    {
      __break(1u);
      goto LABEL_25;
    }
    v13 = (unint64_t)&v3[9 * v10 + 4];
    if (a1 + 32 < v13 + 72 * v12 && v13 < a1 + 32 + 72 * v12)
      goto LABEL_26;
    swift_arrayInitWithCopy(v13);
    if (v12 >= v2)
    {
      v15 = *((_QWORD *)v3 + 2);
      v16 = __OFADD__(v15, v12);
      v17 = v15 + v12;
      if (!v16)
      {
        *((_QWORD *)v3 + 2) = v17;
        goto LABEL_19;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
      __break(1u);
      return;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v2)
    goto LABEL_22;
LABEL_19:
  swift_bridgeObjectRelease();
  if (v12 == v11)
LABEL_23:
    *v1 = v3;
}

void sub_10062141C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100D10610(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_100621574(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006043C8);
}

uint64_t sub_100621580(uint64_t a1)
{
  return sub_100620F64(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1006043EC);
}

uint64_t sub_10062158C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v18 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100621710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v32 - v9;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v11 = swift_retain(a1);
    v12 = __CocoaSet.contains(_:)(v11);
    swift_release(a1);
    return v12 & 1;
  }
  else
  {
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_9;
    Hasher.init(_seed:)(v39, *(_QWORD *)(a2 + 40));
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType(v14);
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 32);
    v37 = v15;
    v38 = v14;
    v35 = v17;
    v36 = ObjectType;
    v17(ObjectType, v15);
    v18 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v39, v4, v18);
    v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v10, v4);
    v19 = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    v33 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      v32 = ~v20;
      do
      {
        v22 = a2;
        v23 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v24 = *(_QWORD *)(v23 + 24);
        v25 = v4;
        v26 = swift_getObjectType(*(_QWORD *)(v23 + 16));
        v27 = *(void (**)(uint64_t, uint64_t, __n128))(v24 + 32);
        v28 = swift_retain(v23);
        v29 = v26;
        v4 = v25;
        v27(v29, v24, v28);
        v35(v36, v37);
        v30 = static UUID.== infix(_:_:)(v10);
        v31 = v34;
        v34(v8, v25);
        v31(v10, v25);
        swift_release(v23);
        if ((v30 & 1) != 0)
          break;
        v21 = (v21 + 1) & v32;
        a2 = v22;
      }
      while (((*(_QWORD *)(v33 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
    }
    else
    {
LABEL_9:
      v30 = 0;
    }
    return v30 & 1;
  }
}

uint64_t sub_10062195C(Swift::UInt a1, char a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v12, *(_QWORD *)(a3 + 40));
    if ((a2 & 1) != 0)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(a1);
    }
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      do
      {
        v10 = *(_QWORD *)(a3 + 48) + 16 * v8;
        if ((*(_BYTE *)(v10 + 8) & 1) != 0)
        {
          if ((a2 & 1) != 0)
            return 1;
        }
        else if ((a2 & 1) == 0 && *(_QWORD *)v10 == a1)
        {
          return 1;
        }
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100621A50(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    v5 = a2;
    Hasher.init(_seed:)(&v17, *(_QWORD *)(a3 + 40));
    if (v5 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      v15 = a1;
      v16 = v5 & 1;
      v6 = sub_1004B804C(&qword_1013E8708);
      CRExtensible.hash(into:)(&v17, v6);
    }
    v7 = Hasher._finalize()();
    v8 = -1 << *(_BYTE *)(a3 + 32);
    v9 = v7 & ~v8;
    if (((*(_QWORD *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      v10 = ~v8;
      do
      {
        v11 = *(_QWORD *)(a3 + 48) + 16 * v9;
        v12 = *(unsigned __int8 *)(v11 + 8);
        if (v12 == 255)
        {
          if (v5 == 255)
            return 1;
        }
        else if (v5 != 255)
        {
          v17 = *(_QWORD *)v11;
          v18 = v12 & 1;
          v15 = a1;
          v16 = v5 & 1;
          v13 = sub_10062E1B0();
          if ((static CRExtensible.== infix(_:_:)(&v17, &v15, &type metadata for CRLWPListStyleType, v13, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)return 1;
        }
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100621BD4(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return sub_100621C64(a1, a2, a3, &qword_1013E8758, (uint64_t (*)(uint64_t))type metadata accessor for CRLWPWritingDirection, (unint64_t *)&unk_1013E8760, (uint64_t)&unk_100EF1304);
}

uint64_t sub_100621BF8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return sub_100621C64(a1, a2, a3, &qword_1013F3B10, (uint64_t (*)(uint64_t))type metadata accessor for CRLWPParagraphAlignment, (unint64_t *)&unk_1013E8720, (uint64_t)&unk_100EF20D4);
}

uint64_t sub_100621C1C(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return sub_100621C64(a1, a2, a3, &qword_1013F3800, (uint64_t (*)(uint64_t))type metadata accessor for CRLWPStrikethru, &qword_1013E8730, (uint64_t)&unk_100EF1FB4);
}

uint64_t sub_100621C40(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return sub_100621C64(a1, a2, a3, &qword_1013E8738, (uint64_t (*)(uint64_t))type metadata accessor for CRLWPUnderline, (unint64_t *)&unk_1013E8740, (uint64_t)&unk_100EF2074);
}

uint64_t sub_100621C64(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  int v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;

  if (*(_QWORD *)(a3 + 16))
  {
    v13 = a2;
    Hasher.init(_seed:)(&v26, *(_QWORD *)(a3 + 40));
    if (v13 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      v24 = a1;
      v25 = v13 & 1;
      v14 = sub_1004B804C(a4);
      CRExtensible.hash(into:)(&v26, v14);
    }
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(a3 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(a3 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      v18 = ~v16;
      do
      {
        v19 = *(_QWORD *)(a3 + 48) + 16 * v17;
        v20 = *(unsigned __int8 *)(v19 + 8);
        if (v20 == 255)
        {
          if (v13 == 255)
            return 1;
        }
        else if (v13 != 255)
        {
          v26 = *(_QWORD *)v19;
          v27 = v20 & 1;
          v24 = a1;
          v25 = v13 & 1;
          v21 = a5(0);
          v22 = sub_1004B7878(a6, a5, a7);
          if ((static CRExtensible.== infix(_:_:)(&v26, &v24, v21, v22, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)return 1;
        }
        v17 = (v17 + 1) & v18;
      }
      while (((*(_QWORD *)(a3 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100621DFC(char a1, uint64_t a2)
{
  Swift::UInt8 v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD v11[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v11, *(_QWORD *)(a2 + 40));
    if (a1 == 2)
    {
      v4 = 0;
    }
    else
    {
      v4 = a1 & 1;
      Hasher._combine(_:)(1u);
    }
    Hasher._combine(_:)(v4);
    v5 = Hasher._finalize()();
    v6 = -1 << *(_BYTE *)(a2 + 32);
    v7 = v5 & ~v6;
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v8 = ~v6;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7);
        if (v9 == 2)
        {
          if (a1 == 2)
            return 1;
        }
        else if (a1 != 2 && ((((a1 & 1) == 0) ^ v9) & 1) != 0)
        {
          return 1;
        }
        v7 = (v7 + 1) & v8;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100621F08(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  Swift::UInt32 v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v12, *(_QWORD *)(a2 + 40));
    if ((a1 & 0x100000000) != 0)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      v4 = (a1 & 0x7FFFFF) == 0 && (a1 & 0x7F800000) == 0;
      v5 = v4 ? 0 : a1;
      Hasher._combine(_:)(v5);
    }
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48) + 8 * v8;
        if ((*(_BYTE *)(v10 + 4) & 1) != 0)
        {
          if ((a1 & 0x100000000) != 0)
            return 1;
        }
        else if ((a1 & 0x100000000) == 0 && *(float *)v10 == *(float *)&a1)
        {
          return 1;
        }
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100622008(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  int v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  char v21;

  if (*(_QWORD *)(a4 + 16))
  {
    v7 = a3;
    Hasher.init(_seed:)(&v20, *(_QWORD *)(a4 + 40));
    if (v7 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      v17 = a1;
      v18 = a2;
      v19 = v7 & 1;
      v8 = sub_1004B804C(&qword_1013F3890);
      CRExtensible.hash(into:)(&v20, v8);
    }
    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(a4 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(a4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v12 = ~v10;
      do
      {
        v13 = *(_QWORD *)(a4 + 48) + 24 * v11;
        v14 = *(unsigned __int8 *)(v13 + 16);
        if (v14 == 255)
        {
          if (v7 == 255)
            return 1;
        }
        else if (v7 != 255)
        {
          v20 = *(_OWORD *)v13;
          v21 = v14 & 1;
          v17 = a1;
          v18 = a2;
          v19 = v7 & 1;
          v15 = sub_10062E1F4();
          if ((static CRExtensible.== infix(_:_:)(&v20, &v17, &type metadata for CRLWPFontName, v15, &protocol witness table for String, &protocol witness table for String) & 1) != 0)return 1;
        }
        v11 = (v11 + 1) & v12;
      }
      while (((*(_QWORD *)(a4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100622190(void *a1, uint64_t a2)
{
  return sub_100622318(a1, a2, (void (*)(_QWORD))type metadata accessor for CRLBoardItem);
}

uint64_t sub_10062219C(void *a1, uint64_t a2)
{
  return sub_1006221B0(a1, a2, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
}

uint64_t sub_1006221B0(void *a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  id v6;
  __n128 v7;
  char v8;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  id v21;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v6 = a1;
    v8 = __CocoaSet.contains(_:)(v7);

    return v8 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v12 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40)),
        v13 = -1 << *(_BYTE *)(a2 + 32),
        v14 = v12 & ~v13,
        v15 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0))
  {
LABEL_11:
    v18 = 0;
    return v18 & 1;
  }
  sub_1004B8930(0, a3, a4);
  v16 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
  v17 = static NSObject.== infix(_:_:)(v16, a1);

  if ((v17 & 1) == 0)
  {
    v19 = ~v13;
    v20 = (v14 + 1) & v19;
    if (((*(_QWORD *)(v15 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
    {
      do
      {
        v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
        v18 = static NSObject.== infix(_:_:)(v21, a1);

        if ((v18 & 1) != 0)
          break;
        v20 = (v20 + 1) & v19;
      }
      while (((*(_QWORD *)(v15 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
      return v18 & 1;
    }
    goto LABEL_11;
  }
  v18 = 1;
  return v18 & 1;
}

uint64_t sub_10062230C(void *a1, uint64_t a2)
{
  return sub_100622318(a1, a2, (void (*)(_QWORD))type metadata accessor for CRLCollaborationParticipant);
}

uint64_t sub_100622318(void *a1, uint64_t a2, void (*a3)(_QWORD))
{
  id v5;
  char v6;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  id v18;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = a1;
    v6 = __CocoaSet.contains(_:)();

    return v6 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v9 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40)),
        v10 = -1 << *(_BYTE *)(a2 + 32),
        v11 = v9 & ~v10,
        v12 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0))
  {
LABEL_11:
    v15 = 0;
    return v15 & 1;
  }
  a3(0);
  v13 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
  v14 = static NSObject.== infix(_:_:)(v13, a1);

  if ((v14 & 1) == 0)
  {
    v16 = ~v10;
    v17 = (v11 + 1) & v16;
    if (((*(_QWORD *)(v12 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      do
      {
        v18 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v17);
        v15 = static NSObject.== infix(_:_:)(v18, a1);

        if ((v15 & 1) != 0)
          break;
        v17 = (v17 + 1) & v16;
      }
      while (((*(_QWORD *)(v12 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
      return v15 & 1;
    }
    goto LABEL_11;
  }
  v15 = 1;
  return v15 & 1;
}

uint64_t sub_100622468(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  char v36;
  _QWORD v37[9];

  if (!*(_QWORD *)(a5 + 16))
    goto LABEL_10;
  Hasher.init(_seed:)(v37, *(_QWORD *)(a5 + 40));
  sub_1009E3D90((uint64_t)v37, a1, (uint64_t)a2, a3, a4);
  v10 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a5 + 32));
  if (((*(_QWORD *)(a5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_10;
  v31 = -1 << *(_BYTE *)(a5 + 32);
  v11 = *(_QWORD *)(a5 + 48) + 32 * v10;
  v12 = *(id *)v11;
  v13 = *(void **)(v11 + 8);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = *(_BYTE *)(v11 + 24);
  sub_1004DD884(*(id *)v11, v13, v14, v15);
  v36 = a4;
  v16 = sub_1009E554C((uint64_t)v12, (uint64_t)v13, v14, v15, a1, (uint64_t)a2, a3, a4, v28, a1, v31, (id)(a5 + 56), a2, a3);
  sub_1004DD8B8(v12, v13, v14, v15);
  if ((v16 & 1) != 0)
  {
    v17 = 1;
    return v17 & 1;
  }
  v18 = v33;
  v19 = ~v32;
  v20 = (v10 + 1) & ~v32;
  if (((*(_QWORD *)&v33[(v20 >> 3) & 0xFFFFFFFFFFFFF8] >> v20) & 1) == 0)
  {
LABEL_10:
    v17 = 0;
    return v17 & 1;
  }
  v21 = v30;
  do
  {
    v22 = *(_QWORD *)(a5 + 48) + 32 * v20;
    v23 = *(id *)v22;
    v24 = *(void **)(v22 + 8);
    v25 = *(_QWORD *)(v22 + 16);
    v26 = *(_BYTE *)(v22 + 24);
    sub_1004DD884(*(id *)v22, v24, v25, v26);
    v17 = sub_1009E554C((uint64_t)v23, (uint64_t)v24, v25, v26, v21, (uint64_t)v34, v35, v36, v29, v30, v32, v33, v34, v35);
    sub_1004DD8B8(v23, v24, v25, v26);
    if ((v17 & 1) != 0)
      break;
    v20 = (v20 + 1) & v19;
  }
  while (((*(_QWORD *)&v18[(v20 >> 3) & 0xFFFFFFFFFFFFF8] >> v20) & 1) != 0);
  return v17 & 1;
}

uint64_t sub_10062264C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_BYTE *, uint64_t, int *);
  unsigned int v29;
  uint64_t *v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  char v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  _BYTE *v45;
  uint64_t v46;
  void (*v47)(_BYTE *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  _BYTE v55[12];
  int v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;

  v4 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = &v55[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = sub_1004B804C((uint64_t *)&unk_1013E87E0);
  __chkstk_darwin(v61);
  v63 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (int *)type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  v12 = *((_QWORD *)v11 - 1);
  __chkstk_darwin(v11);
  v64 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = sub_1004B804C((uint64_t *)&unk_1013F3DB0);
  __chkstk_darwin(v70);
  v15 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v66 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v21 = &v55[-v20];
  if (*(_QWORD *)(a2 + 16))
  {
    v59 = v9;
    v57 = v6;
    v60 = v4;
    Hasher.init(_seed:)(&v73, *(_QWORD *)(a2 + 40));
    sub_100AF32F4((uint64_t)&v73);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(a2 + 32);
    v24 = v22 & ~v23;
    v25 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
    {
      v67 = ~v23;
      v68 = *(_QWORD *)(v17 + 72);
      v69 = a1;
      v58 = v12;
      v65 = a2 + 56;
      while (1)
      {
        v26 = a2;
        sub_1004CB7BC(*(_QWORD *)(a2 + 48) + v68 * v24, (uint64_t)v21, (uint64_t *)&unk_1013E87D0);
        v27 = (uint64_t)&v15[*(int *)(v70 + 48)];
        sub_1004CB7BC((uint64_t)v21, (uint64_t)v15, (uint64_t *)&unk_1013E87D0);
        sub_1004CB7BC(v69, v27, (uint64_t *)&unk_1013E87D0);
        v28 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v12 + 48);
        if (v28(v15, 1, v11) == 1)
          break;
        v31 = v66;
        sub_1004CB7BC((uint64_t)v15, (uint64_t)v66, (uint64_t *)&unk_1013E87D0);
        v32 = v28((_BYTE *)v27, 1, v11);
        v30 = (uint64_t *)&unk_1013F3DB0;
        if (v32 == 1)
          goto LABEL_16;
        v33 = v64;
        sub_1004B84E0(v27, (uint64_t)v64, type metadata accessor for CRLWPHyperlinkSmartFieldData);
        v34 = v31[8];
        v73 = *(_QWORD *)v31;
        v74 = v34;
        v35 = v33[8];
        v71 = *(_QWORD *)v33;
        v72 = v35;
        v36 = sub_10062E244();
        if ((static CRExtensible.== infix(_:_:)(&v73, &v71, &type metadata for CRLWPSmartFieldDataType, v36, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_15;
        v37 = v11[5];
        v38 = (uint64_t)&v31[v37];
        v39 = (uint64_t)&v33[v37];
        v40 = v63;
        v41 = (uint64_t)&v63[*(int *)(v61 + 48)];
        sub_1004CB7BC(v38, (uint64_t)v63, &qword_1013E04D0);
        sub_1004CB7BC(v39, v41, &qword_1013E04D0);
        v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
        v43 = v60;
        if (v42((uint64_t)v40, 1, v60) == 1)
        {
          v44 = v42(v41, 1, v43);
          v33 = v64;
          if (v44 != 1)
            goto LABEL_14;
          sub_1004CB800((uint64_t)v63, &qword_1013E04D0);
          v12 = v58;
          v31 = v66;
        }
        else
        {
          sub_1004CB7BC((uint64_t)v40, (uint64_t)v59, &qword_1013E04D0);
          if (v42(v41, 1, v43) == 1)
          {
            (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v59, v43);
            v33 = v64;
LABEL_14:
            sub_1004CB800((uint64_t)v63, (uint64_t *)&unk_1013E87E0);
            v12 = v58;
            v31 = v66;
LABEL_15:
            sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLWPHyperlinkSmartFieldData);
            v30 = (uint64_t *)&unk_1013E87D0;
LABEL_16:
            sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLWPHyperlinkSmartFieldData);
            v25 = v65;
LABEL_17:
            sub_1004CB800((uint64_t)v15, v30);
            sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E87D0);
            goto LABEL_18;
          }
          v45 = v57;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v62 + 32))(v57, v41, v43);
          sub_1004B7878((unint64_t *)&qword_1013E87F8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v46 = (uint64_t)v59;
          v56 = dispatch thunk of static Equatable.== infix(_:_:)(v59, v45);
          v47 = *(void (**)(_BYTE *, uint64_t))(v62 + 8);
          v47(v57, v43);
          v47((_BYTE *)v46, v43);
          sub_1004CB800((uint64_t)v40, &qword_1013E04D0);
          v12 = v58;
          v33 = v64;
          v31 = v66;
          if ((v56 & 1) == 0)
            goto LABEL_15;
        }
        v48 = v11[6];
        v49 = *(_QWORD *)&v31[v48];
        v50 = *(_QWORD *)&v31[v48 + 8];
        v51 = &v33[v48];
        v52 = v51[1];
        if ((v49 != *v51 || v50 != v52)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v49, v50, *v51, v52, 0) & 1) == 0)
        {
          goto LABEL_15;
        }
        v53 = sub_100C9E04C(*(_QWORD *)&v31[v11[7]], *(_QWORD *)&v33[v11[7]]);
        sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLWPHyperlinkSmartFieldData);
        sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLWPHyperlinkSmartFieldData);
        sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E87D0);
        sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E87D0);
        v25 = v65;
        if ((v53 & 1) != 0)
          return 1;
LABEL_18:
        v24 = (v24 + 1) & v67;
        a2 = v26;
        if (((*(_QWORD *)(v25 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          return 0;
      }
      v29 = v28((_BYTE *)v27, 1, v11);
      v30 = (uint64_t *)&unk_1013F3DB0;
      if (v29 == 1)
      {
        sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E87D0);
        sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E87D0);
        return 1;
      }
      goto LABEL_17;
    }
  }
  return 0;
}

uint64_t sub_100622CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100622DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[9];

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v34 - v9;
  __chkstk_darwin(v8);
  v13 = (char *)&v34 - v12;
  if (*(_QWORD *)(a2 + 16))
  {
    v34 = v11;
    Hasher.init(_seed:)(v37, *(_QWORD *)(a2 + 40));
    v14 = type metadata accessor for UUID(0);
    v15 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v37, v14, v15);
    v35 = type metadata accessor for CRLBoardIdentifierStorage(0);
    v16 = (uint64_t *)(a1 + *(int *)(v35 + 20));
    v17 = *v16;
    v18 = v16[1];
    swift_bridgeObjectRetain(v18);
    String.hash(into:)(v37, v17, v18);
    swift_bridgeObjectRelease(v18);
    v19 = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    v22 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      v36 = a2;
      v23 = ~v20;
      v24 = *(_QWORD *)(v34 + 72);
      do
      {
        sub_1004B8460(*(_QWORD *)(v36 + 48) + v24 * v21, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        v25 = static UUID.== infix(_:_:)(v13);
        sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
        sub_1004B8460(a1, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        if ((v25 & 1) != 0)
        {
          v26 = *(int *)(v35 + 20);
          v27 = *(_QWORD *)&v10[v26];
          v28 = *(_QWORD *)&v10[v26 + 8];
          v29 = &v7[v26];
          v30 = *((_QWORD *)v29 + 1);
          if (v27 == *(_QWORD *)v29 && v28 == v30)
          {
            sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
            return 1;
          }
          v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, *(_QWORD *)v29, v30, 0);
          sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          if ((v32 & 1) != 0)
            return 1;
        }
        else
        {
          sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        }
        v21 = (v21 + 1) & v23;
      }
      while (((*(_QWORD *)(v22 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_100623088(void *a1, uint64_t a2)
{
  return sub_1006221B0(a1, a2, (unint64_t *)&qword_1013E56B0, off_101229828);
}

uint64_t sub_10062309C(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v10[40];

  if (*(_QWORD *)(a2 + 16)
    && (v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(a2 + 40)),
        v5 = -1 << *(_BYTE *)(a2 + 32),
        v6 = v4 & ~v5,
        ((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    v7 = ~v5;
    do
    {
      sub_1004B8968(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v10);
      v8 = static AnyHashable.== infix(_:_:)(v10, a1);
      sub_1004B89A4((uint64_t)v10);
      if ((v8 & 1) != 0)
        break;
      v6 = (v6 + 1) & v7;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

BOOL sub_100623170(Swift::UInt32 a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10062325C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  _QWORD v65[7];
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[5];

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)v65 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)v65 - v12;
  __chkstk_darwin(v11);
  v68 = (uint64_t)v65 - v14;
  v66 = type metadata accessor for UUID(0);
  v65[6] = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65[5] = (char *)v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1004B804C(&qword_1013E8798);
  __chkstk_darwin(v69);
  v78 = (uint64_t)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v76 = (uint64_t)v65 - v22;
  __chkstk_darwin(v21);
  v75 = (uint64_t)v65 - v23;
  v79 = sub_1004B804C((uint64_t *)&unk_1013E87A0);
  __chkstk_darwin(v79);
  v25 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v26 = *(_QWORD *)(v86 - 8);
  v27 = __chkstk_darwin(v86);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)v65 - v29;
  v31 = __chkstk_darwin(v28);
  v81 = (unsigned __int8 *)v65 - v32;
  __chkstk_darwin(v31);
  v35 = (char *)v65 - v34;
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v77 = v33;
  v70 = v13;
  v71 = v10;
  v72 = v7;
  Hasher.init(_seed:)(v87, *(_QWORD *)(a2 + 40));
  sub_100BCE92C((uint64_t)v87);
  v36 = Hasher._finalize()();
  v37 = -1 << *(_BYTE *)(a2 + 32);
  v38 = v36 & ~v37;
  v84 = a2 + 56;
  v85 = a2;
  if (((*(_QWORD *)(a2 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
    return 0;
  v82 = ~v37;
  v83 = *(_QWORD *)(v26 + 72);
  v74 = v77 + 8;
  v80 = a1;
  v67 = v20;
  v39 = v79;
  v73 = v30;
  while (1)
  {
    sub_1004B8460(*(_QWORD *)(v85 + 48) + v83 * v38, (uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v40 = &v25[*(int *)(v39 + 48)];
    sub_1004B8460((uint64_t)v35, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B8460(a1, (uint64_t)v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25, v86);
    if (EnumCaseMultiPayload)
      break;
    sub_1004B8460((uint64_t)v25, (uint64_t)v81, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v40, v86))
      goto LABEL_5;
    v48 = *v81;
    v49 = *v40;
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v50 = v48 == v49;
    a1 = v80;
    if (v50)
      return 1;
LABEL_7:
    v38 = (v38 + 1) & v82;
    if (((*(_QWORD *)(v84 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
      return 0;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1004B8460((uint64_t)v25, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v40, v86) == 1)
    {
      v42 = v75;
      sub_1004B84E0((uint64_t)v30, v75, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v43 = v76;
      sub_1004B84E0((uint64_t)v40, v76, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v44 = v78;
      v45 = v78 + *(int *)(v69 + 48);
      sub_1004B8460(v42, v78, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_1004B8460(v43, v45, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v46 = sub_1004B804C(&qword_1013E1790);
      v47 = (char *)&loc_100623724
          + 4
          * byte_100EFF288[(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v44, 5, v46)];
      __asm { BR              X9 }
    }
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    goto LABEL_5;
  }
  v51 = v77;
  sub_1004B8460((uint64_t)v25, v77, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v52 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)(v74 + *(int *)(v52 + 48)));
  if (swift_getEnumCaseMultiPayload(v40, v86) != 2)
  {
    sub_1004B84A4(v51, type metadata accessor for CRLBoardIdentifier);
    v30 = v73;
LABEL_5:
    sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E87A0);
LABEL_6:
    sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_7;
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v40[*(int *)(v52 + 48) + 8]);
  v53 = v68;
  sub_1004B84E0(v51, v68, type metadata accessor for CRLBoardIdentifier);
  v54 = (uint64_t)v70;
  sub_1004B84E0((uint64_t)v40, (uint64_t)v70, type metadata accessor for CRLBoardIdentifier);
  v55 = static UUID.== infix(_:_:)(v53);
  v56 = (uint64_t)v71;
  sub_1004B8460(v53, (uint64_t)v71, type metadata accessor for CRLBoardIdentifier);
  v57 = (uint64_t)v72;
  sub_1004B8460(v54, (uint64_t)v72, type metadata accessor for CRLBoardIdentifier);
  if ((v55 & 1) == 0)
  {
    sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v56, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v54, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v39 = v79;
    a1 = v80;
    v30 = v73;
    goto LABEL_6;
  }
  v58 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v59 = *(_QWORD *)(v56 + v58);
  v60 = *(_QWORD *)(v56 + v58 + 8);
  v61 = (_QWORD *)(v57 + v58);
  v62 = v61[1];
  if (v59 != *v61 || v60 != v62)
  {
    v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, *v61, v62, 0);
    sub_1004B84A4((uint64_t)v72, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v71, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v70, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v39 = v79;
    a1 = v80;
    v30 = v73;
    if ((v63 & 1) != 0)
      return 1;
    goto LABEL_7;
  }
  sub_1004B84A4((uint64_t)v72, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v71, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v70, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
  return 1;
}

BOOL sub_100623C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD v16[9];

  v4 = _s17CategoryViewModelVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (Hasher.init(_seed:)(v16, *(_QWORD *)(a2 + 40)),
        sub_100D5DC10((uint64_t)v16),
        v8 = Hasher._finalize()(),
        v9 = -1 << *(_BYTE *)(a2 + 32),
        v10 = v8 & ~v9,
        ((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0))
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1004B8460(*(_QWORD *)(a2 + 48) + v12 * v10, (uint64_t)v7, _s17CategoryViewModelVMa);
      v13 = sub_100D5DDE4((uint64_t)v7, a1);
      sub_1004B84A4((uint64_t)v7, _s17CategoryViewModelVMa);
      if (v13)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  else
  {
    return 0;
  }
  return v13;
}

uint64_t sub_100623DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[10];

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v71 = (uint64_t)&v68 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  __chkstk_darwin(v12);
  v72 = (uint64_t)&v68 - v13;
  __chkstk_darwin(v14);
  v73 = (char *)&v68 - v15;
  __chkstk_darwin(v16);
  v75 = (uint64_t)&v68 - v17;
  v18 = sub_1004B804C(&qword_1013FE120);
  __chkstk_darwin(v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  v29 = (char *)&v68 - v28;
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v78 = v27;
  v70 = v6;
  Hasher.init(_seed:)(v84, *(_QWORD *)(a2 + 40));
  v83 = a1;
  sub_100972048((uint64_t)v84);
  v30 = Hasher._finalize()();
  v31 = -1 << *(_BYTE *)(a2 + 32);
  v32 = v30 & ~v31;
  v82 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
    return 0;
  v79 = ~v31;
  v80 = *(_QWORD *)(v22 + 72);
  v81 = a2;
  v74 = v11;
  v76 = v18;
  v77 = v24;
  v33 = (uint64_t)v73;
  v68 = v21;
  v69 = v29;
  while (1)
  {
    sub_1004B8460(*(_QWORD *)(v81 + 48) + v80 * v32, (uint64_t)v29, type metadata accessor for CRLSpotlightManager.ChangeType);
    v34 = (uint64_t)&v20[*(int *)(v18 + 48)];
    sub_1004B8460((uint64_t)v29, (uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
    sub_1004B8460(v83, v34, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload(v20, v21) != 1)
      break;
    sub_1004B8460((uint64_t)v20, (uint64_t)v24, type metadata accessor for CRLSpotlightManager.ChangeType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34, v21);
    v36 = (uint64_t)v24;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0(v34, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      v37 = static UUID.== infix(_:_:)(v24);
      v38 = (uint64_t)v24;
      v39 = (uint64_t)v24;
      v40 = v71;
      sub_1004B8460(v38, v71, type metadata accessor for CRLBoardIdentifier);
      v41 = (uint64_t)v11;
      v42 = (uint64_t)v11;
      v43 = (uint64_t)v70;
      sub_1004B8460(v41, (uint64_t)v70, type metadata accessor for CRLBoardIdentifier);
      if ((v37 & 1) != 0)
      {
        v44 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v45 = *(_QWORD *)(v40 + v44);
        v46 = *(_QWORD *)(v40 + v44 + 8);
        v47 = (_QWORD *)(v43 + v44);
        v48 = v47[1];
        if (v45 == *v47 && v46 == v48)
        {
          v57 = v43;
          v56 = v40;
          v66 = (uint64_t)v74;
          v67 = (uint64_t)v77;
          goto LABEL_30;
        }
        v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, *v47, v48, 0);
        sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
        v11 = v74;
        sub_1004B84A4((uint64_t)v74, type metadata accessor for CRLBoardIdentifier);
        v24 = v77;
        sub_1004B84A4((uint64_t)v77, type metadata accessor for CRLBoardIdentifier);
        v33 = (uint64_t)v73;
        v18 = v76;
        v21 = v68;
        if ((v50 & 1) != 0)
          goto LABEL_31;
      }
      else
      {
        sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
        v33 = (uint64_t)v73;
        v11 = (char *)v42;
        v18 = v76;
        v24 = (char *)v39;
        v21 = v68;
      }
      goto LABEL_25;
    }
LABEL_4:
    sub_1004B84A4(v36, type metadata accessor for CRLBoardIdentifier);
    sub_1004CB800((uint64_t)v20, &qword_1013FE120);
LABEL_5:
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLSpotlightManager.ChangeType);
    v32 = (v32 + 1) & v79;
    if (((*(_QWORD *)(v82 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      return 0;
  }
  v51 = v78;
  sub_1004B8460((uint64_t)v20, v78, type metadata accessor for CRLSpotlightManager.ChangeType);
  v52 = swift_getEnumCaseMultiPayload(v34, v21);
  v36 = v51;
  v24 = v77;
  if (v52 == 1)
    goto LABEL_4;
  v53 = v75;
  sub_1004B84E0(v34, v75, type metadata accessor for CRLBoardIdentifier);
  v54 = v78;
  v55 = static UUID.== infix(_:_:)(v78);
  sub_1004B8460(v54, v33, type metadata accessor for CRLBoardIdentifier);
  v56 = v33;
  v57 = v72;
  sub_1004B8460(v53, v72, type metadata accessor for CRLBoardIdentifier);
  if ((v55 & 1) == 0)
  {
    sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v56, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v54, type metadata accessor for CRLBoardIdentifier);
    v11 = v74;
    v33 = v56;
    v29 = v69;
    v18 = v76;
    v24 = v77;
LABEL_25:
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
    goto LABEL_5;
  }
  v58 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v59 = *(_QWORD *)(v56 + v58);
  v60 = *(_QWORD *)(v56 + v58 + 8);
  v61 = (_QWORD *)(v57 + v58);
  v62 = v61[1];
  if (v59 != *v61 || v60 != v62)
  {
    v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, *v61, v62, 0);
    sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v56, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v75, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v78, type metadata accessor for CRLBoardIdentifier);
    v11 = v74;
    v33 = v56;
    v29 = v69;
    v18 = v76;
    v24 = v77;
    if ((v64 & 1) != 0)
      goto LABEL_31;
    goto LABEL_25;
  }
  v66 = v75;
  v67 = v78;
  v29 = v69;
LABEL_30:
  sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v56, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v66, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v67, type metadata accessor for CRLBoardIdentifier);
LABEL_31:
  sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLSpotlightManager.ChangeType);
  return 1;
}

BOOL sub_100624428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1006244F0(void *a1, uint64_t a2)
{
  return sub_100622318(a1, a2, (void (*)(_QWORD))type metadata accessor for CRLSceneInfo);
}

id CRLWPLayout._columns.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns, v3, 0, 0);
  return *v1;
}

void CRLWPLayout._columns.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*CRLWPLayout._columns.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns, a1, 33, 0);
  return j__swift_endAccess_0;
}

id CRLWPLayout.parentAutosizes.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  objc_class *v6;
  __objc2_prot *v7;
  objc_super v8;

  v1 = objc_msgSend(v0, "parent");
  if (v1)
  {
    v2 = v1;
    v7 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
    v3 = (void *)swift_dynamicCastObjCProtocolConditional(v1, 1, &v7);
    if (v3)
    {
      v4 = objc_msgSend(v3, "autosizeFlagsFor:", v0);

      return (id)(v4 != 0);
    }

  }
  v6 = (objc_class *)type metadata accessor for CRLWPLayout();
  v8.receiver = v0;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, "parentAutosizes");
}

uint64_t type metadata accessor for CRLWPLayout()
{
  return objc_opt_self(_TtC8Freeform11CRLWPLayout);
}

Swift::Void __swiftcall CRLWPLayout.validate()()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  objc_class *v12;
  objc_super v13;
  __objc2_prot *v14;
  objc_super v15;

  v1 = objc_msgSend(v0, "parent");
  if (!v1)
    goto LABEL_14;
  v2 = v1;
  v14 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v3 = swift_dynamicCastObjCProtocolConditional(v1, 1, &v14);
  if (!v3)
  {

LABEL_14:
    v12 = (objc_class *)type metadata accessor for CRLWPLayout();
    v15.receiver = v0;
    v15.super_class = v12;
    objc_msgSendSuper2(&v15, "validate");
    return;
  }
  v4 = (void *)v3;
  v5 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid;
  v6 = *((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid);
  if (objc_msgSend(v0, "parentAutosizes"))
  {
    if ((*((_BYTE *)v0 + v5) & 1) == 0)
    {
      if (objc_msgSend(v0, "invalidGeometry"))
      {
        objc_msgSend(v4, "autosizedFrameFor:textSize:", v0, 10.0, 10.0);
        if (v9 > 0.0)
        {
          v11 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasLayoutGeometry), "initWithFrame:", v7, v8, v9, v10);
          objc_msgSend(v0, "setGeometry:", v11);

        }
      }
    }
    sub_100624C94();
    v13.receiver = v0;
    v13.super_class = (Class)type metadata accessor for CRLWPLayout();
    objc_msgSendSuper2(&v13, "validate");
    if ((objc_msgSend(v4, "autosizeFlagsFor:", v0) & 0x20) == 0 || (v6 & 1) != 0)
      goto LABEL_17;
    if (objc_msgSend(v0, "parentAutosizes"))
      objc_msgSend(v0, "invalidateSize");
    *((_BYTE *)v0 + v5) = 0;
    objc_msgSend(v0, "invalidate");
    objc_msgSend(v0, "setNeedsDisplay");
  }
  else
  {
    v13.receiver = v0;
    v13.super_class = (Class)type metadata accessor for CRLWPLayout();
    objc_msgSendSuper2(&v13, "validate");
  }
  sub_100624C94();
LABEL_17:

}

Swift::Void __swiftcall CRLWPLayout.invalidateTextLayout()()
{
  void *v0;

  if (objc_msgSend(v0, "parentAutosizes"))
    objc_msgSend(v0, "invalidateSize");
  *((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
  objc_msgSend(v0, "invalidate");
  objc_msgSend(v0, "setNeedsDisplay");
}

Swift::Void __swiftcall CRLWPLayout.invalidateSize()()
{
  _BYTE *v0;
  objc_super v1;

  v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid] = 0;
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for CRLWPLayout();
  objc_msgSendSuper2(&v1, "invalidateSize");
}

void sub_100624B0C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v1 = objc_msgSend(v0, "layoutController");
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v1, "canvas");
  if (!v3)
  {
LABEL_10:

    return;
  }
  v4 = v3;
  if ((objc_msgSend(v3, "isCanvasInteractive") & 1) == 0)
  {

    return;
  }
  v5 = objc_msgSend(v4, "canvasController");
  if (!v5
    || (v6 = v5, v7 = objc_msgSend(v5, "editorController"), v6, !v7))
  {

    goto LABEL_10;
  }
  v8 = type metadata accessor for CRLWPEditor(0);
  v10 = v8;
  if (v8)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8, v9);
  else
    ObjCClassFromMetadata = 0;
  v12 = objc_msgSend(v7, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v13 = swift_dynamicCastClass(v12, v10);
  if (v13)
  {
    v14 = v13;

    if (*(_QWORD *)(*(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {

      swift_unknownObjectRelease(v12);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

    swift_unknownObjectRelease(v12);
  }
}

void sub_100624C94()
{
  char *v0;
  uint64_t v1;
  char *v2;
  unsigned int v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  double v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  __objc2_prot *v33;
  id v34;
  _OWORD v35[2];
  char v36[24];
  _BYTE v37[24];
  uint64_t v38;

  v1 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid;
  if ((v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid] & 1) == 0)
  {
    v2 = v0;
    v3 = objc_msgSend(v0, "isInstructional");
    v4 = *(id *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
    if (!v3)
    {
      sub_1007D484C();
      v10 = v9;

      goto LABEL_10;
    }
    v5 = objc_msgSend(v2, "parent");
    if (v5)
    {
      v6 = v5;
      v33 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
      v7 = (void *)swift_dynamicCastObjCProtocolConditional(v5, 1, &v33);
      if (v7)
      {
        v8 = objc_msgSend(v7, "instructionalTextCharacterFill");

LABEL_9:
        sub_1007CBAB8(v8);
        v10 = v11;

LABEL_10:
        v12 = objc_msgSend(objc_allocWithZone((Class)CRLWPLayoutManager), "initWithStorage:owner:", v10, v2);
        v13 = objc_msgSend(v2, "storage");
        if (v13)
        {
          v14 = v13;
          v15 = (uint64_t)objc_msgSend(v13, "length");
          swift_unknownObjectRelease(v14);
          if (v15 < 1)
          {
            v16 = (id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
            *(_QWORD *)&v19 = swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], v37, 0, 0).n128_u64[0];
            goto LABEL_26;
          }
          v16 = (id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
          v17 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], "firstObject", swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], v36, 0, 0).n128_f64[0]);
          if (v17)
          {
            v18 = v17;
            _bridgeAnyObjectToAny(_:)(v35, v17);
            swift_unknownObjectRelease(v18);
          }
          else
          {
            memset(v35, 0, sizeof(v35));
          }
          sub_1004D28A4((uint64_t)v35, (uint64_t)v37);
          if (v38)
          {
            v20 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
            if ((swift_dynamicCast(&v34, v37, (char *)&type metadata for Any + 8, v20, 6) & 1) != 0)
            {
              v21 = v34;
              v22 = objc_msgSend(v34, "storage");
              if (v22)
              {
                v23 = v22;
                type metadata accessor for CRLWPStorage();
                v24 = v10;
                v25 = v23;
                LOBYTE(v23) = static NSObject.== infix(_:_:)(v25, v24);

                if ((v23 & 1) != 0)
                {
                  if (!v12)
                  {

                    v31 = 0;
                    goto LABEL_31;
                  }
                  v26 = v12;
                  v27 = objc_msgSend(v26, "initialLayoutStateForLayout:", v2);

                  goto LABEL_30;
                }
              }

            }
          }
          else
          {
            sub_1004CB800((uint64_t)v37, &qword_1013E0230);
          }
          v28 = objc_msgSend(v2, "columns");
          if (v28)
          {
            v29 = v28;
            v30 = objc_msgSend(v28, "count");

            if (!v30)
            {
              if (!v12)
              {
                v31 = 0;
                goto LABEL_31;
              }
              v27 = objc_msgSend(v12, "initialLayoutStateForLayout:", v2);
LABEL_30:
              v31 = objc_msgSend(v12, "layOutIntoTarget:withLayoutState:outSync:", v2, v27, 0);
LABEL_31:
              objc_msgSend(v12, "destroyLayoutState:", v31);
              v32 = v12;
              objc_msgSend(v32, "resetDirtyRange");

              v2[v1] = 1;
              return;
            }
LABEL_26:
            objc_msgSend(*v16, "removeAllObjects", v19);
            v27 = 0;
            v31 = 0;
            if (!v12)
              goto LABEL_31;
            goto LABEL_30;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }

    }
    v8 = 0;
    goto LABEL_9;
  }
}

void __swiftcall CRLWPLayout.computeLayoutGeometry()(CRLCanvasLayoutGeometry_optional *__return_ptr retstr)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  double x;
  double y;
  double width;
  double height;
  id *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  uint64_t v26;
  id v27;
  id v28;
  double top;
  id v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  id v54;
  _OWORD v55[2];
  __int128 v56;
  uint64_t v57;
  char v58[24];
  __objc2_prot *v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v2 = v1;
  v3 = type metadata accessor for NSFastEnumerationIterator(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, "parent", v5);
  if (!v8)
    goto LABEL_11;
  v9 = v8;
  v59 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v10 = (void *)swift_dynamicCastObjCProtocolConditional(v8, 1, &v59);
  if (!v10)
  {

LABEL_11:
    v30 = objc_msgSend(v1, "info");
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v30, "geometry");
      swift_unknownObjectRelease(v31);
      objc_msgSend(v32, "size");
      v34 = v33;
      v36 = v35;

      objc_msgSend(objc_allocWithZone((Class)CRLCanvasLayoutGeometry), "initWithFrame:", 0.0, 0.0, v34, v36);
    }
    else
    {
      __break(1u);
    }
    return;
  }
  v11 = v10;
  if (objc_msgSend(v10, "autosizeFlagsFor:", v1))
  {
    x = CGRectNull.origin.x;
    y = CGRectNull.origin.y;
    width = CGRectNull.size.width;
    height = CGRectNull.size.height;
    v16 = (id *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], v58, 0, 0);
    v17 = *v16;
    NSArray.makeIterator()();

    NSFastEnumerationIterator.next()(&v56, v18);
    while (v57)
    {
      sub_10050CB14(&v56, v55);
      v19 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
      v20 = swift_dynamicCast(&v54, v55, (char *)&type metadata for Any + 8, v19, 6);
      if ((_DWORD)v20)
      {
        v21 = v54;
        objc_msgSend(v54, "frameBounds");
        v62.origin.x = v22;
        v62.origin.y = v23;
        v62.size.width = v24;
        v62.size.height = v25;
        v60.origin.x = x;
        v60.origin.y = y;
        v60.size.width = width;
        v60.size.height = height;
        v61 = CGRectUnion(v60, v62);
        x = v61.origin.x;
        y = v61.origin.y;
        width = v61.size.width;
        height = v61.size.height;

      }
      NSFastEnumerationIterator.next()(&v56, v20);
    }
    v26 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v27 = objc_msgSend(v2, "columnMetricsForCharIndex:outRange:", NSNotFound.getter(v26), 0);
    v28 = v27;
    if (v27)
      objc_msgSend(v27, "adjustedInsetsForTarget:", v2);
    else
      top = UIEdgeInsetsZero.top;
    v45 = sub_10062A5C0(top);
    objc_msgSend(v11, "autosizedFrameFor:textSize:", v2, sub_10062A5D4(x, y, width, height, v45, v46, v47, v48));
    v38 = v49;
    v40 = v50;
    v42 = v51;
    v44 = v52;
    swift_unknownObjectRelease(v28);
  }
  else
  {
    objc_msgSend(v11, "nonAutosizedFrameFor:", v1);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;
  }
  objc_msgSend(objc_allocWithZone((Class)CRLCanvasLayoutGeometry), "initWithFrame:", v38, v40, v42, v44);

}

uint64_t sub_100625424(double a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;

  v3 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage]
                + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  if (!v3)
    return 0;
  v6 = qword_1013DCB58;
  v7 = v3;
  if (v6 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v8 = (id)qword_10147ECB0;
  sub_100627450(v2, 1, &v19, a1, a2);

  v9 = v19;
  if (!v19)
  {

    return 0;
  }
  v10 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v11 = (char *)objc_msgSend(v7, "start");
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  result = NSNotFound.getter(v13);
  if (v12 == result)
  {
    v15 = 0x7FFFFFFFFFFFFFFFLL;
    v16 = 0;
  }
  else
  {
    v15 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v17 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v16 = v17 - v15;
    if (__OFSUB__(v17, v15))
    {
      __break(1u);
      return result;
    }
  }

  return v15 <= v10 && v16 + v15 >= v10;
}

void sub_1006255CC(char *a1@<X0>, char *a2@<X1>, double *a3@<X8>)
{
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v26;
  char **v27;
  double x;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  void *v33;
  objc_class *v34;
  char *v35;
  const char *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  BOOL IsNull;
  _BOOL4 v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  double *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  objc_super v62;
  void *v63;
  _OWORD v64[2];
  __int128 v65;
  uint64_t v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;

  v60 = type metadata accessor for NSFastEnumerationIterator(0);
  v59 = *(_QWORD *)(v60 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v60).n128_u64[0];
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, "layoutIsValid", v6) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"firstRect(for:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 310, "Layout must be valid.", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"firstRect(for:)", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2u, 310, (uint64_t)"Layout must be valid.", 21, 2u);
  }
  v9 = *(id *)&a1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  sub_1007D484C();
  v61 = v10;

  v11 = (char *)objc_msgSend(a2, "start");
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v12 == NSNotFound.getter(v13))
  {
    v14 = 0;
    v15 = 0x7FFFFFFFFFFFFFFFLL;
    v16 = 0;
  }
  else
  {
    v15 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v17 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    v16 = v17 - v15;
    if (__OFSUB__(v17, v15))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v14 = 0;
  }
  v58 = a3;
  v18 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity];
  v19 = objc_allocWithZone((Class)CRLWPSelection);
  LOBYTE(v55) = 1;
  v20 = objc_msgSend(v19, "initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:leadingEdge:storage:", 0, v15, v16, 0, v18, 0x7FFFFFFFFFFFFFFFLL, 0, v55, v61);
  v21 = objc_msgSend(a1, "columns");
  if (!v21)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  v22 = v21;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  NSArray.makeIterator()();

  v56 = &a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v27 = &selRef_imageWithSystemImageNamed_pointSize_;
  x = CGRectNull.origin.x;
  v29 = y;
  v30 = width;
  v31 = height;
  while (1)
  {
    NSFastEnumerationIterator.next()(&v65, v26);
    if (!v66)
      break;
    sub_10050CB14(&v65, v64);
    v32 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
    v26 = swift_dynamicCast(&v63, v64, (char *)&type metadata for Any + 8, v32, 6);
    if ((v26 & 1) != 0)
    {
      v33 = v63;
      v34 = (objc_class *)type metadata accessor for CRLWPLaidOutColumnProxy();
      v35 = (char *)objc_allocWithZone(v34);
      *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] = v33;
      v62.receiver = v35;
      v62.super_class = v34;
      v36 = v27[96];
      v37 = v33;
      v38 = (char *)objc_msgSendSuper2(&v62, v36);
      v57 = a2;
      v39 = (char *)objc_msgSend(a2, "start");
      v40 = *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      v42 = v14;
      if (v40 != NSNotFound.getter(v41))
      {
        v43 = *((_QWORD *)v56 + 1);
        v14 = v43 - *(_QWORD *)v56;
        if (__OFSUB__(v43, *(_QWORD *)v56))
          goto LABEL_33;
      }
      if (v14 < 1)
      {
        if (!v20)
          goto LABEL_36;
        objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column], "caretRectForSelection:", v20);
        x = v44;
        v29 = v45;
        v30 = v46;
        v31 = v47;
      }
      else
      {
        if (!v20)
          goto LABEL_35;
        objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column], "firstRectForSelection:includeSpaceAfter:includeSpaceBefore:includeLeading:", v20, 0, 0, 0);
        x = v67.origin.x;
        v29 = v67.origin.y;
        v30 = v67.size.width;
        v31 = v67.size.height;
        if (CGRectIsEmpty(v67))
        {
          x = CGRectNull.origin.x;
          v29 = y;
          v30 = width;
          v31 = height;
        }
      }
      v68.origin.x = x;
      v68.origin.y = v29;
      v68.size.width = v30;
      v68.size.height = v31;
      IsNull = CGRectIsNull(v68);

      v27 = &selRef_imageWithSystemImageNamed_pointSize_;
      v14 = v42;
      a2 = v57;
      if (!IsNull)
        break;
    }
  }
  (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v60);
  v69.origin.x = x;
  v69.origin.y = v29;
  v69.size.width = v30;
  v69.size.height = v31;
  v49 = CGRectIsNull(v69);

  v50 = 0.0;
  if (v49)
    v51 = 0.0;
  else
    v51 = v30;
  if (v49)
    v52 = 0.0;
  else
    v52 = x;
  if (v49)
    v53 = 0.0;
  else
    v53 = v29;
  v54 = v58;
  *v58 = v52;
  v54[1] = v53;
  if (!v49)
    v50 = v31;
  v54[2] = v51;
  v54[3] = v50;
}

double sub_100625AC8(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  objc_super v23;
  _BYTE v24[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v2 = (void *)qword_10147ECB0;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v3, v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLTextPosition();
  *(_QWORD *)(inited + 32) = a1;
  v5 = v2;
  v6 = a1;
  NSNotFound.getter(v6);
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v9 = (objc_class *)type metadata accessor for CRLTextRange();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v12 = v7;
  *((_QWORD *)v12 + 1) = v7;
  *(_QWORD *)&v10[v11] = v8;
  v23.receiver = v10;
  v23.super_class = v9;
  v13 = (char *)objc_msgSendSuper2(&v23, "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v8;
  v14 = sub_100625C78(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v21 = sub_100061400(v14, v16, v18, v20);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), (char *)&type metadata for Any + 8);

  return v21;
}

double sub_100625C78(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  char *v9;
  id v10;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v16;
  _QWORD v17[4];
  _BYTE v18[64];
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v2 = v1;
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v4 = (void *)qword_10147ECB0;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EF5E40;
  v7 = type metadata accessor for CRLTextRange();
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 32) = a1;
  inited = swift_initStackObject(v5, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v6;
  v17[3] = v7;
  v17[0] = a1;
  v9 = a1;
  v10 = v4;
  swift_bridgeObjectRetain(v6);
  sub_1006255CC(v2, v9, &v16.origin.x);
  swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
  v19 = CGRectIntegral(v16);
  x = v19.origin.x;
  y = v19.origin.y;
  width = v19.size.width;
  height = v19.size.height;
  if (!CGRectIsNull(v19))
  {
    v20.origin.x = x;
    v20.origin.y = y;
    v20.size.width = width;
    v20.size.height = height;
    v21.origin.x = CGRectGetMidX(v20);
    v21.size.width = 1.0;
    v21.origin.y = y;
    v21.size.height = height;
    *(_QWORD *)&x = (unint64_t)CGRectIntegral(v21);
  }
  swift_release(inited);

  swift_bridgeObjectRelease(v6);
  return x;
}

double sub_100625E38(void *a1)
{
  void *v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  double v12;
  objc_super v14;
  _QWORD v15[4];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v2 = (void *)qword_10147ECB0;
  v15[3] = type metadata accessor for CRLTextPosition();
  v15[0] = a1;
  v3 = v2;
  v4 = a1;
  NSNotFound.getter(v4);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v7 = (objc_class *)type metadata accessor for CRLTextRange();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v10 = &v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v10 = v5;
  *((_QWORD *)v10 + 1) = v5;
  *(_QWORD *)&v8[v9] = v6;
  v14.receiver = v8;
  v14.super_class = v7;
  v11 = (char *)objc_msgSendSuper2(&v14, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v6;
  v12 = sub_100625C78(v11);

  swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
  return v12;
}

void sub_100625FAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  BOOL v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  objc_class *v33;
  char *v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  id v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  id v66;
  void *v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v83;
  char *v84;
  char *v85;
  CGFloat *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  char v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  BOOL v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  id v114;
  id v115;
  uint64_t v116;
  char v117;
  __n128 v118;
  id v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  unint64_t v130;
  id v131;
  void *v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  char *v159;
  id v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  objc_super v172;
  objc_super v173;
  void *v174;
  uint64_t v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;

  v145 = a3;
  v157 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v154);
  v153 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v7);
  v152 = (uint64_t)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for NSFastEnumerationIterator(0);
  v146 = *(_QWORD *)(v147 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v147).n128_u64[0];
  v162 = (char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)a1, "layoutController", v9);
  if (!v11)
    goto LABEL_113;
  v12 = v11;
  v13 = objc_msgSend(v11, "canvas");
  if (!v13)
  {
LABEL_112:

LABEL_113:
    *v145 = (uint64_t)_swiftEmptyArrayStorage;
    return;
  }
  v137 = v12;
  v136 = v13;
  if (!objc_msgSend(v13, "isCanvasInteractive"))
  {

    v12 = v136;
    goto LABEL_112;
  }
  v175 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a2 >> 62)
    goto LABEL_123;
  v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v14)
  {
LABEL_127:
    swift_bridgeObjectRelease(a2);
    v123 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_128;
  }
LABEL_6:
  v15 = 0;
  v150 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage;
  v144 = a2 & 0xC000000000000001;
  v139 = a2 & 0xFFFFFFFFFFFFFF8;
  v138 = a2 + 32;
  v143 = 0x7FFFFFFFFFFFFFFFLL;
  v142 = 0;
  v161 = (char *)&type metadata for Any + 8;
  v167 = a1;
  v140 = a2;
  v141 = v14;
  do
  {
    if (v144)
    {
      v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a2);
    }
    else
    {
      if (v15 >= *(_QWORD *)(v139 + 16))
        goto LABEL_122;
      v16 = (char *)*(id *)(v138 + 8 * v15);
    }
    v159 = v16;
    v17 = __OFADD__(v15, 1);
    v18 = v15 + 1;
    if (v17)
      goto LABEL_120;
    v148 = v18;
    v19 = (char *)objc_msgSend(v159, "start");
    v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v22 = NSNotFound.getter(v21);
    v23 = v143;
    a2 = v142;
    if (v20 != v22)
    {
      v23 = *(_QWORD *)&v159[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v24 = *(_QWORD *)&v159[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      a2 = v24 - v23;
      if (__OFSUB__(v24, v23))
      {
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        if (a2 < 0)
          v124 = a2;
        else
          v124 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v14 = _CocoaArrayWrapper.endIndex.getter(v124);
        if (!v14)
          goto LABEL_127;
        goto LABEL_6;
      }
    }
    v158 = objc_msgSend(objc_allocWithZone((Class)CRLWPSelection), "initWithRange:", v23, a2);
    if (!v158)
    {
      v113 = &v180;
      goto LABEL_101;
    }
    v25 = objc_msgSend((id)a1, "columns");
    if (!v25)
      goto LABEL_154;
    v26 = v25;
    NSArray.makeIterator()();

    v27 = OBJC_IVAR____TtC8Freeform12CRLTextRange_range;
    NSFastEnumerationIterator.next()(&v177, v28);
    if (!v178)
    {
LABEL_99:
      (*(void (**)(char *, uint64_t))(v146 + 8))(v162, v147);

      v113 = &v179;
LABEL_101:

      goto LABEL_102;
    }
    v151 = (uint64_t *)&v159[v27];
    while (1)
    {
      sub_10050CB14(&v177, &v176);
      v31 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
      v30 = swift_dynamicCast(&v174, &v176, v161, v31, 6);
      if ((v30 & 1) == 0)
        goto LABEL_20;
      v32 = v174;
      v33 = (objc_class *)type metadata accessor for CRLWPLaidOutColumnProxy();
      v34 = (char *)objc_allocWithZone(v33);
      *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] = v32;
      v173.receiver = v34;
      v173.super_class = v33;
      v160 = v32;
      v163 = (char *)objc_msgSendSuper2(&v173, "init");
      v35 = *(id *)(a1 + v150);
      sub_1007D484C();
      v37 = v36;

      v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
      if (!v38)
        goto LABEL_153;
      v40 = *v151;
      v39 = v151[1];
      v41 = (uint64_t)v153;
      (*(void (**)(void))(*(_QWORD *)v38 + 760))();
      v42 = v152;
      sub_1004B8460(v41 + *(int *)(v154 + 20), v152, type metadata accessor for CRLWPStorageCRDTData);
      v43 = v37;
      sub_1004B84A4(v41, type metadata accessor for CRLWPShapeItemCRDTData);
      v44 = v156;
      v45 = v155;
      v46 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v155, v42, v157);
      sub_1004B84A4(v42, type metadata accessor for CRLWPStorageCRDTData);
      v47 = (char *)CRAttributedString.count.getter(v46);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);

      if ((uint64_t)v47 >= (v40 & ~(v40 >> 63)))
        a2 = v40 & ~(v40 >> 63);
      else
        a2 = (uint64_t)v47;
      if ((uint64_t)v47 >= (v39 & ~(v39 >> 63)))
        v47 = (char *)(v39 & ~(v39 >> 63));
      if ((uint64_t)v47 < a2)
        goto LABEL_118;
      KeyPath = (char *)swift_getKeyPath(&unk_100EFF2B0);
      v49 = sub_100DC42D4(KeyPath, v43, (char *)a2, v47);
      a2 = v50;
      swift_release(KeyPath);

      if ((a2 & 1) != 0)
      {
        if (!*(_QWORD *)(v49 + 16))
          goto LABEL_119;
        v51 = *(_QWORD *)(v49 + 32);
        sub_10062E238(v49, 1);
        v49 = v51;
      }
      v52 = objc_msgSend(v159, "isEmpty");
      v53 = v163;
      if (v52)
        break;
      *(_QWORD *)&v176 = 0;
      v58 = objc_msgSend(*(id *)&v163[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column], "rectsForSelection:ranges:", v158, &v176);
      if (v58)
      {
        v59 = v58;
        v60 = sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
        v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v60);

        v62 = (void *)v176;
      }
      else
      {
        v62 = (void *)v176;
        v61 = (uint64_t)_swiftEmptyArrayStorage;
      }
      v149 = v62;
      if (!((unint64_t)v61 >> 62))
      {
        v63 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v63)
          goto LABEL_40;
        goto LABEL_18;
      }
      if (v61 < 0)
        v112 = v61;
      else
        v112 = v61 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v61);
      v63 = _CocoaArrayWrapper.endIndex.getter(v112);
      swift_bridgeObjectRelease(v61);
      if (v63)
      {
LABEL_40:
        v64 = 0;
        v171 = v61 & 0xC000000000000001;
        v165 = v61 & 0xFFFFFFFFFFFFFF8;
        v164 = v61 + 32;
        v170 = v49 + 1;
        v166 = v49;
        v169 = v61;
        v168 = v63;
        while (1)
        {
          if (v171)
          {
            v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v61);
          }
          else
          {
            if (v64 >= *(_QWORD *)(v165 + 16))
              goto LABEL_115;
            v66 = *(id *)(v164 + 8 * v64);
          }
          v67 = v66;
          v17 = __OFADD__(v64++, 1);
          if (v17)
          {
            __break(1u);
LABEL_115:
            __break(1u);
            goto LABEL_116;
          }
          objc_msgSend(v66, "CGRectValue");
          v69 = v68;
          v71 = v70;
          v73 = v72;
          v75 = v74;
          a2 = (uint64_t)objc_msgSend((id)a1, "geometry");
          objc_msgSend((id)a2, "frame");

          v186.origin.x = sub_10005FDDC();
          v186.origin.y = v76;
          v186.size.width = v77;
          v186.size.height = v78;
          v184.origin.x = v69;
          v184.origin.y = v71;
          v184.size.width = v73;
          v184.size.height = v75;
          v185 = CGRectIntersection(v184, v186);
          x = v185.origin.x;
          y = v185.origin.y;
          width = v185.size.width;
          height = v185.size.height;
          if (!CGRectIsEmpty(v185))
            break;
          v65 = v67;
LABEL_42:

          if (v64 == v63)
            goto LABEL_18;
        }
        v83 = v49;
        if (v170 >= 3)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 39, (uint64_t)"Unknown direction.", 18, 2u);
          v83 = -1;
        }
        a2 = type metadata accessor for CRLTextSelectionRect();
        v84 = (char *)objc_allocWithZone((Class)a2);
        v85 = v84;
        v84[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
        v84[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
        v86 = (CGFloat *)&v84[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
        *v86 = x;
        v86[1] = y;
        v86[2] = width;
        v86[3] = height;
        if (v83 == 1)
        {
          v90 = v84;
          v89 = 1;
        }
        else if (v83)
        {
          v87 = v84;
          if (v83 != -1)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
            v49 = v166;
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 24, (uint64_t)"Unknown direction.", 18, 2u);
          }
          v89 = -1;
        }
        else
        {
          v88 = v84;
          v89 = 0;
        }
        *(_QWORD *)&v85[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = v89;

        v172.receiver = v85;
        v172.super_class = (Class)a2;
        v65 = objc_msgSendSuper2(&v172, "init");
        v91 = v175;
        if (!((unint64_t)v175 >> 62))
        {
          v92 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v175, 2);
          if (v92)
            goto LABEL_61;
LABEL_66:
          swift_bridgeObjectRelease_n(v91, 2);
          v96 = v65;
          a2 = (uint64_t)&v175;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
          v98 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v97 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFFF8) + 0x18);
          a1 = v167;
          if (v98 >= v97 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
          v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v96);
          specialized Array._endMutation()(v99);
LABEL_69:

          v61 = v169;
          v63 = v168;
          goto LABEL_42;
        }
        if (v175 < 0)
          v111 = v175;
        else
          v111 = v175 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v175, 2);
        v92 = _CocoaArrayWrapper.endIndex.getter(v111);
        if (!v92)
          goto LABEL_66;
LABEL_61:
        if ((v91 & 0xC000000000000001) != 0)
          v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v91);
        else
          v93 = *(id *)(v91 + 32);
        v94 = v93;
        v95 = static NSObject.== infix(_:_:)(v93, v65);

        if ((v95 & 1) == 0)
        {
          if (v92 == 1)
            goto LABEL_66;
          if ((v91 & 0xC000000000000001) != 0)
          {
            v100 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v91);
            v101 = static NSObject.== infix(_:_:)(v100, v65);
            swift_unknownObjectRelease(v100);
            if ((v101 & 1) == 0)
            {
              if (v92 != 2)
              {
                a1 = 2;
                while (1)
                {
                  v102 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v91);
                  v103 = a1 + 1;
                  if (__OFADD__(a1, 1))
                    break;
                  v104 = v102;
                  v105 = static NSObject.== infix(_:_:)(v102, v65);
                  swift_unknownObjectRelease(v104);
                  if ((v105 & 1) != 0)
                    goto LABEL_87;
                  ++a1;
                  v106 = v103 == v92;
                  v49 = v166;
                  if (v106)
                    goto LABEL_66;
                }
LABEL_116:
                __break(1u);
LABEL_117:
                __break(1u);
LABEL_118:
                __break(1u);
LABEL_119:
                __break(1u);
LABEL_120:
                __break(1u);
                goto LABEL_121;
              }
              goto LABEL_66;
            }
          }
          else
          {
            a1 = (uint64_t)*(id *)(v91 + 40);
            v107 = static NSObject.== infix(_:_:)(a1, v65);

            if ((v107 & 1) == 0)
            {
              if (v92 == 2)
                goto LABEL_66;
              v108 = 6;
              while (1)
              {
                v109 = v108 - 3;
                if (__OFADD__(v108 - 4, 1))
                  goto LABEL_117;
                a1 = (uint64_t)*(id *)(v91 + 8 * v108);
                v110 = static NSObject.== infix(_:_:)(a1, v65);

                if ((v110 & 1) != 0)
                  break;
                ++v108;
                v106 = v109 == v92;
                v49 = v166;
                if (v106)
                  goto LABEL_66;
              }
LABEL_87:
              swift_bridgeObjectRelease_n(v91, 2);
              a1 = v167;
              v49 = v166;
              goto LABEL_69;
            }
          }
        }
        swift_bridgeObjectRelease_n(v91, 2);
        a1 = v167;
        goto LABEL_69;
      }
LABEL_18:

      swift_bridgeObjectRelease(v61);
      v29 = &v182;
LABEL_19:

LABEL_20:
      NSFastEnumerationIterator.next()(&v177, v30);
      if (!v178)
        goto LABEL_99;
    }
    objc_msgSend(*(id *)&v163[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column], "caretRectForSelection:", v158);
    v54 = v183.origin.x;
    v55 = v183.origin.y;
    v56 = v183.size.width;
    v57 = v183.size.height;
    if (CGRectIsNull(v183))
    {

      v29 = &v181;
      goto LABEL_19;
    }
    if ((unint64_t)(v49 + 1) >= 3)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 39, (uint64_t)"Unknown direction.", 18, 2u);
      v49 = -1;
    }
    v114 = objc_allocWithZone((Class)type metadata accessor for CRLTextSelectionRect());
    v115 = sub_10060FF80(v49, v54, v55, v56, v57);
    v116 = v175;
    swift_bridgeObjectRetain(v175);
    v117 = sub_100C9DCF4((uint64_t)v115, v116);
    v118 = swift_bridgeObjectRelease(v116);
    if ((v117 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v146 + 8))(v162, v147, v118);

      v113 = &v181;
      goto LABEL_101;
    }
    v119 = v115;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v119);
    v121 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v120 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v121 >= v120 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v120 > 1, v121 + 1, 1);
    v122 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v121, v119);
    specialized Array._endMutation()(v122);

    (*(void (**)(char *, uint64_t))(v146 + 8))(v162, v147);
LABEL_102:
    a2 = v140;
    v15 = v148;
  }
  while (v148 != v141);
  swift_bridgeObjectRelease(v140);
  v123 = v175;
LABEL_128:
  if (v123 < 0 || (v123 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n(v123, 2);
    v125 = (uint64_t)sub_1005FF85C(v123);
    swift_bridgeObjectRelease(v123);
  }
  else
  {
    v125 = v123 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v123, 2);
  }
  *(_QWORD *)&v177 = v125;
  sub_10062A69C((uint64_t *)&v177);
  swift_bridgeObjectRelease(v123);
  v126 = v177;
  if ((v177 & 0x8000000000000000) == 0 && (v177 & 0x4000000000000000) == 0)
  {
    v127 = *(_QWORD *)(v177 + 16);
    swift_retain(v177);
    if (v127)
      goto LABEL_134;
LABEL_146:

    swift_release_n(v126, 2, v134);
    goto LABEL_147;
  }
  swift_retain(v177);
  v127 = _CocoaArrayWrapper.endIndex.getter(v133);
  if (!v127)
    goto LABEL_146;
LABEL_134:
  if ((v126 & 0xC000000000000001) != 0)
  {
    v128 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v126);
  }
  else
  {
    if (!*(_QWORD *)(v126 + 16))
    {
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
    v128 = *(id *)(v126 + 32);
  }
  v129 = v128;
  objc_msgSend(v128, "setContainsStart:", 1, swift_release(v126).n128_f64[0]);

  v130 = v127 - 1;
  if (__OFSUB__(v127, 1))
  {
    __break(1u);
    goto LABEL_150;
  }
  if ((v126 & 0xC000000000000001) == 0)
  {
    if ((v130 & 0x8000000000000000) == 0)
    {
      if (v130 < *(_QWORD *)(v126 + 16))
      {
        v131 = *(id *)(v126 + 8 * v130 + 32);
        goto LABEL_143;
      }
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
    }
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  v131 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v130, v126);
LABEL_143:
  v132 = v131;
  objc_msgSend(v131, "setContainsEnd:", 1, swift_release(v126).n128_f64[0]);

LABEL_147:
  *v145 = v123;
}

id sub_100627208(double a1, double a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  _BYTE v16[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v5 = (void *)qword_10147ECB0;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v6, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  type metadata accessor for CGPoint(0);
  *(double *)(inited + 32) = a1;
  *(_QWORD *)(inited + 56) = v8;
  *(double *)(inited + 40) = a2;
  v9 = v5;
  isa = (Class)objc_msgSend(v2, "columns");
  if (isa)
  {
    v15 = 0;
    v11 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
    static Array._conditionallyBridgeFromObjectiveC(_:result:)(isa, &v15, v11);
    swift_bridgeObjectRetain(inited);

    v12 = v15;
    if (v15)
    {
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      isa = 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain(inited);
  }
  v13 = objc_msgSend((id)objc_opt_self(CRLWPColumn), "closestColumnInColumnsArray:forPoint:ignoreEmptyColumns:ignoreDrawableOnlyColumns:", isa, 0, 1, a1, a2);
  swift_bridgeObjectRelease(inited);

  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), (char *)&type metadata for Any + 8);

  return v13;
}

void sub_100627450(void *a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  objc_class *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  objc_class *v20;
  char *v21;
  id v22;
  objc_super v23;
  objc_super v24;
  uint64_t v25;

  v9 = objc_msgSend(a1, "columns");
  if (v9
    && (v10 = v9,
        v25 = 0,
        v11 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08),
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(v10, &v25, v11),
        v10,
        v25)
    && (swift_bridgeObjectRelease(v25), (v12 = sub_100627208(a4, a5)) != 0))
  {
    v13 = v12;
    v14 = (objc_class *)type metadata accessor for CRLWPLaidOutColumnProxy();
    v15 = (char *)objc_allocWithZone(v14);
    *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] = v13;
    v24.receiver = v15;
    v24.super_class = v14;
    v16 = v13;
    v17 = (char *)objc_msgSendSuper2(&v24, "init");
    LOBYTE(v25) = 0;
    v18 = objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column], "charIndexFromPoint:allowPastBreak:pastCenterGoesToNextChar:allowNotFound:isAtEndOfLine:leadingEdge:", 0, a2 & 1, 0, &v25, 0, a4, a5);
    v19 = v25;
    v20 = (objc_class *)type metadata accessor for CRLTextPosition();
    v21 = (char *)objc_allocWithZone(v20);
    *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
    *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v18;
    *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v19;
    v23.receiver = v21;
    v23.super_class = v20;
    v22 = objc_msgSendSuper2(&v23, "init");

    *a3 = v22;
  }
  else
  {
    *a3 = 0;
  }
}

unint64_t sub_100627624(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  char v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v3 = v2;
  v6 = objc_msgSend(a1, "end");
  v7 = objc_msgSend(a1, "start");
  v8 = sub_1008AF010((uint64_t)v6, v7);

  if ((v8 & 1) != 0)
    return (unint64_t)objc_msgSend(a1, "start");
  v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v11 + 32) = a1;
  v25 = v11;
  specialized Array._endMutation()(v11);
  v12 = v25;
  v13 = qword_1013DCB58;
  v14 = a1;
  if (v13 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v15 = (id)qword_10147ECB0;
  swift_bridgeObjectRetain(v25);
  sub_100625FAC(v3, v25, (uint64_t *)&v25);

  result = swift_bridgeObjectRelease_n(v12, 2);
  v16 = v25;
  if ((unint64_t)(a2 - 3) <= 1)
  {
    if (v25 >> 62)
    {
      if ((v25 & 0x8000000000000000) != 0)
        v22 = v25;
      else
        v22 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v17 = (void *)_CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease();
      if (v17)
        goto LABEL_8;
    }
    else
    {
      v17 = *(void **)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17)
      {
LABEL_8:
        if ((v16 & 0xC000000000000001) != 0)
        {
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
          goto LABEL_11;
        }
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v18 = *(id *)(v16 + 32);
LABEL_11:
          v17 = v18;
          objc_msgSend(v18, "rect", swift_bridgeObjectRelease().n128_f64[0]);
          v19 = CGRectGetMinX(v26) + 1.0;
          objc_msgSend(v17, "rect");
          v20 = CGRectGetMinY(v27) + 1.0;
LABEL_30:
          v24 = sub_10062E3A0(v19, v20);

          return (unint64_t)v24;
        }
        __break(1u);
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease();
    v20 = 1.0;
    v19 = 1.0;
    goto LABEL_30;
  }
  if (!(v25 >> 62))
  {
    v17 = *(void **)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_14;
LABEL_29:
    swift_bridgeObjectRelease();
    v20 = -1.0;
    v19 = -1.0;
    goto LABEL_30;
  }
  if ((v25 & 0x8000000000000000) != 0)
    v23 = v25;
  else
    v23 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v25);
  v17 = (void *)_CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_29;
LABEL_14:
  result = (unint64_t)v17 - 1;
  if (__OFSUB__(v17, 1))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v16);
    goto LABEL_19;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v21 = *(id *)(v16 + 8 * result + 32);
LABEL_19:
    v17 = v21;
    objc_msgSend(v21, "rect", swift_bridgeObjectRelease().n128_f64[0]);
    v19 = CGRectGetMaxX(v28) + -1.0;
    objc_msgSend(v17, "rect");
    v20 = CGRectGetMaxY(v29) + -1.0;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_100627950(char *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  double *v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  switch(a2)
  {
    case 2:
      v3 = 2;
      goto LABEL_10;
    case 3:
      v3 = 3;
LABEL_10:
      v9 = sub_100627BC4(a1, v3, 1);
      if (!v9)
        v9 = a1;
      v5 = (double *)v9;
      v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
      if ((v10 & 0x8000000000000000) != 0
        || (v11 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location),
            (v11 & 0x8000000000000000) != 0))
      {
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
        __break(1u);
        JUMPOUT(0x100627BB4);
      }
      v7 = sub_10062E288(v10, v11);
      v13 = v12;
      goto LABEL_22;
    case 4:
      v4 = sub_100627BC4(a1, 4, 0);
      if (v4)
      {
        v5 = (double *)v4;
        v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        v7 = v6 - 1;
        if (!__OFSUB__(v6, 1))
          goto LABEL_21;
        __break(1u);
LABEL_7:
        v8 = sub_100627BC4(a1, 5, 0);
        if (v8)
        {
          v5 = (double *)v8;
          v7 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          goto LABEL_21;
        }
      }
      else
      {
        v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        v7 = v15 - 1;
        if (!__OFSUB__(v15, 1))
          goto LABEL_20;
        __break(1u);
      }
      v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
LABEL_20:
      v5 = a1;
LABEL_21:
      v13 = 1;
LABEL_22:
      v14 = 1;
LABEL_23:
      v16 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
      v17 = sub_10060EDE4(v7, v13);
      if (v14)

      return v17;
    case 5:
      goto LABEL_7;
    default:
      v7 = 0x7FFFFFFFFFFFFFFFLL;
      v13 = 0;
      v5 = _swiftEmptyArrayStorage;
      sub_100757E04(&_mh_execute_header, (uint64_t)"characterRange(byExtending:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 530, "invalid text layout direction", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"characterRange(byExtending:in:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2u, 530, (uint64_t)"invalid text layout direction", 29, 2u);
      v14 = 0;
      goto LABEL_23;
  }
}

char *sub_100627BC4(char *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _BOOL4 v24;
  BOOL v25;
  uint64_t v26;
  char **v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  char *v31;
  id v32;
  BOOL v33;
  uint64_t v34;
  void *v35;
  void *v36;
  objc_super v37;
  double v38;

  v4 = v3;
  v8 = objc_msgSend(v3, "layoutController");
  if (!v8)
    return 0;
  v9 = v8;
  v10 = objc_msgSend(v8, "canvas");
  if (!v10)
  {

    return 0;
  }
  v11 = v10;
  if ((objc_msgSend(v10, "isCanvasInteractive") & 1) == 0)
  {

    return 0;
  }
  v36 = v11;
  v12 = objc_msgSend(v3, "layoutController");
  if (!v12)
  {
    __break(1u);
    JUMPOUT(0x100627FC0);
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "canvas");

  v15 = objc_msgSend(v14, "canvasController");
  if (!v15)
  {

    return 0;
  }
  v16 = *(id *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  sub_1007D484C();
  v18 = v17;

  v19 = objc_msgSend(objc_allocWithZone((Class)CRLWPEditorHelper), "initWithTextSource:icc:layout:", v18, v15, v4);
  v21 = NSNotFound.getter(v20);
  if (v21 == a3)
  {

    return a1;
  }
  v24 = (a2 & 0xFFFFFFFFFFFFFFFELL) == 4;
  v35 = v15;
  if (a3 < 0)
  {
    v33 = __OFSUB__(0, a3);
    a3 = -a3;
    if (v33)
      goto LABEL_35;
    v34 = a2 - 2;
    a2 = 5;
    switch(v34)
    {
      case 0:
        a2 = 3;
        break;
      case 1:
        a2 = 2;
        break;
      case 2:
        break;
      case 3:
        a2 = 4;
        break;
      default:
        sub_100757E04(&_mh_execute_header, (uint64_t)"flipDirection(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 547, "Unknown direction type.", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"flipDirection(_:)", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2u, 547, (uint64_t)"Unknown direction type.", 23, 2u);
        break;
    }
  }
  NSNotFound.getter(v21);
  v25 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] == 1;
  v38 = sub_100625AC8(a1);
  if (a3 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
  }
  if (a3)
  {
    v26 = 4 * v24;
    v22 = a1;
    v27 = &selRef_parentMapOfItemsFrom_;
    while (1)
    {
      v32 = objc_msgSend(v19, v27[106], v22, v26, a2, &v38);
      if (v32 == (id)NSNotFound.getter(v32))
        goto LABEL_19;
      if (a2 == 4)
      {
        if (v25)
          goto LABEL_25;
      }
      else if (a2 == 5 && v25)
      {
LABEL_25:
        v28 = 1;
        v25 = 1;
        goto LABEL_18;
      }
      v28 = 0;
      v25 = 0;
LABEL_18:
      v29 = (objc_class *)type metadata accessor for CRLTextPosition();
      v30 = (char *)objc_allocWithZone(v29);
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v32;
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v28;
      v37.receiver = v30;
      v37.super_class = v29;
      v31 = (char *)objc_msgSendSuper2(&v37, "init");

      v22 = v31;
      v27 = &selRef_parentMapOfItemsFrom_;
LABEL_19:
      if (!--a3)
        goto LABEL_30;
    }
  }
  v22 = a1;
LABEL_30:

  return v22;
}

double *CRLWPLayout.dependentLayouts.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __objc2_prot *v12;
  objc_super v13;
  double *v14;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for CRLWPLayout();
  v1 = objc_msgSendSuper2(&v13, "dependentLayouts");
  if (v1)
  {
    v2 = v1;
    v3 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
    v4 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v14 = v4;
  v5 = objc_msgSend(v0, "parent");
  if (v5)
  {
    v6 = v5;
    v12 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
    v7 = (void *)swift_dynamicCastObjCProtocolConditional(v5, 1, &v12);
    if (v7)
    {
      v8 = objc_msgSend(v7, "dependentsOf:", v0);
      v9 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

      sub_100620F64(v10, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100603244);
      return v14;
    }
    else
    {

    }
  }
  return v4;
}

void CRLWPLayout.layoutSearch(for:options:hit:completionBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(__n128), uint64_t a7)
{
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  id *v29;
  double v30;
  id v31;
  void (*v32)(__n128);
  id v33;
  id v34;
  id location;
  __n128 v36;
  uint64_t v37;
  NSUInteger length;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  NSUInteger v56;
  NSUInteger v57;
  NSUInteger v58;
  NSRange v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id *v63;
  uint64_t v64;
  id v65;
  void (*v66)(__n128);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  __int128 v75;
  __int128 v76;
  char v77[24];
  _QWORD aBlock[3];
  void *v79;
  uint64_t (*v80)(void *);
  _QWORD *v81;
  __objc2_prot *v82;
  NSRange v83;
  NSRange v84;

  v69 = a4;
  v70 = a5;
  v72 = a2;
  v73 = a3;
  v71 = a1;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(v7, "storage", v18);
  if (!v21)
    goto LABEL_12;
  v22 = v21;
  v23 = type metadata accessor for CRLWPStorage();
  v68 = (char *)swift_dynamicCastClass(v22, v23);
  if (!v68)
    goto LABEL_11;
  v67 = a7;
  v24 = objc_msgSend(v7, "layoutController");
  if (!v24
    || (v25 = v24,
        v66 = a6,
        v26 = objc_msgSend(v24, "canvas"),
        v25,
        !v26)
    || (v27 = objc_msgSend(v26, "delegate"), v26, !v27))
  {
LABEL_11:
    swift_unknownObjectRelease(v22);
LABEL_12:
    sub_100757E04(&_mh_execute_header, (uint64_t)"layoutSearch(for:options:hit:completionBlock:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 608, "nil storage or searchCanvasDelegate", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSearch(for:options:hit:completionBlock:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2u, 608, (uint64_t)"nil storage or searchCanvasDelegate", 35, 2u);
    return;
  }
  v82 = &OBJC_PROTOCOL___CRLSearchCanvasDelegate;
  v28 = swift_dynamicCastObjCProtocolConditional(v27, 1, &v82);
  if (!v28)
  {
    swift_unknownObjectRelease(v27);
    goto LABEL_11;
  }
  v64 = v28;
  v65 = v27;
  if (!CRLWPLayout.isOverflowing()())
  {
    v34 = v68;
    location = objc_msgSend(v68, "range");
    length = v37;
    v32 = v66;
    if (v37 < 1)
      goto LABEL_37;
    goto LABEL_15;
  }
  v29 = (id *)&v7[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
  *(_QWORD *)&v30 = swift_beginAccess(&v7[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], v77, 0, 0).n128_u64[0];
  v63 = v29;
  v31 = objc_msgSend(*v29, "firstObject", v30);
  v32 = v66;
  if (v31)
  {
    v33 = v31;
    _bridgeAnyObjectToAny(_:)(&v75, v31);
    swift_unknownObjectRelease(v33);
  }
  else
  {
    v75 = 0u;
    v76 = 0u;
  }
  sub_1004D28A4((uint64_t)&v75, (uint64_t)aBlock);
  if (!v79)
  {
    v50 = sub_1004CB800((uint64_t)aBlock, &qword_1013E0230);
LABEL_34:
    v60 = *(_QWORD *)&v68[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v60)
    {
      __break(1u);
      return;
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 760))(v50);
    sub_1004B8460((uint64_t)&v16[*(int *)(v14 + 20)], (uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v20, v10);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    v48 = (id)CRAttributedString.attributedString.getter(v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    objc_msgSend(v48, "length");
    goto LABEL_36;
  }
  v49 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
  v50 = swift_dynamicCast(&v74, aBlock, (char *)&type metadata for Any + 8, v49, 6);
  if ((v50 & 1) == 0)
  {
LABEL_33:
    v32 = v66;
    goto LABEL_34;
  }
  v62 = v74;
  v51 = objc_msgSend(*v63, "lastObject");
  if (v51)
  {
    v52 = v51;
    _bridgeAnyObjectToAny(_:)(&v75, v51);
    swift_unknownObjectRelease(v52);
  }
  else
  {
    v75 = 0u;
    v76 = 0u;
  }
  sub_1004D28A4((uint64_t)&v75, (uint64_t)aBlock);
  if (!v79)
  {

    v50 = sub_1004CB800((uint64_t)aBlock, &qword_1013E0230);
    goto LABEL_33;
  }
  if ((swift_dynamicCast(&v74, aBlock, (char *)&type metadata for Any + 8, v49, 6) & 1) == 0)
  {

    goto LABEL_33;
  }
  v53 = v74;
  v54 = v62;
  v55 = objc_msgSend(v62, "range");
  v57 = v56;
  v84.location = (NSUInteger)objc_msgSend(v53, "range");
  v84.length = v58;
  v83.location = (NSUInteger)v55;
  v83.length = v57;
  v59 = NSUnionRange(v83, v84);
  location = (id)v59.location;
  length = v59.length;

  v32 = v66;
  v34 = v68;
  if ((uint64_t)v59.length < 1)
    goto LABEL_37;
LABEL_15:
  v39 = (_QWORD *)swift_allocObject(&unk_101272E80, 40, 7);
  v40 = v69;
  v41 = v70;
  v39[2] = v7;
  v39[3] = v40;
  v39[4] = v41;
  v42 = objc_allocWithZone((Class)CRLWPSearch);
  v43 = v65;
  swift_unknownObjectRetain(v65);
  v44 = v7;
  swift_retain(v41);
  v45 = v72;
  swift_bridgeObjectRetain(v72);
  swift_retain(v39);
  swift_unknownObjectRetain(v22);
  v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v45);
  v80 = sub_10062A5EC;
  v81 = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100628D1C;
  v79 = &unk_101272E98;
  v47 = _Block_copy(aBlock);
  v48 = objc_msgSend(v42, "initWithString:options:hitBlock:storage:range:searchCanvasDelegate:", v46, v73, v47, v34, location, length, v64);

  swift_unknownObjectRelease(v22);
  _Block_release(v47);
  swift_release(v81);
  sub_1007E0E80(v48);
  LOBYTE(v46) = objc_msgSend(v48, "isComplete");
  swift_unknownObjectRelease(v43);
  v36 = swift_release(v39);
  if ((v46 & 1) != 0)
  {
LABEL_36:

    goto LABEL_37;
  }
  if (v48)
  {
    v48 = v48;
    if ((objc_msgSend(v48, "isComplete") & 1) == 0)
    {
      do
      {
        objc_msgSend(v34, "continueSearch:", v48);

      }
      while (!objc_msgSend(v48, "isComplete"));
    }

    goto LABEL_36;
  }
LABEL_37:
  if (v32)
    v32(v36);
  swift_unknownObjectRelease(v22);
  swift_unknownObjectRelease(v65);
}

void CRLWPLayout.layoutSearchForSpellingErrors(hit:stop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  char *v23;
  _QWORD v24[5];
  _QWORD *v25;
  __objc2_prot *v26;
  char v27[24];

  v4 = v3;
  if ((uint64_t)objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], "count", swift_beginAccess(&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns], v27, 0, 0).n128_f64[0]) < 1)return;
  v8 = objc_msgSend(v4, "storage");
  if (!v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "range");
  v12 = v11;
  swift_unknownObjectRelease(v9);
  if (v12 < 1)
    return;
  v13 = objc_msgSend(v4, "layoutController");
  if (!v13)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "canvas");

  if (v15)
  {
    v16 = objc_msgSend(v15, "delegate");

    if (v16)
    {
      v26 = &OBJC_PROTOCOL___CRLSearchCanvasDelegate;
      v17 = swift_dynamicCastObjCProtocolConditional(v16, 1, &v26);
      if (v17
        && (v18 = objc_msgSend((id)objc_opt_self(CRLWPStorageSpellChecker), "newSpellCheckerForStorage:selectionPath:orSearchCanvasDelegate:", *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage], 0, v17)) != 0)
      {
        v19 = v18;
        v20 = (_QWORD *)swift_allocObject(&unk_101272ED0, 40, 7);
        v20[2] = v4;
        v20[3] = a1;
        v20[4] = a2;
        v24[4] = sub_10062A690;
        v25 = v20;
        v24[0] = _NSConcreteStackBlock;
        v24[1] = *(_QWORD *)"";
        v24[2] = sub_100628D1C;
        v24[3] = &unk_101272EE8;
        v21 = _Block_copy(v24);
        v22 = v25;
        v23 = v4;
        swift_retain(a2);
        swift_retain(v20);
        objc_msgSend(v19, "findErrorsInRange:onHit:stop:", v10, v12, v21, a3, swift_release(v22).n128_f64[0]);
        _Block_release(v21);
        swift_unknownObjectRelease(v16);

        swift_release(v20);
      }
      else
      {
        swift_unknownObjectRelease(v16);
      }
    }
  }
}

void sub_100628C0C(void *a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v6;

  if (a1)
  {
    swift_unknownObjectRetain(a1);
    objc_msgSend(a2, "calculatePointFromSearchReference:", a1);
    objc_msgSend(a1, "setSearchReferencePoint:");
    v6 = swift_unknownObjectRetain(a1);
    a3(v6);
    swift_unknownObjectRelease_n(a1, 2);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"layoutSearchForSpellingErrors(hit:stop:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 648, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSearchForSpellingErrors(hit:stop:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2u, 648, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_100628D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void CRLWPLayout.rectInRoot(for:)(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  Class isa;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  objc_class *v34;
  objc_super v35;
  id v36;
  _QWORD v37[5];
  objc_super v38;
  CGRect v39;

  v3 = objc_msgSend(v1, "layoutController");
  if (!v3)
  {
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "canvas");

  if (!v5 || (v6 = objc_msgSend(v5, "canvasController"), v5, !v6))
  {
LABEL_13:
    v34 = (objc_class *)type metadata accessor for CRLWPLayout();
    v38.receiver = v1;
    v38.super_class = v34;
    objc_msgSendSuper2(&v38, "rectInRootForSelectionPath:", a1);
    return;
  }
  v7 = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
  v9 = objc_msgSend(a1, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v7, v8));
  if (!v9)
  {
LABEL_12:

    goto LABEL_13;
  }
  v10 = v9;
  v11 = objc_opt_self(CRLWPSelection);
  v12 = swift_dynamicCastObjCClass(v10, v11);
  if (!v12)
    goto LABEL_11;
  v13 = v12;
  v14 = objc_msgSend(v1, "columns");
  if (!v14
    || (v15 = v14,
        v37[0] = 0,
        v16 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08),
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(v15, v37, v16),
        v15,
        (v17 = v37[0]) == 0))
  {
LABEL_11:

    goto LABEL_12;
  }
  v18 = objc_msgSend(v6, "modelsForSelectionPath:", a1);
  v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v36 = *(id *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  v20 = type metadata accessor for CRLWPStorage();
  v21 = sub_1004B7878((unint64_t *)&unk_1013E8590, (uint64_t (*)(uint64_t))type metadata accessor for CRLWPStorage, (uint64_t)&protocol conformance descriptor for NSObject);
  v22 = v36;
  AnyHashable.init<A>(_:)(&v36, v20, v21);
  LOBYTE(v20) = sub_10062309C((uint64_t)v37, v19);
  swift_bridgeObjectRelease(v19);
  sub_1004B89A4((uint64_t)v37);
  if ((v20 & 1) == 0)
  {

    swift_bridgeObjectRelease(v17);
    goto LABEL_13;
  }
  v23 = (void *)objc_opt_self(CRLWPColumn);
  v24 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "rectForSelection:withColumns:useParagraphModeRects:", v13, isa, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v39.origin.x = v27;
  v39.origin.y = v29;
  v39.size.width = v31;
  v39.size.height = v33;
  if (CGRectIsNull(v39))
  {
    v35.receiver = v1;
    v35.super_class = (Class)type metadata accessor for CRLWPLayout();
    objc_msgSendSuper2(&v35, "rectInRootForSelectionPath:", a1);
  }
  else
  {
    objc_msgSend(v1, "rectInRoot:", v27, v29, v31, v33);
  }

}

double CRLWPLayout.rectInRootOfAutoZoomContext(of:)(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  objc_super v11;

  v3 = objc_msgSend(v1, "parent");
  if (!v3)
    goto LABEL_5;
  v4 = v3;
  v5 = objc_opt_self(CRLWPShapeLayout);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
  {

LABEL_5:
    v11.receiver = v1;
    v11.super_class = (Class)type metadata accessor for CRLWPLayout();
    objc_msgSendSuper2(&v11, "rectInRootOfAutoZoomContextOfSelectionPath:", a1);
    return v9;
  }
  objc_msgSend(v6, "rectInRootOfAutoZoomContextOfSelectionPath:", a1);
  v8 = v7;

  return v8;
}

void CRLWPLayout.viewScaleForZooming(to:targetPointSize:)(uint64_t a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  objc_super v9;

  v5 = objc_msgSend(v2, "parent");
  if (v5)
  {
    v6 = v5;
    v7 = objc_opt_self(CRLWPShapeLayout);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      objc_msgSend(v8, "viewScaleForZoomingToSelectionPath:targetPointSize:", a1, a2);

      return;
    }

  }
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for CRLWPLayout();
  objc_msgSendSuper2(&v9, "viewScaleForZoomingToSelectionPath:targetPointSize:", a1, a2);
}

Swift::Bool __swiftcall CRLWPLayout.isOverflowing()()
{
  void *v0;
  id v1;
  id v2;
  unsigned int v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  id v12;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  v1 = objc_msgSend(v0, "storage");
  if (!v1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v2 = v1;
  v3 = objc_msgSend(v1, "wpKind");
  swift_unknownObjectRelease(v2);
  if (v3 != 3)
    goto LABEL_13;
  v1 = objc_msgSend(v0, "storage");
  if (!v1)
    goto LABEL_16;
  v4 = v1;
  v5 = (uint64_t)objc_msgSend(v1, "length");
  swift_unknownObjectRelease(v4);
  if (v5 < 1)
    goto LABEL_13;
  v1 = objc_msgSend(v0, "columns");
  if (!v1)
  {
LABEL_17:
    __break(1u);
    return (char)v1;
  }
  v6 = v1;
  v7 = objc_msgSend(v1, "lastObject");

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)(v13, v7);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1004D28A4((uint64_t)v13, (uint64_t)v14);
  if (!v15)
  {
    sub_1004CB800((uint64_t)v14, &qword_1013E0230);
    goto LABEL_13;
  }
  v8 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
  if ((swift_dynamicCast(&v12, v14, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
LABEL_13:
    LOBYTE(v1) = 0;
    return (char)v1;
  }
  v9 = v12;
  v10 = (unint64_t)objc_msgSend(v12, "layoutResultFlags");

  return (v10 >> 1) & 1;
}

id CRLWPLayout.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id CRLWPLayout.textWrapper()()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;

  v1 = objc_msgSend(v0, "parent");
  if (v1)
  {
    v2 = objc_opt_self(CRLWPShapeLayout);
    v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
    if (!v3)

    v1 = objc_msgSend(v3, "textWrapper");
  }
  return v1;
}

id CRLWPLayout.columnMetrics(forCharIndex:outRange:)()
{
  void *v0;
  id result;
  void *v2;
  _QWORD v3[2];

  result = objc_msgSend(v0, "parent");
  if (result)
  {
    v2 = result;
    v3[0] = &OBJC_PROTOCOL___NSObject;
    v3[1] = &OBJC_PROTOCOL___CRLWPColumnMetrics;
    result = (id)swift_dynamicCastObjCProtocolConditional(result, 2, v3);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void *CRLWPLayout.columns.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void *CRLWPLayout.storage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage);
  v2 = v1;
  return v1;
}

id CRLWPLayout.isInstructional.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  char v5;
  id result;
  id v7;
  id v8;
  __objc2_prot *v9;

  v1 = objc_msgSend(v0, "parent");
  if (v1)
  {
    v2 = v1;
    v9 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
    v3 = (void *)swift_dynamicCastObjCProtocolConditional(v1, 1, &v9);
    v4 = v3;
    if (v3)
    {
      if ((objc_msgSend(v3, "supportsInstructionalText") & 1) != 0)
        goto LABEL_8;
    }
    else
    {

    }
  }
  else
  {
    v4 = 0;
  }
  if (!objc_msgSend(v0, "parentAutosizes"))
  {
LABEL_9:
    swift_unknownObjectRelease(v4);
    return 0;
  }
LABEL_8:
  sub_100624B0C();
  if ((v5 & 1) != 0)
    goto LABEL_9;
  result = objc_msgSend(v0, "storage");
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(result, "length");
    swift_unknownObjectRelease(v7);
    swift_unknownObjectRelease(v4);
    return (id)(v8 == 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double CRLWPLayout.minSize.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  unsigned __int8 v8;
  id v9;
  double v10;
  __objc2_prot *v12;

  v1 = objc_msgSend(v0, "parent");
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  v12 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v3 = swift_dynamicCastObjCProtocolConditional(v1, 1, &v12);
  if (!v3)
  {

LABEL_7:
    v9 = objc_msgSend(v0, "geometry");
    objc_msgSend(v9, "size");
    v7 = v10;

    return v7;
  }
  v4 = (void *)v3;
  v5 = objc_msgSend(v0, "geometry");
  objc_msgSend(v5, "size");
  v7 = v6;

  v8 = objc_msgSend(v4, "autosizeFlagsFor:", v0);
  if ((v8 & 8) != 0)
    return 0.0;
  return v7;
}

double CRLWPLayout.maxSize.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  unsigned int v8;
  unsigned __int8 v9;
  double v10;
  double v11;
  double v12;
  double v13;
  __objc2_prot *v15;

  v1 = objc_msgSend(v0, "parent");
  if (!v1)
    goto LABEL_10;
  v2 = v1;
  v15 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v3 = swift_dynamicCastObjCProtocolConditional(v1, 1, &v15);
  if (!v3)
  {

LABEL_10:
    v2 = objc_msgSend(v0, "geometry");
    objc_msgSend(v2, "size");
    v7 = v13;
LABEL_11:

    return v7;
  }
  v4 = (void *)v3;
  v5 = objc_msgSend(v0, "geometry");
  objc_msgSend(v5, "size");
  v7 = v6;

  v8 = objc_msgSend(v0, "textIsVertical");
  v9 = objc_msgSend(v4, "autosizeFlagsFor:", v0);
  if ((v9 & 4) != 0)
  {
    objc_msgSend(v4, "maxAutoGrowLineWidthFor:", v0);
    if (!v8)
      v7 = v10;
  }
  if ((v9 & 1) == 0)
    goto LABEL_11;
  objc_msgSend(v4, "maxAutoGrowBlockHeightFor:", v0);
  v12 = v11;

  if (v8)
    return v12;
  return v7;
}

double CRLWPLayout.currentSize.getter()
{
  void *v0;
  id v1;
  double v2;
  double v3;

  v1 = objc_msgSend(v0, "geometry");
  objc_msgSend(v1, "size");
  v3 = v2;

  return v3;
}

double CRLWPLayout.position.getter()
{
  void *v0;
  id v1;
  double v2;
  double v3;

  v1 = objc_msgSend(v0, "geometry");
  objc_msgSend(v1, "frame");
  v3 = v2;

  return v3;
}

id CRLWPLayout.autosizeFlags.getter()
{
  return sub_10062A108((SEL *)&selRef_autosizeFlagsFor_);
}

id sub_10062A05C(void *a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  __objc2_prot *v10;

  v4 = a1;
  v5 = objc_msgSend(v4, "parent");
  if (!v5)
  {

    return 0;
  }
  v6 = v5;
  v10 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v7 = (void *)swift_dynamicCastObjCProtocolConditional(v5, 1, &v10);
  if (!v7)
  {

    return 0;
  }
  v8 = objc_msgSend(v7, *a3, v4);

  return v8;
}

id CRLWPLayout.verticalAlignment.getter()
{
  return sub_10062A108((SEL *)&selRef_verticalAlignmentFor_);
}

id sub_10062A108(SEL *a1)
{
  void *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  __objc2_prot *v8;

  v3 = objc_msgSend(v1, "parent");
  if (!v3)
    return 0;
  v4 = v3;
  v8 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v5 = (void *)swift_dynamicCastObjCProtocolConditional(v3, 1, &v8);
  if (v5)
    v6 = objc_msgSend(v5, *a1, v1);
  else
    v6 = 0;

  return v6;
}

uint64_t CRLWPLayout.naturalAlignment.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  __objc2_prot *v6;

  v1 = objc_msgSend(v0, "parent");
  if (!v1)
    return 4;
  v2 = v1;
  v6 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v3 = (void *)swift_dynamicCastObjCProtocolConditional(v1, 1, &v6);
  if (v3)
    v4 = (uint64_t)objc_msgSend(v3, "naturalAlignmentFor:", v0);
  else
    v4 = 4;

  return v4;
}

id CRLWPLayout.textIsVertical.getter()
{
  return sub_10062A3D0((SEL *)&selRef_textLayoutShouldLayoutVertically_);
}

uint64_t CRLWPLayout.layoutIsValid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid);
}

id sub_10062A324(void *a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  __objc2_prot *v10;

  v4 = a1;
  v5 = objc_msgSend(v4, "parent");
  if (!v5)
  {

    return 0;
  }
  v6 = v5;
  v10 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v7 = (void *)swift_dynamicCastObjCProtocolConditional(v5, 1, &v10);
  if (!v7)
  {

    return 0;
  }
  v8 = objc_msgSend(v7, *a3, v4);

  return v8;
}

id CRLWPLayout.shouldWrapAroundExternalDrawables.getter()
{
  return sub_10062A3D0((SEL *)&selRef_textLayoutShouldWrapAroundExternalDrawables_);
}

id sub_10062A3D0(SEL *a1)
{
  void *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  __objc2_prot *v8;

  v3 = objc_msgSend(v1, "parent");
  if (!v3)
    return 0;
  v4 = v3;
  v8 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v5 = (void *)swift_dynamicCastObjCProtocolConditional(v3, 1, &v8);
  if (v5)
    v6 = objc_msgSend(v5, *a1, v1);
  else
    v6 = 0;

  return v6;
}

id CRLWPLayout.interiorWrapSegments.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  __objc2_prot *v6;

  v1 = objc_msgSend(v0, "parent");
  if (!v1)
    return 0;
  v2 = v1;
  v6 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  v3 = (void *)swift_dynamicCastObjCProtocolConditional(v1, 1, &v6);
  if (!v3)
  {

    return 0;
  }
  v4 = objc_msgSend(v3, "interiorWrapSegmentsFor:", v0);

  return v4;
}

id CRLWPLayout.setNeedsDisplayInTargetRect(_:)()
{
  void *v0;

  return objc_msgSend(v0, "setNeedsDisplayInRect:");
}

double sub_10062A5C0(double a1)
{
  return -a1;
}

double sub_10062A5D4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

uint64_t sub_10062A5EC(void *a1)
{
  uint64_t v1;
  uint64_t (*v3)(void *);

  v3 = *(uint64_t (**)(void *))(v1 + 24);
  if (a1)
  {
    objc_msgSend(*(id *)(v1 + 16), "calculatePointFromSearchReference:", a1);
    objc_msgSend(a1, "setSearchReferencePoint:");
  }
  return v3(a1);
}

uint64_t sub_10062A648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10062A658(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10062A664()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10062A690(void *a1)
{
  uint64_t v1;

  sub_100628C0C(a1, *(void **)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_10062A69C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100D167D4(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10062A714(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_10062A714(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  void *v18;
  id v19;
  id v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  double v37;
  id *v38;
  void *v39;
  id v40;
  id v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  double v46;
  double v47;
  double v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  uint64_t *v58;
  Swift::Int v59;
  Swift::Int v60;
  uint64_t *v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  void *v65;
  Swift::Int v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  double v75;
  double v76;
  double v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  double v86;
  void *v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  Swift::Int v155;
  Swift::Int v156;
  Swift::Int v157;
  Swift::Int v158;
  void **v159;
  uint64_t v160;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_133;
    if (v4)
      sub_10062AEEC(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v8 = v4;
  else
    v8 = v4 + 1;
  if (v4 < -1)
    goto LABEL_141;
  v9 = v5;
  v150 = a1;
  if (v4 < 2)
  {
    v13 = (char *)_swiftEmptyArrayStorage;
    v160 = (uint64_t)_swiftEmptyArrayStorage;
    v159 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v16 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
LABEL_99:
      v142 = v13;
      if (v16 >= 2)
      {
        v144 = *v150;
        do
        {
          v145 = v16 - 2;
          if (v16 < 2)
            goto LABEL_128;
          if (!v144)
            goto LABEL_140;
          v133 = v142;
          v146 = *(_QWORD *)&v142[16 * v145 + 32];
          v147 = *(_QWORD *)&v142[16 * v16 + 24];
          sub_10062B014((void **)(v144 + 8 * v146), (id *)(v144 + 8 * *(_QWORD *)&v142[16 * v16 + 16]), v144 + 8 * v147, v159, v6, v7);
          if (v2)
            goto LABEL_95;
          if (v147 < v146)
            goto LABEL_129;
          if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0)
            v133 = sub_100D1664C((uint64_t)v133);
          if (v145 >= *((_QWORD *)v133 + 2))
            goto LABEL_130;
          v148 = &v133[16 * v145 + 32];
          *(_QWORD *)v148 = v146;
          *((_QWORD *)v148 + 1) = v147;
          v149 = *((_QWORD *)v133 + 2);
          if (v16 > v149)
            goto LABEL_131;
          memmove(&v133[16 * v16 + 16], &v133[16 * v16 + 32], 16 * (v149 - v16));
          v142 = v133;
          *((_QWORD *)v133 + 2) = v149 - 1;
          v16 = v149 - 1;
        }
        while (v149 > 2);
      }
LABEL_96:
      swift_bridgeObjectRelease(v142);
      *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v143);
      swift_bridgeObjectRelease(v160);
      return;
    }
  }
  else
  {
    v10 = v8 >> 1;
    v11 = type metadata accessor for CRLTextSelectionRect();
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    v159 = (void **)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    v160 = v12;
  }
  v155 = v9;
  v14 = 0;
  v15 = *a1;
  v151 = *a1 - 8;
  v152 = *a1 + 16;
  v13 = (char *)_swiftEmptyArrayStorage;
  v156 = v4;
  while (1)
  {
    v17 = v14++;
    v157 = v17;
    if (v14 < v4)
    {
      v18 = *(void **)(v15 + 8 * v17);
      v19 = *(id *)(v15 + 8 * v14);
      v20 = v18;
      objc_msgSend(v19, "rect");
      v25 = sub_100061400(v21, v22, v23, v24);
      v27 = v26;
      objc_msgSend(v20, "rect", v25);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      v35 = v34;

      sub_100061400(v29, v31, v33, v35);
      v37 = v36;
      v14 = v17 + 2;
      if (v17 + 2 < v4)
      {
        v153 = v13;
        v38 = (id *)(v152 + 8 * v17);
        while (1)
        {
          v39 = *(v38 - 1);
          v40 = *v38;
          v41 = v39;
          objc_msgSend(v40, "rect");
          v46 = sub_100061400(v42, v43, v44, v45);
          v48 = v47;
          objc_msgSend(v41, "rect", v46);
          v50 = v49;
          v52 = v51;
          v54 = v53;
          v56 = v55;

          sub_100061400(v50, v52, v54, v56);
          if (v27 < v37 == v48 >= v57)
            break;
          ++v14;
          ++v38;
          if (v4 == v14)
          {
            v14 = v4;
            break;
          }
        }
        v13 = v153;
      }
      if (v27 < v37)
      {
        if (v14 < v17)
          goto LABEL_134;
        if (v17 < v14)
        {
          v58 = (uint64_t *)(v151 + 8 * v14);
          v59 = v14;
          v60 = v17;
          v61 = (uint64_t *)(v15 + 8 * v17);
          do
          {
            if (v60 != --v59)
            {
              if (!v15)
                goto LABEL_139;
              v62 = *v61;
              *v61 = *v58;
              *v58 = v62;
            }
            ++v60;
            --v58;
            ++v61;
          }
          while (v60 < v59);
        }
      }
    }
    if (v14 >= v4)
      goto LABEL_47;
    if (__OFSUB__(v14, v17))
      goto LABEL_132;
    if (v14 - v17 >= v155)
      goto LABEL_47;
    if (__OFADD__(v17, v155))
      goto LABEL_135;
    v63 = v17 + v155 >= v4 ? v4 : v17 + v155;
    if (v63 < v17)
      break;
    if (v14 != v63)
    {
      v154 = v13;
      v64 = v151 + 8 * v14;
      do
      {
        v65 = *(void **)(v15 + 8 * v14);
        v66 = v17;
        v67 = v64;
        do
        {
          v68 = *(void **)v67;
          v69 = v65;
          v70 = v68;
          objc_msgSend(v69, "rect");
          v75 = sub_100061400(v71, v72, v73, v74);
          v77 = v76;
          objc_msgSend(v70, "rect", v75);
          v79 = v78;
          v81 = v80;
          v83 = v82;
          v85 = v84;

          sub_100061400(v79, v81, v83, v85);
          if (v77 >= v86)
            break;
          if (!v15)
            goto LABEL_137;
          v87 = *(void **)v67;
          v65 = *(void **)(v67 + 8);
          *(_QWORD *)v67 = v65;
          *(_QWORD *)(v67 + 8) = v87;
          v67 -= 8;
          ++v66;
        }
        while (v14 != v66);
        ++v14;
        v64 += 8;
        v17 = v157;
      }
      while (v14 != v63);
      v14 = v63;
      v13 = v154;
    }
LABEL_47:
    if (v14 < v17)
      goto LABEL_127;
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100D15FCC(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v89 = *((_QWORD *)v13 + 2);
    v88 = *((_QWORD *)v13 + 3);
    v16 = v89 + 1;
    if (v89 >= v88 >> 1)
      v13 = sub_100D15FCC((char *)(v88 > 1), v89 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v16;
    v90 = v13 + 32;
    v91 = &v13[16 * v89 + 32];
    *(_QWORD *)v91 = v17;
    *((_QWORD *)v91 + 1) = v14;
    if (v89)
    {
      v158 = v14;
      while (1)
      {
        v92 = v16 - 1;
        if (v16 >= 4)
        {
          v97 = &v90[16 * v16];
          v98 = *((_QWORD *)v97 - 8);
          v99 = *((_QWORD *)v97 - 7);
          v103 = __OFSUB__(v99, v98);
          v100 = v99 - v98;
          if (v103)
            goto LABEL_116;
          v102 = *((_QWORD *)v97 - 6);
          v101 = *((_QWORD *)v97 - 5);
          v103 = __OFSUB__(v101, v102);
          v95 = v101 - v102;
          v96 = v103;
          if (v103)
            goto LABEL_117;
          v104 = v16 - 2;
          v105 = &v90[16 * v16 - 32];
          v107 = *(_QWORD *)v105;
          v106 = *((_QWORD *)v105 + 1);
          v103 = __OFSUB__(v106, v107);
          v108 = v106 - v107;
          if (v103)
            goto LABEL_119;
          v103 = __OFADD__(v95, v108);
          v109 = v95 + v108;
          if (v103)
            goto LABEL_122;
          if (v109 >= v100)
          {
            v127 = &v90[16 * v92];
            v129 = *(_QWORD *)v127;
            v128 = *((_QWORD *)v127 + 1);
            v103 = __OFSUB__(v128, v129);
            v130 = v128 - v129;
            if (v103)
              goto LABEL_126;
            v120 = v95 < v130;
            goto LABEL_85;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v121 = *((_QWORD *)v13 + 4);
            v122 = *((_QWORD *)v13 + 5);
            v103 = __OFSUB__(v122, v121);
            v114 = v122 - v121;
            v115 = v103;
            goto LABEL_79;
          }
          v94 = *((_QWORD *)v13 + 4);
          v93 = *((_QWORD *)v13 + 5);
          v103 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          v96 = v103;
        }
        if ((v96 & 1) != 0)
          goto LABEL_118;
        v104 = v16 - 2;
        v110 = &v90[16 * v16 - 32];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v113 = __OFSUB__(v111, v112);
        v114 = v111 - v112;
        v115 = v113;
        if (v113)
          goto LABEL_121;
        v116 = &v90[16 * v92];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v103 = __OFSUB__(v117, v118);
        v119 = v117 - v118;
        if (v103)
          goto LABEL_124;
        if (__OFADD__(v114, v119))
          goto LABEL_125;
        if (v114 + v119 >= v95)
        {
          v120 = v95 < v119;
LABEL_85:
          if (v120)
            v92 = v104;
          goto LABEL_87;
        }
LABEL_79:
        if ((v115 & 1) != 0)
          goto LABEL_120;
        v123 = &v90[16 * v92];
        v125 = *(_QWORD *)v123;
        v124 = *((_QWORD *)v123 + 1);
        v103 = __OFSUB__(v124, v125);
        v126 = v124 - v125;
        if (v103)
          goto LABEL_123;
        if (v126 < v114)
          goto LABEL_14;
LABEL_87:
        v131 = v92 - 1;
        if (v92 - 1 >= v16)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        v132 = v15;
        if (!v15)
          goto LABEL_138;
        v133 = v13;
        v134 = &v90[16 * v131];
        v135 = *(_QWORD *)v134;
        v136 = v90;
        v137 = v92;
        v138 = &v90[16 * v92];
        v139 = *((_QWORD *)v138 + 1);
        v140 = v132;
        sub_10062B014((void **)(v132 + 8 * *(_QWORD *)v134), (id *)(v132 + 8 * *(_QWORD *)v138), v132 + 8 * v139, v159, v6, v7);
        if (v1)
        {
LABEL_95:
          v142 = v133;
          goto LABEL_96;
        }
        if (v139 < v135)
          goto LABEL_113;
        if (v137 > *((_QWORD *)v133 + 2))
          goto LABEL_114;
        *(_QWORD *)v134 = v135;
        *(_QWORD *)&v136[16 * v131 + 8] = v139;
        v141 = *((_QWORD *)v133 + 2);
        if (v137 >= v141)
          goto LABEL_115;
        v13 = v133;
        v16 = v141 - 1;
        memmove(v138, v138 + 16, 16 * (v141 - 1 - v137));
        v90 = v136;
        *((_QWORD *)v133 + 2) = v141 - 1;
        v15 = v140;
        v14 = v158;
        if (v141 <= 2)
          goto LABEL_14;
      }
    }
    v16 = 1;
LABEL_14:
    v4 = v156;
    if (v14 >= v156)
    {
      v2 = v1;
      goto LABEL_99;
    }
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_10062AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  void *v30;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(void **)(v6 + 8 * v4);
    v9 = a1;
    v10 = v7;
    while (1)
    {
      v11 = *(void **)v10;
      v12 = v8;
      v13 = v11;
      objc_msgSend(v12, "rect");
      v18 = sub_100061400(v14, v15, v16, v17);
      v20 = v19;
      objc_msgSend(v13, "rect", v18);
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v28 = v27;

      sub_100061400(v22, v24, v26, v28);
      if (v20 >= v29)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v30 = *(void **)v10;
      v8 = *(void **)(v10 + 8);
      *(_QWORD *)v10 = v8;
      *(_QWORD *)(v10 + 8) = v30;
      v10 -= 8;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_10062B014(void **__src, id *a2, unint64_t a3, void **a4, __n128 a5, __n128 a6)
{
  id *v7;
  void **v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  id *v35;
  id *v36;
  id *v37;
  void **v38;
  id *v39;
  id *v40;
  void *v41;
  id v42;
  id v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  double v48;
  double v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  uint64_t result;
  char *v61;
  void **v62;
  id *v63;

  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v62 = a4;
  v63 = __src;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v14] <= a4)
      memmove(a4, a2, 8 * v14);
    v36 = &a4[v14];
    v61 = (char *)v36;
    v63 = v7;
    if (v8 >= v7 || v12 < 8)
      goto LABEL_45;
    v37 = (id *)(a3 - 8);
    v38 = v7;
    while (1)
    {
      v39 = v37 + 1;
      v40 = v36 - 1;
      v41 = *--v38;
      v42 = *(v36 - 1);
      v43 = v41;
      objc_msgSend(v42, "rect");
      v48 = sub_100061400(v44, v45, v46, v47);
      v50 = v49;
      objc_msgSend(v43, "rect", v48);
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v58 = v57;

      a5.n128_f64[0] = sub_100061400(v52, v54, v56, v58);
      if (v50 < a6.n128_f64[0])
        break;
      v61 = (char *)(v36 - 1);
      if (v39 < v36 || v37 >= v36)
      {
        *v37 = *v40;
        v38 = v7;
        --v36;
        goto LABEL_43;
      }
      if (v39 != v36)
        *v37 = *v40;
      v38 = v7;
      --v36;
      if (v7 <= v8)
        goto LABEL_45;
LABEL_44:
      --v37;
      v7 = v38;
      if (v36 <= a4)
        goto LABEL_45;
    }
    if (v39 != v7 || v37 >= v7)
      *v37 = *v38;
    v63 = v38;
LABEL_43:
    if (v38 <= v8)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v9 >= -7)
  {
    if (a4 != __src || &__src[v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v15 = &a4[v11];
    v61 = (char *)v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      v16 = a4;
      do
      {
        v17 = *v16;
        v18 = *v7;
        v19 = v17;
        objc_msgSend(v18, "rect");
        v24 = sub_100061400(v20, v21, v22, v23);
        v26 = v25;
        objc_msgSend(v19, "rect", v24);
        v28 = v27;
        v30 = v29;
        v32 = v31;
        v34 = v33;

        a5.n128_f64[0] = sub_100061400(v28, v30, v32, v34);
        if (v26 >= a6.n128_f64[0])
        {
          if (v8 != v16)
            *v8 = *v16;
          v62 = ++v16;
          v35 = v7;
        }
        else
        {
          v35 = v7 + 1;
          if (v8 < v7 || v8 >= v35 || v8 != v7)
            *v8 = *v7;
        }
        ++v8;
        if (v16 >= v15)
          break;
        v7 = v35;
      }
      while ((unint64_t)v35 < a3);
      v63 = v8;
    }
LABEL_45:
    sub_100D162E4(&v63, &v62, &v61, a5, a6);
    return 1;
  }
LABEL_46:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10062B390(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v11 - 8);
  result = __chkstk_darwin(v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t *sub_10062B6E0(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_10062DEC0(a1, a2, a3, a4, type metadata accessor for CRLStyledItem, (unint64_t *)&qword_1013E8800);
}

uint64_t *sub_10062B6F4(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_10062DEC0(a1, a2, a3, a4, type metadata accessor for CRLBoardItem, (unint64_t *)&qword_1013E4190);
}

uint64_t sub_10062B708(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    result = sub_1004B8968(*(_QWORD *)(a4 + 48) + 40 * v16, (uint64_t)v23);
    v17 = v24;
    v18 = v23[1];
    *(_OWORD *)v11 = v23[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(_QWORD *)(v11 + 32) = v17;
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v22;
      goto LABEL_36;
    }
  }
  v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v19);
  if (v20)
    goto LABEL_23;
  v21 = v12 + 2;
  ++v12;
  if (v19 + 1 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v12 = v19 + 1;
  if (v19 + 2 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_23;
  }
  v12 = v19 + 2;
  if (v19 + 3 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 3));
  if (v20)
  {
    v19 += 3;
    goto LABEL_23;
  }
  v21 = v19 + 4;
  v12 = v19 + 3;
  if (v19 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
LABEL_16:
    v19 = v21;
LABEL_23:
    v9 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v19 << 6);
    v12 = v19;
    goto LABEL_9;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_10062B910(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10062BAA4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      swift_retain(v20);
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain(v20);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t *sub_10062BC9C(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_10062DEC0(a1, a2, a3, a4, type metadata accessor for CRLSceneInfo, &qword_10140B790);
}

uint64_t sub_10062BCB0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v11 - 8);
  result = __chkstk_darwin(v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10062C000(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_1004E90B0(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_1004DB728(v21, (uint64_t)v22);
    result = sub_1004DB728(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_10062C20C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10062DBF4(a1, a2, a3, a4, _s17CategoryViewModelVMa);
}

void sub_10062C218(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for CRLBoardEntity(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1004B8460(*(_QWORD *)(v35 + 56) + v28 * v24, (uint64_t)v11, type metadata accessor for CRLBoardEntity);
    sub_1004B84E0((uint64_t)v11, (uint64_t)v14, type metadata accessor for CRLBoardEntity);
    sub_1004B84E0((uint64_t)v14, a2, type metadata accessor for CRLBoardEntity);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_10062C4D4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10062C6D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD v21[7];
  _BYTE v22[56];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_10062E59C((_QWORD *)(*(_QWORD *)(a4 + 56) + 56 * v16), v21);
    sub_10062E5D8((uint64_t)v21, (uint64_t)v22);
    result = sub_10062E5D8((uint64_t)v22, v11);
    v11 += 56;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_10062C8DC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v4 = a4;
  v6 = a2;
  v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v8 = a4;
    else
      v8 = a4 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = type metadata accessor for CalculateExpression(0);
    v11 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    a1 = Set.Iterator.init(_cocoa:)(v36, v9, v10, v11);
    v4 = v36[0];
    v12 = v36[1];
    v13 = v36[2];
    v14 = v36[3];
    v15 = v36[4];
    v32 = v7;
    if (!v6)
      goto LABEL_49;
  }
  else
  {
    v14 = 0;
    v28 = -1 << *(_BYTE *)(a4 + 32);
    v12 = a4 + 56;
    v13 = ~v28;
    v29 = -v28;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    else
      v30 = -1;
    v15 = v30 & *(_QWORD *)(a4 + 56);
    v32 = a1;
    if (!a2)
      goto LABEL_49;
  }
  if (!a3)
    goto LABEL_49;
  if (a3 < 0)
    goto LABEL_51;
  v16 = 0;
  v33 = (unint64_t)(v13 + 64) >> 6;
  v31 = v13;
  while (v4 < 0)
  {
    v23 = v12;
    v24 = __CocoaSet.Iterator.next()(a1);
    if (!v24)
      goto LABEL_48;
    v25 = v24;
    v34 = v24;
    v26 = type metadata accessor for CalculateExpression(0);
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
    v19 = v35;
    swift_unknownObjectRelease(v25);
    v12 = v23;
    if (!v19)
      goto LABEL_48;
LABEL_11:
    ++v16;
    *v6++ = v19;
    if (v16 == a3)
      goto LABEL_48;
  }
  if (v15)
  {
    v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v18 = v17 | (v14 << 6);
    goto LABEL_10;
  }
  v20 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_51:
    __break(1u);
    return;
  }
  if (v20 >= v33)
  {
    v15 = 0;
LABEL_48:
    v13 = v31;
    goto LABEL_49;
  }
  v21 = *(_QWORD *)(v12 + 8 * v20);
  if (v21)
  {
LABEL_26:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_10:
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    swift_retain(v19);
    if (!v19)
      goto LABEL_48;
    goto LABEL_11;
  }
  v22 = v14 + 2;
  if (v14 + 2 >= v33)
  {
    v15 = 0;
    ++v14;
    goto LABEL_48;
  }
  v21 = *(_QWORD *)(v12 + 8 * v22);
  if (v21)
  {
LABEL_19:
    v20 = v22;
    goto LABEL_26;
  }
  if (v14 + 3 >= v33)
    goto LABEL_45;
  v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
  if (v21)
  {
    v20 = v14 + 3;
    goto LABEL_26;
  }
  v22 = v14 + 4;
  if (v14 + 4 >= v33)
  {
    v15 = 0;
    v14 += 3;
    goto LABEL_48;
  }
  v21 = *(_QWORD *)(v12 + 8 * v22);
  if (v21)
    goto LABEL_19;
  v20 = v14 + 5;
  if (v14 + 5 >= v33)
  {
LABEL_45:
    v15 = 0;
    v14 = v22;
    goto LABEL_48;
  }
  v21 = *(_QWORD *)(v12 + 8 * v20);
  if (v21)
    goto LABEL_26;
  v27 = v14 + 6;
  while (v33 != v27)
  {
    v21 = *(_QWORD *)(v12 + 8 * v27++);
    if (v21)
    {
      v20 = v27 - 1;
      goto LABEL_26;
    }
  }
  v15 = 0;
  v14 = v33 - 1;
  v13 = v31;
LABEL_49:
  *v32 = v4;
  v32[1] = v12;
  v32[2] = v13;
  v32[3] = v14;
  v32[4] = v15;
}

uint64_t *sub_10062CBDC(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_10062CBF8(a1, a2, a3, a4, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (unint64_t *)&qword_1013E1778);
}

uint64_t *sub_10062CBF8(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, unint64_t *a5, _QWORD *a6, unint64_t *a7)
{
  uint64_t v7;
  uint64_t **v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[5];

  v7 = a4;
  v9 = a2;
  v37 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v13 = a4;
    else
      v13 = a4 & 0xFFFFFFFFFFFFFF8;
    v14 = __CocoaSet.makeIterator()(v13);
    v15 = sub_1004B8930(0, a5, a6);
    v16 = sub_10051FD9C(a7, a5, a6);
    result = Set.Iterator.init(_cocoa:)(v43, v14, v15, v16);
    v7 = v43[0];
    v17 = v43[1];
    v18 = v43[2];
    v19 = v43[3];
    v20 = v43[4];
    if (v9)
      goto LABEL_6;
LABEL_39:
    v21 = 0;
    goto LABEL_41;
  }
  v19 = 0;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  v17 = a4 + 56;
  v18 = ~v32;
  v33 = -v32;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  else
    v34 = -1;
  v20 = v34 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v21 = 0;
LABEL_41:
    v35 = v37;
LABEL_44:
    *v35 = v7;
    v35[1] = v17;
    v35[2] = v18;
    v35[3] = v19;
    v35[4] = v20;
    return (uint64_t *)v21;
  }
  if (a3 < 0)
    goto LABEL_51;
  v21 = 0;
  v38 = (unint64_t)(v18 + 64) >> 6;
  v36 = v18;
  while (1)
  {
    if (v7 < 0)
    {
      v28 = __CocoaSet.Iterator.next()(result);
      if (!v28)
        goto LABEL_43;
      v29 = v28;
      v41 = v28;
      v30 = sub_1004B8930(0, a5, a6);
      swift_unknownObjectRetain(v29);
      swift_dynamicCast(&v42, &v41, (char *)&type metadata for Swift.AnyObject + 8, v30, 7);
      v24 = v42;
      result = (uint64_t *)swift_unknownObjectRelease(v29);
      if (!v24)
        goto LABEL_43;
      goto LABEL_11;
    }
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v19 << 6);
      goto LABEL_10;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v25 >= v38)
    {
      v20 = 0;
      goto LABEL_43;
    }
    v26 = *(_QWORD *)(v17 + 8 * v25);
    if (v26)
      goto LABEL_26;
    v27 = v19 + 2;
    if (v19 + 2 >= v38)
    {
      v20 = 0;
      ++v19;
      goto LABEL_43;
    }
    v26 = *(_QWORD *)(v17 + 8 * v27);
    if (!v26)
    {
      if (v19 + 3 >= v38)
        goto LABEL_47;
      v26 = *(_QWORD *)(v17 + 8 * (v19 + 3));
      if (v26)
      {
        v25 = v19 + 3;
        goto LABEL_26;
      }
      v27 = v19 + 4;
      if (v19 + 4 >= v38)
      {
        v20 = 0;
        v19 += 3;
        goto LABEL_43;
      }
      v26 = *(_QWORD *)(v17 + 8 * v27);
      if (!v26)
      {
        v25 = v19 + 5;
        if (v19 + 5 >= v38)
        {
LABEL_47:
          v20 = 0;
          v19 = v27;
          goto LABEL_43;
        }
        v26 = *(_QWORD *)(v17 + 8 * v25);
        if (!v26)
        {
          v31 = v19 + 6;
          while (v38 != v31)
          {
            v26 = *(_QWORD *)(v17 + 8 * v31++);
            if (v26)
            {
              v25 = v31 - 1;
              goto LABEL_26;
            }
          }
          v20 = 0;
          v19 = v38 - 1;
          goto LABEL_43;
        }
        goto LABEL_26;
      }
    }
    v25 = v27;
LABEL_26:
    v20 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v25 << 6);
    v19 = v25;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v7 + 48) + 8 * v23);
    v24 = result;
    if (!result)
      goto LABEL_43;
LABEL_11:
    ++v21;
    *v9++ = v24;
    if (v21 == a3)
    {
      v21 = a3;
LABEL_43:
      v18 = v36;
      v35 = v37;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t *sub_10062CEF0(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_10062CBF8(a1, a2, a3, a4, &qword_1013E8810, CKRecordID_ptr, &qword_1013E8818);
}

void sub_10062CF0C(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16))(v10, *(_QWORD *)(v42 + 56) + v29 * v25, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    v30(a2, v22, v11);
    if (v21 == v39)
    {
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v10, 1, 1, v11, v12);
          v19 = 0;
LABEL_38:
          sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_10062D25C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for UTType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 24);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_10062D524(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1004B8460(*(_QWORD *)(v35 + 48) + v28 * v24, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v11, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v14, a2, type metadata accessor for CRLBoardIdentifier);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

_QWORD *sub_10062D7E0(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 32 * v16;
    v21 = *(void **)v20;
    v22 = *(void **)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 24);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_QWORD *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 24) = v24;
    if (v13 == v10)
    {
      sub_1004DD884(v21, v22, v23, v24);
      goto LABEL_38;
    }
    v11 += 32;
    result = sub_1004DD884(v21, v22, v23, v24);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10062D9EC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_10062DBE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10062DBF4(a1, a2, a3, a4, type metadata accessor for CRLBoardIdentifier);
}

void sub_10062DBF4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  v37 = a4;
  v19 = *(_QWORD *)(a4 + 56);
  v18 = a4 + 56;
  v17 = v19;
  v36 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 24);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
LABEL_37:
    v31 = v36;
    *a1 = v37;
    a1[1] = v31;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = -1 << *(_BYTE *)(v18 - 24);
  v34 = a1;
  v23 = 0;
  v24 = 0;
  v35 = (unint64_t)(63 - v20) >> 6;
  v32 = v35 - 1;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v11 + 72);
    sub_1004B8460(*(_QWORD *)(v37 + 48) + v30 * v26, (uint64_t)v13, a5);
    sub_1004B84E0((uint64_t)v13, (uint64_t)v16, a5);
    sub_1004B84E0((uint64_t)v16, a2, a5);
    if (v24 == a3)
      goto LABEL_36;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v35)
      goto LABEL_32;
    v28 = *(_QWORD *)(v36 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v35)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v36 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v35)
    goto LABEL_32;
  v28 = *(_QWORD *)(v36 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v35)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v36 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v35)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    v20 = v33;
    a1 = v34;
    goto LABEL_37;
  }
  v28 = *(_QWORD *)(v36 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v35)
    {
      v22 = 0;
      v23 = v32;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v36 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t *sub_10062DEAC(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_10062DEC0(a1, a2, a3, a4, type metadata accessor for CRLCollaborationParticipant, (unint64_t *)&unk_1013E8E30);
}

uint64_t *sub_10062DEC0(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t v6;
  uint64_t **v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v38;
  uint64_t *v39;
  _QWORD v40[5];

  v6 = a4;
  v8 = a2;
  v35 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v11 = a4;
    else
      v11 = a4 & 0xFFFFFFFFFFFFFF8;
    v12 = __CocoaSet.makeIterator()(v11);
    v13 = a5(0);
    v14 = sub_1004B7878(a6, a5, (uint64_t)&protocol conformance descriptor for NSObject);
    result = Set.Iterator.init(_cocoa:)(v40, v12, v13, v14);
    v6 = v40[0];
    v15 = v40[1];
    v16 = v40[2];
    v17 = v40[3];
    v18 = v40[4];
    if (v8)
      goto LABEL_6;
LABEL_39:
    v19 = 0;
    goto LABEL_41;
  }
  v17 = 0;
  v30 = -1 << *(_BYTE *)(a4 + 32);
  v15 = a4 + 56;
  v16 = ~v30;
  v31 = -v30;
  if (v31 < 64)
    v32 = ~(-1 << v31);
  else
    v32 = -1;
  v18 = v32 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v19 = 0;
LABEL_41:
    v33 = v35;
LABEL_44:
    *v33 = v6;
    v33[1] = v15;
    v33[2] = v16;
    v33[3] = v17;
    v33[4] = v18;
    return (uint64_t *)v19;
  }
  if (a3 < 0)
    goto LABEL_51;
  v19 = 0;
  v36 = (unint64_t)(v16 + 64) >> 6;
  v34 = v16;
  while (1)
  {
    if (v6 < 0)
    {
      v26 = __CocoaSet.Iterator.next()(result);
      if (!v26)
        goto LABEL_43;
      v27 = v26;
      v38 = v26;
      v28 = a5(0);
      swift_unknownObjectRetain(v27);
      swift_dynamicCast(&v39, &v38, (char *)&type metadata for Swift.AnyObject + 8, v28, 7);
      v22 = v39;
      result = (uint64_t *)swift_unknownObjectRelease(v27);
      if (!v22)
        goto LABEL_43;
      goto LABEL_11;
    }
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_10;
    }
    v23 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v23 >= v36)
    {
      v18 = 0;
      goto LABEL_43;
    }
    v24 = *(_QWORD *)(v15 + 8 * v23);
    if (v24)
      goto LABEL_26;
    v25 = v17 + 2;
    if (v17 + 2 >= v36)
    {
      v18 = 0;
      ++v17;
      goto LABEL_43;
    }
    v24 = *(_QWORD *)(v15 + 8 * v25);
    if (!v24)
    {
      if (v17 + 3 >= v36)
        goto LABEL_47;
      v24 = *(_QWORD *)(v15 + 8 * (v17 + 3));
      if (v24)
      {
        v23 = v17 + 3;
        goto LABEL_26;
      }
      v25 = v17 + 4;
      if (v17 + 4 >= v36)
      {
        v18 = 0;
        v17 += 3;
        goto LABEL_43;
      }
      v24 = *(_QWORD *)(v15 + 8 * v25);
      if (!v24)
      {
        v23 = v17 + 5;
        if (v17 + 5 >= v36)
        {
LABEL_47:
          v18 = 0;
          v17 = v25;
          goto LABEL_43;
        }
        v24 = *(_QWORD *)(v15 + 8 * v23);
        if (!v24)
        {
          v29 = v17 + 6;
          while (v36 != v29)
          {
            v24 = *(_QWORD *)(v15 + 8 * v29++);
            if (v24)
            {
              v23 = v29 - 1;
              goto LABEL_26;
            }
          }
          v18 = 0;
          v17 = v36 - 1;
          goto LABEL_43;
        }
        goto LABEL_26;
      }
    }
    v23 = v25;
LABEL_26:
    v18 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v23 << 6);
    v17 = v23;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v6 + 48) + 8 * v21);
    v22 = result;
    if (!result)
      goto LABEL_43;
LABEL_11:
    ++v19;
    *v8++ = v22;
    if (v19 == a3)
    {
      v19 = a3;
LABEL_43:
      v16 = v34;
      v33 = v35;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

unint64_t sub_10062E1B0()
{
  unint64_t result;

  result = qword_1013E8710;
  if (!qword_1013E8710)
  {
    result = swift_getWitnessTable(&unk_100F0D458, &type metadata for CRLWPListStyleType);
    atomic_store(result, (unint64_t *)&qword_1013E8710);
  }
  return result;
}

unint64_t sub_10062E1F4()
{
  unint64_t result;

  result = qword_1013E8750;
  if (!qword_1013E8750)
  {
    result = swift_getWitnessTable(&unk_100F1E2A4, &type metadata for CRLWPFontName);
    atomic_store(result, (unint64_t *)&qword_1013E8750);
  }
  return result;
}

uint64_t sub_10062E238(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

unint64_t sub_10062E244()
{
  unint64_t result;

  result = qword_1013E87F0;
  if (!qword_1013E87F0)
  {
    result = swift_getWitnessTable(&unk_100F0E2BC, &type metadata for CRLWPSmartFieldDataType);
    atomic_store(result, (unint64_t *)&qword_1013E87F0);
  }
  return result;
}

unint64_t sub_10062E288(unint64_t a1, unint64_t a2)
{
  if (a1 >= a2)
    return a2;
  else
    return a1;
}

id sub_10062E2A0(uint64_t a1)
{
  _BYTE *v1;
  _OWORD *v3;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  objc_super v14;

  v3 = &v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_defaultEdgeInset];
  __asm { FMOV            V0.2D, #4.0 }
  *v3 = _Q0;
  v3[1] = _Q0;
  v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid] = 0;
  v9 = OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns;
  v10 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)NSMutableArray), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform11CRLWPLayout_geometryWhenLastInvalidated] = 0;
  v11 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_layoutDetailsFactory;
  *(_QWORD *)&v10[v11] = type metadata accessor for CRLWPLaidOutColumnProxy();
  v12 = type metadata accessor for CRLWPStorage();
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage] = swift_dynamicCastClassUnconditional(a1, v12, 0, 0, 0);
  swift_unknownObjectRetain(a1);

  v14.receiver = v10;
  v14.super_class = (Class)type metadata accessor for CRLWPLayout();
  result = objc_msgSendSuper2(&v14, "initWithInfo:", a1);
  if (!result)
    __break(1u);
  return result;
}

id sub_10062E3A0(double a1, double a2)
{
  char *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  void *v10;
  id v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  id v25;
  char v26[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v5 = (void *)qword_10147ECB0;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E40;
  type metadata accessor for CGPoint(0);
  *(_QWORD *)(v7 + 56) = v8;
  *(double *)(v7 + 32) = a1;
  *(double *)(v7 + 40) = a2;
  inited = swift_initStackObject(v6, v26);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v7;
  v10 = (void *)qword_10147ECB0;
  v11 = v5;
  swift_bridgeObjectRetain(v7);
  v12 = v10;
  sub_100627450(v2, 1, &v25, a1, a2);

  if (v25)
  {
    v13 = *(void **)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
    v14 = (char *)v25;
    v15 = v13;
    sub_1007D484C();
    v17 = v16;

    v18 = (char *)objc_msgSend(v17, "range");
    v19 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    v21 = &v18[v20];
    if ((uint64_t)&v18[v20] >= v19)
      v21 = *(char **)&v14[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    if (v19 >= (uint64_t)v18)
      v22 = v21;
    else
      v22 = v18;
    v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", v22, 0);
    swift_release(inited);

  }
  else
  {
    swift_release(inited);
    v23 = 0;
  }

  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10062E570(uint64_t a1)
{
  uint64_t v1;

  return sub_1007CBF18(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10062E578()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_10062E59C(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for CRLMathCalculationControllerExpression(a2, a1);
  return a2;
}

uint64_t sub_10062E5D8(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLMathCalculationControllerExpression(a2, a1);
  return a2;
}

uint64_t sub_10062E628@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t inited;
  NSString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t isEscapingClosureAtFileLocation;
  char *v23;
  __n128 v24;
  __n128 v25;
  id v26;
  NSURL *v27;
  void *v28;
  void *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __n128 v38;
  int v39;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 aBlock;
  uint64_t (*v49)(uint64_t, uint64_t);
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;
  char v53[48];

  v43 = a1;
  v44 = a2;
  v2 = sub_1004B804C(&qword_1013E8858);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)type metadata accessor for URLResourceValues(0);
  v6 = *(v5 - 1);
  __chkstk_darwin(v5);
  v42 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - v12;
  v14 = type metadata accessor for UTType(0);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v45 = v13;
  v15(v13, 1, 1, v14);
  v16 = sub_1004B804C(&qword_1013E8860);
  inited = swift_initStackObject(v16, v53);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSURLContentTypeKey;
  v18 = NSURLContentTypeKey;
  sub_1004B584C(inited);
  v20 = v19;
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v21);
  URL.resourceValues(forKeys:)(v20);
  isEscapingClosureAtFileLocation = (uint64_t)v18;
  v23 = v42;
  v24 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, _QWORD, uint64_t, _QWORD *, __n128))(v6 + 56))(v4, 0, 1, v5, v24);
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v6 + 48))(v4, 1, v5) != 1)
    goto LABEL_5;
  sub_1004CB800((uint64_t)v4, &qword_1013E8858);
  v10 = v45;
  if ((v43 & 1) != 0)
  {
    while (1)
    {
      v26 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "init");
      URL._bridgeToObjectiveC()(v27);
      v29 = v28;
      v4 = (char *)swift_allocObject(&unk_101272F98, 24, 7);
      *((_QWORD *)v4 + 2) = v10;
      v6 = swift_allocObject(&unk_101272FC0, 32, 7);
      v30 = sub_1006318C0;
      *(_QWORD *)(v6 + 16) = sub_1006318C0;
      *(_QWORD *)(v6 + 24) = v4;
      v51 = sub_10054E858;
      v52 = v6;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
      v49 = sub_10062EDE4;
      v50 = &unk_101272FD8;
      v5 = _Block_copy(&aBlock);
      v14 = v52;
      swift_retain(v6);
      objc_msgSend(v26, "coordinateReadingItemAtURL:options:error:byAccessor:", v29, 4, 0, v5, swift_release(v14).n128_f64[0]);

      _Block_release(v5);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 88, 18, 129, 1);
      v25 = swift_release(v6);
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        break;
      __break(1u);
LABEL_5:
      v31 = (*(uint64_t (**)(char *, char *, _QWORD *, __n128))(v6 + 32))(v23, v4, v5, v25);
      v32 = URLResourceValues.allValues.getter(v31);
      if (*(_QWORD *)(v32 + 16))
      {
        v33 = (id)isEscapingClosureAtFileLocation;
        v35 = sub_100842FAC(v33, v34);
        v36 = (uint64_t)v10;
        if ((v37 & 1) != 0)
        {
          sub_1004CB6E8(*(_QWORD *)(v32 + 56) + 32 * v35, (uint64_t)&v46);
        }
        else
        {
          v46 = 0u;
          v47 = 0u;
        }

      }
      else
      {
        v46 = 0u;
        v47 = 0u;
        v36 = (uint64_t)v10;
      }
      v10 = v45;
      v38 = swift_bridgeObjectRelease(v32);
      (*(void (**)(char *, _QWORD *, __n128))(v6 + 8))(v23, v5, v38);
      if (*((_QWORD *)&v47 + 1))
      {
        sub_10050CB14(&v46, &aBlock);
        sub_10050CB14(&aBlock, &v46);
        v39 = swift_dynamicCast(v36, &v46, (char *)&type metadata for Any + 8, v14, 6);
        v15((char *)v36, v39 ^ 1u, 1, v14);
        sub_100582338(v36, (uint64_t)v10, (uint64_t *)&unk_1013E3620);
        goto LABEL_14;
      }
      sub_1004CB800((uint64_t)&v46, &qword_1013E0230);
      if ((v43 & 1) == 0)
        goto LABEL_14;
    }
  }
  else
  {
LABEL_14:
    v30 = 0;
    v4 = 0;
  }
  sub_1004C4938((uint64_t)v10, v44, (uint64_t *)&unk_1013E3620);
  return sub_1004C1024((uint64_t)v30, (uint64_t)v4);
}

uint64_t sub_10062EAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t inited;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  NSString *v27;
  __n128 v28;
  uint64_t v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _OWORD v38[2];
  char v39[40];

  v35 = a2;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E8858);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLResourceValues(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E8860);
  inited = swift_initStackObject(v12, v39);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSURLContentTypeKey;
  v14 = NSURLContentTypeKey;
  sub_1004B584C(inited);
  v16 = v15;
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  v18 = swift_arrayDestroy(inited + 32, 1, v17);
  URL.promisedItemResourceValues(forKeys:)(v16, v18);
  v19 = (uint64_t)v4;
  v20 = v35;
  v21 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v9 + 56))(v7, 0, 1, v8, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v22 = &qword_1013E8858;
    v23 = v7;
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v26 = URLResourceValues.allValues.getter(v25);
    if (*(_QWORD *)(v26 + 16))
    {
      v27 = v14;
      v29 = sub_100842FAC(v27, v28);
      if ((v30 & 1) != 0)
      {
        sub_1004CB6E8(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v36);
      }
      else
      {
        v36 = 0u;
        v37 = 0u;
      }

    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    v31 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v31);
    if (*((_QWORD *)&v37 + 1))
    {
      sub_10050CB14(&v36, v38);
      sub_10050CB14(v38, &v36);
      v32 = type metadata accessor for UTType(0);
      v33 = swift_dynamicCast(v19, &v36, (char *)&type metadata for Any + 8, v32, 6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v19, v33 ^ 1u, 1, v32);
      return sub_100582338(v19, v20, (uint64_t *)&unk_1013E3620);
    }
    v22 = &qword_1013E0230;
    v23 = (char *)&v36;
  }
  return sub_1004CB800((uint64_t)v23, v22);
}

uint64_t sub_10062EDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_10062EE78(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  unint64_t v17;

  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10062EFE8(a1, a2, (uint64_t)v8);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
    v16 = a1;
    v17 = a2;
    v15[0] = 37;
    v15[1] = 0xE100000000000000;
    v11 = sub_1004D292C();
    if ((StringProtocol.contains<A>(_:)(v15, &type metadata for String, &type metadata for String, v11, v11) & 1) != 0
      && (v16 = a1, v17 = a2, v12 = StringProtocol.removingPercentEncoding.getter(&type metadata for String, v11), v13))
    {
      v14 = v13;
      sub_10062EFE8(v12, v13, a3);
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, 1, 1, v9);
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
}

void sub_10062EFE8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  _BOOL4 v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t, __n128);
  uint64_t v46;
  id v47;
  uint64_t v48;
  __n128 v49;
  __n128 v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  Swift::String v56;
  unint64_t v57;
  char *v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  _BYTE *v62;
  __n128 v63;
  unint64_t v64;
  NSString v65;
  NSString v66;
  unsigned __int8 v67;
  uint64_t v68;
  _BYTE *v69;
  void (*v70)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_BYTE *, uint64_t);
  char v78;
  _BYTE *v79;
  char v80;
  char *v81;
  _BYTE v82[4];
  _BOOL4 v83;
  id v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  char *v88;
  _BYTE *v89;
  _BYTE *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;

  v92 = a3;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v85 = &v82[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v87 = &v82[-v10];
  v11 = __chkstk_darwin(v9);
  v89 = &v82[-v12];
  __chkstk_darwin(v11);
  v86 = &v82[-v13];
  v14 = sub_1004B804C(&qword_1013E04D0);
  v15 = __chkstk_darwin(v14);
  v90 = &v82[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v15);
  v88 = &v82[-v18];
  v19 = __chkstk_darwin(v17);
  v21 = &v82[-v20];
  v22 = __chkstk_darwin(v19);
  v24 = &v82[-v23];
  __chkstk_darwin(v22);
  v91 = &v82[-v25];
  v26 = type metadata accessor for CharacterSet(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v30 = &v82[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v93 = a1;
  v94 = a2;
  static CharacterSet.whitespacesAndNewlines.getter(v28);
  v31 = sub_1004D292C();
  v32 = StringProtocol.trimmingCharacters(in:)(v30, &type metadata for String, v31);
  v34 = v33;
  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v30, v26);
  v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0)
    v35 = v32 & 0xFFFFFFFFFFFFLL;
  if (!v35)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v92, 1, 1, v5);
    swift_bridgeObjectRelease(v34);
    return;
  }
  v36 = v6;
  v37._countAndFlagsBits = 0x2F2F3A70747468;
  v37._object = (void *)0xE700000000000000;
  v38 = String.hasPrefix(_:)(v37);
  v39 = objc_allocWithZone((Class)NSDataDetector);
  v93 = 0;
  v40 = objc_msgSend(v39, "initWithTypes:error:", 32, &v93);
  v41 = v93;
  if (!v40)
  {
    v47 = (id)v93;
    v48 = _convertNSErrorToError(_:)(v41);

    swift_willThrow(v49);
    swift_bridgeObjectRelease(v34);
    swift_errorRelease(v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v92, 1, 1, v5);
    return;
  }
  v42 = v40;
  v83 = v38;
  v43 = (id)v93;
  v44 = v91;
  v84 = v42;
  sub_10062F720(v91);
  sub_1005773FC((uint64_t)v44, (uint64_t)v24);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v36 + 48);
  v46 = v5;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v45)(v24, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v24, &qword_1013E04D0);
    URL.init(string:encodingInvalidCharacters:)(v32, v34, 0);
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v45)(v21, 1, v5) == 1)
    {
      sub_1004CB800((uint64_t)v21, &qword_1013E04D0);
LABEL_14:
      v93 = 0x2F2F3A7370747468;
      v94 = 0xE800000000000000;
      v56._countAndFlagsBits = v32;
      v56._object = (void *)v34;
      String.append(_:)(v56);
      swift_bridgeObjectRelease(v34);
      v57 = v94;
      v58 = v88;
      sub_10062F720(v88);
      swift_bridgeObjectRelease(v57);
      v55 = v91;
      sub_100582338((uint64_t)v58, (uint64_t)v91, &qword_1013E04D0);
      goto LABEL_15;
    }
    v51 = v86;
    v52 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32))(v86, v21, v5);
    URL.scheme.getter(v52);
    v54 = v53;
    (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v51, v5);
    if (!v54)
      goto LABEL_14;
    swift_bridgeObjectRelease(v34);
    v50 = swift_bridgeObjectRelease(v54);
  }
  else
  {
    swift_bridgeObjectRelease(v34);
    sub_1004CB800((uint64_t)v24, &qword_1013E04D0);
  }
  v55 = v91;
LABEL_15:
  v59 = v45(v55, 1, v46, v50);
  v60 = v92;
  if (v59
    || (v62 = v89,
        v63.n128_f64[0] = (*(double (**)(_BYTE *, char *, uint64_t))(v36 + 16))(v89, v55, v46),
        URL.host.getter(v63),
        v61 = v64,
        (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v62, v46),
        !v61))
  {
    swift_bridgeObjectRelease(0);
    v61 = 0xE000000000000000;
  }
  v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v65, "containsString:", v66);

  if ((v67 & 1) != 0)
    goto LABEL_19;
  v69 = v90;
  sub_1005773FC((uint64_t)v55, (uint64_t)v90);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v45)(v69, 1, v46) == 1)
  {

    sub_1004CB800((uint64_t)v69, &qword_1013E04D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v60, 1, 1, v46);
    v68 = (uint64_t)v55;
    goto LABEL_23;
  }
  v70 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32);
  v71 = v87;
  v70(v87, v69, v46);
  if ((sub_10062FB10() & 1) == 0)
  {
    v72 = v85;
    v73 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 16))(v85, v71, v46);
    if (v83 || (v74 = URL.scheme.getter(v73), !v75))
    {
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v72, v46);
    }
    else
    {
      v76 = v75;
      if (v74 == 1886680168 && v75 == 0xE400000000000000)
      {
        v77 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
        v77(v72, v46);
        swift_bridgeObjectRelease(0xE400000000000000);
LABEL_35:
        v81 = v88;
        sub_10062FE30((uint64_t)v88);

        v77(v71, v46);
        sub_1004C4938((uint64_t)v81, v60, &qword_1013E04D0);
        v68 = (uint64_t)v55;
        goto LABEL_23;
      }
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, 1886680168, 0xE400000000000000, 0);
      v79 = v72;
      v80 = v78;
      v77 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
      v77(v79, v46);
      swift_bridgeObjectRelease(v76);
      if ((v80 & 1) != 0)
        goto LABEL_35;
    }

    v70((_BYTE *)v60, v71, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v60, 0, 1, v46);
    goto LABEL_20;
  }
  (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v71, v46);
LABEL_19:

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v60, 1, 1, v46);
LABEL_20:
  v68 = (uint64_t)v55;
LABEL_23:
  sub_1004CB800(v68, &qword_1013E04D0);
}

void sub_10062F720(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, "checkingTypes") != (id)32)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"crl_url(in:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/URL_CRLExtensions.swift", 88, 2, 293, "NSDataDetector is misconfigured.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_url(in:)", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/URL_CRLExtensions.swift", 88, 2u, 293, (uint64_t)"NSDataDetector is misconfigured.", 32, 2u);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
    return;
  }
  v31 = a1;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v11, "crl_range");
  v14 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v2, "matchesInString:options:range:", v15, 0, v12, v14);

  v17 = sub_100631934();
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v27 = v18;
    else
      v27 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v18);
    if (v28 == 1)
    {
      swift_bridgeObjectRetain(v18);
      v29 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(v18);
      if (v29)
        goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease(v18);
    v19 = v31;
    goto LABEL_22;
  }
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
    goto LABEL_21;
LABEL_4:
  v19 = v31;
  if ((v18 & 0xC000000000000001) != 0)
  {
    v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v20 = *(id *)(v18 + 32);
  }
  v21 = v20;
  if (objc_msgSend(v20, "range", swift_bridgeObjectRelease(v18).n128_f64[0]) == v12 && v22 == v14)
  {
    v23 = objc_msgSend(v21, "URL");
    if (v23)
    {
      v24 = v23;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

      v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v25(v10, v7, v4);
      v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
      v26(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
      {
        v25(v19, v10, v4);
        v26(v19, 0, 1, v4);
        return;
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    }
    sub_1004CB800((uint64_t)v10, &qword_1013E04D0);
  }
  else
  {

  }
LABEL_22:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v19, 1, 1, v4);
}

uint64_t sub_10062FB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  int v24;
  __n128 v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  int v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;

  v0 = sub_1004B804C(&qword_1013E8880);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v40 - v4;
  v6 = sub_1004B804C(&qword_1013E8888);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v40 - v11;
  v13 = URL.scheme.getter(v10);
  if (v14)
  {
    v15 = v13;
    v16 = v14;
    if (v13 == 0x7370747468 && v14 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0x7370747468, 0xE500000000000000, 0) & 1) != 0
      || v15 == 1886680168 && v16 == 0xE400000000000000)
    {
      v17 = swift_bridgeObjectRelease(v16);
    }
    else
    {
      v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 1886680168, 0xE400000000000000, 0);
      v17 = swift_bridgeObjectRelease(v16);
      v27 = 0;
      if ((v39 & 1) == 0)
        return v27;
    }
    v18 = URL.host.getter(v17);
    if (v19)
    {
      v20 = v18;
      v21 = v19;
      v22 = swift_bridgeObjectRetain(v19);
      IPv4Address.init(_:)(v20, v21, v22);
      v23 = type metadata accessor for IPv4Address(0);
      v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v12, 1, v23);
      sub_1004CB800((uint64_t)v12, &qword_1013E8888);
      if (v24 == 1)
      {
        v25 = swift_bridgeObjectRetain(v21);
        IPv6Address.init(_:)(v20, v21, v25);
        v26 = type metadata accessor for IPv6Address(0);
        v27 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v5, 1, v26) != 1;
        sub_1004CB800((uint64_t)v5, &qword_1013E8880);
        v28 = v21;
LABEL_14:
        swift_bridgeObjectRelease(v28);
        return v27;
      }
      v37 = v21;
    }
    else
    {
      v29 = URL.absoluteString.getter(v18);
      v31 = v30;
      v32 = swift_bridgeObjectRetain(v30);
      IPv4Address.init(_:)(v29, v31, v32);
      v33 = type metadata accessor for IPv4Address(0);
      v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v9, 1, v33);
      sub_1004CB800((uint64_t)v9, &qword_1013E8888);
      if (v34 == 1)
      {
        v35 = swift_bridgeObjectRetain(v31);
        IPv6Address.init(_:)(v29, v31, v35);
        v36 = type metadata accessor for IPv6Address(0);
        v27 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v3, 1, v36) != 1;
        sub_1004CB800((uint64_t)v3, &qword_1013E8880);
        v28 = v31;
        goto LABEL_14;
      }
      v37 = v31;
    }
    swift_bridgeObjectRelease(v37);
    return 1;
  }
  return 0;
}

uint64_t sub_10062FE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = URL.scheme.getter(v8);
  if (!v12)
    goto LABEL_8;
  v13 = v12;
  if (v11 == 1886680168 && v12 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    goto LABEL_6;
  }
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, 1886680168, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) == 0)
  {
LABEL_8:
    v17 = type metadata accessor for URL(0);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a1, v1, v17);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
  }
LABEL_6:
  URLComponents.init(url:resolvingAgainstBaseURL:)(v1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013E8868);
    v15 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    v19 = URLComponents.scheme.setter(0x7370747468, 0xE500000000000000);
    URLComponents.url.getter(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_100630030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URLComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E8868);
    return 0;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = URLComponents.scheme.getter(v9);
  if (!v11)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v12 = v10;
  v13 = v11;
  v14 = URLComponents.string.getter();
  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease(v13);
    return 0;
  }
  v16 = v15;
  v32 = v14;
  v33 = v15;
  v30 = v12;
  v31 = v13;
  swift_bridgeObjectRetain(v13);
  v17._countAndFlagsBits = 3092282;
  v17._object = (void *)0xE300000000000000;
  String.append(_:)(v17);
  v18 = v31;
  v28 = 0;
  v29 = 0xE000000000000000;
  v19 = sub_1004D292C();
  v20 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v30, &v28, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v19, v19, v19);
  v22 = v21;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v18);
  v32 = v20;
  v33 = v22;
  v30 = v12;
  v31 = v13;
  swift_bridgeObjectRetain(v13);
  v23._countAndFlagsBits = 58;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v13);
  v24 = v31;
  v28 = 0;
  v29 = 0xE000000000000000;
  v25 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v30, &v28, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v19, v19, v19);
  swift_bridgeObjectRelease(v22);
  v26 = swift_bridgeObjectRelease(v24);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
  return v25;
}

uint64_t sub_1006302CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006307CC(0, a1);
}

uint64_t sub_1006302D4(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v28;
  __n128 v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  char v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t (*v48)(char *, unint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, unint64_t, uint64_t, __n128);
  char *v68;
  uint64_t v69;
  uint64_t v70;

  v3 = v2;
  v6 = type metadata accessor for URLQueryItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E8878);
  __chkstk_darwin(v10);
  v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v13);
  v15 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URLComponents(0);
  __chkstk_darwin(v16);
  v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v3;
  v21 = v20;
  URLComponents.init(url:resolvingAgainstBaseURL:)(v19, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v16) == 1)
  {
    sub_1004CB800((uint64_t)v15, &qword_1013E8868);
    return 0;
  }
  v69 = v6;
  v70 = v7;
  v68 = v12;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v18, v15, v16);
  v23 = URLComponents.scheme.getter(v22);
  v25 = v21;
  v26 = v18;
  if (!v24)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v16);
    return 0;
  }
  if (v23 == 0x6D726F6665657266 && v24 == 0xE800000000000000)
  {
    v29 = swift_bridgeObjectRelease();
    v30 = a2;
    v31 = v9;
  }
  else
  {
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, 0x6D726F6665657266, 0xE800000000000000, 0);
    v29 = swift_bridgeObjectRelease();
    v30 = a2;
    v31 = v9;
    if ((v28 & 1) == 0)
      goto LABEL_9;
  }
  v32 = URLComponents.host.getter(v29);
  v34 = v25;
  if (!v33)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v16);
    return 0;
  }
  v65 = v16;
  if ((a1 & 1) != 0)
    v35 = 0x706F436472616F62;
  else
    v35 = 0x6472616F62;
  if ((a1 & 1) != 0)
    v36 = 0xE900000000000079;
  else
    v36 = 0xE500000000000000;
  if (v32 == v35 && v33 == v36)
  {
    swift_bridgeObjectRelease();
    v37 = swift_bridgeObjectRelease();
  }
  else
  {
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v35, v36, 0);
    swift_bridgeObjectRelease();
    v37 = swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
LABEL_37:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v65);
      return 0;
    }
  }
  v40 = URLComponents.queryItems.getter(v37);
  if (!v40)
    goto LABEL_37;
  v42 = *(_QWORD *)(v40 + 16);
  if (v42)
  {
    v43 = v69;
    v44 = v40 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    v45 = (v30 & 1) == 0;
    if ((v30 & 1) != 0)
      v46 = 0x54676E6972616873;
    else
      v46 = 25705;
    if (v45)
      v47 = 0xE200000000000000;
    else
      v47 = 0xEC0000006E656B6FLL;
    v48 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v70 + 16);
    v66 = *(_QWORD *)(v70 + 72);
    v67 = v48;
    v64[1] = v40;
    v49 = swift_bridgeObjectRetain(v40);
    while (1)
    {
      v50 = v43;
      v51 = v67(v31, v44, v43, v49);
      v52 = URLQueryItem.name.getter(v51);
      if (v52 == v46 && v53 == v47)
        break;
      v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, v46, v47, 0);
      swift_bridgeObjectRelease();
      v55 = swift_bridgeObjectRelease();
      if ((v54 & 1) != 0)
        goto LABEL_42;
      (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v31, v43, v55);
      v44 += v66;
      if (!--v42)
      {
        v41 = swift_bridgeObjectRelease();
        v56 = 1;
        v57 = v70;
        v58 = (uint64_t)v68;
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_42:
    v59 = swift_bridgeObjectRelease();
    v57 = v70;
    v58 = (uint64_t)v68;
    (*(void (**)(char *, char *, uint64_t, __n128))(v70 + 32))(v68, v31, v43, v59);
    v56 = 0;
  }
  else
  {
    v56 = 1;
    v50 = v69;
    v57 = v70;
    v58 = (uint64_t)v68;
  }
LABEL_43:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v57 + 56))(v58, v56, 1, v50, v41);
  v60 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v57 + 48))(v58, 1, v50, v60) == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v65);
    sub_1004CB800(v58, &qword_1013E8878);
    return 0;
  }
  v61 = URLQueryItem.value.getter();
  v63 = v62;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v65);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v50);
  if (v63)
    return v61;
  else
    return 0;
}

uint64_t sub_1006307C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1006307CC(1, a1);
}

uint64_t sub_1006307CC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1006302D4(a1, 0);
  if (!v12)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  sub_10067B81C(v11, v12, (uint64_t)v6);
  sub_1004B84E0((uint64_t)v6, (uint64_t)v10, type metadata accessor for CRLBoardIdentifierStorage);
  sub_1004B84E0((uint64_t)v10, a2, type metadata accessor for CRLBoardIdentifier);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_100630920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char v80[72];
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[4];
  char v84[80];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v79 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v78 = (char *)&v73 - v11;
  v12 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v12);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v15);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URLComponents(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v2, 1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1004CB800((uint64_t)v17, &qword_1013E8868);
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v83, 0, 0);
    v22 = (void *)static OS_os_log.crlSendACopy;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v84);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = v22;
    v26 = URL.absoluteString.getter(v25);
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    v30 = static os_log_type_t.default.getter(v29);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v30, "Unable to parse URL: %@", 23, 2, inited);
    swift_setDeallocating(inited);
    v31 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v31);

    goto LABEL_12;
  }
  v74 = v8;
  v75 = v7;
  v77 = a1;
  v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  v76 = v21;
  v33 = URLComponents.path.getter(v32);
  v35 = sub_100643BFC(1uLL, v33, v34);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_bridgeObjectRelease();
  v83[0] = v35;
  v83[1] = v37;
  v83[2] = v39;
  v83[3] = v41;
  v81 = 47;
  v82 = 0xE100000000000000;
  v42 = sub_1006318F0();
  v43 = sub_1004D292C();
  v44 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v81, &type metadata for Substring, &type metadata for String, v42, v43);
  swift_bridgeObjectRelease();
  if (v44[2] != 2)
  {
    swift_bridgeObjectRelease();
    a1 = v77;
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v83, 0, 0);
    v50 = (void *)static OS_os_log.crlSendACopy;
    v51 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v52 = swift_initStackObject(v51, v80);
    *(_OWORD *)(v52 + 16) = xmmword_100EF5E40;
    v53 = v50;
    v54 = URL.absoluteString.getter(v53);
    v56 = v55;
    *(_QWORD *)(v52 + 56) = &type metadata for String;
    *(_QWORD *)(v52 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v52 + 32) = v54;
    *(_QWORD *)(v52 + 40) = v56;
    v58 = static os_log_type_t.default.getter(v57);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v58, "URL was not a valid url: %@", 27, 2, v52);
    swift_setDeallocating(v52);
    v59 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v52 + 32, 1, v59);

    goto LABEL_11;
  }
  strcpy((char *)v83, "freeform-copy");
  HIWORD(v83[1]) = -4864;
  v45 = v44[5];
  v81 = v44[4];
  v82 = v45;
  v46 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v14, 1, 1, v46);
  v47 = swift_bridgeObjectRetain(v45);
  v48 = StringProtocol.compare<A>(_:options:range:locale:)(&v81, 1, 0, 0, 1, v14, &type metadata for String, &type metadata for String, v47, v43, v43);
  sub_1004CB800((uint64_t)v14, &qword_1013E1748);
  v49 = swift_bridgeObjectRelease();
  a1 = v77;
  if (v48)
  {
    (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v76, v18, v49);
    swift_bridgeObjectRelease();
LABEL_12:
    v60 = type metadata accessor for CRLBoardIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(a1, 1, 1, v60);
  }
  v62 = v44[2];
  if (!v62)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(char *, uint64_t))(v19 + 8))(v76, v18);
    goto LABEL_12;
  }
  v63 = (uint64_t)&v44[2 * v62 + 4];
  v64 = *(_QWORD *)(v63 - 16);
  v65 = *(_QWORD *)(v63 - 8);
  swift_bridgeObjectRetain(v65);
  v66 = swift_bridgeObjectRelease();
  UUID.init(uuidString:)(v64, v65, v66);
  v67 = swift_bridgeObjectRelease();
  v68 = v74;
  v69 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v74 + 48))(v6, 1, v75, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v76, v18);
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    goto LABEL_12;
  }
  v70 = v78;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v78, v6, v69);
  v71 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v79, v70, v69);
  sub_10067AFD0(v71, 0, 0xE000000000000000, a1);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v69);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v76, v18);
  v72 = type metadata accessor for CRLBoardIdentifier(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(a1, 0, 1, v72);
}

uint64_t sub_100630FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v14[4];

  v1 = URL.scheme.getter(a1);
  if (!v2)
    return sub_1006302D4(0, 1);
  if (v1 != 0x7370747468 || v2 != 0xE500000000000000)
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0x7370747468, 0xE500000000000000, 0);
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      goto LABEL_6;
    return sub_1006302D4(0, 1);
  }
  swift_bridgeObjectRelease();
LABEL_6:
  v14[2] = URL.path.getter(v3);
  v14[3] = v5;
  v14[0] = 0x726F66656572662FLL;
  v14[1] = 0xEA00000000002F6DLL;
  v6 = sub_1004D292C();
  v7 = StringProtocol.contains<A>(_:)(v14, &type metadata for String, &type metadata for String, v6, v6);
  v8 = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0
    && (v9 = URL.lastPathComponent.getter(v8),
        v11 = String.count.getter(v9, v10),
        v12 = swift_bridgeObjectRelease(),
        v11 >= 16))
  {
    return URL.lastPathComponent.getter(v12);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100631128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Swift::String v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  Swift::String_optional v67;
  uint64_t countAndFlagsBits;
  void *object;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[72];
  char v96[72];
  _QWORD v97[4];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v9);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v1, 1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v11, &qword_1013E8868);
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v97, 0, 0);
    v16 = (void *)static OS_os_log.crlSendACopy;
    v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v17, v96);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v19 = v16;
    v20 = URL.absoluteString.getter(v19);
    v22 = v21;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v23 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v23;
    *(_QWORD *)(inited + 32) = v20;
    *(_QWORD *)(inited + 40) = v22;
    v24 = static os_log_type_t.error.getter(v23);
    sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v24, "Failed to create URLComponents from %{public}@", 46, 2, inited);
    swift_setDeallocating(inited);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v25);

    return 0;
  }
  v90 = v8;
  v91 = v6;
  v92 = v5;
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v97[0] = URLComponents.path.getter(v26);
  v97[1] = v27;
  v28 = sub_1004D292C();
  v29 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v28);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v29 + 16) != 2)
    goto LABEL_13;
  v88 = v1;
  v89 = v15;
  swift_bridgeObjectRetain(*(_QWORD *)(v29 + 56));
  v30 = Substring.lowercased()();
  swift_bridgeObjectRelease();
  if (v30._countAndFlagsBits == 0x6D726F6665657266 && v30._object == (void *)0xED000079706F632DLL)
  {
    swift_bridgeObjectRelease();
    v15 = v89;
    goto LABEL_10;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v30._countAndFlagsBits, v30._object, 0x6D726F6665657266, 0xED000079706F632DLL, 0);
  swift_bridgeObjectRelease();
  v15 = v89;
  if ((v31 & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v97, 0, 0);
    v46 = (void *)static OS_os_log.crlSendACopy;
    v47 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v48 = swift_initStackObject(v47, v95);
    *(_OWORD *)(v48 + 16) = xmmword_100EF5E40;
    v49 = v46;
    v50 = URL.absoluteString.getter(v49);
    v52 = v51;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    v53 = sub_1004CFC2C();
    *(_QWORD *)(v48 + 64) = v53;
    *(_QWORD *)(v48 + 32) = v50;
    v54 = v48 + 32;
    *(_QWORD *)(v48 + 40) = v52;
    v55 = static os_log_type_t.error.getter(v53);
    v56 = "Invalid path from universal link %{public}@";
    v57 = (uint64_t)v49;
    v58 = 43;
    goto LABEL_20;
  }
LABEL_10:
  v32 = *(_QWORD *)(v29 + 16);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v33 = v29 + 32 + 32 * v32;
  v34 = *(_QWORD *)(v33 - 32);
  v35 = *(_QWORD *)(v33 - 24);
  v36 = *(_QWORD *)(v33 - 16);
  v37 = *(_QWORD *)(v33 - 8);
  swift_bridgeObjectRetain(v37);
  v38 = swift_bridgeObjectRelease();
  v39 = static String._fromSubstring(_:)(v34, v35, v36, v37, v38);
  v41 = v40;
  v42 = swift_bridgeObjectRelease();
  UUID.init(uuidString:)(v39, v41, v42);
  v43 = swift_bridgeObjectRelease();
  v45 = v91;
  v44 = v92;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v91 + 48))(v4, 1, v92, v43) == 1)
  {
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E1A50);
    v15 = v89;
LABEL_17:
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v97, 0, 0);
    v59 = (void *)static OS_os_log.crlSendACopy;
    v60 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v48 = swift_initStackObject(v60, &v94);
    *(_OWORD *)(v48 + 16) = xmmword_100EF5E40;
    v49 = v59;
    v61 = URL.absoluteString.getter(v49);
    v63 = v62;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    v64 = sub_1004CFC2C();
    *(_QWORD *)(v48 + 64) = v64;
    *(_QWORD *)(v48 + 32) = v61;
    v54 = v48 + 32;
    *(_QWORD *)(v48 + 40) = v63;
    v55 = static os_log_type_t.error.getter(v64);
    v56 = "Failed to get valid board uuid from %{public}@";
    v57 = (uint64_t)v49;
    v58 = 46;
LABEL_20:
    sub_100A06EBC(v57, &_mh_execute_header, v55, v56, v58, 2, v48);
    swift_setDeallocating(v48);
    v65 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v54, 1, v65);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v90, v4, v44);
  v67 = URL.fragment(percentEncoded:)(1);
  if (v67.value._object)
    countAndFlagsBits = v67.value._countAndFlagsBits;
  else
    countAndFlagsBits = 0;
  object = (void *)0xE000000000000000;
  if (v67.value._object)
    object = v67.value._object;
  v86 = object;
  v87 = countAndFlagsBits;
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  swift_beginAccess(&static OS_os_log.crlSendACopy, v97, 0, 0);
  v70 = (void *)static OS_os_log.crlSendACopy;
  v71 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v72 = swift_initStackObject(v71, &v93);
  *(_OWORD *)(v72 + 16) = xmmword_100EF5550;
  v73 = v70;
  v74 = URL.absoluteString.getter(v73);
  v76 = v75;
  *(_QWORD *)(v72 + 56) = &type metadata for String;
  v77 = sub_1004CFC2C();
  *(_QWORD *)(v72 + 64) = v77;
  *(_QWORD *)(v72 + 32) = v74;
  *(_QWORD *)(v72 + 40) = v76;
  v78 = v90;
  v79 = UUID.uuidString.getter(v77);
  *(_QWORD *)(v72 + 96) = &type metadata for String;
  *(_QWORD *)(v72 + 104) = v77;
  *(_QWORD *)(v72 + 72) = v79;
  *(_QWORD *)(v72 + 80) = v80;
  *(_QWORD *)(v72 + 136) = &type metadata for String;
  *(_QWORD *)(v72 + 144) = v77;
  v81 = v86;
  *(_QWORD *)(v72 + 112) = v87;
  *(_QWORD *)(v72 + 120) = v81;
  v83 = static os_log_type_t.default.getter(v82);
  sub_100A06EBC((uint64_t)v73, &_mh_execute_header, v83, "Validated Send-A-Copy Universal Link: %{public}@, boardUUID: %{public}@, title: %{public}@", 90, 2, v72);
  swift_setDeallocating(v72);
  v84 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v72 + 32, 3, v84);

  (*(void (**)(char *, uint64_t))(v91 + 8))(v78, v92);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v89, v12);
  return 1;
}

uint64_t sub_1006318B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006318C0(uint64_t a1)
{
  uint64_t v1;

  return sub_10062EAE0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1006318C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006318D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006318E8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1006318F0()
{
  unint64_t result;

  result = qword_1013E8870;
  if (!qword_1013E8870)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1013E8870);
  }
  return result;
}

unint64_t sub_100631934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8890;
  if (!qword_1013E8890)
  {
    v1 = objc_opt_self(NSTextCheckingResult);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E8890);
  }
  return result;
}

uint64_t sub_100631970(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  const char *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a3)
  {
    v14 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000084, 0x8000000100FBC060);
    static Locale.current.getter(v14);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
    v15 = "User-visible error message when trying to rename a board to an invalid title.";
    v16 = v13;
    v17 = v10;
    v18 = v7;
    v19 = 77;
    return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0x6E497070414C5243, 0xED000073746E6574, v17, v18, v15, v19, 2);
  }
  if (a3 == 1)
  {
    v20 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003BLL, 0x8000000100FBBFC0);
    static Locale.current.getter(v20);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
    v15 = "User-visisble error message when trying to rename a board to a title that already exists.";
    v16 = v13;
    v17 = v10;
    v18 = v7;
    v19 = 89;
    return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0x6E497070414C5243, 0xED000073746E6574, v17, v18, v15, v19, 2);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLBoardTitleValidator.swift", 37, 2, 107, 0);
  __break(1u);
  return result;
}

id sub_100631BB0(uint64_t a1, id a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44[72];
  _QWORD v45[3];
  void *v46;

  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    __chkstk_darwin(v6);
    *(&v38 - 2) = a1;
    v9 = sub_1004B804C(&qword_1013E8898);
    OS_dispatch_queue.sync<A>(execute:)(sub_100633B48, &v38 - 4, v9);
    if (v2)
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v45, 0, 0);
      v10 = (void *)static OS_os_log.crlDefault;
      v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v11, v44);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v42 = v2;
      a2 = v10;
      swift_errorRetain(v2);
      v13 = sub_1004B804C(&qword_1013E0210);
      v14 = String.init<A>(describing:)(&v42, v13);
      v16 = v15;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v17 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v17;
      *(_QWORD *)(inited + 32) = v14;
      *(_QWORD *)(inited + 40) = v16;
      v18 = static os_log_type_t.error.getter(v17);
      sub_100A06EBC((uint64_t)a2, &_mh_execute_header, v18, "Error getting unique title: %@", 30, 2, inited);
      swift_setDeallocating(inited);
      v19 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v19);

      swift_willThrow(v20);
    }
    else
    {
      v46 = &_swiftEmptySetSingleton;
      v21 = *(_QWORD *)(v45[0] + 16);
      if (v21)
      {
        v40 = 0;
        v41 = v8;
        swift_bridgeObjectRetain(v45[0]);
        v39 = v22;
        v23 = (void **)(v22 + 40);
        v24 = (uint64_t)v41;
        do
        {
          v33 = (uint64_t)*(v23 - 1);
          v32 = *v23;
          v34 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
          v35 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
          if (v34)
            v36 = 0;
          else
            v36 = v35 == 0xE000000000000000;
          if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, 0, 0xE000000000000000, 0) & 1) != 0)
          {
            v25 = v33 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
            swift_beginAccess(v33 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v45, 0, 0);
            sub_1004B8460(v25, v24, type metadata accessor for CRLBoardCRDTData);
            v26 = v5;
            v27 = v32;
            swift_retain(v33);
            v28 = sub_1004B804C(&qword_1013E1980);
            CRRegister.wrappedValue.getter(v28);
            v29 = v42;
            v30 = v43;
            sub_1004B84A4(v24, type metadata accessor for CRLBoardCRDTData);
            sub_100AD8690(&v42, v29, v30);
            v31 = v43;

            v5 = v26;
            swift_release(v33);
            swift_bridgeObjectRelease(v31);
          }
          v23 += 2;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease_n(v39, 2);
        return v46;
      }
      else
      {
        swift_bridgeObjectRelease(v45[0]);
        return &_swiftEmptySetSingleton;
      }
    }
  }
  return a2;
}

uint64_t sub_100631F20(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  if (a3 > 1u)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLBoardTitleValidator.swift", 37, 2, 72, 0);
    __break(1u);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v4 = String._bridgeToObjectiveC()();
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    return v7;
  }
  return result;
}

uint64_t sub_100632090(uint64_t a1, uint64_t a2, char a3)
{
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;

  if (!a3)
  {
    v5 = (void *)objc_opt_self(NSBundle);
    v6 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRetain(a2).n128_f64[0]);
    v7 = String._bridgeToObjectiveC()();
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v14 = swift_allocObject(v13, 72, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    v15 = v10;
LABEL_5:
    v24 = static String.localizedStringWithFormat(_:_:)(v15, v12, v14);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v14);
    return v24;
  }
  if (a3 == 1)
  {
    v16 = (void *)objc_opt_self(NSBundle);
    v17 = objc_msgSend(v16, "mainBundle", swift_bridgeObjectRetain(a2).n128_f64[0]);
    v18 = String._bridgeToObjectiveC()();
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v12 = v22;

    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v14 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    v15 = v21;
    goto LABEL_5;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLBoardTitleValidator.swift", 37, 2, 85, 0);
  __break(1u);
  return result;
}

uint64_t sub_100632338(uint64_t a1, uint64_t a2)
{
  return sub_100632DB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_100632354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100631F20(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_100632360()
{
  uint64_t v0;

  return sub_100632090(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_100632370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100631970(a1, a2, *(_BYTE *)(v2 + 16));
}

void sub_100632378(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v62 = 0;
  v63 = 0xE000000000000000;
  v58 = a5;
  v59 = a6;
  v12 = swift_bridgeObjectRetain(a6);
  Substring.init<A>(_:)(&v58, &type metadata for String, &protocol witness table for String, v12);
  v14 = v13;
  swift_bridgeObjectRelease(v13);
  if ((v14 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v58 = a3;
  v59 = a4;
  v15 = swift_bridgeObjectRetain(a4);
  Substring.init<A>(_:)(&v58, &type metadata for String, &protocol witness table for String, v15);
  v17 = v16;
  swift_bridgeObjectRelease(v16);
  if ((v17 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v18 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v18) = 1;
  v19 = 4 << v18;
  v20 = a1;
  if ((a1 & 0xC) == 4 << v18)
    v20 = sub_100BF1410(a1, a5, a6);
  v56 = a1;
  v57 = a3;
  v21 = a2;
  v22 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v24 = a6 & 0x2000000000000000;
    v26 = a5 & 0xFFFFFFFFFFFFLL;
    v25 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v45 = HIBYTE(a6) & 0xF;
    else
      v45 = a5 & 0xFFFFFFFFFFFFLL;
    if (v45 < v20 >> 16)
      goto LABEL_43;
    v23 = String.UTF8View._foreignDistance(from:to:)(15);
    if (v22)
      v27 = 7;
    else
      v27 = 11;
  }
  else
  {
    v23 = v20 >> 16;
    v24 = a6 & 0x2000000000000000;
    v25 = HIBYTE(a6) & 0xF;
    v26 = a5 & 0xFFFFFFFFFFFFLL;
    v27 = 7;
  }
  if (!v24)
    v25 = v26;
  v28 = 4 << (v22 >> 59);
  v29 = v27 | (v25 << 16);
  a2 = v21;
  if ((a6 & 0x1000000000000000) == 0)
    v28 = 8;
  v30 = v21;
  if ((v21 & 0xC) == v28)
  {
    v46 = v21;
    v47 = v23;
    v48 = sub_100BF1410(v46, a5, a6);
    v23 = v47;
    v30 = v48;
  }
  if ((v27 & 0xC) == v19)
  {
    v49 = v27 | (v25 << 16);
    v50 = v23;
    v51 = sub_100BF1410(v49, a5, a6);
    v23 = v50;
    v29 = v51;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v31 = (v29 >> 16) - (v30 >> 16);
      if ((a4 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v25 < v30 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v25 >= v29 >> 16)
  {
    v52 = v23;
    v53 = String.UTF8View._foreignDistance(from:to:)(v30);
    v23 = v52;
    v31 = v53;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      a3 = v57;
      if ((a4 & 0x2000000000000000) != 0)
      {
        v33 = HIBYTE(a4) & 0xF;
        v32 = v23 + v33;
        if (!__OFADD__(v23, v33))
          goto LABEL_23;
      }
      else
      {
        v32 = v23 + (v57 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v23, v57 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_39;
    }
LABEL_37:
    a3 = v57;
    v54 = v23;
    v55 = String.UTF8View._foreignCount()();
    v32 = v54 + v55;
    if (!__OFADD__(v54, v55))
    {
LABEL_23:
      if (!__OFADD__(v32, v31))
      {
        String.reserveCapacity(_:)(v32 + v31);
        a1 = v56;
LABEL_25:
        v34 = String.subscript.getter(15, a1, a5, a6);
        v36 = v35;
        v58 = v34;
        v59 = v37;
        v60 = v38;
        v61 = v35;
        v39 = sub_100633B04();
        String.append<A>(contentsOf:)(&v58, &type metadata for Substring, v39);
        swift_bridgeObjectRelease(v36);
        v58 = a3;
        v59 = a4;
        String.append<A>(contentsOf:)(&v58, &type metadata for String, &protocol witness table for String);
        v40 = sub_100A663B8(a2, a5, a6);
        v42 = v41;
        v58 = v40;
        v59 = v43;
        v60 = v44;
        v61 = v41;
        String.append<A>(contentsOf:)(&v58, &type metadata for Substring, v39);
        swift_bridgeObjectRelease(v42);
        return;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

void sub_1006326BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  __n128 v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  NSString v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  NSString v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  NSString v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  Swift::Int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD v80[2];
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void **aBlock;
  unint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t);
  void *v87;
  BOOL (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;

  v11 = type metadata accessor for CharacterSet(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100631BB0(a5, a6);
  if (!v6)
  {
    LODWORD(v90) = a4;
    v82 = a2;
    v83 = (uint64_t)v15;
    v80[1] = 0;
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v16, "crl_stringByFixingBrokenSurrogatePairs");

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v19 = v12;
    v21 = v20;

    aBlock = (void **)v18;
    v85 = v21;
    swift_bridgeObjectRetain(v21);
    static CharacterSet.whitespacesAndNewlines.getter(v22);
    v23 = sub_1004D292C();
    v24 = StringProtocol.trimmingCharacters(in:)(v14, &type metadata for String, v23);
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v19 + 8);
    v27(v14, v11);
    v28 = v85;
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v28);
    while (1)
    {
      aBlock = (void **)v24;
      v85 = v26;
      v29 = swift_bridgeObjectRetain(v26);
      static CharacterSet.newlines.getter(v29);
      v30 = StringProtocol.rangeOfCharacter(from:options:range:)(v14, 0, 0, 0, 1, &type metadata for String, v23);
      v32 = v31;
      v34 = v33;
      v27(v14, v11);
      swift_bridgeObjectRelease(v85);
      if ((v34 & 1) != 0)
        break;
      swift_bridgeObjectRetain(v26);
      sub_100632378(v30, v32, 0x20uLL, 0xE100000000000000, v24, v26);
      v24 = v35;
      v37 = v36;
      swift_bridgeObjectRelease_n(v26, 2);
      v26 = v37;
    }
    v38 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0)
      v38 = v24 & 0xFFFFFFFFFFFFLL;
    if (!v38)
    {
      v39 = v82;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRelease(v26);
      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41 = String._bridgeToObjectiveC()();
      v42 = String._bridgeToObjectiveC()();
      v43 = objc_msgSend(v40, "localizedStringForKey:value:table:", v41, v42, 0);

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v26 = v44;
      swift_bridgeObjectRelease(v39);

    }
    v45 = v83;
    if ((v90 & 1) != 0)
    {
      swift_bridgeObjectRetain(v26);
      v46 = sub_100622CA4(v24, v26, v45);
      swift_bridgeObjectRelease(v26);
      if ((v46 & 1) != 0)
      {
        v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26);
        v48 = swift_allocObject(&unk_101273010, 24, 7);
        *(_QWORD *)(v48 + 16) = v45;
        v88 = sub_100633ACC;
        v89 = v48;
        aBlock = _NSConcreteStackBlock;
        v85 = *(_QWORD *)"";
        v86 = sub_100632D54;
        v87 = &unk_101273028;
        v49 = _Block_copy(&aBlock);
        v50 = objc_msgSend(v47, "crl_stringByIncrementingCounterAfterDuplicateTitleModifierWithUniquenessTest:", v49, swift_release(v89).n128_f64[0]);
        _Block_release(v49);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        return;
      }
      goto LABEL_32;
    }
    v51 = (void *)objc_opt_self(NSBundle);
    v52 = objc_msgSend(v51, "mainBundle", swift_bridgeObjectRetain(v26).n128_f64[0]);
    v53 = String._bridgeToObjectiveC()();
    v54 = String._bridgeToObjectiveC()();
    v55 = objc_msgSend(v52, "localizedStringForKey:value:table:", v53, v54, 0);

    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v57 = v56;

    swift_bridgeObjectRetain(v26);
    LOBYTE(v52) = sub_100622CA4(v24, v26, v45);
    swift_bridgeObjectRelease_n(v26, 2);
    if ((v52 & 1) == 0)
    {
      swift_bridgeObjectRelease(v57);
LABEL_32:
      swift_bridgeObjectRelease(v45);
      return;
    }
    v90 = v45 + 56;
    v58 = 2;
    v81 = xmmword_100EF5A10;
    while (1)
    {
      v59 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v60 = swift_allocObject(v59, 112, 7);
      *(_OWORD *)(v60 + 16) = v81;
      *(_QWORD *)(v60 + 56) = &type metadata for String;
      v61 = sub_1004CFC2C();
      *(_QWORD *)(v60 + 32) = v24;
      *(_QWORD *)(v60 + 40) = v26;
      *(_QWORD *)(v60 + 96) = &type metadata for Int;
      *(_QWORD *)(v60 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v60 + 64) = v61;
      *(_QWORD *)(v60 + 72) = v58;
      swift_bridgeObjectRetain(v26);
      v62 = static String.localizedStringWithFormat(_:_:)(v82, v57, v60);
      v64 = v63;
      swift_bridgeObjectRelease(v60);
      if (__OFADD__(v58++, 1))
        break;
      if (!*(_QWORD *)(v45 + 16))
      {
        swift_bridgeObjectRelease(v57);
        swift_bridgeObjectRelease(v45);
        v79 = v26;
        goto LABEL_37;
      }
      Hasher.init(_seed:)(&aBlock, *(_QWORD *)(v45 + 40));
      swift_bridgeObjectRetain(v64);
      String.hash(into:)(&aBlock, v62, v64);
      v66 = Hasher._finalize()();
      v67 = v45;
      v68 = -1 << *(_BYTE *)(v45 + 32);
      v69 = v66 & ~v68;
      if (((*(_QWORD *)(v90 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
      {
        swift_bridgeObjectRelease(v57);
        v78 = v67;
        goto LABEL_36;
      }
      v70 = *(_QWORD *)(v67 + 48);
      v71 = (_QWORD *)(v70 + 16 * v69);
      v72 = v71[1];
      v73 = *v71 == v62 && v72 == v64;
      if (!v73 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v71, v72, v62, v64, 0) & 1) == 0)
      {
        v74 = ~v68;
        while (1)
        {
          v69 = (v69 + 1) & v74;
          if (((*(_QWORD *)(v90 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
            break;
          v75 = (_QWORD *)(v70 + 16 * v69);
          v76 = v75[1];
          v77 = *v75 == v62 && v76 == v64;
          if (v77 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v75, v76, v62, v64, 0) & 1) != 0)
            goto LABEL_14;
        }
        swift_bridgeObjectRelease(v57);
        v78 = v83;
LABEL_36:
        swift_bridgeObjectRelease(v78);
        swift_bridgeObjectRelease(v26);
        v79 = v64;
LABEL_37:
        swift_bridgeObjectRelease(v79);
        return;
      }
LABEL_14:
      swift_bridgeObjectRelease_n(v64, 2);
      v45 = v83;
    }
    __break(1u);
  }
}

uint64_t sub_100632D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v6 = v5;
  swift_retain(v2);
  LOBYTE(v4) = v3(v4, v6);
  swift_release(v2);
  swift_bridgeObjectRelease(v6);
  return v4 & 1;
}

uint64_t sub_100632DB4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5)
        return 1;
      return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
    }
    return 0;
  }
  if (a3 != 1)
    return a6 == 2 && !(a5 | a4);
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
}

unint64_t sub_100632E3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSString v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  void **v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  char v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  unint64_t v135;
  uint64_t v136;
  __n128 v137;
  _QWORD v139[2];
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;

  v139[1] = a5;
  v143 = a4;
  LODWORD(v153) = a3;
  v160 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v160);
  v149 = (char *)v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v157 = *(_QWORD *)(v8 - 8);
  v158 = v8;
  __chkstk_darwin(v8);
  v156 = (char *)v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v155 = (char *)v139 - v11;
  v159 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v159);
  v144 = (char *)v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v148 = (uint64_t)v139 - v14;
  __chkstk_darwin(v15);
  v154 = (uint64_t)v139 - v16;
  v17 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v17);
  v142 = (char *)v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for CRLBoardIdentifier(0);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v147 = (uint64_t)v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v150 = (char *)v139 - v21;
  __chkstk_darwin(v22);
  v145 = (uint64_t)v139 - v23;
  __chkstk_darwin(v24);
  v146 = (uint64_t)v139 - v25;
  __chkstk_darwin(v26);
  v166 = (uint64_t)v139 - v27;
  v28 = type metadata accessor for CharacterSet(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)v139 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = a1;
  v152 = a2;
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v32, "crl_stringByFixingBrokenSurrogatePairs");

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v164 = v34;
  v165 = v36;
  swift_bridgeObjectRetain(v36);
  static CharacterSet.whitespacesAndNewlines.getter(v37);
  v38 = sub_1004D292C();
  v39 = StringProtocol.trimmingCharacters(in:)(v31, &type metadata for String, v38);
  v41 = v40;
  v42 = *(void (**)(char *, uint64_t))(v29 + 8);
  v42(v31, v28);
  v43 = v165;
  v44 = v36;
  v45 = v39;
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v43);
  while (1)
  {
    v164 = v45;
    v165 = v41;
    v46 = swift_bridgeObjectRetain(v41);
    static CharacterSet.newlines.getter(v46);
    v47 = StringProtocol.rangeOfCharacter(from:options:range:)(v31, 0, 0, 0, 1, &type metadata for String, v38);
    v49 = v48;
    v51 = v50;
    v42(v31, v28);
    swift_bridgeObjectRelease(v165);
    if ((v51 & 1) != 0)
      break;
    swift_bridgeObjectRetain(v41);
    sub_100632378(v47, v49, 0x20uLL, 0xE100000000000000, v45, v41);
    v45 = v52;
    v54 = v53;
    swift_bridgeObjectRelease_n(v41, 2);
    v41 = v54;
  }
  v55 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0)
    v55 = v45 & 0xFFFFFFFFFFFFLL;
  if (!v55)
  {
    v56 = sub_100633B60();
    swift_allocError(&type metadata for CRLBoardTitleValidator.Error, v56, 0, 0);
    v57 = v152;
    *(_QWORD *)v58 = v151;
    *(_QWORD *)(v58 + 8) = v57;
    *(_BYTE *)(v58 + 16) = 0;
    v59 = swift_bridgeObjectRetain(v57);
    swift_willThrow(v59);
    goto LABEL_60;
  }
  if ((v153 & 1) != 0)
    return v45;
  v60 = (uint64_t)v142;
  sub_1005815E0(v143, (uint64_t)v142);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v60, 1, v141);
  v62 = v161;
  if (v61 != 1)
  {
    v66 = v166;
    v67 = sub_1004B84E0(v60, v166, type metadata accessor for CRLBoardIdentifier);
    __chkstk_darwin(v67);
    v139[-2] = v68;
    v69 = sub_1004B804C(&qword_1013E8898);
    OS_dispatch_queue.sync<A>(execute:)(sub_100633D70, &v139[-4], v69);
    if (v62)
    {
      sub_1004B84A4(v66, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_60;
    }
    v86 = v164;
    v87 = *(_QWORD *)(v164 + 16);
    if (!v87)
      goto LABEL_53;
    v161 = 0;
    v141 = (uint64_t)CKCurrentUserDefaultName;
    swift_bridgeObjectRetain(v164);
    v140 = v86;
    v88 = (void **)(v86 + 40);
    v139[0] = v45;
    while (1)
    {
      v153 = v87;
      v75 = (uint64_t)*(v88 - 1);
      v90 = (char *)*v88;
      v143 = (uint64_t)v88;
      v91 = v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v164, 0, 0);
      v92 = v154;
      sub_1004B8460(v91, v154, type metadata accessor for CRLBoardCRDTData);
      v142 = v90;
      v144 = v90;
      swift_retain_n(v75, 2);
      swift_bridgeObjectRetain(v41);
      v93 = sub_1004B804C(&qword_1013E1980);
      CRRegister.wrappedValue.getter(v93);
      v95 = v162;
      v94 = v163;
      sub_1004B84A4(v92, type metadata accessor for CRLBoardCRDTData);
      if (v45 == v95 && v41 == v94)
      {
        swift_bridgeObjectRelease_n(v41, 2);
        v96 = v160;
      }
      else
      {
        v97 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v41, v95, v94, 0);
        swift_bridgeObjectRelease(v94);
        swift_bridgeObjectRelease(v41);
        v96 = v160;
        if ((v97 & 1) == 0)
          goto LABEL_51;
      }
      v98 = (_QWORD *)(v166 + *(int *)(v96 + 20));
      v99 = v98[1];
      v100 = (uint64_t *)(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v101 = *(_QWORD *)(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v102 = *(_QWORD *)(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      v103 = *v98 == v101 && v99 == v102;
      if (v103 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v98, v99, v101, v102, 0) & 1) != 0)
      {
        v104 = v148;
        sub_1004B8460(v91, v148, type metadata accessor for CRLBoardCRDTData);
        v105 = sub_1004B804C(&qword_1013E1A80);
        v106 = v155;
        CRRegister.wrappedValue.getter(v105);
        sub_1004B84A4(v104, type metadata accessor for CRLBoardCRDTData);
        v108 = *v100;
        v107 = v100[1];
        (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v156, v106, v158);
        v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
        v111 = v108 == v109 && v107 == v110;
        if (v111
          || (v112 = v110,
              v113 = _stringCompareWithSmolCheck(_:_:expecting:)(v108, v107, v109, v110, 0),
              swift_bridgeObjectRetain(v107),
              v114 = swift_bridgeObjectRelease(v112),
              (v113 & 1) != 0))
        {
          v114 = swift_bridgeObjectRelease(v107);
          v108 = 0;
          v107 = 0xE000000000000000;
        }
        v115 = v160;
        v116 = (uint64_t)v150;
        v117 = v157;
        v118 = v158;
        (*(void (**)(char *, uint64_t, __n128))(v157 + 8))(v155, v158, v114);
        v119 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
        v120 = (uint64_t)v149;
        v119(v149, v156, v118);
        v121 = (_QWORD *)(v120 + *(int *)(v115 + 20));
        *v121 = v108;
        v121[1] = v107;
        v122 = v145;
        sub_1004B84E0(v120, v145, type metadata accessor for CRLBoardIdentifierStorage);
        v123 = v146;
        sub_1004B84E0(v122, v146, type metadata accessor for CRLBoardIdentifier);
        v124 = v166;
        LOBYTE(v122) = static UUID.== infix(_:_:)(v166);
        sub_1004B8460(v124, v116, type metadata accessor for CRLBoardIdentifier);
        v125 = v147;
        sub_1004B8460(v123, v147, type metadata accessor for CRLBoardIdentifier);
        if ((v122 & 1) == 0)
        {
          sub_1004B84A4(v125, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v116, type metadata accessor for CRLBoardIdentifier);
          swift_release(v75);
          sub_1004B84A4(v123, type metadata accessor for CRLBoardIdentifier);
          v45 = v139[0];
LABEL_58:
          swift_bridgeObjectRelease_n(v140, 2);
          sub_1004B84A4(v166, type metadata accessor for CRLBoardIdentifier);
          v133 = v151;
          v132 = v152;
          goto LABEL_59;
        }
        v126 = *(int *)(v115 + 20);
        v127 = *(_QWORD *)(v116 + v126);
        v128 = *(_QWORD *)(v116 + v126 + 8);
        v129 = (_QWORD *)(v125 + v126);
        v130 = v129[1];
        v45 = v139[0];
        if (v127 == *v129 && v128 == v130)
        {
          sub_1004B84A4(v125, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v116, type metadata accessor for CRLBoardIdentifier);
          swift_release(v75);
          sub_1004B84A4(v123, type metadata accessor for CRLBoardIdentifier);
        }
        else
        {
          v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v127, v128, *v129, v130, 0);
          sub_1004B84A4(v125, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v116, type metadata accessor for CRLBoardIdentifier);
          swift_release(v75);
          sub_1004B84A4(v123, type metadata accessor for CRLBoardIdentifier);
          if ((v89 & 1) == 0)
            goto LABEL_58;
        }

        swift_release(v75);
        goto LABEL_31;
      }
LABEL_51:

      swift_release_n(v75, 2, v131);
LABEL_31:
      v88 = (void **)(v143 + 16);
      v87 = v153 - 1;
      if (v153 == 1)
      {
        v86 = v140;
        swift_bridgeObjectRelease(v140);
LABEL_53:
        swift_bridgeObjectRelease(v86);
        sub_1004B84A4(v166, type metadata accessor for CRLBoardIdentifier);
        return v45;
      }
    }
  }
  v63 = sub_100581628(v60);
  __chkstk_darwin(v63);
  v139[-2] = v64;
  v65 = sub_1004B804C(&qword_1013E8898);
  OS_dispatch_queue.sync<A>(execute:)(sub_100633D70, &v139[-4], v65);
  if (v62)
  {
    swift_bridgeObjectRelease(v41);
    return v45;
  }
  v70 = v164;
  v71 = *(_QWORD *)(v164 + 16);
  if (!v71)
    goto LABEL_61;
  v139[0] = v45;
  swift_bridgeObjectRetain(v164);
  v166 = v72;
  v73 = (void **)(v72 + 40);
  v161 = 0;
  v74 = (uint64_t)v144;
  while (1)
  {
    v75 = (uint64_t)*(v73 - 1);
    v76 = (char *)*v73;
    v77 = *(_QWORD *)(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v78 = *(_QWORD *)(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
    if (v77)
      v79 = 0;
    else
      v79 = v78 == 0xE000000000000000;
    if (!v79 && (_stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, 0, 0xE000000000000000, 0) & 1) == 0)
      goto LABEL_17;
    v80 = v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v75 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v164, 0, 0);
    sub_1004B8460(v80, v74, type metadata accessor for CRLBoardCRDTData);
    v142 = v76;
    v81 = v76;
    swift_retain_n(v75, 2);
    swift_bridgeObjectRetain(v41);
    v82 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v82);
    v84 = v162;
    v83 = v163;
    sub_1004B84A4(v74, type metadata accessor for CRLBoardCRDTData);
    if (v139[0] == v84 && v41 == v83)
      break;
    v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v139[0], v41, v84, v83, 0);
    swift_bridgeObjectRelease(v83);
    swift_release(v75);
    swift_bridgeObjectRelease(v41);
    if ((v85 & 1) != 0)
      goto LABEL_56;

    swift_release(v75);
LABEL_17:
    v73 += 2;
    if (!--v71)
    {
      swift_bridgeObjectRelease_n(v166, 2);
      return v139[0];
    }
  }
  swift_release(v75);
  swift_bridgeObjectRelease_n(v41, 2);
LABEL_56:
  swift_bridgeObjectRelease_n(v166, 2);
  v133 = v151;
  v132 = v152;
  v45 = v139[0];
LABEL_59:
  v134 = v142;
  v135 = sub_100633B60();
  swift_allocError(&type metadata for CRLBoardTitleValidator.Error, v135, 0, 0);
  *(_QWORD *)v136 = v133;
  *(_QWORD *)(v136 + 8) = v132;
  *(_BYTE *)(v136 + 16) = 1;
  v137 = swift_bridgeObjectRetain(v132);
  swift_willThrow(v137);
  sub_100633BA4(v75, v134);
LABEL_60:
  v70 = v41;
LABEL_61:
  swift_bridgeObjectRelease(v70);
  return v45;
}

uint64_t sub_100633AA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_100633ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (sub_100622CA4(a1, a2, *(_QWORD *)(v2 + 16)) & 1) == 0;
}

uint64_t sub_100633AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100633AFC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_100633B04()
{
  unint64_t result;

  result = qword_101406530;
  if (!qword_101406530)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_101406530);
  }
  return result;
}

_QWORD *sub_100633B48@<X0>(_QWORD *a1@<X8>)
{
  return sub_100A9D284(a1);
}

unint64_t sub_100633B60()
{
  unint64_t result;

  result = qword_1013E88A0;
  if (!qword_1013E88A0)
  {
    result = swift_getWitnessTable(&unk_100EFF3B8, &type metadata for CRLBoardTitleValidator.Error);
    atomic_store(result, (unint64_t *)&qword_1013E88A0);
  }
  return result;
}

void sub_100633BA4(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release(a1);

  }
}

uint64_t assignWithCopy for CRLBoardTitleValidator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v7);
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardTitleValidator()
{
  return &type metadata for CRLBoardTitleValidator;
}

uint64_t destroy for CRLBoardTitleValidator.Error(uint64_t a1)
{
  return sub_1005E579C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8Freeform22CRLBoardTitleValidatorV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1005E5784(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLBoardTitleValidator.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1005E5784(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1005E579C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLBoardTitleValidator.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1005E579C(v4, v5, v6);
  return a1;
}

uint64_t sub_100633D2C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100633D44(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardTitleValidator.Error()
{
  return &type metadata for CRLBoardTitleValidator.Error;
}

_QWORD *sub_100633D70@<X0>(_QWORD *a1@<X8>)
{
  return sub_100633B48(a1);
}

id sub_100633D84()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = sub_100633DDC(v0);
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_100633DDC(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char **v12;
  id v13;

  v1 = *(void **)(a1 + 24);
  v2 = objc_msgSend(*(id *)(a1 + 16), "ownerName");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  if (v3)
    v6 = 0;
  else
    v6 = v5 == 0xE000000000000000;
  if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0, 0xE000000000000000, 0) & 1) != 0)
    goto LABEL_13;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v3 == v7 && v5 == v8)
  {
    swift_bridgeObjectRelease(v5);
    goto LABEL_13;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v8, 0);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
LABEL_13:
    v12 = &selRef_privateCloudDatabase;
    goto LABEL_14;
  }
  v12 = &selRef_sharedCloudDatabase;
LABEL_14:
  v13 = objc_msgSend(v1, *v12);
  swift_bridgeObjectRelease(v5);
  return v13;
}

uint64_t sub_100633EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch(sub_100633EF8, 0, 0);
}

uint64_t sub_100633EF8()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  Class isa;
  uint64_t v7;
  objc_class *v8;
  Swift::String v9;
  Class v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[5];

  v2 = v0[5];
  v1 = v0[6];
  v3 = v0[4];
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v4 = *(id *)(v1 + 16);
  v5._countAndFlagsBits = 0x5264616F6C796150;
  v5._object = (void *)0xED000064726F6365;
  isa = CKRecordID.init(recordName:zoneID:)(v5, (CKRecordZoneID)v4).super.isa;
  v0[7] = isa;
  v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  v8 = isa;
  v9._object = (void *)0x8000000100FBC1A0;
  v9._countAndFlagsBits = 0xD000000000000018;
  v10 = CKRecord.init(recordType:recordID:)(v9, (CKRecordID)v8).super.isa;
  v0[8] = v10;
  v20[3] = &type metadata for Data;
  v20[4] = &protocol witness table for Data;
  v20[0] = v3;
  v20[1] = v2;
  sub_1004BE310(v3, v2);
  CKRecordKeyValueSetting.subscript.setter(v20, 0x64616F6C796150, 0xE700000000000000, v7);
  sub_1004B8930(0, &qword_1013E89A8, CKSerializeRecordModificationsOperation_ptr);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v12 + 32) = v10;
  v20[0] = v12;
  specialized Array._endMutation()(v12);
  v13 = v20[0];
  v14 = v10;
  v15 = (void *)CKSerializeRecordModificationsOperation.init(recordsToSave:recordIDsToDelete:)(v13, _swiftEmptyArrayStorage);
  v0[9] = v15;
  objc_msgSend(v15, "setQualityOfService:", 25);
  objc_msgSend(v15, "setQueuePriority:", 8);
  v16 = sub_100633D84();
  v0[10] = v16;
  v17 = swift_task_alloc(32);
  v0[11] = v17;
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v16;
  v18 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[12] = v18;
  *v18 = v0;
  v18[1] = sub_100634150;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x4474707972636E65, 0xEF293A5F28617461, sub_100634A60, v17, &type metadata for Data);
}

uint64_t sub_100634150()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100634208;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 88);

    swift_task_dealloc(v5);
    v4 = sub_1006341C4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1006341C4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 64);
  v2 = *(void **)(v0 + 72);

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100634208()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(void **)(v0 + 64);
  v3 = *(void **)(v0 + 72);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100634260(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[2];

  if ((a3 & 1) != 0)
  {
    v6[0] = a1;
    swift_errorRetain(a1);
    v5 = sub_1004B804C((uint64_t *)&unk_1013EB690);
    return CheckedContinuation.resume(throwing:)(v6, v5);
  }
  else
  {
    v6[0] = a1;
    v6[1] = a2;
    sub_1004BE310(a1, a2);
    v3 = sub_1004B804C((uint64_t *)&unk_1013EB690);
    return CheckedContinuation.resume(returning:)(v6, v3);
  }
}

uint64_t sub_1006342CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch(sub_1006342E8, 0, 0);
}

uint64_t sub_1006342E8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  Class isa;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0[5];
  v2 = v0[4];
  v3 = objc_allocWithZone((Class)CKDeserializeRecordModificationsOperation);
  sub_1004BE310(v2, v1);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithSerializedModifications:", isa);
  v0[7] = v5;
  sub_1004BBBC8(v2, v1);

  objc_msgSend(v5, "setQualityOfService:", 25);
  objc_msgSend(v5, "setQueuePriority:", 8);
  v6 = sub_100633D84();
  v0[8] = v6;
  v7 = swift_task_alloc(32);
  v0[9] = v7;
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = v8;
  v9 = sub_1004B804C(&qword_1013E8990);
  *v8 = v0;
  v8[1] = sub_100634438;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x4474707972636564, 0xEF293A5F28617461, sub_1006349C4, v7, v9);
}

uint64_t sub_100634438()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1006347BC;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 72);

    swift_task_dealloc(v5);
    v4 = sub_1006344AC;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_1006344AC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  char *v19;
  __n128 v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE *v27;
  __n128 v28;
  __int128 v29;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_23:
    v17 = *(void **)(v0 + 56);
    swift_bridgeObjectRelease(v1);
    v26 = sub_1006349FC();
    swift_allocError(&type metadata for CRLRealTimeDataEncryptor.DecryptionError, v26, 0, 0);
    *v27 = 0;
    swift_willThrow(v28);
    goto LABEL_24;
  }
  if (v1 < 0)
    v24 = v1;
  else
    v24 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v1);
  if (!v25)
    goto LABEL_23;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v1 + 32);
LABEL_6:
    v3 = v2;
    v4 = swift_bridgeObjectRelease(v1);
    v5 = CKRecord.recordType.getter(v4);
    v7 = v6;
    if (v5 == 0xD000000000000018 && v6 == 0x8000000100FBC1A0)
    {
      v8 = swift_bridgeObjectRelease(0x8000000100FBC1A0).n128_u64[0];
    }
    else
    {
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, 0xD000000000000018, 0x8000000100FBC1A0, 0);
      v8 = swift_bridgeObjectRelease(v7).n128_u64[0];
      if ((v9 & 1) == 0)
        goto LABEL_16;
    }
    v10 = objc_msgSend(v3, "recordID", *(double *)&v8);
    v11 = objc_msgSend(v10, "recordName");

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    if (v12 == 0x5264616F6C796150 && v14 == 0xED000064726F6365)
    {
      swift_bridgeObjectRelease(0xED000064726F6365);
LABEL_14:
      sub_100B389CC(0x64616F6C796150, 0xE700000000000000, &v29);
      v16 = *((_QWORD *)&v29 + 1);
      v17 = *(void **)(v0 + 56);
      if (*((_QWORD *)&v29 + 1) >> 60 != 15)
      {
        v23 = v29;

        (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v23, v16);
        return;
      }
      v18 = sub_1006349FC();
      swift_allocError(&type metadata for CRLRealTimeDataEncryptor.DecryptionError, v18, 0, 0);
      v21 = 2;
      goto LABEL_17;
    }
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, 0x5264616F6C796150, 0xED000064726F6365, 0);
    swift_bridgeObjectRelease(v14);
    if ((v15 & 1) != 0)
      goto LABEL_14;
LABEL_16:
    v17 = *(void **)(v0 + 56);
    v22 = sub_1006349FC();
    swift_allocError(&type metadata for CRLRealTimeDataEncryptor.DecryptionError, v22, 0, 0);
    v21 = 1;
LABEL_17:
    *v19 = v21;
    swift_willThrow(v20);

LABEL_24:
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

uint64_t sub_1006347BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100634800(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v13 = sub_1004B804C(a4);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v16);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(a5, v18 + v15, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  a7(a6, v19);
  return objc_msgSend(a3, "addOperation:", a2);
}

uint64_t sub_1006348F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v7[2];

  if ((a3 & 1) != 0)
  {
    v7[0] = a1;
    swift_errorRetain(a1);
    v6 = sub_1004B804C(&qword_1013E89A0);
    return CheckedContinuation.resume(throwing:)(v7, v6);
  }
  else
  {
    v7[0] = a1;
    v7[1] = a2;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    v4 = sub_1004B804C(&qword_1013E89A0);
    return CheckedContinuation.resume(returning:)(v7, v4);
  }
}

uint64_t sub_100634970()
{
  id *v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLRealTimeDataEncryptor()
{
  return objc_opt_self(_TtC8Freeform24CRLRealTimeDataEncryptor);
}

id sub_1006349C4(uint64_t a1)
{
  uint64_t v1;

  return sub_100634800(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), &qword_1013E89A0, (uint64_t)&unk_101273200, (uint64_t)sub_100634A4C, (void (*)(uint64_t, uint64_t))&CKDeserializeRecordModificationsOperation.deserializeResultBlock.setter);
}

unint64_t sub_1006349FC()
{
  unint64_t result;

  result = qword_1013E8998;
  if (!qword_1013E8998)
  {
    result = swift_getWitnessTable(&unk_100EFF4F4, &type metadata for CRLRealTimeDataEncryptor.DecryptionError);
    atomic_store(result, (unint64_t *)&qword_1013E8998);
  }
  return result;
}

uint64_t sub_100634A40()
{
  return sub_100634AA4(&qword_1013E89A0);
}

uint64_t sub_100634A4C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100634B14(a1, a2, a3, &qword_1013E89A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1006348F8);
}

id sub_100634A60(uint64_t a1)
{
  uint64_t v1;

  return sub_100634800(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (uint64_t *)&unk_1013EB690, (uint64_t)&unk_101273228, (uint64_t)sub_100634B00, (void (*)(uint64_t, uint64_t))&CKSerializeRecordModificationsOperation.serializeResultBlock.setter);
}

uint64_t sub_100634A98()
{
  return sub_100634AA4((uint64_t *)&unk_1013EB690);
}

uint64_t sub_100634AA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1004B804C(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100634B00(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100634B14(a1, a2, a3, (uint64_t *)&unk_1013EB690, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100634260);
}

uint64_t sub_100634B14(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v8 = a3 & 1;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(a4) - 8) + 80);
  return a5(a1, a2, v8, v5 + ((v9 + 16) & ~v9));
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeDataEncryptor.DecryptionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100634BC4 + 4 * byte_100EFF405[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100634BF8 + 4 * byte_100EFF400[v4]))();
}

uint64_t sub_100634BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100634C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100634C08);
  return result;
}

uint64_t sub_100634C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100634C1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100634C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100634C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeDataEncryptor.DecryptionError()
{
  return &type metadata for CRLRealTimeDataEncryptor.DecryptionError;
}

unint64_t sub_100634C48()
{
  unint64_t result;

  result = qword_1013E89B0;
  if (!qword_1013E89B0)
  {
    result = swift_getWitnessTable(&unk_100EFF4CC, &type metadata for CRLRealTimeDataEncryptor.DecryptionError);
    atomic_store(result, (unint64_t *)&qword_1013E89B0);
  }
  return result;
}

_QWORD *sub_100634C90(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for CRLLayerAnimationCascade(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for CRLLayerAnimationCascade(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerAnimationCascade(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerAnimationCascade(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationCascade()
{
  return &type metadata for CRLLayerAnimationCascade;
}

double sub_100634DF4(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, double);
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v20;
  __int128 v21;
  _BYTE v22[72];
  _QWORD v23[3];
  __int128 v24;
  uint64_t v25;
  _QWORD v26[3];
  __int128 v27;
  uint64_t v28;

  swift_bridgeObjectRetain(a1);
  v7 = sub_100D0C584(v6);
  swift_bridgeObjectRelease(a1);
  v8 = v7[2];
  if (v8)
  {
    v9 = (uint64_t)(v7 + 4);
    swift_bridgeObjectRetain(v7);
    v10 = 0.0;
    do
    {
      sub_100635264(v9, (uint64_t)v26);
      v11 = v28;
      v20 = v27;
      v12 = v27;
      sub_1004BB5A4(v26, v27);
      v13 = *(void (**)(uint64_t, uint64_t, double))(v11 + 16);
      v24 = v20;
      v25 = v11;
      sub_10050D1B0(v23);
      v13(v12, v11, v10);
      v10 = v10 + a2;
      v14 = sub_1004B804C(&qword_1013E89B8);
      inited = swift_initStackObject(v14, v22);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v21 = v24;
      v16 = v24;
      v17 = sub_1004BB5A4(v23, v24);
      *(_OWORD *)(inited + 56) = v21;
      v18 = sub_10050D1B0((_QWORD *)(inited + 32));
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v18, v17, v16);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      sub_10061F9E0(inited);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v23);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v9 += 48;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
  }
  return a3;
}

double sub_100634FF4(uint64_t a1, double a2, double a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  double *v15;

  v15 = _swiftEmptyArrayStorage;
  sub_100634DF4(a1, a2, a3);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = v4 + 32;
    do
    {
      sub_1004E90B0(v7, (uint64_t)v12);
      v8 = v13;
      v9 = v14;
      sub_1004BB5A4(v12, v13);
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
      sub_10061FCD8(v10);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  return a3;
}

uint64_t sub_1006350C0(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  sub_100634DF4(a1, a2, a3);
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
  {
    v19 = 0u;
    v20 = 0u;
    v21 = 0;
    swift_bridgeObjectRelease(v3);
    return sub_10060CF30((uint64_t)&v19);
  }
  result = sub_1004E90B0(v3 + 32, (uint64_t)&v16);
  if (v5 == 1)
  {
LABEL_3:
    sub_1004DB728(&v16, (uint64_t)&v19);
    swift_bridgeObjectRelease(v4);
    v7 = *((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v8 = v21;
      sub_1004BB5A4(&v19, *((uint64_t *)&v20 + 1));
      (*(void (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 40))(v7);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v19);
    }
    return sub_10060CF30((uint64_t)&v19);
  }
  v9 = v4 + 72;
  v10 = 1;
  while (v10 < *(_QWORD *)(v4 + 16))
  {
    sub_1004E90B0(v9, (uint64_t)&v19);
    v12 = v17;
    v11 = v18;
    sub_1004BB5A4(&v16, v17);
    v13 = (*(double (**)(uint64_t))(*(_QWORD *)(v11 + 8) + 40))(v12);
    v15 = *((_QWORD *)&v20 + 1);
    v14 = v21;
    sub_1004BB5A4(&v19, *((uint64_t *)&v20 + 1));
    if (v13 >= (*(double (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 40))(v15))
    {
      result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v19);
    }
    else
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v16);
      result = sub_1004DB728(&v19, (uint64_t)&v16);
    }
    ++v10;
    v9 += 40;
    if (v5 == v10)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

double sub_10063523C()
{
  uint64_t v0;

  return sub_100634FF4(*(_QWORD *)(v0 + 8), *(double *)v0, *(double *)(v0 + 16));
}

void sub_10063524C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t sub_100635254()
{
  uint64_t v0;

  return sub_1006350C0(*(_QWORD *)(v0 + 8), *(double *)v0, *(double *)(v0 + 16));
}

uint64_t sub_100635264(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_1006352A8(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_snappedShapeType] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_100635538(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemSnappedShapeType.swift", 125, 2, 28, "Unable to retrieve freehand drawing shape item.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve freehand drawing shape item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemSnappedShapeType.swift", 125, 2u, 28, (uint64_t)"Unable to retrieve freehand drawing shape item.", 47, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    sub_100B0B104(*(_QWORD *)(v5
                            + OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_snappedShapeType));
    v14 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_10063575C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_id;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_100635798()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100635808()
{
  return type metadata accessor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType(0);
}

uint64_t type metadata accessor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E89F8;
  if (!qword_1013E89F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType);
  return result;
}

uint64_t sub_10063584C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1006358C4()
{
  unsigned __int8 v0;

  sub_1008A51D4();
  return sub_1008A4EC8(v0);
}

void sub_1006358E4()
{
  sub_1008A51D4();
}

BOOL sub_100635904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  _QWORD *v20;
  _QWORD v21[41];
  _BYTE v22[40];
  _QWORD v23[40];
  _BYTE v24[320];

  v3 = v2;
  __chkstk_darwin(a1);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v21 - v10;
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v13((char *)v21 - v10, v3, a2, v9);
  if ((swift_dynamicCast(v23, v11, a2, &type metadata for CRLSpringLayerAnimation.Def, 6) & 1) == 0)
  {
    memset(v23, 0, 304);
    v23[38] = 1;
    LODWORD(v23[39]) = 0;
    v16 = v23;
LABEL_7:
    sub_1004CB800((uint64_t)v16, &qword_1013E1FD0);
    goto LABEL_8;
  }
  memcpy(v24, v23, 0x13CuLL);
  sub_1004E90B0(a1, (uint64_t)v22);
  v14 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if ((swift_dynamicCast(v21, v22, v14, &type metadata for CRLSpringLayerAnimation.Def, 6) & 1) == 0)
  {
    memset(v21, 0, 304);
    v21[38] = 1;
    LODWORD(v21[39]) = 0;
    sub_100635C68((uint64_t)v24);
    v16 = v21;
    goto LABEL_7;
  }
  memcpy(v23, v21, 0x13CuLL);
  v15 = sub_100D283C8((uint64_t)v24, (uint64_t)v23);
  sub_100635C68((uint64_t)v23);
  sub_100635C68((uint64_t)v24);
  if ((v15 & 1) != 0)
    return 1;
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t))v13)(v7, v3, a2);
  if ((swift_dynamicCast(v23, v7, a2, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
  {
    memset(v23, 0, 300);
    v20 = v23;
LABEL_14:
    sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_101406CB0);
    return 0;
  }
  memcpy(v24, v23, 0x12CuLL);
  sub_1004E90B0(a1, (uint64_t)v22);
  v17 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if ((swift_dynamicCast(v21, v22, v17, &type metadata for CRLBasicLayerAnimation.Def, 6) & 1) == 0)
  {
    memset(v21, 0, 300);
    sub_1004E9210((uint64_t)v24);
    v20 = v21;
    goto LABEL_14;
  }
  memcpy(v23, v21, 0x12CuLL);
  v18 = sub_10057DED0((uint64_t)v24, (uint64_t)v23);
  sub_1004E9210((uint64_t)v23);
  sub_1004E9210((uint64_t)v24);
  return (v18 & 1) != 0;
}

uint64_t sub_100635C28()
{
  unsigned __int8 v0;

  sub_1008A51D4();
  return sub_1008A4EC8(v0);
}

void sub_100635C48()
{
  sub_1008A51D4();
}

uint64_t sub_100635C68(uint64_t a1)
{
  destroy for CRLSpringLayerAnimation.Def(a1);
  return a1;
}

uint64_t sub_100635C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[30] = a3;
  v4[31] = v3;
  v4[28] = a1;
  v4[29] = a2;
  return swift_task_switch(sub_100635CB8, 0, 0);
}

uint64_t sub_100635CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v8;
  _QWORD *v9;
  __n128 v10;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 16);
  *(_QWORD *)(v0 + 256) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 232);
    sub_1004BB5A4(*(_QWORD **)(v0 + 240), *(_QWORD *)(*(_QWORD *)(v0 + 240) + 24));
    v3 = *(int *)(type metadata accessor for CRLBoardEntity(0) + 40);
    *(_DWORD *)(v0 + 360) = v3;
    v4 = v2 + v3;
    v5 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 264) = v5;
    *(_QWORD *)(v0 + 272) = static MainActor.shared.getter(v5);
    v6 = (_QWORD *)swift_task_alloc(dword_10140E224);
    *(_QWORD *)(v0 + 280) = v6;
    *v6 = v0;
    v6[1] = sub_100635DA0;
    return sub_100CA2984(v4);
  }
  else
  {
    v8 = sub_1005CB368();
    swift_allocError(&type metadata for CRLAppIntentsBoardItemsImporterError, v8, 0, 0);
    *v9 = 0;
    swift_willThrow(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100635DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 280);
  *(_QWORD *)(*v2 + 288) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 264);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_100635FC8;
  }
  else
  {
    *(_QWORD *)(v4 + 296) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_100635E44;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_100635E44()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[37];
  swift_release(v0[34]);
  v0[19] = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v0[20] = &off_10129B470;
  v0[16] = v1;
  return swift_task_switch(sub_100635E9C, 0, 0);
}

uint64_t sub_100635E9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0[28];
  if (v0[32] >= 0xAuLL)
    v2 = 10;
  else
    v2 = v0[32];
  v3 = type metadata accessor for __ContiguousArrayStorageBase(0);
  swift_bridgeObjectRetain(v1);
  v5 = swift_unknownObjectRetain_n(v4, 2);
  v6 = (_QWORD *)swift_dynamicCastClass(v5, v3);
  if (!v6)
  {
    swift_bridgeObjectRelease(v1);
    v6 = _swiftEmptyArrayStorage;
  }
  v7 = v6[2];
  swift_release(v6);
  v8 = v0[28];
  if (v7 == v2)
  {
    v9 = (_QWORD *)swift_dynamicCastClass(v0[28], v3);
    if (!v9)
    {
      swift_bridgeObjectRelease(v8);
      v9 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v0[28]);
    v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IntentFile(0) - 8) + 80);
    v9 = sub_1005FF428(v8, v8 + ((v12 + 32) & ~v12), 0, (2 * v2) | 1);
  }
  v0[38] = v9;
  swift_bridgeObjectRelease(v0[28]);
  v10 = (_QWORD *)swift_task_alloc(dword_1013E8A14);
  v0[39] = v10;
  *v10 = v0;
  v10[1] = sub_100636230;
  return sub_1006368D0((uint64_t)v9, (uint64_t)(v0 + 16));
}

uint64_t sub_100635FC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 272));
  return swift_task_switch(sub_100636004, 0, 0);
}

uint64_t sub_100636004()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = *(_QWORD *)(v0 + 288);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = *(_QWORD *)(v0 + 232) + *(int *)(v0 + 360);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 168, 0, 0);
  v2 = (void *)static OS_os_log.appIntents;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  v24 = v6;
  v25 = v7;
  swift_bridgeObjectRetain(v7);
  v9._countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v11 = *v10;
  v12 = (void *)v10[1];
  swift_bridgeObjectRetain(v25);
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(inited + 40) = v25;
  swift_getErrorValue(v23, v0 + 216, v0 + 192);
  v15 = Error.publicDescription.getter(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v16;
  v17 = static os_log_type_t.error.getter(v15);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v17, "Error inserting files to board: %@ - %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v18);

  v19 = type metadata accessor for _PrebuiltAppIntentError(0);
  v20 = sub_1006371C0();
  swift_allocError(v19, v20, 0, 0);
  v21.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v21);
  swift_errorRelease(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100636230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100636690;
  }
  else
  {
    swift_release(v3[38]);
    v5 = sub_1006362A4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006362A4()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1004BB5A4(v0 + 16, v0[19]);
  v1 = (_QWORD *)swift_task_alloc(dword_101409BB4);
  v0[42] = v1;
  *v1 = v0;
  v1[1] = sub_100636300;
  return sub_100C00668(v0[40]);
}

uint64_t sub_100636300()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 336));
  return swift_task_switch(sub_100636354, 0, 0);
}

uint64_t sub_100636354()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *sub_1004BB5A4(*(_QWORD **)(v0 + 240), *(_QWORD *)(*(_QWORD *)(v0 + 240) + 24));
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD0C);
  *(_QWORD *)(v0 + 344) = v2;
  *v2 = v0;
  v2[1] = sub_1006363B4;
  return sub_100C151E4(v0 + 128, v1);
}

uint64_t sub_1006363B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 344);
  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100636450;
  else
    v3 = sub_100636418;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100636418()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 320));
}

uint64_t sub_100636450()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 320));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
  v23 = *(_QWORD *)(v0 + 352);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = *(_QWORD *)(v0 + 232) + *(int *)(v0 + 360);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 168, 0, 0);
  v2 = (void *)static OS_os_log.appIntents;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  v24 = v6;
  v25 = v7;
  swift_bridgeObjectRetain(v7);
  v9._countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v11 = *v10;
  v12 = (void *)v10[1];
  swift_bridgeObjectRetain(v25);
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(inited + 40) = v25;
  swift_getErrorValue(v23, v0 + 216, v0 + 192);
  v15 = Error.publicDescription.getter(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v16;
  v17 = static os_log_type_t.error.getter(v15);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v17, "Error inserting files to board: %@ - %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v18);

  v19 = type metadata accessor for _PrebuiltAppIntentError(0);
  v20 = sub_1006371C0();
  swift_allocError(v19, v20, 0, 0);
  v21.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v21);
  swift_errorRelease(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100636690()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_release(*(_QWORD *)(v0 + 304));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
  v23 = *(_QWORD *)(v0 + 328);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = *(_QWORD *)(v0 + 232) + *(int *)(v0 + 360);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 168, 0, 0);
  v2 = (void *)static OS_os_log.appIntents;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  v24 = v6;
  v25 = v7;
  swift_bridgeObjectRetain(v7);
  v9._countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v11 = *v10;
  v12 = (void *)v10[1];
  swift_bridgeObjectRetain(v25);
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(inited + 40) = v25;
  swift_getErrorValue(v23, v0 + 216, v0 + 192);
  v15 = Error.publicDescription.getter(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v16;
  v17 = static os_log_type_t.error.getter(v15);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v17, "Error inserting files to board: %@ - %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v18);

  v19 = type metadata accessor for _PrebuiltAppIntentError(0);
  v20 = sub_1006371C0();
  swift_allocError(v19, v20, 0, 0);
  v21.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v21);
  swift_errorRelease(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006368D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[16] = a1;
  v2[17] = a2;
  v3 = sub_1004B804C(&qword_1013E04D0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[20] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v6);
  v2[22] = swift_task_alloc(v6);
  v2[23] = swift_task_alloc(v6);
  v7 = type metadata accessor for IntentFile(0);
  v2[24] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[25] = v8;
  v2[26] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E8A18);
  v2[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006369BC, 0, 0);
}

uint64_t sub_1006369BC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t, uint64_t, uint64_t);
  Swift::Bool v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t);
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  NSURL *v38;
  void *v39;
  void *v40;
  id v41;
  void (*v42)(uint64_t, uint64_t);
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  id v51;
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t);

  v1 = v0[16];
  v2 = *(void **)(*(_QWORD *)(*sub_1004BB5A4((_QWORD *)v0[17], *(_QWORD *)(v0[17] + 24))
                            + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[15] = _swiftEmptyArrayStorage;
  v0[28] = v2;
  v0[14] = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = v0[25];
  if (v3)
  {
    v5 = v0[20];
    v6 = v0[16];
    v7 = v6 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v8 = *(_QWORD *)(v4 + 72);
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v56 = v2;
    swift_bridgeObjectRetain(v6);
    v61 = v5;
    v58 = v4;
    v57 = v8;
    while (1)
    {
      v20 = v0[27];
      v21 = v0[24];
      v60(v20, v7, v21);
      v59 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
      v59(v20, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v20, 1, v21) == 1)
        break;
      v23 = v0[18];
      v22 = v0[19];
      v24 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v4 + 32))(v0[26], v0[27], v0[24]);
      IntentFile.fileURL.getter(v24);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v23, 1, v22) == 1)
      {
        sub_1005534BC(v0[18]);
        if (qword_1013DD838 != -1)
          swift_once(&qword_1013DD838, sub_100A04F30);
        swift_beginAccess(&static OS_os_log.appIntents, v0 + 11, 0, 0);
        v9 = (void *)static OS_os_log.appIntents;
        v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v10, v0 + 2);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v12 = v9;
        v13 = IntentFile.filename.getter();
        v15 = v14;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v16 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v16;
        *(_QWORD *)(inited + 32) = v13;
        *(_QWORD *)(inited + 40) = v15;
        v17 = static os_log_type_t.error.getter(v16);
        sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v17, "Trying to import file url: %@", 29, 2, inited);
        swift_setDeallocating(inited);
        v18 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v18);

      }
      else
      {
        v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
        v25(v0[23], v0[18], v0[19]);
        v26 = URL.startAccessingSecurityScopedResource()();
        v27 = v5;
        v28 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16);
        if (v26)
        {
          v28(v0[22], v0[23], v0[19]);
          v29 = v0[14];
          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
            v29 = sub_100D0FAC8(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
          v31 = *(_QWORD *)(v29 + 16);
          v30 = *(_QWORD *)(v29 + 24);
          if (v31 >= v30 >> 1)
            v29 = sub_100D0FAC8(v30 > 1, v31 + 1, 1, v29);
          v32 = v0[22];
          v33 = v0[19];
          *(_QWORD *)(v29 + 16) = v31 + 1;
          v27 = v61;
          v25(v29+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v31, v32, v33);
          v0[14] = v29;
        }
        v34 = v0[21];
        v35 = v0[19];
        v28(v34, v0[23], v35);
        v36 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
        v37 = v56;
        URL._bridgeToObjectiveC()(v38);
        v40 = v39;
        v41 = objc_msgSend(v36, "initWithUrl:filename:owner:", v39, 0, v37);

        v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42(v34, v35);
        v43 = v41;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
        v45 = *(_QWORD *)((v0[15] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v44 = *(_QWORD *)((v0[15] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v45 >= v44 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
        v46 = v0[23];
        v47 = v0[19];
        v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
        specialized Array._endMutation()(v48);

        v42(v46, v47);
        v4 = v58;
        v8 = v57;
      }
      (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v0[26], v0[24]);
      v7 += v8;
      --v3;
      v5 = v61;
      if (!v3)
      {
        ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v59)(v0[27], 1, 1, v0[24], v19);
        break;
      }
    }
  }
  else
  {
    v49 = v0[16];
    v50 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v4 + 56);
    v51 = v2;
    v52 = swift_bridgeObjectRetain(v49);
    v50(v0[27], 1, 1, v0[24], v52);
  }
  swift_bridgeObjectRelease(v0[16]);
  v53 = v0[15];
  v0[29] = v53;
  v62 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1013F2F40 + dword_1013F2F40);
  v54 = (_QWORD *)swift_task_alloc(unk_1013F2F44);
  v0[30] = v54;
  *v54 = v0;
  v54[1] = sub_100636E80;
  return v62(v53, v0[17]);
}

uint64_t sub_100636E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 240);
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100636F9C;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 232));
    *(_QWORD *)(v4 + 256) = a1;
    v6 = sub_100636EFC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100636EFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void **)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  sub_100637040((uint64_t *)(v0 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 256));
}

uint64_t sub_100636F9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
  sub_100637040((uint64_t *)(v0 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100637040(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t, __n128);
  double result;
  uint64_t v17;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = v9 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
    v14 = swift_bridgeObjectRetain(v9);
    while (1)
    {
      v13(v8, v11, v2, v14);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v15)(v8, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      URL.stopAccessingSecurityScopedResource()();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v11 += v12;
      if (!--v10)
        goto LABEL_7;
    }
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
    v14 = swift_bridgeObjectRetain(v9);
LABEL_7:
    v15(v8, 1, 1, v2, v14);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

unint64_t sub_1006371C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E53A0;
  if (!qword_1013E53A0)
  {
    v1 = type metadata accessor for _PrebuiltAppIntentError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for _PrebuiltAppIntentError, v1);
    atomic_store(result, (unint64_t *)&qword_1013E53A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLInsertFilesToBoardIntentPerformer()
{
  return &type metadata for CRLInsertFilesToBoardIntentPerformer;
}

id sub_100637218()
{
  id result;

  result = sub_100637234();
  qword_10147ECC0 = (uint64_t)result;
  return result;
}

id sub_100637234()
{
  id v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  uint64_t v17;
  _BYTE v18[24];

  v0 = objc_msgSend(objc_allocWithZone((Class)CKContainerOptions), "init");
  objc_msgSend(v0, "setUseZoneWidePCS:", 1);
  objc_msgSend(v0, "setMaintainRecordUploadOrder:", 1);
  objc_msgSend(v0, "setFetchChangesForMergeableValues:", 1);
  if (qword_1013DCB68 != -1)
    swift_once(&qword_1013DCB68, sub_10063747C);
  v1 = qword_10147ECC8;
  if (qword_1013DD780 != -1)
    swift_once(&qword_1013DD780, sub_100A02D58);
  swift_beginAccess(&static OS_os_log.crlCloudKitEnvironment, v18, 0, 0);
  v2 = (void *)static OS_os_log.crlCloudKitEnvironment;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, &v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v2;
  v6 = (id)CKContainerEnvironmentString(v1);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v10 = static os_log_type_t.default.getter();
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v10, "Using %{public}@ CKContainerEnvironment", 39, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  v12 = objc_allocWithZone((Class)CKContainerID);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithContainerIdentifier:environment:", v13, v1);

  v15 = objc_msgSend(objc_allocWithZone((Class)CKContainer), "initWithContainerID:options:", v14, v0);
  return v15;
}

uint64_t sub_10063747C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1013DCB70 != -1)
    result = swift_once(&qword_1013DCB70, sub_1006374D0);
  v0 = 1;
  if (byte_10147ECD0)
    v0 = 2;
  qword_10147ECC8 = v0;
  return result;
}

uint64_t sub_1006374D0()
{
  char v0;
  uint64_t result;
  _QWORD v2[5];

  v2[3] = &type metadata for CRLFeatureFlags;
  v2[4] = sub_1004DB6DC();
  LOBYTE(v2[0]) = 24;
  v0 = isFeatureEnabled(_:)(v2);
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2);
  byte_10147ECD0 = v0 & 1;
  return result;
}

id sub_1006376D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  NSString v46;
  id v47;
  NSString v48;
  NSString v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSString v55;
  void *v56;
  id v57;
  char v60[72];
  _QWORD aBlock[5];
  uint64_t v62;
  char v63[72];
  char v64[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = &v60[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems];
  if (v10)
  {
    if (*(_QWORD *)(v10 + 16))
    {
      sub_1004CB6E8(v10 + 32, (uint64_t)aBlock);
      v11 = swift_dynamicCast(v4, aBlock, (char *)&type metadata for Any + 8, v5, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v11 ^ 1u, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
        if (qword_1013DD778 != -1)
          swift_once(&qword_1013DD778, sub_100A02BF8);
        swift_beginAccess(&static OS_os_log.crlSendACopy, aBlock, 0, 0);
        v12 = (void *)static OS_os_log.crlSendACopy;
        v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v13, v60);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v15 = v12;
        v16 = UUID.uuidString.getter(v15);
        v18 = v17;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v16;
        *(_QWORD *)(inited + 40) = v18;
        v20 = static os_log_type_t.info.getter(v19);
        sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v20, "CRLSendCopyActivity copied a Send A Copy url for board (UUID: %{public}@) to the clipboard", 90, 2, inited);
        swift_setDeallocating(inited);
        v21 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v21);

        v22 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
        URL._bridgeToObjectiveC()(v23);
        v25 = v24;
        objc_msgSend(v22, "setURL:", v24);

        objc_msgSend(v1, "activityDidFinish:", 1);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v4, 1, 1, v5, v7);
    }
    sub_1005534BC((uint64_t)v4);
  }
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  swift_beginAccess(&static OS_os_log.crlSendACopy, v64, 0, 0);
  v27 = (void *)static OS_os_log.crlSendACopy;
  v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v29 = swift_initStackObject(v28, v63);
  *(_OWORD *)(v29 + 16) = xmmword_100EF5E40;
  v30 = v27;
  v31 = UUID.uuidString.getter(v30);
  v33 = v32;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v34 = sub_1004CFC2C();
  *(_QWORD *)(v29 + 64) = v34;
  *(_QWORD *)(v29 + 32) = v31;
  *(_QWORD *)(v29 + 40) = v33;
  v35 = static os_log_type_t.error.getter(v34);
  sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v35, "CRLSendCopyActivity failed to create Send A Copy url for board (UUID: %{public}@)", 81, 2, v29);
  swift_setDeallocating(v29);
  v36 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v29 + 32, 1, v36);

  v37 = sub_10089F478(2u);
  v38 = objc_msgSend(v37, "localizedDescription");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v40 = v39;

  v41 = objc_msgSend(v37, "localizedRecoverySuggestion");
  if (v41)
  {
    v42 = v41;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

  }
  else
  {
    v44 = 0;
  }
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  if (v44)
  {
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v44);
  }
  else
  {
    v46 = 0;
  }
  v26 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v45, v46, 1);

  v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v48 = String._bridgeToObjectiveC()();
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, v49, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v52 = v51;

  v53 = swift_allocObject(&unk_101273550, 24, 7);
  *(_QWORD *)(v53 + 16) = v1;
  v54 = v1;
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  aBlock[4] = sub_100637F24;
  v62 = v53;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_101273568;
  v56 = _Block_copy(aBlock);
  swift_release(v62);
  v57 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v55, 0, v56);
  _Block_release(v56);

  objc_msgSend(v26, "addAction:", v57);
  sub_100CE39D8(v26);

  return v26;
}

id sub_100637D94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSendACopyActivity_i(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100637E10()
{
  return type metadata accessor for CRLSendACopyActivity_i(0);
}

uint64_t type metadata accessor for CRLSendACopyActivity_i(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E8AB8;
  if (!qword_1013E8AB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSendACopyActivity_i);
  return result;
}

uint64_t sub_100637E54(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

NSString sub_100637ECC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ECD8 = (uint64_t)result;
  return result;
}

uint64_t sub_100637F00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100637F24()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "activityDidFinish:", 0);
}

uint64_t sub_100637F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100637F48(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100637F50()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void sub_10063801C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t KeyPath;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD);
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  _QWORD v32[5];
  uint64_t v33;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for CRLCollaborationParticipant(0);
    v5 = sub_1004B7878((unint64_t *)&unk_1013E8E30, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v32, v3, v4, v5);
    v1 = v32[0];
    v30 = v32[1];
    v7 = v32[2];
    v8 = v32[3];
    v9 = v32[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v29 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_37;
    v18 = v17;
    v33 = v17;
    v19 = type metadata accessor for CRLCollaborationParticipant(0);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(v31, &v33, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = (char *)v31[0];
    swift_unknownObjectRelease(v18);
    v16 = v8;
    v14 = v9;
    if (!v20)
      goto LABEL_37;
LABEL_35:
    v24 = *(void **)&v20[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing];
    *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = 0;
    if (v24)
    {
      KeyPath = swift_getKeyPath(&unk_100EFF958);
      v26 = swift_getKeyPath(&unk_100EFF980);
      v27 = (void (*)(_QWORD *, _QWORD))static Published.subscript.modify(v31, v24, KeyPath, v26);
      v28 = sub_100B2748C(v20);
      v27(v31, 0);

      swift_release(KeyPath);
      swift_release(v26);
      v20 = (char *)v28;
    }

    v8 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_34:
    v20 = (char *)*(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_37;
    goto LABEL_35;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 >= v29)
      goto LABEL_37;
    v22 = *(_QWORD *)(v30 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v29)
        goto LABEL_37;
      v22 = *(_QWORD *)(v30 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v29)
          goto LABEL_37;
        v22 = *(_QWORD *)(v30 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v29)
            goto LABEL_37;
          v22 = *(_QWORD *)(v30 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v29)
              goto LABEL_37;
            v22 = *(_QWORD *)(v30 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v29 != v23)
              {
                v22 = *(_QWORD *)(v30 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_33;
                }
              }
LABEL_37:
              sub_1004D284C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

void sub_10063835C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id *v20;
  id *v21;
  char v23;
  uint64_t KeyPath;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id *v33;
  char *v35;
  uint64_t i;
  unint64_t v37;
  uint64_t v38;

  v5 = a2;
  if (a2 >> 62)
    goto LABEL_36;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (i = v7; i; i = _CocoaArrayWrapper.endIndex.getter(v30))
  {
    v32 = a4;
    v37 = v5 & 0xC000000000000001;
    v33 = (id *)a3;
    v35 = (char *)(a3 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime);
    v8 = 4;
    a4 = i;
    while (1)
    {
      v10 = v37
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v5)
          : (char *)*(id *)(v5 + 8 * v8);
      v11 = v10;
      if (__OFADD__(v8 - 4, 1))
        break;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
      a3 = (uint64_t)v13;
      v14 = v11;
      v15 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
      v16 = objc_msgSend(v15, "userRecordID");

      if (v16)
      {
        v17 = v5;
        v18 = objc_msgSend(v16, "recordName");

        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v21 = v20;

        if (v12 == v19 && a3 == (_QWORD)v21)
        {

          swift_bridgeObjectRelease_n(a3, 2);
          v5 = v17;
          a4 = i;
LABEL_5:
          v9 = v8 - 3;
          goto LABEL_6;
        }
        v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, a3, v19, v21, 0);
        swift_bridgeObjectRelease(a3);
        swift_bridgeObjectRelease(v21);
        v5 = v17;
        a4 = i;
        if ((v23 & 1) != 0)
        {

          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRelease(a3);
      }
      KeyPath = swift_getKeyPath(&unk_100EFF910);
      v25 = swift_getKeyPath(&unk_100EFF938);
      static Published.subscript.getter(&v38, v14, KeyPath, v25);
      swift_release(KeyPath);
      swift_release(v25);
      a3 = v38;
      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v28 = v38;
        else
          v28 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v38);
        v29 = _CocoaArrayWrapper.endIndex.getter(v28);
        swift_bridgeObjectRelease(a3);
        if (!v29)
        {
LABEL_31:

          swift_bridgeObjectRelease(a3);
          goto LABEL_5;
        }
      }
      else if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_31;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        v26 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
      }
      else
      {
        if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_35;
        v26 = (char *)*(id *)(a3 + 32);
      }
      v27 = v26;
      v9 = v8 - 3;
      swift_bridgeObjectRelease(a3);
      if ((static Date.< infix(_:_:)(&v27[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime], v35) & 1) != 0)
        IndexSet.insert(_:)(*(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);

LABEL_6:
      ++v8;
      if (v9 == a4)
      {
        swift_bridgeObjectRelease(v5);
        a3 = (uint64_t)v33;
        a4 = v32;
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (v5 < 0)
      v30 = v5;
    else
      v30 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
  }
  swift_bridgeObjectRelease(v5);
LABEL_41:
  v31 = type metadata accessor for IndexSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a4, a1, v31);

}

NSString sub_1006386D8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ECE8 = (uint64_t)result;
  return result;
}

NSString sub_10063870C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ECF0 = (uint64_t)result;
  return result;
}

NSString sub_100638740()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ECF8 = (uint64_t)result;
  return result;
}

NSString sub_100638774()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ED00 = (uint64_t)result;
  return result;
}

void sub_100638874(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  char *v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  void *v13;
  id v14;
  id v15;
  id v16;
  _BYTE v17[32];

  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = a1;
  v4 = a1;
  if (a1)
  {
    v14 = v4;
    KeyPath = swift_getKeyPath(&unk_100EFF958);
    v6 = swift_getKeyPath(&unk_100EFF980);
    v7 = v14;
    v8 = v1;
    v9 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v17, v7, KeyPath, v6);
    sub_100AD883C((Swift::Int *)&v16, v8);

    v9(v17, 0);
    swift_release(KeyPath);
    swift_release(v6);
  }
  else if (v3)
  {
    v15 = v4;
    v10 = swift_getKeyPath(&unk_100EFF958);
    v11 = swift_getKeyPath(&unk_100EFF980);
    v12 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v17, v3, v10, v11);
    v13 = (void *)sub_100B2748C(v1);
    v12(v17, 0);

    swift_release(v10);
    swift_release(v11);

  }
  else
  {

  }
}

uint64_t sub_100638AB0()
{
  return sub_10063D0E4((uint64_t)&unk_100EFF958, (uint64_t)&unk_100EFF980);
}

void sub_100638B6C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100EFF958, (uint64_t)&unk_100EFF980, a2);
}

uint64_t sub_100638B80(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EFF958);
  v5 = swift_getKeyPath(&unk_100EFF980);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100638C08()
{
  return sub_100638F84((uint64_t)&unk_100EFF9A0, (uint64_t)&unk_100EFF9C8);
}

void sub_100638C30(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100EFF9A0, (uint64_t)&unk_100EFF9C8, a2);
}

uint64_t sub_100638C44(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100EFF9A0, (uint64_t)&unk_100EFF9C8);
}

uint64_t sub_100638D20()
{
  return sub_10063D0E4((uint64_t)&unk_100EFF910, (uint64_t)&unk_100EFF938);
}

double sub_100638DC8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v2 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v10, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v9 = v10;
    else
      v9 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (!v4)
  {
    sub_100638874(0);
    v6 = swift_getKeyPath(&unk_100EFF958);
    v7 = swift_getKeyPath(&unk_100EFF980);
    static Published.subscript.getter(&v10, v0, v6, v7);
    swift_release(v6);
    swift_release(v7);
    v8 = v10;
    sub_10063801C(v10);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_100638EF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  uint64_t v10;

  KeyPath = swift_getKeyPath(a3);
  v7 = swift_getKeyPath(a4);
  v8 = a1;
  static Published.subscript.getter(&v10, v8, KeyPath, v7);

  swift_release(KeyPath);
  swift_release(v7);
  return v10;
}

uint64_t sub_100638F70()
{
  return sub_100638F84((uint64_t)&unk_100EFF8C8, (uint64_t)&unk_100EFF8F0);
}

uint64_t sub_100638F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_100639000(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t KeyPath;
  uint64_t v9;
  char v11;

  KeyPath = swift_getKeyPath(a4);
  v9 = swift_getKeyPath(a5);
  v11 = a3;
  return static Published.subscript.setter(&v11, a1, KeyPath, v9);
}

void sub_100639068(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100EFF8C8, (uint64_t)&unk_100EFF8F0, a2);
}

void sub_10063907C(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  *a4 = v9;
}

uint64_t sub_1006390F4(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100EFF8C8, (uint64_t)&unk_100EFF8F0);
}

uint64_t sub_100639108(char *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

BOOL sub_1006391D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  char *v4;
  id v5;
  id v6;
  BOOL v7;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;

  ObjectType = swift_getObjectType(v1);
  sub_1004CB7BC(a1, (uint64_t)v10, &qword_1013E0230);
  if (!v11)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013E0230);
    return 0;
  }
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) == 0)
    return 0;
  v4 = v9;
  v5 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
  v6 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
  v7 = sub_1006392C0((_BOOL8)v6);

  return v7;
}

BOOL sub_1006392C0(_BOOL8 result)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  char v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  if (result)
  {
    v2 = (void *)result;
    sub_1004B8930(0, (unint64_t *)&unk_1013E8E70, CKUserIdentity_ptr);
    v3 = v1;
    v4 = v2;
    v5 = static NSObject.== infix(_:_:)(v3, v4);

    if ((v5 & 1) != 0)
      return 1;
    v6 = v4;
    v7 = objc_msgSend(v3, "lookupInfo");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v6, "lookupInfo");
      if (v9)
      {
        v10 = v9;
        sub_1004B8930(0, &qword_1013E1548, CKUserIdentityLookupInfo_ptr);
        v11 = v8;
        v12 = static NSObject.== infix(_:_:)(v11, v10);

        if ((v12 & 1) != 0)
        {

          return 1;
        }
      }
      else
      {

      }
      v13 = objc_msgSend(v8, "emailAddress");
      if (v13)
      {
        v15 = v13;
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v18 = v17;

        v19 = objc_msgSend(v6, "lookupInfo");
        if (v19
          && (v20 = v19,
              v21 = objc_msgSend(v19, "emailAddress"),
              v20,
              v21))
        {
          v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
          v24 = v23;

          if (v16 == v22 && v18 == v24)
          {

            swift_bridgeObjectRelease_n(v18, 2);
            return 1;
          }
          v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v22, v24, 0);
          swift_bridgeObjectRelease(v18);
          v14 = swift_bridgeObjectRelease(v24).n128_u64[0];
          if ((v36 & 1) != 0)
            goto LABEL_28;
        }
        else
        {
          v14 = swift_bridgeObjectRelease(v18).n128_u64[0];
        }
      }
      v25 = objc_msgSend(v8, "phoneNumber", *(double *)&v14);
      if (v25)
      {
        v26 = v25;
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v29 = v28;

        v30 = objc_msgSend(v6, "lookupInfo");
        if (v30)
        {
          v31 = v30;
          v32 = objc_msgSend(v30, "phoneNumber");

          if (v32)
          {
            v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
            v35 = v34;

            if (v27 == v33 && v29 == v35)
            {
              swift_bridgeObjectRelease_n(v29, 2);
LABEL_28:

              return 1;
            }
            v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v33, v35, 0);
            swift_bridgeObjectRelease(v29);
            swift_bridgeObjectRelease(v35);

            return (v37 & 1) != 0;
          }
        }
        swift_bridgeObjectRelease(v29);
      }

    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t sub_100639654()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  Swift::String v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  unint64_t v23;
  Swift::String v24;
  uint64_t v26;
  unint64_t v27;

  v1 = v0;
  v2 = sub_10063A9F4();
  v3 = 1718379891;
  if ((v2 & 1) != 0)
  {
    v4 = (void *)0xE400000000000000;
  }
  else
  {
    v3 = 0x726568746FLL;
    v4 = (void *)0xE500000000000000;
  }
  v26 = v3;
  v27 = (unint64_t)v4;
  swift_bridgeObjectRetain(v4);
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity", swift_bridgeObjectRelease(v4).n128_f64[0]);
  v7 = objc_msgSend(v6, "lookupInfo");

  if (v7 && (v8 = objc_msgSend(v7, "emailAddress"), v7, v8))
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain(v4);
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v4);
  v13._countAndFlagsBits = v26;
  v26 = 123;
  v27 = 0xE100000000000000;
  v13._object = v4;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(0xE100000000000000);
  v14._countAndFlagsBits = 58;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(0xE100000000000000);
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v16 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v26, v1, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = v26;
  type metadata accessor for CRLCollaboratorPresence(0);
  v19 = Array.description.getter(v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  v26 = 123;
  v27 = 0xE100000000000000;
  swift_bridgeObjectRetain(0xE100000000000000);
  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(0xE100000000000000);
  swift_bridgeObjectRelease(v21);
  v23 = v27;
  swift_bridgeObjectRetain(v27);
  v24._countAndFlagsBits = 125;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v23);
  return v26;
}

void sub_1006398AC(uint64_t a1, uint64_t a2, int a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  int v53;
  _BYTE v54[16];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v3;
  v53 = a3;
  v51 = a2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v15 = swift_getKeyPath(&unk_100EFF938);
  v52 = v4;
  static Published.subscript.getter(&v57, v4, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = v57;
  v55 = a1;
  v17 = sub_100C9D0C0((uint64_t (*)(id *))sub_100645664, (uint64_t)v54, v57);
  v18 = swift_bridgeObjectRelease(v16);
  if (!v17)
  {
    v50 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, v10, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v51, v6);
    v19 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorPresence(0));
    v20 = v52;
    v21 = sub_10057F7D8((uint64_t)v20, (uint64_t)v13, (uint64_t)v9, v53 & 1);

    v22 = swift_getKeyPath(&unk_100EFF910);
    v23 = swift_getKeyPath(&unk_100EFF938);
    static Published.subscript.getter(&v57, v20, v22, v23);
    swift_release(v22);
    swift_release(v23);
    v24 = v57;
    if ((unint64_t)v57 >> 62)
    {
      if (v57 < 0)
        v47 = v57;
      else
        v47 = v57 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v57);
      v25 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      v25 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v24);
    if (!v25)
      goto LABEL_10;
    v26 = swift_getKeyPath(&unk_100EFF910);
    v27 = swift_getKeyPath(&unk_100EFF938);
    static Published.subscript.getter(&v57, v20, v26, v27);
    swift_release(v26);
    swift_release(v27);
    v28 = v57;
    v29 = v21;
    v30 = sub_1006442F0(v28, (uint64_t)v29);
    v32 = v31;
    swift_bridgeObjectRelease(v28);

    if ((v32 & 1) != 0)
    {
LABEL_10:
      v37 = swift_getKeyPath(&unk_100EFF910);
      v38 = swift_getKeyPath(&unk_100EFF938);
      v39 = v21;
      static Published.subscript.getter(&v57, v20, v37, v38);
      swift_release(v37);
      swift_release(v38);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v42 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v41 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v42 >= v41 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
      v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v39);
      specialized Array._endMutation()(v43);
      goto LABEL_13;
    }
    v33 = swift_getKeyPath(&unk_100EFF910);
    v34 = swift_getKeyPath(&unk_100EFF938);
    v35 = v29;
    static Published.subscript.getter(&v57, v20, v33, v34);
    swift_release(v33);
    swift_release(v34);
    v36 = v57;
    if ((unint64_t)v57 >> 62)
    {
      if (v57 < 0)
        v48 = v57;
      else
        v48 = v57 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v57);
      v49 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(v36);
      if (v49 >= v30)
      {
LABEL_8:
        if ((v30 & 0x8000000000000000) == 0)
        {
          sub_100CFBF74(v30, v30, (uint64_t)v35);
LABEL_13:
          v44 = v57;
          v45 = swift_getKeyPath(&unk_100EFF910);
          v46 = swift_getKeyPath(&unk_100EFF938);
          v56 = v44;
          static Published.subscript.setter(&v56, v20, v45, v46);
          sub_100638DC8();
          return;
        }
        goto LABEL_23;
      }
    }
    else if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10) >= v30)
    {
      goto LABEL_8;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

void sub_100639D00(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v13[2] = a1;
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v4 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v15, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = sub_1009A15AC((uint64_t (*)(id *))sub_1006456A4, (uint64_t)v13);
  v6 = v5;
  v7 = v15;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v12 = v15;
    else
      v12 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (v8 >= v6)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
    {
LABEL_3:
      sub_100CFE8C0(v6, v8);
      v9 = v15;
      v10 = swift_getKeyPath(&unk_100EFF910);
      v11 = swift_getKeyPath(&unk_100EFF938);
      v14 = v9;
      static Published.subscript.setter(&v14, v2, v10, v11);
      sub_100638DC8();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_100639EE0(_QWORD *a1)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID) & 1;
}

char *sub_10063A120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *result;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30[24];
  _QWORD v31[3];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v29 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v26 - v6;
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v9 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(v31, v1, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = v31[0];
  if (!(v31[0] >> 62))
  {
    v11 = *(_QWORD *)((v31[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (char *)swift_bridgeObjectRetain(v31[0]);
    if (v11)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease_n(v10, 2);
    return 0;
  }
  if (v31[0] < 0)
    v25 = v31[0];
  else
    v25 = v31[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31[0]);
  result = (char *)_CocoaArrayWrapper.endIndex.getter(v25);
  v11 = (uint64_t)result;
  if (!result)
    goto LABEL_26;
LABEL_3:
  v28 = v10 & 0xC000000000000001;
  if ((v10 & 0xC000000000000001) != 0)
  {
    result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    result = (char *)*(id *)(v10 + 32);
  }
  v13 = result;
  v27 = v11 - 1;
  if (v11 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease_n(v10, 2);
    return v13;
  }
  if (v11 < 2)
    goto LABEL_30;
  if (v28 || (v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10), v14 >= 2) && v27 < v14)
  {
    v15 = 0;
    v26 = v10;
    v16 = v29;
    do
    {
      if (v28)
        v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 + 1, v10);
      else
        v17 = (char *)*(id *)(v10 + 8 * v15 + 40);
      v18 = v17;
      v19 = &v13[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess(&v13[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v31, 0, 0);
      v20 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v20(v7, v19, v2);
      v21 = &v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess(&v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v30, 0, 0);
      v20(v5, v21, v2);
      v22 = static Date.< infix(_:_:)(v7, v5);
      v23 = *(void (**)(char *, uint64_t))(v16 + 8);
      v23(v5, v2);
      v23(v7, v2);
      if ((v22 & 1) != 0)
        v24 = v13;
      else
        v24 = v18;
      if ((v22 & 1) != 0)
        v13 = v18;

      ++v15;
      v10 = v26;
    }
    while (v27 != v15);
    goto LABEL_7;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_10063A3F8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v2 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v5 = v7;
    else
      v5 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v6 = _CocoaArrayWrapper.endIndex.getter(v5);
    swift_bridgeObjectRelease(v3);
    if (!v6)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

_BYTE *sub_10063A51C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  if ((sub_10063A9F4() & 1) == 0)
    return 0;
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v2 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v12, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v12;
  if (v12 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v12);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v3, 2);
    return 0;
  }
  while (1)
  {
    v5 = (v3 & 0xC000000000000001) != 0
       ? (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3)
       : *(id *)(v3 + 32);
    v6 = v5;
    if ((v5[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] & 1) != 0)
      break;

    if (v4 != 1)
    {
      v7 = 5;
      while (1)
      {
        v8 = (v3 & 0xC000000000000001) != 0
           ? (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v3)
           : *(id *)(v3 + 8 * v7);
        v6 = v8;
        v9 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        if ((v8[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] & 1) != 0)
          goto LABEL_7;

        ++v7;
        if (v9 == v4)
          goto LABEL_16;
      }
      __break(1u);
LABEL_20:
      v11 = v3 < 0 ? v3 : v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v4 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (v4)
        continue;
    }
    goto LABEL_16;
  }
LABEL_7:
  swift_bridgeObjectRelease_n(v3, 2);
  return v6;
}

void sub_10063A69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_hasUnifiedContact;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_hasUnifiedContact) & 1) != 0
    || objc_msgSend((id)objc_opt_self(CNContactStore), "authorizationStatusForEntityType:", 0) != (id)3)
  {
    goto LABEL_15;
  }
  v3 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EF5560;
  v5 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "init");
  v6 = objc_msgSend(v5, "descriptorForRequiredKeys");

  *(_QWORD *)(v4 + 32) = v6;
  v7 = objc_msgSend((id)objc_opt_self(CNContactViewController), "descriptorForRequiredKeys");
  *(_QWORD *)(v4 + 40) = v7;
  specialized Array._endMutation()(v7);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
  v9 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  sub_1004B804C(&qword_1013FF690);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v8, "unifiedContactsInStore:keysToFetch:error:", v9, isa, 0, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v12 = sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v17 = v13;
    else
      v17 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v13);
    if (v18)
      goto LABEL_5;
  }
  else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v13 & 0xC000000000000001) != 0)
    {
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
    }
    else
    {
      if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v14 = *(id *)(v13 + 32);
    }
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    v16 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact) = v15;

    goto LABEL_14;
  }
  swift_bridgeObjectRelease(v13);
LABEL_14:
  *(_BYTE *)(v1 + v2) = 1;
LABEL_15:
  v19 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact))
  {
    v20 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
    v21 = sub_100643748(v20);

    v22 = *(void **)(v1 + v19);
    *(_QWORD *)(v1 + v19) = v21;

  }
}

uint64_t sub_10063A9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  v3 = v2;
  v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
  v5 = objc_msgSend(v4, "userRecordID");

  if (v5)
  {
    v6 = objc_msgSend(v5, "recordName");

    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    if (v1 == v7 && v3 == v9)
    {
      v11 = 1;
      v9 = v3;
    }
    else
    {
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v7, v9, 0);
    }
    swift_bridgeObjectRelease(v3);
    v3 = v9;
  }
  else
  {
    v11 = 0;
  }
  swift_bridgeObjectRelease(v3);
  return v11 & 1;
}

uint64_t sub_10063ABC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  BOOL v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10063A69C();
  if ((sub_10063A9F4() & 1) == 0
    && (v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact)) != 0
    && (v8 = v7, v9 = sub_10063AD80(), v8, v9))
  {
    v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
    if (v10)
    {
      v11 = v10;
      sub_10063AF70();

      v12 = type metadata accessor for PersonNameComponents(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 0, 1, v12);
    }
    else
    {
      v18 = type metadata accessor for PersonNameComponents(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
    }
  }
  else
  {
    v14 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
    v15 = objc_msgSend(v14, "nameComponents");

    if (v15)
    {
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v15);

      v16 = type metadata accessor for PersonNameComponents(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
    }
    else
    {
      v17 = type metadata accessor for PersonNameComponents(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
    }
    return sub_10064561C((uint64_t)v6, a1);
  }
}

BOOL sub_10063AD80()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = objc_msgSend(v0, "givenName");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5 = String.count.getter(v2, v4);
  swift_bridgeObjectRelease(v4);
  if (v5 > 0)
    return 1;
  v6 = objc_msgSend(v0, "familyName");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = String.count.getter(v7, v9);
  swift_bridgeObjectRelease(v9);
  if (v10 > 0)
    return 1;
  v11 = objc_msgSend(v0, "middleName");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15 = String.count.getter(v12, v14);
  swift_bridgeObjectRelease(v14);
  if (v15 > 0)
    return 1;
  v16 = objc_msgSend(v0, "namePrefix");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = String.count.getter(v17, v19);
  swift_bridgeObjectRelease(v19);
  if (v20 > 0)
    return 1;
  v21 = objc_msgSend(v0, "nameSuffix");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = String.count.getter(v22, v24);
  swift_bridgeObjectRelease(v24);
  if (v25 > 0)
    return 1;
  v27 = objc_msgSend(v0, "nickname");
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = String.count.getter(v28, v30);
  swift_bridgeObjectRelease(v30);
  return v31 > 0;
}

double sub_10063AF70()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  double result;
  uint64_t v48;
  char *v49;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v2);
  v49 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for PersonNameComponents(0);
  v4 = *(_QWORD *)(v48 - 8);
  v5 = __chkstk_darwin(v48);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersonNameComponents.init()(v5);
  v8 = objc_msgSend(v0, "namePrefix");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  PersonNameComponents.namePrefix.setter(v9, v11);
  v12 = objc_msgSend(v1, "givenName");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  PersonNameComponents.givenName.setter(v13, v15);
  v16 = objc_msgSend(v1, "middleName");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  PersonNameComponents.middleName.setter(v17, v19);
  v20 = objc_msgSend(v1, "familyName");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  PersonNameComponents.familyName.setter(v21, v23);
  v24 = objc_msgSend(v1, "nameSuffix");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  PersonNameComponents.nameSuffix.setter(v25, v27);
  v28 = objc_msgSend(v1, "nickname");
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  PersonNameComponents.nickname.setter(v29, v31);
  v32 = objc_msgSend(v1, "phoneticGivenName");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = objc_msgSend(v1, "phoneticMiddleName");
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40 = objc_msgSend(v1, "phoneticFamilyName");
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  v44 = String.count.getter(v33, v35);
  if (v44 <= 0 && (v44 = String.count.getter(v37, v39), v44 <= 0) && (v44 = String.count.getter(v41, v43), v44 < 1))
  {
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v39);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v35).n128_u64[0];
  }
  else
  {
    PersonNameComponents.init()(v44);
    PersonNameComponents.givenName.setter(v33, v35);
    PersonNameComponents.middleName.setter(v37, v39);
    PersonNameComponents.familyName.setter(v41, v43);
    v46 = v48;
    v45 = v49;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v49, v7, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v45, 0, 1, v46);
    PersonNameComponents.phoneticRepresentation.setter(v45);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v46);
  }
  return result;
}

uint64_t sub_10063B370()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  Class isa;
  id v10;
  uint64_t v12;

  v0 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PersonNameComponents(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10063ABC4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v2, &qword_1013F4270);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v8 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
    isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v8, "localizedStringFromPersonNameComponents:style:options:", isa, 0, 0);

    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t sub_10063B4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  id v24;
  id v25;
  id v26;
  double v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PersonNameComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10063ABC4((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013F4270);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v10, "localizedStringFromPersonNameComponents:style:options:", isa, 0, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain(v14);
  v15 = String.count.getter(v9, v14);
  *(_QWORD *)&v16 = swift_bridgeObjectRelease(v14).n128_u64[0];
  if (v15)
    goto LABEL_5;
  v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity", v16);
  v25 = objc_msgSend(v24, "lookupInfo");

  if (!v25)
    goto LABEL_5;
  v26 = objc_msgSend(v25, "emailAddress");
  if (v26)
  {
    v28 = v26;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v17 = v30;

    swift_bridgeObjectRetain(v17);
    v31 = String.count.getter(v29, v17);
    swift_bridgeObjectRelease(v17);
    if (v31 >= 1)
    {
      swift_bridgeObjectRelease(v14);

      v9 = v29;
      goto LABEL_6;
    }
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  v32 = objc_msgSend(v25, "phoneNumber", v27);
  if (!v32)
  {

LABEL_5:
    v17 = v14;
    goto LABEL_6;
  }
  v33 = v32;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v36 = v35;

  swift_bridgeObjectRetain(v36);
  v37 = String.count.getter(v34, v36);
  swift_bridgeObjectRelease(v36);
  if (v37 <= 0)
  {

    swift_bridgeObjectRelease(v36);
    goto LABEL_5;
  }
  v38 = objc_allocWithZone((Class)CNPhoneNumber);
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v38, "initWithStringValue:", v39, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v41 = objc_msgSend(v40, "formattedStringValue");
  if (!v41)
  {
    swift_bridgeObjectRelease(v14);

    return 0;
  }
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v17 = v42;
  swift_bridgeObjectRelease(v14);

LABEL_6:
  swift_bridgeObjectRetain(v17);
  v18 = String.count.getter(v9, v17);
  swift_bridgeObjectRelease(v17);
  if (!v18)
  {
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    swift_bridgeObjectRelease(v17);

  }
  return v9;
}

uint64_t sub_10063B92C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  Class isa;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PersonNameComponents(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10063ABC4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v2, &qword_1013F4270);
    return sub_10063B4E0();
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v7 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v7, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if ((v12 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v12) & 0xF;
  else
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v13)
  {
    swift_bridgeObjectRelease(v12);
    return sub_10063B4E0();
  }
  return v10;
}

id sub_10063BAEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaborationParticipant(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10063BC88()
{
  return type metadata accessor for CRLCollaborationParticipant(0);
}

uint64_t type metadata accessor for CRLCollaborationParticipant(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E8B40, (uint64_t)&nominal type descriptor for CRLCollaborationParticipant);
}

void sub_10063BCA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[11];

  v11[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v11[1] = "\b";
  v11[2] = &unk_100EFF718;
  v11[3] = "\b";
  sub_100643190(319, &qword_1013E8B50, &qword_1013E8B58);
  if (v3 <= 0x3F)
  {
    v11[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_10063BDBC();
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v11[5] = v6;
      v7 = type metadata accessor for UUID(319);
      if (v8 <= 0x3F)
      {
        v11[6] = *(_QWORD *)(v7 - 8) + 64;
        sub_100643190(319, &qword_1013E8B68, &qword_1013E8B70);
        if (v10 <= 0x3F)
        {
          v11[7] = *(_QWORD *)(v9 - 8) + 64;
          v11[8] = v6;
          v11[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v11[10] = &unk_100EFF718;
          swift_updateClassMetadata2(a1, 256, 11, v11, a1 + 80);
        }
      }
    }
  }
}

void sub_10063BDBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1013E8B60)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1013E8B60);
  }
}

uint64_t sub_10063BE10@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLCollaborationParticipant(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10063BE4C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_id;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10063BE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;

  v0 = sub_10063B4E0();
  v2 = v1;
  v3 = sub_10063B4E0();
  if (v0 == v3 && v2 == v4)
  {
    v7 = 0;
    v6 = v2;
  }
  else
  {
    v6 = v4;
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v2, v3, v4, 1);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10063BF58()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v2 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v9, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v6 = v9;
    else
      v6 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v7 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v3);
    if (v7)
      goto LABEL_3;
LABEL_11:
    v8 = swift_bridgeObjectRelease(v3);
    NSNotFound.getter(v8);
    return;
  }
  if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease(v3);

    return;
  }
  __break(1u);
}

id sub_10063C070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  char v24[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors, v24, 0, 0);
  v5 = *v4;
  if (*(_QWORD *)(*v4 + 16))
  {
    v6 = sub_100843260(a1);
    if ((v7 & 1) != 0)
      return *(id *)(*(_QWORD *)(v5 + 56) + 8 * v6);
  }
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v10 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(v23, v2, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  v11 = v23[0];
  if (v23[0] >> 62)
  {
    if (v23[0] < 0)
      v21 = v23[0];
    else
      v21 = v23[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23[0]);
    v12 = (id)_CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = *(id *)((v23[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v12)
  {
    swift_bridgeObjectRelease(v11);
    goto LABEL_14;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
  }
  else
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    v13 = (char *)*(id *)(v11 + 32);
  }
  v14 = v13;
  swift_bridgeObjectRelease(v11);
  v12 = sub_100766FC4(a1, *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);

  if (qword_1013DD028 != -1)
LABEL_24:
    swift_once(&qword_1013DD028, sub_100765B48);
  v15 = (void *)qword_10147F580;
  sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
  v16 = v15;
  v17 = static NSObject.== infix(_:_:)(v12, v16);

  if ((v17 & 1) == 0)
  {
    swift_beginAccess(v4, v23, 33, 0);
    v18 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v22 = *v4;
    *v4 = 0x8000000000000000;
    sub_100827B58((uint64_t)v18, a1, isUniquelyReferenced_nonNull_native);
    v20 = *v4;
    *v4 = v22;
    swift_bridgeObjectRelease(v20);
    swift_endAccess(v23);
    return v18;
  }

LABEL_14:
  if (qword_1013DD028 != -1)
    swift_once(&qword_1013DD028, sub_100765B48);
  return (id)qword_10147F580;
}

void sub_10063C334(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  void *v10;
  id v11;
  char v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v5 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(v18, a2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v18[0];
  if (!(v18[0] >> 62))
  {
    v7 = *(id *)((v18[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if (v18[0] < 0)
    v16 = v18[0];
  else
    v16 = v18[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18[0]);
  v7 = (id)_CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_14;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    v8 = (char *)*(id *)(v6 + 32);
  }
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  v7 = sub_100766FC4(v3, *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);

  if (qword_1013DD028 != -1)
LABEL_17:
    swift_once(&qword_1013DD028, sub_100765B48);
  v10 = (void *)qword_10147F580;
  sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
  v11 = v10;
  v12 = static NSObject.== infix(_:_:)(v7, v11);

  if ((v12 & 1) == 0)
  {
    v13 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors);
    swift_beginAccess(v13, v18, 33, 0);
    v7 = v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v13);
    v17 = *v13;
    *v13 = 0x8000000000000000;
    sub_100827B58((uint64_t)v7, v3, isUniquelyReferenced_nonNull_native);
    v15 = *v13;
    *v13 = v17;
    swift_bridgeObjectRelease(v15);
    swift_endAccess(v18);
  }

}

uint64_t sub_10063C5B8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v2 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v11, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v11;
  if (!((unint64_t)v11 >> 62))
  {
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v3);
    if (qword_1013DD030 == -1)
    {
LABEL_12:
      v6 = qword_10147F588;
      swift_bridgeObjectRetain(unk_10147F590);
      return v6;
    }
LABEL_16:
    swift_once(&qword_1013DD030, sub_100765B80);
    goto LABEL_12;
  }
  if (v11 < 0)
    v8 = v11;
  else
    v8 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = (char *)*(id *)(v3 + 32);
LABEL_6:
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v6 = sub_100767264(*(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);
  swift_bridgeObjectRetain(v7);

  return v6;
}

uint64_t sub_10063C728(void *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::String v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  id v50;
  id v51;
  _BYTE v53[72];
  _BYTE v54[112];
  _BYTE v55[32];

  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v55, 0, 0);
  v3 = (void *)static OS_os_log.realTimeSync;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v54);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E8E40, TUHandle_ptr);
  *(_QWORD *)(inited + 64) = sub_10064412C();
  *(_QWORD *)(inited + 32) = a1;
  v6 = v3;
  v7 = a1;
  v8 = v1;
  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v12;
  v14 = static os_log_type_t.info.getter();
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v14, "Comparing handle for equivalency. handle=[%@], shareParticipant=[%@]", 68, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  v16 = objc_msgSend(v8, "userIdentity");
  v17 = objc_msgSend(v16, "lookupInfo");

  if (!v17)
  {
    v41 = (void *)static OS_os_log.realTimeSync;
    v42 = swift_initStackObject(v4, v53);
    *(_OWORD *)(v42 + 16) = xmmword_100EF5E40;
    v43 = v8;
    v17 = v41;
    v44 = objc_msgSend(v43, "description");
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v47 = v46;

    *(_QWORD *)(v42 + 56) = &type metadata for String;
    *(_QWORD *)(v42 + 64) = v13;
    *(_QWORD *)(v42 + 32) = v45;
    *(_QWORD *)(v42 + 40) = v47;
    v49 = static os_log_type_t.default.getter(v48);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v49, "Missing user identity for participant: %@", 41, 2, v42);
    swift_setDeallocating(v42);
    swift_arrayDestroy(v42 + 32, 1, v15);
    goto LABEL_14;
  }
  v18 = objc_msgSend(v17, "phoneNumber");
  if (!v18)
  {
LABEL_12:
    v50 = sub_10063CB44();
    if (v50)
    {
      v51 = v50;
      v40 = objc_msgSend(v50, "isEquivalentToHandle:", v7);

      v17 = v51;
      goto LABEL_15;
    }
LABEL_14:
    v40 = 0;
    goto LABEL_15;
  }
  v19 = v18;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v22 = v21;

  v23._countAndFlagsBits = 43;
  v23._object = (void *)0xE100000000000000;
  if (String.hasPrefix(_:)(v23)
    || (v24 = objc_msgSend(v7, "normalizedValue")) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v22);
    goto LABEL_12;
  }
  v25 = v24;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v28 = v27;

  v29._countAndFlagsBits = 43;
  v29._object = (void *)0xE100000000000000;
  if (!String.hasPrefix(_:)(v29))
  {
    swift_bridgeObjectRelease(v28);
    goto LABEL_11;
  }
  v30 = (id)static OS_os_log.realTimeSync;
  v32 = static os_log_type_t.default.getter(v31);
  sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v32, "Working around canonicalization issue with phone numbers", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

  v33 = sub_100643BFC(1uLL, v26, v28);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  swift_bridgeObjectRelease(v28);
  v40 = sub_100644B84(v20, v22, v33, v35, v37, v39);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v39);
LABEL_15:

  return v40 & 1;
}

id sub_10063CB44()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[72];
  _BYTE v34[72];
  _BYTE v35[24];

  v1 = objc_msgSend(v0, "userIdentity");
  v2 = objc_msgSend(v1, "lookupInfo");

  if (!v2)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v35, 0, 0);
    v6 = (void *)static OS_os_log.realTimeSync;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v34);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v9 = v0;
    v10 = v6;
    v11 = objc_msgSend(v9, "description");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(inited + 40) = v14;
    v16 = static os_log_type_t.default.getter(v15);
    sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v16, "Missing user identity for participant: %@", 41, 2, inited);
    swift_setDeallocating(inited);
    v17 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v17);

    return 0;
  }
  v3 = objc_msgSend(v2, "emailAddress");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(TUHandle), "normalizedEmailAddressHandleForValue:", v3);
  }
  else
  {
    v18 = objc_msgSend(v2, "phoneNumber");
    if (!v18)
    {
LABEL_11:
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v35, 0, 0);
      v20 = (void *)static OS_os_log.realTimeSync;
      v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v22 = swift_initStackObject(v21, v33);
      *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
      v23 = v20;
      v24 = v0;
      v25 = objc_msgSend(v24, "description");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      *(_QWORD *)(v22 + 56) = &type metadata for String;
      *(_QWORD *)(v22 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v22 + 32) = v26;
      *(_QWORD *)(v22 + 40) = v28;
      v30 = static os_log_type_t.default.getter(v29);
      sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v30, "Missing handle for participant: %@", 34, 2, v22);

      swift_setDeallocating(v22);
      v31 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v22 + 32, 1, v31);

      return 0;
    }
    v4 = v18;
    v5 = objc_msgSend((id)objc_opt_self(TUHandle), "normalizedPhoneNumberHandleForValue:isoCountryCode:", v18, 0);
  }
  v19 = v5;

  if (!v19)
    goto LABEL_11;

  return v19;
}

uint64_t sub_10063CE9C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  _BYTE v9[24];

  swift_beginAccess(v0 + 16, v9, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  type metadata accessor for CRLCollaborationParticipant(0);
  v2 = swift_bridgeObjectRetain(v1);
  v3 = Array.description.getter(v2);
  v5 = v4;
  swift_bridgeObjectRelease(v1);
  v6._countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRetain(0xE100000000000000);
  v7._countAndFlagsBits = 125;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(0xE100000000000000);
  return 123;
}

uint64_t sub_10063CF58()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer;
  v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer);
  if (v2)
    objc_msgSend(v2, "invalidate");
  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  v3 = (char *)v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection__activeParticipants;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8E50);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10063D018()
{
  return type metadata accessor for CRLCollaborationParticipantCollection(0);
}

uint64_t type metadata accessor for CRLCollaborationParticipantCollection(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E8BC8, (uint64_t)&nominal type descriptor for CRLCollaborationParticipantCollection);
}

void sub_10063D034(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100643190(319, &qword_1013E8BD8, (uint64_t *)&unk_1013E8BE0);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = "\b";
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

uint64_t sub_10063D0D0()
{
  return sub_10063D0E4((uint64_t)&unk_100EFF880, (uint64_t)&unk_100EFF8A8);
}

uint64_t sub_10063D0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

void sub_10063D14C(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[72];
  _QWORD v19[3];

  KeyPath = swift_getKeyPath(&unk_100EFF880);
  v4 = swift_getKeyPath(&unk_100EFF8A8);
  v19[0] = a1;
  swift_retain(v1);
  static Published.subscript.setter(v19, v1, KeyPath, v4);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v19, 0, 0);
  v5 = (void *)static OS_os_log.realTimeSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = swift_getKeyPath(&unk_100EFF880);
  v9 = swift_getKeyPath(&unk_100EFF8A8);
  v10 = v5;
  static Published.subscript.getter(&v17, v1, v8, v9);
  swift_release(v8);
  swift_release(v9);
  v11 = v17;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E8BE0);
  *(_QWORD *)(inited + 64) = sub_100644D78();
  *(_QWORD *)(inited + 32) = v11;
  v12 = inited + 32;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v14, "Updating collection of active participants to : %@", 50, 2, inited);
  swift_setDeallocating(inited);
  v15 = *(_QWORD *)(inited + 16);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v12, v15, v16);

}

double sub_10063D2F4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(unint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t *v26;
  unint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  __n128 v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  void (*v42)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  id v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v52)(char *, char *, uint64_t, __n128);
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  _BYTE v57[32];
  double *v58;
  char v59;
  char v60[32];

  v3 = sub_1004B804C(&qword_1013E1528);
  __chkstk_darwin(v3);
  v54 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  *(_QWORD *)&result = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters);
    *(_QWORD *)&result = swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters, v60, 0, 0).n128_u64[0];
    v15 = *v13;
    if (*(_QWORD *)(*v13 + 16))
    {
      v55 = v13;
      v53 = v12;
      v59 = 0;
      v58 = _swiftEmptyArrayStorage;
      __chkstk_darwin(v14);
      v46 = v1;
      *(&v45 - 4) = v1;
      *(&v45 - 3) = (uint64_t)a1;
      *(&v45 - 2) = (uint64_t)&v58;
      *(&v45 - 1) = (uint64_t)&v59;
      v48 = a1;
      swift_bridgeObjectRetain(v15);
      sub_100644940(v16, (void (*)(char *, uint64_t))sub_100645588);
      swift_bridgeObjectRelease();
      v17 = *((_QWORD *)v58 + 2);
      v47 = v58;
      if (v17)
      {
        v18 = (char *)v58 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v19 = *(_QWORD *)(v6 + 72);
        v52 = *(void (**)(char *, char *, uint64_t, __n128))(v6 + 16);
        v20 = swift_bridgeObjectRetain(v58);
        v21 = v53;
        v49 = v5;
        v50 = v8;
        while (1)
        {
          v52(v21, v18, v5, v20);
          v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v25)(v21, 0, 1, v5);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5) == 1)
            break;
          v51 = v25;
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v21, v5);
          v26 = v55;
          swift_beginAccess(v55, v57, 33, 0);
          swift_bridgeObjectRetain(*v26);
          v27 = sub_100842EFC((uint64_t)v8);
          v29 = v28;
          swift_bridgeObjectRelease();
          if ((v29 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v31 = *v26;
            v56 = *v26;
            *v26 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10082D72C();
              v31 = v56;
            }
            v24 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
            v24(*(_QWORD *)(v31 + 48) + v27 * v19, v5);
            v32 = v56;
            v33 = *(_QWORD *)(v56 + 56);
            v34 = type metadata accessor for CRLRealTimeEnter(0);
            v35 = v6;
            v36 = *(_QWORD *)(v34 - 8);
            v37 = v33 + *(_QWORD *)(v36 + 72) * v27;
            v38 = v54;
            sub_100645594(v37, v54);
            v39 = v27;
            v23 = v38;
            sub_10051A848(v39, v32);
            *v55 = v32;
            v40 = swift_bridgeObjectRelease();
            v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v36 + 56);
            v6 = v35;
            v5 = v49;
            v41(v38, 0, 1, v34, v40);
            v8 = v50;
          }
          else
          {
            v22 = type metadata accessor for CRLRealTimeEnter(0);
            v23 = v54;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v54, 1, 1, v22);
            v24 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
          }
          v24((unint64_t)v8, v5);
          sub_1004CB800(v23, &qword_1013E1528);
          swift_endAccess(v57);
          v18 += v19;
          --v17;
          v21 = v53;
          if (!v17)
          {
            v51(v53, 1, 1, v5, v20);
            break;
          }
        }
      }
      else
      {
        v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
        v43 = swift_bridgeObjectRetain(v58);
        v42(v53, 1, 1, v5, v43);
      }
      swift_bridgeObjectRelease();
      if (v59 == 1)
      {
        v44 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1013DDB08 != -1)
          swift_once(&qword_1013DDB08, sub_100B117DC);
        objc_msgSend(v44, "postNotificationName:object:", qword_101480B18, v46);

      }
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10063D73C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, _BYTE *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  unsigned __int16 v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_10063D8A0(a2, a4);
  if ((result & 1) != 0)
  {
    v16 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
    v17 = *a5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a5 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v17 = sub_100D0EC28(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      *a5 = v17;
    }
    v20 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    if (v20 >= v19 >> 1)
    {
      v17 = sub_100D0EC28(v19 > 1, v20 + 1, 1, v17);
      *a5 = v17;
    }
    *(_QWORD *)(v17 + 16) = v20 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v20, v14, v11);
    if (v16 >= 0x100u)
      *a6 = 1;
  }
  return result;
}

uint64_t sub_10063D8A0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int *v13;
  uint64_t v14;
  int v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t KeyPath;
  uint64_t v22;
  id v23;
  int v24;
  _BYTE v26[16];
  uint64_t v27;
  _BYTE v28[9];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = objc_msgSend(a2, "participants", v6);
  v10 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v27 = a1;
  v12 = sub_100C9D0C0(sub_100645524, (uint64_t)v26, v11);
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_7;
  v13 = (int *)type metadata accessor for CRLRealTimeEnter(0);
  Date.init(timeIntervalSinceReferenceDate:)(v13, *(double *)(a1 + v13[6]));
  v14 = a1 + v13[5];
  v15 = *(unsigned __int8 *)(a1 + v13[7]);
  v16 = (void *)sub_10063DAEC(v12, v14, (uint64_t)v8, 0, v15);
  LOBYTE(v13) = v17;

  if ((v13 & 1) != 0)
  {
    v18 = sub_100642EE8();
    if (v18)
    {
      v20 = v18;

      KeyPath = swift_getKeyPath(byte_100EFF9A0);
      v22 = swift_getKeyPath(byte_100EFF9C8);
      v28[0] = v15;
      v23 = v20;
      static Published.subscript.setter(v28, v23, KeyPath, v22);

      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);

    }
LABEL_7:
    v24 = 0;
    return v24 | (v12 != 0);
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);

  v24 = 256;
  return v24 | (v12 != 0);
}

uint64_t sub_10063DA8C(id *a1, _BOOL8 *a2)
{
  id v3;

  v3 = objc_msgSend(*a1, "userIdentity");
  LOBYTE(a2) = sub_1006392C0(*a2);

  return a2 & 1;
}

uint64_t sub_10063DAEC(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  _QWORD *v13;
  uint64_t v14;
  objc_class *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  char v72;
  void *v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  id v80;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v82;
  uint64_t KeyPath;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  __n128 v92;
  uint64_t v93;
  void *v94;
  void *v95;
  Swift::String v96;
  unint64_t v97;
  Swift::String v98;
  __n128 v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v105;
  _BYTE v106[4];
  int v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  objc_class *v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131[24];
  char v132[72];
  char v133[32];

  v6 = v5;
  v107 = a5;
  v113 = a4;
  v114 = a3;
  v119 = a2;
  v112 = a1;
  v7 = type metadata accessor for UUID(0);
  v110 = *(_QWORD *)(v7 - 8);
  v111 = v7;
  __chkstk_darwin(v7);
  v109 = &v106[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v108 = &v106[-v10];
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v133, 0, 0);
  v11 = (void *)static OS_os_log.realTimeSync;
  v118 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v118, v132);
  v121 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v13 = (_QWORD *)(v5 + 16);
  swift_beginAccess(v5 + 16, v131, 0, 0);
  v14 = *(_QWORD *)(v5 + 16);
  v15 = (objc_class *)type metadata accessor for CRLCollaborationParticipant(0);
  v16 = v11;
  swift_retain(v6);
  v17 = swift_bridgeObjectRetain(v14);
  v18 = Array.description.getter(v17);
  v20 = v19;
  swift_bridgeObjectRelease(v14);
  v129 = 123;
  v130 = 0xE100000000000000;
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22 = v130;
  swift_bridgeObjectRetain(v130);
  v23._countAndFlagsBits = 125;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  swift_release(v6);
  swift_bridgeObjectRelease(v22);
  v24 = v129;
  v25 = v130;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v26 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v26;
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(inited + 40) = v25;
  v28 = static os_log_type_t.default.getter(v27);
  sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v28, "addPresence BEFORE\n%@\n", 22, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v29);

  v30 = v112;
  v31 = objc_msgSend(v112, "userIdentity");
  v115 = v6;
  sub_100642568(v31);
  v33 = v32;

  v120 = v15;
  v117 = v26;
  if (v33)
  {
    v34 = (void *)static OS_os_log.realTimeSync;
    v35 = v118;
    v36 = swift_initStackObject(v118, &v122);
    *(_OWORD *)(v36 + 16) = v121;
    v37 = v33;
    v38 = v34;
    v39 = objc_msgSend(v37, "description");
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    *(_QWORD *)(v36 + 56) = &type metadata for String;
    *(_QWORD *)(v36 + 64) = v26;
    *(_QWORD *)(v36 + 32) = v40;
    *(_QWORD *)(v36 + 40) = v42;
    v44 = static os_log_type_t.default.getter(v43);
    sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v44, "addPresence: found existing participant: \n%@\n", 45, 2, v36);
    swift_setDeallocating(v36);
    swift_arrayDestroy(v36 + 32, 1, v29);

    v45 = v35;
  }
  else
  {
    v46 = v118;
    v47 = objc_allocWithZone(v15);
    v48 = v30;
    v49 = sub_100643C98(v48, v107 & 1);

    swift_beginAccess(v13, &v129, 33, 0);
    v37 = v49;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
    v51 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v50 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v37);
    specialized Array._endMutation()(v52);
    swift_endAccess(&v129);
    v53 = (void *)static OS_os_log.realTimeSync;
    v54 = swift_initStackObject(v46, &v128);
    *(_OWORD *)(v54 + 16) = v121;
    v38 = v53;
    v55 = objc_msgSend(v37, "description");
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v58 = v57;

    v59 = v117;
    *(_QWORD *)(v54 + 56) = &type metadata for String;
    *(_QWORD *)(v54 + 64) = v59;
    *(_QWORD *)(v54 + 32) = v56;
    *(_QWORD *)(v54 + 40) = v58;
    v61 = static os_log_type_t.default.getter(v60);
    sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v61, "addPresence: did not find any existing participant, adding a new one: \n%@\n", 74, 2, v54);
    swift_setDeallocating(v54);
    v45 = v46;
    swift_arrayDestroy(v54 + 32, 1, v29);
  }
  v62 = v115;
  v116 = v29;

  sub_1006398AC(v119, v114, v113 & 1);
  v64 = v63;
  v66 = v65;
  if ((v65 & 1) == 0)
  {
    v67 = (_QWORD *)(v62 + 24);
    swift_beginAccess(v62 + 24, &v129, 0, 0);
    v68 = *(_QWORD *)(v62 + 24);
    v69 = *(_QWORD *)(v68 + 16);
    v70 = v37;
    swift_bridgeObjectRetain(v68);
    v115 = v64;
    LODWORD(v114) = v66;
    if (v69 && (v71 = sub_100843350((uint64_t)v70), (v72 & 1) != 0))
    {
      v73 = *(void **)(*(_QWORD *)(v68 + 56) + 8 * v71);
      swift_bridgeObjectRetain(v73);
    }
    else
    {
      v73 = &_swiftEmptySetSingleton;
    }

    v74 = swift_bridgeObjectRelease(v68);
    v127 = (uint64_t)v73;
    v75 = (uint64_t)v109;
    v76 = v110;
    v77 = v111;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v110 + 16))(v109, v119, v111, v74);
    v78 = v108;
    sub_100AD569C((uint64_t)v108, v75);
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v78, v77);
    v79 = v127;
    swift_beginAccess(v62 + 24, &v125, 33, 0);
    v80 = v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v67);
    v124 = *v67;
    *v67 = 0x8000000000000000;
    sub_10082641C(v79, v80, isUniquelyReferenced_nonNull_native);
    v82 = *v67;
    *v67 = v124;

    swift_bridgeObjectRelease(v82);
    swift_endAccess(&v125);
    KeyPath = swift_getKeyPath(&unk_100EFF910);
    v84 = swift_getKeyPath(&unk_100EFF938);
    static Published.subscript.getter(&v125, v80, KeyPath, v84);
    swift_release(KeyPath);
    swift_release(v84);
    v85 = v125;
    if ((unint64_t)v125 >> 62)
    {
      if (v125 < 0)
        v105 = v125;
      else
        v105 = v125 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v125);
      v86 = _CocoaArrayWrapper.endIndex.getter(v105);
      swift_bridgeObjectRelease(v85);
    }
    else
    {
      v86 = *(_QWORD *)((v125 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v85);
    v64 = v115;
    if (v86 && (sub_10063A9F4() & 1) == 0)
      sub_10063E358(v80);
    v87 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCB88 != -1)
      swift_once(&qword_1013DCB88, sub_10063870C);
    objc_msgSend(v87, "postNotificationName:object:", qword_10147ECF0, v80);

    v45 = v118;
  }
  v88 = (void *)static OS_os_log.realTimeSync;
  v89 = swift_initStackObject(v45, &v123);
  *(_OWORD *)(v89 + 16) = v121;
  v90 = *(_QWORD *)(v62 + 16);
  swift_retain(v62);
  v91 = v88;
  v92 = swift_bridgeObjectRetain(v90);
  v93 = Array.description.getter(v92);
  v95 = v94;
  swift_bridgeObjectRelease(v90);
  v125 = 123;
  v126 = 0xE100000000000000;
  v96._countAndFlagsBits = v93;
  v96._object = v95;
  String.append(_:)(v96);
  swift_bridgeObjectRelease(v95);
  v97 = v126;
  swift_bridgeObjectRetain(v126);
  v98._countAndFlagsBits = 125;
  v98._object = (void *)0xE100000000000000;
  String.append(_:)(v98);
  swift_release(v62);
  v99 = swift_bridgeObjectRelease(v97);
  v100 = v125;
  v101 = v126;
  v102 = v117;
  *(_QWORD *)(v89 + 56) = &type metadata for String;
  *(_QWORD *)(v89 + 64) = v102;
  *(_QWORD *)(v89 + 32) = v100;
  *(_QWORD *)(v89 + 40) = v101;
  v103 = static os_log_type_t.default.getter(v99);
  sub_100A06EBC((uint64_t)v91, &_mh_execute_header, v103, "addPresence AFTER\n%@\n", 21, 2, v89);

  swift_setDeallocating(v89);
  swift_arrayDestroy(v89 + 32, 1, v116);

  return v64;
}

void sub_10063E358(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[80];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[72];
  _BYTE v45[32];

  v2 = v1;
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v4 = &static OS_os_log.realTimeSync;
  swift_beginAccess(&static OS_os_log.realTimeSync, v45, 0, 0);
  v5 = (void *)static OS_os_log.realTimeSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v44);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC(v8, &_mh_execute_header, v16, "Adding a pending active participant: %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v17);

  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants, v43, 0, 0);
  v19 = *v18;
  swift_bridgeObjectRetain(*v18);
  LOBYTE(v8) = sub_100C9DB50((uint64_t)v9, v19);
  swift_bridgeObjectRelease(v19);
  if ((v8 & 1) == 0)
  {
    v35 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants, v42, 0, 0);
    v36 = *v35;
    swift_bridgeObjectRetain(*v35);
    v37 = sub_100C9DB50((uint64_t)v9, v36);
    swift_bridgeObjectRelease(v36);
    if ((v37 & 1) != 0)
      goto LABEL_10;
    swift_beginAccess(v35, v41, 33, 0);
    v24 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v4 = *(uint64_t **)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v4 < v23 >> 1)
    {
LABEL_9:
      v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v24);
      specialized Array._endMutation()(v38);
      swift_endAccess(v41);
      goto LABEL_10;
    }
LABEL_16:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, (char *)v4 + 1, 1);
    goto LABEL_9;
  }
  swift_beginAccess(v18, v42, 33, 0);
  v20 = v9;
  v21 = sub_100644404(v18, (uint64_t)v20);

  v22 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    if (v22 < 0)
      v39 = *v18;
    else
      v39 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v18);
    v24 = (id)_CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v22);
    if ((uint64_t)v24 >= v21)
      goto LABEL_6;
    goto LABEL_15;
  }
  v23 = v22 & 0xFFFFFFFFFFFFF8;
  v24 = *(id *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)v24 < v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_6:
  sub_100CFE8B4(v21, (uint64_t)v24);
  swift_endAccess(v42);
  v25 = (void *)static OS_os_log.realTimeSync;
  v26 = swift_initStackObject(v6, v40);
  *(_OWORD *)(v26 + 16) = xmmword_100EF5E40;
  v27 = v20;
  v28 = v25;
  v29 = objc_msgSend(v27, "description");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  *(_QWORD *)(v26 + 56) = &type metadata for String;
  *(_QWORD *)(v26 + 64) = v14;
  *(_QWORD *)(v26 + 32) = v30;
  *(_QWORD *)(v26 + 40) = v32;
  v34 = static os_log_type_t.default.getter(v33);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v34, "This participant was already pending removal so that operation was cancelled: %@", 80, 2, v26);
  swift_setDeallocating(v26);
  swift_arrayDestroy(v26 + 32, 1, v17);

LABEL_10:
  sub_10063EAF0();
}

void sub_10063E724(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[80];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[72];
  _BYTE v45[32];

  v2 = v1;
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v4 = &static OS_os_log.realTimeSync;
  swift_beginAccess(&static OS_os_log.realTimeSync, v45, 0, 0);
  v5 = (void *)static OS_os_log.realTimeSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v44);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC(v8, &_mh_execute_header, v16, "Removing a pending active participant: %@", 41, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v17);

  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants, v43, 0, 0);
  v19 = *v18;
  swift_bridgeObjectRetain(*v18);
  LOBYTE(v8) = sub_100C9DB50((uint64_t)v9, v19);
  swift_bridgeObjectRelease(v19);
  if ((v8 & 1) == 0)
  {
    v35 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants, v42, 0, 0);
    v36 = *v35;
    swift_bridgeObjectRetain(*v35);
    v37 = sub_100C9DB50((uint64_t)v9, v36);
    swift_bridgeObjectRelease(v36);
    if ((v37 & 1) != 0)
      goto LABEL_10;
    swift_beginAccess(v35, v41, 33, 0);
    v24 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v4 = *(uint64_t **)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v4 < v23 >> 1)
    {
LABEL_9:
      v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v24);
      specialized Array._endMutation()(v38);
      swift_endAccess(v41);
      goto LABEL_10;
    }
LABEL_16:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, (char *)v4 + 1, 1);
    goto LABEL_9;
  }
  swift_beginAccess(v18, v42, 33, 0);
  v20 = v9;
  v21 = sub_100644404(v18, (uint64_t)v20);

  v22 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    if (v22 < 0)
      v39 = *v18;
    else
      v39 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v18);
    v24 = (id)_CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v22);
    if ((uint64_t)v24 >= v21)
      goto LABEL_6;
    goto LABEL_15;
  }
  v23 = v22 & 0xFFFFFFFFFFFFF8;
  v24 = *(id *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)v24 < v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_6:
  sub_100CFE8B4(v21, (uint64_t)v24);
  swift_endAccess(v42);
  v25 = (void *)static OS_os_log.realTimeSync;
  v26 = swift_initStackObject(v6, v40);
  *(_OWORD *)(v26 + 16) = xmmword_100EF5E40;
  v27 = v20;
  v28 = v25;
  v29 = objc_msgSend(v27, "description");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  *(_QWORD *)(v26 + 56) = &type metadata for String;
  *(_QWORD *)(v26 + 64) = v14;
  *(_QWORD *)(v26 + 32) = v30;
  *(_QWORD *)(v26 + 40) = v32;
  v34 = static os_log_type_t.default.getter(v33);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v34, "This participant was already pending addition so that operation was cancelled: %@", 81, 2, v26);
  swift_setDeallocating(v26);
  swift_arrayDestroy(v26 + 32, 1, v17);

LABEL_10:
  sub_10063EAF0();
}

void sub_10063EAF0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD aBlock[5];
  uint64_t v11;
  _BYTE v12[24];

  v1 = OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer))
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v12, 0, 0);
    v2 = (id)static OS_os_log.realTimeSync;
    v4 = static os_log_type_t.default.getter(v3);
    sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Starting a timer to process pending changes.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

    v5 = (void *)objc_opt_self(NSTimer);
    aBlock[4] = sub_1006454E8;
    v11 = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_101273590;
    v6 = _Block_copy(aBlock);
    v7 = v11;
    swift_retain(v0);
    swift_release(v7);
    v8 = objc_msgSend(v5, "scheduledTimerWithTimeInterval:repeats:block:", 0, v6, 5.0);
    _Block_release(v6);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;

  }
}

double sub_10063EC58()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *p_flags;
  uint64_t *v5;
  double result;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v31;
  id v32;
  void *v33;
  char v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  id v45;
  char v46;
  uint64_t v47;
  id v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93[24];
  char v94[72];
  uint64_t v95;
  char v96[80];
  char v97[72];
  char v98[72];
  unint64_t v99;
  char v100[24];
  char v101[112];
  char v102[24];
  char v103[32];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants, v103, 1, 0);
  v3 = *(_QWORD *)v2;
  if (*(_QWORD *)v2 >> 62)
    goto LABEL_53;
  p_flags = &value witness table for SyncEvent.WillSendChanges.flags;
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v5 = (uint64_t *)(v1 + *((_QWORD *)p_flags + 370));
    swift_beginAccess(v5, v93, 0, 0);
    v7 = *v5;
    if ((unint64_t)v7 >> 62)
      goto LABEL_72;
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    return result;
  }
LABEL_5:
  while (2)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v102, 0, 0);
    v8 = (void *)static OS_os_log.realTimeSync;
    v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v9, v101);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v11 = *(_QWORD *)v2;
    v12 = sub_1004B804C((uint64_t *)&unk_1013E8BE0);
    *(_QWORD *)(inited + 56) = v12;
    v89 = (uint64_t *)v2;
    v13 = sub_100644D78();
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 32) = v11;
    v14 = (uint64_t *)(v1 + *((_QWORD *)p_flags + 370));
    swift_beginAccess(v14, v100, 1, 0);
    v83 = v14;
    v15 = *v14;
    *(_QWORD *)(inited + 96) = v12;
    *(_QWORD *)(inited + 104) = v13;
    *(_QWORD *)(inited + 72) = v15;
    v16 = v8;
    swift_bridgeObjectRetain(v11);
    v17 = swift_bridgeObjectRetain(v15);
    v18 = static os_log_type_t.default.getter(v17);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "Processing pending additions: %@ and removals: %@", 49, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v19);

    KeyPath = swift_getKeyPath(&unk_100EFF880);
    v21 = swift_getKeyPath(&unk_100EFF8A8);
    static Published.subscript.getter(&v99, v1, KeyPath, v21);
    swift_release(KeyPath);
    swift_release(v21);
    v22 = v99;
    v23 = (void *)static OS_os_log.realTimeSync;
    v86 = v9;
    v24 = swift_initStackObject(v9, v98);
    *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
    v87 = v13;
    v88 = v12;
    *(_QWORD *)(v24 + 56) = v12;
    *(_QWORD *)(v24 + 64) = v13;
    *(_QWORD *)(v24 + 32) = v22;
    v84 = v22;
    swift_bridgeObjectRetain_n(v22, 2);
    v25 = v23;
    v27 = static os_log_type_t.default.getter(v26);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v27, "Active participants (before additions): %@", 42, 2, v24);
    swift_setDeallocating(v24);
    v85 = v19;
    swift_arrayDestroy(v24 + 32, 1, v19);

    v2 = *v89;
    if (!((unint64_t)*v89 >> 62))
    {
      p_flags = *(int **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*v89, 2);
      if (!p_flags)
        goto LABEL_62;
      goto LABEL_9;
    }
    if (v2 < 0)
      v54 = *v89;
    else
      v54 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v89, 2);
    p_flags = (int *)_CocoaArrayWrapper.endIndex.getter(v54);
    if (p_flags)
    {
LABEL_9:
      v82 = v1;
      v3 = 0;
      v91 = v2;
      v92 = v2 & 0xC000000000000001;
      v90 = v2 + 32;
      while (1)
      {
        if (v92)
          v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v2);
        else
          v28 = *(id *)(v90 + 8 * v3);
        v29 = v28;
        if (__OFADD__(v3++, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        v31 = v99;
        if (v99 >> 62)
        {
          if ((v99 & 0x8000000000000000) != 0)
            v50 = v99;
          else
            v50 = v99 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v99, 2);
          v1 = _CocoaArrayWrapper.endIndex.getter(v50);
          if (!v1)
            goto LABEL_22;
        }
        else
        {
          v1 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v99, 2);
          if (!v1)
            goto LABEL_22;
        }
        if ((v31 & 0xC000000000000001) != 0)
          v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
        else
          v32 = *(id *)(v31 + 32);
        v33 = v32;
        type metadata accessor for CRLCollaborationParticipant(0);
        v34 = static NSObject.== infix(_:_:)(v33, v29);

        if ((v34 & 1) == 0)
        {
          if (v1 == 1)
            goto LABEL_22;
          if ((v31 & 0xC000000000000001) != 0)
          {
            v38 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v31);
            v39 = static NSObject.== infix(_:_:)(v38, v29);
            swift_unknownObjectRelease(v38);
            if ((v39 & 1) == 0)
            {
              if (v1 != 2)
              {
                v40 = 2;
                while (1)
                {
                  v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v31);
                  v2 = v40 + 1;
                  if (__OFADD__(v40, 1))
                    goto LABEL_51;
                  v42 = v41;
                  v43 = static NSObject.== infix(_:_:)(v41, v29);
                  swift_unknownObjectRelease(v42);
                  if ((v43 & 1) != 0)
                    goto LABEL_42;
                  ++v40;
                  v44 = v2 == v1;
                  v2 = v91;
                  if (v44)
                    goto LABEL_22;
                }
              }
              goto LABEL_22;
            }
          }
          else
          {
            v45 = *(id *)(v31 + 40);
            v46 = static NSObject.== infix(_:_:)(v45, v29);

            if ((v46 & 1) == 0)
            {
              if (v1 != 2)
              {
                v47 = 6;
                while (1)
                {
                  v2 = v47 - 3;
                  if (__OFADD__(v47 - 4, 1))
                    break;
                  v48 = *(id *)(v31 + 8 * v47);
                  v49 = static NSObject.== infix(_:_:)(v48, v29);

                  if ((v49 & 1) != 0)
                  {
LABEL_42:
                    swift_bridgeObjectRelease_n(v31, 2);
                    v2 = v91;
                    goto LABEL_11;
                  }
                  ++v47;
                  v44 = v2 == v1;
                  v2 = v91;
                  if (v44)
                    goto LABEL_22;
                }
LABEL_52:
                __break(1u);
LABEL_53:
                if (v3 < 0)
                  v52 = v3;
                else
                  v52 = v3 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v3);
                v53 = _CocoaArrayWrapper.endIndex.getter(v52);
                swift_bridgeObjectRelease(v3);
                p_flags = (_DWORD *)(&value witness table for SyncEvent.WillSendChanges + 80);
                if (!v53)
                  goto LABEL_3;
                goto LABEL_5;
              }
LABEL_22:
              swift_bridgeObjectRelease_n(v31, 2);
              v35 = v29;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
              v1 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v36 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v1 >= v36 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v1 + 1, 1);
              v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v35);
              specialized Array._endMutation()(v37);
              goto LABEL_11;
            }
          }
        }
        swift_bridgeObjectRelease_n(v31, 2);
LABEL_11:

        if ((int *)v3 == p_flags)
        {
          swift_bridgeObjectRelease_n(v2, 2);
          v51 = v99;
          v1 = v82;
          goto LABEL_63;
        }
      }
    }
LABEL_62:
    swift_bridgeObjectRelease_n(v2, 2);
    v51 = v84;
LABEL_63:
    v55 = (void *)static OS_os_log.realTimeSync;
    v56 = swift_initStackObject(v86, v97);
    *(_OWORD *)(v56 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v56 + 56) = v88;
    *(_QWORD *)(v56 + 64) = v87;
    *(_QWORD *)(v56 + 32) = v51;
    v57 = v55;
    v58 = swift_bridgeObjectRetain(v51);
    v59 = static os_log_type_t.default.getter(v58);
    sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v59, "Active participants (after additions): %@", 41, 2, v56);
    swift_setDeallocating(v56);
    swift_arrayDestroy(v56 + 32, 1, v85);

    swift_retain(v1);
    v7 = sub_10064504C((uint64_t *)&v99, v1);
    swift_release(v1);
    v60 = v99;
    if (v99 >> 62)
    {
      if ((v99 & 0x8000000000000000) != 0)
        v79 = v99;
      else
        v79 = v99 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v99);
      v2 = _CocoaArrayWrapper.endIndex.getter(v79);
      swift_bridgeObjectRelease(v60);
      if (v2 < v7)
        goto LABEL_71;
LABEL_65:
      sub_100CFE8B4(v7, v2);
      v61 = (void *)static OS_os_log.realTimeSync;
      v62 = swift_initStackObject(v86, v96);
      *(_OWORD *)(v62 + 16) = xmmword_100EF5E40;
      v63 = v99;
      *(_QWORD *)(v62 + 56) = v88;
      *(_QWORD *)(v62 + 64) = v87;
      *(_QWORD *)(v62 + 32) = v63;
      v64 = v61;
      v65 = swift_bridgeObjectRetain(v63);
      v66 = static os_log_type_t.default.getter(v65);
      sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v66, "Active participants (after removals): %@", 40, 2, v62);
      swift_setDeallocating(v62);
      swift_arrayDestroy(v62 + 32, 1, v85);

      v67 = swift_getKeyPath(&unk_100EFF880);
      v68 = swift_getKeyPath(&unk_100EFF8A8);
      v95 = v63;
      swift_retain(v1);
      swift_bridgeObjectRetain(v63);
      static Published.subscript.setter(&v95, v1, v67, v68);
      v69 = (void *)static OS_os_log.realTimeSync;
      v70 = swift_initStackObject(v86, v94);
      *(_OWORD *)(v70 + 16) = xmmword_100EF5E40;
      v71 = swift_getKeyPath(&unk_100EFF880);
      v72 = swift_getKeyPath(&unk_100EFF8A8);
      v73 = v69;
      static Published.subscript.getter(&v95, v1, v71, v72);
      swift_release(v71);
      v74 = swift_release(v72);
      v75 = v95;
      *(_QWORD *)(v70 + 56) = v88;
      *(_QWORD *)(v70 + 64) = v87;
      *(_QWORD *)(v70 + 32) = v75;
      v76 = static os_log_type_t.default.getter(v74);
      sub_100A06EBC((uint64_t)v73, &_mh_execute_header, v76, "Updating collection of active participants to : %@", 50, 2, v70);
      swift_setDeallocating(v70);
      swift_arrayDestroy(v70 + 32, *(_QWORD *)(v70 + 16), v85);

      swift_bridgeObjectRetain(v63);
      sub_100641F5C(v84, v63);
      swift_bridgeObjectRelease(v63);
      swift_bridgeObjectRelease(v84);
      v77 = *v83;
      *v83 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v77);
      v78 = *v89;
      *v89 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v63);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v78).n128_u64[0];
    }
    else
    {
      v2 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v2 >= v7)
        goto LABEL_65;
LABEL_71:
      __break(1u);
LABEL_72:
      if (v7 < 0)
        v80 = v7;
      else
        v80 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v81 = _CocoaArrayWrapper.endIndex.getter(v80);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
      if (v81)
        continue;
    }
    return result;
  }
}

void sub_10063F598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  unint64_t v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  BOOL v32;
  unint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  int64_t v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void (*v99)(uint64_t *, _QWORD);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  __n128 v119;
  uint64_t v120;
  void *v121;
  void *v122;
  Swift::String v123;
  unint64_t v124;
  Swift::String v125;
  __n128 v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  id v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  int64_t v155;
  unint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164[24];
  char v165[72];
  char v166[24];
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;

  v2 = v1;
  v141 = a1;
  v3 = sub_1004B804C(&qword_1013E1528);
  __chkstk_darwin(v3);
  v5 = (unint64_t)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v8 = (uint64_t)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD888 != -1)
    goto LABEL_177;
  while (1)
  {
    swift_beginAccess(&static OS_os_log.realTimeSync, v166, 0, 0);
    v9 = (void *)static OS_os_log.realTimeSync;
    v134 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v134, v165);
    v133 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_beginAccess(v2 + 16, v164, 0, 0);
    v11 = *(_QWORD *)(v2 + 16);
    v12 = type metadata accessor for CRLCollaborationParticipant(0);
    v13 = v9;
    swift_retain(v2);
    v14 = swift_bridgeObjectRetain(v11);
    v153 = v12;
    v15 = Array.description.getter(v14);
    v142 = v2;
    v17 = v16;
    swift_bridgeObjectRelease(v11);
    v167 = 123;
    v168 = 0xE100000000000000;
    v18._countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease(v17);
    v19 = v168;
    swift_bridgeObjectRetain(v168);
    v20._countAndFlagsBits = 125;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    swift_release(v142);
    swift_bridgeObjectRelease(v19);
    v21 = v167;
    v22 = v168;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v132 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v132;
    *(_QWORD *)(inited + 32) = v21;
    *(_QWORD *)(inited + 40) = v22;
    v2 = v142;
    v24 = static os_log_type_t.default.getter(v23);
    sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v24, "removePresence BEFORE\n%@\n", 25, 2, inited);
    swift_setDeallocating(inited);
    v131 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v131);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, v141, v158);
    v25 = type metadata accessor for CRLRealTimeEnter(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters, &v167, 33, 0);
    sub_10083DEF8(v5, v8);
    swift_endAccess(&v167);
    v139 = *(_QWORD *)(v2 + 16);
    if (!((unint64_t)v139 >> 62))
    {
      v26 = *(_QWORD *)((v139 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v139);
      v27 = v26;
      v28 = v139;
      if (!v26)
        break;
      goto LABEL_4;
    }
    v114 = v139 < 0 ? v139 : v139 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v139);
    v27 = _CocoaArrayWrapper.endIndex.getter(v114);
    v28 = v139;
    if (!v27)
      break;
LABEL_4:
    v29 = 0;
    v138 = v28 & 0xC000000000000001;
    v8 = (uint64_t)&unk_100EFF910;
    v135 = v28 + 32;
    v136 = v28 & 0xFFFFFFFFFFFFFF8;
    v152 = (char *)&type metadata for Swift.AnyObject + 8;
    v137 = v27;
    while (1)
    {
      if (v138)
      {
        v30 = v29;
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v28);
      }
      else
      {
        if (v29 >= *(_QWORD *)(v136 + 16))
          goto LABEL_176;
        v30 = v29;
        v31 = *(id *)(v135 + 8 * v29);
      }
      v151 = v31;
      v32 = __OFADD__(v30, 1);
      v33 = v30 + 1;
      if (v32)
        goto LABEL_175;
      v140 = v33;
      KeyPath = swift_getKeyPath(&unk_100EFF910);
      v35 = swift_getKeyPath(&unk_100EFF938);
      static Published.subscript.getter(&v160, v151, KeyPath, v35);
      swift_release(KeyPath);
      swift_release(v35);
      v36 = v160;
      v148 = v160;
      if ((unint64_t)v160 >> 62)
        break;
      v5 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5)
        goto LABEL_13;
LABEL_5:

      swift_bridgeObjectRelease(v36);
      v28 = v139;
      v29 = v140;
      if (v140 == v137)
        goto LABEL_182;
    }
    if (v160 < 0)
      v112 = v148;
    else
      v112 = v160 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v148);
    v113 = v112;
    v36 = v148;
    v5 = _CocoaArrayWrapper.endIndex.getter(v113);
    swift_bridgeObjectRelease(v36);
    if (!v5)
      goto LABEL_5;
LABEL_13:
    v149 = v5;
    v150 = v36 & 0xC000000000000001;
    v146 = v36 + 32;
    v147 = v36 & 0xFFFFFFFFFFFFFF8;
    v5 = 0;
LABEL_15:
    if (v150)
    {
      v37 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v36);
      v32 = __OFADD__(v5++, 1);
      if (v32)
        goto LABEL_164;
    }
    else
    {
      if (v5 >= *(_QWORD *)(v147 + 16))
        goto LABEL_173;
      v37 = (char *)*(id *)(v146 + 8 * v5);
      v32 = __OFADD__(v5++, 1);
      if (v32)
        goto LABEL_164;
    }
    v158 = v5;
    v157 = v37;
    if ((static UUID.== infix(_:_:)(&v37[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID]) & 1) == 0)
      goto LABEL_14;
    v38 = swift_getKeyPath(&unk_100EFF910);
    v39 = swift_getKeyPath(&unk_100EFF938);
    static Published.subscript.getter(&v160, v151, v38, v39);
    swift_release(v38);
    swift_release(v39);
    v40 = v160;
    v162 = v160;
    if ((unint64_t)v160 >> 62)
    {
      if (v160 < 0)
        v105 = v160;
      else
        v105 = v160 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v160);
      v5 = _CocoaArrayWrapper.endIndex.getter(v105);
      if (!v5)
      {
LABEL_75:
        swift_bridgeObjectRelease(v40);
        v45 = v162;
        if ((unint64_t)v162 >> 62)
        {
          if (v162 < 0)
            v109 = v162;
          else
            v109 = v162 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v162);
          v6 = _CocoaArrayWrapper.endIndex.getter(v109);
          swift_bridgeObjectRelease(v45);
        }
        else
        {
          v6 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
LABEL_77:
        v8 = (uint64_t)&unk_100EFF910;
LABEL_78:
        if ((unint64_t)v45 >> 62)
        {
          if (v45 < 0)
            v106 = v45;
          else
            v106 = v45 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v45);
          v5 = _CocoaArrayWrapper.endIndex.getter(v106);
          swift_bridgeObjectRelease(v45);
          if ((uint64_t)v5 < v6)
            goto LABEL_172;
        }
        else
        {
          v5 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
          if ((uint64_t)v5 < v6)
            goto LABEL_172;
        }
        sub_100CFE8C0(v6, v5);
        v68 = v162;
        v69 = swift_getKeyPath(&unk_100EFF910);
        v70 = swift_getKeyPath(&unk_100EFF938);
        v160 = v68;
        v71 = v151;
        static Published.subscript.setter(&v160, v71, v69, v70);
        v72 = swift_getKeyPath(&unk_100EFF910);
        v73 = swift_getKeyPath(&unk_100EFF938);
        static Published.subscript.getter(&v160, v71, v72, v73);
        swift_release(v72);
        swift_release(v73);
        v74 = v160;
        if ((unint64_t)v160 >> 62)
        {
          if (v160 < 0)
            v107 = v160;
          else
            v107 = v160 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v160);
          v75 = _CocoaArrayWrapper.endIndex.getter(v107);
          swift_bridgeObjectRelease(v74);
        }
        else
        {
          v75 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v74);
        if (v75)
          goto LABEL_122;
        sub_100638874(0);
        v76 = swift_getKeyPath(&unk_100EFF958);
        v77 = swift_getKeyPath(&unk_100EFF980);
        static Published.subscript.getter(&v160, v71, v76, v77);
        swift_release(v76);
        swift_release(v77);
        v144 = v160;
        v145 = v71;
        if ((v160 & 0xC000000000000001) != 0)
        {
          if (v160 < 0)
            v78 = v160;
          else
            v78 = v160 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v160);
          v79 = __CocoaSet.makeIterator()(v78);
          v80 = sub_1004B7878((unint64_t *)&unk_1013E8E30, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&protocol conformance descriptor for NSObject);
          v81 = Set.Iterator.init(_cocoa:)(&v167, v79, v153, v80);
          v2 = v167;
          v156 = v168;
          v82 = v169;
          v83 = v170;
          v5 = v171;
        }
        else
        {
          v84 = -1 << *(_BYTE *)(v160 + 32);
          v85 = *(_QWORD *)(v160 + 56);
          v156 = v160 + 56;
          v86 = ~v84;
          v87 = -v84;
          if (v87 < 64)
            v88 = ~(-1 << v87);
          else
            v88 = -1;
          v5 = v88 & v85;
          swift_bridgeObjectRetain(v160);
          v82 = v86;
          v83 = 0;
          v2 = (uint64_t)v81;
        }
        v143 = v82;
        v154 = v2 & 0x7FFFFFFFFFFFFFFFLL;
        v155 = (unint64_t)(v82 + 64) >> 6;
        while (1)
        {
          if (v2 < 0)
          {
            v91 = __CocoaSet.Iterator.next()(v81);
            if (!v91)
              goto LABEL_121;
            v92 = v91;
            v159 = v91;
            swift_unknownObjectRetain(v91);
            swift_dynamicCast(&v160, &v159, v152, v153, 7);
            v93 = (char *)v160;
            swift_unknownObjectRelease(v92);
            v8 = v83;
            v89 = v5;
            if (!v93)
              goto LABEL_121;
          }
          else
          {
            if (v5)
            {
              v89 = (v5 - 1) & v5;
              v90 = __clz(__rbit64(v5)) | (v83 << 6);
              v8 = v83;
            }
            else
            {
              v94 = v83 + 1;
              if (__OFADD__(v83, 1))
                goto LABEL_165;
              if (v94 >= v155)
                goto LABEL_121;
              v95 = *(_QWORD *)(v156 + 8 * v94);
              v8 = v83 + 1;
              if (!v95)
              {
                v8 = v83 + 2;
                if (v83 + 2 >= v155)
                  goto LABEL_121;
                v95 = *(_QWORD *)(v156 + 8 * v8);
                if (!v95)
                {
                  v8 = v83 + 3;
                  if (v83 + 3 >= v155)
                    goto LABEL_121;
                  v95 = *(_QWORD *)(v156 + 8 * v8);
                  if (!v95)
                  {
                    v8 = v83 + 4;
                    if (v83 + 4 >= v155)
                      goto LABEL_121;
                    v95 = *(_QWORD *)(v156 + 8 * v8);
                    if (!v95)
                    {
                      v8 = v83 + 5;
                      if (v83 + 5 >= v155)
                        goto LABEL_121;
                      v95 = *(_QWORD *)(v156 + 8 * v8);
                      if (!v95)
                      {
                        v8 = v83 + 6;
                        if (v83 + 6 >= v155)
                          goto LABEL_121;
                        v95 = *(_QWORD *)(v156 + 8 * v8);
                        if (!v95)
                        {
                          v96 = v83 + 7;
                          while (v155 != v96)
                          {
                            v95 = *(_QWORD *)(v156 + 8 * v96++);
                            if (v95)
                            {
                              v8 = v96 - 1;
                              goto LABEL_117;
                            }
                          }
LABEL_121:
                          sub_1004D284C(v2);
                          swift_bridgeObjectRelease(v144);
                          v2 = v142;
                          v8 = (uint64_t)&unk_100EFF910;
                          v71 = v145;
LABEL_122:
                          v101 = swift_getKeyPath(&unk_100EFF910);
                          v102 = swift_getKeyPath(&unk_100EFF938);
                          static Published.subscript.getter(&v160, v71, v101, v102);
                          swift_release(v101);
                          swift_release(v102);
                          v103 = v160;
                          if ((unint64_t)v160 >> 62)
                          {
                            if (v160 < 0)
                              v108 = v160;
                            else
                              v108 = v160 & 0xFFFFFFFFFFFFFF8;
                            swift_bridgeObjectRetain(v160);
                            v104 = _CocoaArrayWrapper.endIndex.getter(v108);
                            swift_bridgeObjectRelease(v103);
                          }
                          else
                          {
                            v104 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10);
                          }
                          swift_bridgeObjectRelease(v103);
                          v36 = v148;
                          if (!v104)
                          {
                            sub_10063E724(v71);
                            v36 = v148;
                          }
LABEL_14:

                          v5 = v158;
                          if (v158 == v149)
                            goto LABEL_5;
                          goto LABEL_15;
                        }
                      }
                    }
                  }
                }
              }
LABEL_117:
              v89 = (v95 - 1) & v95;
              v90 = __clz(__rbit64(v95)) + (v8 << 6);
            }
            v93 = (char *)*(id *)(*(_QWORD *)(v2 + 48) + 8 * v90);
            if (!v93)
              goto LABEL_121;
          }
          v97 = *(void **)&v93[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing];
          *(_QWORD *)&v93[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = 0;
          if (v97)
          {
            v98 = swift_getKeyPath(&unk_100EFF958);
            v6 = swift_getKeyPath(&unk_100EFF980);
            v99 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(&v160, v97, v98, v6);
            v100 = sub_100B2748C(v93);
            v99(&v160, 0);

            swift_release(v98);
            swift_release(v6);
            v93 = (char *)v100;
          }

          v83 = v8;
          v5 = v89;
        }
      }
    }
    else
    {
      v5 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v160);
      if (!v5)
        goto LABEL_75;
    }
    if ((v40 & 0xC000000000000001) != 0)
      v41 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v40);
    else
      v41 = (char *)*(id *)(v40 + 32);
    v42 = v41;
    v43 = static UUID.== infix(_:_:)(&v41[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID]);

    if ((v43 & 1) != 0)
    {
      v6 = 0;
    }
    else
    {
      if (v5 == 1)
        goto LABEL_75;
      v64 = 5;
      while (1)
      {
        v6 = v64 - 4;
        v65 = (v40 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v64 - 4, v40)
            : (char *)*(id *)(v40 + 8 * v64);
        v66 = v65;
        v8 = static UUID.== infix(_:_:)(&v65[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID]);

        if ((v8 & 1) != 0)
          break;
        v67 = v64 - 3;
        if (__OFADD__(v6, 1))
          goto LABEL_163;
        ++v64;
        if (v67 == v5)
          goto LABEL_75;
      }
    }
    swift_bridgeObjectRelease(v40);
    v44 = v6 + 1;
    v8 = (uint64_t)&unk_100EFF910;
    if (__OFADD__(v6, 1))
      goto LABEL_174;
    v45 = v162;
    if (!((unint64_t)v162 >> 62))
    {
      if (v44 != *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_31;
      goto LABEL_78;
    }
    if (v162 < 0)
      v110 = v162;
    else
      v110 = v162 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v162);
    v111 = _CocoaArrayWrapper.endIndex.getter(v110);
    swift_bridgeObjectRelease(v45);
    if (v44 == v111)
      goto LABEL_78;
LABEL_31:
    v46 = v6 + 5;
    while (1)
    {
      v5 = v46 - 4;
      if ((v45 & 0xC000000000000001) != 0)
      {
        v47 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v46 - 4, v45);
        goto LABEL_36;
      }
      if ((v5 & 0x8000000000000000) != 0)
        break;
      if (v5 >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_160;
      v47 = (char *)*(id *)(v45 + 8 * v46);
LABEL_36:
      v48 = v47;
      v49 = static UUID.== infix(_:_:)(&v47[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID]);

      if ((v49 & 1) == 0)
      {
        if (v5 != v6)
        {
          v50 = v162;
          if ((v162 & 0xC000000000000001) != 0)
          {
            v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v162);
            v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46 - 4, v50);
          }
          else
          {
            if (v6 < 0)
              goto LABEL_166;
            v51 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v6 >= v51)
              goto LABEL_167;
            v52 = *(id *)(v162 + 8 * v6 + 32);
            if ((v5 & 0x8000000000000000) != 0)
              goto LABEL_168;
            if (v5 >= v51)
              goto LABEL_169;
            v8 = (uint64_t)v52;
            v53 = *(id *)(v50 + 8 * v46);
          }
          v54 = v53;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v50)
            || v50 < 0
            || (v50 & 0x4000000000000000) != 0)
          {
            v50 = sub_100D14ED8(v50);
            v162 = v50;
          }
          v55 = *(void **)((v50 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
          *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v54;

          specialized Array._endMutation()(v56);
          v57 = v162;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v162)
            || v57 < 0
            || (v57 & 0x4000000000000000) != 0)
          {
            v57 = sub_100D14ED8(v57);
            v162 = v57;
          }
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_170;
          v58 = v57 & 0xFFFFFFFFFFFFFF8;
          if (v5 >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_171;
          v59 = *(void **)(v58 + 8 * v46);
          *(_QWORD *)(v58 + 8 * v46) = v8;

          specialized Array._endMutation()(v60);
        }
        v32 = __OFADD__(v6++, 1);
        if (v32)
          goto LABEL_162;
      }
      v61 = v46 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_161;
      v45 = v162;
      if ((unint64_t)v162 >> 62)
      {
        if (v162 < 0)
          v63 = v162;
        else
          v63 = v162 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v162);
        v62 = _CocoaArrayWrapper.endIndex.getter(v63);
        swift_bridgeObjectRelease(v45);
      }
      else
      {
        v62 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      ++v46;
      if (v61 == v62)
        goto LABEL_77;
    }
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    swift_once(&qword_1013DD888, sub_100A05DE4);
  }
LABEL_182:
  swift_bridgeObjectRelease(v28);
  v115 = (void *)static OS_os_log.realTimeSync;
  v116 = swift_initStackObject(v134, &v163);
  *(_OWORD *)(v116 + 16) = v133;
  v117 = *(_QWORD *)(v2 + 16);
  swift_retain(v2);
  v118 = v115;
  v119 = swift_bridgeObjectRetain(v117);
  v120 = Array.description.getter(v119);
  v122 = v121;
  swift_bridgeObjectRelease(v117);
  v160 = 123;
  v161 = 0xE100000000000000;
  v123._countAndFlagsBits = v120;
  v123._object = v122;
  String.append(_:)(v123);
  swift_bridgeObjectRelease(v122);
  v124 = v161;
  swift_bridgeObjectRetain(v161);
  v125._countAndFlagsBits = 125;
  v125._object = (void *)0xE100000000000000;
  String.append(_:)(v125);
  swift_release(v2);
  v126 = swift_bridgeObjectRelease(v124);
  v127 = v160;
  v128 = v161;
  v129 = v132;
  *(_QWORD *)(v116 + 56) = &type metadata for String;
  *(_QWORD *)(v116 + 64) = v129;
  *(_QWORD *)(v116 + 32) = v127;
  *(_QWORD *)(v116 + 40) = v128;
  v130 = static os_log_type_t.default.getter(v126);
  sub_100A06EBC((uint64_t)v118, &_mh_execute_header, v130, "removePresence AFTER\n%@\n", 24, 2, v116);
  swift_setDeallocating(v116);
  swift_arrayDestroy(v116 + 32, 1, v131);

}

void sub_1006404D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  BOOL v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  __n128 v78;
  uint64_t v79;
  void (*v80)(char *, char *, unint64_t, __n128);
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t, unint64_t);
  double *v83;
  char v84;
  char *v85;
  char v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  double *v108;
  void (*v109)(unint64_t, uint64_t, uint64_t);
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  id v127;
  id v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  __n128 v134;
  char v135;
  char *v136;
  uint64_t v137;
  void *v138;
  unint64_t v139;
  uint64_t v140;
  int64_t v141;
  unint64_t v142;
  int64_t v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  char *v150;
  __n128 v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t, __n128);
  uint64_t v154;
  void (*v155)(char *, uint64_t, uint64_t, uint64_t);
  char *v156;
  char v157;
  char *v158;
  char v159;
  void (*v160)(char *, uint64_t);
  __n128 v161;
  void (*v162)(char *, uint64_t, __n128);
  void *v163;
  NSString v164;
  id v165;
  id v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  id v171;
  void *v172;
  uint64_t v173;
  uint64_t inited;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  id v187;
  uint64_t v188;
  int64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  double *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  double *v205;
  unint64_t v206;
  uint64_t v207;
  id v208;
  unint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  int64_t v218;
  uint64_t v219;
  uint64_t v220;
  double *v221;
  uint64_t *v222;
  __int128 v223;
  uint64_t v224;
  int64_t v225;
  char *v226;
  char *v227;
  char *v228;
  double *v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char v234[8];
  char v235[8];
  char v236[8];
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  double *v240;

  v203 = a3;
  v207 = a2;
  v202 = type metadata accessor for Date(0);
  v201 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v200 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v230 = (char *)&v197 - v10;
  v216 = type metadata accessor for Participant(0);
  v215 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v217 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v211 = (char *)&v197 - v13;
  __chkstk_darwin(v14);
  v231 = (char *)&v197 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v197 - v17;
  v213 = 0;
  v233 = type metadata accessor for UUID(0);
  v19 = *(char **)(v233 - 8);
  __chkstk_darwin(v233);
  v199 = (char *)&v197 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v198 = (char *)&v197 - v22;
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  __chkstk_darwin(v25);
  v228 = (char *)&v197 - v26;
  __chkstk_darwin(v27);
  v212 = (char *)&v197 - v28;
  __chkstk_darwin(v29);
  v229 = (double *)((char *)&v197 - v30);
  __chkstk_darwin(v31);
  v232 = (char *)&v197 - v32;
  v33 = *(_QWORD *)(a1 + 16);
  v214 = a1;
  v210 = v18;
  if (v33)
  {
    v240 = _swiftEmptyArrayStorage;
    sub_100600724(0, v33, 0);
    v34 = sub_100CE0488(a1);
    v36 = v35;
    v38 = v37 & 1;
    v227 = (char *)(a1 + 56);
    v39 = a1;
    while ((v34 & 0x8000000000000000) == 0 && v34 < 1 << *(_BYTE *)(v39 + 32))
    {
      if (((*(_QWORD *)&v227[((unint64_t)v34 >> 3) & 0xFFFFFFFFFFFFF8] >> v34) & 1) == 0)
        goto LABEL_33;
      if (*(_DWORD *)(v39 + 36) != (_DWORD)v36)
        goto LABEL_34;
      v40 = v215;
      v41 = v216;
      (*(void (**)(char *, uint64_t, uint64_t))(v215 + 16))(v18, *(_QWORD *)(v39 + 48) + *(_QWORD *)(v215 + 72) * v34, v216);
      v42 = (uint64_t)v231;
      v43.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v40 + 32))(v231, v18, v41);
      Participant.id.getter(v43);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
      v3 = v240;
      if ((swift_isUniquelyReferenced_nonNull_native(v240) & 1) == 0)
      {
        sub_100600724(0, *((_QWORD *)v3 + 2) + 1, 1);
        v3 = v240;
      }
      v45 = *((_QWORD *)v3 + 2);
      v44 = *((_QWORD *)v3 + 3);
      if (v45 >= v44 >> 1)
      {
        sub_100600724(v44 > 1, v45 + 1, 1);
        v3 = v240;
      }
      *((_QWORD *)v3 + 2) = v45 + 1;
      (*((void (**)(unint64_t, char *))v19 + 4))((unint64_t)v3+ ((v19[80] + 32) & ~(unint64_t)v19[80])+ *((_QWORD *)v19 + 9) * v45, v232);
      v240 = v3;
      v39 = v214;
      v46 = sub_1005C3B08(v34, v36, v38 & 1, v214);
      v34 = v46;
      v36 = v47;
      v38 = v48 & 1;
      --v33;
      v18 = v210;
      if (!v33)
      {
        sub_100503494(v46, v47, v48 & 1);
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    if (v36 < 0)
      v63 = v36;
    else
      v63 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v50 = _CocoaArrayWrapper.endIndex.getter(v63);
    if (!v50)
      goto LABEL_39;
LABEL_16:
    if (v50 < 1)
      goto LABEL_179;
    v51 = 0;
    v232 = (char *)(v36 & 0xC000000000000001);
    v52 = v36;
    do
    {
      if (v232)
        v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v36);
      else
        v55 = *(id *)(v36 + 8 * v51 + 32);
      v56 = v55;
      KeyPath = swift_getKeyPath(aP_13);
      v58 = swift_getKeyPath(aP_14);
      static Published.subscript.getter(&v237, v56, KeyPath, v58);
      swift_release(KeyPath);
      swift_release(v58);
      if ((unint64_t)v237 >> 62)
      {
        if (v237 < 0)
          v61 = v237;
        else
          v61 = v237 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v237);
        v59 = _CocoaArrayWrapper.endIndex.getter(v61);
        swift_bridgeObjectRelease();
      }
      else
      {
        v59 = *(_QWORD *)((v237 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v59)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v60);
        v53 = *(_QWORD *)(v238 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v53);
        v54 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v56);
        specialized ContiguousArray._endMutation()(v54);
      }
      else
      {

      }
      v18 = v217;
      v33 = (unint64_t)v212;
      ++v51;
      v36 = v52;
    }
    while (v50 != v51);
    swift_bridgeObjectRelease();
    v62 = v238;
    goto LABEL_40;
  }
  v3 = _swiftEmptyArrayStorage;
LABEL_14:
  v49 = v220;
  swift_beginAccess(v220 + 16, &v240, 0, 0);
  v36 = *(_QWORD *)(v49 + 16);
  v238 = (uint64_t)_swiftEmptyArrayStorage;
  v18 = v217;
  v33 = (unint64_t)v212;
  if ((unint64_t)v36 >> 62)
    goto LABEL_35;
  v50 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v36);
  if (v50)
    goto LABEL_16;
LABEL_39:
  swift_bridgeObjectRelease();
  v62 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_40:
  v239 = (unint64_t)_swiftEmptyArrayStorage;
  if ((v62 & 0x8000000000000000) != 0 || (v62 & 0x4000000000000000) != 0)
    goto LABEL_95;
  v64 = *(_QWORD *)(v62 + 16);
LABEL_43:
  v222 = (uint64_t *)v8;
  v232 = v19;
  if (v64)
  {
    v65 = 0;
    v206 = v62 & 0xC000000000000001;
    v197 = (double *)(v62 + 32);
    v221 = v3;
    v204 = v64;
    v205 = (double *)v62;
    do
    {
      if (v206)
      {
        v66 = v65;
        v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v65, v62);
        v18 = v230;
        v67 = __OFADD__(v66, 1);
        v68 = v66 + 1;
        if (v67)
          goto LABEL_93;
      }
      else
      {
        v18 = v230;
        if (v65 >= *(_QWORD *)(v62 + 16))
          goto LABEL_94;
        v69 = v65;
        v33 = (unint64_t)*(id *)&v197[v65];
        v67 = __OFADD__(v69, 1);
        v68 = v69 + 1;
        if (v67)
          goto LABEL_93;
      }
      v209 = v68;
      v70 = swift_getKeyPath(aP_13, v197);
      v71 = swift_getKeyPath(aP_14);
      static Published.subscript.getter(&v238, v33, v70, v71);
      swift_release(v70);
      swift_release(v71);
      v72 = v238;
      v208 = (id)v33;
      if ((unint64_t)v238 >> 62)
      {
        if (v238 < 0)
          v91 = v238;
        else
          v91 = v238 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v238);
        v73 = _CocoaArrayWrapper.endIndex.getter(v91);
        swift_bridgeObjectRelease();
      }
      else
      {
        v73 = *(_QWORD *)((v238 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v62 = v233;
      if (v73)
      {
        v33 = 0;
        v74 = v72 & 0xC000000000000001;
        v219 = v72 & 0xFFFFFFFFFFFFFF8;
        v218 = v72 + 32;
        v225 = v72;
        v224 = v73;
        *(_QWORD *)&v223 = v72 & 0xC000000000000001;
        while (1)
        {
          if (v74)
          {
            v75 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v72);
            v67 = __OFADD__(v33++, 1);
            if (v67)
              goto LABEL_91;
          }
          else
          {
            if (v33 >= *(_QWORD *)(v219 + 16))
              goto LABEL_92;
            v75 = (char *)*(id *)(v218 + 8 * v33);
            v67 = __OFADD__(v33++, 1);
            if (v67)
            {
LABEL_91:
              __break(1u);
LABEL_92:
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              swift_bridgeObjectRetain(v62);
              v64 = _CocoaArrayWrapper.endIndex.getter(v103);
              swift_release(v62);
              goto LABEL_43;
            }
          }
          if (v75[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] == 1)
          {

            if (v33 == v73)
              break;
          }
          else
          {
            v227 = v75;
            v231 = &v75[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
            v76 = *((_QWORD *)v3 + 2);
            if (v76)
            {
              v77 = (char *)v3 + ((v19[80] + 32) & ~(unint64_t)v19[80]);
              v78 = swift_bridgeObjectRetain(v3);
              v79 = *((_QWORD *)v19 + 9);
              v80 = (void (*)(char *, char *, unint64_t, __n128))*((_QWORD *)v19 + 2);
              while (1)
              {
                v81 = v230;
                v80(v230, v77, v62, v78);
                v82 = (void (*)(char *, uint64_t, uint64_t, unint64_t))*((_QWORD *)v19 + 7);
                v82(v81, 0, 1, v62);
                if ((*((unsigned int (**)(char *, uint64_t, unint64_t))v19 + 6))(v81, 1, v62) == 1)
                  break;
                v83 = v229;
                (*((void (**)(double *, char *, unint64_t))v19 + 4))(v229, v81, v62);
                sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
                v84 = dispatch thunk of static Equatable.== infix(_:_:)(v83, v231);
                v85 = v19;
                v86 = v84;
                (*((void (**)(double *, unint64_t))v85 + 1))(v83, v62);
                if ((v86 & 1) != 0)
                {

                  v3 = v221;
                  swift_bridgeObjectRelease();
                  v8 = (char *)v222;
                  v62 = v233;
                  v19 = v232;
                  v18 = v230;
                  v72 = v225;
                  goto LABEL_76;
                }
                v77 += v79;
                --v76;
                v62 = v233;
                v19 = v232;
                if (!v76)
                {
                  v18 = v230;
                  goto LABEL_71;
                }
              }
            }
            else
            {
              swift_bridgeObjectRetain(v3);
              v82 = (void (*)(char *, uint64_t, uint64_t, unint64_t))*((_QWORD *)v19 + 7);
LABEL_71:
              v82(v18, 1, 1, v62);
            }
            v3 = v221;
            swift_bridgeObjectRelease();
            sub_10063F598((uint64_t)v231);
            v87 = v227;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
            v89 = *(_QWORD *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v88 = *(_QWORD *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x18);
            v8 = (char *)v222;
            v72 = v225;
            if (v89 >= v88 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
            v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
            specialized Array._endMutation()(v90);

            v62 = v233;
            v18 = v230;
LABEL_76:
            v73 = v224;
            v74 = v223;
            if (v33 == v224)
              break;
          }
        }
      }

      swift_bridgeObjectRelease();
      v65 = v209;
      v18 = v217;
      v33 = (unint64_t)v212;
      v62 = (unint64_t)v205;
    }
    while (v209 != v204);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v92 = swift_release(v62).n128_u64[0];
  v93 = swift_getKeyPath(byte_100EFF880, v92);
  v94 = swift_getKeyPath(byte_100EFF8A8);
  static Published.subscript.getter(&v238, v220, v93, v94);
  swift_release(v93);
  swift_release(v94);
  v95 = v238;
  v238 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v95 >> 62)
  {
    if (v95 < 0)
      v104 = v95;
    else
      v104 = v95 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v95);
    v96 = _CocoaArrayWrapper.endIndex.getter(v104);
    if (v96)
      goto LABEL_84;
LABEL_100:
    swift_bridgeObjectRelease_n(v95, 2);
    v102 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_101;
  }
  v96 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v95);
  if (!v96)
    goto LABEL_100;
LABEL_84:
  if (v96 < 1)
    goto LABEL_180;
  v97 = 0;
  v18 = v217;
  do
  {
    if ((v95 & 0xC000000000000001) != 0)
      v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v97, v95);
    else
      v98 = *(id *)(v95 + 8 * v97 + 32);
    v99 = v98;
    ++v97;
    v100 = swift_getKeyPath(aP_13, v197);
    v101 = swift_getKeyPath(aP_14);
    static Published.subscript.getter(&v237, v99, v100, v101);

    swift_release(v100);
    swift_release(v101);
    sub_10061FCF8(v237);
    v33 = (unint64_t)v212;
  }
  while (v96 != v97);
  swift_bridgeObjectRelease_n(v95, 2);
  v102 = v238;
LABEL_101:
  v105 = v232;
  if ((unint64_t)v102 >> 62)
  {
    if (v102 < 0)
      v114 = v102;
    else
      v114 = v102 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v102);
    v115 = v114;
    v105 = v232;
    v106 = _CocoaArrayWrapper.endIndex.getter(v115);
    swift_bridgeObjectRelease();
    if (v106)
      goto LABEL_103;
  }
  else
  {
    v106 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v106)
    {
LABEL_103:
      v238 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100600724(0, v106 & ~(v106 >> 63), 0);
      if (v106 < 0)
        goto LABEL_181;
      v107 = 0;
      v108 = (double *)v238;
      v109 = (void (*)(unint64_t, uint64_t, uint64_t))*((_QWORD *)v105 + 2);
      v110 = v233;
      do
      {
        v109(v33, *(_QWORD *)(v102 + 8 * v107 + 32) + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID, v110);
        v238 = (uint64_t)v108;
        v111 = v33;
        v113 = *((_QWORD *)v108 + 2);
        v112 = *((_QWORD *)v108 + 3);
        if (v113 >= v112 >> 1)
        {
          sub_100600724(v112 > 1, v113 + 1, 1);
          v110 = v233;
          v108 = (double *)v238;
        }
        ++v107;
        *((_QWORD *)v108 + 2) = v113 + 1;
        (*((void (**)(unint64_t, unint64_t, uint64_t))v105 + 4))((unint64_t)v108+ ((v105[80] + 32) & ~(unint64_t)v105[80])+ *((_QWORD *)v105 + 9) * v113, v111, v110);
        v33 = v111;
      }
      while (v106 != v107);
      swift_bridgeObjectRelease();
      v8 = (char *)v222;
      v18 = v217;
      goto LABEL_114;
    }
  }
  swift_bridgeObjectRelease();
  v108 = _swiftEmptyArrayStorage;
LABEL_114:
  v116 = *(_QWORD *)(v214 + 56);
  v224 = v214 + 56;
  v117 = 1 << *(_BYTE *)(v214 + 32);
  v118 = -1;
  if (v117 < 64)
    v118 = ~(-1 << v117);
  v119 = v118 & v116;
  v120 = (uint64_t *)(v220 + 24);
  swift_bridgeObjectRetain(v214);
  v222 = v120;
  swift_beginAccess(v120, &v238, 0, 0);
  v121 = 0;
  v225 = (unint64_t)(v117 + 63) >> 6;
  v223 = xmmword_100EF5A10;
  v229 = v108;
  while (1)
  {
    if (v119)
    {
      v231 = (char *)((v119 - 1) & v119);
      v230 = v121;
      v139 = __clz(__rbit64(v119)) | ((_QWORD)v121 << 6);
      v140 = v214;
      goto LABEL_134;
    }
    v67 = __OFADD__(v121, 1);
    v141 = (int64_t)(v121 + 1);
    if (v67)
      break;
    if (v141 >= v225)
      goto LABEL_173;
    v142 = *(_QWORD *)(v224 + 8 * v141);
    if (!v142)
    {
      v143 = v141 + 1;
      if (v141 + 1 >= v225)
        goto LABEL_173;
      v142 = *(_QWORD *)(v224 + 8 * v143);
      if (!v142)
      {
        v143 = v141 + 2;
        if (v141 + 2 >= v225)
        {
LABEL_173:
          swift_bridgeObjectRelease();
          v195 = v214;
LABEL_174:
          swift_release(v195);
          return;
        }
        v142 = *(_QWORD *)(v224 + 8 * v143);
        if (!v142)
        {
          v189 = v141 + 3;
          v140 = v214;
          if (v141 + 3 >= v225)
          {
LABEL_175:
            v196 = v214;
            swift_bridgeObjectRelease();
            v195 = v196;
            goto LABEL_174;
          }
          v142 = *(_QWORD *)(v224 + 8 * v189);
          if (!v142)
          {
            while (1)
            {
              v141 = v189 + 1;
              if (__OFADD__(v189, 1))
                goto LABEL_178;
              if (v141 >= v225)
                goto LABEL_175;
              v142 = *(_QWORD *)(v224 + 8 * v141);
              ++v189;
              if (v142)
                goto LABEL_133;
            }
          }
          v141 += 3;
          goto LABEL_133;
        }
      }
      v141 = v143;
    }
    v140 = v214;
LABEL_133:
    v231 = (char *)((v142 - 1) & v142);
    v230 = (char *)v141;
    v139 = __clz(__rbit64(v142)) + (v141 << 6);
LABEL_134:
    v144 = v215;
    v145 = *(_QWORD *)(v140 + 48) + *(_QWORD *)(v215 + 72) * v139;
    v146 = v211;
    v147 = v216;
    v227 = *(char **)(v215 + 16);
    ((void (*)(char *, unint64_t, uint64_t))v227)(v211, v145, v216);
    v148.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v144 + 32))(v18, v146, v147);
    Participant.id.getter(v148);
    v149 = *((_QWORD *)v108 + 2);
    if (v149)
    {
      v150 = (char *)v108 + ((v105[80] + 32) & ~(unint64_t)v105[80]);
      v151 = swift_bridgeObjectRetain(v108);
      v152 = *((_QWORD *)v105 + 9);
      v153 = (void (*)(char *, char *, uint64_t, __n128))*((_QWORD *)v105 + 2);
      v154 = v233;
      while (1)
      {
        v153(v8, v150, v154, v151);
        v155 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v105 + 7);
        v155(v8, 0, 1, v154);
        if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v105 + 6))(v8, 1, v154) == 1)
          break;
        v156 = v226;
        (*((void (**)(char *, char *, uint64_t))v105 + 4))(v226, v8, v154);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v157 = dispatch thunk of static Equatable.== infix(_:_:)(v156, v228);
        v158 = v105;
        v159 = v157;
        v160 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
        v160(v156, v154);
        if ((v159 & 1) != 0)
        {
          v108 = v229;
          v186 = swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t, __n128))v160)(v228, v233, v186);
          v18 = v217;
          v105 = v232;
          goto LABEL_121;
        }
        v150 += v152;
        --v149;
        v154 = v233;
        v105 = v232;
        if (!v149)
          goto LABEL_141;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v108);
      v155 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v105 + 7);
      v154 = v233;
LABEL_141:
      v155(v8, 1, 1, v154);
    }
    v161 = swift_bridgeObjectRelease();
    v162 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v105 + 1);
    v162(v228, v154, v161);
    v163 = (void *)objc_opt_self(TUHandle);
    v18 = v217;
    Participant.handle.getter(v163);
    v164 = String._bridgeToObjectiveC()();
    v165 = objc_msgSend(v163, "normalizedHandleWithDestinationID:", v164, swift_bridgeObjectRelease().n128_f64[0]);

    if (!v165)
    {
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, &v237, 0, 0);
      v172 = (void *)static OS_os_log.realTimeSync;
      v173 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v173, v236);
      *(_OWORD *)(inited + 16) = v223;
      v175 = v172;
      v176 = Participant.handle.getter(v175);
      v178 = v177;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v179 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v179;
      *(_QWORD *)(inited + 32) = v176;
      *(_QWORD *)(inited + 40) = v178;
      v18 = v217;
      v180 = v210;
      v181 = v216;
      ((void (*)(char *, char *, uint64_t))v227)(v210, v217, v216);
      v182 = String.init<A>(reflecting:)(v180, v181);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v179;
      *(_QWORD *)(inited + 72) = v182;
      *(_QWORD *)(inited + 80) = v183;
      v184 = static os_log_type_t.error.getter(v182);
      sub_100A06EBC((uint64_t)v175, &_mh_execute_header, v184, "Cannot generate TUHandle from Participant's handle: %@, participant: %@", 71, 2, inited);
      swift_setDeallocating(inited);
      v185 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v185);

      goto LABEL_120;
    }
    v166 = v165;
    swift_bridgeObjectRetain(v207);
    v167 = v213;
    v169 = (uint64_t)sub_100644BEC(v168, v166);
    v213 = v167;
    swift_bridgeObjectRelease();

    if ((unint64_t)v169 >> 62)
    {
      if (v169 < 0)
        v190 = v169;
      else
        v190 = v169 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v169);
      v191 = _CocoaArrayWrapper.endIndex.getter(v190);
      swift_bridgeObjectRelease();
      v18 = v217;
      if (v191 >= 2)
      {
LABEL_117:
        swift_bridgeObjectRelease();
        v122 = *v222;
        __chkstk_darwin(v123);
        *(&v197 - 2) = (double *)v18;
        swift_bridgeObjectRetain(v122);
        v124 = v213;
        sub_100C9D0D4((uint64_t (*)(id *))sub_100644D5C, (uint64_t)(&v197 - 4), v122);
        v126 = v125;
        swift_bridgeObjectRelease();
        v213 = v124;
        if (!v126)
        {
          if (qword_1013DD888 != -1)
            swift_once(&qword_1013DD888, sub_100A05DE4);
          swift_beginAccess(&static OS_os_log.realTimeSync, v234, 0, 0);
          v187 = (id)static OS_os_log.realTimeSync;
          v188 = static os_log_type_t.error.getter(v187);
          sub_100A06EBC((uint64_t)v187, &_mh_execute_header, v188, "Found multiple CKShare.Participants that matched the Participant's handle, and we were unable to find which one to use.", 119, 2, (uint64_t)_swiftEmptyArrayStorage);

          v18 = v217;
          goto LABEL_120;
        }
        swift_bridgeObjectRelease();
        v127 = *(id *)&v126[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];

        v18 = v217;
        goto LABEL_119;
      }
      swift_bridgeObjectRetain(v169);
      v192 = _CocoaArrayWrapper.endIndex.getter(v190);
      swift_bridgeObjectRelease();
      if (!v192)
      {
LABEL_169:
        swift_bridgeObjectRelease();
        if (qword_1013DD888 != -1)
          swift_once(&qword_1013DD888, sub_100A05DE4);
        swift_beginAccess(&static OS_os_log.realTimeSync, v235, 0, 0);
        v193 = (id)static OS_os_log.realTimeSync;
        v194 = static os_log_type_t.error.getter(v193);
        sub_100A06EBC((uint64_t)v193, &_mh_execute_header, v194, "Unable to find a CKShare.Participant in our session's participants that matched the Participant's handle", 104, 2, (uint64_t)_swiftEmptyArrayStorage);

        goto LABEL_120;
      }
    }
    else
    {
      v170 = *(_QWORD *)((v169 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v170 > 1)
        goto LABEL_117;
      if (!v170)
        goto LABEL_169;
    }
    if ((v169 & 0xC000000000000001) != 0)
    {
      v171 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v169);
    }
    else
    {
      if (!*(_QWORD *)((v169 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_177;
      v171 = *(id *)(v169 + 32);
    }
    v127 = v171;
    swift_bridgeObjectRelease();
LABEL_119:
    v128 = v127;
    v129 = (uint64_t)v198;
    v131 = Participant.id.getter(v130);
    v132 = (uint64_t)v200;
    Date.init()(v131);
    v133 = v199;
    Participant.id.getter(v134);
    v135 = static UUID.== infix(_:_:)(v133);
    v136 = v133;
    v137 = v233;
    ((void (*)(char *, uint64_t))v162)(v136, v233);
    v138 = (void *)sub_10063DAEC(v128, v129, v132, v135 & 1, 1);

    (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v132, v202);
    ((void (*)(uint64_t, uint64_t))v162)(v129, v137);
    v105 = v232;
LABEL_120:
    v108 = v229;
LABEL_121:
    v121 = v230;
    (*(void (**)(char *, uint64_t))(v215 + 8))(v18, v216);
    v119 = (unint64_t)v231;
  }
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
}

uint64_t sub_100641C6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  Participant.id.getter(v4);
  v8 = sub_10062158C((uint64_t)v6, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8 & 1;
}

void sub_100641D10(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _QWORD v29[3];
  BOOL v30;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EFF880);
  v5 = swift_getKeyPath(&unk_100EFF8A8);
  static Published.subscript.getter(v29, a2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v29[0];
  v7 = v3;
  v8 = sub_100643F78(v6, (uint64_t)v7);
  swift_bridgeObjectRelease(v6);

  if (v8)
  {
    v9 = objc_msgSend(v7, "permission") == (id)2;
    v10 = swift_getKeyPath(&unk_100EFF8C8);
    v11 = swift_getKeyPath(&unk_100EFF8F0);
    LOBYTE(v29[0]) = v9;
    static Published.subscript.setter(v29, v8, v10, v11);
  }
  v12 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants, v29, 0, 0);
  v13 = *v12;
  v14 = v7;
  swift_bridgeObjectRetain(v13);
  v16 = sub_100643F78(v15, (uint64_t)v14);
  swift_bridgeObjectRelease(v13);

  if (v16)
  {
    v17 = objc_msgSend(v14, "permission") == (id)2;
    v18 = swift_getKeyPath(&unk_100EFF8C8);
    v19 = swift_getKeyPath(&unk_100EFF8F0);
    v28[0] = v17;
    static Published.subscript.setter(v28, v16, v18, v19);
  }
  v20 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
  swift_beginAccess(v20, v28, 0, 0);
  v21 = *v20;
  v22 = v14;
  swift_bridgeObjectRetain(v21);
  v24 = sub_100643F78(v23, (uint64_t)v22);
  swift_bridgeObjectRelease(v21);

  if (v24)
  {
    v25 = objc_msgSend(v22, "permission") == (id)2;
    v26 = swift_getKeyPath(&unk_100EFF8C8);
    v27 = swift_getKeyPath(&unk_100EFF8F0);
    v30 = v25;
    static Published.subscript.setter(&v30, v24, v26, v27);
  }
}

void sub_100641F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  _BYTE v25[64];
  _BYTE v26[24];

  v3 = v2;
  v6 = type metadata accessor for CRLCollaborationParticipantCollection(0);
  v7 = sub_1004B7878(&qword_1013E8E68, type metadata accessor for CRLCollaborationParticipantCollection, (uint64_t)&unk_100EFF790);
  v8 = ObservableObject<>.objectWillChange.getter(v6, v7);
  ObservableObjectPublisher.send()();
  swift_release(v8);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v26, 0, 0);
  v9 = (id)static OS_os_log.realTimeSync;
  v11 = static os_log_type_t.default.getter(v10);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "Posting notification of active participant changes.", 51, 2, (uint64_t)_swiftEmptyArrayStorage);

  v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v13 = sub_1004B804C((uint64_t *)&unk_1013E8E80);
  inited = swift_initStackObject(v13, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (qword_1013DCB90 != -1)
    swift_once(&qword_1013DCB90, sub_100638740);
  v15 = (void *)qword_10147ECF8;
  *(_QWORD *)(inited + 32) = qword_10147ECF8;
  *(_QWORD *)(inited + 40) = a1;
  v16 = qword_1013DCB98;
  v17 = v15;
  swift_bridgeObjectRetain(a1);
  if (v16 != -1)
    swift_once(&qword_1013DCB98, sub_100638774);
  v18 = (void *)qword_10147ED00;
  *(_QWORD *)(inited + 48) = qword_10147ED00;
  *(_QWORD *)(inited + 56) = a2;
  v19 = v18;
  swift_bridgeObjectRetain(a2);
  v20 = sub_1008D6AF4(inited);
  if (qword_1013DCB80 != -1)
    swift_once(&qword_1013DCB80, sub_1006386D8);
  v21 = qword_10147ECE8;
  sub_100C9C340(v20);
  v23 = v22;
  swift_bridgeObjectRelease(v20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "postNotificationName:object:userInfo:", v21, v3, isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

}

_BYTE *sub_1006421D0()
{
  char *v0;
  char *v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v0 = sub_100642358();
  if (!v0)
    return 0;
  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_100EFF910);
  v3 = swift_getKeyPath(&unk_100EFF938);
  static Published.subscript.getter(&v13, v1, KeyPath, v3);

  swift_release(KeyPath);
  swift_release(v3);
  v4 = v13;
  if (v13 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v13);
  if (!v5)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v4, 2);
    return 0;
  }
  while (1)
  {
    v6 = (v4 & 0xC000000000000001) != 0
       ? (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4)
       : *(id *)(v4 + 32);
    v7 = v6;
    if ((v6[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] & 1) != 0)
      break;

    if (v5 != 1)
    {
      v8 = 5;
      while (1)
      {
        v9 = (v4 & 0xC000000000000001) != 0
           ? (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v4)
           : *(id *)(v4 + 8 * v8);
        v7 = v9;
        v10 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
          break;
        if ((v9[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] & 1) != 0)
          goto LABEL_7;

        ++v8;
        if (v10 == v5)
          goto LABEL_16;
      }
      __break(1u);
LABEL_20:
      v12 = v4 < 0 ? v4 : v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (v5)
        continue;
    }
    goto LABEL_16;
  }
LABEL_7:
  swift_bridgeObjectRelease_n(v4, 2);
  return v7;
}

char *sub_100642358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  char v20[24];

  swift_beginAccess(v0 + 16, v20, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  if ((unint64_t)v1 >> 62)
    goto LABEL_21;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 16), 2);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v3 = 4;
    while (1)
    {
      v4 = (v1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, v1)
         : (char *)*(id *)(v1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
      v9 = v8;
      v10 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
      v11 = objc_msgSend(v10, "userRecordID");

      if (v11)
      {
        v12 = objc_msgSend(v11, "recordName");

        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v15 = v14;

        if (v7 == v13 && v9 == v15)
        {
          swift_bridgeObjectRelease_n(v1, 2);
LABEL_19:
          swift_bridgeObjectRelease_n(v9, 2);
          return v5;
        }
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v13, v15, 0);
        swift_bridgeObjectRelease(v9);
        swift_bridgeObjectRelease(v15);
        if ((v17 & 1) != 0)
        {
          v9 = v1;
          goto LABEL_19;
        }

      }
      else
      {

        swift_bridgeObjectRelease(v9);
      }
      ++v3;
      if (v6 == v2)
        goto LABEL_25;
    }
    __break(1u);
LABEL_21:
    if (v1 < 0)
      v18 = v1;
    else
      v18 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v1, 2);
  }
LABEL_25:
  swift_bridgeObjectRelease_n(v1, 2);
  return 0;
}

void sub_100642568(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v11[24];

  swift_beginAccess(v1 + 16, v11, 0, 0);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = a1;
  swift_bridgeObjectRetain(v3);
  v6 = (uint64_t)sub_100644184(v5, (_BOOL8)v4);
  swift_bridgeObjectRelease(v3);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v8 = v6;
    else
      v8 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v6);
    if (v9 > 1)
      goto LABEL_3;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7 > 1)
    {
LABEL_3:
      swift_bridgeObjectRelease(v6);
      sub_100757E04(&_mh_execute_header, (uint64_t)"participant(with:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2, 852, "Multiple participants matching given user identity", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"participant(with:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2u, 852, (uint64_t)"Multiple participants matching given user identity", 50, 2u);
      return;
    }
  }
  if (!v7)
    goto LABEL_13;
  if ((v6 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v6 + 32);
LABEL_13:
    swift_bridgeObjectRelease(v6);
    return;
  }
  __break(1u);
}

void sub_100642720(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *Strong;
  char *v18;
  char *v19;
  char v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t KeyPath;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  __n128 v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  char v68[80];
  _QWORD v69[4];

  v3 = v2;
  v6 = type metadata accessor for IndexSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - v11;
  v13 = sub_100642EE8();
  if (!v13)
    goto LABEL_17;
  v15 = v13;
  v16 = v14;
  if (a1 > 9)
  {

LABEL_17:
    v33 = sub_1004B804C(&qword_1013E8E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a2, 1, 1, v33);
    return;
  }
  v66 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex];
  v67 = a1;
  if (v66 != a1)
  {
    *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex] = v67;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v14[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_owner]);
    objc_msgSend(Strong, "updateCachedCollaboratorColors");

  }
  v18 = sub_1006421D0();
  if (v18)
  {
    v19 = v18;
    if ((static Date.< infix(_:_:)(&v16[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime], &v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime]) & 1) != 0)
    {
      v65 = v19;
      v20 = sub_10063A9F4();
      v21 = v65;
      v22 = *(_QWORD *)&v65[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex];
      if ((v20 & 1) != 0)
      {
        v23 = v67;
        if (v22 != v67)
        {
          *(_QWORD *)&v65[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex] = v67;
          v24 = (void *)swift_unknownObjectWeakLoadStrong(&v21[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_owner]);
          objc_msgSend(v24, "updateCachedCollaboratorColors");

          v25 = v23;
          goto LABEL_10;
        }
        goto LABEL_32;
      }
      v23 = v67;
      if (v22 != v67)
      {
LABEL_32:

        goto LABEL_41;
      }
      v63 = OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex;
      v39 = sub_100642358();
      if (!v39)
        goto LABEL_34;
      v40 = v39;
      KeyPath = swift_getKeyPath(&unk_100EFF910);
      v42 = swift_getKeyPath(&unk_100EFF938);
      v43 = v40;
      v44 = v42;
      v64 = v43;
      static Published.subscript.getter(v69, v43, KeyPath, v42);
      swift_release(KeyPath);
      swift_release(v44);
      v45 = v69[0];
      if (v69[0] >> 62)
      {
        if (v69[0] < 0)
          v51 = v69[0];
        else
          v51 = v69[0] & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v69[0]);
        v52 = _CocoaArrayWrapper.endIndex.getter(v51);
        swift_bridgeObjectRelease(v45);
        v53 = v52;
        v23 = v67;
        if (v53)
          goto LABEL_26;
      }
      else
      {
        v23 = v67;
        if (*(_QWORD *)((v69[0] & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_26:
          if ((v45 & 0xC000000000000001) != 0)
          {
            v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
          }
          else
          {
            if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_46;
            }
            v46 = *(id *)(v45 + 32);
          }
          v62 = v46;
          swift_bridgeObjectRelease(v45);
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          if ((static NSObject.== infix(_:_:)(v65, v62) & 1) != 0)
          {
            swift_beginAccess(v3 + 16, v69, 0, 0);
            v47 = *(_QWORD *)(v3 + 16);
            v48 = swift_bridgeObjectRetain(v47);
            IndexSet.init()(v48);
            v61 = v65;
            sub_10063835C((uint64_t)v9, v47, (uint64_t)v61, (uint64_t)v12);
            swift_bridgeObjectRelease(v47);
            v49 = *(id *)&v64[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];
            v25 = sub_100766BAC(v49, v12);

            if (*(_QWORD *)&v65[v63] != v25)
            {
              *(_QWORD *)&v65[v63] = v25;
              v50 = (void *)swift_unknownObjectWeakLoadStrong(&v61[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_owner]);
              objc_msgSend(v50, "updateCachedCollaboratorColors");

              (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_10:
              v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              inited = swift_initStackObject(v26, v68);
              v28 = inited;
              *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
              *(_QWORD *)(inited + 56) = &type metadata for Int;
              *(_QWORD *)(inited + 64) = &protocol witness table for Int;
              *(_QWORD *)(inited + 32) = v25;
              if ((v25 & 0x8000000000000000) != 0)
              {
                sub_100757E04(&_mh_execute_header, (uint64_t)"updatePresence(presenceUUID:colorIndex:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2, 928, "Bad color index: %d", 19, 2u, inited);
                v23 = v67;
                sub_1004F5394(v28, (uint64_t)"updatePresence(presenceUUID:colorIndex:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2u, 928, (uint64_t)"Bad color index: %d", 19, 2u);
              }
              swift_bridgeObjectRelease(v28);

              v29 = v65;
              v30 = &v65[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
              v31 = type metadata accessor for UUID(0);
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a2, v30, v31);

              if ((v25 & 0x8000000000000000) == 0)
              {
                if (!HIDWORD(v25))
                {
                  v32 = sub_1004B804C(&qword_1013E8E60);
                  *(_DWORD *)(a2 + *(int *)(v32 + 48)) = v25;
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a2, 0, 1, v32);
                  if (v66 == v23)
                    return;
LABEL_42:
                  v56 = type metadata accessor for CRLCollaborationParticipantCollection(0);
                  v57 = sub_1004B7878(&qword_1013E8E68, type metadata accessor for CRLCollaborationParticipantCollection, (uint64_t)&unk_100EFF790);
                  v58 = ObservableObject<>.objectWillChange.getter(v56, v57);
                  ObservableObjectPublisher.send()();
                  swift_release(v58);
                  return;
                }
                LOBYTE(v59) = 2;
                _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, v59, 3455, 0);
LABEL_48:
                __break(1u);
                return;
              }
LABEL_46:
              LOBYTE(v59) = 2;
              _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v59, 3451, 0);
              goto LABEL_48;
            }

            (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_41:
            v54 = v66;
            v55 = sub_1004B804C(&qword_1013E8E60);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(a2, 1, 1, v55);
            if (v54 == v23)
              return;
            goto LABEL_42;
          }

LABEL_34:
          goto LABEL_41;
        }
      }

      swift_bridgeObjectRelease(v45);
      goto LABEL_41;
    }
    v35 = sub_1004B804C(&qword_1013E8E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a2, 1, 1, v35);

  }
  else
  {
    v34 = sub_1004B804C(&qword_1013E8E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a2, 1, 1, v34);

  }
  if (v66 != v67)
  {
    v36 = type metadata accessor for CRLCollaborationParticipantCollection(0);
    v37 = sub_1004B7878(&qword_1013E8E68, type metadata accessor for CRLCollaborationParticipantCollection, (uint64_t)&unk_100EFF790);
    v38 = ObservableObject<>.objectWillChange.getter(v36, v37);
    ObservableObjectPublisher.send()();
    swift_release(v38);
  }
}

void *sub_100642EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  BOOL v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  swift_beginAccess(v0 + 16, v27, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  if ((unint64_t)v1 >> 62)
    goto LABEL_38;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  while (v2)
  {
    v3 = 0;
    v24 = v1;
    v25 = v1 & 0xC000000000000001;
    v21 = v1 + 32;
    v22 = v1 & 0xFFFFFFFFFFFFFF8;
    v23 = v2;
    while (1)
    {
      if (v25)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v22 + 16))
          goto LABEL_37;
        v4 = *(id *)(v21 + 8 * v3);
      }
      v5 = v4;
      v6 = __OFADD__(v3++, 1);
      if (v6)
        break;
      KeyPath = swift_getKeyPath(&unk_100EFF910);
      v8 = swift_getKeyPath(&unk_100EFF938);
      static Published.subscript.getter(&v26, v5, KeyPath, v8);
      swift_release(KeyPath);
      swift_release(v8);
      v9 = v26;
      if ((unint64_t)v26 >> 62)
      {
        if (v26 < 0)
          v18 = v26;
        else
          v18 = v26 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v26);
        v10 = _CocoaArrayWrapper.endIndex.getter(v18);
        swift_bridgeObjectRelease(v9);
        if (!v10)
          goto LABEL_4;
      }
      else
      {
        v10 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v10)
          goto LABEL_4;
      }
      if ((v9 & 0xC000000000000001) != 0)
      {
        v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
      }
      else
      {
        if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_36;
        v11 = (char *)*(id *)(v9 + 32);
      }
      v12 = v11;
      if ((static UUID.== infix(_:_:)(&v11[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID]) & 1) != 0)
      {
LABEL_32:
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v9);
        return v5;
      }

      if (v10 != 1)
      {
        v1 = v9 & 0xFFFFFFFFFFFFFF8;
        v13 = 5;
        while (1)
        {
          v14 = v13 - 4;
          if ((v9 & 0xC000000000000001) != 0)
          {
            v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v9);
          }
          else
          {
            if (v14 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_34;
            v15 = (char *)*(id *)(v9 + 8 * v13);
          }
          v16 = v15;
          v6 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v6)
            break;
          if ((static UUID.== infix(_:_:)(&v15[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID]) & 1) != 0)
            goto LABEL_32;

          ++v13;
          if (v17 == v10)
            goto LABEL_4;
        }
        __break(1u);
LABEL_34:
        __break(1u);
        break;
      }
LABEL_4:

      swift_bridgeObjectRelease(v9);
      v1 = v24;
      if (v3 == v23)
        goto LABEL_42;
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    if (v1 < 0)
      v19 = v1;
    else
      v19 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v19);
  }
LABEL_42:
  swift_bridgeObjectRelease(v1);
  return 0;
}

void sub_100643190(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_1004CB6A4(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1006431DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E8E50);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 24) = sub_1008D5814((uint64_t)_swiftEmptyArrayStorage);
  v5 = v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection__activeParticipants;
  v9 = _swiftEmptyArrayStorage;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8BE0);
  Published.init(initialValue:)(&v9, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer) = 0;
  return v0;
}

uint64_t sub_1006432DC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLCollaborationParticipantCollection(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100643318()
{
  return sub_10063CE9C();
}

uint64_t sub_100643338()
{
  return sub_1004B7878((unint64_t *)&unk_1013E8E08, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_100643364()
{
  return sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

void sub_100643390(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100EFF880, (uint64_t)&unk_100EFF8A8, a2);
}

void sub_1006433A4(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  *a4 = v9;
}

void sub_10064341C(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  sub_10063D14C(v1);
}

id sub_100643444()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t v45;

  v0 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v0);
  v2 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PersonNameComponents(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "init");
  v8 = PersonNameComponents.namePrefix.getter();
  if (v9)
  {
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setNamePrefix:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  v12 = PersonNameComponents.givenName.getter(v8);
  if (v13)
  {
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setGivenName:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
  v16 = PersonNameComponents.middleName.getter(v12);
  if (v17)
  {
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setMiddleName:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  }
  v20 = PersonNameComponents.familyName.getter(v16);
  if (v21)
  {
    v22 = v21;
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setFamilyName:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  }
  v24 = PersonNameComponents.nameSuffix.getter(v20);
  if (v25)
  {
    v26 = v25;
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setNameSuffix:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  }
  v28 = PersonNameComponents.nickname.getter(v24);
  if (v29)
  {
    v30 = v29;
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setNickname:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  }
  PersonNameComponents.phoneticRepresentation.getter(v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v2, &qword_1013F4270);
  }
  else
  {
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v33 = PersonNameComponents.givenName.getter(v32);
    if (v34)
    {
      v35 = v34;
      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setPhoneticGivenName:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

    }
    v37 = PersonNameComponents.middleName.getter(v33);
    if (v38)
    {
      v39 = v38;
      v40 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setPhoneticMiddleName:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

    }
    PersonNameComponents.familyName.getter(v37);
    if (v41)
    {
      v42 = v41;
      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setPhoneticFamilyName:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

id sub_100643748(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  objc_class *v21;
  Class isa;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  Class v54;
  uint64_t v56;
  uint64_t v57;

  v2 = type metadata accessor for PersonNameComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F4270);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v56 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - v13;
  v15 = objc_msgSend(a1, "nameComponents");
  if (v15)
  {
    v16 = v15;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, v17, 1, v2);
  sub_10064561C((uint64_t)v12, (uint64_t)v14);
  sub_1004CB7BC((uint64_t)v14, (uint64_t)v9, &qword_1013F4270);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_1004CB800((uint64_t)v9, &qword_1013F4270);
    v18 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "init");
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v18 = sub_100643444();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v19 = objc_msgSend(a1, "lookupInfo");
  if (v19)
  {
    v20 = v19;
    v21 = (objc_class *)objc_msgSend(v19, "emailAddress");
    if (v21)
    {
      isa = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v25 = v24;
      v26 = String.count.getter(v23, v24);
      swift_bridgeObjectRelease(v25);
      if (v26 >= 1)
      {
        v27 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v28 = swift_allocObject(v27, 40, 7);
        *(_OWORD *)(v28 + 16) = xmmword_100EEF400;
        static String._unconditionallyBridgeFromObjectiveC(_:)(CNLabelOther);
        v30 = v29;
        v31 = objc_allocWithZone((Class)CNLabeledValue);
        v32 = String._bridgeToObjectiveC()();
        v33 = objc_msgSend(v31, "initWithLabel:value:", v32, isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

        *(_QWORD *)(v28 + 32) = v33;
        v57 = v28;
        specialized Array._endMutation()(v34);
        v35 = v57;
        sub_1004B804C(qword_1013E8EB8);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v18, "setEmailAddresses:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);
      }

    }
    v36 = objc_msgSend(v20, "phoneNumber");
    if (v36)
    {
      v37 = v36;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v40 = v39;

      if (String.count.getter(v38, v40) <= 0)
      {
        sub_1004CB800((uint64_t)v14, &qword_1013F4270);
        swift_bridgeObjectRelease(v40);

        return v18;
      }
      v41 = objc_allocWithZone((Class)CNPhoneNumber);
      v42 = String._bridgeToObjectiveC()();
      v43 = objc_msgSend(v41, "initWithStringValue:", v42, swift_bridgeObjectRelease(v40).n128_f64[0]);

      v44 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v45 = swift_allocObject(v44, 40, 7);
      *(_OWORD *)(v45 + 16) = xmmword_100EEF400;
      static String._unconditionallyBridgeFromObjectiveC(_:)(CNLabelOther);
      v47 = v46;
      v48 = objc_allocWithZone((Class)CNLabeledValue);
      v49 = v43;
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v48, "initWithLabel:value:", v50, v49, swift_bridgeObjectRelease(v47).n128_f64[0]);

      *(_QWORD *)(v45 + 32) = v51;
      v57 = v45;
      specialized Array._endMutation()(v52);
      v53 = v57;
      sub_1004B804C(qword_1013E8EB8);
      v54 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v18, "setPhoneNumbers:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

    }
  }
  sub_1004CB800((uint64_t)v14, &qword_1013F4270);
  return v18;
}

unint64_t sub_100643BFC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v5, a2, a3);
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return String.subscript.getter();
  }
  __break(1u);
  return result;
}

id sub_100643C98(void *a1, int a2)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  BOOL v20;
  objc_class *v21;
  _BYTE v23[12];
  int v24;
  objc_super v25;
  char v26;
  _QWORD v27[3];

  v24 = a2;
  v4 = sub_1004B804C(&qword_1013E8E18);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C((uint64_t *)&unk_1013E8E20);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact] = 0;
  v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_hasUnifiedContact] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = 0;
  v12 = &v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant__isFollowedBy];
  v27[0] = &_swiftEmptySetSingleton;
  v13 = v2;
  v14 = sub_1004B804C(&qword_1013E8B58);
  Published.init(initialValue:)(v27, v14);
  v15 = (*(uint64_t (**)(char *, _BYTE *, uint64_t))(v9 + 32))(v12, v11, v8);
  UUID.init()(v15);
  v16 = &v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant__presences];
  v27[0] = _swiftEmptyArrayStorage;
  v17 = sub_1004B804C(&qword_1013E8B70);
  Published.init(initialValue:)(v27, v17);
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 32))(v16, v7, v4);
  v18 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors;
  *(_QWORD *)&v13[v18] = sub_1008DFEA8(_swiftEmptyArrayStorage);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] = a1;
  swift_beginAccess(&v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant__isFollowable], v27, 33, 0);
  v26 = v24;
  v19 = a1;
  Published.init(initialValue:)(&v26, &type metadata for Bool);
  swift_endAccess(v27);
  LOBYTE(v7) = objc_msgSend(v19, "permission") == (id)2;
  swift_beginAccess(&v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant__isViewOnly], v27, 33, 0);
  v26 = (char)v7;
  Published.init(initialValue:)(&v26, &type metadata for Bool);
  swift_endAccess(v27);
  v20 = objc_msgSend(v19, "role") == (id)1;
  v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isDocumentOwner] = v20;

  v21 = (objc_class *)type metadata accessor for CRLCollaborationParticipant(0);
  v25.receiver = v13;
  v25.super_class = v21;
  return objc_msgSendSuper2(&v25, "init");
}

void sub_100643F2C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100EFF880, (uint64_t)&unk_100EFF8A8, a2);
}

void sub_100643F50(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  sub_10063D14C(v1);
}

void *sub_100643F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], a2) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void sub_1006440B4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100EFF8C8, (uint64_t)&unk_100EFF8F0, a2);
}

uint64_t sub_1006440D8(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100EFF8C8, (uint64_t)&unk_100EFF8F0);
}

void sub_100644104(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100EFF958, (uint64_t)&unk_100EFF980, a2);
}

unint64_t sub_10064412C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8E48;
  if (!qword_1013E8E48)
  {
    v1 = sub_1004B8930(255, &qword_1013E8E40, TUHandle_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E8E48);
  }
  return result;
}

_QWORD *sub_100644184(uint64_t a1, _BOOL8 a2)
{
  uint64_t v3;
  unint64_t v4;
  char *v5;
  void *v6;
  unint64_t v7;
  id v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        v8 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
        v9 = sub_1006392C0(a2);

        if (v9)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          v11 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
          v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v6);
          specialized ContiguousArray._endMutation()(v12);
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v14);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1006442F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1)
       : (char *)*(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = static Date.< infix(_:_:)(a2, &v6[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime]);

    if ((v8 & 1) != 0)
      return v5;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
      return 0;
  }
}

uint64_t sub_100644404(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t i;
  unint64_t v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_65;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (v5)
  {
LABEL_3:
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v6 = 0;
    while (1)
    {
      v7 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4)
         : *(id *)(v4 + 8 * v6 + 32);
      v8 = v7;
      v9 = static NSObject.== infix(_:_:)(v7, a2);

      if ((v9 & 1) != 0)
        break;
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        if ((v4 & 0x8000000000000000) != 0)
          v35 = v4;
        else
          v35 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v5 = _CocoaArrayWrapper.endIndex.getter(v35);
        if (!v5)
          goto LABEL_10;
        goto LABEL_3;
      }
      ++v6;
      if (v10 == v5)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease(v4);
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      v9 = *a1;
      if (!((unint64_t)*a1 >> 62))
      {
        if (v13 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_16:
          for (i = v6 + 5; ; ++i)
          {
            v4 = i - 4;
            v15 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v15);
            }
            else
            {
              if ((v4 & 0x8000000000000000) != 0)
                goto LABEL_55;
              if (v4 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_56;
              v16 = *(id *)(v15 + 8 * i);
            }
            v17 = v16;
            v18 = static NSObject.== infix(_:_:)(v16, a2);

            if ((v18 & 1) != 0)
              goto LABEL_42;
            if (v4 != v6)
              break;
LABEL_41:
            if (__OFADD__(v6++, 1))
              goto LABEL_58;
LABEL_42:
            v31 = i - 3;
            if (__OFADD__(v4, 1))
              goto LABEL_57;
            v32 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v32 < 0)
                v34 = *a1;
              else
                v34 = v32 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*a1);
              v33 = _CocoaArrayWrapper.endIndex.getter(v34);
              swift_bridgeObjectRelease(v32);
            }
            else
            {
              v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            if (v31 == v33)
              return v6;
          }
          v19 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, *a1);
            v19 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
            {
LABEL_27:
              if ((v4 & 0x8000000000000000) != 0)
                goto LABEL_61;
              if (v4 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v21 = *(id *)(v19 + 8 * i);
              goto LABEL_30;
            }
          }
          else
          {
            if ((v6 & 0x8000000000000000) != 0)
              goto LABEL_59;
            if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_60;
            v20 = *(id *)(v19 + 8 * v6 + 32);
            if ((v19 & 0xC000000000000001) == 0)
              goto LABEL_27;
          }
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v19);
          v19 = *a1;
LABEL_30:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v19);
          *a1 = v19;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
          {
            v19 = sub_100D14ED8(v19);
            *a1 = v19;
          }
          v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
          *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

          specialized Array._endMutation()(v24);
          v25 = *a1;
          v26 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
          *a1 = v25;
          if (!v26 || v25 < 0 || (v25 & 0x4000000000000000) != 0)
          {
            v25 = sub_100D14ED8(v25);
            *a1 = v25;
          }
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_63;
          v27 = v25 & 0xFFFFFFFFFFFFFF8;
          if (v4 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
          v28 = *(void **)(v27 + 8 * i);
          *(_QWORD *)(v27 + 8 * i) = v20;

          specialized Array._endMutation()(v29);
          goto LABEL_41;
        }
        return v6;
      }
    }
    if (v9 < 0)
      v38 = v9;
    else
      v38 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v9);
    if (v13 != v39)
      goto LABEL_16;
    return v6;
  }
LABEL_10:
  swift_bridgeObjectRelease(v4);
  v11 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 < 0)
    v36 = *a1;
  else
    v36 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v11);
  return v37;
}

void sub_1006447D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_10063C334(&v17, a2);
    if (v2)
      goto LABEL_24;
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_17:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_5;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v9)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v5 + 8 * v16);
  v10 += 4;
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v9)
      goto LABEL_24;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v14)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

void sub_100644940(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E8EA0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v24)
        goto LABEL_23;
      v20 = *(_QWORD *)(v23 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v24)
          goto LABEL_23;
        v20 = *(_QWORD *)(v23 + 8 * v11);
        if (!v20)
        {
          v11 = v19 + 3;
          if (v19 + 3 >= v24)
            goto LABEL_23;
          v20 = *(_QWORD *)(v23 + 8 * v11);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 48);
    v15 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v13, v15);
    v16 = *(_QWORD *)(a1 + 56);
    v17 = v16 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLRealTimeEnter(0) - 8) + 72) * v13;
    v18 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_1006455D8(v17, v18);
    a2(v6, v18);
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E8EA0);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100644B84(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  if ((a2 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a2) & 0xF;
  else
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16)
    return 1;
  else
    return _stringCompareInternal(_:_:_:_:expecting:)(a1) & 1;
}

_QWORD *sub_100644BEC(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v21 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
LABEL_9:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        v11 = sub_10063C728(a2);
        if ((v11 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v12 = v6;
          v13 = v4;
          v14 = v3;
          v15 = a2;
          v16 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
          v17 = v16;
          a2 = v15;
          v3 = v14;
          v4 = v13;
          v6 = v12;
          v7 = v21;
          v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v9);
          specialized ContiguousArray._endMutation()(v18);
        }
        else
        {

        }
        ++v5;
        if (v10 == v4)
          return _swiftEmptyArrayStorage;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v3 < 0)
        v20 = v3;
      else
        v20 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100644D5C(uint64_t a1)
{
  return sub_100641C6C(a1) & 1;
}

unint64_t sub_100644D78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8E90;
  if (!qword_1013E8E90)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013E8BE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E8E90);
  }
  return result;
}

uint64_t sub_100644DC4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v28[24];
  unint64_t v29;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_36;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v29 = v3 & 0xC000000000000001;
    v27 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
    swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants, v28, 0, 0);
    v5 = 0;
    v24 = v3 + 32;
    v25 = v3;
    v26 = v4;
    while (1)
    {
      v6 = v29 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v25) : *(id *)(v24 + 8 * v5);
      v7 = v6;
      v8 = *v27;
      if ((unint64_t)*v27 >> 62)
      {
        if (v8 < 0)
          v21 = *v27;
        else
          v21 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*v27, 2);
        v9 = _CocoaArrayWrapper.endIndex.getter(v21);
        if (!v9)
          goto LABEL_23;
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(*v27, 2);
        if (!v9)
          goto LABEL_23;
      }
      if ((v8 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
      else
        v10 = *(id *)(v8 + 32);
      v11 = v10;
      a2 = type metadata accessor for CRLCollaborationParticipant(0);
      v12 = static NSObject.== infix(_:_:)(v11, v7);

      if ((v12 & 1) != 0)
      {
LABEL_32:
        swift_bridgeObjectRelease_n(v8, 2);

        return v5;
      }
      if (v9 != 1)
        break;
LABEL_23:
      swift_bridgeObjectRelease_n(v8, 2);

      if (__OFADD__(v5++, 1))
        goto LABEL_35;
      if (v5 == v26)
        return 0;
    }
    if ((v8 & 0xC000000000000001) != 0)
    {
      v13 = 1;
      while (1)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v8);
        v3 = v13 + 1;
        if (__OFADD__(v13, 1))
          break;
        v15 = v14;
        v16 = static NSObject.== infix(_:_:)(v14, v7);
        swift_unknownObjectRelease(v15);
        if ((v16 & 1) != 0)
          goto LABEL_32;
        ++v13;
        if (v3 == v9)
          goto LABEL_23;
      }
      __break(1u);
    }
    else
    {
      v17 = 5;
      while (1)
      {
        v3 = v17 - 3;
        if (__OFADD__(v17 - 4, 1))
          break;
        v18 = *(id *)(v8 + 8 * v17);
        v19 = static NSObject.== infix(_:_:)(v18, v7);

        if ((v19 & 1) != 0)
          goto LABEL_32;
        ++v17;
        if (v3 == v9)
          goto LABEL_23;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (v3 < 0)
      v22 = v3;
    else
      v22 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v3);
  }
  return 0;
}

uint64_t sub_10064504C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v25;
  uint64_t v26;
  int v27;
  void *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char v41[24];
  unint64_t v42;

  v4 = a1;
  v5 = *a1;
  swift_bridgeObjectRetain(*a1);
  v7 = sub_100644DC4(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(v5);
  if (v2)
    return v7;
  if ((v9 & 1) == 0)
  {
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_81;
    v9 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
LABEL_82:
      if (v9 < 0)
        v35 = v9;
      else
        v35 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v9);
      if (v10 != v36)
        goto LABEL_6;
    }
    else if (v10 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v40 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
      swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants, v41, 0, 0);
      v39 = v4;
      while (1)
      {
        v11 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v11);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
            goto LABEL_70;
          if (v10 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_71;
          v12 = *(id *)(v11 + 8 * v10 + 32);
        }
        v13 = v12;
        v42 = v7;
        v14 = *v40;
        if ((unint64_t)*v40 >> 62)
        {
          if (v14 < 0)
            v9 = *v40;
          else
            v9 = v14 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(*v40, 2);
          v7 = _CocoaArrayWrapper.endIndex.getter(v9);
          if (!v7)
            goto LABEL_28;
        }
        else
        {
          v7 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(*v40, 2);
          if (!v7)
            goto LABEL_28;
        }
        if ((v14 & 0xC000000000000001) != 0)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
        else
          v15 = *(id *)(v14 + 32);
        v9 = (uint64_t)v15;
        v4 = (uint64_t *)type metadata accessor for CRLCollaborationParticipant(0);
        v16 = static NSObject.== infix(_:_:)(v9, v13);

        if ((v16 & 1) != 0)
        {
LABEL_16:

          swift_bridgeObjectRelease_n(v14, 2);
          v4 = v39;
          v7 = v42;
          goto LABEL_48;
        }
        if (v7 != 1)
        {
          if ((v14 & 0xC000000000000001) != 0)
          {
            v9 = 1;
            while (1)
            {
              v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v14);
              a2 = v9 + 1;
              if (__OFADD__(v9, 1))
                break;
              v18 = v17;
              v19 = static NSObject.== infix(_:_:)(v17, v13);
              swift_unknownObjectRelease(v18);
              if ((v19 & 1) != 0)
                goto LABEL_16;
              ++v9;
              if (a2 == v7)
                goto LABEL_28;
            }
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
          v20 = 5;
          while (1)
          {
            a2 = v20 - 3;
            if (__OFADD__(v20 - 4, 1))
              break;
            v9 = (uint64_t)*(id *)(v14 + 8 * v20);
            v21 = static NSObject.== infix(_:_:)(v9, v13);

            if ((v21 & 1) != 0)
              goto LABEL_16;
            ++v20;
            if (a2 == v7)
              goto LABEL_28;
          }
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
LABEL_28:
        swift_bridgeObjectRelease_n(v14, 2);

        v7 = v42;
        v4 = v39;
        if (v42 == v10)
          goto LABEL_47;
        v9 = *v39;
        if ((*v39 & 0xC000000000000001) != 0)
        {
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, *v39);
          v9 = *v39;
          if ((*v39 & 0xC000000000000001) == 0)
            goto LABEL_33;
        }
        else
        {
          if ((v42 & 0x8000000000000000) != 0)
            goto LABEL_75;
          if (v42 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_76;
          v22 = *(id *)(v9 + 8 * v42 + 32);
          if ((v9 & 0xC000000000000001) == 0)
          {
LABEL_33:
            if ((v10 & 0x8000000000000000) != 0)
              goto LABEL_77;
            if (v10 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_78;
            v23 = *(id *)(v9 + 8 * v10 + 32);
            goto LABEL_36;
          }
        }
        v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v9);
        v9 = *v39;
LABEL_36:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v9);
        *v39 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          v9 = sub_100D14ED8(v9);
          *v39 = v9;
        }
        v25 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
        *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v23;

        specialized Array._endMutation()(v26);
        v9 = *v39;
        v27 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v39);
        *v39 = v9;
        if (!v27 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          v9 = sub_100D14ED8(v9);
          *v39 = v9;
        }
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_79;
        if (v10 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_80;
        v28 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
        *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v22;

        specialized Array._endMutation()(v29);
LABEL_47:
        v30 = __OFADD__(v7++, 1);
        if (v30)
          goto LABEL_74;
LABEL_48:
        v30 = __OFADD__(v10++, 1);
        if (v30)
          goto LABEL_72;
        v9 = *v4;
        if ((unint64_t)*v4 >> 62)
        {
          if (v9 < 0)
            v32 = *v4;
          else
            v32 = v9 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v4);
          v31 = _CocoaArrayWrapper.endIndex.getter(v32);
          swift_bridgeObjectRelease(v9);
        }
        else
        {
          v31 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v10 == v31)
          return v7;
      }
    }
    return v7;
  }
  v33 = *v4;
  if (!((unint64_t)*v4 >> 62))
    return *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v33 < 0)
    v37 = *v4;
  else
    v37 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v33);
  return v38;
}

void sub_1006454E8()
{
  uint64_t v0;
  void *v1;

  sub_10063EC58();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer) = 0;

}

uint64_t sub_10064550C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10064551C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100645524(id *a1)
{
  uint64_t v1;

  return sub_10063DA8C(a1, *(_BOOL8 **)(v1 + 16)) & 1;
}

void sub_100645540(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100EFF9A0, (uint64_t)&unk_100EFF9C8, a2);
}

uint64_t sub_100645564(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100639108(a1, a2, a3, a4, (uint64_t)&unk_100EFF9A0, (uint64_t)&unk_100EFF9C8);
}

uint64_t sub_100645588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10063D73C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(unint64_t **)(v2 + 32), *(_BYTE **)(v2 + 40));
}

uint64_t sub_100645594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLRealTimeEnter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006455D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLRealTimeEnter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10064561C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F4270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100645664(_QWORD *a1)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID) & 1;
}

uint64_t sub_1006456A4(_QWORD *a1)
{
  return sub_100645664(a1) & 1;
}

uint64_t sub_1006456BC(uint64_t a1)
{
  __int128 v2;
  uint64_t result;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  const char *v12;
  void *v13;
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 96);
  v8 = *(_OWORD *)(a1 + 80);
  v9 = v8;
  v7 = v2;
  v10 = v2;
  result = type metadata accessor for IgnorableThrottle.Inner.State(319, (uint64_t)&v9);
  if (v4 <= 0x3F)
  {
    *(_QWORD *)&v9 = *(_QWORD *)(result - 8) + 64;
    *((_QWORD *)&v9 + 1) = (char *)&value witness table for Builtin.NativeObject + 64;
    *(_QWORD *)&v10 = (char *)&value witness table for Builtin.Int64 + 64;
    *((_QWORD *)&v10 + 1) = (char *)&value witness table for () + 64;
    v11 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v12 = "\b";
    v13 = &unk_100EFFA68;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v7, v8, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Output);
    result = type metadata accessor for Optional(319, AssociatedTypeWitness);
    if (v6 <= 0x3F)
    {
      v14 = *(_QWORD *)(result - 8) + 64;
      return swift_initClassMetadata2(a1, 0, 8, &v9, a1 + 112);
    }
  }
  return result;
}

void sub_1006457CC(uint64_t a1, int *a2, uint64_t a3)
{
  double *v3;
  double *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  void *v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  v4 = v3;
  v8 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 + 24);
  v26 = *(_QWORD *)(v11 + 16);
  v27 = v12;
  v28[0] = v26;
  v28[1] = v13;
  v28[2] = v12;
  v28[3] = v14;
  v15 = type metadata accessor for IgnorableThrottle.Inner(0, (uint64_t)v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  v16 = *v4;
  v17 = *(void **)((char *)v4 + a2[10]);
  v18 = *(void **)((char *)v4 + a2[11]);
  v19 = (uint64_t *)((char *)v4 + a2[12]);
  v20 = *v19;
  v21 = v19[1];
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v22 = v17;
  v23 = v18;
  swift_retain(v21);
  v24 = sub_1006459A0((uint64_t)v10, (uint64_t)v22, (uint64_t)v23, v20, v21, v16);
  v28[0] = v24;
  WitnessTable = swift_getWitnessTable(&unk_100EFFC58, v15);
  Publisher.subscribe<A>(_:)(v28, v26, v15, v27, WitnessTable);
  swift_release(v24);
}

uint64_t sub_100645928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;

  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  return sub_1006459A0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1006459A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[4];

  v13 = *(_QWORD **)v6;
  v14 = *(_QWORD *)(*(_QWORD *)v6 + 120);
  v15 = type metadata accessor for CRLUnfairLock();
  v16 = swift_allocObject(v15, 24, 7);
  v17 = (_DWORD *)swift_slowAlloc(4, -1);
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)(v6 + v14) = v16;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 160)) = 0;
  v18 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 168);
  v19 = v13[12];
  v20 = v13[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v19, v20, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Output);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v18, 1, 1, AssociatedTypeWitness);
  *(double *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 128)) = a6;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 144)) = a2;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 152)) = a3;
  v22 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 136));
  *v22 = a4;
  v22[1] = a5;
  v23 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 112);
  v24 = v13[11];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a1, v24);
  v25 = v13[13];
  v28[0] = v20;
  v28[1] = v24;
  v28[2] = v19;
  v28[3] = v25;
  v26 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)v28);
  swift_storeEnumTagMultiPayload(v23, v26, 0);
  return v6;
}

uint64_t sub_100645B24(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  __n128 v29;
  __n128 v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t WitnessTable;
  char v39[24];

  v2 = *v1;
  v3 = *(uint64_t **)(*v1 + 80);
  v4 = *(_QWORD *)(*v1 + 104);
  v34 = a1;
  v35 = v3;
  v33 = *(_OWORD *)(v2 + 88);
  v36 = v33;
  v32 = v4;
  v37 = v4;
  v5 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)&v35);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - v10;
  v12 = v33;
  *(_QWORD *)&v33 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v2 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v16) + 16));
  v17 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  v18 = swift_beginAccess(v17, v39, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v11, v17, v5, v18);
  if (swift_getEnumCaseMultiPayload(v11, v5))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v16) + 16));
    v19 = v34[3];
    v20 = v34[4];
    sub_1004BB5A4(v34, v19);
    return dispatch thunk of Cancellable.cancel()(v19, *(_QWORD *)(v20 + 8));
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v23 = v15;
    v31 = v15;
    v24 = v33;
    v22(v23, v11, v12);
    v25 = sub_1004CB6A4(&qword_1013E9048);
    v26 = (uint64_t)&v8[*(int *)(swift_getTupleTypeMetadata2(0, v12, v25, 0, 0) + 48)];
    v27 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v28 = v31;
    v27(v8, v31, v12);
    sub_1004E90B0((uint64_t)v34, v26);
    swift_storeEnumTagMultiPayload(v8, v5, 1);
    v29 = swift_beginAccess(v17, &v35, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v6 + 40))(v17, v8, v5, v29);
    swift_endAccess(&v35);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v16) + 16));
    v37 = v2;
    WitnessTable = swift_getWitnessTable(&unk_100EFFC20, v2);
    v35 = v1;
    v30 = swift_retain(v1);
    dispatch thunk of Subscriber.receive(subscription:)(&v35, v12, v32, v30);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v12);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v35);
  }
}

uint64_t sub_100645DBC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  _QWORD v63[5];

  v2 = v1;
  v61 = a1;
  v3 = (_QWORD *)*v1;
  v4 = sub_1004B804C(&qword_1013E48D8);
  __chkstk_darwin(v4);
  v56 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[12];
  v7 = v3[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v7, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Output);
  v9 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  __chkstk_darwin(v9);
  v57 = (char *)&v52 - v10;
  v11 = v3[11];
  v12 = v3[13];
  v63[0] = v7;
  v63[1] = v11;
  v60 = v11;
  v63[2] = v6;
  v63[3] = v12;
  v13 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)v63);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v52 - v15;
  v17 = v3[15];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)((char *)v2 + v17) + 16));
  v18 = (char *)v2 + *(_QWORD *)(*v2 + 112);
  v19 = swift_beginAccess(v18, v63, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v14 + 16))(v16, v18, v13, v19);
  if (swift_getEnumCaseMultiPayload(v16, v13) == 1)
  {
    v20 = (uint64_t)v56;
    v52 = v12;
    v53 = v7;
    v54 = v6;
    v55 = v17;
    v21 = sub_1004CB6A4(&qword_1013E9048);
    v22 = v60;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v60, v21, 0, 0);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v16[*(int *)(TupleTypeMetadata2 + 48)]);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v16, v22);
    v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v25 = v57;
    v26 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v57, v61, AssociatedTypeWitness);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, AssociatedTypeWitness);
    v27 = (char *)v2 + *(_QWORD *)(*v2 + 168);
    v28 = swift_beginAccess(v27, v62, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v58 + 40))(v27, v25, v59, v28);
    swift_endAccess(v62);
    v29 = (*(uint64_t (**)(uint64_t))((char *)v2 + *(_QWORD *)(*v2 + 136)))(v26);
    v30 = (_QWORD *)*v2;
    v31 = *(_QWORD *)(*v2 + 160);
    v32 = *(_QWORD *)((char *)v2 + v31);
    if ((v29 & 1) != 0)
    {
      if (v32)
      {
        swift_retain(*(_QWORD *)((char *)v2 + v31));
        AnyCancellable.cancel()();
        swift_release(v32);
        v50 = *(_QWORD *)((char *)v2 + v31);
      }
      else
      {
        v50 = 0;
      }
      v51 = v55;
      *(_QWORD *)((char *)v2 + v31) = 0;
      swift_release(v50);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)((char *)v2 + v51) + 16));
      sub_100646264();
    }
    else
    {
      if (!v32)
      {
        sub_100648518();
        v33 = *(double *)((char *)v2 + v30[16]);
        v34 = *(_QWORD *)((char *)v2 + v30[18]);
        v35 = *(_QWORD *)((char *)v2 + v30[19]);
        v36 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v20, 1, 1, v36);
        v37 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v34, v35, v20, v33);
        sub_100648554(v20);
        v62[0] = v37;
        v38 = type metadata accessor for NSTimer.TimerPublisher(0);
        v39 = sub_100648594();
        v40 = ConnectablePublisher.autoconnect()(v38, v39);
        swift_release(v37);
        v62[0] = v40;
        v41 = swift_allocObject(&unk_101273858, 24, 7);
        swift_weakInit(v41 + 16, v2);
        v42 = (_QWORD *)swift_allocObject(&unk_101273880, 56, 7);
        v42[2] = v53;
        v42[3] = v22;
        v43 = v52;
        v42[4] = v54;
        v42[5] = v43;
        v42[6] = v41;
        v44 = sub_1004B804C(&qword_1013E9060);
        v45 = sub_100648634();
        v46 = Publisher<>.sink(receiveValue:)(sub_100648624, v42, v44, v45);
        swift_release(v42);
        swift_release(v62[0]);
        v47 = *(_QWORD *)((char *)v2 + v31);
        *(_QWORD *)((char *)v2 + v31) = v46;
        swift_release(v47);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)((char *)v2 + v55) + 16));
    }
    return static Subscribers.Demand.unlimited.getter(v48);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)((char *)v2 + v17) + 16));
    return static Subscribers.Demand.none.getter();
  }
}

double sub_100646210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_100646264();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_100646264()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, __n128);
  char *v36;
  uint64_t v37;
  char *v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _BYTE v60[24];
  char v61[24];
  _QWORD v62[5];

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v4 = v2[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3, v4, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Output);
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v52 = (char *)&v49 - v6;
  v7 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v56 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v53 = (char *)&v49 - v10;
  __chkstk_darwin(v11);
  v54 = (char *)&v49 - v12;
  v13 = v2[11];
  v14 = v2[13];
  v62[0] = v4;
  v62[1] = v13;
  v62[2] = v3;
  v62[3] = v14;
  v51 = v14;
  v15 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)v62);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v49 - v17;
  v19 = v13;
  v59 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v20);
  v58 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v2[15];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v1 + v22) + 16));
  v23 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v24 = *(_QWORD *)(v1 + v23);
  if (v24)
  {
    swift_retain(*(_QWORD *)(v1 + v23));
    AnyCancellable.cancel()();
    swift_release(v24);
    v25 = *(_QWORD *)(v1 + v23);
  }
  else
  {
    v25 = 0;
  }
  *(_QWORD *)(v1 + v23) = 0;
  swift_release(v25);
  v26 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  v27 = swift_beginAccess(v26, v62, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v18, v26, v15, v27);
  if (swift_getEnumCaseMultiPayload(v18, v15) == 1)
  {
    v28 = sub_1004CB6A4(&qword_1013E9048);
    v29 = &v18[*(int *)(swift_getTupleTypeMetadata2(0, v19, v28, 0, 0) + 48)];
    v30 = AssociatedTypeWitness;
    v31 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v50 = v22;
    v31(v58, v18, v19);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v29);
    v32 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 168);
    v33 = swift_beginAccess(v32, v61, 0, 0);
    v34 = v56;
    v35 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v56 + 16);
    v36 = v54;
    v35(v54, v32, v7, v33);
    v37 = v57;
    v38 = v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v53, 1, 1, v30);
    v39 = swift_beginAccess(v32, v60, 33, 0);
    v40 = v38;
    v41 = v19;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v34 + 40))(v32, v40, v7, v39);
    swift_endAccess(v60);
    v42 = v58;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v1 + v50) + 16));
    v43 = v55;
    ((void (*)(char *, char *, uint64_t))v35)(v55, v36, v7);
    v44 = v30;
    v45 = v30;
    v46 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v43, 1, v45) == 1)
    {
      v47 = *(void (**)(char *, uint64_t))(v34 + 8);
      v47(v36, v7);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v41);
      v47(v43, v7);
    }
    else
    {
      v48 = v52;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v52, v43, v44);
      dispatch thunk of Subscriber.receive(_:)(v48, v41, v51);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v48, v44);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v7);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v41);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v1 + v22) + 16));
  }
}

void sub_10064667C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[24];
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 104);
  v19 = *(_QWORD *)(*v1 + 80);
  v17 = *(_OWORD *)(v3 + 88);
  v20 = v17;
  v21 = v4;
  v5 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)&v19);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-v7 - 16];
  v9 = *(_QWORD *)(v3 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v9) + 16));
  v10 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  v11 = swift_beginAccess(v10, v18, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v10, v5, v11);
  if (swift_getEnumCaseMultiPayload(v8, v5) == 1)
  {
    v12 = sub_1004CB6A4(&qword_1013E9048);
    v13 = v17;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v17, v12, 0, 0);
    sub_1004DB728((__int128 *)&v8[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v19);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v8, v13);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v9) + 16));
    v15 = v21;
    v16 = v22;
    sub_1004BB5A4(&v19, v21);
    dispatch thunk of Subscription.request(_:)(a1, v15, v16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v9) + 16));
  }
}

void sub_100646810()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __int128 v21;
  _BYTE v22[24];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v23 = *(_QWORD *)(*v0 + 80);
  v21 = *(_OWORD *)(v1 + 88);
  v24 = v21;
  v25 = v2;
  v3 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)&v23);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v22[-v8 - 8];
  v10 = *(_QWORD *)(v1 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v10) + 16));
  v11 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  v12 = swift_beginAccess(v11, v27, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v9, v11, v3, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v3);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = sub_1004CB6A4(&qword_1013E9048);
      v15 = v21;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v21, v14, 0, 0);
      sub_1004DB728((__int128 *)&v9[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v23);
      swift_storeEnumTagMultiPayload(v6, v3, 2);
      v17 = swift_beginAccess(v11, v22, 33, 0);
      (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 40))(v11, v6, v3, v17);
      swift_endAccess(v22);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v10) + 16));
      v18 = v25;
      v19 = v26;
      sub_1004BB5A4(&v23, v25);
      dispatch thunk of Cancellable.cancel()(v18, *(_QWORD *)(v19 + 8));
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v23);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
      return;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  }
  swift_storeEnumTagMultiPayload(v6, v3, 2);
  v20 = swift_beginAccess(v11, &v23, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 40))(v11, v6, v3, v20);
  swift_endAccess(&v23);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v10) + 16));
}

uint64_t sub_100646A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  _OWORD v9[2];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v8 = *(_OWORD *)(*(_QWORD *)v0 + 96);
  v9[0] = *(_OWORD *)(*(_QWORD *)v0 + 80);
  v7 = *(_QWORD *)&v9[0];
  v9[1] = v8;
  v2 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)));
  swift_release(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136) + 8));

  swift_release(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160)));
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v8, v7, &protocol requirements base descriptor for Publisher, &associated type descriptor for Publisher.Output);
  v5 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  return v0;
}

uint64_t sub_100646B44()
{
  uint64_t v0;

  v0 = sub_100646A40();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for IgnorableThrottle.Inner(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for IgnorableThrottle.Inner);
}

uint64_t type metadata accessor for IgnorableThrottle.Inner.State(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for IgnorableThrottle.Inner.State);
}

uint64_t storeEnumTagSinglePayload for IgnorableThrottleDecision(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100646BC8 + 4 * byte_100EFF9F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100646BFC + 4 * byte_100EFF9F0[v4]))();
}

uint64_t sub_100646BFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100646C04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100646C0CLL);
  return result;
}

uint64_t sub_100646C18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100646C20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100646C24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100646C2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IgnorableThrottleDecision()
{
  return &type metadata for IgnorableThrottleDecision;
}

uint64_t sub_100646C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_100646C50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = "\b";
    v4[4] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100646CF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  _QWORD *v14;
  void **v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((((((v6 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    v3 = (uint64_t *)(v18 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    *a1 = *a2;
    v9 = ((unint64_t)a1 + v5 + 8) & ~v5;
    v10 = ((unint64_t)a2 + v5 + 8) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v9, v10);
    v11 = (_QWORD *)((v6 + v9) & 0xFFFFFFFFFFFFF8);
    v12 = (void **)((v6 + v10) & 0xFFFFFFFFFFFFF8);
    v13 = *v12;
    *v11 = *v12;
    v14 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    v15 = (void **)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
    v16 = *v15;
    *v14 = *v15;
    v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    v19 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v17;
    v19[1] = v18;
    v20 = v13;
    v21 = v16;
  }
  swift_retain(v18);
  return v3;
}

double sub_100646E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  id *v4;
  id *v5;
  double result;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = (a1 + *(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v3);
  v4 = (id *)((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);

  v5 = (id *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFF8) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_100646E6C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void **v10;
  void *v11;
  _QWORD *v12;
  void **v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  id v19;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_QWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *v9 = *v10;
  v12 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8);
  v13 = (void **)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  *v12 = *v13;
  v15 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v11;
  v19 = v14;
  swift_retain(v17);
  return a1;
}

_QWORD *sub_100646F1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (void **)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  v12 = *v9;
  *v9 = *v10;
  v13 = v11;

  v14 = (void **)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8;
  v16 = *(void **)v15;
  v15 += 15;
  v17 = *v14;
  *v14 = v16;
  v18 = v16;

  v19 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 8);
  v21 = v19[1];
  *v19 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  v19[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

_QWORD *sub_100646FE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_QWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_OWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_100647084(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void **v10;
  void *v11;
  unint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (void **)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = *v10;

  v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = *(void **)v12;
  *(_QWORD *)v12 = *v13;
  v12 += 15;

  v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_OWORD *)(v12 & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release(v15);
  return a1;
}

uint64_t sub_10064713C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  if (v6 >= a2)
  {
    v13 = (a1 + v7 + 8) & ~v7;
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((v8 + v13) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v13);
    }
  }
  else
  {
    if (((((((((v8 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v6 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1006471D8 + 4 * byte_100EFF9FA[v11]))();
  }
}

void sub_100647268(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7 + (((_DWORD)v7 + 8) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7 + (((_DWORD)v7 + 8) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_100647380()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1006473F8);
}

void sub_100647388(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100647390);
  JUMPOUT(0x1006473F8);
}

void sub_1006473D4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1006473F8);
}

void sub_1006473DC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1006473F8);
}

uint64_t sub_1006473E4@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
    JUMPOUT(0x1006473F8);
  if (a2 < 0x7FFFFFFF)
  {
    if ((a1 & 0x80000000) == 0)
      JUMPOUT(0x1006473F4);
    JUMPOUT(0x1006473F0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))((v6 + v5 + 8) & a3);
}

uint64_t type metadata accessor for IgnorableThrottle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IgnorableThrottle);
}

uint64_t sub_10064741C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v4, v5[0], "(");
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v5);
    return 0;
  }
  return result;
}

_QWORD *sub_10064749C(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    v10 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain(v10);
  }
  else
  {
    v11 = __src[v7];
    if (v11 >= 2)
    {
      if (v7 <= 3)
        v12 = v7;
      else
        v12 = 4;
      __asm { BR              X14 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      v13 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      v14 = (unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      v15 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 24) = v15;
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      (**(void (***)(void))(v15 - 8))();
      *((_BYTE *)v4 + v7) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *((_BYTE *)v4 + v7) = 0;
    }
  }
  return v4;
}

uint64_t sub_10064761C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v5 <= v4)
    v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(a1 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X14 }
  }
  if (v6 != 1)
    return (*(uint64_t (**)(uint64_t))(v3 + 8))(a1);
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)((a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
}

_BYTE *sub_10064770C(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v8 = __src[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    v10 = (unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    v11 = (unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
    __dst[v7] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_10064784C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    v9 = __dst[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8));
    }
    else
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
    }
    v11 = __src[v8];
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      v13 = (unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      v14 = (unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      v15 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 24) = v15;
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      (**(void (***)(void))(v15 - 8))();
      __dst[v8] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_100647A54(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v8 = __src[v7];
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    v10 = (unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_QWORD *)(v10 + 32);
    v12 = *(_OWORD *)(v10 + 16);
    v13 = (unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)v13 = *(_OWORD *)v10;
    *(_OWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 32) = v11;
    __dst[v7] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100647B88(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    v9 = __dst[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8));
    }
    else
    {
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 24));
    }
    v11 = __src[v8];
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      v13 = (unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      v14 = *(_QWORD *)(v13 + 32);
      v15 = *(_OWORD *)(v13 + 16);
      v16 = (unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v16 = *(_OWORD *)v13;
      *(_OWORD *)(v16 + 16) = v15;
      *(_QWORD *)(v16 + 32) = v14;
      __dst[v8] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

uint64_t sub_100647D84(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v4 <= v3)
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_21:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_21;
LABEL_14:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100647E50 + 4 * byte_100EFFA31[(v5 - 1)]))();
}

void sub_100647E9C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > v5)
    v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_10064804C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v3 <= v2)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_10064809C + 4 * byte_100EFFA3F[v4]))();
}

void sub_1006480E4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v4)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  else
    v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1006481B4(uint64_t a1, uint64_t a2)
{
  return swift_getAssociatedConformanceWitness(*(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_1006481D0(_QWORD *a1)
{
  return sub_100645B24(a1);
}

uint64_t sub_1006481F0(uint64_t a1)
{
  return sub_100645DBC(a1);
}

void sub_100648210()
{
  sub_10064832C();
}

void sub_100648230(uint64_t a1)
{
  sub_10064667C(a1);
}

uint64_t sub_100648250()
{
  return CustomCombineIdentifierConvertible<>.combineIdentifier.getter();
}

void sub_100648270()
{
  sub_100646810();
}

void sub_100648290(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  sub_1006457CC(a1, a4, a2);
}

unint64_t sub_1006482A8()
{
  unint64_t result;

  result = qword_1013E9040;
  if (!qword_1013E9040)
  {
    result = swift_getWitnessTable(&unk_100EFFBA8, &type metadata for IgnorableThrottleDecision);
    atomic_store(result, (unint64_t *)&qword_1013E9040);
  }
  return result;
}

uint64_t sub_1006482EC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFFBD0, a1);
}

uint64_t sub_1006482FC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFFBF8, a1);
}

uint64_t sub_10064830C(uint64_t a1, uint64_t a2)
{
  return swift_getAssociatedConformanceWitness(*(_QWORD *)(a2 + 96), *(_QWORD *)(a2 + 80), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

void sub_10064832C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _BYTE v20[24];
  _BYTE v21[24];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v22 = *(_QWORD *)(*v0 + 80);
  v19 = *(_OWORD *)(v1 + 88);
  v23 = v19;
  v24 = v2;
  v3 = type metadata accessor for IgnorableThrottle.Inner.State(0, (uint64_t)&v22);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v20[-v8 - 8];
  v10 = *(_QWORD *)(v1 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v10) + 16));
  v11 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  v12 = swift_beginAccess(v11, v21, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v9, v11, v3, v12);
  if (swift_getEnumCaseMultiPayload(v9, v3) == 1)
  {
    v13 = sub_1004CB6A4(&qword_1013E9048);
    v14 = v19;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v19, v13, 0, 0);
    sub_1004DB728((__int128 *)&v9[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v22);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v9, v14);
    swift_storeEnumTagMultiPayload(v6, v3, 2);
    v16 = swift_beginAccess(v11, v20, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 40))(v11, v6, v3, v16);
    swift_endAccess(v20);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v10) + 16));
    v17 = v24;
    v18 = v25;
    sub_1004BB5A4(&v22, v24);
    dispatch thunk of Cancellable.cancel()(v17, *(_QWORD *)(v18 + 8));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v22);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v10) + 16));
  }
}

unint64_t sub_100648518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9050;
  if (!qword_1013E9050)
  {
    v1 = objc_opt_self(NSTimer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E9050);
  }
  return result;
}

uint64_t sub_100648554(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E48D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100648594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9058;
  if (!qword_1013E9058)
  {
    v1 = type metadata accessor for NSTimer.TimerPublisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSTimer.TimerPublisher, v1);
    atomic_store(result, (unint64_t *)&qword_1013E9058);
  }
  return result;
}

uint64_t sub_1006485DC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100648600()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

double sub_100648624(uint64_t a1)
{
  uint64_t v1;

  return sub_100646210(a1, *(_QWORD *)(v1 + 48));
}

unint64_t sub_100648634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9068;
  if (!qword_1013E9068)
  {
    v1 = sub_1004CB6A4(&qword_1013E9060);
    result = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Autoconnect<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E9068);
  }
  return result;
}

NSString sub_100648680()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ED18 = (uint64_t)result;
  return result;
}

NSString sub_1006486B4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ED20 = (uint64_t)result;
  return result;
}

NSString sub_1006486E8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147ED28 = (uint64_t)result;
  return result;
}

id sub_10064871C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCBA0, (void **)&qword_10147ED18, &qword_10147ED30, (uint64_t)sub_100648680);
}

id sub_10064875C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCBA8, (void **)&qword_10147ED20, &qword_10147ED38, (uint64_t)sub_1006486B4);
}

id sub_10064879C(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return *a4;
}

id sub_1006487D8(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DCBB0, (void **)&qword_10147ED28, &qword_10147ED40, (uint64_t)sub_1006486E8);
}

id sub_1006487FC(uint64_t a1, _QWORD *a2, void **a3, void **a4, uint64_t a5)
{
  void *v7;

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = *a3;
  *a4 = *a3;
  return v7;
}

id sub_10064888C()
{
  return sub_1006488D4(&OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView);
}

id sub_1006488C8()
{
  return sub_1006488D4(&OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView);
}

id sub_1006488D4(_QWORD *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  char *v6;
  void *v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3
    && (v4 = objc_msgSend(v3, "textSelectionDelegate")) != 0
    && (v5 = v4,
        v6 = (char *)objc_msgSend(v4, "selectionViewController"),
        swift_unknownObjectRelease(v5),
        v6)
    && (v7 = *(void **)&v6[*a1], v8 = v7, v6, v7))
  {
    return v8;
  }
  else
  {
    return objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }
}

uint64_t sub_100648A3C()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc);
  if (!Strong)
    return 1;
  v2 = Strong;
  v3 = objc_msgSend(Strong, "delegate");

  if (!v3)
    return 1;
  if (objc_msgSend(v3, "respondsToSelector:", "allowTextEditingToBegin")
    && (objc_msgSend(v3, "respondsToSelector:", "allowTextEditingToBegin") & 1) != 0)
  {
    v4 = (uint64_t)objc_msgSend(v3, "allowTextEditingToBegin");
  }
  else
  {
    v4 = 1;
  }
  swift_unknownObjectRelease(v3);
  return v4;
}

uint64_t sub_100648B20(void *a1)
{
  char *v1;
  char *v2;
  unsigned int v4;
  unsigned __int8 v5;
  void *Strong;
  void *v7;
  id v8;
  unsigned int v9;

  v2 = v1;
  v4 = objc_msgSend(v2, "isFirstResponder");
  v5 = objc_msgSend(a1, "shouldBecomeTextInputEditor");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc]);
  if (!Strong
    || (v7 = Strong, v8 = objc_msgSend(Strong, "delegate"), v7, !v8))
  {
LABEL_8:
    if ((v5 & 1) == 0)
    {
LABEL_11:
      v9 = 0;
      return v4 ^ v9;
    }
LABEL_9:
    v9 = 1;
    return v4 ^ v9;
  }
  if ((objc_msgSend(v8, "respondsToSelector:", "allowTextEditingToBegin") & 1) == 0)
  {
    swift_unknownObjectRelease(v8);
    goto LABEL_8;
  }
  if ((objc_msgSend(v8, "respondsToSelector:", "allowTextEditingToBegin") & 1) == 0)
  {
    swift_unknownObjectRelease(v8);
    if ((v5 & 1) == 0)
      goto LABEL_11;
    goto LABEL_9;
  }
  v9 = objc_msgSend(v8, "allowTextEditingToBegin");
  swift_unknownObjectRelease(v8);
  if ((v5 & 1) == 0)
    goto LABEL_11;
  return v4 ^ v9;
}

double sub_100648CC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask];
  if (v6)
  {
    swift_retain(v6);
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    swift_release(v6);
  }
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v1;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_101273A00, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_100618948((uint64_t)v4, (uint64_t)&unk_1013E9230, (uint64_t)v10);
  v12 = *(_QWORD *)&v1[v5];
  *(_QWORD *)&v1[v5] = v11;
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100648E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_1004B804C(&qword_1013E01F0);
  v4[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[5] = v6;
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100648E94, v7, v8);
}

uint64_t sub_100648E94()
{
  uint64_t v0;
  __n128 v1;
  char v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = swift_release(*(_QWORD *)(v0 + 48));
  if ((static Task<>.isCancelled.getter(v1) & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "keyboardIsAnimating");
    v4 = *(_QWORD *)(v0 + 24);
    if (v3)
    {
      v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask);
      v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask) = 0;
      swift_release(v6);
      v7 = *v5;
      if (*v5)
      {
        swift_retain(*v5);
        sub_1004B804C(&qword_1013E0210);
        Task.cancel()();
        swift_release(v7);
      }
      v8 = *(_QWORD *)(v0 + 32);
      v9 = *(void **)(v0 + 24);
      v10 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
      v11 = v9;
      v12 = static MainActor.shared.getter(v11);
      v13 = (_QWORD *)swift_allocObject(&unk_101273988, 40, 7);
      v13[2] = v12;
      v13[3] = &protocol witness table for MainActor;
      v13[4] = v11;
      v14 = sub_100618948(v8, (uint64_t)&unk_1013EFDC0, (uint64_t)v13);
      v2 = 0;
    }
    else
    {
      objc_msgSend(*(id *)(v0 + 24), "reloadInputViews");
      v14 = 0;
      v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask);
      v2 = 1;
    }
    v15 = *v5;
    *v5 = v14;
    swift_release(v15);
  }
  v16 = *(_QWORD *)(v0 + 32);
  **(_BYTE **)(v0 + 16) = v2;
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1006490B8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  double *v6;
  id v7;
  void *v8;
  uint64_t v9;
  double *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int8 v14;
  double v15;
  Class isa;
  id v17;
  unint64_t v18;
  unsigned __int8 v19;
  Class v20;
  id v21;

  v1 = objc_msgSend(v0, "inputAssistantItem");
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (v2)
  {
    v21 = v1;
    v3 = objc_msgSend((id)swift_unknownObjectRetain(v2), "leadingBarButtonGroups");
    if (v3)
    {
      v4 = v3;
      v5 = sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
      v6 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    }
    else
    {
      v6 = 0;
    }
    v7 = objc_msgSend(v2, "trailingBarButtonGroups");
    if (v7)
    {
      v8 = v7;
      v9 = sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
      v10 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    }
    else
    {
      v10 = 0;
    }
    v11 = objc_msgSend(v21, "leadingBarButtonGroups");
    v12 = sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if (v6)
    {
      swift_bridgeObjectRetain_n(v6, 2);
      v14 = sub_100548BF8((uint64_t)v6, v13);
      swift_bridgeObjectRelease_n(v6, 2);
      swift_bridgeObjectRelease(v13);
      if ((v14 & 1) != 0)
      {
        *(_QWORD *)&v15 = swift_bridgeObjectRelease(v6).n128_u64[0];
        goto LABEL_13;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v13);
      v6 = _swiftEmptyArrayStorage;
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "setLeadingBarButtonGroups:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

LABEL_13:
    v17 = objc_msgSend(v21, "trailingBarButtonGroups", v15);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v12);

    if (v10)
    {
      swift_bridgeObjectRetain_n(v10, 2);
      v19 = sub_100548BF8((uint64_t)v10, v18);
      swift_bridgeObjectRelease_n(v10, 2);
      swift_bridgeObjectRelease(v18);
      if ((v19 & 1) != 0)
      {
        swift_unknownObjectRelease(v2);
        swift_bridgeObjectRelease(v10);
LABEL_18:
        v1 = v21;
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v18);
      v10 = _swiftEmptyArrayStorage;
    }
    v20 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "setTrailingBarButtonGroups:", v20, swift_bridgeObjectRelease(v10).n128_f64[0]);

    swift_unknownObjectRelease(v2);
    goto LABEL_18;
  }
LABEL_19:

}

void sub_100649354()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
  v5 = v1;
  v4 = v1;
  if (v3)
    objc_msgSend(v3, "textWillChange:", v0);
  *(_BYTE *)(v0 + v2) = 0;

}

void sub_100649408()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
  v5 = v1;
  v4 = v1;
  if (v3)
    objc_msgSend(v3, "textDidChange:", v0);
  *(_BYTE *)(v0 + v2) = 0;

}

void sub_1006494BC(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  char **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (v10)
  {
    if (a1 && v10 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v30 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging;
  v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging] = 1;
  v11 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
  v12 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
  v13 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
  v14 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate;
  v15 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
  v16 = v12;
  if (v15)
    objc_msgSend(v15, "textWillChange:", v3);
  v3[v13] = 0;

  v17 = *(_QWORD *)&v3[v9];
  *(_QWORD *)&v3[v9] = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v17);
  v18 = *(void **)&v3[v9];
  if (v18)
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)&v3[v9]), "respondsToSelector:", "didBecomeTextInputEditor"))objc_msgSend(v18, "didBecomeTextInputEditor");
    if ((sub_100648B20(v18) & 1) == 0)
      goto LABEL_19;
    if ((objc_msgSend(v3, "isFirstResponder") & 1) != 0)
    {
      v19 = &selRef_resignFirstResponder;
    }
    else
    {
      if (a2 < 0)
      {
LABEL_19:
        v20 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper];
        if (v20)
          swift_unknownObjectWeakAssign(v20 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_editor, v18);
        v21 = *(void **)&v3[v11];
        v3[v13] = 1;
        v22 = *(void **)&v3[v14];
        v23 = v21;
        if (v22)
          objc_msgSend(v22, "textDidChange:", v3);
        v3[v13] = 0;

        if ((v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress] & 1) == 0)
        {
          objc_msgSend(v3, "reloadInputViews");
          v24 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
          type metadata accessor for MainActor(0);
          v25 = v3;
          v26 = static MainActor.shared.getter(v25);
          v27 = (_QWORD *)swift_allocObject(&unk_1012739D8, 40, 7);
          v27[2] = v26;
          v27[3] = &protocol witness table for MainActor;
          v27[4] = v25;
          v28 = sub_100521B98((uint64_t)v8, (uint64_t)&unk_1013E9220, (uint64_t)v27);
          swift_release(v28);
        }
        swift_unknownObjectRelease(v18);
        v3[v30] = 0;
        return;
      }
      v19 = &selRef_becomeFirstResponder;
    }
    objc_msgSend(v3, *v19);
    goto LABEL_19;
  }
  if (objc_msgSend(v3, "isFirstResponder"))
    objc_msgSend(v3, "resignFirstResponder");
}

uint64_t sub_1006497B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10064981C, v6, v7);
}

uint64_t sub_10064981C()
{
  uint64_t v0;
  id v1;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCBB0 != -1)
    swift_once(&qword_1013DCBB0, sub_1006486E8);
  objc_msgSend(v1, "postNotificationName:object:", qword_10147ED28, *(_QWORD *)(v0 + 16));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100649990(void *a1, void *a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  objc_super v24;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignorePencilInputSource] = 0;
  v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
  v6 = qword_1013DCB58;
  v7 = v2;
  if (v6 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v8 = (void *)qword_10147ECB0;
  *(_QWORD *)&v2[v5] = qword_10147ECB0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask] = 0;
  v9 = &v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_nextInChain];
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_nextInChain]);
  v10 = &v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc];
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc]);
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 1;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_disallowBecomingFirstResponder] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_autocorrectionType] = 2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inlinePredictionType] = 2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_keyboardIsHiding] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isIgnoringKeyboardInput] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper] = 0;
  swift_unknownObjectWeakAssign(v9, a1);
  swift_unknownObjectWeakAssign(v10, a2);
  v11 = v8;

  v24.receiver = v7;
  v24.super_class = (Class)type metadata accessor for CRLTextInputResponder();
  v12 = objc_msgSendSuper2(&v24, "init");
  v13 = (void *)objc_opt_self(NSNotificationCenter);
  v14 = v12;
  v15 = objc_msgSend(v13, "defaultCenter");
  objc_msgSend(v15, "addObserver:selector:name:object:", v14, "applicationDidEnterBackgroundWithNotification:", UIApplicationDidEnterBackgroundNotification, 0);

  v16 = objc_msgSend(v13, "defaultCenter");
  objc_msgSend(v16, "addObserver:selector:name:object:", v14, "applicationWillEnterForegroundWithNotification:", UIApplicationWillEnterForegroundNotification, 0);

  v17 = objc_msgSend(v13, "defaultCenter");
  v18 = qword_1013DCBA0;
  v19 = v14;
  if (v18 != -1)
    swift_once(&qword_1013DCBA0, sub_100648680);
  objc_msgSend(v17, "addObserver:selector:name:object:", v19, "firstResponderChangedWithNotification:", qword_10147ED18, 0);

  v20 = objc_msgSend(v13, "defaultCenter");
  v21 = qword_1013DD250;
  v22 = v19;
  if (v21 != -1)
    swift_once(&qword_1013DD250, sub_100840384);
  objc_msgSend(v20, "addObserver:selector:name:object:", v22, "reloadForMathPaperChangesWithNotification:", static CRLMathCalculationController.mathHintsModeChangedNotificationName, 0);

  return v22;
}

void sub_100649E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  _QWORD v8[4];

  Notification.object.getter(v8, a1);
  if (v8[3])
  {
    v2 = type metadata accessor for CRLTextInputResponder();
    if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
    {
      v3 = v7;
      if ((static NSObject.== infix(_:_:)(v7, v1) & 1) == 0)
      {
        v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
        if (v4)
        {
          v5 = objc_msgSend(v4, "textInputReceiver");
          if (v5)
          {
            v6 = v5;
            objc_msgSend(v5, "endEditing");
            swift_unknownObjectRelease(v6);
          }
        }
      }

    }
  }
  else
  {
    sub_1004CB800((uint64_t)v8, &qword_1013E0230);
  }
}

id sub_100649FB8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];
  objc_super v13;

  if (!objc_msgSend(v0, "canBecomeFirstResponder"))
    return 0;
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for CRLTextInputResponder();
  v1 = objc_msgSendSuper2(&v13, "becomeFirstResponder");
  if ((_DWORD)v1)
  {
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCBA0 != -1)
      swift_once(&qword_1013DCBA0, sub_100648680);
    objc_msgSend(v2, "postNotificationName:object:", qword_10147ED18, v0);

  }
  if (qword_1013DD6F0 != -1)
    swift_once(&qword_1013DD6F0, sub_100A01478);
  swift_beginAccess(&static OS_os_log.crlTextInput, v12, 0, 0);
  v3 = (void *)static OS_os_log.crlTextInput;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, &v11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Bool;
  *(_QWORD *)(inited + 64) = &protocol witness table for Bool;
  *(_BYTE *)(inited + 32) = (_BYTE)v1;
  v6 = v3;
  v8 = static os_log_type_t.default.getter(v7);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "TextInputResponder becomeFirstResponder, success: %d", 52, 2, inited);
  swift_setDeallocating(inited);
  v9 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v9);

  return v1;
}

id sub_10064A204()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  int v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19[24];
  objc_super v20;

  if (!objc_msgSend(v0, "canResignFirstResponder"))
    return 0;
  if ((v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress] & 1) != 0)
    return 0;
  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (!v1)
    return 0;
  if (!objc_msgSend(v1, "resignFirstResponderWhenKeyboardHides"))
    return 0;
  v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder;
  if ((v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder] & 1) != 0)
    return 0;
  v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder] = 1;
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for CRLTextInputResponder();
  v3 = objc_msgSendSuper2(&v20, "resignFirstResponder");
  if ((_DWORD)v3)
  {
    if (v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] == 1)
    {
      v5 = v0[v2];
      Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc]);
      if (Strong)
      {
        v7 = (void *)Strong;
        if (v5)
          v8 = 8320;
        else
          v8 = 0x2000;
        v9 = v0;
        objc_msgSend(v7, "endEditingWithFlags:", v8);

      }
    }
    objc_msgSend(v0, "reloadInputViews");
    v10 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCBA8 != -1)
      swift_once(&qword_1013DCBA8, sub_1006486B4);
    objc_msgSend(v10, "postNotificationName:object:", qword_10147ED20, v0);

  }
  v0[v2] = 0;
  if (qword_1013DD6F0 != -1)
    swift_once(&qword_1013DD6F0, sub_100A01478);
  swift_beginAccess(&static OS_os_log.crlTextInput, v19, 0, 0);
  v11 = (void *)static OS_os_log.crlTextInput;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, &v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Bool;
  *(_QWORD *)(inited + 64) = &protocol witness table for Bool;
  *(_BYTE *)(inited + 32) = (_BYTE)v3;
  v14 = v11;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "TextInputResponder resignFirstResponder, success: %d", 52, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v17);

  return v3;
}

void sub_10064A524()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v6 = v1;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) < 1)
  {
    v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
    v5 = v1;
    if (v4)
      objc_msgSend(v4, "selectionWillChange:", v0);
    *(_BYTE *)(v0 + v3) = 0;
  }
  else
  {
    v2 = v1;
  }

}

void sub_10064A5F8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v6 = v1;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) < 1)
  {
    v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
    v5 = v1;
    if (v4)
      objc_msgSend(v4, "selectionDidChange:", v0);
    *(_BYTE *)(v0 + v3) = 0;
  }
  else
  {
    v2 = v1;
  }

}

uint64_t sub_10064A6CC(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3)
    return 0;
  v4 = objc_msgSend(v3, "textSelectionDelegate");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = type metadata accessor for CRLTextRange();
  v7 = swift_dynamicCastClass(a1, v6);
  if (!v7)
  {
    swift_unknownObjectRelease(v5);
    return v7;
  }
  v8 = a1;
  v9 = objc_msgSend(v5, "textIn:", v7);
  if (!v9)
  {
    swift_unknownObjectRelease(v5);

    return 0;
  }
  v10 = v9;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

  swift_unknownObjectRelease(v5);
  return v7;
}

void sub_10064A82C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v8, &v29);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v10 = sub_1004B8930(0, &qword_1013E91E8, UITextRange_ptr);
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 88) = &type metadata for String;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 64) = a2;
  *(_QWORD *)(inited + 72) = a3;
  v11 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v14;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) == 1
    || (v15 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor)) == 0)
  {
    v25 = v7;
    v26 = a1;
    swift_bridgeObjectRetain(a3);
    goto LABEL_8;
  }
  v16 = v7;
  v17 = a1;
  v18 = objc_msgSend(v15, "textInputReceiver", swift_bridgeObjectRetain(a3).n128_f64[0]);
  if (!v18)
  {
LABEL_8:
    swift_bridgeObjectRetain(inited);
    goto LABEL_9;
  }
  v19 = v18;
  v20 = type metadata accessor for CRLTextRange();
  v21 = swift_dynamicCastClass(v17, v20);
  if (v21)
  {
    v22 = v21;
    v23 = v17;
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "replace:with:", v22, v24);
    swift_bridgeObjectRetain(inited);
    swift_unknownObjectRelease(v19);

  }
  else
  {
    swift_bridgeObjectRetain(inited);
    swift_unknownObjectRelease(v19);
  }
LABEL_9:
  v27 = *(_QWORD *)(v3 + v11);
  v13 = __OFSUB__(v27, 1);
  v28 = v27 - 1;
  if (!v13)
  {
    *(_QWORD *)(v3 + v11) = v28;
    swift_bridgeObjectRelease(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), (char *)&type metadata for Any + 8);

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_10064AB40()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "textSelectionDelegate");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, "selectedTextRange");
  swift_unknownObjectRelease(v3);
  return v4;
}

void sub_10064AC34(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  if (!a1 || (v3 = type metadata accessor for CRLTextRange(), (v4 = swift_dynamicCastClass(a1, v3)) == 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"selectedTextRange", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 391, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectedTextRange", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 391, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v5 = v4;
  v6 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  v7 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v7)
  {
    v14 = a1;
    goto LABEL_13;
  }
  v15 = a1;
  v8 = objc_msgSend(v7, "textSelectionDelegate");
  if (!v8)
  {
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"selectedTextRange", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 392, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectedTextRange", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 392, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v13 = a1;
    goto LABEL_14;
  }
  v9 = v8;
  objc_msgSend(v8, "setSelectedTextRange:", v5);
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress))
    v10 = 16;
  else
    v10 = 0;
  v11 = *(_QWORD *)(a2 + v6);
  if (v11)
  {
    v12 = type metadata accessor for CRLWPEditor(0);
    if (swift_dynamicCastClass(v11, v12))
    {
      swift_unknownObjectRetain(v11);
      sub_100727440(v10, 1);
      swift_unknownObjectRelease(v11);
      swift_unknownObjectRelease(v9);
      v13 = v15;
LABEL_14:

      return;
    }
  }

  swift_unknownObjectRelease(v9);
}

id sub_10064AEE4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "textInputReceiver");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v3, "markedTextRange");
  swift_unknownObjectRelease(v4);
  if (v5)
  {
    v6 = (char *)objc_msgSend(v5, "start");
    v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v9 = NSNotFound.getter(v8);
    if (v7 != v9)
    {
      v10 = *(void **)(v0 + v1);
      if (v10)
      {
        v11 = objc_msgSend(v10, "textInputReceiver");
        if (v11)
        {
          v12 = v11;
          v5 = objc_msgSend(v11, "markedTextRange");
          swift_unknownObjectRelease(v12);
          return v5;
        }
      }
    }
    return 0;
  }
  return v5;
}

void sub_10064AFF8(uint64_t a1, void *a2, NSUInteger a3, NSUInteger a4)
{
  _BYTE *v4;
  void *v9;
  id v10;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[8];
  NSRange v22;

  v9 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
  v21[3] = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  v21[0] = a1;
  v21[1] = a2;
  v10 = v9;
  swift_bridgeObjectRetain(a2);
  v22.location = a3;
  v22.length = a4;
  v11 = NSStringFromRange(v22);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v21[7] = &type metadata for String;
  v21[4] = v12;
  v21[5] = v14;
  v15 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  v16 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress] = v18;
    sub_10064B118(v4, a1, a2, a3, a4);
    v19 = *(_QWORD *)&v4[v15];
    v17 = __OFSUB__(v19, 1);
    v20 = v19 - 1;
    if (!v17)
    {
      *(_QWORD *)&v4[v15] = v20;
      swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);

      return;
    }
  }
  __break(1u);
}

_BYTE *sub_10064B118(_BYTE *result, uint64_t a2, NSString a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE *v6;
  void *v10;

  v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText;
  if ((result[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText] & 1) == 0)
  {
    v6 = result;
    result[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText] = 1;
    result = *(_BYTE **)&result[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
    if (result)
    {
      result = objc_msgSend(result, "textInputReceiver");
      if (result)
      {
        v10 = result;
        if (a3)
          a3 = String._bridgeToObjectiveC()();
        objc_msgSend(v10, "setMarkedText:selectedRange:", a3, a4, a5);

        result = (_BYTE *)swift_unknownObjectRelease(v10);
      }
    }
    v6[v5] = 0;
  }
  return result;
}

void sub_10064B25C(void *a1, NSUInteger a2, NSUInteger a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  id v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  NSRange v25;

  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v8, &v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E9208);
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 56) = v10;
  v11 = v7;
  v12 = a1;
  v25.location = a2;
  v25.length = a3;
  v13 = NSStringFromRange(v25);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *(_QWORD *)(inited + 88) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 72) = v16;
  v17 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
  v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v19;
    v20 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText) == 1)
    {
      swift_bridgeObjectRetain(inited);
    }
    else
    {
      *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText) = 1;
      v21 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
      if (v21 && (v22 = objc_msgSend(v21, "textInputReceiver")) != 0)
      {
        v23 = v22;
        objc_msgSend(v22, "setAttributedMarkedText:selectedRange:", v12, a2, a3);
        swift_bridgeObjectRetain(inited);
        swift_unknownObjectRelease(v23);
      }
      else
      {
        swift_bridgeObjectRetain(inited);
      }
      *(_BYTE *)(v3 + v20) = 0;
      v19 = *(_QWORD *)(v3 + v17);
    }
    if (!__OFSUB__(v19, 1))
    {
      *(_QWORD *)(v3 + v17) = v19 - 1;
      swift_bridgeObjectRelease(inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), (char *)&type metadata for Any + 8);

      return;
    }
  }
  __break(1u);
}

void sub_10064B490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v4;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
    v13 = v5;
    if (v6)
    {
      v7 = v5;
      v8 = objc_msgSend(v6, "textInputReceiver");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "unmarkText");
        swift_unknownObjectRelease(v9);
      }
    }
    else
    {
      v10 = v5;
    }
    v11 = *(_QWORD *)(v0 + v1);
    v3 = __OFSUB__(v11, 1);
    v12 = v11 - 1;
    if (!v3)
    {
      *(_QWORD *)(v0 + v1) = v12;

      return;
    }
  }
  __break(1u);
}

id sub_10064B5F0()
{
  return sub_10064B638((SEL *)&selRef_beginningOfDocument);
}

id sub_10064B62C()
{
  return sub_10064B638((SEL *)&selRef_endOfDocument);
}

id sub_10064B638(SEL *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v4 = objc_msgSend(v3, "textSelectionDelegate");
  if (!v4)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v5 = v4;
  v6 = objc_msgSend(v4, *a1);
  swift_unknownObjectRelease(v5);
  return v6;
}

void sub_10064B6C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v5;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  objc_super v22;

  v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v5)
    goto LABEL_7;
  v8 = objc_msgSend(v5, "textSelectionDelegate");
  if (!v8)
    goto LABEL_7;
  v9 = v8;
  v10 = type metadata accessor for CRLTextPosition();
  v11 = swift_dynamicCastClass(a2, v10);
  if (!v11 || (v12 = v11, (v13 = swift_dynamicCastClass(a3, v10)) == 0))
  {
    swift_unknownObjectRelease(v9);
LABEL_7:
    v15 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
    NSNotFound.getter(v15);
    v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v18 = (objc_class *)type metadata accessor for CRLTextRange();
    v19 = (char *)objc_allocWithZone(v18);
    v20 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v21 = &v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v21 = v16;
    *((_QWORD *)v21 + 1) = v16;
    *(_QWORD *)&v19[v20] = v17;
    v22.receiver = v19;
    v22.super_class = v18;
    v14 = objc_msgSendSuper2(&v22, "init");

    goto LABEL_8;
  }
  v14 = objc_msgSend(v9, "textRangeFrom:to:", v12, v13);
  swift_unknownObjectRelease(v9);
LABEL_8:
  *a4 = v14;
}

id sub_10064B910(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v4)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v6 = objc_msgSend(v4, "textSelectionDelegate");
  if (!v6)
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v7 = v6;
  v8 = type metadata accessor for CRLTextPosition();
  v9 = swift_dynamicCastClass(a1, v8);
  if (!v9)
  {
    swift_unknownObjectRelease(v7);
    return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  }
  v10 = v9;
  v11 = qword_1013DCB58;
  v12 = a1;
  if (v11 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v13 = (void *)qword_10147ECB0;
  v14 = v12;
  v15 = v13;
  v16 = objc_msgSend(v7, "positionFrom:offset:", v10, a2);

  swift_unknownObjectRelease(v7);
  return v16;
}

id sub_10064BA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  void *v6;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id result;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6)
    goto LABEL_6;
  v10 = objc_msgSend(v6, "textSelectionDelegate");
  if (!v10)
    goto LABEL_6;
  v11 = v10;
  v12 = type metadata accessor for CRLTextPosition();
  v13 = swift_dynamicCastClass(a2, v12);
  if (!v13)
  {
    swift_unknownObjectRelease(v11);
LABEL_6:
    result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
    v14 = result;
    goto LABEL_7;
  }
  v14 = objc_msgSend(v11, "positionFrom:in:offset:", v13, a3, a4);
  result = (id)swift_unknownObjectRelease(v11);
LABEL_7:
  *a5 = v14;
  return result;
}

id sub_10064BC28(uint64_t a1, uint64_t a2)
{
  return sub_10064BCA0(a1, a2, (SEL *)&selRef_compare_to_);
}

id sub_10064BC94(uint64_t a1, uint64_t a2)
{
  return sub_10064BCA0(a1, a2, (SEL *)&selRef_offsetFrom_to_);
}

id sub_10064BCA0(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *v5;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v5 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v5)
    return 0;
  v8 = objc_msgSend(v5, "textSelectionDelegate");
  if (!v8)
    return 0;
  v9 = v8;
  v10 = type metadata accessor for CRLTextPosition();
  v11 = swift_dynamicCastClass(a1, v10);
  if (v11 && (v12 = v11, (v13 = swift_dynamicCastClass(a2, v10)) != 0))
    v14 = objc_msgSend(v9, *a3, v12, v13);
  else
    v14 = 0;
  swift_unknownObjectRelease(v9);
  return v14;
}

uint64_t sub_10064BDF0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + *a4);
  *(_QWORD *)(a1 + *a4) = a3;
  swift_unknownObjectRetain(a3);
  return swift_unknownObjectRelease(v4);
}

id sub_10064BE70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v4)
    return 0;
  v6 = objc_msgSend(v4, "textSelectionDelegate");
  if (!v6)
    return 0;
  v7 = v6;
  v8 = type metadata accessor for CRLTextRange();
  v9 = swift_dynamicCastClass(a1, v8);
  if (!v9)
  {
    swift_unknownObjectRelease(v7);
    return 0;
  }
  v10 = objc_msgSend(v7, "positionWithin:farthestIn:", v9, a2);
  swift_unknownObjectRelease(v7);
  return v10;
}

id sub_10064BF70(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v5 = (void *)qword_10147ECB0;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v6, &v20);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E9200, UITextPosition_ptr);
  *(_QWORD *)(inited + 32) = a1;
  type metadata accessor for UITextLayoutDirection(0);
  *(_QWORD *)(inited + 88) = v8;
  *(_QWORD *)(inited + 64) = a2;
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v9)
  {
    v17 = v5;
    v18 = a1;

LABEL_9:
    swift_release(inited);
    return 0;
  }
  v10 = v5;
  v11 = a1;
  v12 = objc_msgSend(v9, "textSelectionDelegate");
  if (!v12)
  {

    goto LABEL_9;
  }
  v13 = v12;
  v14 = type metadata accessor for CRLTextPosition();
  v15 = swift_dynamicCastClass(v11, v14);
  if (!v15)
  {

    swift_release(inited);
    swift_unknownObjectRelease(v13);
    return 0;
  }
  v16 = objc_msgSend(v13, "characterRangeByExtending:in:", v15, a2);
  swift_release(inited);
  swift_unknownObjectRelease(v13);

  return v16;
}

void sub_10064C1A0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;

  v4 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v5)
  {
    if (objc_msgSend(v5, "wantsToReceiveTextInput"))
    {
      v6 = *(void **)(v2 + v4);
      if (v6)
      {
        v7 = objc_msgSend(v6, "textInputReceiver");
        if (v7)
        {
          v8 = v7;
          v9 = type metadata accessor for CRLTextRange();
          v10 = swift_dynamicCastClass(a2, v9);
          if (v10)
          {
            v11 = v10;
            if (a1 == 1)
            {
              v13 = a2;
              v14 = 1;
            }
            else if (a1)
            {
              v12 = a2;
              if (a1 != -1)
              {
                sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 24, (uint64_t)"Unknown direction.", 18, 2u);
              }
              v14 = -1;
            }
            else
            {
              v15 = a2;
              v14 = 0;
            }
            objc_msgSend(v8, "setBaseWritingDirection:forParagraphsWithRange:", v14, v11);
            swift_unknownObjectRelease(v8);

          }
          else
          {
            swift_unknownObjectRelease(v8);
          }
        }
      }
    }
  }
}

double sub_10064C3C4(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  id v17;
  _BYTE v19[64];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 56) = sub_1004B8930(0, &qword_1013E91E8, UITextRange_ptr);
  *(_QWORD *)(v5 + 32) = a1;
  inited = swift_initStackObject(v4, v19);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v5;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v7)
  {
    v16 = v3;
    v17 = a1;
LABEL_7:
    swift_release(inited);
LABEL_9:

    return 0.0;
  }
  v8 = v3;
  v9 = a1;
  v10 = objc_msgSend(v7, "textSelectionDelegate", swift_bridgeObjectRetain(v5).n128_f64[0]);
  if (!v10)
  {
    swift_bridgeObjectRelease(v5);
    goto LABEL_7;
  }
  v11 = v10;
  v12 = type metadata accessor for CRLTextRange();
  v13 = swift_dynamicCastClass(v9, v12);
  if (!v13)
  {
    swift_bridgeObjectRelease(v5);
    swift_release(inited);
    swift_unknownObjectRelease(v11);
    goto LABEL_9;
  }
  objc_msgSend(v11, "firstRectFor:", v13);
  v15 = v14;

  swift_bridgeObjectRelease(v5);
  swift_release(inited);
  swift_unknownObjectRelease(v11);
  return v15;
}

double sub_10064C5A4(void *a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  _QWORD v15[4];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  v4 = 0.0;
  if (v3)
  {
    v5 = objc_msgSend(v3, "textSelectionDelegate");
    if (v5)
    {
      v6 = v5;
      v7 = type metadata accessor for CRLTextPosition();
      v8 = swift_dynamicCastClass(a1, v7);
      if (v8)
      {
        v9 = v8;
        v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
        v15[3] = v7;
        v15[0] = v8;
        v11 = a1;
        v12 = v10;
        objc_msgSend(v6, "caretRectFor:", v9);
        v4 = v13;

        swift_unknownObjectRelease(v6);
        swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);

      }
      else
      {
        swift_unknownObjectRelease(v6);
      }
    }
  }
  return v4;
}

double *sub_10064C6E8(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _BYTE v22[64];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 56) = sub_1004B8930(0, &qword_1013E91E8, UITextRange_ptr);
  *(_QWORD *)(v5 + 32) = a1;
  inited = swift_initStackObject(v4, v22);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v5;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v7)
  {
    v19 = v3;
    v20 = a1;
    swift_bridgeObjectRetain(v5);
    goto LABEL_7;
  }
  v8 = v3;
  v9 = a1;
  v10 = objc_msgSend(v7, "textSelectionDelegate", swift_bridgeObjectRetain(v5).n128_f64[0]);
  if (!v10)
  {
LABEL_7:

    swift_bridgeObjectRelease(v5);
    swift_release(inited);
    return _swiftEmptyArrayStorage;
  }
  v11 = v10;
  v12 = type metadata accessor for CRLTextRange();
  v13 = swift_dynamicCastClass(v9, v12);
  if (!v13)
  {
    swift_unknownObjectRelease(v11);
    goto LABEL_7;
  }
  v14 = v13;
  v15 = v9;
  v16 = objc_msgSend(v11, "selectionRectsFor:", v14);
  v17 = sub_1004B8930(0, (unint64_t *)&qword_1013E6D50, UITextSelectionRect_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  swift_bridgeObjectRelease(v5);
  swift_release(inited);
  swift_unknownObjectRelease(v11);

  return (double *)v18;
}

id sub_10064C940(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _BYTE v17[64];

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E40;
  type metadata accessor for CGPoint(0);
  *(_QWORD *)(v7 + 56) = v8;
  *(double *)(v7 + 32) = a1;
  *(double *)(v7 + 40) = a2;
  inited = swift_initStackObject(v6, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v7;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v10)
  {
    v15 = v5;
LABEL_6:
    swift_release(inited);

    return 0;
  }
  v11 = v5;
  v12 = objc_msgSend(v10, "textSelectionDelegate", swift_bridgeObjectRetain(v7).n128_f64[0]);
  if (!v12)
  {
    swift_bridgeObjectRelease(v7);
    goto LABEL_6;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "closestPositionTo:", a1, a2);
  swift_release(inited);
  swift_unknownObjectRelease(v13);

  swift_bridgeObjectRelease(v7);
  return v14;
}

id sub_10064CAE4(void *a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v23;

  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5A10;
  type metadata accessor for CGPoint(0);
  *(_QWORD *)(v9 + 56) = v10;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 88) = sub_1004B8930(0, &qword_1013E91E8, UITextRange_ptr);
  *(_QWORD *)(v9 + 64) = a1;
  inited = swift_initStackObject(v8, &v23);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v9;
  v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v12)
  {
    v20 = v7;
    v21 = a1;
LABEL_7:
    swift_release(inited);
LABEL_9:

    return 0;
  }
  v13 = v7;
  v14 = a1;
  v15 = objc_msgSend(v12, "textSelectionDelegate", swift_bridgeObjectRetain(v9).n128_f64[0]);
  if (!v15)
  {
    swift_bridgeObjectRelease(v9);
    goto LABEL_7;
  }
  v16 = v15;
  v17 = type metadata accessor for CRLTextRange();
  v18 = swift_dynamicCastClass(v14, v17);
  if (!v18)
  {
    swift_bridgeObjectRelease(v9);
    swift_release(inited);
    swift_unknownObjectRelease(v16);
    goto LABEL_9;
  }
  v19 = objc_msgSend(v16, "closestPositionTo:within:", v18, a2, a3);
  swift_release(inited);
  swift_unknownObjectRelease(v16);

  swift_bridgeObjectRelease(v9);
  return v19;
}

id sub_10064CD10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  id result;
  id v8;
  id v9;

  result = *(id *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (result && (result = objc_msgSend(result, "textSelectionDelegate")) != 0)
  {
    v8 = result;
    v9 = objc_msgSend(result, "characterRangeAt:", a3, a4);
    result = (id)swift_unknownObjectRelease(v8);
  }
  else
  {
    v9 = 0;
  }
  *a2 = v9;
  return result;
}

void sub_10064CED8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  unsigned __int8 v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  NSObject v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t (*v33)(__n128);
  __n128 v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  _BYTE v43[24];
  uint64_t v44;

  v1 = v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "documentIsSharedReadOnly");

    if ((v4 & 1) == 0
      && (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_keyboardIsHiding) & 1) == 0
      && (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging) & 1) == 0)
    {
      v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
      if (v5
        && (v6 = v5, v7 = objc_msgSend(v5, "editorController"), v6, v7))
      {
        v42 = objc_msgSend(v7, "selectionPath");

      }
      else
      {
        v42 = 0;
      }
      v8 = (void *)swift_unknownObjectWeakLoadStrong(v1);
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "infosForCurrentSelectionPath");

        v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
        v12 = v42;
        if (v42)
        {
          if (v11)
          {
            if (*(_QWORD *)(v11 + 16) == 1)
            {
              sub_100858050(v11, (uint64_t)v43);
              swift_bridgeObjectRelease(v11);
              if (!v44)
              {

                sub_1004CB800((uint64_t)v43, &qword_1013E7C20);
                return;
              }
              v13.isa = AnyHashable._bridgeToObjectiveC()().isa;
              sub_1004B89A4((uint64_t)v43);
              v14 = type metadata accessor for CRLWPShapeItem(0);
              v15 = swift_dynamicCastClass(v13.isa, v14);
              if (!v15)
                goto LABEL_32;
              v16 = v15;
              v17 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
              if (v17)
              {
                v18 = v17;
                v19 = (char *)sub_100A1EDA0(v18);

                v20 = (char *)objc_msgSend(v19, "start");
                v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

                if (v21 == NSNotFound.getter(v22))
                {
                  v23 = 0x7FFFFFFFFFFFFFFFLL;
                  v24 = 0;

                  goto LABEL_26;
                }
                v23 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
                v25 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

                v26 = __OFSUB__(v25, v23);
                v24 = v25 - v23;
                if (!v26)
                {
LABEL_26:
                  v27 = objc_msgSend(objc_allocWithZone((Class)CRLWPSelection), "initWithRange:", v23, v24);
                  if (v27)
                  {
                    v28 = v27;
                    v29 = swift_unknownObjectWeakLoadStrong(v1);
                    if (!v29)
                    {

                      goto LABEL_33;
                    }
                    v30 = (void *)v29;
                    v31 = *(_QWORD **)(v16 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
                    v32 = *v31;
                    if (swift_conformsToProtocol2(*v31, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
                    {
                      v33 = *(uint64_t (**)(__n128))(v32 + 704);
                      v34 = swift_retain(v31);
                      v35 = v33(v34);
                      v36 = objc_msgSend((id)v35, "bezierPath", swift_release(v31).n128_f64[0]);

                      LOBYTE(v35) = objc_msgSend(v36, "isLineSegment");
                      if ((v35 & 1) != 0 || objc_msgSend(v30, "documentIsSharedReadOnly"))
                      {

                      }
                      else
                      {
                        v37 = objc_msgSend(v42, "selectionPathWithAppendedSelection:", v28);
                        if (!v37)
                        {

                          return;
                        }
                        v38 = v37;
                        v39 = (void *)swift_unknownObjectWeakLoadStrong(v1);
                        v40 = objc_msgSend(v39, "editorController");

                        v41 = v38;
                        objc_msgSend(v40, "setSelectionPath:", v41);

                      }
LABEL_33:

                      return;
                    }
LABEL_40:
                    __break(1u);
                    return;
                  }
LABEL_32:

                  goto LABEL_33;
                }
                __break(1u);
              }
              __break(1u);
              goto LABEL_40;
            }
            swift_bridgeObjectRelease(v11);
            v12 = v42;
          }
LABEL_23:

          return;
        }
      }
      else
      {
        v12 = v42;
        if (v42)
          goto LABEL_23;
        v11 = 0;
      }
      swift_bridgeObjectRelease(v11);
    }
  }
}

id sub_10064D3FC(uint64_t a1)
{
  return sub_10064D600(a1, (SEL *)&selRef_textInputReceiver, (SEL *)&selRef_indentParagraphLevel_);
}

id sub_10064D41C(uint64_t a1)
{
  return sub_10064D600(a1, (SEL *)&selRef_textInputReceiver, (SEL *)&selRef_outdentParagraphLevel_);
}

uint64_t sub_10064D43C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v11, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  a4(v11);

  return sub_1004CB800((uint64_t)v11, &qword_1013E0230);
}

id sub_10064D4BC(uint64_t a1)
{
  return sub_10064D600(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_insertTab_);
}

id sub_10064D4DC()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  id v3;

  v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  result = *(id *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (result)
  {
    result = objc_msgSend(result, "wantsToReceiveTextInput");
    if ((_DWORD)result)
    {
      result = *(id *)(v0 + v1);
      if (result)
      {
        result = objc_msgSend(result, "textInputReceiver");
        if (result)
        {
          swift_unknownObjectRelease(result);
          result = *(id *)(v0 + v1);
          if (result)
          {
            v3 = objc_msgSend(result, "keyInputReceiver");
            if (v3)
            {
              swift_unknownObjectRelease(v3);
              return 0;
            }
            else
            {
              result = *(id *)(v0 + v1);
              if (result)
                return (id)(objc_msgSend(result, "wantsToInterceptDeleteEvents") ^ 1);
            }
          }
        }
      }
    }
  }
  return result;
}

id sub_10064D5AC(uint64_t a1)
{
  return sub_10064D600(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_insertBacktab_);
}

id sub_10064D5CC(uint64_t a1)
{
  return sub_10064D600(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_insertNewline_);
}

id sub_10064D5EC(uint64_t a1)
{
  return sub_10064D600(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_escapePressed_);
}

id sub_10064D600(uint64_t a1, SEL *a2, SEL *a3)
{
  uint64_t v3;
  id result;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;

  result = *(id *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (result)
  {
    result = objc_msgSend(result, *a2);
    if (result)
    {
      v7 = result;
      sub_1004F370C(a1, (uint64_t)v15);
      v8 = v16;
      if (v16)
      {
        v9 = sub_1004BB5A4(v15, v16);
        v10 = *(_QWORD *)(v8 - 8);
        v11 = __chkstk_darwin(v9);
        v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
        v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
      }
      else
      {
        v14 = 0;
      }
      objc_msgSend(v7, *a3, v14);
      swift_unknownObjectRelease(v7);
      return (id)swift_unknownObjectRelease(v14);
    }
  }
  return result;
}

void sub_10064D72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3)
  {
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) & 1) == 0
      && (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging) & 1) == 0)
    {
      v4 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
      v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v7;
        v10 = (void *)swift_unknownObjectRetain(v3);
        sub_10064D880(v10, a1, a2, v2);
        v11 = *(_QWORD *)(v2 + v4);
        v6 = __OFSUB__(v11, 1);
        v12 = v11 - 1;
        if (!v6)
        {
          *(_QWORD *)(v2 + v4) = v12;
          swift_unknownObjectRelease(v3);
          return;
        }
      }
      __break(1u);
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertText(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 724, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertText(_:)", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 724, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_10064D880(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  NSString v8;
  id v9;
  NSString v10;
  unsigned int v11;
  id v12;
  void *v13;

  if (objc_msgSend(a1, "wantsToReceiveTextInput"))
  {
    v6 = objc_msgSend(a1, "textInputReceiver");
    if (!v6)
      return;
    goto LABEL_3;
  }
  v9 = objc_msgSend(a1, "keyInputReceiver");
  swift_unknownObjectRelease(v9);
  if (v9)
  {
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(a1, "shouldBeginTextInputWith:", v10);

    if (v11)
    {
      v12 = objc_msgSend(a1, "textInputReceiver");
      swift_unknownObjectRelease(v12);
      if (!v12)
        sub_10064CED8();
      v13 = *(void **)(a4 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
      if (v13)
      {
        v6 = objc_msgSend(v13, "textInputReceiver");
        if (v6)
        {
LABEL_3:
          v7 = v6;
          v8 = String._bridgeToObjectiveC()();
          objc_msgSend(v7, "insertText:", v8);

          swift_unknownObjectRelease(v7);
        }
      }
    }
  }
}

void sub_10064DA70()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v1)
    goto LABEL_7;
  v2 = objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor)), "textSelectionDelegate");
  if (!v2
    || (v3 = v2,
        v4 = objc_msgSend(v2, "selectedTextRange"),
        swift_unknownObjectRelease(v3),
        !v4))
  {
    swift_unknownObjectRelease(v1);
LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"deleteKeyPressed()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 749, "Failed to delete text. No editor or selection.", 46, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteKeyPressed()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 749, (uint64_t)"Failed to delete text. No editor or selection.", 46, 2u);
    return;
  }

  v5 = objc_msgSend(v1, "textInputReceiver");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "deleteCurrentSelection");
    swift_unknownObjectRelease(v1);
    v7 = v6;
  }
  else
  {
    v7 = v1;
  }
  swift_unknownObjectRelease(v7);
}

double sub_10064DC18(uint64_t a1)
{
  double result;
  uint64_t v3;
  _QWORD *v4;
  void *Strong;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[5];
  uint64_t v17;

  if ((sub_10064D4DC() & 1) != 0)
  {
    sub_10064DA70();
  }
  else
  {
    v3 = swift_allocObject(&unk_101273A28, 24, 7);
    *(_QWORD *)(v3 + 16) = 0;
    v4 = (_QWORD *)(v3 + 16);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc);
    if (Strong)
    {
      v6 = Strong;
      v7 = objc_msgSend(Strong, "editorController");

      if (v7)
      {
        v16[4] = sub_100651C10;
        v17 = v3;
        v16[0] = _NSConcreteStackBlock;
        v16[1] = *(_QWORD *)"";
        v16[2] = sub_100541BD8;
        v16[3] = &unk_101273A40;
        v8 = _Block_copy(v16);
        v9 = v17;
        swift_retain(v3);
        objc_msgSend(v7, "enumerateEditorsOnStackUsingBlock:", v8, swift_release(v9).n128_f64[0]);
        _Block_release(v8);

      }
    }
    *(_QWORD *)&v10 = swift_beginAccess(v4, v16, 1, 0).n128_u64[0];
    v11 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
    if (!*v4)
    {
      v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
      if (v12)
      {
        *v4 = v12;
        swift_unknownObjectRetain(v12);
        v11 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
      }
    }
    v13 = *(void **)(a1 + v11);
    if (v13 && (v14 = objc_msgSend(v13, "keyInputReceiver", v10)) != 0)
    {
      v15 = v14;
      objc_msgSend(v14, "deleteBackward:", a1);
      swift_release(v3);
      swift_unknownObjectRelease(v15);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v3).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10064DDB4(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t result;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  __objc2_prot *v11;

  v11 = &OBJC_PROTOCOL____TtP8Freeform18CRLTextInputEditor__0;
  result = swift_dynamicCastObjCProtocolConditional(a1, 1, &v11);
  if (result)
  {
    v7 = (void *)result;
    swift_unknownObjectRetain(a1);
    if (objc_msgSend(v7, "wantsToInterceptDeleteEvents"))
    {
      v8 = (uint64_t *)(a3 + 16);
      swift_beginAccess(v8, &v10, 1, 0);
      v9 = *v8;
      *v8 = (uint64_t)v7;
      swift_unknownObjectRetain(a1);
      swift_unknownObjectRelease(v9);
      *a2 = 1;
    }
    return swift_unknownObjectRelease(a1);
  }
  return result;
}

void sub_10064DEE8(char *a1, uint64_t a2, SEL *a3)
{
  void *v3;
  id v5;
  id v6;
  char *v7;

  v3 = *(void **)&a1[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (v3)
  {
    v7 = a1;
    v5 = objc_msgSend(v3, "keyInputReceiver");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, *a3, v7);

      swift_unknownObjectRelease(v6);
    }
    else
    {

    }
  }
}

void sub_10064DF80(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3 && (v4 = objc_msgSend(v3, "keyInputReceiver")) != 0)
  {
    v5 = v4;
    sub_1004F370C(a1, (uint64_t)v13);
    v6 = v14;
    if (v14)
    {
      v7 = sub_1004BB5A4(v13, v14);
      v8 = *(_QWORD *)(v6 - 8);
      v9 = __chkstk_darwin(v7);
      v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
    }
    else
    {
      v12 = 0;
    }
    objc_msgSend(v5, "spacebarTapped:", v12);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(v12);
  }
  else
  {
    sub_10064D72C(32, 0xE100000000000000);
  }
}

id sub_10064E0F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  __n128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  char v22;
  id v23;
  _BYTE v25[72];
  __int128 v26;
  void *v27;
  void *v28;
  _BYTE v29[72];
  _BYTE v30[32];

  if (qword_1013DD6F0 != -1)
    swift_once(&qword_1013DD6F0, sub_100A01478);
  swift_beginAccess(&static OS_os_log.crlTextInput, v30, 0, 0);
  v1 = (void *)static OS_os_log.crlTextInput;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v29);
  v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = inited + 32;
  v6 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v7)
  {
    v8 = v1;
    v27 = &type metadata for Bool;
    v28 = &protocol witness table for Bool;
    LOBYTE(v26) = objc_msgSend(v7, "wantsVisibleKeyboard");
    sub_1004DB728(&v26, v5);
  }
  else
  {
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = 0;
    v10 = v1;
  }
  v11 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v11, "Input view editor wants visible keyboard: %ld", 45, 2, v4);
  swift_setDeallocating(v4);
  v12 = *(_QWORD *)(v4 + 16);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v5, v12, v13);

  v14 = (void *)static OS_os_log.crlTextInput;
  v15 = swift_initStackObject(v2, v25);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
  v16 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress;
  v17 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress);
  *(_QWORD *)(v15 + 56) = &type metadata for Bool;
  *(_QWORD *)(v15 + 64) = &protocol witness table for Bool;
  *(_BYTE *)(v15 + 32) = v17;
  v18 = v14;
  v20 = static os_log_type_t.default.getter(v19);
  sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "Input view scribble in progress: %ld", 36, 2, v15);
  swift_setDeallocating(v15);
  swift_arrayDestroy(v15 + 32, 1, v13);

  v21 = *(void **)(v0 + v6);
  if (!v21)
    return objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = *(_BYTE *)(v0 + v16);
  swift_unknownObjectRetain(*(_QWORD *)(v0 + v6));
  if ((v22 & 1) != 0
    || !objc_msgSend(v21, "wantsVisibleKeyboard")
    || *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_keyboardIsHiding) == 1)
  {
    v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    swift_unknownObjectRelease(v21);
  }
  else
  {
    swift_unknownObjectRelease(v21);
    return 0;
  }
  return v23;
}

_QWORD *sub_10064E4E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  double *v3;
  _QWORD *v5;

  v5 = sub_10064E6F4();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v1 && objc_msgSend(v1, "wantsToReceiveTextInput"))
  {
    v2 = sub_1006508F4();
    sub_100620C10(v2);
  }
  v3 = sub_100651470();
  sub_100620C10((uint64_t)v3);
  return v5;
}

_QWORD *sub_10064E6F4()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  NSString v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v1 = v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = (void *)objc_opt_self(UIKeyCommand);
  v4 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v2, 0, "insertTab:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v6 >= v5 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
  v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
  specialized Array._endMutation()(v7);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v8, 0x20000, "insertBackTab:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
  specialized Array._endMutation()(v12);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v13, 0, "insertNewline:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v20, 0, "escapePressed:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
  specialized Array._endMutation()(v24);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v25, 0x100000, "endTextInput:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v28 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v28 >= v27 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
  v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
  specialized Array._endMutation()(v29);
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v30, 0x100000, "outdentParagraphLevel:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v35, 0x100000, "indentParagraphLevel:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v38 >= v37 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
  v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
  specialized Array._endMutation()(v39);
  v40 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v40)
  {
    v41 = objc_msgSend(v40, "keyInputReceiver");
    if (v41)
    {
      v42 = v41;
      if (objc_msgSend(v41, "handlesSpacebar"))
      {
        v43 = String._bridgeToObjectiveC()();
        v44 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v43, 0, "spacebarTapped:");

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v46 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v45 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v46 >= v45 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
        v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
        specialized Array._endMutation()(v47);
      }
      swift_unknownObjectRelease(v42);
    }
  }
  return _swiftEmptyArrayStorage;
}

Class sub_10064EC2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  Class isa;

  v3 = a3();
  sub_1004B8930(0, &qword_1013E7990, UIKeyCommand_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  return isa;
}

void sub_10064ECB4(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3)
  {
    v4 = objc_msgSend(v3, "keyInputReceiver");
    if (v4)
    {
      v5 = v4;
      v6 = sub_1006515F0(a1);
      if ((v7 & 1) != 0)
      {
        swift_unknownObjectRelease(v5);
      }
      else
      {
        v8 = v6;
        v9 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
        v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
        v11 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
        if (*(uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) < 1)
        {
          v13 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
          *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
          v14 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
          v15 = v10;
          if (v14)
            objc_msgSend(v14, "selectionWillChange:", v1);
          *(_BYTE *)(v1 + v13) = 0;
        }
        else
        {
          v12 = v10;
        }

        v16 = sub_1008EE258((int)objc_msgSend(a1, "modifierFlags"));
        objc_msgSend(v5, "arrowKeyReceivedInDirection:withModifierKeys:", v8, v16);

        v17 = *(void **)(v1 + v9);
        v22 = v17;
        if (*(uint64_t *)(v1 + v11) < 1)
        {
          v19 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
          *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
          v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
          v21 = v17;
          if (v20)
            objc_msgSend(v20, "selectionDidChange:", v1);
          *(_BYTE *)(v1 + v19) = 0;
        }
        else
        {
          v18 = v17;
        }
        swift_unknownObjectRelease(v5);

      }
    }
  }
}

uint64_t sub_10064EEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v3;
  void *v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  objc_super v18;
  __int128 v19;
  __int128 v20;

  if ((static Selector.== infix(_:_:)(a1, "captureTextFromCamera:") & 1) != 0)
  {
    v7 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
    if (!v7)
      goto LABEL_8;
    result = (uint64_t)objc_msgSend(v7, "wantsToReceiveTextInput");
    if ((result & 1) != 0)
      goto LABEL_8;
LABEL_7:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  result = static Selector.== infix(_:_:)(a1, "findNext:");
  if ((result & 1) != 0)
    goto LABEL_7;
  result = static Selector.== infix(_:_:)(a1, "findPrevious:");
  if ((result & 1) != 0)
    goto LABEL_7;
LABEL_8:
  sub_1004F370C(a2, (uint64_t)&v19);
  v9 = *((_QWORD *)&v20 + 1);
  if (*((_QWORD *)&v20 + 1))
  {
    v10 = sub_1004BB5A4(&v19, *((uint64_t *)&v20 + 1));
    v11 = *(_QWORD *)(v9 - 8);
    v12 = __chkstk_darwin(v10);
    v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v19);
  }
  else
  {
    v15 = 0;
  }
  v16 = (objc_class *)type metadata accessor for CRLTextInputResponder();
  v18.receiver = v3;
  v18.super_class = v16;
  v17 = objc_msgSendSuper2(&v18, "targetForAction:withSender:", a1, v15);
  swift_unknownObjectRelease(v15);
  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(&v19, v17);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  return sub_1004D28A4((uint64_t)&v19, (uint64_t)a3);
}

void sub_10064F1EC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *Strong;
  objc_super v23;

  v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper;
  v6 = (id *)&unk_10147E000;
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper))
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc);
    v8 = (objc_class *)type metadata accessor for CRLFloatingCursor();
    v9 = (char *)objc_allocWithZone(v8);
    v10 = &v9[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_icc];
    swift_unknownObjectWeakInit(&v9[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_icc]);
    v11 = &v9[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_editor];
    swift_unknownObjectWeakInit(&v9[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_editor]);
    *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard] = 0;
    v12 = &v9[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint];
    *(_QWORD *)v12 = 0;
    *((_QWORD *)v12 + 1) = 0;
    v12[16] = 1;
    v13 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger;
    v14 = qword_1013DCB58;
    swift_unknownObjectRetain(v7);
    v15 = v9;
    if (v14 != -1)
      swift_once(&qword_1013DCB58, sub_1006185A4);
    v16 = (void *)qword_10147ECB0;
    *(_QWORD *)&v9[v13] = qword_10147ECB0;
    swift_unknownObjectWeakAssign(v10, Strong);
    swift_unknownObjectWeakAssign(v11, v7);
    v17 = v16;

    v23.receiver = v15;
    v23.super_class = v8;
    v18 = objc_msgSendSuper2(&v23, "init");
    v19 = v7;
    v6 = (id *)&unk_10147E000;
    swift_unknownObjectRelease(v19);

    v20 = *(void **)(v2 + v5);
    *(_QWORD *)(v2 + v5) = v18;

  }
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v21 = v6[406];
  sub_10064F3DC(v2, a1, a2);

}

void sub_10064F3DC(uint64_t a1, double a2, double a3)
{
  void *v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *Strong;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char *v23;
  char *v24;
  id v25;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6
    || (v7 = objc_msgSend(v6, "textSelectionDelegate")) == 0
    || (v8 = v7,
        v9 = (char *)objc_msgSend(v7, "selectionViewController"),
        swift_unknownObjectRelease(v8),
        !v9)
    || (v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        v11 = v10,
        v9,
        !v10))
  {
    v11 = (id)sub_10064FC48();
  }
  v12 = (void *)sub_10064FC48();
  objc_msgSend(v11, "convertPoint:toCoordinateSpace:", v12, a2, a3);
  v14 = v13;
  v16 = v15;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc);
  if (Strong)
  {
    v18 = Strong;
    objc_msgSend(Strong, "convertBoundsToUnscaledPoint:", v14, v16);
    v20 = v19;
    v22 = v21;

    v23 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper);
    if (v23)
    {
      v25 = *(id *)&v23[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger];
      v24 = v23;
      sub_100BD6DE4((uint64_t)v24, v20, v22);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10064F5AC(uint64_t a1, double a2, double a3)
{
  void *v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *Strong;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char *v23;
  char *v24;
  id v25;

  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6
    || (v7 = objc_msgSend(v6, "textSelectionDelegate")) == 0
    || (v8 = v7,
        v9 = (char *)objc_msgSend(v7, "selectionViewController"),
        swift_unknownObjectRelease(v8),
        !v9)
    || (v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        v11 = v10,
        v9,
        !v10))
  {
    v11 = (id)sub_10064FC48();
  }
  v12 = (void *)sub_10064FC48();
  objc_msgSend(v11, "convertPoint:toCoordinateSpace:", v12, a2, a3);
  v14 = v13;
  v16 = v15;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_icc);
  if (Strong)
  {
    v18 = Strong;
    objc_msgSend(Strong, "convertBoundsToUnscaledPoint:", v14, v16);
    v20 = v19;
    v22 = v21;

    v23 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper);
    if (v23)
    {
      v25 = *(id *)&v23[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger];
      v24 = v23;
      sub_100BD7040((uint64_t)v24, v20, v22);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10064F7BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  char *v7;
  id v8;
  id v9;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v1 = (void *)qword_10147ECB0;
  v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper);
  if (v3)
  {
    v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger];
    v5 = (id)qword_10147ECB0;
    v6 = v4;
    v7 = v3;
    sub_100BD7194((uint64_t)v7);

    v9 = *(id *)(v0 + v2);
  }
  else
  {
    v8 = (id)qword_10147ECB0;
    v9 = 0;
  }
  *(_QWORD *)(v0 + v2) = 0;

}

double sub_10064F8B4(double a1, double a2, double a3, double a4)
{
  return sub_10064F934((SEL *)&selRef_convertRect_toCoordinateSpace_, a1, a2, a3, a4);
}

double sub_10064F8CC(double a1, double a2)
{
  return sub_10064FADC((SEL *)&selRef_convertPoint_toCoordinateSpace_, a1, a2);
}

double sub_10064F928(double a1, double a2, double a3, double a4)
{
  return sub_10064F934((SEL *)&selRef_convertRect_fromCoordinateSpace_, a1, a2, a3, a4);
}

double sub_10064F934(SEL *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  void *v11;
  id v12;
  id v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;

  v11 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v11
    || (v12 = objc_msgSend(v11, "textSelectionDelegate")) == 0
    || (v13 = v12,
        v14 = (char *)objc_msgSend(v12, "selectionViewController"),
        swift_unknownObjectRelease(v13),
        !v14)
    || (v15 = *(void **)&v14[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        v16 = v15,
        v14,
        !v15))
  {
    v16 = (id)sub_10064FC48();
  }
  v17 = (void *)sub_10064FC48();
  objc_msgSend(v16, *a1, v17, a2, a3, a4, a5);
  v19 = v18;

  return v19;
}

double sub_10064FA54(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, double (*a7)(double, double, double, double))
{
  id v12;
  double v13;

  v12 = a1;
  v13 = a7(a2, a3, a4, a5);

  return v13;
}

double sub_10064FAD0(double a1, double a2)
{
  return sub_10064FADC((SEL *)&selRef_convertPoint_fromCoordinateSpace_, a1, a2);
}

double sub_10064FADC(SEL *a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  double v14;
  double v15;

  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v7
    || (v8 = objc_msgSend(v7, "textSelectionDelegate")) == 0
    || (v9 = v8,
        v10 = (char *)objc_msgSend(v8, "selectionViewController"),
        swift_unknownObjectRelease(v9),
        !v10)
    || (v11 = *(void **)&v10[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        v12 = v11,
        v10,
        !v11))
  {
    v12 = (id)sub_10064FC48();
  }
  v13 = (void *)sub_10064FC48();
  objc_msgSend(v12, *a1, v13, a2, a3);
  v15 = v14;

  return v15;
}

uint64_t sub_10064FC48()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v1 = v0;
  while (1)
  {
    v2 = objc_opt_self(UIView);
    if (swift_dynamicCastObjCClass(v1, v2))
      break;
    v3 = objc_msgSend(v1, "nextResponder");

    if (!v3)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"topFirstResponderView", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 1059, "FLOATING CURSOR: Next responder can't find a view.", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"topFirstResponderView", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 1059, (uint64_t)"FLOATING CURSOR: Next responder can't find a view.", 50, 2u);
      v1 = 0;
      break;
    }
    v4 = objc_opt_self(UIView);
    v1 = v3;
    if (swift_dynamicCastObjCClass(v3, v4))
    {
      v5 = objc_opt_self(UIView);
      return swift_dynamicCastObjCClassUnconditional(v3, v5, 0, 0, 0);
    }
  }
  v7 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  return (uint64_t)v7;
}

uint64_t sub_10064FE08()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  char *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v1
    && (v2 = objc_msgSend(v1, "textSelectionDelegate")) != 0
    && (v3 = v2,
        v4 = (char *)objc_msgSend(v2, "selectionViewController"),
        swift_unknownObjectRelease(v3),
        v4)
    && (v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        v6 = v5,
        v4,
        v5))
  {
    return (uint64_t)v6;
  }
  else
  {
    return sub_10064FC48();
  }
}

double sub_10064FEAC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask];
  if (v6)
  {
    swift_retain(v6);
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    swift_release(v6);
  }
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v1;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1012739B0, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_100618948((uint64_t)v4, (uint64_t)&unk_1013E91D8, (uint64_t)v10);
  v12 = *(_QWORD *)&v1[v5];
  *(_QWORD *)&v1[v5] = v11;
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

id sub_1006500B0()
{
  return sub_1004C3370(type metadata accessor for CRLTextInputResponder);
}

uint64_t type metadata accessor for CRLTextInputResponder()
{
  return objc_opt_self(_TtC8Freeform21CRLTextInputResponder);
}

uint64_t sub_100650208(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v7 = type metadata accessor for CRLTextPosition();
  v8 = swift_dynamicCastClass(a1, v7);
  if (!v8)
    return 1;
  v9 = v8;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtCC8Freeform21CRLTextInputResponder25CRLWPInputStringTokenizer_textInput);
  if (!Strong)
    return 1;
  v11 = (void *)Strong;
  v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  swift_unknownObjectRetain(v12);
  v13 = a1;

  if (!v12)
  {

    return 1;
  }
  v14 = type metadata accessor for CRLWPEditor(0);
  v15 = swift_dynamicCastClass(v12, v14);
  if (!v15)
  {

    swift_unknownObjectRelease(v12);
    return 1;
  }
  v16 = objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "isCharIndex:withEolAffinity:atBoundary:inDirection:", *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location), *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity) == 1, sub_10065196C(a2), a3);

  swift_unknownObjectRelease(v12);
  return (uint64_t)v16;
}

id sub_100650394(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  char *v19;
  objc_super v21;
  unint64_t v22;
  objc_super v23;

  v7 = (objc_class *)type metadata accessor for CRLTextPosition();
  v8 = swift_dynamicCastClass(a1, v7);
  if (!v8)
    return 0;
  v9 = v8;
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtCC8Freeform21CRLTextInputResponder25CRLWPInputStringTokenizer_textInput]);
  if (!Strong)
    return 0;
  v11 = (void *)Strong;
  v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  swift_unknownObjectRetain(v12);
  v13 = a1;

  if (!v12)
  {
LABEL_10:

    return 0;
  }
  v14 = type metadata accessor for CRLWPEditor(0);
  v15 = swift_dynamicCastClass(v12, v14);
  if (!v15)
  {
    swift_unknownObjectRelease(v12);
    goto LABEL_10;
  }
  if (a2 != 4)
  {
    v23.receiver = v3;
    v23.super_class = (Class)type metadata accessor for CRLTextInputResponder.CRLWPInputStringTokenizer();
    v17 = objc_msgSendSuper2(&v23, "positionFromPosition:toBoundary:inDirection:", v9, a2, a3);
    swift_unknownObjectRelease(v12);

    return v17;
  }
  v22 = 0xBFF0000000000000;
  v16 = objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "charIndexByMovingPosition:toBoundary:inDirection:preferPosition:", v9, 4, a3, &v22);
  if (v16 == (id)NSNotFound.getter(v16))
  {

    swift_unknownObjectRelease(v12);
    return 0;
  }
  if (static UITextDirection.storage(_:)(0) == a3 || static UITextDirection.layout(_:)(2) == a3)
  {
    v18 = 1;
  }
  else if (static UITextDirection.layout(_:)(4) == a3 || static UITextDirection.layout(_:)(5) == a3)
  {
    v18 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity);
  }
  else
  {
    v18 = 0;
  }
  v19 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v16;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v18;
  v21.receiver = v19;
  v21.super_class = v7;
  v17 = objc_msgSendSuper2(&v21, "init");

  swift_unknownObjectRelease(v12);
  return v17;
}

id sub_100650670()
{
  return sub_1004C3370(type metadata accessor for CRLTextInputResponder.CRLWPInputStringTokenizer);
}

uint64_t type metadata accessor for CRLTextInputResponder.CRLWPInputStringTokenizer()
{
  return objc_opt_self(_TtCC8Freeform21CRLTextInputResponder25CRLWPInputStringTokenizer);
}

void sub_1006506B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
  v4 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
  v6 = v2;
  if (v5)
    objc_msgSend(v5, "textWillChange:", v0);
  *(_BYTE *)(v0 + v3) = 0;

  v7 = *(void **)(v0 + v1);
  *(_BYTE *)(v0 + v3) = 1;
  v8 = *(void **)(v0 + v4);
  v10 = v7;
  v9 = v7;
  if (v8)
    objc_msgSend(v8, "textDidChange:", v0);
  *(_BYTE *)(v0 + v3) = 0;

}

uint64_t sub_100650774(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3)
    return -1;
  v4 = objc_msgSend(v3, "textInputReceiver");
  if (!v4)
    return -1;
  v5 = v4;
  v6 = type metadata accessor for CRLTextPosition();
  v7 = swift_dynamicCastClass(a1, v6);
  if (!v7)
  {
    swift_unknownObjectRelease(v5);
    return -1;
  }
  v8 = v7;
  v9 = a1;
  v10 = objc_msgSend(v5, "baseWritingDirectionFor:", v8);
  if (v10 == (id)1)
  {
    swift_unknownObjectRelease(v5);

    return 1;
  }
  else
  {
    if (v10)
    {
      if (v10 != (id)-1)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 39, (uint64_t)"Unknown direction.", 18, 2u);
      }
      swift_unknownObjectRelease(v5);

      return -1;
    }
    swift_unknownObjectRelease(v5);

    return 0;
  }
}

uint64_t sub_1006508F4()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDelete);
  v1 = v0;
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v3 = (void *)objc_opt_self(UIKeyCommand);
  v4 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v2, 0x80000, "deleteWordBackward");

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "keyCommandWithInput:modifierFlags:action:", v5, 0x80000, "deleteWordForward");

  objc_msgSend(v4, "setWantsPriorityOverSystemBehavior:", 1);
  objc_msgSend(v6, "setWantsPriorityOverSystemBehavior:", 1);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v6;
  v10 = v8;
  specialized Array._endMutation()(v8);
  return v10;
}

_QWORD *sub_100650A24(uint64_t a1, uint64_t a2)
{
  NSString v3;
  void *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSString v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSString v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  NSString v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  NSString v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSString v74;
  id v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;

  swift_bridgeObjectRetain(a2);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v4 = (void *)objc_opt_self(UIKeyCommand);
  v5 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v3, 0, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v5, "setWantsPriorityOverSystemBehavior:", 1));
  v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v7 >= v6 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
  specialized Array._endMutation()(v8);
  swift_bridgeObjectRetain(a2);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v9, 0x20000, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v10, "setWantsPriorityOverSystemBehavior:", 1));
  v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
  specialized Array._endMutation()(v13);
  swift_bridgeObjectRetain(a2);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v15 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v14, 0x100000, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v15, "setWantsPriorityOverSystemBehavior:", 1));
  v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
  specialized Array._endMutation()(v18);
  swift_bridgeObjectRetain(a2);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v20 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v19, 0x80000, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v20, "setWantsPriorityOverSystemBehavior:", 1));
  v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
  specialized Array._endMutation()(v23);
  swift_bridgeObjectRetain(a2);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v25 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v24, 0x40000, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v25, "setWantsPriorityOverSystemBehavior:", 1));
  v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);
  swift_bridgeObjectRetain(a2);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v30 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v29, 655360, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v30, "setWantsPriorityOverSystemBehavior:", 1));
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v32 >= v31 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
  v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
  specialized Array._endMutation()(v33);
  swift_bridgeObjectRetain(a2);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v35 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v34, 1179648, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v35, "setWantsPriorityOverSystemBehavior:", 1));
  v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v36 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v37 >= v36 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
  v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
  specialized Array._endMutation()(v38);
  swift_bridgeObjectRetain(a2);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v40 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v39, 1572864, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v40, "setWantsPriorityOverSystemBehavior:", 1));
  v42 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v41 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v42 >= v41 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
  v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
  specialized Array._endMutation()(v43);
  swift_bridgeObjectRetain(a2);
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v45 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v44, 786432, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v45, "setWantsPriorityOverSystemBehavior:", 1));
  v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v46 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v47 >= v46 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
  v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
  specialized Array._endMutation()(v48);
  swift_bridgeObjectRetain(a2);
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v50 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v49, 1310720, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v50, "setWantsPriorityOverSystemBehavior:", 1));
  v52 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v51 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v52 >= v51 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
  v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
  specialized Array._endMutation()(v53);
  swift_bridgeObjectRetain(a2);
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v55 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v54, 1703936, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v55, "setWantsPriorityOverSystemBehavior:", 1));
  v57 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v56 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v57 >= v56 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
  specialized Array._endMutation()(v58);
  swift_bridgeObjectRetain(a2);
  v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v60 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v59, 917504, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v60, "setWantsPriorityOverSystemBehavior:", 1));
  v62 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v61 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v62 >= v61 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
  v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
  specialized Array._endMutation()(v63);
  swift_bridgeObjectRetain(a2);
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v65 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v64, 1441792, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v65, "setWantsPriorityOverSystemBehavior:", 1));
  v67 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
  specialized Array._endMutation()(v68);
  swift_bridgeObjectRetain(a2);
  v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v70 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v69, 1835008, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v70, "setWantsPriorityOverSystemBehavior:", 1));
  v72 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v71 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v72 >= v71 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
  specialized Array._endMutation()(v73);
  swift_bridgeObjectRetain(a2);
  v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v75 = objc_msgSend(v4, "keyCommandWithInput:modifierFlags:action:", v74, 1966080, "arrowKeyInputReceivedFrom:");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v75, "setWantsPriorityOverSystemBehavior:", 1));
  v77 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v76 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v77 >= v76 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
  v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
  specialized Array._endMutation()(v78);
  return _swiftEmptyArrayStorage;
}

double *sub_100651470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD v17[8];
  double *v18;

  v18 = _swiftEmptyArrayStorage;
  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v2 = v1;
  v17[0] = v0;
  v17[1] = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v5 = v4;
  v17[2] = v3;
  v17[3] = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
  v8 = v7;
  v17[4] = v6;
  v17[5] = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
  v11 = v10;
  v17[6] = v9;
  v17[7] = v10;
  swift_bridgeObjectRetain(v2);
  v12 = sub_100650A24(v0, v2);
  swift_bridgeObjectRelease(v2);
  sub_100620C10((uint64_t)v12);
  swift_bridgeObjectRetain(v5);
  v13 = sub_100650A24(v3, v5);
  swift_bridgeObjectRelease(v5);
  sub_100620C10((uint64_t)v13);
  swift_bridgeObjectRetain(v8);
  v14 = sub_100650A24(v6, v8);
  swift_bridgeObjectRelease(v8);
  sub_100620C10((uint64_t)v14);
  swift_bridgeObjectRetain(v11);
  v15 = sub_100650A24(v9, v11);
  swift_bridgeObjectRelease(v11);
  sub_100620C10((uint64_t)v15);
  swift_arrayDestroy(v17, 4, &type metadata for String);
  return v18;
}

uint64_t sub_1006515F0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v1 = objc_msgSend(a1, "input");
  if (!v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
    v8 = v11;
    goto LABEL_10;
  }
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v8 = v7;
  if (!v5)
  {
LABEL_10:
    swift_bridgeObjectRelease(v8);
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
    swift_bridgeObjectRelease(v12);
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
    swift_bridgeObjectRelease(v13);
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
    swift_bridgeObjectRelease(v14);
    goto LABEL_11;
  }
  if (v6 == v3 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return 1;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v3, v5, 0);
  swift_bridgeObjectRelease(v8);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease(v5);
    return 1;
  }
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  if (v17 == v3 && v5 == v18)
  {
    v15 = 2;
    swift_bridgeObjectRelease_n(v5, 2);
    return v15;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v3, v5, 0);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
  {
    swift_bridgeObjectRelease(v5);
    return 2;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
  v24 = v23;
  if (v22 == v3 && v5 == v23)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return 4;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v3, v5, 0);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
    swift_bridgeObjectRelease(v5);
    return 4;
  }
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
  v28 = v27;
  if (v26 == v3 && v5 == v27)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return 3;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v3, v5, 0);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v5);
  if ((v29 & 1) != 0)
    return 3;
LABEL_11:
  sub_100757E04(&_mh_execute_header, (uint64_t)"keyInputDirection(from:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 924, "Unknown key direction.", 22, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyInputDirection(from:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 924, (uint64_t)"Unknown key direction.", 22, 2u);
  return 0;
}

uint64_t sub_10065196C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  _BYTE v6[72];

  v1 = a1;
  if (a1 >= 6)
  {
    v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v2, v6);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v1;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 1193, "New UITextGranularity available: %d", 35, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"init(from:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2u, 1193, (uint64_t)"New UITextGranularity available: %d", 35, 2u);
    swift_setDeallocating(inited);
    v4 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v4);
    return 3;
  }
  return v1;
}

uint64_t sub_100651AA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E91CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100648E00(a1, v4, v5, v6);
}

uint64_t sub_100651B10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E921C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_1006497B0(a1, v4, v5, v6);
}

uint64_t sub_100651B80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E91CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100648E00(a1, v4, v5, v6);
}

uint64_t sub_100651BEC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100651C10(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_10064DDB4(a1, a2, v2);
}

uint64_t sub_100651C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100651C28(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t *sub_100651C30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for CRLSELibraryViewModel.Item(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 3)
    {
      v28 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
      v29 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
      v30 = *(int *)(v29 + 48);
      v31 = (uint64_t *)((char *)a1 + v30);
      v32 = (uint64_t *)((char *)a2 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = *(int *)(v29 + 64);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = type metadata accessor for Date(0);
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v38 + 48);
      v40 = swift_bridgeObjectRetain(v33);
      if (v39(v36, 1, v37, v40))
      {
        v41 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v42 = a1;
      v43 = v7;
      v44 = 3;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_15:
        v45 = *(int *)(a3 + 20);
        v46 = *(uint64_t *)((char *)a2 + v45);
        *(uint64_t *)((char *)a1 + v45) = v46;
        swift_bridgeObjectRetain(v46);
        return a1;
      }
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = v12[1];
      *v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRetain(v13);
      v14 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      v15 = v14[12];
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (uint64_t *)((char *)a2 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
      v19 = v14[20];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for Date(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v23 + 48);
      v25 = swift_bridgeObjectRetain(v18);
      if (v24(v21, 1, v22, v25))
      {
        v26 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v42 = a1;
      v43 = v7;
      v44 = 2;
    }
    swift_storeEnumTagMultiPayload(v42, v43, v44);
    goto LABEL_15;
  }
  v27 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain(v27);
  return a1;
}

uint64_t type metadata accessor for CRLSELibraryViewModel.Item(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E94C0, (uint64_t)&nominal type descriptor for CRLSELibraryViewModel.Item);
}

uint64_t type metadata accessor for CRLSEBoardIdentifierStorage(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E9418, (uint64_t)&nominal type descriptor for CRLSEBoardIdentifierStorage);
}

double sub_100651F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v4 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  if (EnumCaseMultiPayload == 3)
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    v11 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v11 + 48) + 8));
    v9 = *(int *)(v11 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
      goto LABEL_7;
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v7 + 20) + 8));
    v8 = sub_1004B804C((uint64_t *)&unk_1014074F0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v8 + 48) + 8));
    v9 = *(int *)(v8 + 80);
  }
  v12 = a1 + v9;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
LABEL_7:
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

_BYTE *sub_100652034(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t, __n128);
  __n128 v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 3)
  {
    v26 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
    v27 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    v28 = *(int *)(v27 + 48);
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = *(int *)(v27 + 64);
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = type metadata accessor for Date(0);
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v36 + 48);
    v38 = swift_bridgeObjectRetain(v31);
    if (v37(v34, 1, v35, v38))
    {
      v39 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v40 = a1;
    v41 = v6;
    v42 = 3;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain(v12);
    v13 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
    v14 = v13[12];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    a1[v13[16]] = a2[v13[16]];
    v18 = v13[20];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for Date(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48);
    v24 = swift_bridgeObjectRetain(v17);
    if (v23(v20, 1, v21, v24))
    {
      v25 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v40 = a1;
    v41 = v6;
    v42 = 2;
LABEL_12:
    swift_storeEnumTagMultiPayload(v40, v41, v42);
    goto LABEL_13;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_13:
  v43 = *(int *)(a3 + 20);
  v44 = *(_QWORD *)&a2[v43];
  *(_QWORD *)&a1[v43] = v44;
  swift_bridgeObjectRetain(v44);
  return a1;
}

_BYTE *sub_1006522B0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t, __n128);
  __n128 v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 3)
    {
      v26 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
      v27 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
      v28 = *(int *)(v27 + 48);
      v29 = &a1[v28];
      v30 = &a2[v28];
      *v29 = *v30;
      v31 = v30[1];
      v29[1] = v31;
      v32 = *(int *)(v27 + 64);
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = type metadata accessor for Date(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v36 + 48);
      v38 = swift_bridgeObjectRetain(v31);
      if (v37(v34, 1, v35, v38))
      {
        v39 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v40 = a1;
      v41 = v6;
      v42 = 3;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      *v10 = *v11;
      v12 = v11[1];
      v10[1] = v12;
      swift_bridgeObjectRetain(v12);
      v13 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      v14 = v13[12];
      v15 = &a1[v14];
      v16 = &a2[v14];
      *v15 = *v16;
      v17 = v16[1];
      v15[1] = v17;
      a1[v13[16]] = a2[v13[16]];
      v18 = v13[20];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for Date(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48);
      v24 = swift_bridgeObjectRetain(v17);
      if (v23(v20, 1, v21, v24))
      {
        v25 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v40 = a1;
      v41 = v6;
      v42 = 2;
LABEL_13:
      swift_storeEnumTagMultiPayload(v40, v41, v42);
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_14:
  v43 = *(int *)(a3 + 20);
  v44 = *(_QWORD *)&a2[v43];
  v45 = *(_QWORD *)&a1[v43];
  *(_QWORD *)&a1[v43] = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  return a1;
}

_BYTE *sub_100652568(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 3)
  {
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
    v18 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    *(_OWORD *)&a1[*(int *)(v18 + 48)] = *(_OWORD *)&a2[*(int *)(v18 + 48)];
    v19 = *(int *)(v18 + 64);
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for Date(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = a1;
    v26 = v6;
    v27 = 3;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
    v10 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
    *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
    a1[v10[16]] = a2[v10[16]];
    v11 = v10[20];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = type metadata accessor for Date(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v25 = a1;
    v26 = v6;
    v27 = 2;
LABEL_12:
    swift_storeEnumTagMultiPayload(v25, v26, v27);
    goto LABEL_13;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_13:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

_BYTE *sub_1006527AC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 3)
    {
      v17 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
      *(_OWORD *)&a1[*(int *)(v18 + 48)] = *(_OWORD *)&a2[*(int *)(v18 + 48)];
      v19 = *(int *)(v18 + 64);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = type metadata accessor for Date(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v25 = a1;
      v26 = v6;
      v27 = 3;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
      v10 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
      a1[v10[16]] = a2[v10[16]];
      v11 = v10[20];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = type metadata accessor for Date(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v25 = a1;
      v26 = v6;
      v27 = 2;
LABEL_13:
      swift_storeEnumTagMultiPayload(v25, v26, v27);
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_14:
  v28 = *(int *)(a3 + 20);
  v29 = *(_QWORD *)&a1[v28];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
  swift_bridgeObjectRelease(v29);
  return a1;
}

uint64_t sub_100652A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100652A1C);
}

uint64_t sub_100652A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100652A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100652AA4);
}

uint64_t sub_100652AA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLSELibraryViewModeItemNode(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E92F8, (uint64_t)&nominal type descriptor for CRLSELibraryViewModeItemNode);
}

uint64_t sub_100652B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100653244(a1, a2, a3, type metadata accessor for CRLSELibraryViewModel.Item, (uint64_t)&value witness table for Builtin.BridgeObject + 64);
}

uint64_t *sub_100652B48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

double sub_100652BE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20) + 8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t sub_100652C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = v7[1];
  *v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100652C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *v6 = *v7;
  v8 = v7[1];
  v9 = v6[1];
  v6[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_100652D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t sub_100652D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (uint64_t *)(a2 + v5);
  v9 = *v7;
  v8 = v7[1];
  v10 = v6[1];
  *v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_100652DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100652DD8);
}

uint64_t sub_100652DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100652E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100652E20);
}

uint64_t sub_100652E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLSEBoardIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E9388, (uint64_t)&nominal type descriptor for CRLSEBoardIdentifier);
}

uint64_t sub_100652E74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLSEBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100652EDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t sub_100652F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_100652FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t sub_100653054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006530B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_10065311C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100653128);
}

uint64_t sub_100653128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1006531A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006531B4);
}

uint64_t sub_1006531B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_100653230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100653244(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&unk_100EFFDE0);
}

uint64_t sub_100653244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t result;
  unint64_t v8;
  _QWORD v9[2];

  result = a4(319);
  if (v8 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    v9[1] = a5;
    swift_initStructMetadata(a1, 256, 2, v9, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_1006532B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v27);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      v28 = type metadata accessor for UUID(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
      v29 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
      v30 = *(int *)(v29 + 48);
      v31 = (_QWORD *)((char *)a1 + v30);
      v32 = (_QWORD *)((char *)a2 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = *(int *)(v29 + 64);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = type metadata accessor for Date(0);
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v38 + 48);
      v40 = swift_bridgeObjectRetain(v33);
      if (v39(v36, 1, v37, v40))
      {
        v41 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v42 = a1;
      v43 = a3;
      v44 = 3;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = v12[1];
      *v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRetain(v13);
      v14 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      v15 = v14[12];
      v16 = (_QWORD *)((char *)a1 + v15);
      v17 = (_QWORD *)((char *)a2 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
      v19 = v14[20];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for Date(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v23 + 48);
      v25 = swift_bridgeObjectRetain(v18);
      if (v24(v21, 1, v22, v25))
      {
        v26 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v42 = a1;
      v43 = a3;
      v44 = 2;
LABEL_14:
      swift_storeEnumTagMultiPayload(v42, v43, v44);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_100653530(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 3)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
    v9 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v9 + 48) + 8));
    v7 = *(int *)(v9 + 64);
  }
  else
  {
    if ((_DWORD)result != 2)
      return result;
    v4 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v5 + 20) + 8));
    v6 = sub_1004B804C((uint64_t *)&unk_1014074F0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v6 + 48) + 8));
    v7 = *(int *)(v6 + 80);
  }
  v10 = a1 + v7;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return result;
}

_BYTE *sub_10065364C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    v25 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
    v26 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    v27 = *(int *)(v26 + 48);
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = *(int *)(v26 + 64);
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = type metadata accessor for Date(0);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48);
    v37 = swift_bridgeObjectRetain(v30);
    if (v36(v33, 1, v34, v37))
    {
      v38 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v39 = a1;
    v40 = a3;
    v41 = 3;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
    v12 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
    v13 = v12[12];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    a1[v12[16]] = a2[v12[16]];
    v17 = v12[20];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = type metadata accessor for Date(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48);
    v23 = swift_bridgeObjectRetain(v16);
    if (v22(v19, 1, v20, v23))
    {
      v24 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v39 = a1;
    v40 = a3;
    v41 = 2;
LABEL_12:
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_1006538A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      v25 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
      v26 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
      v27 = *(int *)(v26 + 48);
      v28 = &a1[v27];
      v29 = &a2[v27];
      *v28 = *v29;
      v30 = v29[1];
      v28[1] = v30;
      v31 = *(int *)(v26 + 64);
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = type metadata accessor for Date(0);
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48);
      v37 = swift_bridgeObjectRetain(v30);
      if (v36(v33, 1, v34, v37))
      {
        v38 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v39 = a1;
      v40 = a3;
      v41 = 3;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      *v9 = *v10;
      v11 = v10[1];
      v9[1] = v11;
      swift_bridgeObjectRetain(v11);
      v12 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      v13 = v12[12];
      v14 = &a1[v13];
      v15 = &a2[v13];
      *v14 = *v15;
      v16 = v15[1];
      v14[1] = v16;
      a1[v12[16]] = a2[v12[16]];
      v17 = v12[20];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = type metadata accessor for Date(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = swift_bridgeObjectRetain(v16);
      if (v22(v19, 1, v20, v23))
      {
        v24 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v39 = a1;
      v40 = a3;
      v41 = 2;
LABEL_13:
      swift_storeEnumTagMultiPayload(v39, v40, v41);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_100653B2C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
    v17 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
    *(_OWORD *)&a1[*(int *)(v17 + 48)] = *(_OWORD *)&a2[*(int *)(v17 + 48)];
    v18 = *(int *)(v17 + 64);
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for Date(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = a1;
    v25 = a3;
    v26 = 3;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
    v9 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
    *(_OWORD *)&a1[v9[12]] = *(_OWORD *)&a2[v9[12]];
    a1[v9[16]] = a2[v9[16]];
    v10 = v9[20];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v24 = a1;
    v25 = a3;
    v26 = 2;
LABEL_12:
    swift_storeEnumTagMultiPayload(v24, v25, v26);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_100653D50(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      v16 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v17 = sub_1004B804C((uint64_t *)&unk_1013F95F0);
      *(_OWORD *)&a1[*(int *)(v17 + 48)] = *(_OWORD *)&a2[*(int *)(v17 + 48)];
      v18 = *(int *)(v17 + 64);
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for Date(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v24 = a1;
      v25 = a3;
      v26 = 3;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
      v9 = (int *)sub_1004B804C((uint64_t *)&unk_1014074F0);
      *(_OWORD *)&a1[v9[12]] = *(_OWORD *)&a2[v9[12]];
      a1[v9[16]] = a2[v9[16]];
      v10 = v9[20];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for Date(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_1004B804C(&qword_1013E04F0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v24 = a1;
      v25 = a3;
      v26 = 2;
LABEL_13:
      swift_storeEnumTagMultiPayload(v24, v25, v26);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_100653F8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v9[32];
  _QWORD v10[4];
  _BYTE v11[32];
  _QWORD v12[4];

  v12[0] = &unk_100EFFE00;
  v12[1] = &unk_100EFFE18;
  v2 = type metadata accessor for CRLSEBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100EFFDE0;
    v10[2] = &unk_100EFFE30;
    sub_10056ACC0(319);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v10[3] = v6;
      swift_getTupleTypeLayout(v11, 0, 4, v10);
      v12[2] = v11;
      v7 = type metadata accessor for UUID(319);
      if (v8 <= 0x3F)
      {
        swift_getTupleTypeLayout3(v9, *(_QWORD *)(v7 - 8) + 64, &unk_100EFFDE0, v6);
        v12[3] = v9;
        swift_initEnumMetadataMultiPayload(a1, 256, 4, v12);
      }
    }
  }
}

uint64_t sub_10065408C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E9530);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100656D90();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModeItemNode.CodingKeys, &type metadata for CRLSELibraryViewModeItemNode.CodingKeys, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v13 = sub_1004B7878(&qword_1013F95D0, type metadata accessor for CRLSELibraryViewModel.Item, (uint64_t)&unk_100EFFED0);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v19 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for CRLSELibraryViewModeItemNode(0) + 20));
    v18 = 1;
    v14 = sub_1004B804C((uint64_t *)&unk_1013F9600);
    v15 = sub_100656DD4((unint64_t *)&qword_1013E9538, &qword_1013F9610, (uint64_t)&unk_100F00050, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, &v18, v5, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100654220(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v25 = a2;
  v4 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v4);
  v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1004B804C(&qword_1013E9508);
  v6 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(int *)(v12 + 20);
  *(_QWORD *)&v11[v28] = _swiftEmptyArrayStorage;
  v13 = a1[3];
  v14 = a1[4];
  sub_1004BB5A4(a1, v13);
  v15 = sub_100656D90();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModeItemNode.CodingKeys, &type metadata for CRLSELibraryViewModeItemNode.CodingKeys, v15, v13, v14);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v28]);
  }
  else
  {
    v16 = v6;
    v31 = 0;
    v17 = sub_1004B7878(&qword_1013E9518, type metadata accessor for CRLSELibraryViewModel.Item, (uint64_t)&unk_100EFFEF8);
    v19 = (uint64_t)v26;
    v18 = v27;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, &v31, v27, v4, v17);
    sub_1004B84E0(v19, (uint64_t)v11, type metadata accessor for CRLSELibraryViewModel.Item);
    v20 = sub_1004B804C((uint64_t *)&unk_1013F9600);
    v30 = 1;
    v21 = sub_100656DD4(&qword_1013E9520, &qword_1013E9528, (uint64_t)&unk_100F00078, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v30, v18, v20, v21);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v18);
    v23 = v28;
    v22 = v29;
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v28]);
    *(_QWORD *)&v11[v23] = v22;
    sub_1004B8460((uint64_t)v11, v25, type metadata accessor for CRLSELibraryViewModeItemNode);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLSELibraryViewModeItemNode);
  }
}

uint64_t sub_1006544D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E9580);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100657D88();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSEBoardIdentifierStorage.CodingKeys, &type metadata for CRLSEBoardIdentifierStorage.CodingKeys, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20));
    v15 = *v14;
    v16 = v14[1];
    v19 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v19, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100654628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  char v33;

  v27 = a2;
  v30 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1004B804C(&qword_1013E9570);
  v5 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  sub_1004BB5A4(a1, v12);
  v13 = sub_100657D88();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSEBoardIdentifierStorage.CodingKeys, &type metadata for CRLSEBoardIdentifierStorage.CodingKeys, v13, v12, v11);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v25 = a1;
  v26 = v5;
  v14 = (uint64_t)v10;
  v15 = v28;
  v33 = 0;
  v16 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v17 = v30;
  v18 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v33, v29, v30, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v31, v17);
  v32 = 1;
  v19 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v18);
  v22 = (uint64_t *)(v14 + *(int *)(v8 + 20));
  *v22 = v19;
  v22[1] = v21;
  sub_1004B8460(v14, v27, type metadata accessor for CRLSEBoardIdentifierStorage);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v25);
  return sub_1004B84A4(v14, type metadata accessor for CRLSEBoardIdentifierStorage);
}

uint64_t sub_1006548B0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6572646C696863;
  else
    return 1835365481;
}

uint64_t sub_1006548E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100658A98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100654908(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100656D90();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100654930(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100656D90();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100654958(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100654220(a1, a2);
}

uint64_t sub_10065496C(_QWORD *a1)
{
  return sub_10065408C(a1);
}

uint64_t sub_100654980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  sub_1006577BC(a1, a2);
  if ((v6 & 1) != 0)
    return sub_10054288C(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
  else
    return 0;
}

uint64_t sub_1006549D4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D614E72656E776FLL;
  else
    return 0x4955556472616F62;
}

uint64_t sub_100654A18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100658B78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100654A3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657D88();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100654A64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657D88();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100654A8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100654628(a1, a2);
}

uint64_t sub_100654AA0(_QWORD *a1)
{
  return sub_1006544D4(a1);
}

uint64_t sub_100654AB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  __chkstk_darwin(v4);
  v20 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E9548);
  v19 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v12);
  v14 = sub_100657D44();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSEBoardIdentifier.CodingKeys, &type metadata for CRLSEBoardIdentifier.CodingKeys, v14, v12, v13);
  if (!v2)
  {
    v15 = sub_1004B7878(&qword_1013E9558, type metadata accessor for CRLSEBoardIdentifierStorage, (uint64_t)&unk_100EFFF48);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, v16, v6, v4, v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
    sub_1004B84E0(v20, (uint64_t)v11, type metadata accessor for CRLSEBoardIdentifierStorage);
    sub_1004B84E0((uint64_t)v11, v18, type metadata accessor for CRLSEBoardIdentifier);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

uint64_t sub_100654C80()
{
  return 0x656761726F7473;
}

uint64_t sub_100654C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease(0xE700000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656761726F7473, 0xE700000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100654D2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657D44();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100654D54(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657D44();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100654D7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100654AB4(a1, a2);
}

uint64_t sub_100654D90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E9560);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100657D44();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSEBoardIdentifier.CodingKeys, &type metadata for CRLSEBoardIdentifier.CodingKeys, v10, v8, v9);
  v11 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  v12 = sub_1004B7878(&qword_1013E9568, type metadata accessor for CRLSEBoardIdentifierStorage, (uint64_t)&unk_100EFFF20);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v2, v13, v4, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int sub_100654EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v7, v1, v2);
  v3 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

double sub_100654F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  v5 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = v5[1];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

Swift::Int sub_100654FD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, a1);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20));
  v5 = *v4;
  v6 = v4[1];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

void sub_10065506C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for UUID(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_10065516C + 4 * byte_100EFFD20[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

void sub_10065516C()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

void sub_1006552E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  _QWORD v23[6];
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v29 = sub_1004B804C(&qword_1013E95F8);
  v23[2] = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v28 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v34 = v4;
  __chkstk_darwin(v3);
  v32 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1004B804C(&qword_1013E9600);
  v23[1] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v25 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v7);
  v30 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v31 = (char *)v23 - v10;
  v24 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v24);
  v26 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E9608);
  v23[4] = *(_QWORD *)(v12 - 8);
  v23[5] = v12;
  __chkstk_darwin(v12);
  v13 = sub_1004B804C(&qword_1013E9610);
  v23[3] = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1004B804C(&qword_1013E9618);
  v35 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v19 = a1[4];
  sub_1004BB5A4(a1, v20);
  v21 = sub_100657DCC();
  v37 = v18;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModel.Item.CodingKeys, &type metadata for CRLSELibraryViewModel.Item.CodingKeys, v21, v20, v19);
  sub_1004B8460(v36, (uint64_t)v16, type metadata accessor for CRLSELibraryViewModel.Item);
  v22 = (char *)sub_1006555D4 + 4 * byte_100EFFD24[swift_getEnumCaseMultiPayload(v16, v14)];
  __asm { BR              X10 }
}

uint64_t sub_1006555D4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *v1;
  *(_BYTE *)(v3 - 92) = 0;
  v5 = sub_100657F20();
  v7 = *(_QWORD *)(v3 - 112);
  v6 = *(_QWORD *)(v3 - 104);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys, v3 - 92, v6, &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys, v5);
  *(_BYTE *)(v3 - 93) = v4;
  v8 = sub_100658034();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3 - 93, v9, v2, &type metadata for CRLSELibraryViewModel.Library, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v7, v6);
}

uint64_t sub_100655BB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  _QWORD v40[10];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;

  v46 = a2;
  v41 = sub_1004B804C(&qword_1013E9588);
  v43 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v44 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1004B804C(&qword_1013E9590);
  v47 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v51 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E9598);
  v40[8] = *(_QWORD *)(v5 - 8);
  v40[9] = v5;
  __chkstk_darwin(v5);
  v45 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E95A0);
  v40[6] = *(_QWORD *)(v7 - 8);
  v40[7] = v7;
  __chkstk_darwin(v7);
  v50 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1004B804C(&qword_1013E95A8);
  v48 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v49);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v40 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v40 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)v40 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)v40 - v23;
  v25 = a1[3];
  v26 = a1[4];
  v53 = a1;
  sub_1004BB5A4(a1, v25);
  v27 = sub_100657DCC();
  v28 = v54;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModel.Item.CodingKeys, &type metadata for CRLSELibraryViewModel.Item.CodingKeys, v27, v25, v26);
  if (!v28)
  {
    v40[2] = v21;
    v40[3] = v18;
    v40[4] = v24;
    v40[5] = v12;
    v54 = v15;
    v29 = v49;
    v30 = v52;
    v31 = KeyedDecodingContainer.allKeys.getter(v52);
    v32 = v31;
    if (*(_QWORD *)(v31 + 16) == 1)
    {
      v40[1] = v31;
      __asm { BR              X10 }
    }
    v33 = type metadata accessor for DecodingError(0);
    swift_allocError(v33, &protocol witness table for DecodingError, 0, 0);
    v35 = v34;
    sub_1004B804C(&qword_1013DF800);
    *v35 = v29;
    v36 = KeyedDecodingContainer.codingPath.getter(v30);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v36, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v37.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, enum case for DecodingError.typeMismatch(_:), v33);
    swift_willThrow(v37);
    v38 = swift_bridgeObjectRelease(v32);
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v10, v30, v38);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v53);
}

uint64_t sub_1006566D0(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  char v33;

  v30 = a2;
  v3 = sub_1004B804C(&qword_1013E97D8);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E97E0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E97E8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E97F0);
  v29 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v15 = a1[4];
  sub_1004BB5A4(a1, v16);
  v17 = sub_100659F5C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModel.Library.CodingKeys, &type metadata for CRLSELibraryViewModel.Library.CodingKeys, v17, v16, v15);
  if ((_BYTE)v30)
  {
    if (v30 == 1)
    {
      v32 = 1;
      v18 = sub_100659FE4();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys, &v32, v12, &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys, v18);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
    }
    else
    {
      v33 = 2;
      v20 = sub_100659FA0();
      v21 = v26;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys, &v33, v12, &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys, v20);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
    }
  }
  else
  {
    v31 = 0;
    v19 = sub_10065A028();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys, &v31, v12, &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys, v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v12);
}

uint64_t sub_100656934()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100656970 + 4 * byte_100EFFD2C[*v0]))(0x6564496472616F62, 0xEF7265696669746ELL);
}

uint64_t sub_100656970()
{
  return 0x656C746974;
}

uint64_t sub_100656984()
{
  return 0x6465726168537369;
}

uint64_t sub_10065699C()
{
  return 0x746964457473616CLL;
}

uint64_t sub_1006569B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100658C78(a1, a2);
  *a3 = result;
  return result;
}

void sub_1006569DC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1006569E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657E54();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656A10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657E54();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656A38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100656A68 + 4 * byte_100EFFD30[*v0]))(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_100656A68()
{
  return 0x7265646C6F66;
}

uint64_t sub_100656A7C()
{
  return 0x6472616F62;
}

uint64_t sub_100656A90()
{
  return 0x42676E69646E6570;
}

uint64_t sub_100656AB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100658E58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100656AD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657DCC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656AFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657DCC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656B24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657E98();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656B4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657E98();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656B74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657F20();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656B9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657F20();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656BC4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C746974;
  if (*v0 != 1)
    v1 = 0x746964457473616CLL;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_100656C20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100659018(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100656C44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657E10();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656C6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100657E10();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656C94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100655BB4(a1, a2);
}

void sub_100656CA8(_QWORD *a1)
{
  sub_1006552E0(a1);
}

Swift::Int sub_100656CBC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10065506C();
  return Hasher._finalize()();
}

Swift::Int sub_100656CFC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10065506C();
  return Hasher._finalize()();
}

uint64_t sub_100656D38()
{
  return sub_1004B7878(&qword_1013E94F8, type metadata accessor for CRLSELibraryViewModel.Item, (uint64_t)&unk_100EFFE68);
}

uint64_t sub_100656D64()
{
  return sub_1004B7878(&qword_1013E9500, type metadata accessor for CRLSEBoardIdentifier, (uint64_t)&unk_100EFFFB0);
}

unint64_t sub_100656D90()
{
  unint64_t result;

  result = qword_1013E9510;
  if (!qword_1013E9510)
  {
    result = swift_getWitnessTable(&unk_100F00A88, &type metadata for CRLSELibraryViewModeItemNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9510);
  }
  return result;
}

uint64_t sub_100656DD4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_1004CB6A4((uint64_t *)&unk_1013F9600);
    sub_1004B7878(a2, type metadata accessor for CRLSELibraryViewModeItemNode, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100656E58()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C61636F6CLL;
  if (*v0 != 1)
    v1 = 0x64756F6C4369;
  if (*v0)
    return v1;
  else
    return 0x6C616963657073;
}

uint64_t sub_100656EAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100659178(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100656ED0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659F5C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656EF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659F5C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656F20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659FA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656F48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659FA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656F70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659FE4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656F98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659FE4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100656FC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10065A028();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100656FE8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10065A028();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_100657010@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1006592BC(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100657038(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1006566D0(a1, *v1);
}

void sub_100657050(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[11];
  uint64_t v16;
  uint64_t v17;

  v16 = a2;
  v3 = sub_1004B804C(&qword_1013E97A8);
  v15[9] = *(_QWORD *)(v3 - 8);
  v15[10] = v3;
  __chkstk_darwin(v3);
  v15[8] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E97B0);
  v15[6] = *(_QWORD *)(v5 - 8);
  v15[7] = v5;
  __chkstk_darwin(v5);
  v15[5] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E97B8);
  v15[3] = *(_QWORD *)(v7 - 8);
  v15[4] = v7;
  __chkstk_darwin(v7);
  v15[2] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E97C0);
  v15[0] = *(_QWORD *)(v9 - 8);
  v15[1] = v9;
  __chkstk_darwin(v9);
  v10 = sub_1004B804C(&qword_1013E97C8);
  __chkstk_darwin(v10);
  v11 = sub_1004B804C(&qword_1013E97D0);
  v17 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v13);
  v14 = sub_100659DC4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModel.Folder.CodingKeys, &type metadata for CRLSELibraryViewModel.Folder.CodingKeys, v14, v13, v12);
  __asm { BR              X10 }
}

uint64_t sub_100657248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)(v5 - 69) = 0;
  v6 = sub_100659F18();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys, v5 - 69, v1, &type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 8))(v2, v1);
}

uint64_t sub_1006573B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659F18();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006573E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659F18();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100657408()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10065743C + 4 * byte_100EFFD39[*v0]))(0x6472616F426C6C61, 0xE900000000000073);
}

uint64_t sub_10065743C()
{
  return 0x73746E65636572;
}

uint64_t sub_100657454()
{
  return 0x657469726F766166;
}

uint64_t sub_100657468()
{
  return 0x646572616873;
}

uint64_t sub_10065747C()
{
  return 0x796C746E65636572;
}

uint64_t sub_1006574A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100659694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006574C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659DC4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006574EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659DC4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100657514(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659E90();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065753C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659E90();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100657564(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659E08();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065758C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659E08();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006575B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659ED4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006575DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659ED4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100657604(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659E4C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065762C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100659E4C();
  return CodingKey.debugDescription.getter(a1, v2);
}

char *sub_100657654@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1006598E4(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

void sub_10065767C(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_100657050(a1, *v1);
}

uint64_t sub_100657694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v17;
  uint64_t v19;

  v4 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  v10 = static UUID.== infix(_:_:)(a1);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLSEBoardIdentifier);
  sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLSEBoardIdentifier);
  if ((v10 & 1) != 0)
  {
    v11 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
    v12 = *(_QWORD *)&v9[v11];
    v13 = *(_QWORD *)&v9[v11 + 8];
    v14 = &v6[v11];
    v15 = *((_QWORD *)v14 + 1);
    if (v12 == *(_QWORD *)v14 && v13 == v15)
      v17 = 1;
    else
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, *(_QWORD *)v14, v15, 0);
  }
  else
  {
    v17 = 0;
  }
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLSEBoardIdentifier);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLSEBoardIdentifier);
  return v17 & 1;
}

void sub_1006577BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[8];

  v4 = type metadata accessor for UUID(0);
  v26[6] = *(_QWORD *)(v4 - 8);
  v26[7] = v4;
  __chkstk_darwin(v4);
  v26[1] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v26[0] = (char *)v26 - v7;
  v8 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v8);
  v26[5] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v26[4] = (char *)v26 - v11;
  __chkstk_darwin(v12);
  v26[3] = (char *)v26 - v13;
  __chkstk_darwin(v14);
  v26[2] = (char *)v26 - v15;
  v16 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  v20 = sub_1004B804C(&qword_1013E9540);
  __chkstk_darwin(v20);
  v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_1004B8460(a1, (uint64_t)v22, type metadata accessor for CRLSELibraryViewModel.Item);
  sub_1004B8460(a2, v24, type metadata accessor for CRLSELibraryViewModel.Item);
  v25 = (char *)sub_1006579F4 + 4 * byte_100EFFD3E[swift_getEnumCaseMultiPayload(v22, v16)];
  __asm { BR              X10 }
}

BOOL sub_1006579F4()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  BOOL v4;

  sub_1004B8460(v0, (uint64_t)v2, type metadata accessor for CRLSELibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v1, v3))
  {
    sub_1004CB800(v0, &qword_1013E9540);
    return 0;
  }
  else
  {
    v4 = *v2 == *v1;
    sub_1004B84A4(v0, type metadata accessor for CRLSELibraryViewModel.Item);
  }
  return v4;
}

unint64_t sub_100657D44()
{
  unint64_t result;

  result = qword_1013E9550;
  if (!qword_1013E9550)
  {
    result = swift_getWitnessTable(&unk_100F00A38, &type metadata for CRLSEBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9550);
  }
  return result;
}

unint64_t sub_100657D88()
{
  unint64_t result;

  result = qword_1013E9578;
  if (!qword_1013E9578)
  {
    result = swift_getWitnessTable(&unk_100F009E8, &type metadata for CRLSEBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9578);
  }
  return result;
}

unint64_t sub_100657DCC()
{
  unint64_t result;

  result = qword_1013E95B0;
  if (!qword_1013E95B0)
  {
    result = swift_getWitnessTable(&unk_100F00998, &type metadata for CRLSELibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E95B0);
  }
  return result;
}

unint64_t sub_100657E10()
{
  unint64_t result;

  result = qword_1013E95B8;
  if (!qword_1013E95B8)
  {
    result = swift_getWitnessTable(&unk_100F00948, &type metadata for CRLSELibraryViewModel.Item.PendingBoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E95B8);
  }
  return result;
}

unint64_t sub_100657E54()
{
  unint64_t result;

  result = qword_1013E95C8;
  if (!qword_1013E95C8)
  {
    result = swift_getWitnessTable(&unk_100F008F8, &type metadata for CRLSELibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E95C8);
  }
  return result;
}

unint64_t sub_100657E98()
{
  unint64_t result;

  result = qword_1013E95D8;
  if (!qword_1013E95D8)
  {
    result = swift_getWitnessTable(&unk_100F008A8, &type metadata for CRLSELibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E95D8);
  }
  return result;
}

unint64_t sub_100657EDC()
{
  unint64_t result;

  result = qword_1013E95E0;
  if (!qword_1013E95E0)
  {
    result = swift_getWitnessTable(&unk_100F00880, &type metadata for CRLSELibraryViewModel.Folder);
    atomic_store(result, (unint64_t *)&qword_1013E95E0);
  }
  return result;
}

unint64_t sub_100657F20()
{
  unint64_t result;

  result = qword_1013E95E8;
  if (!qword_1013E95E8)
  {
    result = swift_getWitnessTable(&unk_100F00830, &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E95E8);
  }
  return result;
}

unint64_t sub_100657F64()
{
  unint64_t result;

  result = qword_1013E95F0;
  if (!qword_1013E95F0)
  {
    result = swift_getWitnessTable(&unk_100F00808, &type metadata for CRLSELibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_1013E95F0);
  }
  return result;
}

uint64_t sub_100657FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100657FF0()
{
  unint64_t result;

  result = qword_1013E9628;
  if (!qword_1013E9628)
  {
    result = swift_getWitnessTable(&unk_100F007E0, &type metadata for CRLSELibraryViewModel.Folder);
    atomic_store(result, (unint64_t *)&qword_1013E9628);
  }
  return result;
}

unint64_t sub_100658034()
{
  unint64_t result;

  result = qword_1013E9630;
  if (!qword_1013E9630)
  {
    result = swift_getWitnessTable(&unk_100F007B8, &type metadata for CRLSELibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_1013E9630);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.LibraryCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.FolderCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.FolderCodingKeys;
}

uint64_t _s8Freeform21CRLSELibraryViewModelV4ItemO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100658100 + 4 * byte_100EFFD47[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100658134 + 4 * byte_100EFFD42[v4]))();
}

uint64_t sub_100658134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10065813C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100658144);
  return result;
}

uint64_t sub_100658150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100658158);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10065815C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100658164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.BoardCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.BoardCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.PendingBoardCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.PendingBoardCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSEBoardIdentifierStorage.CodingKeys()
{
  return &type metadata for CRLSEBoardIdentifierStorage.CodingKeys;
}

uint64_t _s8Freeform21CRLSELibraryViewModelV4ItemO17LibraryCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1006581E8 + 4 * byte_100EFFD4C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100658208 + 4 * byte_100EFFD51[v4]))();
}

_BYTE *sub_1006581E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100658208(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100658210(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100658218(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100658220(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100658228(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLSEBoardIdentifier.CodingKeys()
{
  return &type metadata for CRLSEBoardIdentifier.CodingKeys;
}

uint64_t _s8Freeform27CRLSEBoardIdentifierStorageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100658290 + 4 * byte_100EFFD5B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1006582C4 + 4 * byte_100EFFD56[v4]))();
}

uint64_t sub_1006582C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006582CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1006582D4);
  return result;
}

uint64_t sub_1006582E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1006582E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1006582EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1006582F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModeItemNode.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModeItemNode.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder()
{
  return &type metadata for CRLSELibraryViewModel.Folder;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel()
{
  return &type metadata for CRLSELibraryViewModel;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library()
{
  return &type metadata for CRLSELibraryViewModel.Library;
}

unint64_t sub_10065834C()
{
  unint64_t result;

  result = qword_1013E9638;
  if (!qword_1013E9638)
  {
    result = swift_getWitnessTable(&unk_100F00168, &type metadata for CRLSELibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_1013E9638);
  }
  return result;
}

unint64_t sub_100658394()
{
  unint64_t result;

  result = qword_1013E9640;
  if (!qword_1013E9640)
  {
    result = swift_getWitnessTable(&unk_100F001D0, &type metadata for CRLSELibraryViewModel.Folder);
    atomic_store(result, (unint64_t *)&qword_1013E9640);
  }
  return result;
}

unint64_t sub_1006583DC()
{
  unint64_t result;

  result = qword_1013E9648;
  if (!qword_1013E9648)
  {
    result = swift_getWitnessTable(&unk_100F00288, &type metadata for CRLSELibraryViewModeItemNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9648);
  }
  return result;
}

unint64_t sub_100658424()
{
  unint64_t result;

  result = qword_1013E9650;
  if (!qword_1013E9650)
  {
    result = swift_getWitnessTable(&unk_100F00340, &type metadata for CRLSEBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9650);
  }
  return result;
}

unint64_t sub_10065846C()
{
  unint64_t result;

  result = qword_1013E9658;
  if (!qword_1013E9658)
  {
    result = swift_getWitnessTable(&unk_100F003F8, &type metadata for CRLSEBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9658);
  }
  return result;
}

unint64_t sub_1006584B4()
{
  unint64_t result;

  result = qword_1013E9660;
  if (!qword_1013E9660)
  {
    result = swift_getWitnessTable(&unk_100F004B0, &type metadata for CRLSELibraryViewModel.Item.PendingBoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9660);
  }
  return result;
}

unint64_t sub_1006584FC()
{
  unint64_t result;

  result = qword_1013E9668;
  if (!qword_1013E9668)
  {
    result = swift_getWitnessTable(&unk_100F00568, &type metadata for CRLSELibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9668);
  }
  return result;
}

unint64_t sub_100658544()
{
  unint64_t result;

  result = qword_1013E9670;
  if (!qword_1013E9670)
  {
    result = swift_getWitnessTable(&unk_100F00620, &type metadata for CRLSELibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9670);
  }
  return result;
}

unint64_t sub_10065858C()
{
  unint64_t result;

  result = qword_1013E9678;
  if (!qword_1013E9678)
  {
    result = swift_getWitnessTable(&unk_100F006D8, &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9678);
  }
  return result;
}

unint64_t sub_1006585D4()
{
  unint64_t result;

  result = qword_1013E9680;
  if (!qword_1013E9680)
  {
    result = swift_getWitnessTable(&unk_100F00790, &type metadata for CRLSELibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9680);
  }
  return result;
}

unint64_t sub_10065861C()
{
  unint64_t result;

  result = qword_1013E9688;
  if (!qword_1013E9688)
  {
    result = swift_getWitnessTable(&unk_100F00648, &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9688);
  }
  return result;
}

unint64_t sub_100658664()
{
  unint64_t result;

  result = qword_1013E9690;
  if (!qword_1013E9690)
  {
    result = swift_getWitnessTable(&unk_100F00670, &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9690);
  }
  return result;
}

unint64_t sub_1006586AC()
{
  unint64_t result;

  result = qword_1013E9698;
  if (!qword_1013E9698)
  {
    result = swift_getWitnessTable(&unk_100F00590, &type metadata for CRLSELibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9698);
  }
  return result;
}

unint64_t sub_1006586F4()
{
  unint64_t result;

  result = qword_1013E96A0;
  if (!qword_1013E96A0)
  {
    result = swift_getWitnessTable(&unk_100F005B8, &type metadata for CRLSELibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96A0);
  }
  return result;
}

unint64_t sub_10065873C()
{
  unint64_t result;

  result = qword_1013E96A8;
  if (!qword_1013E96A8)
  {
    result = swift_getWitnessTable(&unk_100F004D8, &type metadata for CRLSELibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96A8);
  }
  return result;
}

unint64_t sub_100658784()
{
  unint64_t result;

  result = qword_1013E96B0;
  if (!qword_1013E96B0)
  {
    result = swift_getWitnessTable(&unk_100F00500, &type metadata for CRLSELibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96B0);
  }
  return result;
}

unint64_t sub_1006587CC()
{
  unint64_t result;

  result = qword_1013E96B8;
  if (!qword_1013E96B8)
  {
    result = swift_getWitnessTable(&unk_100F00420, &type metadata for CRLSELibraryViewModel.Item.PendingBoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96B8);
  }
  return result;
}

unint64_t sub_100658814()
{
  unint64_t result;

  result = qword_1013E96C0;
  if (!qword_1013E96C0)
  {
    result = swift_getWitnessTable(&unk_100F00448, &type metadata for CRLSELibraryViewModel.Item.PendingBoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96C0);
  }
  return result;
}

unint64_t sub_10065885C()
{
  unint64_t result;

  result = qword_1013E96C8;
  if (!qword_1013E96C8)
  {
    result = swift_getWitnessTable(&unk_100F00700, &type metadata for CRLSELibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96C8);
  }
  return result;
}

unint64_t sub_1006588A4()
{
  unint64_t result;

  result = qword_1013E96D0;
  if (!qword_1013E96D0)
  {
    result = swift_getWitnessTable(&unk_100F00728, &type metadata for CRLSELibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96D0);
  }
  return result;
}

unint64_t sub_1006588EC()
{
  unint64_t result;

  result = qword_1013E96D8;
  if (!qword_1013E96D8)
  {
    result = swift_getWitnessTable(&unk_100F00368, &type metadata for CRLSEBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96D8);
  }
  return result;
}

unint64_t sub_100658934()
{
  unint64_t result;

  result = qword_1013E96E0;
  if (!qword_1013E96E0)
  {
    result = swift_getWitnessTable(&unk_100F00390, &type metadata for CRLSEBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96E0);
  }
  return result;
}

unint64_t sub_10065897C()
{
  unint64_t result;

  result = qword_1013E96E8;
  if (!qword_1013E96E8)
  {
    result = swift_getWitnessTable(&unk_100F002B0, &type metadata for CRLSEBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96E8);
  }
  return result;
}

unint64_t sub_1006589C4()
{
  unint64_t result;

  result = qword_1013E96F0;
  if (!qword_1013E96F0)
  {
    result = swift_getWitnessTable(&unk_100F002D8, &type metadata for CRLSEBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96F0);
  }
  return result;
}

unint64_t sub_100658A0C()
{
  unint64_t result;

  result = qword_1013E96F8;
  if (!qword_1013E96F8)
  {
    result = swift_getWitnessTable(&unk_100F001F8, &type metadata for CRLSELibraryViewModeItemNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E96F8);
  }
  return result;
}

unint64_t sub_100658A54()
{
  unint64_t result;

  result = qword_1013E9700;
  if (!qword_1013E9700)
  {
    result = swift_getWitnessTable(&unk_100F00220, &type metadata for CRLSELibraryViewModeItemNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9700);
  }
  return result;
}

uint64_t sub_100658A98(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1835365481 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1835365481, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6572646C696863, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100658B78(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x4955556472616F62 && a2 == 0xE900000000000044)
  {
    v5 = 0xE900000000000044;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4955556472616F62, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D614E72656E776FLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D614E72656E776FLL, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100658C78(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6465726168537369 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6465726168537369, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x746964457473616CLL && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease(0xEA00000000006465);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746964457473616CLL, 0xEA00000000006465, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100658E58(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x7972617262696CLL && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7265646C6F66, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6472616F62 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F62, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x42676E69646E6570 && a2 == 0xEC0000006472616FLL)
  {
    swift_bridgeObjectRelease(0xEC0000006472616FLL);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x42676E69646E6570, 0xEC0000006472616FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100659018(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v4 = 0xEA00000000007265;
LABEL_6:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
    goto LABEL_6;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v6 = 0xE500000000000000;
LABEL_12:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_12;
  }
  if (a1 == 0x746964457473616CLL && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease(0xEA00000000006465);
    return 2;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746964457473616CLL, 0xEA00000000006465, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100659178(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x6C616963657073 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C616963657073, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C61636F6CLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x64756F6C4369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64756F6C4369, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_1006592BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  char v44;
  char v45;
  char v46;

  v40 = sub_1004B804C(&qword_1013E9768);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v42 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1004B804C(&qword_1013E9770);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v41 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1004B804C(&qword_1013E9778);
  v4 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E9780);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_100659F5C();
  v14 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModel.Library.CodingKeys, &type metadata for CRLSELibraryViewModel.Library.CodingKeys, v13, v11, v12);
  if (v14)
    goto LABEL_7;
  v34 = v4;
  v35 = v8;
  v15 = v42;
  v43 = a1;
  v16 = v10;
  v17 = KeyedDecodingContainer.allKeys.getter(v7);
  v18 = v17;
  v19 = v7;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = v17;
    v24 = type metadata accessor for DecodingError(0);
    swift_allocError(v24, &protocol witness table for DecodingError, 0, 0);
    v10 = v25;
    sub_1004B804C(&qword_1013DF800);
    *v10 = &type metadata for CRLSELibraryViewModel.Library;
    v26 = KeyedDecodingContainer.codingPath.getter(v19);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v26, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v27.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v10, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow(v27);
    v28 = swift_bridgeObjectRelease(v23);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v35 + 8))(v16, v19, v28);
    a1 = v43;
LABEL_7:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v45 = 1;
      v20 = sub_100659FE4();
      v21 = v41;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys, &v45, v7, &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys, v20);
      v22 = v35;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v39);
    }
    else
    {
      v46 = 2;
      v31 = sub_100659FA0();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys, &v46, v7, &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys, v31);
      v22 = v35;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v40);
    }
    v33 = swift_bridgeObjectRelease(v18);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v22 + 8))(v16, v19, v33);
  }
  else
  {
    v44 = 0;
    v30 = sub_10065A028();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys, &v44, v7, &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys, v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v37);
    v32 = swift_bridgeObjectRelease(v18);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v35 + 8))(v16, v7, v32);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v43);
  return v10;
}

uint64_t sub_100659694(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6472616F426C6C61 && a2 == 0xE900000000000073)
  {
    v5 = 0xE900000000000073;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F426C6C61, 0xE900000000000073, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x73746E65636572 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73746E65636572, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x657469726F766166 && a2 == 0xE900000000000073)
  {
    v8 = 0xE900000000000073;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657469726F766166, 0xE900000000000073, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x646572616873 && a2 == 0xE600000000000000)
  {
    v9 = 0xE600000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646572616873, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x796C746E65636572 && a2 == 0xEF646574656C6544)
  {
    swift_bridgeObjectRelease(0xEF646574656C6544);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x796C746E65636572, 0xEF646574656C6544, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

char *sub_1006598E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  _QWORD v32[11];
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;

  v2 = sub_1004B804C(&qword_1013E9708);
  v32[9] = *(_QWORD *)(v2 - 8);
  v32[10] = v2;
  __chkstk_darwin(v2);
  v37 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1004B804C(&qword_1013E9710);
  v32[6] = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E9718);
  v32[7] = *(_QWORD *)(v5 - 8);
  v32[8] = v5;
  __chkstk_darwin(v5);
  v35 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E9720);
  v32[4] = *(_QWORD *)(v7 - 8);
  v32[5] = v7;
  __chkstk_darwin(v7);
  v34 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E9728);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E9730);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  v38 = a1;
  sub_1004BB5A4(a1, v18);
  v19 = sub_100659DC4();
  v20 = v39;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSELibraryViewModel.Folder.CodingKeys, &type metadata for CRLSELibraryViewModel.Folder.CodingKeys, v19, v18, v17);
  if (!v20)
  {
    v32[2] = v9;
    v32[3] = v12;
    v32[1] = v10;
    v39 = 0;
    v21 = v14;
    v22 = KeyedDecodingContainer.allKeys.getter(v13);
    v23 = v22;
    v24 = v13;
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X9 }
    v25 = type metadata accessor for DecodingError(0);
    swift_allocError(v25, &protocol witness table for DecodingError, 0, 0);
    v27 = v26;
    sub_1004B804C(&qword_1013DF800);
    *v27 = &type metadata for CRLSELibraryViewModel.Folder;
    v28 = KeyedDecodingContainer.codingPath.getter(v24);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v29.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v25);
    swift_willThrow(v29);
    v30 = swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v16, v24, v30);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
  return v16;
}

void sub_100659C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;

  *(_BYTE *)(v4 - 68) = 1;
  v5 = sub_100659ED4();
  v6 = *(_QWORD *)(v4 - 88);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys, v4 - 68, v3, &type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys, v5);
  if (v6)
  {
    v7 = swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v1, v3, v7);
    JUMPOUT(0x100659C2CLL);
  }
  JUMPOUT(0x100659D98);
}

void sub_100659C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;

  *(_BYTE *)(v4 - 67) = 2;
  v5 = sub_100659E90();
  v6 = *(_QWORD *)(v4 - 88);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys, v4 - 67, v3, &type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys, v5);
  if (!v6)
    JUMPOUT(0x100659CD8);
  v7 = swift_bridgeObjectRelease(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v1, v3, v7);
  JUMPOUT(0x100659C2CLL);
}

void sub_100659CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  __n128 v9;

  *(_BYTE *)(v5 - 66) = 3;
  v6 = sub_100659E4C();
  v7 = *(_QWORD *)(v5 - 88);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys, v5 - 66, v4, &type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys, v6);
  if (!v7)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 176) + 8))(v3, *(_QWORD *)(v5 - 136));
    v9 = swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v1, v4, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(*(_QWORD **)(v5 - 96));
    JUMPOUT(0x100659C30);
  }
  v8 = swift_bridgeObjectRelease(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v1, v4, v8);
  JUMPOUT(0x100659C2CLL);
}

void sub_100659D30()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v1 - 65) = 4;
  v2 = sub_100659E08();
  v3 = *(_QWORD *)(v1 - 88);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys, v1 - 65, v0, &type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys, v2);
  if (v3)
    JUMPOUT(0x100659D68);
  JUMPOUT(0x100659D98);
}

unint64_t sub_100659DC4()
{
  unint64_t result;

  result = qword_1013E9738;
  if (!qword_1013E9738)
  {
    result = swift_getWitnessTable(&unk_100F0128C, &type metadata for CRLSELibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9738);
  }
  return result;
}

unint64_t sub_100659E08()
{
  unint64_t result;

  result = qword_1013E9740;
  if (!qword_1013E9740)
  {
    result = swift_getWitnessTable(&unk_100F0123C, &type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9740);
  }
  return result;
}

unint64_t sub_100659E4C()
{
  unint64_t result;

  result = qword_1013E9748;
  if (!qword_1013E9748)
  {
    result = swift_getWitnessTable(&unk_100F011EC, &type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9748);
  }
  return result;
}

unint64_t sub_100659E90()
{
  unint64_t result;

  result = qword_1013E9750;
  if (!qword_1013E9750)
  {
    result = swift_getWitnessTable(&unk_100F0119C, &type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9750);
  }
  return result;
}

unint64_t sub_100659ED4()
{
  unint64_t result;

  result = qword_1013E9758;
  if (!qword_1013E9758)
  {
    result = swift_getWitnessTable(&unk_100F0114C, &type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9758);
  }
  return result;
}

unint64_t sub_100659F18()
{
  unint64_t result;

  result = qword_1013E9760;
  if (!qword_1013E9760)
  {
    result = swift_getWitnessTable(&unk_100F010FC, &type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9760);
  }
  return result;
}

unint64_t sub_100659F5C()
{
  unint64_t result;

  result = qword_1013E9788;
  if (!qword_1013E9788)
  {
    result = swift_getWitnessTable(&unk_100F010AC, &type metadata for CRLSELibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9788);
  }
  return result;
}

unint64_t sub_100659FA0()
{
  unint64_t result;

  result = qword_1013E9790;
  if (!qword_1013E9790)
  {
    result = swift_getWitnessTable(&unk_100F0105C, &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9790);
  }
  return result;
}

unint64_t sub_100659FE4()
{
  unint64_t result;

  result = qword_1013E9798;
  if (!qword_1013E9798)
  {
    result = swift_getWitnessTable(&unk_100F0100C, &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9798);
  }
  return result;
}

unint64_t sub_10065A028()
{
  unint64_t result;

  result = qword_1013E97A0;
  if (!qword_1013E97A0)
  {
    result = swift_getWitnessTable(&unk_100F00FBC, &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E97A0);
  }
  return result;
}

uint64_t _s8Freeform21CRLSELibraryViewModelV7LibraryOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10065A0B8 + 4 * byte_100EFFD6A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10065A0EC + 4 * byte_100EFFD65[v4]))();
}

uint64_t sub_10065A0EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10065A0F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10065A0FCLL);
  return result;
}

uint64_t sub_10065A108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10065A110);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10065A114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10065A11C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.SpecialCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.LocalCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.ICloudCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys;
}

uint64_t _s8Freeform21CRLSELibraryViewModelV6FolderOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10065A1B4 + 4 * byte_100EFFD74[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10065A1E8 + 4 * byte_100EFFD6F[v4]))();
}

uint64_t sub_10065A1E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10065A1F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10065A1F8);
  return result;
}

uint64_t sub_10065A204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10065A20CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10065A210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10065A218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.RecentsCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.FavoritesCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.SharedCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys;
}

unint64_t sub_10065A288()
{
  unint64_t result;

  result = qword_1013E97F8;
  if (!qword_1013E97F8)
  {
    result = swift_getWitnessTable(&unk_100F00DEC, &type metadata for CRLSELibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E97F8);
  }
  return result;
}

unint64_t sub_10065A2D0()
{
  unint64_t result;

  result = qword_1013E9800;
  if (!qword_1013E9800)
  {
    result = swift_getWitnessTable(&unk_100F00F94, &type metadata for CRLSELibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9800);
  }
  return result;
}

unint64_t sub_10065A318()
{
  unint64_t result;

  result = qword_1013E9808;
  if (!qword_1013E9808)
  {
    result = swift_getWitnessTable(&unk_100F00EB4, &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9808);
  }
  return result;
}

unint64_t sub_10065A360()
{
  unint64_t result;

  result = qword_1013E9810;
  if (!qword_1013E9810)
  {
    result = swift_getWitnessTable(&unk_100F00EDC, &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9810);
  }
  return result;
}

unint64_t sub_10065A3A8()
{
  unint64_t result;

  result = qword_1013E9818;
  if (!qword_1013E9818)
  {
    result = swift_getWitnessTable(&unk_100F00E64, &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9818);
  }
  return result;
}

unint64_t sub_10065A3F0()
{
  unint64_t result;

  result = qword_1013E9820;
  if (!qword_1013E9820)
  {
    result = swift_getWitnessTable(&unk_100F00E8C, &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9820);
  }
  return result;
}

unint64_t sub_10065A438()
{
  unint64_t result;

  result = qword_1013E9828;
  if (!qword_1013E9828)
  {
    result = swift_getWitnessTable(&unk_100F00E14, &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9828);
  }
  return result;
}

unint64_t sub_10065A480()
{
  unint64_t result;

  result = qword_1013E9830;
  if (!qword_1013E9830)
  {
    result = swift_getWitnessTable(&unk_100F00E3C, &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9830);
  }
  return result;
}

unint64_t sub_10065A4C8()
{
  unint64_t result;

  result = qword_1013E9838;
  if (!qword_1013E9838)
  {
    result = swift_getWitnessTable(&unk_100F00F04, &type metadata for CRLSELibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9838);
  }
  return result;
}

unint64_t sub_10065A510()
{
  unint64_t result;

  result = qword_1013E9840;
  if (!qword_1013E9840)
  {
    result = swift_getWitnessTable(&unk_100F00F2C, &type metadata for CRLSELibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9840);
  }
  return result;
}

unint64_t sub_10065A558()
{
  unint64_t result;

  result = qword_1013E9848;
  if (!qword_1013E9848)
  {
    result = swift_getWitnessTable(&unk_100F00D0C, &type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9848);
  }
  return result;
}

unint64_t sub_10065A5A0()
{
  unint64_t result;

  result = qword_1013E9850;
  if (!qword_1013E9850)
  {
    result = swift_getWitnessTable(&unk_100F00D34, &type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9850);
  }
  return result;
}

unint64_t sub_10065A5E8()
{
  unint64_t result;

  result = qword_1013E9858;
  if (!qword_1013E9858)
  {
    result = swift_getWitnessTable(&unk_100F00CBC, &type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9858);
  }
  return result;
}

unint64_t sub_10065A630()
{
  unint64_t result;

  result = qword_1013E9860;
  if (!qword_1013E9860)
  {
    result = swift_getWitnessTable(&unk_100F00CE4, &type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9860);
  }
  return result;
}

unint64_t sub_10065A678()
{
  unint64_t result;

  result = qword_1013E9868;
  if (!qword_1013E9868)
  {
    result = swift_getWitnessTable(&unk_100F00C6C, &type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9868);
  }
  return result;
}

unint64_t sub_10065A6C0()
{
  unint64_t result;

  result = qword_1013E9870;
  if (!qword_1013E9870)
  {
    result = swift_getWitnessTable(&unk_100F00C94, &type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9870);
  }
  return result;
}

unint64_t sub_10065A708()
{
  unint64_t result;

  result = qword_1013E9878;
  if (!qword_1013E9878)
  {
    result = swift_getWitnessTable(&unk_100F00C1C, &type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9878);
  }
  return result;
}

unint64_t sub_10065A750()
{
  unint64_t result;

  result = qword_1013E9880;
  if (!qword_1013E9880)
  {
    result = swift_getWitnessTable(&unk_100F00C44, &type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9880);
  }
  return result;
}

unint64_t sub_10065A798()
{
  unint64_t result;

  result = qword_1013E9888;
  if (!qword_1013E9888)
  {
    result = swift_getWitnessTable(&unk_100F00BCC, &type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9888);
  }
  return result;
}

unint64_t sub_10065A7E0()
{
  unint64_t result;

  result = qword_1013E9890;
  if (!qword_1013E9890)
  {
    result = swift_getWitnessTable(&unk_100F00BF4, &type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9890);
  }
  return result;
}

unint64_t sub_10065A828()
{
  unint64_t result;

  result = qword_1013E9898;
  if (!qword_1013E9898)
  {
    result = swift_getWitnessTable(&unk_100F00D5C, &type metadata for CRLSELibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E9898);
  }
  return result;
}

unint64_t sub_10065A870()
{
  unint64_t result;

  result = qword_1013E98A0;
  if (!qword_1013E98A0)
  {
    result = swift_getWitnessTable(&unk_100F00D84, &type metadata for CRLSELibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E98A0);
  }
  return result;
}

id sub_10065AAA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPRepHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPRepHelper()
{
  return objc_opt_self(_TtC8Freeform14CRLWPRepHelper);
}

void sub_10065AB00(void *a1)
{
  NSString v2;
  id v3;
  CGFloat m11;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CGFloat *v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  NSString v20;
  CGFloat v21;
  CGFloat v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  CGFloat v30;
  CGFloat v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  CGFloat m31;
  CATransform3D v47;
  CATransform3D v48;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(CAKeyframeAnimation), "animationWithKeyPath:", v2);

  objc_msgSend(a1, "transform");
  m11 = v48.m11;
  m12 = v48.m12;
  m13 = v48.m13;
  m14 = v48.m14;
  m21 = v48.m21;
  m22 = v48.m22;
  m23 = v48.m23;
  m24 = v48.m24;
  m32 = v48.m32;
  m31 = v48.m31;
  m34 = v48.m34;
  m33 = v48.m33;
  m42 = v48.m42;
  m41 = v48.m41;
  m44 = v48.m44;
  m43 = v48.m43;
  CATransform3DScale(&v47, &v48, 1.34, 1.34, 1.0);
  v29 = *(_OWORD *)&v47.m11;
  v28 = *(_OWORD *)&v47.m13;
  v27 = *(_OWORD *)&v47.m21;
  v26 = *(_OWORD *)&v47.m23;
  v25 = *(_OWORD *)&v47.m31;
  v24 = *(_OWORD *)&v47.m33;
  v23 = *(_OWORD *)&v47.m41;
  v22 = v47.m43;
  v21 = v47.m44;
  objc_msgSend(a1, "transform");
  v38 = *(_OWORD *)&v48.m11;
  v37 = *(_OWORD *)&v48.m13;
  v36 = *(_OWORD *)&v48.m21;
  v35 = *(_OWORD *)&v48.m23;
  v34 = *(_OWORD *)&v48.m31;
  v33 = *(_OWORD *)&v48.m33;
  v32 = *(_OWORD *)&v48.m41;
  v31 = v48.m43;
  v30 = v48.m44;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v13 = swift_allocObject(v12, 128, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EF5550;
  type metadata accessor for CATransform3D(0);
  v15 = v14;
  *(_QWORD *)(v13 + 56) = v14;
  v16 = (CGFloat *)swift_allocObject(&unk_101274308, 144, 7);
  *(_QWORD *)(v13 + 32) = v16;
  v16[2] = m11;
  v16[3] = m12;
  v16[4] = m13;
  v16[5] = m14;
  v16[6] = m21;
  v16[7] = m22;
  v16[8] = m23;
  v16[9] = m24;
  v16[10] = m31;
  v16[11] = m32;
  v16[12] = m33;
  v16[13] = m34;
  v16[14] = m41;
  v16[15] = m42;
  v16[16] = m43;
  v16[17] = m44;
  *(_QWORD *)(v13 + 88) = v15;
  v17 = swift_allocObject(&unk_101274308, 144, 7);
  *(_QWORD *)(v13 + 64) = v17;
  *(_OWORD *)(v17 + 16) = v29;
  *(_OWORD *)(v17 + 32) = v28;
  *(_OWORD *)(v17 + 48) = v27;
  *(_OWORD *)(v17 + 64) = v26;
  *(_OWORD *)(v17 + 80) = v25;
  *(_OWORD *)(v17 + 96) = v24;
  *(_OWORD *)(v17 + 112) = v23;
  *(CGFloat *)(v17 + 128) = v22;
  *(CGFloat *)(v17 + 136) = v21;
  *(_QWORD *)(v13 + 120) = v15;
  v18 = swift_allocObject(&unk_101274308, 144, 7);
  *(_QWORD *)(v13 + 96) = v18;
  *(_OWORD *)(v18 + 16) = v38;
  *(_OWORD *)(v18 + 32) = v37;
  *(_OWORD *)(v18 + 48) = v36;
  *(_OWORD *)(v18 + 64) = v35;
  *(_OWORD *)(v18 + 80) = v34;
  *(_OWORD *)(v18 + 96) = v33;
  *(_OWORD *)(v18 + 112) = v32;
  *(CGFloat *)(v18 + 128) = v31;
  *(CGFloat *)(v18 + 136) = v30;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setValues:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  objc_msgSend(v3, "setRemovedOnCompletion:", 1);
  objc_msgSend(v3, "setDuration:", 0.25);
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addAnimation:forKey:", v3, v20);

}

uint64_t sub_10065AECC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

void sub_10065AEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "viewIfLoaded");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "window");

      if (v7)
      {
        v8 = objc_msgSend(v7, "windowScene");
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, "delegate");

          if (v10)
          {
            v11 = type metadata accessor for CRLiOSSceneDelegate(0);
            v12 = (void *)swift_dynamicCastClass(v10, v11);
            if (v12)
            {
              objc_msgSend(v12, "qa_importFileFor:", v4);

              swift_unknownObjectRelease(v10);
              return;
            }
            swift_unknownObjectRelease(v10);
          }
        }

      }
    }

  }
}

void sub_10065AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  void (*v8)(_BYTE *, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  _BYTE v14[48];

  v2 = a2 + 16;
  v3 = objc_allocWithZone((Class)type metadata accessor for CRLFileReadWriteUserOptionsViewController(0));
  sub_1008A31CC((uint64_t)v14);
  v4 = (void *)UIHostingController.init(rootView:)(v14);
  v5 = swift_allocObject(&unk_101274468, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v4);
  v6 = v4;
  v7 = swift_retain(v5);
  v8 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v14, v7);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v9 + 32) = sub_10065C9A8;
  *(_QWORD *)(v9 + 40) = v5;
  sub_1004C1024(v10, v11);
  v8(v14, 0);

  swift_release(v5);
  swift_beginAccess(v2, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v13 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v6, 1, 0);

  }
}

void sub_10065B0F8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

uint64_t sub_10065B158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _BYTE v23[32];
  _BYTE v24[24];
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];

  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (void *)result;
    v14 = a3 + 16;
    swift_beginAccess(v14, v24, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v14);
    if (Strong)
    {
      v16 = Strong;
      *((_QWORD *)&v26 + 1) = swift_getObjectType(Strong);
      *(_QWORD *)&v25 = v16;
    }
    else
    {
      v25 = 0u;
      v26 = 0u;
    }
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
    sub_1004CB7BC((uint64_t)&v25, (uint64_t)v23, &qword_1013E0230);
    type metadata accessor for MainActor(0);
    v18 = v13;
    v19 = static MainActor.shared.getter(v18);
    v20 = (_QWORD *)swift_allocObject(a4, 72, 7);
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v18;
    sub_1004D28A4((uint64_t)v23, (uint64_t)(v20 + 5));
    v21 = sub_100521B98((uint64_t)v11, a5, (uint64_t)v20);

    swift_release(v21);
    return sub_1004CB800((uint64_t)&v25, &qword_1013E0230);
  }
  return result;
}

void sub_10065B2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t inited;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::String v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105[72];
  char v106[8];
  uint64_t v107;
  uint64_t v108;
  char v109[8];

  v90 = type metadata accessor for CharacterSet(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for URLComponents(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  v12 = *(_QWORD *)(v87 - 8);
  v13 = __chkstk_darwin(v87);
  v86 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v104 = (uint64_t)&v83 - v15;
  swift_beginAccess(a2 + 16, v109, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v17 = Strong;
    v95 = v11;
    v18 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType(Strong);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(ObjectType, v18);
    swift_unknownObjectRelease(v17);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v102 = v9;
      v103 = v8;
      v98 = v7;
      v22 = v20 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      v97 = *(_QWORD *)(v12 + 72);
      v84 = v20;
      swift_bridgeObjectRetain(v20);
      v96 = xmmword_100EF5E40;
      v85 = xmmword_100EF5550;
      v23 = v104;
      do
      {
        v24 = sub_1004CB7BC(v22, v23, (uint64_t *)&unk_1013EA630);
        v25 = v99;
        URLComponents.init()(v24);
        URLComponents.scheme.setter(0x6D726F6665657266, 0xE800000000000000);
        URLComponents.host.setter(0x6472616F62, 0xE500000000000000);
        v26 = sub_1004B804C(&qword_1013E98F8);
        v27 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
        v28 = swift_allocObject(v26, ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72), *(unsigned __int8 *)(v27 + 80) | 7);
        *(_OWORD *)(v28 + 16) = v96;
        v29 = UUID.uuidString.getter(v28);
        v31 = v30;
        v107 = v29;
        v108 = v30;
        swift_bridgeObjectRetain(v30);
        v32._countAndFlagsBits = 58;
        v32._object = (void *)0xE100000000000000;
        String.append(_:)(v32);
        swift_bridgeObjectRelease(v31);
        v33 = v107;
        v34 = v108;
        v35 = (uint64_t *)(v23 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
        v36 = *v35;
        v37 = (void *)v35[1];
        v107 = v33;
        v108 = v34;
        swift_bridgeObjectRetain(v34);
        v38._countAndFlagsBits = v36;
        v38._object = v37;
        String.append(_:)(v38);
        v39 = swift_bridgeObjectRelease(v34);
        v40 = v108;
        URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v107, v108, v39);
        v41 = swift_bridgeObjectRelease(v40);
        v42 = URLComponents.queryItems.setter(v28, v41);
        v43 = (uint64_t)v98;
        URLComponents.url.getter(v42);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v25, v101);
        v44 = v102;
        v45 = v103;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v43, 1, v103) == 1)
        {
          sub_1004CB800(v43, &qword_1013E04D0);
        }
        else
        {
          v46 = v95;
          v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 32))(v95, v43, v45);
          v107 = URL.absoluteString.getter(v47);
          v108 = v48;
          v49 = v88;
          static CharacterSet.urlQueryAllowed.getter();
          v50 = sub_1004D292C();
          v51 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v49, &type metadata for String, v50);
          v53 = v52;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v90);
          swift_bridgeObjectRelease(v108);
          if (v53)
          {
            v93 = v53;
            v94 = v51;
            if (qword_1013DD6B8 != -1)
              swift_once(&qword_1013DD6B8, sub_100A00A6C);
            swift_beginAccess(&static OS_os_log.crlDefault, v106, 0, 0);
            v91 = (id)static OS_os_log.crlDefault;
            v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v54, v105);
            *(_OWORD *)(inited + 16) = v85;
            v56 = *(int *)(v87 + 48);
            v57 = v86;
            v58 = (_QWORD *)(v86 + v56);
            v59 = (uint64_t *)(v104 + v56);
            sub_1004B8460(v104, v86, type metadata accessor for CRLBoardIdentifier);
            v61 = *v59;
            v60 = v59[1];
            *v58 = v61;
            v58[1] = v60;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            v62 = sub_1004CFC2C();
            *(_QWORD *)(inited + 64) = v62;
            *(_QWORD *)(inited + 32) = v61;
            v92 = inited + 32;
            *(_QWORD *)(inited + 40) = v60;
            v91 = v91;
            swift_bridgeObjectRetain(v60);
            v64 = UUID.uuidString.getter(v63);
            v66 = v65;
            v107 = v64;
            v108 = v65;
            swift_bridgeObjectRetain(v65);
            v67._countAndFlagsBits = 58;
            v67._object = (void *)0xE100000000000000;
            String.append(_:)(v67);
            swift_bridgeObjectRelease(v66);
            v68 = v108;
            v70 = *v35;
            v69 = (void *)v35[1];
            swift_bridgeObjectRetain(v108);
            v71._countAndFlagsBits = v70;
            v71._object = v69;
            String.append(_:)(v71);
            swift_bridgeObjectRelease(v68);
            v72 = v107;
            v73 = v108;
            *(_QWORD *)(inited + 96) = &type metadata for String;
            *(_QWORD *)(inited + 104) = v62;
            *(_QWORD *)(inited + 72) = v72;
            *(_QWORD *)(inited + 80) = v73;
            *(_QWORD *)(inited + 136) = &type metadata for String;
            *(_QWORD *)(inited + 144) = v62;
            v74 = v93;
            *(_QWORD *)(inited + 112) = v94;
            *(_QWORD *)(inited + 120) = v74;
            sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
            v76 = static os_log_type_t.default.getter(v75);
            v77 = v91;
            sub_100A06EBC((uint64_t)v91, &_mh_execute_header, v76, "Selected board title: %@, identifier: %@, deep link URL: %@", 59, 2, inited);
            swift_setDeallocating(inited);
            v78 = *(_QWORD *)(inited + 16);
            v79 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v92, v78, v79);

            (*(void (**)(char *, uint64_t))(v102 + 8))(v95, v103);
          }
          else
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"crl_qaMenu(for:sender:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSQAMenu.swift", 80, 2, 106, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_qaMenu(for:sender:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSQAMenu.swift", 80, 2u, 106, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
            (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);
          }
        }
        v23 = v104;
        sub_1004CB800(v104, (uint64_t *)&unk_1013EA630);
        v22 += v97;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease_n(v84, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v20);
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v106, 0, 0);
      v80 = (id)static OS_os_log.crlDefault;
      v82 = static os_log_type_t.default.getter(v81);
      sub_100A06EBC((uint64_t)v80, &_mh_execute_header, v82, "Nothing selected.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
  }
}

uint64_t sub_10065BB48()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[24];
  char v39[24];

  v35 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v35);
  v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E9900);
  v7 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v6, v11 + v9, v10 | 7);
  v34 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  v13 = v12 + v11;
  v33 = (_QWORD *)(v12 + v11 + *(int *)(v7 + 48));
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  v15 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v16 = *(char **)(v14 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v39, 0, 0);
  sub_1004B8460(v19, (uint64_t)v2, type metadata accessor for CRLBoardCRDTData);
  v32 = v16;
  swift_retain(v18);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLBoardCRDTData);
  swift_release(v18);
  v21 = (uint64_t *)(*(_QWORD *)&v16[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  sub_10067AFD0((uint64_t)v5, v22, v23, v13);

  v24 = *(char **)(v14 + v15);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v25, v38, 0, 0);
  sub_1004B8460(v25, (uint64_t)v2, type metadata accessor for CRLBoardCRDTData);
  v26 = v24;
  v27 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v27);
  v28 = v36;
  v29 = v37;
  sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLBoardCRDTData);

  v31 = v33;
  result = v34;
  *v33 = v28;
  v31[1] = v29;
  return result;
}

double *sub_10065BDCC()
{
  void *v0;
  double *result;
  double *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double *v10;
  void *v11;
  uint64_t v12[3];
  uint64_t v13;

  result = (double *)objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "window");

    if (v3)
    {
      v4 = objc_msgSend(v3, "windowScene");

      if (v4)
      {
        v5 = objc_msgSend(v4, "delegate");

        if (v5)
        {
          v6 = type metadata accessor for CRLiOSSceneDelegate(0);
          if (swift_dynamicCastClass(v5, v6))
          {
            v7 = sub_100903140();
            if (v7)
            {
              v8 = v7;
              v13 = type metadata accessor for CRLiOSFolderGridViewController(0);
              v12[0] = v8;
              if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
              {
                v9 = v11;
                v10 = sub_100B76144();
                swift_unknownObjectRelease(v5);

                return v10;
              }
            }
          }
          swift_unknownObjectRelease(v5);
        }
      }
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

UIMenu sub_10065BF10(void *a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  NSString v53;
  id v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  UIMenuElementSize preferredElementSize;
  NSString v61;
  objc_class *v62;
  Swift::String v63;
  uint64_t v65;
  uint64_t v66;
  Swift::OpaquePointer v67;
  _QWORD v68[3];
  ValueMetadata *v69;
  unint64_t v70;
  uint64_t v71;
  UIImage_optional v72;

  v71 = (uint64_t)_swiftEmptyArrayStorage;
  v69 = &type metadata for CRLFeatureFlags;
  v4 = sub_1004DB6DC();
  v70 = v4;
  LOBYTE(v68[0]) = 8;
  v5 = isFeatureEnabled(_:)(v68);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v68);
  if ((v5 & 1) != 0)
  {
    v6 = type metadata accessor for CRLiOSBoardViewController(0);
    v7 = swift_dynamicCastClass(a1, v6);
    if (v7)
    {
      v8 = v7;
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v9 = a1;
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

      v12 = swift_allocObject(&unk_101274378, 24, 7);
      swift_unknownObjectWeakInit(v12 + 16, v8);
      v13 = swift_allocObject(&unk_1012743A0, 24, 7);
      swift_unknownObjectWeakInit(v13 + 16, a2);
      v14 = swift_allocObject(&unk_101274418, 32, 7);
      *(_QWORD *)(v14 + 16) = v12;
      *(_QWORD *)(v14 + 24) = v13;
      v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x742074726F707845, 0xEE00656C6946206FLL, 0, 0, v11, 0, 0, 0, 0, 0, 0, sub_10065C810, v14);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);

    }
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v19 = String._bridgeToObjectiveC()();
    v20 = (void *)objc_opt_self(UIImage);
    v21 = objc_msgSend(v20, "systemImageNamed:", v19);

    v22 = swift_allocObject(&unk_1012743F0, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16, a1);
    v23 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x462074726F706D49, 0xEB00000000656C69, 0, 0, v21, 0, 0, 0, 0, 0, 0, sub_10065C7FC, v22);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v26);
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v20, "systemImageNamed:", v27);

    v29 = swift_allocObject(&unk_1012743F0, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, a1);
    v30 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0xD000000000000015, 0x8000000100FBDF90, 0, 0, v28, 0, 0, 0, 0, 0, 0, sub_10065C804, v29);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
    v32 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v31 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v32 >= v31 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
    v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
    specialized Array._endMutation()(v33);

  }
  v69 = &type metadata for CRLFeatureFlags;
  v70 = v4;
  LOBYTE(v68[0]) = 9;
  v34 = isFeatureEnabled(_:)(v68);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v68);
  if ((v34 & 1) != 0)
  {
    v35 = type metadata accessor for CRLiOSBoardViewController(0);
    v36 = swift_dynamicCastClass(a1, v35);
    if (v36)
    {
      v37 = v36;
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v38 = a1;
      v39 = String._bridgeToObjectiveC()();
      v40 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v39);

      v41 = swift_allocObject(&unk_101274378, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16, v37);
      v42 = swift_allocObject(&unk_1012743A0, 24, 7);
      swift_unknownObjectWeakInit(v42 + 16, a2);
      v43 = swift_allocObject(&unk_1012743C8, 32, 7);
      *(_QWORD *)(v43 + 16) = v41;
      *(_QWORD *)(v43 + 24) = v42;
      v44 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0xD000000000000011, 0x8000000100FBDF50, 0, 0, v40, 0, 0, 0, 0, 0, 0, sub_10065C7B0, v43);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v46 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v45 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v46 >= v45 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
      v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
      specialized Array._endMutation()(v47);

    }
  }
  ObjectType = swift_getObjectType(a1);
  v49 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLiOSQAMenuProviderTarget);
  if (v49)
    v50 = v49;
  else
    v50 = 0;
  if (v49)
    v51 = a1;
  else
    v51 = 0;
  if (v51)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v52 = a1;
    v53 = String._bridgeToObjectiveC()();
    v54 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v53);

    v55 = swift_allocObject(&unk_101274350, 32, 7);
    *(_QWORD *)(v55 + 24) = v50;
    swift_unknownObjectWeakInit(v55 + 16, v51);
    v56 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0xD000000000000035, 0x8000000100FBDEF0, 0, 0, v54, 0, 0, 0, 0, 0, 0, sub_10065C7A4, v55);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
    v58 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v57 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v58 >= v57 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
    v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
    specialized Array._endMutation()(v59);

  }
  preferredElementSize = v71;
  if ((unint64_t)v71 >> 62)
  {
    if (v71 < 0)
      v65 = v71;
    else
      v65 = v71 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v71);
    v66 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(preferredElementSize);
    if (v66)
      goto LABEL_28;
  }
  else if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v61 = String._bridgeToObjectiveC()();
    v62 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v61);

    v63._countAndFlagsBits = 16721;
    v63._object = (void *)0xE200000000000000;
    v72.value.super.isa = v62;
    v72.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v63, (Swift::String_optional)0, v72, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v67);
  }
  swift_bridgeObjectRelease(preferredElementSize);
  return 0;
}

uint64_t sub_10065C780()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

void sub_10065C7A4(uint64_t a1)
{
  uint64_t v1;

  sub_10065B2F8(a1, v1);
}

uint64_t sub_10065C7B0(uint64_t a1)
{
  uint64_t v1;

  return sub_10065B158(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_101274490, (uint64_t)&unk_1013E98F0);
}

uint64_t sub_10065C7D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10065C7FC(uint64_t a1)
{
  uint64_t v1;

  sub_10065AEDC(a1, v1);
}

void sub_10065C804(uint64_t a1)
{
  uint64_t v1;

  sub_10065AFF4(a1, v1);
}

uint64_t sub_10065C810(uint64_t a1)
{
  uint64_t v1;

  return sub_10065B158(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_101274440, (uint64_t)&unk_1013E98E8);
}

uint64_t sub_10065C83C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B734);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100C3D6D4(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

Class sub_10065C8B8(void *a1)
{
  NSString v2;
  objc_class *v3;
  Swift::String_optional v4;
  UIBarButtonItem v5;
  objc_class *isa;
  UIMenu v7;
  UIImage_optional v9;
  UIAction_optional v10;
  UIMenu_optional v11;

  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v2 = String._bridgeToObjectiveC()();
  v3 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);

  v4.value._countAndFlagsBits = 16721;
  v4.value._object = (void *)0xE200000000000000;
  v9.value.super.isa = v3;
  v9.is_nil = 0;
  v10.value.super.super.isa = 0;
  v5.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v4, v9, v10, v11).super.super.isa;
  isa = v5.super.super.isa;
  v7.super.super.isa = sub_10065BF10(a1, (uint64_t)v5.super.super.isa).super.super.isa;

  if (v7.super.super.isa)
  {
    -[objc_class setMenu:](isa, "setMenu:", v7.super.super.isa);
    isa = v7.super.super.isa;
  }
  else
  {
    v5.super.super.isa = 0;
  }

  return v5.super.super.isa;
}

void sub_10065C9A8()
{
  uint64_t v0;

  sub_10065B0F8(v0);
}

uint64_t sub_10065C9B4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 64))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10065C9F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B74C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100C3F034(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t type metadata accessor for CRLQuickInspectorElementProvider()
{
  return objc_opt_self(_TtC8Freeform32CRLQuickInspectorElementProvider);
}

uint64_t sub_10065CA98()
{
  return sub_1004B7878(&qword_1013E99B8, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F013D8);
}

uint64_t type metadata accessor for CRLiOSBoardEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E9AD0;
  if (!qword_1013E9AD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSBoardEntity);
  return result;
}

uint64_t sub_10065CB00()
{
  return sub_1004B7878(&qword_1013E99C0, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01410);
}

uint64_t sub_10065CB2C()
{
  return sub_1004B7878(&qword_1013E99C8, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01440);
}

unint64_t sub_10065CB5C()
{
  unint64_t result;

  result = qword_1013E99D0;
  if (!qword_1013E99D0)
  {
    result = swift_getWitnessTable(&unk_100F01578, &type metadata for CRLiOSBoardEntity.BoardQuery);
    atomic_store(result, (unint64_t *)&qword_1013E99D0);
  }
  return result;
}

uint64_t sub_10065CBA0()
{
  return sub_1004B7878(&qword_1013E99D8, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F065AC);
}

uint64_t sub_10065CBCC()
{
  uint64_t v0;
  _QWORD v2[2];
  _BYTE v3[40];

  sub_1004B804C(&qword_1013E1128);
  v2[0] = 0xD00000000000001FLL;
  v2[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v2, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v0 = static AppDependencyManager.shared.getter();
  qword_10147ED48 = AppDependency.__allocating_init(key:manager:)(v3, v0);
  qword_10147ED68 = type metadata accessor for CRLBoardEntityQueryPerformer(0);
  unk_10147ED70 = &off_10129B510;
  sub_10050D1B0(qword_10147ED50);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v3, 0, 0);
  return Logger.init(_:)((id)static OS_os_log.appIntents);
}

uint64_t sub_10065CCD8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD v4[2];
  _BYTE v5[40];

  sub_1004B804C(&qword_1013E1128);
  v4[0] = 0xD00000000000001FLL;
  v4[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v4, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v2 = static AppDependencyManager.shared.getter();
  *a1 = AppDependency.__allocating_init(key:manager:)(v5, v2);
  a1[4] = type metadata accessor for CRLBoardEntityQueryPerformer(0);
  a1[5] = &off_10129B510;
  sub_10050D1B0(a1 + 1);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v5, 0, 0);
  return Logger.init(_:)((id)static OS_os_log.appIntents);
}

uint64_t sub_10065CDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_10147ED78);
  sub_1004F2A1C(v17, (uint64_t)qword_10147ED78);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Freeform Board type display representation name for AppEntity", 61, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

uint64_t sub_10065D014@<X0>(uint64_t a1@<X8>)
{
  if (qword_1013DCBD0 != -1)
    swift_once(&qword_1013DCBD0, sub_10065CBCC);
  return sub_10065F3F4(&qword_10147ED48, a1);
}

uint64_t sub_10065D064()
{
  return sub_1004B7878(&qword_1013E99E0, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01478);
}

uint64_t sub_10065D090()
{
  return sub_1004B7878(&qword_1013E99E8, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F014A0);
}

uint64_t sub_10065D0BC()
{
  return sub_1004B7878(&qword_1013E99F0, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F014C8);
}

uint64_t sub_10065D0E8()
{
  return sub_1004B7878(&qword_1013E99F8, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01520);
}

uint64_t sub_10065D114()
{
  return sub_1004B7878(&qword_1013E9A00, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0215C);
}

uint64_t sub_10065D140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004B8460(v1, a1, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_10065D168@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DCBD8 != -1)
    swift_once(&qword_1013DCBD8, sub_10065CDE8);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_10147ED78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

unint64_t sub_10065D1DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9A08;
  if (!qword_1013E9A08)
  {
    v1 = sub_1004CB6A4(&qword_1013E9A10);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E9A08);
  }
  return result;
}

uint64_t sub_10065D228(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(qword_1013E9A30, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01380);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10065D278()
{
  return sub_1004B7878(&qword_1013E9A18, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01550);
}

uint64_t sub_10065D2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD v22[2];

  v22[1] = a2;
  v4 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v22 - v15;
  v17 = (uint64_t *)(v2 + *(int *)(a1 + 20));
  v18 = *v17;
  v19 = v17[1];
  v20 = swift_bridgeObjectRetain(v19);
  LocalizedStringResource.init(stringLiteral:)(v18, v19, v20);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  sub_10065F3AC(v2 + *(int *)(a1 + 24), (uint64_t)v6);
  DisplayRepresentation.init(title:subtitle:image:)(v13, v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

uint64_t sub_10065D434(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E99F8, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01520);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10065D488()
{
  unint64_t result;

  result = qword_1013E9A20;
  if (!qword_1013E9A20)
  {
    result = swift_getWitnessTable(&unk_100F015D0, &type metadata for CRLiOSBoardEntity.BoardQuery);
    atomic_store(result, (unint64_t *)&qword_1013E9A20);
  }
  return result;
}

unint64_t sub_10065D4D0()
{
  unint64_t result;

  result = qword_1013E9A28;
  if (!qword_1013E9A28)
  {
    result = swift_getWitnessTable(&unk_100F01630, &type metadata for CRLiOSBoardEntity.BoardQuery);
    atomic_store(result, (unint64_t *)&qword_1013E9A28);
  }
  return result;
}

uint64_t sub_10065D514()
{
  return sub_1004B7878(qword_1013E9A30, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F01380);
}

uint64_t sub_10065D540(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[9] = a1;
  v2[10] = v1;
  v3 = sub_1004B804C(&qword_1013E9A70);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLiOSBoardEntity(0);
  v2[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[13] = v5;
  v2[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardEntity(0);
  v2[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[16] = v7;
  v2[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10065D5EC, 0, 0);
}

uint64_t sub_10065D5EC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1004BB5A4((_QWORD *)(v0[10] + 8), *(_QWORD *)(v0[10] + 32));
  AppDependency.wrappedValue.getter(v1);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD3C);
  v0[18] = v2;
  *v2 = v0;
  v2[1] = sub_10065D680;
  return sub_100C156C4(v0[9], (uint64_t)(v0 + 2));
}

uint64_t sub_10065D680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 144);
  v3[19] = a1;
  v3[20] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10065D7F8;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3 + 2);
    v5 = sub_10065D6F4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10065D6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 168) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 120);
    v3 = *(_QWORD *)(v0 + 128);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 208) = v5;
    v6 = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(v0 + 184) = 0;
    *(_QWORD *)(v0 + 192) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + 176) = v6;
    v7 = *(_QWORD *)(v0 + 136);
    sub_1004B8460(v1 + ((v5 + 32) & ~(unint64_t)v5), v7, type metadata accessor for CRLBoardEntity);
    v8 = *(int *)(v4 + 40);
    *(_DWORD *)(v0 + 212) = v8;
    v9 = v7 + v8;
    v10 = (_QWORD *)swift_task_alloc(dword_1013E9B24);
    *(_QWORD *)(v0 + 200) = v10;
    *v10 = v0;
    v10[1] = sub_10065D858;
    v10[14] = *(_QWORD *)(v0 + 88);
    v10[15] = v9;
    return swift_task_switch(sub_10065E028, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(double *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10065D7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065D858()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  return swift_task_switch(sub_10065D8AC, 0, 0);
}

uint64_t sub_10065D8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  sub_1004B8460(*(_QWORD *)(v0 + 136) + *(int *)(v0 + 212), v2, type metadata accessor for CRLBoardIdentifier);
  _IntentUpdatableEntityProperty.wrappedValue.getter((_QWORD *)(v0 + 56), v5);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = (_QWORD *)(v2 + *(int *)(v4 + 20));
  *v7 = *(_QWORD *)(v0 + 56);
  v7[1] = v6;
  sub_10065F320(v3, v2 + *(int *)(v4 + 24));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v1);
  v9 = *(_QWORD *)(v0 + 192);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v9 = sub_100D10FCC(0, *(_QWORD *)(v9 + 16) + 1, 1, *(_QWORD *)(v0 + 192));
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  if (v11 >= v10 >> 1)
    v9 = sub_100D10FCC(v10 > 1, v11 + 1, 1, v9);
  v12 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 184) + 1;
  *(_QWORD *)(v9 + 16) = v11 + 1;
  sub_10065F368(v14, v9+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v11);
  sub_1005761B8(v13);
  if (v16 == v12)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184) + 1;
    *(_QWORD *)(v0 + 184) = v21;
    *(_QWORD *)(v0 + 192) = v9;
    v22 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 120);
    sub_1004B8460(*(_QWORD *)(v0 + 152)+ ((*(unsigned __int8 *)(v0 + 208) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 208))+ v20 * v21, v22, type metadata accessor for CRLBoardEntity);
    v24 = *(int *)(v23 + 40);
    *(_DWORD *)(v0 + 212) = v24;
    v25 = v22 + v24;
    v26 = (_QWORD *)swift_task_alloc(dword_1013E9B24);
    *(_QWORD *)(v0 + 200) = v26;
    *v26 = v0;
    v26[1] = sub_10065D858;
    v26[14] = *(_QWORD *)(v0 + 88);
    v26[15] = v25;
    return swift_task_switch(sub_10065E028, 0, 0);
  }
}

uint64_t sub_10065DAAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[9] = v0;
  v2 = sub_1004B804C(&qword_1013E9A70);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLiOSBoardEntity(0);
  v1[11] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[12] = v4;
  v1[13] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardEntity(0);
  v1[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[15] = v6;
  v1[16] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10065DB58, 0, 0);
}

uint64_t sub_10065DB58()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1004BB5A4((_QWORD *)(v0[9] + 8), *(_QWORD *)(v0[9] + 32));
  AppDependency.wrappedValue.getter(v1);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD2C);
  v0[17] = v2;
  *v2 = v0;
  v2[1] = sub_10065DBE4;
  return sub_100C15CF0((uint64_t)(v0 + 2));
}

uint64_t sub_10065DBE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  v3[18] = a1;
  v3[19] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10065DD5C;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3 + 2);
    v5 = sub_10065DC58;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10065DC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 160) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 120);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 200) = v5;
    v6 = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(v0 + 176) = 0;
    *(_QWORD *)(v0 + 184) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v0 + 168) = v6;
    v7 = *(_QWORD *)(v0 + 128);
    sub_1004B8460(v1 + ((v5 + 32) & ~(unint64_t)v5), v7, type metadata accessor for CRLBoardEntity);
    v8 = *(int *)(v4 + 40);
    *(_DWORD *)(v0 + 204) = v8;
    v9 = v7 + v8;
    v10 = (_QWORD *)swift_task_alloc(dword_1013E9B24);
    *(_QWORD *)(v0 + 192) = v10;
    *v10 = v0;
    v10[1] = sub_10065DDBC;
    v10[14] = *(_QWORD *)(v0 + 80);
    v10[15] = v9;
    return swift_task_switch(sub_10065E028, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(double *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10065DD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065DDBC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  return swift_task_switch(sub_10065DE10, 0, 0);
}

uint64_t sub_10065DE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  sub_1004B8460(*(_QWORD *)(v0 + 128) + *(int *)(v0 + 204), v2, type metadata accessor for CRLBoardIdentifier);
  _IntentUpdatableEntityProperty.wrappedValue.getter((_QWORD *)(v0 + 56), v5);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = (_QWORD *)(v2 + *(int *)(v4 + 20));
  *v7 = *(_QWORD *)(v0 + 56);
  v7[1] = v6;
  sub_10065F320(v3, v2 + *(int *)(v4 + 24));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v1);
  v9 = *(_QWORD *)(v0 + 184);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v9 = sub_100D10FCC(0, *(_QWORD *)(v9 + 16) + 1, 1, *(_QWORD *)(v0 + 184));
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  if (v11 >= v10 >> 1)
    v9 = sub_100D10FCC(v10 > 1, v11 + 1, 1, v9);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 176) + 1;
  *(_QWORD *)(v9 + 16) = v11 + 1;
  sub_10065F368(v14, v9+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v11);
  sub_1005761B8(v13);
  if (v16 == v12)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 144));
    v17 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v9);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 176) + 1;
    *(_QWORD *)(v0 + 176) = v21;
    *(_QWORD *)(v0 + 184) = v9;
    v22 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 112);
    sub_1004B8460(*(_QWORD *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ v20 * v21, v22, type metadata accessor for CRLBoardEntity);
    v24 = *(int *)(v23 + 40);
    *(_DWORD *)(v0 + 204) = v24;
    v25 = v22 + v24;
    v26 = (_QWORD *)swift_task_alloc(dword_1013E9B24);
    *(_QWORD *)(v0 + 192) = v26;
    *v26 = v0;
    v26[1] = sub_10065DDBC;
    v26[14] = *(_QWORD *)(v0 + 80);
    v26[15] = v25;
    return swift_task_switch(sub_10065E028, 0, 0);
  }
}

uint64_t sub_10065E010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return swift_task_switch(sub_10065E028, 0, 0);
}

uint64_t sub_10065E028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 128) = v1;
  *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10065E094, v2, v3);
}

void sub_10065E094()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;

  swift_release(v0[17]);
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");
  v0[18] = v2;

  if (v2)
  {
    v3 = type metadata accessor for CRLiOSAppDelegate();
    v0[19] = swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
    swift_task_switch(sub_10065E140, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10065E140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10065E1A0, v3, v4);
}

uint64_t sub_10065E1A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = v0[19];
  v2 = v0[18];
  swift_release(v0[20]);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache);
  v0[21] = v3;
  v4 = v3;
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_10065E200, 0, 0);
}

uint64_t sub_10065E200()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, double);

  if (*(_QWORD *)(v0 + 168))
  {
    v5 = (uint64_t (*)(uint64_t, double))((char *)&dword_1013E4A18 + dword_1013E4A18);
    v1 = (_QWORD *)swift_task_alloc(unk_1013E4A1C);
    *(_QWORD *)(v0 + 176) = v1;
    *v1 = v0;
    v1[1] = sub_10065E2A8;
    return v5(*(_QWORD *)(v0 + 120), 2.0);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 112);
    v4 = type metadata accessor for DisplayRepresentation.Image(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10065E2A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 176);
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10065E3E4;
  else
    v5 = sub_10065E314;
  return swift_task_switch(v5, 0, 0);
}

void sub_10065E314()
{
  uint64_t v0;
  UIImage *v1;
  NSData *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (UIImage *)objc_msgSend(*(id *)(v0 + 184), "UIImage");
  v2 = UIImagePNGRepresentation(v1);

  if (v2)
  {
    v3 = *(void **)(v0 + 184);
    v4 = *(void **)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 112);
    v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v8 = v7;

    DisplayRepresentation.Image.init(data:isTemplate:)(v6, v8, 2);
    v9 = type metadata accessor for DisplayRepresentation.Image(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10065E3E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  swift_beginAccess(&static OS_os_log.sceneManagement, v0 + 88, 0, 0);
  v5 = (void *)static OS_os_log.sceneManagement;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = UUID.uuidString.getter(v8);
  v11 = v10;
  v22 = v9;
  v23 = v10;
  swift_bridgeObjectRetain(v10);
  v12._countAndFlagsBits = 58;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13 = (uint64_t *)(v4 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v14 = *v13;
  v15 = (void *)v13[1];
  swift_bridgeObjectRetain(v23);
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(inited + 40) = v23;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v18, "CRLiOSBoardEntity: failed to get thumbnail for board: %@", 56, 2, inited);
  swift_errorRelease(v1);

  swift_setDeallocating(inited);
  v19 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v19);

  v20 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 1, 1, v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065E5C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E9B2C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10065E614;
  return sub_10065D540(a1);
}

uint64_t sub_10065E614(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_10065E668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_1013E9B1C);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100617FE0;
  return sub_10065DAAC();
}

unint64_t sub_10065E6B4()
{
  unint64_t result;

  result = qword_1013E9A48;
  if (!qword_1013E9A48)
  {
    result = swift_getWitnessTable(&unk_100F01658, &type metadata for CRLiOSBoardEntity.BoardQuery);
    atomic_store(result, (unint64_t *)&qword_1013E9A48);
  }
  return result;
}

unint64_t sub_10065E6FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E9A50;
  if (!qword_1013E9A50)
  {
    v1 = sub_1004CB6A4(qword_1013E9A58);
    sub_1004B7878(&qword_1013E99F0, type metadata accessor for CRLiOSBoardEntity, (uint64_t)&unk_100F014C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E9A50);
  }
  return result;
}

uint64_t sub_10065E778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10065CB5C();
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t destroy for CRLiOSBoardEntity.BoardQuery(_QWORD *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;
  swift_release(*a1);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
}

uint64_t initializeWithCopy for CRLiOSBoardEntity.BoardQuery(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t *v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t *, uint64_t);

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2 + 1;
  v5 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v5 - 8);
  swift_retain(v3);
  v7(a1 + 8, v4, v6);
  return a1;
}

uint64_t *assignWithCopy for CRLiOSBoardEntity.BoardQuery(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v5);
  sub_1004EA5C8(a1 + 1, v4);
  return a1;
}

uint64_t *assignWithTake for CRLiOSBoardEntity.BoardQuery(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectionData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSBoardEntity.BoardQuery()
{
  return &type metadata for CRLiOSBoardEntity.BoardQuery;
}

uint64_t *sub_10065E9C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v24);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(a3 + 20);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = type metadata accessor for DisplayRepresentation.Image(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
    swift_bridgeObjectRetain(v11);
    v22 = swift_bridgeObjectRetain(v16);
    if (v21(v18, 1, v19, v22))
    {
      v23 = sub_1004B804C(&qword_1013E9A70);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_10065EB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v5 + 20) + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for DisplayRepresentation.Image(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

uint64_t sub_10065EBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = *(int *)(a3 + 20);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (void *)(a1 + v12);
  v17 = (const void *)(a2 + v12);
  v18 = type metadata accessor for DisplayRepresentation.Image(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v19 + 48);
  swift_bridgeObjectRetain(v10);
  v21 = swift_bridgeObjectRetain(v15);
  if (v20(v17, 1, v18, v21))
  {
    v22 = sub_1004B804C(&qword_1013E9A70);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_10065ECE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = *(int *)(a3 + 24);
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = type metadata accessor for DisplayRepresentation.Image(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = sub_1004B804C(&qword_1013E9A70);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_10065EE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for DisplayRepresentation.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1004B804C(&qword_1013E9A70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10065EF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = *(int *)(a3 + 24);
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = type metadata accessor for DisplayRepresentation.Image(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = sub_1004B804C(&qword_1013E9A70);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_10065F0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10065F0D8);
}

uint64_t sub_10065F0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1004B804C(&qword_1013E9A70);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10065F188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10065F194);
}

uint64_t sub_10065F194(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1004B804C(&qword_1013E9A70);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10065F240(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100F01698;
    sub_10065F2CC(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_10065F2CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E9AE0)
  {
    v2 = type metadata accessor for DisplayRepresentation.Image(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E9AE0);
  }
}

uint64_t sub_10065F320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E9A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10065F368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLiOSBoardEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10065F3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E9A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10065F3F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);

  v3 = *a1;
  *(_QWORD *)a2 = *a1;
  v4 = a2 + 8;
  v5 = a1 + 1;
  v6 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v3);
  v8(v4, v5, v7);
  return a2;
}

double sub_10065F478()
{
  uint64_t v0;
  _UNKNOWN ****v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v1 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v1 == &off_10140F528)
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v2 = 0;
  swift_beginAccess(v2 + qword_101481450, v5, 32, 0);
  swift_retain(v1);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v3);
  swift_endAccess(v5);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10065F518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *Strong;
  void *v21;
  char v22;
  void *v23;
  uint64_t result;
  CKRecordID v25;
  Swift::String v26;
  _BYTE v28[24];

  v2 = v1;
  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v28[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v28[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v13 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = v13, v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x2F0))(), v14, (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_10140F528)
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v17 = 0;
    sub_1004B8460(a1, (uint64_t)v12, type metadata accessor for CRLUSDZAssetDataStruct);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_beginAccess(v17 + qword_101481450, v28, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_retain(v16);
    v18 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    CRRegister.wrappedValue.setter(v6, v18, v19);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_endAccess(v28);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_release(v16);
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (!Strong
      || (v21 = Strong,
          v22 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v21,
          (v22 & 1) == 0))
    {
      v23 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload) = 0;

    }
    return sub_1004B84A4(a1, type metadata accessor for CRLUSDZAssetDataStruct);
  }
  return result;
}

id sub_10065F864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _UNKNOWN ****v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v17[24];

  v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v11 == &off_10140F528)
    v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v12 = 0;
  swift_beginAccess(v12 + qword_101481450, v17, 32, 0);
  swift_retain(v11);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v13);
  swift_endAccess(v17);
  swift_release(v11);
  sub_1004CB7BC((uint64_t)&v3[*(int *)(v1 + 20)], (uint64_t)v6, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZAssetDataStruct);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E9BE0);
    return 0;
  }
  else
  {
    sub_1004B84E0((uint64_t)v6, (uint64_t)v10, type metadata accessor for CRLAssetData);
    v14 = sub_10097C23C(0.5, (uint64_t)v10, v0);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLAssetData);
  }
  return v14;
}

void *sub_10065FB20()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  _UNKNOWN ****v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _DWORD *v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  os_unfair_lock_s *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v38;
  char *v39;
  char *v40;
  Class v41;
  uint64_t v42;
  objc_super v43;
  _BYTE v44[24];

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v0[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload];
  v13 = v12;
  if (!v12)
  {
    v42 = OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload;
    v14 = *(_UNKNOWN *****)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v14 == &off_10140F528)
      v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v15 = 0;
    swift_beginAccess(v15 + qword_101481450, v44, 32, 0);
    swift_retain(v14);
    v16 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    CRRegister.wrappedValue.getter(v16);
    swift_endAccess(v44);
    swift_release(v14);
    sub_1004CB7BC((uint64_t)&v4[*(int *)(v2 + 20)], (uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
      v13 = 0;
    }
    else
    {
      sub_1004B84E0((uint64_t)v7, (uint64_t)v11, type metadata accessor for CRLAssetData);
      v17 = (char *)objc_msgSend(v1, "store");
      v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
      v19 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      v20 = *(void **)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v20)
      {
        v21 = *(id *)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        v41 = (Class)type metadata accessor for CRLAssetManager();
        v22 = (char *)objc_allocWithZone(v41);
        v40 = &v22[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit(&v22[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
        v23 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        v24 = type metadata accessor for CRLUnfairLock();
        v25 = swift_allocObject(v24, 24, 7);
        v39 = v17;
        v26 = v22;
        v27 = (_DWORD *)swift_slowAlloc(4, -1);
        *v27 = 0;
        *(_QWORD *)(v25 + 16) = v27;
        atomic_thread_fence(memory_order_acq_rel);
        *(_QWORD *)&v22[v23] = v25;
        *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        v28 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(_QWORD *)&v26[v28] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
        *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        v29 = v39;
        swift_unknownObjectWeakAssign(v40, v39);

        v43.receiver = v26;
        v43.super_class = v41;
        v30 = objc_msgSendSuper2(&v43, "init");

        v31 = *(void **)&v17[v19];
        *(_QWORD *)&v17[v19] = v30;
        v21 = v30;

        v20 = 0;
      }
      v32 = *(os_unfair_lock_s **)(v18 + 16);
      v33 = v20;
      os_unfair_lock_unlock(v32);

      v13 = (void *)sub_100CF7F90(v11, v1, v21);
      v34 = *(void **)&v1[v42];
      *(_QWORD *)&v1[v42] = v13;
      v35 = v13;

      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLAssetData);
    }
  }
  v36 = v12;
  return v13;
}

id sub_10065FEC0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  __n128 v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  _BYTE v55[40];
  CGRect v56;
  char v57;
  CGRect v58;

  sub_100660120((uint64_t)v55);
  sub_1004C4938((uint64_t)v55, (uint64_t)&v56, &qword_1013E1B30);
  if ((v57 & 1) != 0)
    return 0;
  x = v56.origin.x;
  y = v56.origin.y;
  width = v56.size.width;
  height = v56.size.height;
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.width = 0.0;
  v58.size.height = 0.0;
  if (CGRectEqualToRect(v56, v58))
    return 0;
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 288);
  v15 = swift_retain(v13);
  v16 = (void *)v14(v15);
  objc_msgSend(v16, "boundsBeforeRotation", swift_release(v13).n128_f64[0]);
  v18 = v17;
  v50 = v17;
  v51 = a1;
  v52 = a2;
  v53 = a3;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  sub_1000626D8(v18, v20, v22, v24, x, y, width, height);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  sub_100062EB4(0, v29, v31, v51, v52, v53, a4);
  v34 = v33 / v30;
  v35 = sub_100061400(v26, v28, v30, v32);
  sub_100062F48(v50, v20, v22, v24, v35, v36, v34);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = sub_100061400(v51, v52, v53, a4);
  v47 = sub_1000603B8(v45, v46, v35);
  v48 = sub_1000603D0(v38, v40, v47);
  return objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:", v48, v49, v42, v44);
}

uint64_t sub_100660120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _UNKNOWN ****v6;
  uint64_t v7;
  uint64_t v8;
  float32x2_t *v9;
  float32x2_t v10;
  float32x2_t v11;
  __int8 v12;
  uint64_t result;
  float64x2_t v14;
  float64x2_t v15;
  _BYTE v17[24];

  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 == &off_10140F528)
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v7 = 0;
  swift_beginAccess(v7 + qword_101481450, v17, 32, 0);
  swift_retain(v6);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v8);
  swift_endAccess(v17);
  swift_release(v6);
  v9 = (float32x2_t *)&v5[*(int *)(v3 + 28)];
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2].i8[0];
  result = sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  v14 = 0uLL;
  v15 = 0uLL;
  if ((v12 & 1) == 0)
  {
    v14 = vcvtq_f64_f32(v10);
    v15 = vcvtq_f64_f32(v11);
  }
  *(float64x2_t *)a1 = v14;
  *(float64x2_t *)(a1 + 16) = v15;
  *(_BYTE *)(a1 + 32) = v12;
  return result;
}

char *sub_1006602B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  void *v41;
  char *v42;
  objc_class *v43;
  id v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_super v54;
  _BYTE v55[32];
  _BYTE v56[24];
  _BYTE v57[32];
  char *v58;

  v53 = a4;
  v49 = a2;
  v5 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v50 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v47 = (uint64_t)v46 - v14;
  __chkstk_darwin(v15);
  v48 = (uint64_t)v46 - v16;
  __chkstk_darwin(v17);
  v52 = (uint64_t)v46 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)v46 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)v46 - v23;
  v51 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_100D37EDC(1);
  swift_release(v25);
  v27 = (char *)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v57, 0, 0);
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_release(v26);
  v29 = (uint64_t)v58;
  sub_100D38184(v53);
  if (v29)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v53 = 0;
    v46[1] = v8;
    v30 = v52;
    sub_1004CB7BC(v49, v52, (uint64_t *)&unk_1013E1A50);
    v58 = v24;
    v31 = (uint64_t)v24;
    v32 = v48;
    sub_1004CB7BC(v31, v48, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33) == 1)
    {
      v35 = (uint64_t)v21;
      sub_1004C4938(v32, (uint64_t)v21, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v52, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v52, v33);
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v35 = (uint64_t)v21;
      v36(v21, 0, 1, v33);
    }
    v37 = v47;
    sub_1004CB7BC(v35, v47, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v56, 33, 0);
    v38 = v50;
    sub_1004CB7BC(v37, v50, (uint64_t *)&unk_1013E1A50);
    v39 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v55, v28);
    sub_1005E388C(v38, v40);
    v39(v55, 0);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v56);
    sub_1004CB800(v35, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v41 = *(void **)(v51 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v42 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem(0));
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v41;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v26;
    v43 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v54.receiver = v42;
    v54.super_class = v43;
    v44 = v41;
    v27 = (char *)objc_msgSendSuper2(&v54, "init");
    sub_1004CB800((uint64_t)v58, (uint64_t *)&unk_1013E1A50);
  }
  return v27;
}

id sub_1006607B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  char *v20;
  objc_class *v21;
  id v22;
  objc_super v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (**(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_10140F528)
    v8 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v8 = 0;
  v9 = (uint64_t)v8 + *(_QWORD *)(*v8 + 632);
  swift_beginAccess(v9, v26, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v7, (uint64_t *)&unk_1013F02C0);
  v10 = (uint64_t)v8 + qword_101481450;
  swift_beginAccess((char *)v8 + qword_101481450, v25, 0, 0);
  sub_1004B8460(v10, (uint64_t)v4, type metadata accessor for CRLUSDZItemCRDTData);
  v11 = v8[4];
  v12 = v8[5];
  v15 = v8 + 2;
  v14 = v8[2];
  v13 = v15[1];
  v16 = type metadata accessor for CRLUSDZItemData(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  sub_1004B84E0((uint64_t)v4, v17 + qword_101481450, type metadata accessor for CRLUSDZItemCRDTData);
  sub_1004C4938((uint64_t)v7, v17 + *(_QWORD *)(*(_QWORD *)v17 + 632), (uint64_t *)&unk_1013F02C0);
  v18 = sub_1005E1000(v13, v11, v12, v14);
  v19 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v20 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem(0));
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v19;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v18;
  v21 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v24.receiver = v20;
  v24.super_class = v21;
  v22 = v19;
  return objc_msgSendSuper2(&v24, "init");
}

uint64_t sub_1006609D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  _UNKNOWN ****v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  CKRecordID v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _QWORD v34[3];
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1004B804C(&qword_1013E9C08);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLUSDZItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v30 = a1;
    swift_unknownObjectRetain(a1);
    v29 = sub_100B0C360(v15, v2);
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 != &off_10140F528)
      v16 = 0;
    v17 = (uint64_t)v16 + qword_101481450;
    swift_beginAccess((char *)v16 + qword_101481450, v33, 0, 0);
    sub_1004B8460(v17, (uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
    v18 = *(_UNKNOWN *****)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 != &off_10140F528)
      v18 = 0;
    v19 = (uint64_t)v18 + qword_101481450;
    swift_beginAccess((char *)v18 + qword_101481450, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    v20 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    CRStruct_1.actionUndoingDifference(from:)(v6, v4, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
    v21 = sub_1004B804C((uint64_t *)&unk_1013E9C10);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_1013E9C08);
      memset(v34, 0, sizeof(v34));
      v35 = 1;
    }
    else
    {
      v35 = v21;
      v23 = sub_10050D1B0(v34);
      (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 32))(v23, v12, v21);
    }
    v24 = v29;
    swift_beginAccess(v29 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v31, 33, 0);
    sub_10083DA20((uint64_t)v34, 8);
    swift_endAccess(v31);
    swift_unknownObjectRelease(v30);
    return v24;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 149, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2u, 149, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100660D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  _UNKNOWN ****v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  double *v39;
  uint64_t result;
  CKRecordID v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  _BYTE v52[24];
  _BYTE v53[24];

  v3 = sub_1004B804C(&qword_1013E9C28);
  v48 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v46 = (uint64_t)&v44 - v7;
  v47 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v47);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = sub_1004B804C(&qword_1013E9C30);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  v19 = type metadata accessor for CRLUSDZItem(0);
  v20 = swift_dynamicCastClass(a1, v19);
  if (v20)
  {
    v21 = v20;
    v49 = v3;
    v50 = v18;
    v45 = v5;
    v22 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v21, v22))
    {
      v23 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v23 != &off_10140F528)
        v23 = 0;
      v24 = (uint64_t)v23 + qword_101481450;
      swift_beginAccess((char *)v23 + qword_101481450, v53, 0, 0);
      sub_1004B8460(v24, (uint64_t)v12, type metadata accessor for CRLUSDZItemCRDTData);
      v25 = *(_UNKNOWN *****)(v21 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v25 != &off_10140F528)
        v25 = 0;
      v26 = (uint64_t)v25 + qword_101481450;
      swift_beginAccess((char *)v25 + qword_101481450, v52, 0, 0);
      sub_1004B8460(v26, (uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
      v27 = sub_1004B7878(&qword_1013E9C38, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34590);
      swift_unknownObjectRetain(a1);
      v28 = (uint64_t)v50;
      CRType.observableDifference(from:)(v9, v47, v27);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLUSDZItemCRDTData);
      sub_1004CB7BC(v28, (uint64_t)v15, &qword_1013E9C30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v15, 1, v49) == 1)
      {
        v29 = &qword_1013E9C30;
        v30 = (uint64_t)v15;
      }
      else
      {
        v31 = v46;
        sub_1004C4938((uint64_t)v15, v46, &qword_1013E9C40);
        v32 = (uint64_t)v45;
        sub_1004CB7BC(v31, (uint64_t)v45, &qword_1013E9C40);
        v33 = type metadata accessor for CRValueObservableDifference(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) != 1)
        {
          sub_1004CB800(v32, &qword_1013E9C40);
          v34 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v38 = *((_QWORD *)v34 + 2);
          v37 = *((_QWORD *)v34 + 3);
          if (v38 >= v37 >> 1)
            v34 = (double *)sub_100D0EF94((_QWORD *)(v37 > 1), v38 + 1, 1, v34);
          *((_QWORD *)v34 + 2) = v38 + 1;
          v39 = &v34[2 * v38];
          v39[4] = 3.95615552e252;
          v39[5] = -5.98008217e197;
          sub_1004CB800(v31, &qword_1013E9C28);
          if (*((_QWORD *)v34 + 2))
            goto LABEL_12;
          goto LABEL_16;
        }
        sub_1004CB800(v31, &qword_1013E9C28);
        v29 = &qword_1013E9C40;
        v30 = v32;
      }
      sub_1004CB800(v30, v29);
      v34 = _swiftEmptyArrayStorage;
      if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      {
LABEL_12:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v51 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v34, 8, isUniquelyReferenced_nonNull_native);
        v36 = v51;
        swift_unknownObjectRelease(a1);
        swift_bridgeObjectRelease(0x8000000000000000);
LABEL_17:
        sub_1004CB800(v28, &qword_1013E9C30);
        return (uint64_t)v36;
      }
LABEL_16:
      swift_bridgeObjectRelease(v34);
      swift_unknownObjectRelease(a1);
      v36 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 161, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2u, 161, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v41, *(Swift::String *)&v42);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_10066134C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E9C08);
  __chkstk_darwin(v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v28[-v9 - 8];
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9C10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v28, 0, 0);
    v16 = *v15;
    if (!*(_QWORD *)(v16 + 16))
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 1;
LABEL_8:
      v19 = (uint64_t *)&unk_1013DFC00;
      v20 = &v29;
LABEL_9:
      sub_1004CB800((uint64_t)v20, v19);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_10:
      sub_1004CB800((uint64_t)v10, &qword_1013E9C08);
      return;
    }
    swift_bridgeObjectRetain(v16);
    v17 = sub_1008431EC(8);
    if ((v18 & 1) != 0)
    {
      sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v29, &qword_1013E0230);
    }
    else
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 1;
    }
    swift_bridgeObjectRelease(v16);
    if (v32 == 1)
      goto LABEL_8;
    sub_1004C4938((uint64_t)&v29, (uint64_t)v33, &qword_1013E0230);
    if (!v34)
    {
      v19 = &qword_1013E0230;
      v20 = (uint64_t *)v33;
      goto LABEL_9;
    }
    v21 = swift_dynamicCast(v10, v33, (char *)&type metadata for Any + 8, v11, 6);
    v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    v22(v10, v21 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      goto LABEL_10;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v23 == &off_10140F528)
      v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v24 = 0;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
    v22(v7, 0, 1, v11);
    swift_beginAccess(v24 + qword_101481450, v33, 33, 0);
    v25 = type metadata accessor for CRLUSDZItemCRDTData(0);
    v26 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    swift_retain(v23);
    CRStruct_1.apply(_:)(v7, v25, v26);
    swift_endAccess(v33);
    swift_release(v23);
    sub_1004CB800((uint64_t)v7, &qword_1013E9C08);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_100661690(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[12];
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v21 = sub_1004B804C(&qword_1013E9C00);
  __chkstk_darwin(v21);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v4);
  v20[5] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v24 = (char *)v20 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)v20 - v9;
  v26 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v26);
  v20[11] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v20[10] = (char *)v20 - v13;
  __chkstk_darwin(v14);
  v25 = type metadata accessor for CRLAssetData(0);
  v20[9] = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v20[1] = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20[8] = (char *)v20 - v17;
  __chkstk_darwin(v18);
  v22 = (char *)v20 - v19;
  v23 = v10;
  __asm { BR              X10 }
}

void sub_1006618E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _UNKNOWN ****v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _UNKNOWN ****v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN ****v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _UNKNOWN ****v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  int v50;
  int v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t inited;
  uint64_t v68;
  _UNKNOWN ****v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _UNKNOWN ****v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  _UNKNOWN ****v84;
  uint64_t v85;
  uint64_t v86;
  _UNKNOWN ****v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  double v94;
  double v95;
  double v96;
  double v97;
  _UNKNOWN ****v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  CKRecordID v108;
  Swift::String v109;
  CGRect v110;
  CGRect v111;

  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x617461447A647375, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(0xED00006174614472);
  if ((v7 & 1) == 0)
  {
    swift_getObjectType(v4);
    sub_10077C7C0(v1, v0, v2, v4, *(_QWORD *)(v6 - 368));
    return;
  }
  v8 = *(_QWORD *)(v0 + 16);
  if (v8)
  {
    *(_QWORD *)(v6 - 560) = OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload;
    *(_QWORD *)(v6 - 416) = v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
    swift_bridgeObjectRetain(v0);
    *(_QWORD *)(v6 - 608) = v0;
    v9 = (_QWORD *)(v0 + 40);
    *(_OWORD *)(v6 - 592) = xmmword_100EF5E40;
    *(_QWORD *)(v6 - 552) = v4;
    *(_QWORD *)(v6 - 432) = v5;
    v10 = *(_QWORD *)(v6 - 504);
    while (1)
    {
      v12 = *(v9 - 1);
      v11 = *v9;
      v13 = v12 == 0x7461447465737361 && v11 == 0xE900000000000061;
      if (!v13
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7461447465737361, 0xE900000000000061, *(v9 - 1), *v9, 0) & 1) == 0)
      {
        v66 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v66, v6 - 272);
        *(_OWORD *)(inited + 16) = *(_OWORD *)(v6 - 592);
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v12;
        *(_QWORD *)(inited + 40) = v11;
        swift_bridgeObjectRetain(v11);
        swift_setDeallocating(inited);
        v68 = sub_1004B804C(&qword_1013E0190);
        v10 = *(_QWORD *)(v6 - 504);
        swift_arrayDestroy(inited + 32, 1, v68);
        goto LABEL_5;
      }
      *(_QWORD *)(v6 - 448) = v9;
      *(_QWORD *)(v6 - 440) = v8;
      v14 = type metadata accessor for CRLUSDZItem(0);
      v15 = swift_dynamicCastClass(v4, v14);
      if (!v15)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 197, "Snapshot should be a USDZ item.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Snapshot should be a USDZ item.");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2u, 197, (uint64_t)"Snapshot should be a USDZ item.", 31, 2u);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v108, v109);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
        __break(1u);
        return;
      }
      v16 = v15;
      v17 = *(_QWORD *)(v6 - 560);
      v18 = *(_QWORD *)(v6 - 368);
      v19 = *(void **)(v18 + v17);
      *(_QWORD *)(v18 + v17) = 0;
      swift_unknownObjectRetain(v4);

      v20 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      *(_QWORD *)(v6 - 384) = v16;
      *(_QWORD *)(v6 - 392) = v20;
      v21 = *(_UNKNOWN *****)(v16 + v20);
      v22 = *v21 == &off_10140F528 ? *(_QWORD *)(v16 + v20) : 0;
      swift_beginAccess(v22 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v21);
      v23 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
      CRRegister.wrappedValue.getter(v23);
      swift_endAccess(v6 - 304);
      swift_release(v21);
      sub_1004B8460(v3, v10, type metadata accessor for CRLAssetData);
      sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
      v24 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      *(_QWORD *)(v6 - 376) = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v25 = *(_UNKNOWN *****)(v18 + v24);
      v26 = *v25 == &off_10140F528 ? *(_QWORD *)(v18 + v24) : 0;
      swift_beginAccess(v26 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v25);
      *(_QWORD *)(v6 - 408) = v23;
      CRRegister.wrappedValue.getter(v23);
      swift_endAccess(v6 - 304);
      swift_release(v25);
      v27 = *(_QWORD *)(v6 - 544);
      sub_1004B8460(v3, v27, type metadata accessor for CRLAssetData);
      sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
      v28 = static UUID.== infix(_:_:)(v10);
      v29 = *(_QWORD *)(v6 - 424);
      if ((v28 & 1) == 0)
        break;
      v30 = *(int *)(v29 + 20);
      v31 = *(_QWORD *)(v10 + v30);
      v32 = *(_QWORD *)(v10 + v30 + 8);
      v33 = (_QWORD *)(v27 + v30);
      v34 = v33[1];
      if ((v31 != *v33 || v32 != v34)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, *v33, v34, 0) & 1) == 0)
      {
        break;
      }
      v35 = sub_100C9E04C(*(_QWORD *)(v10 + *(int *)(v29 + 24)), *(_QWORD *)(v27 + *(int *)(v29 + 24)));
      sub_1004B84A4(v27, type metadata accessor for CRLAssetData);
      sub_1004B84A4(v10, type metadata accessor for CRLAssetData);
      v36 = *(_QWORD *)(v6 - 400);
      if ((v35 & 1) == 0)
        goto LABEL_25;
LABEL_26:
      v37 = *(_QWORD *)(v6 - 392);
      v38 = *(_UNKNOWN *****)(*(_QWORD *)(v6 - 384) + v37);
      if (*v38 == &off_10140F528)
        v39 = *(_QWORD *)(*(_QWORD *)(v6 - 384) + v37);
      else
        v39 = 0;
      swift_beginAccess(v39 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v38);
      v40 = *(_QWORD *)(v6 - 408);
      CRRegister.wrappedValue.getter(v40);
      swift_endAccess(v6 - 304);
      swift_release(v38);
      v41 = *(_QWORD *)(v6 - 496);
      sub_1004CB7BC(v3 + *(int *)(v36 + 20), v41, (uint64_t *)&unk_1013E9BE0);
      sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
      v42 = *(_QWORD *)(v6 - 376);
      v43 = *(_UNKNOWN *****)(*(_QWORD *)(v6 - 368) + v42);
      if (*v43 == &off_10140F528)
        v44 = *(_QWORD *)(*(_QWORD *)(v6 - 368) + v42);
      else
        v44 = 0;
      swift_beginAccess(v44 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v43);
      CRRegister.wrappedValue.getter(v40);
      swift_endAccess(v6 - 304);
      swift_release(v43);
      v45 = *(_QWORD *)(v6 - 488);
      sub_1004CB7BC(v3 + *(int *)(v36 + 20), v45, (uint64_t *)&unk_1013E9BE0);
      sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
      v46 = *(_QWORD *)(v6 - 432);
      v47 = v46 + *(int *)(*(_QWORD *)(v6 - 512) + 48);
      sub_1004CB7BC(v41, v46, (uint64_t *)&unk_1013E9BE0);
      sub_1004CB7BC(v45, v47, (uint64_t *)&unk_1013E9BE0);
      v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 536) + 48);
      v49 = *(_QWORD *)(v6 - 424);
      v50 = v48(v46, 1, v49);
      v9 = *(_QWORD **)(v6 - 448);
      if (v50 != 1)
      {
        v55 = *(_QWORD *)(v6 - 568);
        sub_1004CB7BC(v46, v55, (uint64_t *)&unk_1013E9BE0);
        v56 = v48(v47, 1, v49);
        v57 = v55;
        v52 = &qword_1013E9C00;
        v53 = *(_QWORD *)(v6 - 400);
        if (v56 != 1)
        {
          v58 = *(_QWORD *)(v6 - 600);
          sub_1004B84E0(v47, v58, type metadata accessor for CRLAssetData);
          if ((static UUID.== infix(_:_:)(v57) & 1) != 0)
          {
            if ((v59 = *(int *)(*(_QWORD *)(v6 - 424) + 20),
                  v60 = *(_QWORD *)(v57 + v59),
                  v61 = *(_QWORD *)(v57 + v59 + 8),
                  v62 = (_QWORD *)(v58 + v59),
                  v63 = v62[1],
                  v60 == *v62)
              && v61 == v63
              || (_stringCompareWithSmolCheck(_:_:expecting:)(v60, v61, *v62, v63, 0) & 1) != 0)
            {
              v64 = *(int *)(*(_QWORD *)(v6 - 424) + 24);
              v65 = sub_100C9E04C(*(_QWORD *)(v57 + v64), *(_QWORD *)(v58 + v64));
              sub_1004B84A4(v58, type metadata accessor for CRLAssetData);
              sub_1004CB800(*(_QWORD *)(v6 - 488), (uint64_t *)&unk_1013E9BE0);
              sub_1004CB800(*(_QWORD *)(v6 - 496), (uint64_t *)&unk_1013E9BE0);
              sub_1004B84A4(v57, type metadata accessor for CRLAssetData);
              sub_1004CB800(v46, (uint64_t *)&unk_1013E9BE0);
              v54 = *(_QWORD *)(v6 - 384);
              if ((v65 & 1) != 0)
                goto LABEL_47;
              goto LABEL_46;
            }
          }
          sub_1004B84A4(v58, type metadata accessor for CRLAssetData);
          v52 = (uint64_t *)&unk_1013E9BE0;
        }
        sub_1004CB800(*(_QWORD *)(v6 - 488), (uint64_t *)&unk_1013E9BE0);
        sub_1004CB800(*(_QWORD *)(v6 - 496), (uint64_t *)&unk_1013E9BE0);
        sub_1004B84A4(v57, type metadata accessor for CRLAssetData);
LABEL_45:
        sub_1004CB800(v46, v52);
        v54 = *(_QWORD *)(v6 - 384);
LABEL_46:
        *(_QWORD *)(v6 - 280) = &type metadata for Bool;
        *(_BYTE *)(v6 - 304) = 1;
        sub_1004CB7BC(v6 - 304, v6 - 336, &qword_1013E0230);
        swift_beginAccess(*(_QWORD *)(v6 - 416), v6 - 360, 33, 0);
        sub_10083DAD8(v6 - 336, 0x28uLL);
        swift_endAccess(v6 - 360);
        sub_1004CB800(v6 - 304, &qword_1013E0230);
        goto LABEL_47;
      }
      sub_1004CB800(v45, (uint64_t *)&unk_1013E9BE0);
      sub_1004CB800(v41, (uint64_t *)&unk_1013E9BE0);
      v51 = v48(v47, 1, v49);
      v52 = &qword_1013E9C00;
      v53 = *(_QWORD *)(v6 - 400);
      if (v51 != 1)
        goto LABEL_45;
      sub_1004CB800(v46, (uint64_t *)&unk_1013E9BE0);
      v54 = *(_QWORD *)(v6 - 384);
LABEL_47:
      v69 = *(_UNKNOWN *****)(v54 + *(_QWORD *)(v6 - 392));
      if (*v69 == &off_10140F528)
        v70 = *(_QWORD *)(v54 + *(_QWORD *)(v6 - 392));
      else
        v70 = 0;
      swift_beginAccess(v70 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v69);
      v71 = *(_QWORD *)(v6 - 408);
      CRRegister.wrappedValue.getter(v71);
      swift_endAccess(v6 - 304);
      swift_release(v69);
      *(_OWORD *)(v6 - 464) = *(_OWORD *)(v3 + *(int *)(v53 + 24));
      sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
      v72 = *(_QWORD *)(v6 - 376);
      v73 = *(_UNKNOWN *****)(*(_QWORD *)(v6 - 368) + v72);
      if (*v73 == &off_10140F528)
        v74 = *(_QWORD *)(*(_QWORD *)(v6 - 368) + v72);
      else
        v74 = 0;
      swift_beginAccess(v74 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v73);
      CRRegister.wrappedValue.getter(v71);
      swift_endAccess(v6 - 304);
      swift_release(v73);
      *(_OWORD *)(v6 - 480) = *(_OWORD *)(v3 + *(int *)(v53 + 24));
      sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
      v75 = CRL3DRotation.rawValue.getter(*(__n128 *)(v6 - 464));
      v77 = v76;
      v78 = CRL3DRotation.rawValue.getter(*(__n128 *)(v6 - 480));
      v80 = v79;
      sub_1007B38CC(v75, v77);
      v82 = v81;
      v83 = *(_QWORD *)(v6 - 400);
      sub_1004BBBC8(v78, v80);
      sub_1004BBBC8(v75, v77);
      if ((v82 & 1) == 0)
      {
        v84 = *(_UNKNOWN *****)(*(_QWORD *)(v6 - 368) + *(_QWORD *)(v6 - 376));
        if (*v84 == &off_10140F528)
          v85 = *(_QWORD *)(*(_QWORD *)(v6 - 368) + *(_QWORD *)(v6 - 376));
        else
          v85 = 0;
        swift_beginAccess(v85 + qword_101481450, v6 - 304, 32, 0);
        swift_retain(v84);
        CRRegister.wrappedValue.getter(v71);
        swift_endAccess(v6 - 304);
        swift_release(v84);
        *(_OWORD *)(v6 - 464) = *(_OWORD *)(v3 + *(int *)(v83 + 24));
        sub_1004B84A4(v3, type metadata accessor for CRLUSDZAssetDataStruct);
        *(_QWORD *)(v6 - 280) = &type metadata for CRL3DRotation;
        v86 = swift_allocObject(&unk_101274710, 32, 15);
        *(_QWORD *)(v6 - 304) = v86;
        *(_OWORD *)(v86 + 16) = *(_OWORD *)(v6 - 464);
        sub_1004CB7BC(v6 - 304, v6 - 336, &qword_1013E0230);
        swift_beginAccess(*(_QWORD *)(v6 - 416), v6 - 360, 33, 0);
        sub_10083DAD8(v6 - 336, 0x32uLL);
        swift_endAccess(v6 - 360);
        sub_1004CB800(v6 - 304, &qword_1013E0230);
      }
      v87 = *(_UNKNOWN *****)(*(_QWORD *)(v6 - 384) + *(_QWORD *)(v6 - 392));
      if (*v87 == &off_10140F528)
        v88 = *(_QWORD *)(*(_QWORD *)(v6 - 384) + *(_QWORD *)(v6 - 392));
      else
        v88 = 0;
      swift_beginAccess(v88 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v87);
      v89 = *(_QWORD *)(v6 - 528);
      CRRegister.wrappedValue.getter(v71);
      swift_endAccess(v6 - 304);
      swift_release(v87);
      v90 = v89 + *(int *)(v83 + 28);
      v92 = *(_QWORD *)v90;
      v91 = *(_QWORD *)(v90 + 8);
      v93 = *(_BYTE *)(v90 + 16);
      sub_1004B84A4(v89, type metadata accessor for CRLUSDZAssetDataStruct);
      v94 = 0.0;
      v95 = 0.0;
      v96 = 0.0;
      v97 = 0.0;
      v4 = *(_QWORD *)(v6 - 552);
      if ((v93 & 1) == 0)
      {
        v94 = *(float *)&v92;
        v95 = *((float *)&v92 + 1);
        v96 = *(float *)&v91;
        v97 = *((float *)&v91 + 1);
      }
      v98 = *(_UNKNOWN *****)(*(_QWORD *)(v6 - 368) + *(_QWORD *)(v6 - 376));
      if (*v98 == &off_10140F528)
        v99 = *(_QWORD *)(*(_QWORD *)(v6 - 368) + *(_QWORD *)(v6 - 376));
      else
        v99 = 0;
      swift_beginAccess(v99 + qword_101481450, v6 - 304, 32, 0);
      swift_retain(v98);
      v100 = *(_QWORD *)(v6 - 520);
      CRRegister.wrappedValue.getter(v71);
      swift_endAccess(v6 - 304);
      swift_release(v98);
      v101 = v100 + *(int *)(v83 + 28);
      v102 = *(_QWORD *)v101;
      v103 = *(_QWORD *)(v101 + 8);
      v104 = *(unsigned __int8 *)(v101 + 16);
      sub_1004B84A4(v100, type metadata accessor for CRLUSDZAssetDataStruct);
      if (v104 == 1)
      {
        v8 = *(_QWORD *)(v6 - 440);
        if ((v93 & 1) == 0)
          goto LABEL_71;
      }
      else
      {
        v8 = *(_QWORD *)(v6 - 440);
        if ((v93 & 1) != 0)
          goto LABEL_71;
        v111.size.height = *((float *)&v103 + 1);
        v111.size.width = *(float *)&v103;
        v111.origin.y = *((float *)&v102 + 1);
        v111.origin.x = *(float *)&v102;
        v110.origin.x = v94;
        v110.origin.y = v95;
        v110.size.width = v96;
        v110.size.height = v97;
        if (!CGRectEqualToRect(v110, v111))
        {
LABEL_71:
          sub_100660120(v6 - 200);
          sub_1004C4938(v6 - 200, v6 - 160, &qword_1013E1B30);
          if ((*(_BYTE *)(v6 - 128) & 1) != 0)
          {
            *(_OWORD *)(v6 - 288) = 0u;
            *(_OWORD *)(v6 - 304) = 0u;
          }
          else
          {
            type metadata accessor for CGRect(0);
            *(_QWORD *)(v6 - 280) = v105;
            v106 = swift_allocObject(&unk_101274738, 48, 7);
            *(_QWORD *)(v6 - 304) = v106;
            v107 = *(_OWORD *)(v6 - 144);
            *(_OWORD *)(v106 + 16) = *(_OWORD *)(v6 - 160);
            *(_OWORD *)(v106 + 32) = v107;
          }
          v10 = *(_QWORD *)(v6 - 504);
          sub_1004CB7BC(v6 - 304, v6 - 336, &qword_1013E0230);
          swift_beginAccess(*(_QWORD *)(v6 - 416), v6 - 360, 33, 0);
          sub_10083DAD8(v6 - 336, 0x33uLL);
          swift_endAccess(v6 - 360);
          sub_1004CB800(v6 - 304, &qword_1013E0230);
          swift_unknownObjectRelease(v4);
          goto LABEL_5;
        }
      }
      swift_unknownObjectRelease(v4);
      v10 = *(_QWORD *)(v6 - 504);
LABEL_5:
      v9 += 2;
      if (!--v8)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v6 - 608));
        return;
      }
    }
    sub_1004B84A4(v27, type metadata accessor for CRLAssetData);
    sub_1004B84A4(v10, type metadata accessor for CRLAssetData);
    v36 = *(_QWORD *)(v6 - 400);
LABEL_25:
    *(_QWORD *)(v6 - 280) = &type metadata for Bool;
    *(_BYTE *)(v6 - 304) = 1;
    sub_1004CB7BC(v6 - 304, v6 - 336, &qword_1013E0230);
    swift_beginAccess(*(_QWORD *)(v6 - 416), v6 - 360, 33, 0);
    sub_10083DAD8(v6 - 336, 0x12uLL);
    swift_endAccess(v6 - 360);
    sub_1004CB800(v6 - 304, &qword_1013E0230);
    goto LABEL_26;
  }
}

double *sub_100662958()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0;
  sub_100A2C40C((uint64_t)v3);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E3620);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v10 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v9 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v9 + 32) = UTType.identifier.getter(v9);
    *(_QWORD *)(v9 + 40) = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (double *)v9;
}

void sub_100662C70()
{
  sub_100757E04(&_mh_execute_header, (uint64_t)"aspectRatioLocked", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 269, "Should not try to set aspectRatioLocked of an item which returns false from canAspectRatioLockBeChangedByUser.", 110, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"aspectRatioLocked", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2u, 269, (uint64_t)"Should not try to set aspectRatioLocked of an item which returns false from canAspectRatioLockBeChangedByUser.", 110, 2u);
}

void sub_100662DB0()
{
  uint64_t v0;

}

id sub_100662DC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100662E04()
{
  return type metadata accessor for CRLUSDZItem(0);
}

uint64_t type metadata accessor for CRLUSDZItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E9B60;
  if (!qword_1013E9B60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUSDZItem);
  return result;
}

uint64_t sub_100662E48(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1000);
}

uint64_t sub_100662E90@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _UNKNOWN ****v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_UNKNOWN *****)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 == &off_10140F528)
    v7 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v7 = 0;
  swift_beginAccess(v7 + qword_101481450, v12, 32, 0);
  swift_retain(v6);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v8);
  swift_endAccess(v12);
  swift_release(v6);
  sub_1004B8460((uint64_t)v5, a1, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  v9 = type metadata accessor for CRLAssetData(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
}

id sub_100663020(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  id v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  double v40;
  float v41;
  double v42;
  float v43;
  double v44;
  float v45;
  double v46;
  float v47;
  double v48;
  float v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  objc_class *v88;
  id v89;
  double v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  objc_super v119;
  char v120;
  _OWORD v121[8];
  _QWORD v122[5];
  uint64_t v123;
  char v124;
  _BYTE v125[136];

  v111 = a7;
  v116 = a5;
  v117 = a4;
  v114 = a1;
  v102 = a6;
  sub_1004C4938(a6, (uint64_t)v122, &qword_1013E1B30);
  v9 = *(double *)&v122[1];
  v91 = *(double *)v122;
  v10 = *(double *)&v122[2];
  v11 = *(double *)&v122[3];
  v109 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v109);
  v106 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v107 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v14);
  v104 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v16);
  v103 = (uint64_t)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v98);
  v112 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v113 = (uint64_t)&v91 - v20;
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v94 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v101);
  v105 = (uint64_t)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v118 = (uint64_t)&v91 - v26;
  v27 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v27);
  v93 = (uint64_t)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v91 - v30;
  v92 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v92);
  v33 = (char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v115 = (uint64_t)&v91 - v36;
  if (a3)
    v37 = a3;
  else
    v37 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16))(v31, a2, v21, v35);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v38(v31, 0, 1, v21);
  v39 = v37;
  v99 = a3;
  objc_msgSend(v39, "position");
  v41 = v40;
  v43 = v42;
  objc_msgSend(v39, "size");
  v45 = v44;
  v47 = v46;
  objc_msgSend(v39, "angle");
  v49 = v48;
  v50 = objc_msgSend(v39, "widthValid");
  v51 = objc_msgSend(v39, "heightValid");
  v52 = objc_msgSend(v39, "horizontalFlip");
  v97 = a2;
  v53 = v52;
  v54 = objc_msgSend(v39, "verticalFlip");
  v96 = v22;
  v55 = v54;
  v100 = v39;

  v56 = v21;
  v57 = v93;
  sub_1004CB7BC((uint64_t)v31, v93, (uint64_t *)&unk_1013E1A50);
  v95 = v56;
  v38(v33, 1, 1, v56);
  v58 = v92;
  *(_QWORD *)&v33[*(int *)(v92 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1005E388C(v57, (uint64_t)v33);
  v59 = &v33[*(int *)(v58 + 20)];
  *(float *)v59 = v41;
  *((float *)v59 + 1) = v43;
  *((float *)v59 + 2) = v45;
  *((float *)v59 + 3) = v47;
  *((float *)v59 + 4) = v49;
  v59[20] = v50;
  v59[21] = v51;
  v59[22] = v53;
  v59[23] = v55;
  *((_QWORD *)v59 + 3) = _swiftEmptyDictionarySingleton;
  v60 = v115;
  sub_1004B84E0((uint64_t)v33, v115, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(v60, (uint64_t)v33, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v121);
  v61 = sub_1004C4938((uint64_t)v121, (uint64_t)v125, (uint64_t *)&unk_1013F02D0);
  v62 = (uint64_t)v94;
  UUID.init()(v61);
  sub_100D5EF54(v62, (uint64_t)v33, 0, 0, 0, 0xE000000000000000, (uint64_t)v125, v118);
  sub_1004C4938(v102, (uint64_t)&v123, &qword_1013E1B30);
  v63 = 0;
  v64 = 0;
  v65 = v124;
  if ((v124 & 1) == 0)
  {
    *(float *)&v66 = v91;
    *(float *)&v67 = v9;
    *(float *)&v68 = v10;
    *(float *)&v69 = v11;
    v63 = v66 | ((unint64_t)v67 << 32);
    v64 = v68 | ((unint64_t)v69 << 32);
  }
  v70 = v103;
  sub_1004B8460(v117, v103, type metadata accessor for CRLAssetData);
  v71 = v104;
  sub_1004CB7BC(v116, v104, (uint64_t *)&unk_1013E9BE0);
  v72 = (uint64_t)v112;
  *(_QWORD *)&v112[*(int *)(v98 + 20)] = _swiftEmptyDictionarySingleton;
  v73 = v106;
  sub_1004B8460(v70, v106, type metadata accessor for CRLAssetData);
  v74 = (int *)v109;
  sub_1004CB7BC(v71, v73 + *(int *)(v109 + 20), (uint64_t *)&unk_1013E9BE0);
  *(__n128 *)(v73 + v74[6]) = v111;
  v75 = v73 + v74[7];
  *(_QWORD *)v75 = v63;
  *(_QWORD *)(v75 + 8) = v64;
  *(_BYTE *)(v75 + 16) = v65;
  *(_QWORD *)(v73 + v74[8]) = _swiftEmptyDictionarySingleton;
  v76 = sub_1004B7878((unint64_t *)&unk_1013E9BF0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34760);
  v77 = v107;
  CRRegister.init(_:)(v73, v74, v76);
  sub_1004CB800(v71, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v70, type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v72, v77, v110);
  v78 = v113;
  sub_1004B84E0(v72, v113, type metadata accessor for CRLUSDZItemCRDTData);
  v120 = 1;
  v79 = v118;
  v80 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v120, v80, v81);
  v82 = v79;
  v83 = v105;
  sub_1004CB7BC(v82, v105, (uint64_t *)&unk_1013F02C0);
  sub_1004B8460(v78, v72, type metadata accessor for CRLUSDZItemCRDTData);
  v84 = type metadata accessor for CRLUSDZItemData(0);
  v85 = swift_allocObject(v84, *(unsigned int *)(v84 + 48), *(unsigned __int16 *)(v84 + 52));
  sub_1004B84E0(v72, v85 + qword_101481450, type metadata accessor for CRLUSDZItemCRDTData);
  sub_1004C4938(v83, v85 + *(_QWORD *)(*(_QWORD *)v85 + 632), (uint64_t *)&unk_1013F02C0);
  v86 = sub_1005E1000(0x2000000000000, 0x2000400000000, 0x1000000000000, 2);
  v87 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem(0));
  *(_QWORD *)&v87[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
  *(_QWORD *)&v87[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v114;
  *(_QWORD *)&v87[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v86;
  v88 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v119.receiver = v87;
  v119.super_class = v88;
  v89 = objc_msgSendSuper2(&v119, "init");

  sub_1004CB800(v116, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v117, type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v95);
  sub_1004B84A4(v78, type metadata accessor for CRLUSDZItemCRDTData);
  sub_1004CB800(v118, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v115, type metadata accessor for CRLBoardItemParentAffinity);
  return v89;
}

void sub_100663894()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v21;
  uint64_t (*v22)(__n128);
  __n128 v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  double v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  id v59;
  void *v60;
  double v61;
  double v62;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  double v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  _BYTE v73[40];
  CGRect v74;
  char v75;
  CGRect v76;

  v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {

    sub_100757E04(&_mh_execute_header, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 303, "Should not scale down size on media info with a parent!", 55, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2u, 303, (uint64_t)"Should not scale down size on media info with a parent!", 55, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v3 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v5 = *(uint64_t (**)(__n128))(*(_QWORD *)v4 + 288);
  v6 = swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
  v7 = (void *)v5(v6);
  objc_msgSend(v7, "boundsBeforeRotation", swift_release(v4).n128_f64[0]);
  v9 = v8;
  v11 = v10;

  v12 = sub_10005FDDC();
  v71 = v13;
  v72 = v12;
  v15 = v14;
  v70 = v16;
  sub_100660120((uint64_t)v73);
  sub_1004C4938((uint64_t)v73, (uint64_t)&v74, &qword_1013E1B30);
  if ((v75 & 1) != 0)
    goto LABEL_13;
  x = v74.origin.x;
  y = v74.origin.y;
  width = v74.size.width;
  height = v74.size.height;
  v76.origin.x = 0.0;
  v76.origin.y = 0.0;
  v76.size.width = 0.0;
  v76.size.height = 0.0;
  if (CGRectEqualToRect(v74, v76))
    goto LABEL_13;
  v21 = *(_QWORD *)(v1 + v3);
  v22 = *(uint64_t (**)(__n128))(*(_QWORD *)v21 + 288);
  v23 = swift_retain(v21);
  v24 = (void *)v22(v23);
  objc_msgSend(v24, "boundsBeforeRotation", swift_release(v21).n128_f64[0]);
  v25 = v9;
  v27 = v26;
  v68 = v11;
  v69 = v15;
  v29 = v28;
  v65 = v30;
  v66 = v28;
  v31 = v30;
  v67 = v25;
  v33 = v32;
  v64 = v32;

  sub_1000626D8(v27, v29, v31, v33, x, y, width, height);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_100062EB4(0, v38, v40, v72, v69, v71, v70);
  v43 = v42 / v39;
  v44 = sub_100061400(v35, v37, v39, v41);
  sub_100062F48(v27, v66, v65, v64, v44, v45, v43);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = sub_100061400(v72, v69, v71, v70);
  v56 = sub_1000603B8(v54, v55, v44);
  v57 = sub_1000603D0(v47, v49, v56);
  v59 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:", v57, v58, v51, v53);
  if (!v59)
  {
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 308, "Unable to compute info geometry.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2u, 308, (uint64_t)"Unable to compute info geometry.", 32, 2u);
  }
  else
  {
    v60 = v59;
    objc_msgSend(v59, "boundsBeforeRotation");
    if (v62 < v67 || v61 < v68)
      sub_100776700(v60);

  }
}

uint64_t sub_100663C7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 15);
}

uint64_t sub_100663C8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100663C9C(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  if (a2)
  {
    v4 = (void *)_convertErrorToNSError(_:)(a2);
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v22, 0, 0);
    v5 = (void *)static OS_os_log.crlError;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v6, &v21);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v8 = v5;
    v9 = objc_msgSend(v4, "localizedDescription");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;
    v13 = v12;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v11;
    *(_QWORD *)(inited + 40) = v13;
    v15 = static os_log_type_t.default.getter(v14);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v15, "Error performing encryption repair. Error: %@", 45, 2, inited);
    swift_setDeallocating(inited);
    v16 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v16);

    v17 = v4;
    a3(v4);

  }
  else
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v22, 0, 0);
    v18 = (id)static OS_os_log.crlDefault;
    v20 = static os_log_type_t.default.getter(v19);
    sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "Successfully repaired encryption.", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

    a3(0);
  }
}

uint64_t type metadata accessor for CRLAccountSecurityUpgradeHelper()
{
  return objc_opt_self(_TtC8Freeform31CRLAccountSecurityUpgradeHelper);
}

id sub_100663EC8()
{
  id result;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "aa_primaryAppleAccount");

    if (v2)
    {
      v3 = objc_msgSend(v2, "aa_altDSID");
      if (v3)
      {
        v4 = v3;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
        v6 = v5;

        return (id)v6;
      }

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"altDSID", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2, 37, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"altDSID", 7, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2u, 37, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_10066401C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  NSString v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[24];

  sub_100663EC8();
  if (v6)
  {
    v7 = objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionFlowContext);
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "initWithAltDSID:", v8);

    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setFeatureName:", v14, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v9, "setDeviceToDeviceEncryptionUpgradeType:", 0);
    objc_msgSend(v9, "setDeviceToDeviceEncryptionUpgradeUIStyle:", 0);
    objc_msgSend(v9, "setSecurityUpgradeContext:", AKSecurityUpgradeContextGeneric);
    objc_msgSend(v9, "setPresentingViewController:", a1, swift_bridgeObjectRelease().n128_f64[0]);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v24, 0, 0);
    v15 = (id)static OS_os_log.crlDefault;
    v17 = static os_log_type_t.default.getter(v16);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Attempting to repair encryption settings.", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

    v18 = objc_msgSend(objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper), "initWithContext:", v9);
    v19 = swift_allocObject(&unk_101274838, 32, 7);
    *(_QWORD *)(v19 + 16) = a2;
    *(_QWORD *)(v19 + 24) = a3;
    aBlock[4] = sub_1006643D0;
    v23 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1006EB740;
    aBlock[3] = &unk_101274850;
    v20 = _Block_copy(aBlock);
    v21 = v23;
    swift_retain(a3);
    objc_msgSend(v18, "performDeviceToDeviceEncryptionStateRepairWithCompletion:", v20, swift_release(v21).n128_f64[0]);
    _Block_release(v20);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentEncryptionHelper(on:completion:)", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2, 27, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentEncryptionHelper(on:completion:)", 39, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2u, 27, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_1006643AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1006643D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100663C9C(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_1006643D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1006643E8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_1006643F0(void *a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  unint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  float v22;
  double v23;
  double v24;
  float v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  float v35;
  double v36;
  double v37;
  float v38;
  float v39;
  char **v40;
  id v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  double v48;
  float v49;
  id v50;
  double v51;
  id v52;
  double v53;
  id v54;
  double v55;
  unint64_t v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  Class v60;
  uint64_t v61;
  uint64_t v62;
  Class v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  double v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  char **v89;
  id v90;
  id v91;
  id v92;
  double v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  unsigned int v99;
  double v100;
  id v101;
  double v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  unint64_t v123;
  Class v124;
  void *v125;
  void *v126;
  uint64_t v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  _BYTE v133[96];
  __int128 v134;
  __int128 v135;
  _QWORD v136[3];
  uint64_t v137;
  unint64_t v138;
  _BYTE v139[128];
  _BYTE v140[136];

  v3 = v2;
  v6 = objc_msgSend(v3, "manager");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v3, "containerView");
    isa = (Class)objc_msgSend(v8, "constraints");

    if (!isa)
    {
      v10 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v10);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v11);
    }
    v132 = (id)objc_opt_self(NSLayoutConstraint);
    objc_msgSend(v132, "deactivateConstraints:", isa);

    v12 = sub_1004B804C(&qword_1013E9D78);
    inited = swift_initStackObject(v12, v140);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E30;
    strcpy((char *)(inited + 32), "containerView");
    *(_WORD *)(inited + 46) = -4864;
    *(_QWORD *)(inited + 48) = objc_msgSend(v3, "containerView");
    *(_QWORD *)(inited + 56) = 0x77656956647568;
    *(_QWORD *)(inited + 64) = 0xE700000000000000;
    *(_QWORD *)(inited + 72) = objc_msgSend(v3, "hudView");
    *(_QWORD *)(inited + 80) = 0x6569566C6562616CLL;
    *(_QWORD *)(inited + 88) = 0xE900000000000077;
    *(_QWORD *)(inited + 96) = a1;
    strcpy((char *)(inited + 104), "accessoryView");
    *(_WORD *)(inited + 118) = -4864;
    *(_QWORD *)(inited + 120) = a2;
    v14 = a1;
    v129 = a2;
    v15 = sub_1008D5124(inited);
    objc_msgSend(v7, "maxTextWidth");
    v17 = v16;
    objc_msgSend(v14, "setNumberOfLines:", 0);
    objc_msgSend(v14, "sizeThatFits:", v17, 3.40282347e38);
    v19 = v18;
    objc_msgSend(v14, "setNumberOfLines:", 3);
    v20 = objc_msgSend(v14, "font");
    if (v20)
    {
      v21 = v20;
      v22 = v19;
      objc_msgSend(v20, "lineHeight");
      v24 = v23;

      v25 = v24;
      v26 = lroundf(v22 / v25);
      objc_msgSend(v7, "maxTextWidth");
      v28 = v27;
      if (v26 >= 2)
        v29 = 12.0;
      else
        v29 = 10.0;
      v131 = v7;
      if (v26 <= 2)
      {
        v127 = v26;
        v39 = 22.0;
        v40 = &selRef_getRulerSnapLineOriginAndTangent_andNormal_;
      }
      else
      {
        objc_msgSend(v7, "maxTextWidth");
        v28 = v29 + v30 + 22.0;
        objc_msgSend(v129, "setHidden:", 1);
        objc_msgSend(v14, "setNumberOfLines:", 0);
        objc_msgSend(v14, "sizeThatFits:", v28, 3.40282347e38);
        v32 = v31;
        objc_msgSend(v14, "setNumberOfLines:", 3);
        v33 = objc_msgSend(v14, "font");
        if (!v33)
        {
LABEL_32:
          __break(1u);
          return;
        }
        v34 = v33;
        v35 = v32;
        objc_msgSend(v33, "lineHeight");
        v37 = v36;

        v38 = v37;
        v39 = 0.0;
        v40 = &selRef_getRulerSnapLineOriginAndTangent_andNormal_;
        v127 = lroundf(v35 / v38);
        if (v127 < 3)
          v29 = 10.0;
        else
          objc_msgSend(v14, "setAdjustsFontSizeToFitWidth:", 1);
      }
      objc_msgSend(v14, "sizeThatFits:", v28, 1000.0);
      v44 = v43;
      v45 = sub_1004B804C(&qword_1013E9D80);
      v46 = swift_initStackObject(v45, v139);
      *(_OWORD *)(v46 + 16) = xmmword_100EF5E30;
      *(_QWORD *)(v46 + 32) = 0x676E6964646170;
      *(_QWORD *)(v46 + 40) = 0xE700000000000000;
      v47 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v48) = 20.0;
      *(_QWORD *)(v46 + 48) = objc_msgSend(v47, "initWithFloat:", v48);
      *(_QWORD *)(v46 + 56) = 0x676E6963617073;
      *(_QWORD *)(v46 + 64) = 0xE700000000000000;
      v49 = v29;
      v50 = objc_allocWithZone((Class)NSNumber);
      *(float *)&v51 = v49;
      *(_QWORD *)(v46 + 72) = objc_msgSend(v50, "initWithFloat:", v51);
      *(_QWORD *)(v46 + 80) = 0x7464695774786574;
      *(_QWORD *)(v46 + 88) = 0xE900000000000068;
      v52 = objc_allocWithZone((Class)NSNumber);
      *(float *)&v44 = v44;
      LODWORD(v53) = LODWORD(v44);
      *(_QWORD *)(v46 + 96) = objc_msgSend(v52, "initWithFloat:", v53);
      *(_QWORD *)(v46 + 104) = 0xD000000000000012;
      *(_QWORD *)(v46 + 112) = 0x8000000100FBEB50;
      v54 = objc_allocWithZone((Class)NSNumber);
      *(float *)&v55 = v39;
      *(_QWORD *)(v46 + 120) = objc_msgSend(v54, "initWithFloat:", v55);
      v56 = sub_1008D5130(v46);
      v138 = (unint64_t)_swiftEmptyArrayStorage;
      v57 = String._bridgeToObjectiveC()();
      sub_100C9B3B0(v56);
      v59 = v58;
      swift_bridgeObjectRelease(v56);
      v60 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v59);
      sub_100C9B3C4(v15);
      v62 = v61;
      swift_bridgeObjectRelease(v15);
      v63 = Dictionary._bridgeToObjectiveC()().super.isa;
      v64 = objc_msgSend(v132, "constraintsWithVisualFormat:options:metrics:views:", v57, 0, v60, v63, swift_bridgeObjectRelease(v62).n128_f64[0]);

      v65 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

      sub_10061EAE0(v66);
      v67 = objc_msgSend(v3, v40[241]);
      v68 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      v137 = v68;
      v136[0] = v67;
      v134 = 0u;
      v135 = 0u;
      objc_msgSend(v7, "maxHUDWidth");
      v70 = sub_100881454(v136, 7, -1, &v134, 7, 1.0, v69);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
      v72 = *(_QWORD *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v71 = *(_QWORD *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v72 >= v71 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
      v126 = v70;
      v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
      specialized Array._endMutation()(v73);
      v74 = objc_msgSend(v3, v40[241]);
      v75 = objc_msgSend(v74, "trailingAnchor");

      v76 = objc_msgSend(v3, "containerView");
      v77 = objc_msgSend(v76, "trailingAnchor");

      v78 = objc_msgSend(v75, "constraintGreaterThanOrEqualToAnchor:", v77);
      v79 = v78;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
      v81 = *(_QWORD *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v80 = *(_QWORD *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v81 >= v80 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
      v125 = v79;
      v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
      specialized Array._endMutation()(v82);
      v83 = type metadata accessor for CRLLabelView_mi();
      v137 = v83;
      v136[0] = v14;
      v84 = v14;
      v85 = objc_msgSend(v3, v40[241]);
      *((_QWORD *)&v135 + 1) = v68;
      *(_QWORD *)&v134 = v85;
      v128 = sub_100881454(v136, 10, 0, &v134, 10, 1.0, 0.0);
      v137 = v68;
      v136[0] = v129;
      v86 = v129;
      v87 = objc_msgSend(v3, v40[241]);
      *((_QWORD *)&v135 + 1) = v68;
      *(_QWORD *)&v134 = v87;
      v88 = sub_100881454(v136, 10, 0, &v134, 10, 1.0, 0.0);
      v137 = v68;
      v136[0] = v86;
      v134 = 0u;
      v135 = 0u;
      v89 = v40;
      v90 = v86;
      v91 = sub_100881454(v136, 8, 0, &v134, 8, 1.0, 22.0);
      v92 = objc_msgSend(v3, v89[241]);
      v137 = v68;
      *((_QWORD *)&v135 + 1) = v68;
      v136[0] = v92;
      *(_QWORD *)&v134 = v90;
      if (v127 <= 2)
        v93 = 18.0;
      else
        v93 = 38.0;
      v94 = v90;
      v95 = sub_100881454(v136, 8, 0, &v134, 8, 1.0, v93);
      v137 = v83;
      v136[0] = v84;
      v96 = v84;
      v97 = objc_msgSend(v3, v89[241]);
      *((_QWORD *)&v135 + 1) = v68;
      *(_QWORD *)&v134 = v97;
      v130 = sub_100881454(v136, 8, -1, &v134, 8, 1.0, 0.0);
      v98 = objc_msgSend(v3, "heightConstraint");

      if (!v98)
      {
        v99 = objc_msgSend(v3, "showing");
        v100 = 56.0;
        if (!v99)
          v100 = 0.0;
        objc_msgSend(v3, "setHeight:", v100);
        v101 = objc_msgSend(v3, "containerView");
        v137 = v68;
        v136[0] = v101;
        v134 = 0u;
        v135 = 0u;
        objc_msgSend(v3, "height");
        v103 = sub_100881454(v136, 8, 0, &v134, 8, 1.0, v102);
        objc_msgSend(v3, "setHeightConstraint:", v103);

      }
      v104 = objc_msgSend(v3, "containerView");
      v137 = v68;
      v136[0] = v104;
      v105 = objc_msgSend(v3, v89[241]);
      *((_QWORD *)&v135 + 1) = v68;
      *(_QWORD *)&v134 = v105;
      v106 = sub_100881454(v136, 7, 0, &v134, 7, 1.0, 0.0);
      v107 = objc_msgSend(v3, v89[241]);
      v108 = objc_msgSend(v107, "topAnchor");

      v109 = objc_msgSend(v3, "containerView");
      v110 = objc_msgSend(v109, "topAnchor");

      v111 = objc_msgSend(v108, "constraintEqualToAnchor:", v110);
      v112 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v113 = swift_initStackObject(v112, v133);
      *(_OWORD *)(v113 + 16) = xmmword_100EF5FF0;
      *(_QWORD *)(v113 + 32) = v128;
      *(_QWORD *)(v113 + 40) = v88;
      *(_QWORD *)(v113 + 48) = v91;
      *(_QWORD *)(v113 + 56) = v95;
      v114 = v128;
      v115 = v88;
      v116 = v91;
      v117 = v95;
      v118 = objc_msgSend(v3, "heightConstraint");
      if (v118)
      {
        *(_QWORD *)(v113 + 64) = v118;
        *(_QWORD *)(v113 + 72) = v130;
        *(_QWORD *)(v113 + 80) = v106;
        *(_QWORD *)(v113 + 88) = v111;
        v136[0] = v113;
        specialized Array._endMutation()(v118);
        v119 = v136[0];
        v120 = v130;
        v121 = v106;
        v122 = v111;
        sub_10061EAE0(v119);
        v123 = v138;
        v124 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v132, "activateConstraints:", v124, swift_bridgeObjectRelease(v123).n128_f64[0]);

        swift_unknownObjectRelease(v131);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v136, 0, 0);
  v41 = (id)static OS_os_log.crlStatusHUD;
  v42 = static os_log_type_t.error.getter(v41);
  sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v42, "Trying to layout views without a manager", 40, 2, (uint64_t)_swiftEmptyArrayStorage);

}

uint64_t sub_100665440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v13[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing, v13, 0, 0);
  sub_1004E1F60(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1004C113C((uint64_t)v4);
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  fabs(Date.timeIntervalSinceNow.getter(v11));
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100665624()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)aBlock - v11;
  if (v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_showing] == 1
    && v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_shouldAutoHide] == 1)
  {
    v13 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer], "invalidate", v10);
    v14 = *(void **)&v0[v13];
    *(_QWORD *)&v0[v13] = 0;

    v15 = sub_100665E64();
    v16 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0x2C0))();
    sub_1006643F0(v15, v16);

    Date.init()(v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    v18 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing], aBlock, 33, 0);
    sub_10056AFBC((uint64_t)v12, v18);
    swift_endAccess(aBlock);
    sub_1004E1F60(v18, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    {
      sub_1004C113C((uint64_t)v8);
      v19 = 0.0;
    }
    else
    {
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v21 = fabs(Date.timeIntervalSinceNow.getter(v20));
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v22 = *(double *)&v1[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_maximumShowDuration];
      v19 = 0.0;
      if (v21 < v22)
        v19 = v22 - v21;
    }
    v23 = swift_allocObject(&unk_101274888, 24, 7);
    *(_QWORD *)(v23 + 16) = v1;
    aBlock[4] = sub_100666208;
    v34 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_1012748A0;
    v24 = _Block_copy(aBlock);
    v25 = (void *)objc_opt_self(NSTimer);
    v26 = v1;
    v27 = objc_msgSend(v25, "timerWithTimeInterval:repeats:block:", 0, v24, v19);
    _Block_release(v24);
    swift_release(v34);
    v28 = *(void **)&v1[v13];
    *(_QWORD *)&v1[v13] = v27;

    v29 = *(void **)&v1[v13];
    if (v29)
    {
      v30 = (void *)objc_opt_self(NSRunLoop);
      v31 = v29;
      v32 = objc_msgSend(v30, "mainRunLoop");
      objc_msgSend(v32, "addTimer:forMode:", v31, NSRunLoopCommonModes);

    }
  }
}

void sub_100665974(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  sub_100880FBC(0);
  v3 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer), "invalidate");
  v4 = *(void **)(a2 + v3);
  *(_QWORD *)(a2 + v3) = 0;

}

void sub_100665B74()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100FBEC10, "Freeform/CRLCollaboratorBaseStatusHUDController_mi.swift", 56, 2, 96, 0);
  __break(1u);
}

void sub_100665BCC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100FBEC10, "Freeform/CRLCollaboratorBaseStatusHUDController_mi.swift", 56, 2, 100, 0);
  __break(1u);
}

void sub_100665C88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t (*v5)(void);
  id v6;
  void *v7;
  id v8;
  id v9;

  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_setupDone) & 1) == 0)
  {
    *((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_setupDone) = 1;
    sub_100C1960C(a1);
    v2 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView;
    v3 = *(id *)((char *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView);
    v4 = sub_100665E64();
    objc_msgSend(v3, "addSubview:", v4);

    v5 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2C0);
    v6 = *(id *)((char *)v1 + v2);
    v7 = (void *)v5();
    objc_msgSend(v6, "addSubview:", v7);

    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_containerView), "addSubview:", *(_QWORD *)((char *)v1 + v2));
    v8 = sub_100665E64();
    v9 = (id)v5();
    sub_1006643F0(v8, v9);

  }
}

id sub_100665E64()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label;
  v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label);
  if (v2)
  {
    v3 = *(id *)((char *)v0
               + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label);
  }
  else
  {
    (*(void (**)(void))((swift_isaMask & *v0) + 0x2B8))();
    v5 = v4;
    sub_100C89724();
    v7 = v6;
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_bridgeObjectRelease(v5).n128_f64[0]);
    v8 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_100665FC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006660C8()
{
  return type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi(0);
}

uint64_t type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E9D68;
  if (!qword_1013E9D68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCollaboratorBaseStatusHUDController_mi);
  return result;
}

void sub_10066610C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[22];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\b";
  v4[3] = "\b";
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100F01768;
    v4[9] = &unk_100F01780;
    v4[10] = &unk_100F01780;
    v4[11] = &unk_100F01780;
    v4[12] = &unk_100F01780;
    v4[13] = &unk_100F01798;
    v4[14] = &unk_100F01780;
    v4[15] = &unk_100F01768;
    v4[16] = &unk_100F01780;
    v4[17] = &unk_100F01780;
    v4[18] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[19] = &unk_100F01768;
    v4[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[21] = &unk_100F01768;
    swift_updateClassMetadata2(a1, 256, 22, v4, a1 + 80);
  }
}

uint64_t sub_1006661E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100666208(uint64_t a1)
{
  uint64_t v1;

  sub_100665974(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100666210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100666220(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100666598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v13[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing, v13, 0, 0);
  sub_1004E1F60(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1004CB800((uint64_t)v4, &qword_1013E04F0);
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  fabs(Date.timeIntervalSinceNow.getter(v11));
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100666784()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  BOOL v21;
  double v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  id v28;
  void *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)aBlock - v11;
  if (v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_showing] == 1
    && v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_shouldAutoHide] == 1)
  {
    v13 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer], "invalidate", v10);
    v14 = *(void **)&v1[v13];
    *(_QWORD *)&v1[v13] = 0;

    Date.init()(v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    v16 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing], aBlock, 33, 0);
    sub_10056AFBC((uint64_t)v12, v16);
    swift_endAccess(aBlock);
    sub_1004E1F60(v16, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    {
      sub_1004CB800((uint64_t)v8, &qword_1013E04F0);
      v17 = 0.0;
    }
    else
    {
      v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v19 = fabs(Date.timeIntervalSinceNow.getter(v18));
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v20 = *(double *)&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_maximumShowDuration];
      v21 = v19 < v20;
      v22 = v20 - v19;
      if (v21)
        v17 = v22;
      else
        v17 = 0.0;
    }
    v23 = (void *)objc_opt_self(NSTimer);
    v24 = swift_allocObject(&unk_101274968, 24, 7);
    *(_QWORD *)(v24 + 16) = v1;
    aBlock[4] = sub_100668D80;
    v31 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_101274980;
    v25 = _Block_copy(aBlock);
    v26 = v31;
    v27 = v1;
    swift_release(v26);
    v28 = objc_msgSend(v23, "scheduledTimerWithTimeInterval:repeats:block:", 0, v25, v17);
    _Block_release(v25);
    v29 = *(void **)&v1[v13];
    *(_QWORD *)&v1[v13] = v28;

  }
}

void sub_100666A34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  sub_100880FD8(0);
  v3 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer), "invalidate");
  v4 = *(void **)(a2 + v3);
  *(_QWORD *)(a2 + v3) = 0;

}

uint64_t sub_100666C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  int v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  const char *v13;
  unint64_t v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  Class isa;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  NSString v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v1 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersonNameComponents(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo + 8) & 1) == 0)
  {
    v8;
    sub_10063ABC4((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v3, &qword_1013F4270);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v21 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v23 = objc_msgSend(v21, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      if ((v26 & 0x2000000000000000) != 0)
        v27 = HIBYTE(v26) & 0xF;
      else
        v27 = v24 & 0xFFFFFFFFFFFFLL;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v27)
        goto LABEL_14;
      swift_bridgeObjectRelease(v26);
    }
    v24 = sub_10063B4E0();
    v26 = v28;
LABEL_14:
    v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v30 = String._bridgeToObjectiveC()();
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, v31, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v37 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v37 + 56) = &type metadata for String;
    *(_QWORD *)(v37 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v37 + 32) = v24;
    *(_QWORD *)(v37 + 40) = v26;
    v38 = String.init(format:_:)(v33, v35, v37);
    swift_bridgeObjectRelease(v35);
    sub_100668588(v8, 0);
    return v38;
  }
  v9 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = 0xD00000000000002BLL;
  if (v9 == 1)
  {
    v12 = 0xD0000000000000BFLL;
    v39 = 0x8000000100FBEF40;
    v13 = "%d people started following along with you.";
  }
  else
  {
    v12 = 0xD0000000000000BDLL;
    v39 = 0x8000000100FBEE50;
    v13 = "%d people stopped following along with you.";
  }
  v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v11, (Swift::String_optional)0, (NSBundle)v10, v15, *(Swift::String *)&v12);

  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v18 + 56) = &type metadata for Int;
  *(_QWORD *)(v18 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 32) = v8;
  v19 = static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v18);
  swift_bridgeObjectRelease(v16._object);
  swift_bridgeObjectRelease(v18);
  return v19;
}

id sub_1006670B0()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  NSString *v5;
  id v6;
  NSString *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  Class isa;
  id v15;
  uint64_t v17;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 13.0, UIFontWeightRegular);
  v2 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v2, &v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v4 = sub_1004B8930(0, (unint64_t *)&qword_101401710, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v0;
  v5 = NSFontAttributeName;
  v6 = v1;
  v7 = NSForegroundColorAttributeName;
  v8 = v0;
  v9 = sub_1008D4FE0(inited);
  sub_100666C98();
  v11 = v10;
  v12 = objc_allocWithZone((Class)NSAttributedString);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v12, "initWithString:attributes:", v13, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return v15;
}

void sub_100667280()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  NSString v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *Strong;
  void *v64;
  double v65;
  double v66;
  double v67;
  double v68;
  id v69;
  void *v70;
  char **v71;
  float v72;
  double v73;
  double v74;
  float v75;
  uint64_t v76;
  double v77;
  double v78;
  uint64_t v79;
  id v80;
  id v81;
  char **v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  double v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  _OWORD v107[2];
  _QWORD v108[5];

  v1 = v0;
  v106 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView), "subviews");
  v103 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v103);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    else
      v6 = *(id *)(v3 + 8 * i + 32);
    v7 = v6;
    objc_msgSend(v6, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v3, 2);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo + 8) & 1) == 0)
  {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo);
    v20 = objc_allocWithZone((Class)CNAvatarViewController);
    v21 = v19;
    v22 = objc_msgSend(v20, "init");
    v23 = *(void **)&v21[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact];
    if (v23)
    {
      v24 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v25 + 32) = v23;
      v108[0] = v25;
      specialized Array._endMutation()(v25);
      sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
      v26 = v23;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "setContacts:", isa, swift_bridgeObjectRelease(v108[0]).n128_f64[0]);

    }
    v28 = objc_msgSend(v22, "view");
    objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)(v1 + v106), "addSubview:", v28);

    sub_100668588(v19, 0);
    goto LABEL_25;
  }
  v9 = String._bridgeToObjectiveC()();
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "colorNamed:", v9);

  if (v11)
  {
    v12 = objc_msgSend(v10, "systemGrayColor");
    v13 = v12;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow))
      v14 = v11;
    else
      v14 = v12;
    v15 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v14);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v16);

    if (v17)
    {
      v18 = objc_msgSend(v17, "imageWithConfiguration:", v15);

    }
    else
    {
      v18 = 0;
    }
    v28 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v18);
    objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v28, "setContentMode:", 1);
    v29 = *(id *)(v1 + v106);
    objc_msgSend(v29, "addSubview:", v28);

LABEL_25:
    v30 = v28;
    v31 = objc_msgSend(v30, "leadingAnchor");
    v32 = objc_msgSend(*(id *)(v1 + v106), "leadingAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, 8.0);

    objc_msgSend(v33, "setActive:", 1);
    v34 = objc_msgSend(v30, "widthAnchor");
    v35 = objc_msgSend(v34, "constraintEqualToConstant:", 26.0);

    objc_msgSend(v35, "setActive:", 1);
    v36 = objc_msgSend(v30, "heightAnchor");
    v37 = objc_msgSend(v36, "constraintEqualToConstant:", 26.0);

    objc_msgSend(v37, "setActive:", 1);
    v38 = objc_msgSend(v30, "centerYAnchor");
    v39 = objc_msgSend(*(id *)(v1 + v106), "centerYAnchor");
    v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

    objc_msgSend(v40, "setActive:", 1);
    v41 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v41, "setAlignment:", 1);
    objc_msgSend(v41, "setAxis:", 1);
    objc_msgSend(v41, "setDistribution:", 4);
    objc_msgSend(v41, "setSpacing:", 3.0);
    objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v104 = v41;
    objc_msgSend(*(id *)(v1 + v106), "addSubview:", v41);
    v42 = sub_10066806C();
    v43 = (void *)objc_opt_self(UIColor);
    v44 = v42;
    v45 = objc_msgSend(v43, "labelColor");
    objc_msgSend(v44, "setTextColor:", v45);

    objc_msgSend(v44, "setNumberOfLines:", 2);
    v46 = v44;
    v47 = sub_1006670B0();
    if (v47)
    {
      v48 = v47;
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientStartEndFollowHUDController.swift", 114, 2, 254, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientStartEndFollowHUDController.swift", 114, 2u, 254, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      v49 = objc_allocWithZone((Class)NSAttributedString);
      v50 = String._bridgeToObjectiveC()();
      v48 = objc_msgSend(v49, "initWithString:", v50);

    }
    objc_msgSend(v46, "setAttributedText:", v48);

    v105 = v30;
    v51 = objc_msgSend(v104, "leadingAnchor");
    v52 = objc_msgSend(v105, "trailingAnchor");
    v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, 8.0);

    objc_msgSend(v53, "setActive:", 1);
    v54 = objc_msgSend(v104, "trailingAnchor");
    v55 = objc_msgSend(*(id *)(v1 + v106), "trailingAnchor");
    v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, -20.0);

    objc_msgSend(v56, "setActive:", 1);
    v57 = objc_msgSend(v104, "topAnchor");
    v58 = objc_msgSend(*(id *)(v1 + v106), "topAnchor");
    v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

    objc_msgSend(v59, "setActive:", 1);
    v60 = objc_msgSend(v104, "bottomAnchor");
    v61 = objc_msgSend(*(id *)(v1 + v106), "bottomAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    objc_msgSend(v62, "setActive:", 1);
    objc_msgSend(v104, "addArrangedSubview:", v46);
    objc_msgSend(v46, "setTextAlignment:", 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_manager);
    if (!Strong)
    {
      v71 = &selRef_isLineSegment;
      v78 = 50.0;
      v77 = 66.0;
LABEL_34:
      v79 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height;
      *(double *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height) = v77;
      v80 = objc_msgSend(*(id *)(v1 + v106), "heightAnchor");
      v81 = objc_msgSend(v80, "constraintEqualToConstant:", v78);

      objc_msgSend(v81, "setActive:", 1);
      v82 = v71;
      v83 = objc_msgSend(*(id *)(v1 + v106), v71[285]);
      v84 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView;
      v85 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView), v82[285]);
      v86 = objc_msgSend(v83, "constraintEqualToAnchor:", v85);

      objc_msgSend(v86, "setActive:", 1);
      v87 = objc_msgSend(*(id *)(v1 + v106), "topAnchor");
      v88 = objc_msgSend(*(id *)(v1 + v84), "topAnchor");
      v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

      objc_msgSend(v89, "setActive:", 1);
      v90 = objc_msgSend(*(id *)(v1 + v106), "trailingAnchor");
      v91 = objc_msgSend(*(id *)(v1 + v84), "trailingAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      objc_msgSend(v92, "setActive:", 1);
      v93 = objc_msgSend(*(id *)(v1 + v84), "heightAnchor");
      v94 = objc_msgSend(v93, "constraintEqualToConstant:", *(double *)(v1 + v79));

      objc_msgSend(v94, "setActive:", 1);
      sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      v95 = *(void **)(v1 + v84);
      v108[3] = v103;
      v108[0] = v95;
      memset(v107, 0, sizeof(v107));
      v96 = *(double *)(v1 + v79);
      v97 = v95;
      v98 = sub_100881454(v108, 8, 0, v107, 8, 1.0, v96);
      v99 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint) = v98;

      v100 = objc_msgSend(*(id *)(v1 + v106), "layer");
      objc_msgSend(v100, "setMasksToBounds:", 0);

      v101 = objc_msgSend(*(id *)(v1 + v106), "layer");
      objc_msgSend(v101, "setCornerCurve:", kCACornerCurveContinuous);

      v102 = objc_msgSend(*(id *)(v1 + v106), "layer");
      objc_msgSend(v102, "setCornerRadius:", 20.0);

      return;
    }
    v64 = Strong;
    objc_msgSend(Strong, "maxTextWidth");
    v66 = v65;
    swift_unknownObjectRelease(v64);
    objc_msgSend(v46, "setNumberOfLines:", 0);
    objc_msgSend(v46, "sizeThatFits:", v66, 3.40282347e38);
    v68 = v67;
    objc_msgSend(v46, "setNumberOfLines:", 3);
    v69 = objc_msgSend(v46, "font");
    if (v69)
    {
      v70 = v69;
      v71 = &selRef_isLineSegment;
      v72 = v68;
      objc_msgSend(v69, "lineHeight");
      v74 = v73;

      v75 = v74;
      v76 = lroundf(v72 / v75);
      v77 = 66.0;
      if (v76 == 1)
      {
        v77 = 56.0;
        v78 = 40.0;
      }
      else
      {
        v78 = 50.0;
      }
      goto LABEL_34;
    }
    goto LABEL_36;
  }
LABEL_37:
  __break(1u);
}

id sub_10066806C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label);
  }
  else
  {
    sub_100666C98();
    v5 = v4;
    sub_100C89724();
    v7 = v6;
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_bridgeObjectRelease(v5).n128_f64[0]);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_10066822C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10066834C()
{
  return type metadata accessor for CRLTransientStartEndFollowHUDController(0);
}

uint64_t type metadata accessor for CRLTransientStartEndFollowHUDController(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E9E08;
  if (!qword_1013E9E08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLTransientStartEndFollowHUDController);
  return result;
}

void sub_100668390(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[26];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_100F01810;
  v4[4] = &unk_100F01810;
  v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = &unk_100F01828;
    v4[10] = &unk_100F01840;
    v4[11] = &unk_100F01840;
    v4[12] = &unk_100F01840;
    v4[13] = &unk_100F01840;
    v4[14] = &unk_100F01858;
    v4[15] = &unk_100F01840;
    v4[16] = &unk_100F01828;
    v4[17] = &unk_100F01840;
    v4[18] = &unk_100F01840;
    v4[19] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[20] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[21] = &unk_100F01828;
    v4[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[23] = &unk_100F01870;
    v4[24] = &unk_100F01840;
    v4[25] = &unk_100F01828;
    swift_updateClassMetadata2(a1, 256, 26, v4, a1 + 80);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FollowingParticipantInfo(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10066856C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_10066856C(id result, char a2)
{
  if ((a2 & 1) == 0)
    return result;
  return result;
}

void destroy for FollowingParticipantInfo(uint64_t a1)
{
  sub_100668588(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_100668588(id a1, char a2)
{
  if ((a2 & 1) == 0)

}

uint64_t assignWithCopy for FollowingParticipantInfo(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10066856C(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_100668588(v5, v6);
  return a1;
}

uint64_t assignWithTake for FollowingParticipantInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_100668588(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingParticipantInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowingParticipantInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1006686AC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1006686B4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingParticipantInfo()
{
  return &type metadata for FollowingParticipantInfo;
}

char *sub_1006686D0(uint64_t a1, void *a2, uint64_t a3, char a4, _QWORD *a5, double a6)
{
  _BYTE *v12;
  id v13;
  char *v14;
  uint64_t ObjectType;
  double *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v12 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0));
  v13 = a2;
  v14 = (char *)sub_100668ABC(a1, a2, 0, a3, a4, v12);
  ObjectType = swift_getObjectType(a5);
  swift_deallocPartialClassInstance(a5, ObjectType, *(unsigned int *)((swift_isaMask & *a5) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a5) + 0x34));
  v16 = (double *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *v16 = a6;
  *((_BYTE *)v16 + 8) = 0;
  if (v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    v17 = v14;
  }
  else
  {
    v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    v18 = v14;
    sub_100C1960C();
    v19 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    v20 = *(id *)&v18[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    v21 = sub_10066806C();
    objc_msgSend(v20, "addSubview:", v21);

    objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView], "addSubview:", *(_QWORD *)&v18[v19]);
    sub_100667280();
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v14, "touchedHUDWithSender:");
  objc_msgSend(v22, "setNumberOfTapsRequired:", 1);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView], "addGestureRecognizer:", v22);

  v23 = sub_100666C98();
  v25 = v24;

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  v26 = (uint64_t *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  v27 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement + 8];
  *v26 = v23;
  v26[1] = v25;
  swift_bridgeObjectRelease(v27);
  return v14;
}

char *sub_1006688D0(uint64_t a1, void *a2, uint64_t a3, char a4, _QWORD *a5, double a6)
{
  _BYTE *v12;
  char *v13;
  uint64_t ObjectType;
  double *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v12 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0));
  v13 = (char *)sub_100668ABC(a1, a2, 1, a3, a4, v12);
  ObjectType = swift_getObjectType(a5);
  swift_deallocPartialClassInstance(a5, ObjectType, *(unsigned int *)((swift_isaMask & *a5) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a5) + 0x34));
  v15 = (double *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *v15 = a6;
  *((_BYTE *)v15 + 8) = 0;
  if (v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    v16 = v13;
  }
  else
  {
    v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    v17 = v13;
    sub_100C1960C();
    v18 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    v19 = *(id *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    v20 = sub_10066806C();
    objc_msgSend(v19, "addSubview:", v20);

    objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView], "addSubview:", *(_QWORD *)&v17[v18]);
    sub_100667280();
  }
  v21 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v13, "touchedHUDWithSender:");
  objc_msgSend(v21, "setNumberOfTapsRequired:", 1);
  objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView], "addGestureRecognizer:", v21);

  v22 = sub_100666C98();
  v24 = v23;

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  v25 = (uint64_t *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  v26 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement + 8];
  *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRelease(v26);
  return v13;
}

id sub_100668ABC(uint64_t a1, void *a2, char a3, uint64_t a4, char a5, _BYTE *a6)
{
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  objc_super v25;

  v12 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_manager];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_manager]);
  v13 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_delegate];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_delegate]);
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_type] = 2;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_maximumShowDuration] = 0x4014000000000000;
  v14 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_shouldAutoHide] = 1;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_showing] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_animating] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hiding] = 0;
  v16 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *v16 = 0;
  v16[1] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipable] = 1;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipeGestureRecognizer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideOnTouch] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height] = 0x4045000000000000;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_width] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  v17 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign(v12, a1);
  v19 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo];
  *(_QWORD *)v19 = a2;
  a3 &= 1u;
  v19[8] = a3;
  swift_unknownObjectWeakAssign(v13, a4);
  a6[v18] = a5;
  v20 = objc_allocWithZone((Class)UIView);
  v21 = a6;
  sub_10066856C(a2, a3);
  v22 = objc_msgSend(v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] = v22;
  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] = v23;

  v25.receiver = v21;
  v25.super_class = (Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0);
  return objc_msgSendSuper2(&v25, "init");
}

uint64_t sub_100668D5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100668D80(uint64_t a1)
{
  uint64_t v1;

  sub_100666A34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100668D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100668D98(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100668DA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1004F370C(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_1004D28EC((uint64_t)v6);
    goto LABEL_5;
  }
  v1 = type metadata accessor for CRLSceneInfo(0);
  if ((swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
  {
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  v2 = v5;
  v3 = static UUID.== infix(_:_:)(&v5[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID]);

  return v3 & 1;
}

uint64_t sub_100669108()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F01990);
  v4 = v0;
  v2 = sub_1004B7878(&qword_1013E9E70, type metadata accessor for CRLSceneInfo, (uint64_t)&unk_100F01948);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo));
}

uint64_t sub_100669264@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F01990);
  v8 = v3;
  v5 = sub_1004B7878(&qword_1013E9E70, type metadata accessor for CRLSceneInfo, (uint64_t)&unk_100F01948);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo);
  *a2 = v6;
  return swift_unknownObjectRetain(v6);
}

uint64_t sub_1006692FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F01990);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_1004B7878(&qword_1013E9E70, type metadata accessor for CRLSceneInfo, (uint64_t)&unk_100F01948);
  swift_unknownObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_100669920, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  return swift_unknownObjectRelease(v2);
}

uint64_t sub_10066946C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F01968);
  v4 = v0;
  v2 = sub_1004B7878(&qword_1013E9E70, type metadata accessor for CRLSceneInfo, (uint64_t)&unk_100F01948);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass);
}

void sub_1006695E4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F01968);
  v6 = v3;
  v5 = sub_1004B7878(&qword_1013E9E70, type metadata accessor for CRLSceneInfo, (uint64_t)&unk_100F01948);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass);
}

double sub_100669678(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F01968);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_1004B7878(&qword_1013E9E70, type metadata accessor for CRLSceneInfo, (uint64_t)&unk_100F01948);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_100669904, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

id sub_100669748()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSceneInfo(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100669808()
{
  return type metadata accessor for CRLSceneInfo(0);
}

uint64_t type metadata accessor for CRLSceneInfo(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E9E60;
  if (!qword_1013E9E60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSceneInfo);
  return result;
}

uint64_t sub_10066984C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100F018E8;
    v5[2] = &unk_100F01900;
    v5[3] = &unk_100F01918;
    v5[4] = &unk_100F01930;
    result = type metadata accessor for ObservationRegistrar(319);
    if (v4 <= 0x3F)
    {
      v5[5] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 6, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_100669904()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_100669920()
{
  return sub_100669934();
}

uint64_t sub_100669934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo) = v1;
  swift_unknownObjectRetain(v1);
  return swift_unknownObjectRelease(v3);
}

unint64_t sub_100669974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FC960;
  if (!qword_1013FC960)
  {
    v1 = objc_opt_self(CRLCanvasLayout);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013FC960);
  }
  return result;
}

void sub_1006699B0()
{
  sub_100669904();
}

void sub_1006699C4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t inserted;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t inited;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  double v53;
  id v54;
  _QWORD *v55;
  id v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t KeyPath;
  id v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;
  void *v74;
  void *v75;
  char *v76;
  id v77;
  void *v78;
  void *v79;
  char *v80;
  id v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  objc_super v116;
  uint64_t v117;
  void *v118;
  __int128 v119;
  uint64_t v120;
  void *v121;
  __int128 v122;
  uint64_t v123;
  void *v124;
  __int128 v125;
  uint64_t v126;
  void *v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;

  v2 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v2);
  v4 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  __chkstk_darwin(inserted);
  v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100619D58();
  v11 = swift_unknownObjectRetain(a1);
  UUID.init()(v11);
  v12 = type metadata accessor for CRLTransactionContext(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v138 = sub_1006AD854((uint64_t)a1, 0, 1, (uint64_t)v10, 1, v13);
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v14, &v117, 0, 0);
  v15 = type metadata accessor for CRLBoardCRDTData(0);
  sub_10066A430(v14 + *(int *)(v15 + 28), (uint64_t)v7);
  v16 = (objc_class *)type metadata accessor for CRLBoardItemFactory(0);
  v17 = (char *)objc_allocWithZone(v16);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board] = a1;
  sub_10066A430((uint64_t)v7, (uint64_t)&v17[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_insertStyleSettings]);
  v116.receiver = v17;
  v116.super_class = v16;
  v18 = a1;
  v19 = objc_msgSendSuper2(&v116, "init");
  sub_10066A474((uint64_t)v7);
  v20 = type metadata accessor for AttributedString(0);
  v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v107(v4, 1, 1, v20);
  v110 = v19;
  v21 = sub_100CF16DC(4, 0, 0, 0, 0x4082C00000000000, 0x406F400000000000, 0, 0, 1u, (_QWORD *)1, (void *)1, (void *)1, (void *)1, (uint64_t)v4);
  v108 = v4;
  sub_1005B858C((uint64_t)v4);
  v22 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
  v106 = v18;
  v23 = *(void **)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v105 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v24 = swift_allocObject(v105, 40, 7);
  v104 = xmmword_100EEF400;
  *(_OWORD *)(v24 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v24 + 32) = v21;
  *(_QWORD *)&v112 = v24;
  specialized Array._endMutation()(v24);
  v25 = v112;
  v26 = v23;
  v27 = v21;
  v28 = NSNotFound.getter(v27);
  v103 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
  inited = swift_initStackObject(v103, &v115);
  v102 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = v28;
  *(_QWORD *)(inited + 40) = v25;
  v30 = sub_1008E00A0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_bridgeObjectRetain(v25);
  v31 = sub_1004B804C((uint64_t *)&unk_101406AF0);
  v32 = v138;
  v101 = v31;
  swift_arrayDestroy(inited + 32, 1, v31);
  v33 = v109;
  sub_100745390(v30, v32);
  if (v33)
  {
    swift_release(v32);

LABEL_5:
    swift_bridgeObjectRelease(v25);
    v52 = v30;
LABEL_6:
    swift_bridgeObjectRelease(v52);
    return;
  }

  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v30);
  v99 = (id)objc_opt_self(CRLColor);
  v34 = objc_msgSend(v99, "blackColor");
  v98 = (id)objc_opt_self(CRLStroke);
  v35 = objc_msgSend(v98, "strokeWithColor:width:", v34, 3.0);

  v36 = (void *)objc_opt_self(CRLLineEnd);
  v109 = 0;
  v37 = objc_msgSend(v36, "simpleArrow");
  v38 = objc_msgSend(v36, "simpleArrow");
  v39 = v20;
  v40 = (uint64_t)v108;
  v100 = v39;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v108, 1, 1);
  v41 = v110;
  v42 = sub_100CF16DC(1, 0, 0, 0, 0x4069000000000000, 0x407F400000000000, 0, (void *)0x4073B00000000000, 0, v35, (void *)1, v37, v38, v40);

  sub_1005B858C(v40);
  v97 = v22;
  v43 = *(void **)&v106[v22];
  v44 = swift_allocObject(v105, 40, 7);
  *(_OWORD *)(v44 + 16) = v104;
  *(_QWORD *)(v44 + 32) = v42;
  *(_QWORD *)&v112 = v44;
  specialized Array._endMutation()(v44);
  v25 = v112;
  v26 = v43;
  v27 = v42;
  v45 = NSNotFound.getter(v27);
  v46 = swift_initStackObject(v103, &v114);
  *(_OWORD *)(v46 + 16) = v102;
  v47 = v41;
  *(_QWORD *)(v46 + 32) = v45;
  v48 = v46 + 32;
  *(_QWORD *)(v46 + 40) = v25;
  v30 = sub_1008E00A0((_QWORD *)v46);
  v49 = v46;
  v50 = v138;
  swift_setDeallocating(v49);
  swift_bridgeObjectRetain(v25);
  swift_arrayDestroy(v48, 1, v101);
  v51 = v109;
  sub_100745390(v30, v50);
  if (v51)
  {
    swift_release(v50);

    goto LABEL_5;
  }
  v109 = 0;

  swift_bridgeObjectRelease(v25);
  *(_QWORD *)&v53 = swift_bridgeObjectRelease(v30).n128_u64[0];
  v54 = objc_msgSend(v99, "orangeColor", v53);
  v55 = objc_msgSend(v98, "strokeWithColor:width:", v54, 3.0);

  v56 = objc_msgSend((id)objc_opt_self(CRLColorFill), "yellowColor");
  v57 = (uint64_t)v108;
  v107(v108, 1, 1, v100);
  v58 = v55;
  v59 = v56;
  v60 = sub_100CF16DC(11, 0, 0, 0, 0x4082C00000000000, 0x407C200000000000, 0, 0, 1u, v55, v56, (void *)1, (void *)1, v57);

  sub_1005B858C(v57);
  v61 = type metadata accessor for CRLWPShapeItem(0);
  v62 = swift_dynamicCastClassUnconditional(v60, v61, 0, 0, 0);
  v63 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  v64 = *(void **)(v62 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v64)
  {
    __break(1u);
    goto LABEL_16;
  }
  v65 = v62;
  v107 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v58;
  v108 = (char *)v59;
  v66 = v64;
  sub_1007D8510(0xD00000000000002FLL, 0x8000000100FBF190);

  v67 = *(void **)(v65 + v63);
  if (!v67)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  KeyPath = swift_getKeyPath(&unk_100F019B8);
  v69 = v67;
  sub_1007D7CB8(0, 4, &v118);
  v136 = v119;
  v70 = v118;
  v137 = v120;
  v112 = v119;
  v113 = v120;
  sub_100C67958(1, 0, KeyPath);

  swift_release(KeyPath);
  sub_1005A73A4((id *)&v136);

  v71 = *(void **)(v65 + v63);
  if (!v71)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v72 = swift_getKeyPath(&unk_100F019D8);
  v73 = v71;
  sub_1007D7CB8(0, 4, &v121);
  v134 = v122;
  v74 = v121;
  v135 = v123;
  v112 = v122;
  v113 = v123;
  sub_100C6796C(1103626240, 0, v72);

  swift_release(v72);
  sub_1005A73A4((id *)&v134);

  v75 = *(void **)(v65 + v63);
  if (!v75)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v76 = (char *)swift_getKeyPath(&unk_100F019F8);
  v77 = v75;
  sub_1007D7CB8(0, 4, &v124);
  v132 = v125;
  v78 = v124;
  v133 = v126;
  v112 = v125;
  v113 = v126;
  sub_100C67B2C(1, 0, v76);

  swift_release(v76);
  sub_1005A73A4((id *)&v132);

  v79 = *(void **)(v65 + v63);
  if (!v79)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v80 = (char *)swift_getKeyPath(&unk_100F01A18);
  v81 = v79;
  sub_1007D7CB8(0, 4, &v127);
  v130 = v128;
  v82 = v127;
  v131 = v129;
  v112 = v128;
  v113 = v129;
  sub_100C67B48(1, 0, v80);

  swift_release(v80);
  sub_1005A73A4((id *)&v130);

  v83 = *(void **)&v106[v97];
  v84 = swift_allocObject(v105, 40, 7);
  *(_OWORD *)(v84 + 16) = v104;
  *(_QWORD *)(v84 + 32) = v65;
  *(_QWORD *)&v112 = v84;
  specialized Array._endMutation()(v84);
  v85 = v112;
  v86 = v83;
  v87 = v60;
  v88 = NSNotFound.getter(v87);
  v89 = swift_initStackObject(v103, &v111);
  *(_OWORD *)(v89 + 16) = v102;
  *(_QWORD *)(v89 + 32) = v88;
  *(_QWORD *)(v89 + 40) = v85;
  v90 = sub_1008E00A0((_QWORD *)v89);
  swift_setDeallocating(v89);
  swift_bridgeObjectRetain(v85);
  swift_arrayDestroy(v89 + 32, 1, v101);
  v91 = v138;
  v92 = v109;
  sub_100745390(v90, v138);
  v93 = v107;
  if (v92)
  {
    swift_release(v91);

    swift_bridgeObjectRelease(v85);
    v52 = v90;
    goto LABEL_6;
  }

  swift_bridgeObjectRelease(v85);
  v94 = swift_bridgeObjectRelease(v90);
  v95 = (*(uint64_t (**)(__n128))(*(_QWORD *)v91 + 720))(v94);

  swift_release(v95);
}

uint64_t sub_10066A430(uint64_t a1, uint64_t a2)
{
  uint64_t inserted;

  inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(inserted - 8) + 16))(a2, a1, inserted);
  return a2;
}

uint64_t sub_10066A474(uint64_t a1)
{
  uint64_t inserted;

  inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(inserted - 8) + 8))(a1, inserted);
  return a1;
}

id sub_10066A4B0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  uint64_t *v11;
  void *v12;
  char *v13;
  id v14;
  NSString v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  id v26;
  objc_super v28;

  v11 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_actionString];
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = v5;
  v14 = objc_msgSend(v12, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, v17);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  *v11 = v19;
  v11[1] = v21;
  v22 = &v13[OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_sceneID];
  v23 = type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  v25 = (double *)&v13[OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect];
  *v25 = a2;
  v25[1] = a3;
  v25[2] = a4;
  v25[3] = a5;

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for CRLCommandRecaptureScene(0);
  v26 = objc_msgSendSuper2(&v28, "init");
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v26;
}

void sub_10066A674(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  char v17;
  CKRecordID v18;
  Swift::String v19;
  _BYTE v20[24];

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v7 = v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_sceneID;
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect);
    v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect + 8);
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect + 16);
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect + 24);
    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v20, 33, 0);
    type metadata accessor for CRLBoardCRDTData(0);
    v13 = swift_retain(v12);
    v13.n128_u64[0] = v8;
    v14.n128_u64[0] = v9;
    v15.n128_u64[0] = v10;
    v16.n128_u64[0] = v11;
    v17 = sub_1005C73D0(v7, v13, v14, v15, v16);
    swift_endAccess(v20);
    swift_release(v12);
    if ((v17 & 1) != 0)
    {
      sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandRecaptureScene.swift", 96, 2, 25, "Can't recapture saved rect on a scene that doesn't exist.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can't recapture saved rect on a scene that doesn't exist.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandRecaptureScene.swift", 96, 2u, 25, (uint64_t)"Can't recapture saved rect on a scene that doesn't exist.", 57, 2u);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, v19);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
      __break(1u);
    }
  }
}

uint64_t sub_10066A8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_sceneID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_actionString + 8));
}

id sub_10066A8F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandRecaptureScene(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10066A97C()
{
  return type metadata accessor for CRLCommandRecaptureScene(0);
}

uint64_t type metadata accessor for CRLCommandRecaptureScene(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E9EA0;
  if (!qword_1013E9EA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandRecaptureScene);
  return result;
}

uint64_t sub_10066A9C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = " ";
    v4[2] = &unk_100F01A78;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10066AA40()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_actionString);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

NSString sub_10066AA7C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EEA8 = (uint64_t)result;
  return result;
}

NSString sub_10066AAB0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EEB0 = (uint64_t)result;
  return result;
}

id sub_10066AAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  id result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  uint64_t v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[152];
  _BYTE v35[24];
  _BYTE v36[32];

  v4 = v2;
  v7 = v2 + 64;
  swift_beginAccess(v2 + 64, v36, 0, 0);
  v8 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v8);
  v10 = (char *)sub_10066AE38(v9);
  swift_bridgeObjectRelease(v8);
  v11 = *(_QWORD *)(v4 + 64);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 64));
    v12 = sub_100842E98(a1, a2);
    if ((v13 & 1) != 0)
      v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
    else
      v14 = 0;
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v14 = 0;
  }
  if (qword_1013DD880 != -1)
    swift_once(&qword_1013DD880, sub_100A05C8C);
  swift_beginAccess(&static OS_os_log.suspendResumeCollaboration, v35, 0, 0);
  v15 = (void *)static OS_os_log.suspendResumeCollaboration;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v34);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  v3 = (_QWORD *)inited;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v10 + 1;
  if (__OFADD__(v14, 1))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_once(&qword_1013DCBE0, sub_10066AA7C);
    goto LABEL_13;
  }
  v18 = inited + 32;
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v14 + 1;
  *(_QWORD *)(inited + 136) = &type metadata for String;
  v14 = sub_1004CFC2C();
  v3[18] = v14;
  v3[14] = a1;
  v3[15] = a2;
  v19 = v15;
  v20 = swift_bridgeObjectRetain(a2);
  v21 = static os_log_type_t.info.getter(v20);
  sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v21, "Suspend collaboration, suspend count: %lu total, %lu for reason (%@)", 68, 2, (uint64_t)v3);
  swift_setDeallocating(v3);
  v3 = (_QWORD *)sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v18, 3, v3);

  if (v10)
  {
LABEL_18:
    swift_beginAccess(v7, v33, 33, 0);
    sub_10066AF68(a1, a2);
    return (id)swift_endAccess(v33);
  }
  v10 = (char *)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCBE0 != -1)
    goto LABEL_21;
LABEL_13:
  result = objc_msgSend(v10, "postNotificationName:object:", qword_10147EEA8, v4);
  v23 = *(_QWORD *)(v4 + 48);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v4 + 48) = v25;
    if (v25 == 1)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
      if (Strong)
        swift_unknownObjectRelease(Strong);
    }
    v27 = (void *)static OS_os_log.suspendResumeCollaboration;
    v28 = swift_initStackObject(v16, &v32);
    *(_OWORD *)(v28 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    *(_QWORD *)(v28 + 64) = v14;
    *(_QWORD *)(v28 + 32) = a1;
    *(_QWORD *)(v28 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    v29 = v27;
    v31 = static os_log_type_t.info.getter(v30);
    sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v31, "Suspend collaboration (%@)", 26, 2, v28);
    swift_setDeallocating(v28);
    swift_arrayDestroy(v28 + 32, 1, v3);

    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10066AE38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v1 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v7 = 0;
  v8 = 0;
  do
  {
    if (v4)
    {
      v9 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v10 = v9 | (v8 << 6);
    }
    else
    {
      v13 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_23;
      if (v13 >= v5)
      {
LABEL_21:
        swift_release(result);
        return v7;
      }
      v14 = *(_QWORD *)(v1 + 8 * v13);
      ++v8;
      if (!v14)
      {
        v8 = v13 + 1;
        if (v13 + 1 >= v5)
          goto LABEL_21;
        v14 = *(_QWORD *)(v1 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 2;
          if (v13 + 2 >= v5)
            goto LABEL_21;
          v14 = *(_QWORD *)(v1 + 8 * v8);
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v5)
              goto LABEL_21;
            v14 = *(_QWORD *)(v1 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v8 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_24;
                if (v8 >= v5)
                  goto LABEL_21;
                v14 = *(_QWORD *)(v1 + 8 * v8);
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v8 = v15;
          }
        }
      }
LABEL_20:
      v4 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v8 << 6);
    }
    v11 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v10);
    v12 = __OFADD__(v7, v11);
    v7 += v11;
  }
  while (!v12);
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

void sub_10066AF68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  char v3;
  _QWORD **v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;

  v4 = (_QWORD **)v2;
  swift_bridgeObjectRetain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = (_QWORD *)*v2;
  v22 = v8;
  *v4 = (_QWORD *)0x8000000000000000;
  v10 = sub_100842E98(a1, a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = v9;
  if (v8[3] >= v13)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    sub_10081BA94(v13, isUniquelyReferenced_nonNull_native);
    v14 = sub_100842E98(a1, a2);
    if ((v3 & 1) != (v15 & 1))
    {
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
      return;
    }
    v10 = v14;
  }
  while (1)
  {
    v16 = (uint64_t)*v4;
    *v4 = v8;
    swift_bridgeObjectRelease(v16);
    v17 = (uint64_t)*v4;
    if ((v3 & 1) == 0)
    {
      sub_10082B604(v10, a1, a2, 0, *v4);
      swift_bridgeObjectRetain(a2);
    }
    v18 = *(_QWORD *)(v17 + 56);
    v19 = *(_QWORD *)(v18 + 8 * v10);
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
      break;
LABEL_11:
    __break(1u);
LABEL_12:
    sub_10082FA2C();
    v8 = v22;
  }
  *(_QWORD *)(v18 + 8 * v10) = v21;
  swift_bridgeObjectRelease(a2);
}

void sub_10066B0B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  _BYTE v8[24];
  _BYTE v9[24];

  v2 = v1;
  if (qword_1013DD880 != -1)
    swift_once(&qword_1013DD880, sub_100A05C8C);
  swift_beginAccess(&static OS_os_log.suspendResumeCollaboration, v9, 0, 0);
  v4 = (id)static OS_os_log.suspendResumeCollaboration;
  v5 = static os_log_type_t.debug.getter();
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v5, "suspend collaboration for contextSet", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  if ((*(_BYTE *)(v2 + 40) & 1) == 0)
  {
    swift_beginAccess(v2 + 72, v8, 33, 0);
    swift_bridgeObjectRetain(a1);
    sub_100512150(v6);
    swift_endAccess(v8);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
    if (Strong)
      swift_unknownObjectRelease(Strong);
  }
}

void sub_10066B1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  unint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  uint64_t v61;
  _BYTE v62[24];
  _BYTE v63[72];
  _BYTE v64[32];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v55 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t **)(v2 + 64);
  swift_beginAccess(v2 + 64, v64, 0, 0);
  v9 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v9);
  v11 = sub_10066AE38(v10);
  swift_bridgeObjectRelease(v9);
  v12 = *(_QWORD *)(v3 + 64);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 64));
    v13 = sub_100842E98(a1, a2);
    if ((v14 & 1) != 0)
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    else
      v15 = 0;
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v15 = 0;
  }
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v63);
  v57 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v58 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v58;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain(a2);
  if (v15 <= 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"resumeCollaboration(withReason:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2, 139, "Resume collaboration without matching suspendCollaboration for reason (%@)", 74, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"resumeCollaboration(withReason:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2u, 139, (uint64_t)"Resume collaboration without matching suspendCollaboration for reason (%@)", 74, 2u);
  }
  swift_bridgeObjectRelease(inited);
  if (qword_1013DD880 != -1)
    swift_once(&qword_1013DD880, sub_100A05C8C);
  v18 = &static OS_os_log.suspendResumeCollaboration;
  swift_beginAccess(&static OS_os_log.suspendResumeCollaboration, v62, 0, 0);
  v19 = (void *)static OS_os_log.suspendResumeCollaboration;
  v20 = swift_initStackObject(v16, &v61);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5550;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  v18 = (uint64_t *)v20;
  *(_QWORD *)(v20 + 56) = &type metadata for Int;
  *(_QWORD *)(v20 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v20 + 32) = v11 - 1;
  if (__OFSUB__(v15, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v56 = v16;
  *(_QWORD *)(v20 + 96) = &type metadata for Int;
  *(_QWORD *)(v20 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v20 + 72) = v15 - 1;
  v21 = v58;
  *(_QWORD *)(v20 + 136) = &type metadata for String;
  *(_QWORD *)(v20 + 144) = v21;
  *(_QWORD *)(v20 + 112) = a1;
  *(_QWORD *)(v20 + 120) = a2;
  swift_bridgeObjectRetain(a2);
  v22 = v19;
  v24 = static os_log_type_t.info.getter(v23);
  sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v24, "Resume collaboration, suspend count: %lu total, %lu for reason (%@)", 67, 2, (uint64_t)v18);
  swift_setDeallocating(v18);
  v25 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v18 + 4, 3, v25);

  if (v15 >= 1)
  {
    swift_beginAccess(v8, v60, 33, 0);
    sub_10066B7C0(a1, a2);
    v27 = v26;
    swift_endAccess(v60);
    swift_bridgeObjectRelease(v27);
    v18 = *v8;
    swift_bridgeObjectRetain(*v8);
    v29 = sub_10066AE38(v28);
    swift_bridgeObjectRelease(v18);
    if (!v29)
    {
      v30 = *(_QWORD *)(v3 + 48);
      v31 = v30 - 1;
      if (!__OFSUB__(v30, 1))
      {
        v32 = a1;
        *(_QWORD *)(v3 + 48) = v31;
        sub_100A6AAD4(v31, -1, &_mh_execute_header, (uint64_t)"resumeIncoming()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2u, 192);
        if (!*(_QWORD *)(v3 + 48))
        {
          Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
          if (Strong)
          {
            v34 = Strong;
            if (*(_BYTE *)(Strong
                          + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) == 1)
            {
              *(_BYTE *)(Strong + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) = 0;
              sub_100CC3F30();
            }
            v35 = (uint64_t *)(v34 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
            swift_beginAccess(v34 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession, v60, 0, 0);
            v36 = *v35;
            if (*v35)
            {
              v37 = v35[2];
              v54 = v35[3];
              v38 = v35[1];
              v39 = type metadata accessor for TaskPriority(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v55, 1, 1, v39);
              v40 = (_QWORD *)swift_allocObject(&unk_101274AF8, 64, 7);
              v40[2] = 0;
              v40[3] = 0;
              v40[4] = v36;
              v40[5] = v38;
              v41 = v54;
              v40[6] = v37;
              v40[7] = v41;
              v52 = v37;
              v53 = v38;
              sub_10066BE78(v36, v38, v37, v41);
              swift_retain(v36);
              swift_retain(v38);
              swift_retain(v37);
              v42 = v54;
              swift_bridgeObjectRetain(v54);
              v43 = v55;
              v44 = sub_1009880C4(v55, (uint64_t)&unk_1013EA078, (uint64_t)v40);
              swift_release(v44);
              sub_10066BEC4(v36, v53, v52, v42);
              sub_10056805C(v43);
            }
            swift_unknownObjectRelease(v34);
          }
        }
        v45 = (void *)static OS_os_log.suspendResumeCollaboration;
        v46 = swift_initStackObject(v56, &v59);
        *(_OWORD *)(v46 + 16) = v57;
        v47 = v58;
        *(_QWORD *)(v46 + 56) = &type metadata for String;
        *(_QWORD *)(v46 + 64) = v47;
        *(_QWORD *)(v46 + 32) = v32;
        *(_QWORD *)(v46 + 40) = a2;
        swift_bridgeObjectRetain(a2);
        v48 = v45;
        v50 = static os_log_type_t.info.getter(v49);
        sub_100A06EBC((uint64_t)v48, &_mh_execute_header, v50, "Resume collaboration (%@)", 25, 2, v46);
        swift_setDeallocating(v46);
        swift_arrayDestroy(v46 + 32, 1, v25);

        v18 = (uint64_t *)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1013DCBE8 == -1)
          goto LABEL_24;
        goto LABEL_29;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      swift_once(&qword_1013DCBE8, sub_10066AAB0);
LABEL_24:
      objc_msgSend(v18, "postNotificationName:object:", qword_10147EEB0, v3);

    }
  }
}

uint64_t sub_10066B7C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v4 = *v2;
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  v6 = a1;
  v7 = sub_100842E98(a1, a2);
  if ((v8 & 1) == 0)
    return 0;
  v9 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v7);
  v10 = v9 - 1;
  if (v9 < 1)
    return 0;
  swift_bridgeObjectRetain(a2);
  if (v10)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_1008278BC(v10, v6, a2, isUniquelyReferenced_nonNull_native);
    v12 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(a2);
    v13 = v12;
  }
  else
  {
    sub_10084795C(v6, a2);
    v13 = a2;
  }
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRetain(a2);
  return v6;
}

uint64_t sub_10066B8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v0 + 72, v16, 1, 0);
  v4 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 72) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v4);
  result = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (result)
  {
    v6 = result;
    if (*(_BYTE *)(result + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) == 1)
    {
      *(_BYTE *)(result + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) = 0;
      sub_100CC3F30();
    }
    v7 = (uint64_t *)(v6 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
    swift_beginAccess(v6 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession, v15, 0, 0);
    v8 = *v7;
    if (*v7)
    {
      v10 = v7[2];
      v9 = v7[3];
      v11 = v7[1];
      v12 = type metadata accessor for TaskPriority(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
      v13 = (_QWORD *)swift_allocObject(&unk_101274AD0, 64, 7);
      v13[2] = 0;
      v13[3] = 0;
      v13[4] = v8;
      v13[5] = v11;
      v13[6] = v10;
      v13[7] = v9;
      sub_10066BE78(v8, v11, v10, v9);
      swift_retain(v8);
      swift_retain(v11);
      swift_retain(v10);
      swift_bridgeObjectRetain(v9);
      v14 = sub_1009880C4((uint64_t)v3, (uint64_t)&unk_1013EA070, (uint64_t)v13);
      swift_release(v14);
      sub_10066BEC4(v8, v11, v10, v9);
      sub_10056805C((uint64_t)v3);
    }
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_10066BA5C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD v26[6];
  _BYTE v27[24];

  if (*(_BYTE *)(v1 + 40) == 1)
  {
    if (qword_1013DD880 != -1)
      goto LABEL_32;
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v1 + 32);
  swift_beginAccess(v1 + 72, v27, 0, 0);
  v8 = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain(v8);
  v9 = sub_100CDEC88(a1, v8);
  v10 = *(_QWORD *)(v9 + 16);
  swift_release(v9);
  if (v10)
  {
    if (qword_1013DD880 != -1)
      swift_once(&qword_1013DD880, sub_100A05C8C);
    swift_beginAccess(&static OS_os_log.suspendResumeCollaboration, v26, 0, 0);
    v11 = (id)static OS_os_log.suspendResumeCollaboration;
    v13 = static os_log_type_t.debug.getter(v12);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Incoming Suspended for matching context", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

    v5 = 1;
    return v5 & 1;
  }
  v1 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_12;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v1 + 8 * v22);
    ++v18;
    if (!v23)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v1 + 8 * v18);
      if (!v23)
      {
        v18 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v1 + 8 * v18);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_12:
    sub_10051FDDC(*(_QWORD *)(a1 + 48) + 48 * v20, (uint64_t)v26);
    v21 = v26[5];
    sub_10051FE18(v26);
    v5 |= (v21 & ~v7) != 0;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
  {
LABEL_28:
    swift_release(a1);
    return v5 & 1;
  }
  v23 = *(_QWORD *)(v1 + 8 * v24);
  if (v23)
  {
    v18 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v18 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v18 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v1 + 8 * v18);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  swift_once(&qword_1013DD880, sub_100A05C8C);
LABEL_3:
  swift_beginAccess(&static OS_os_log.suspendResumeCollaboration, v26, 0, 0);
  v2 = (id)static OS_os_log.suspendResumeCollaboration;
  v4 = static os_log_type_t.debug.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Incoming Suspended for all", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = *(_QWORD *)(v1 + 48) > 0;
  return v5 & 1;
}

uint64_t sub_10066BD38()
{
  uint64_t v0;

  sub_1004CBB0C(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for CRLSuspendResumeCoordinator()
{
  return objc_opt_self(_TtC8Freeform27CRLSuspendResumeCoordinator);
}

uint64_t getEnumTagSinglePayload for CRLMiniFormatterStrokeDataProvider.StrokeChangingState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLSuspendResumeConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLSuspendResumeConfiguration()
{
  return &type metadata for CRLSuspendResumeConfiguration;
}

uint64_t sub_10066BDEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10140E234);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100CC3EC0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10066BE78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_retain(result);
    swift_retain(a2);
    swift_retain(a3);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_10066BEC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    swift_release(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_10066BF14()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10066BF58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10140E234);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100CC3EC0(a1, v4, v5, v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for CRLMiniFormatterStrokeDataProvider.StrokeChangingState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_10066C014(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10066C030(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSuspendResumeConfiguration.SupensionTargetKind()
{
  return &type metadata for CRLSuspendResumeConfiguration.SupensionTargetKind;
}

char *CRLiOSPencilMediator.__allocating_init(interactiveCanvasController:)(void *a1)
{
  objc_class *v1;
  _BYTE *v3;
  _QWORD *v4;
  id v5;
  void *v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *ObjCClassFromMetadata;
  NSString v14;
  objc_super v16;

  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] = 0;
  v4 = &v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  *v4 = 0xD000000000000018;
  v4[1] = 0x8000000100FAAB10;
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = 0;
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession] = 0;
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession] = 0;
  swift_unknownObjectUnownedInit(&v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_icc], a1);
  v16.receiver = v3;
  v16.super_class = v1;
  v5 = objc_msgSendSuper2(&v16, "init");
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = (char *)v5;
  v8 = objc_msgSend(v6, "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "integerForKey:", v9);

  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = sub_10066DF8C((unint64_t)v10);
  v11 = sub_1004B8930(0, (unint64_t *)&unk_1013EA0C0, UIPencilInteraction_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v11, v12);
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(ObjCClassFromMetadata, "addObserver:forKeyPath:options:context:", v7, v14, 0, 0);

  return v7;
}

char *CRLiOSPencilMediator.init(interactiveCanvasController:)(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  _QWORD *v4;
  id v5;
  void *v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *ObjCClassFromMetadata;
  NSString v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] = 0;
  v4 = &v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  *v4 = 0xD000000000000018;
  v4[1] = 0x8000000100FAAB10;
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = 0;
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession] = 0;
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession] = 0;
  swift_unknownObjectUnownedInit(&v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_icc], a1);
  v16.receiver = v1;
  v16.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v16, "init");
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = (char *)v5;
  v8 = objc_msgSend(v6, "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "integerForKey:", v9);

  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = sub_10066DF8C((unint64_t)v10);
  v11 = sub_1004B8930(0, (unint64_t *)&unk_1013EA0C0, UIPencilInteraction_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v11, v12);
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(ObjCClassFromMetadata, "addObserver:forKeyPath:options:context:", v7, v14, 0, 0);

  return v7;
}

void sub_10066C414()
{
  _BYTE *v0;
  _QWORD *v1;

  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  *v1 = 0xD000000000000018;
  v1[1] = 0x8000000100FAAB10;
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = 0;
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession] = 0;
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000046, 0x8000000100FBFBA0, "Freeform/CRLiOSPencilMediator.swift", 35, 2, 35, 0);
  __break(1u);
}

Swift::Void __swiftcall CRLiOSPencilMediator.teardown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *ObjCClassFromMetadata;
  id v5;

  v1 = OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 47, "Should not call teardown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"teardown()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 47, (uint64_t)"Should not call teardown() twice.", 33, 2u);
  }
  *(_BYTE *)(v0 + v1) = 1;
  v2 = sub_1004B8930(0, (unint64_t *)&unk_1013EA0C0, UIPencilInteraction_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2, v3);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(ObjCClassFromMetadata, "removeObserver:forKeyPath:", v0, v5);

}

id CRLiOSPencilMediator.__deallocating_deinit()
{
  _BYTE *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  if ((v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 54, "Must call teardown() before CRLiOSPencilMediator is deinitialized.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 54, (uint64_t)"Must call teardown() before CRLiOSPencilMediator is deinitialized.", 66, 2u);
  }
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10066C87C()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  uint64_t result;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_icc);
  v2 = objc_msgSend(Strong, "layerHost");

  if (v2)
  {
    if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) != 0)
    {
      v3 = objc_msgSend(v2, "asiOSCVC");
      swift_unknownObjectRelease(v2);
      return (uint64_t)v3;
    }
    swift_unknownObjectRelease(v2);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"cvc", 3, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 58, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cvc", 3, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 58, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLiOSPencilMediator.swift", 35, 2, 59, 0);
  __break(1u);
  return result;
}

id CRLiOSPencilMediator.prefersPencilOnlyDrawing.getter()
{
  return objc_msgSend((id)objc_opt_self(UIPencilInteraction), "prefersPencilOnlyDrawing");
}

void CRLiOSPencilMediator.setCurrentPencilModeType(_:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType);
  if (v3 != a1)
  {
    if (v3)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) == 1)
        *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) = 0;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) == 1)
        *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) = 0;
      if (*(_BYTE *)(v1
                    + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) == 1)
        *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) = 0;
    }
    *(_QWORD *)(v1 + v2) = a1;
    if (a1)
      sub_10066CAA8(a1);
  }
}

void sub_10066CAA8(unint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;

  if (a1)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType) = a1;
    v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    if (a1 >= 3)
    {
      type metadata accessor for CRLiOSPencilModeType(0);
      v7 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v5, &v7, v5, &type metadata for UInt);
      __break(1u);
    }
    else
    {
      v4 = v3;
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "setInteger:forKey:", a1, v6);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"lastPencilModeType", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 134, "Should not set lastPencilModeType to none.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lastPencilModeType", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 134, (uint64_t)"Should not set lastPencilModeType to none.", 42, 2u);
  }
}

void CRLiOSPencilMediator.setNextPencilModeType(_:)(unint64_t a1)
{
  if (a1)
  {
    sub_10066CAA8(a1);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setNextPencilModeType(_:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 113, "Should not call setNextPencilModeType() with modeType none.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setNextPencilModeType(_:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 113, (uint64_t)"Should not call setNextPencilModeType() with modeType none.", 59, 2u);
  }
}

uint64_t CRLiOSPencilMediator.lastPencilModeTypeForArchivingOnly.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
}

void CRLiOSPencilMediator.markPencilUsed(for:)(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) & 1) == 0)
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) = 1;
      sub_10066E0BC(a1);
    }
  }
  else
  {
  }
}

Swift::Void __swiftcall CRLiOSPencilMediator.fingerUsedForFreehandDrawingMode()()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  unint64_t v3;
  Class isa;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) = 1;
    v1 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v2 = String._bridgeToObjectiveC()();
    v3 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(7);
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "sendEventInDomain:lazily:eventPayload:", v2, 1, isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  }
}

Swift::Void __swiftcall CRLiOSPencilMediator.indirectTouchUsedForFreehandDrawingMode()()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  unint64_t v3;
  Class isa;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) = 1;
    v1 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v2 = String._bridgeToObjectiveC()();
    v3 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(8);
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "sendEventInDomain:lazily:eventPayload:", v2, 1, isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  }
}

uint64_t CRLiOSPencilMediator.pencilModeToBeginFromToolbarItem.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (void *)sub_10066C87C();
  v2 = objc_msgSend(v1, "delegate");

  if (!v2)
  {
    __break(1u);
LABEL_19:
    type metadata accessor for CRLiOSPencilModeType(0);
    v9 = (uint64_t)v2;
    goto LABEL_21;
  }
  if ((objc_msgSend(v2, "respondsToSelector:", "currentDocumentMode") & 1) == 0)
  {
    swift_unknownObjectRelease(v2);
    sub_100757E04(&_mh_execute_header, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 217, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 217, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v3 = objc_msgSend(v2, "currentDocumentMode");
  swift_unknownObjectRelease(v2);
  if (objc_msgSend(v3, "pencilModeType"))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 221, "It is invalid to ask the mediator for the pencilModeToBeginFromToolbarItem when in a pencil-centric document mode.", 114, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 221, (uint64_t)"It is invalid to ask the mediator for the pencilModeToBeginFromToolbarItem when in a pencil-centric document mode.", 114, 2u);
LABEL_5:

    return 0;
  }
  v2 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
  if ((unint64_t)v2 >= 2)
  {
    if (v2 == (id)2)
    {
      v7 = objc_msgSend((id)objc_opt_self(PKToolPicker), "_canShowHandwritingTool");

      if ((v7 & 1) == 0)
        return 1;
      return 2;
    }
    goto LABEL_19;
  }
  v5 = sub_10066DB60();
  if (!v5)
    goto LABEL_5;
  v6 = v5;
  if (v5 == 1)
  {

    return 1;
  }
  if (v5 == 2)
  {

    return 2;
  }
  type metadata accessor for CRLiOSPencilBehavior(0);
  v9 = v6;
LABEL_21:
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v8, &v9, v8, &type metadata for UInt);
  __break(1u);
  return result;
}

void CRLiOSPencilMediator.pencilBehaviorOutsideModes(at:)()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_10066C87C();
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    if ((objc_msgSend(v1, "respondsToSelector:", "currentDocumentMode") & 1) != 0)
    {
      v2 = objc_msgSend(v1, "currentDocumentMode");
      swift_unknownObjectRelease(v1);
      if (objc_msgSend(v2, "pencilModeType"))
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 236, "It is invalid to ask the mediator for the pencilBehaviorOutsideModes when in a pencil-centric document mode.", 108, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 236, (uint64_t)"It is invalid to ask the mediator for the pencilBehaviorOutsideModes when in a pencil-centric document mode.", 108, 2u);
      }
      else
      {
        sub_10066D658();
      }

    }
    else
    {
      swift_unknownObjectRelease(v1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 232, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 232, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10066D658()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  unint64_t v7;
  void *v8;
  unsigned int v9;
  void *v10;
  unsigned int v11;
  void *Strong;
  id v13;
  void *v14;
  void *v15;
  id v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;

  v1 = v0;
  v2 = (void *)sub_10066C87C();
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    if ((objc_msgSend(v3, "respondsToSelector:", "currentDocumentMode") & 1) == 0)
    {
      swift_unknownObjectRelease(v3);
      sub_100757E04(&_mh_execute_header, (uint64_t)"p_pencilBehavior(at:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 244, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"p_pencilBehavior(at:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 244, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      return;
    }
    v4 = objc_msgSend(v3, "currentDocumentMode");
    swift_unknownObjectRelease(v3);
    v5 = (void *)sub_10066C87C();
    v6 = objc_msgSend(v5, "shouldSelectAndScrollWithApplePencil");

    if ((v6 & 1) != 0 && objc_msgSend(v4, "pencilModeType"))
    {
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
      if (v7 == 2)
      {
LABEL_18:
        objc_msgSend((id)objc_opt_self(PKToolPicker), "_canShowHandwritingTool");

        return;
      }
      if (v7 <= 1)
      {
LABEL_7:
        sub_10066DB60();

        return;
      }
    }
    else
    {
      v8 = (void *)sub_10066C87C();
      v9 = objc_msgSend(v8, "shouldSelectAndScrollWithApplePencil");

      if (v9)
        goto LABEL_14;
      v10 = (void *)sub_10066C87C();
      v11 = objc_msgSend(v10, "shouldPreventDefaultPencilBehaviors");

      if (v11)
        goto LABEL_14;
      if (objc_msgSend(v4, "wantsToPreventStandardPencilBehaviors"))
        goto LABEL_14;
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_icc);
      v13 = sub_100C58BB0(2);
      v15 = v14;

      if (v13)
      {
        v16 = v13;
        v17 = objc_msgSend(v16, "worksWithStylus");
        sub_10066E2A4(v13, v15);

        if (v17)
        {
LABEL_14:

          return;
        }
      }
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
      if (v7 == 2)
        goto LABEL_18;
      if (v7 < 2)
        goto LABEL_7;
    }
    type metadata accessor for CRLiOSPencilModeType(0);
    v19 = v7;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v18, &v19, v18, &type metadata for UInt);
    __break(1u);
    goto LABEL_18;
  }
  __break(1u);
}

BOOL CRLiOSPencilMediator.shouldAllowPencilKitHoverPreview(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  id v4;
  int v5;
  _BOOL4 v6;

  sub_10066D658();
  v2 = v1;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_icc);
  v4 = objc_msgSend(Strong, "freehandDrawingToolkit");

  if (v4)
  {
    v5 = sub_100A2B318();

    v6 = v5 == 8;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"shouldAllowPencilKitHoverPreview(at:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 274, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldAllowPencilKitHoverPreview(at:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 274, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v6 = 1;
  }
  return v2 == 1 && v6;
}

BOOL CRLiOSPencilMediator.shouldAllowNativeHoverPreview(at:)()
{
  uint64_t v0;

  sub_10066D658();
  return (unint64_t)(v0 - 1) < 2;
}

uint64_t sub_10066DB60()
{
  uint64_t v0;
  void *Strong;
  id v2;
  unsigned __int8 v3;
  void *v5;
  unsigned int v6;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_icc);
  v2 = objc_msgSend(Strong, "freehandDrawingToolkit");

  if (v2)
  {
    v3 = objc_msgSend(v2, "canBeginFreehandDrawingMode");

    if ((v3 & 1) != 0)
      return 1;
  }
  v5 = (void *)sub_10066C87C();
  v6 = objc_msgSend(v5, "wantsSystemInputAssistantForScribble");

  if (v6)
    return 2;
  else
    return 0;
}

void CRLiOSPencilMediator.observeValue(forKeyPath:of:change:context:)(uint64_t a1, NSString a2, uint64_t a3, Class isa, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  BOOL v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  _QWORD v29[3];
  uint64_t v30;

  ObjectType = (objc_class *)swift_getObjectType(v5);
  sub_1004F370C(a3, (uint64_t)v29);
  if (!v30)
  {
    sub_1004D28EC((uint64_t)v29);
    goto LABEL_15;
  }
  v12 = sub_1004B804C(&qword_1013EA0D0);
  if ((swift_dynamicCast(&v27, v29, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0
    || (v13 = v27, v13 != sub_1004B8930(0, (unint64_t *)&unk_1013EA0C0, UIPencilInteraction_ptr)))
  {
LABEL_15:
    if (!a2)
      goto LABEL_17;
    goto LABEL_16;
  }
  if (!a2)
    goto LABEL_17;
  v14 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  v15 = *(NSString *)&v5[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath + 8];
  v16 = v14 == a1 && v15 == a2;
  if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v14, v15, 0) & 1) == 0)
  {
LABEL_16:
    a2 = String._bridgeToObjectiveC()();
LABEL_17:
    sub_1004F370C(a3, (uint64_t)v29);
    v19 = v30;
    if (v30)
    {
      v20 = sub_1004BB5A4(v29, v30);
      v21 = *(_QWORD *)(v19 - 8);
      v22 = __chkstk_darwin(v20);
      v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v21 + 16))(v24, v22);
      v25 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v19);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v29);
      if (!isa)
      {
LABEL_20:
        v28.receiver = v5;
        v28.super_class = ObjectType;
        objc_msgSendSuper2(&v28, "observeValueForKeyPath:ofObject:change:context:", a2, v25, isa, a5);

        swift_unknownObjectRelease(v25);
        return;
      }
    }
    else
    {
      v25 = 0;
      if (!isa)
        goto LABEL_20;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_10066E23C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_20;
  }
  v17 = (void *)sub_10066C87C();
  v18 = objc_msgSend(v17, "delegate");

  if (v18)
  {
    if ((objc_msgSend(v18, "respondsToSelector:", "prefersPencilOnlyDrawingDidChange") & 1) != 0)
      objc_msgSend(v18, "prefersPencilOnlyDrawingDidChange");
    swift_unknownObjectRelease(v18);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_10066DF8C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  char v6[72];

  v1 = a1;
  if (a1 >= 3)
  {
    v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v2, v6);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v1;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(userDefaultsRepresentation:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 443, "Unexpected user defaults representation for last pencil mode: %i", 64, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"init(userDefaultsRepresentation:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2u, 443, (uint64_t)"Unexpected user defaults representation for last pencil mode: %i", 64, 2u);
    swift_setDeallocating(inited);
    v4 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v4);
    return 0;
  }
  return v1;
}

void sub_10066E0BC(uint64_t a1)
{
  void *v1;
  NSString v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;

  switch(a1)
  {
    case 1:
      v1 = (void *)objc_opt_self(CRLAnalyticsLogger);
      v2 = String._bridgeToObjectiveC()();
      v3 = 9;
LABEL_5:
      v5 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(v3);
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v1, "sendEventInDomain:lazily:eventPayload:", v2, 1, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

      return;
    case 2:
      v1 = (void *)objc_opt_self(CRLAnalyticsLogger);
      v2 = String._bridgeToObjectiveC()();
      v3 = 10;
      goto LABEL_5;
    case 0:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLiOSPencilMediator.swift", 35, 2, 198, 0);
      __break(1u);
      break;
  }
  type metadata accessor for CRLiOSPencilModeType(0);
  v8 = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v6, &v8, v6, &type metadata for UInt);
  __break(1u);
}

unint64_t sub_10066E23C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DE700;
  if (!qword_1013DE700)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = swift_getWitnessTable(&unk_100EF21FC, v1);
    atomic_store(result, (unint64_t *)&qword_1013DE700);
  }
  return result;
}

uint64_t type metadata accessor for CRLiOSPencilMediator()
{
  return objc_opt_self(_TtC8Freeform20CRLiOSPencilMediator);
}

void sub_10066E2A4(void *a1, void *a2)
{
  if (a1)
  {

  }
}

void sub_10066E2D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  id v6;
  Swift::String v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  _BYTE v18[112];
  _BYTE v19[24];

  v1 = v0;
  if (qword_1013DD7D8 != -1)
    swift_once(&qword_1013DD7D8, sub_100A03DBC);
  swift_beginAccess(&static OS_os_log.crlPencilHover, v19, 0, 0);
  v2 = (void *)static OS_os_log.crlPencilHover;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v5 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = 0x776569766572702ALL;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)&v14 = 0;
  *((_QWORD *)&v14 + 1) = 0xE000000000000000;
  v6 = v2;
  _StringGuts.grow(_:)(16);
  v17 = v14;
  v7._countAndFlagsBits = 0x5377656976657270;
  v7._object = (void *)0xEE00203A65746174;
  String.append(_:)(v7);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 16);
  v9 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24);
  v14 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState);
  v15 = v8;
  v16 = v9;
  _print_unlocked<A, B>(_:_:)(&v14, &v17, &type metadata for CRLiOSPencilHoverToolPreviewer.PreviewState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v10 = v17;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v5;
  *(_OWORD *)(inited + 72) = v10;
  v12 = static os_log_type_t.debug.getter(v11);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v12, "%@ %@", 5, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v13);

}

void sub_10066E4B4(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  id v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  Swift::String v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  __n128 v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  _BYTE v50[112];
  __int128 v51;
  uint64_t v52;
  unint64_t v53;
  _BYTE v54[112];
  _BYTE v55[24];

  v2 = v1;
  if (*a1 == *(unsigned __int8 *)(*((_QWORD *)a1 + 10)
                                 + OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType))
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState);
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24))
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24) == 1)
      {
        v5 = *v3;
        v6 = *((double *)v3 + 1);
        v7 = *((double *)v3 + 2);
        if (qword_1013DD7D8 != -1)
          swift_once(&qword_1013DD7D8, sub_100A03DBC);
        swift_beginAccess(&static OS_os_log.crlPencilHover, v55, 0, 0);
        v8 = (void *)static OS_os_log.crlPencilHover;
        v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v9, v50);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v11 = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = 0x776569766572702ALL;
        *(_QWORD *)(inited + 64) = v11;
        *(_QWORD *)(inited + 40) = 0xE800000000000000;
        v52 = 0;
        v53 = 0xE000000000000000;
        v12 = v8;
        _StringGuts.grow(_:)(23);
        v13._countAndFlagsBits = 0x676E697265766F68;
        v13._object = (void *)0xE900000000000020;
        String.append(_:)(v13);
        v51 = *(_OWORD *)(a1 + 8);
        type metadata accessor for CGPoint(0);
        _print_unlocked<A, B>(_:_:)(&v51, &v52, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v15._countAndFlagsBits = 0x74657366664F7A20;
        v15._object = (void *)0xEA0000000000203ALL;
        String.append(_:)(v15);
        v16._countAndFlagsBits = Double.description.getter(*((double *)a1 + 3));
        String.append(_:)(v16);
        v17 = swift_bridgeObjectRelease();
        v18 = v52;
        v19 = v53;
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v11;
        *(_QWORD *)(inited + 72) = v18;
        *(_QWORD *)(inited + 80) = v19;
        v20 = static os_log_type_t.debug.getter(v17);
        sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v20, "%@ %@", 5, 2, inited);
        swift_setDeallocating(inited);
        v21 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v21);

        v22.n128_u64[0] = v5;
        sub_10066EAD0(a1, v22, v6, v7);
      }
      else
      {
        if (qword_1013DD7D8 != -1)
          swift_once(&qword_1013DD7D8, sub_100A03DBC);
        swift_beginAccess(&static OS_os_log.crlPencilHover, v55, 0, 0);
        v34 = (void *)static OS_os_log.crlPencilHover;
        v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v36 = swift_initStackObject(v35, v54);
        *(_OWORD *)(v36 + 16) = xmmword_100EF5A10;
        *(_QWORD *)(v36 + 56) = &type metadata for String;
        v37 = sub_1004CFC2C();
        *(_QWORD *)(v36 + 32) = 0x776569766572702ALL;
        *(_QWORD *)(v36 + 64) = v37;
        *(_QWORD *)(v36 + 40) = 0xE800000000000000;
        v52 = 0;
        v53 = 0xE000000000000000;
        v38 = v34;
        _StringGuts.grow(_:)(23);
        v39._countAndFlagsBits = 0x676E697265746E65;
        v39._object = (void *)0xE900000000000020;
        String.append(_:)(v39);
        v51 = *(_OWORD *)(a1 + 8);
        type metadata accessor for CGPoint(0);
        _print_unlocked<A, B>(_:_:)(&v51, &v52, v40, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v41._countAndFlagsBits = 0x74657366664F7A20;
        v41._object = (void *)0xEA0000000000203ALL;
        String.append(_:)(v41);
        v42._countAndFlagsBits = Double.description.getter(*((double *)a1 + 3));
        String.append(_:)(v42);
        v43 = swift_bridgeObjectRelease();
        v44 = v52;
        v45 = v53;
        *(_QWORD *)(v36 + 96) = &type metadata for String;
        *(_QWORD *)(v36 + 104) = v37;
        *(_QWORD *)(v36 + 72) = v44;
        *(_QWORD *)(v36 + 80) = v45;
        v46 = static os_log_type_t.debug.getter(v43);
        sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v46, "%@ %@", 5, 2, v36);
        swift_setDeallocating(v36);
        v47 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v36 + 32, 2, v47);

        *(double *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals) = static Date.timeIntervalSinceReferenceDate.getter(v48);
        sub_10066ED64((uint64_t)a1);
      }
    }
    else
    {
      if (qword_1013DD7D8 != -1)
        swift_once(&qword_1013DD7D8, sub_100A03DBC);
      swift_beginAccess(&static OS_os_log.crlPencilHover, v55, 0, 0);
      v26 = (void *)static OS_os_log.crlPencilHover;
      v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v28 = swift_initStackObject(v27, &v49);
      *(_OWORD *)(v28 + 16) = xmmword_100EF5A10;
      *(_QWORD *)(v28 + 56) = &type metadata for String;
      v29 = sub_1004CFC2C();
      *(_QWORD *)(v28 + 32) = 0x776569766572702ALL;
      *(_QWORD *)(v28 + 40) = 0xE800000000000000;
      *(_QWORD *)(v28 + 96) = &type metadata for String;
      *(_QWORD *)(v28 + 104) = v29;
      *(_QWORD *)(v28 + 64) = v29;
      *(_QWORD *)(v28 + 72) = 0xD00000000000002ELL;
      *(_QWORD *)(v28 + 80) = 0x8000000100FBFD80;
      v30 = v26;
      v32 = static os_log_type_t.debug.getter(v31);
      sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v32, "%@ %@", 5, 2, v28);
      swift_setDeallocating(v28);
      v33 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v28 + 32, 2, v33);

    }
  }
  else
  {
    v23 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v23, "begin");
    objc_msgSend(v23, "setDisableActions:", 1);
    v24 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer);
    v25 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer);
    objc_msgSend(v24, "setPath:", 0);
    objc_msgSend(v24, "setHidden:", 1);
    objc_msgSend(v25, "removeFromSuperlayer");
    objc_msgSend(v23, "commit");
  }
}

void sub_10066EAD0(unsigned __int8 *a1, __n128 a2, double a3, double a4)
{
  char *v4;
  char *v5;
  BOOL v7;
  void *v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  double v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v23[5];
  uint64_t v24;

  v5 = v4;
  if (*a1 == *(unsigned __int8 *)(*((_QWORD *)a1 + 10)
                                 + OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType))
  {
    if (*((double *)a1 + 1) != a2.n128_f64[0]
      || ((a2.n128_u64[0] = *((_QWORD *)a1 + 3), *((double *)a1 + 2) == a3) ? (v7 = a2.n128_f64[0] == a4) : (v7 = 0),
          !v7
       || static Date.timeIntervalSinceReferenceDate.getter(a2)
        - *(double *)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals] < 0.2))
    {
      v8 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v8, "begin");
      objc_msgSend(v8, "setDisableActions:", 1);
      v9 = *(void **)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer];
      v13.n128_f64[0] = static Date.timeIntervalSinceReferenceDate.getter(v10);
      v11 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals;
      v12 = v13.n128_f64[0]
          - *(double *)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals];
      v13.n128_u32[0] = 1.0;
      if (v12 < 0.2)
        v13.n128_f32[0] = static Date.timeIntervalSinceReferenceDate.getter(v13) - *(double *)&v4[v11];
      sub_10066F404(a1, v9, v13.n128_f32[0]);
      v14 = swift_allocObject(&unk_101274C40, 112, 7);
      v15 = *((_OWORD *)a1 + 3);
      *(_OWORD *)(v14 + 56) = *((_OWORD *)a1 + 2);
      *(_OWORD *)(v14 + 72) = v15;
      *(_OWORD *)(v14 + 88) = *((_OWORD *)a1 + 4);
      v16 = *((_OWORD *)a1 + 1);
      *(_OWORD *)(v14 + 24) = *(_OWORD *)a1;
      *(_QWORD *)(v14 + 16) = v4;
      *(_QWORD *)(v14 + 104) = *((_QWORD *)a1 + 10);
      *(_OWORD *)(v14 + 40) = v16;
      v23[4] = sub_10066FC34;
      v24 = v14;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = *(_QWORD *)"";
      v23[2] = sub_1005D2FC0;
      v23[3] = &unk_101274C58;
      v17 = _Block_copy(v23);
      v18 = v24;
      v19 = v5;
      sub_10066FC50((uint64_t)a1);
      objc_msgSend(v8, "setCompletionBlock:", v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);
      objc_msgSend(v8, "commit");
    }
  }
  else
  {
    v20 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v20, "begin");
    objc_msgSend(v20, "setDisableActions:", 1);
    v21 = *(void **)&v5[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer];
    v22 = *(void **)&v5[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer];
    objc_msgSend(v21, "setPath:", 0);
    objc_msgSend(v21, "setHidden:", 1);
    objc_msgSend(v22, "removeFromSuperlayer");
    objc_msgSend(v20, "commit");
  }
}

id sub_10066ED64(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  __n128 v8;
  uint64_t v9;
  double v10;
  __n128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  id v17;
  _QWORD v19[5];
  uint64_t v20;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = &v1[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState];
  *(_OWORD *)v5 = *(_OWORD *)(a1 + 8);
  *((_QWORD *)v5 + 2) = v4;
  v5[24] = 0;
  sub_10066E2D0();
  v6 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v6, "begin");
  objc_msgSend(v6, "setDisableActions:", 1);
  v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer];
  v11.n128_f64[0] = static Date.timeIntervalSinceReferenceDate.getter(v8);
  v9 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals;
  v10 = v11.n128_f64[0]
      - *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals];
  v11.n128_u32[0] = 1.0;
  if (v10 < 0.2)
    v11.n128_f32[0] = static Date.timeIntervalSinceReferenceDate.getter(v11) - *(double *)&v1[v9];
  sub_10066F404((unsigned __int8 *)a1, v7, v11.n128_f32[0]);
  v12 = swift_allocObject(&unk_101274C90, 112, 7);
  v13 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v12 + 72) = v13;
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(v12 + 40) = v14;
  v19[4] = sub_10066FC34;
  v20 = v12;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = *(_QWORD *)"";
  v19[2] = sub_1005D2FC0;
  v19[3] = &unk_101274CA8;
  v15 = _Block_copy(v19);
  v16 = v20;
  v17 = v2;
  sub_10066FC50(a1);
  objc_msgSend(v6, "setCompletionBlock:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  return objc_msgSend(v6, "commit");
}

void sub_10066EF14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  _BYTE v13[112];
  _BYTE v14[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState;
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24) < 2u)
  {
    if (qword_1013DD7D8 != -1)
      swift_once(&qword_1013DD7D8, sub_100A03DBC);
    swift_beginAccess(&static OS_os_log.crlPencilHover, v14, 0, 0);
    v2 = (void *)static OS_os_log.crlPencilHover;
    v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v3, v13);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v5 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = 0x776569766572702ALL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v5;
    *(_QWORD *)(inited + 64) = v5;
    *(_QWORD *)(inited + 72) = 0x676E6974697865;
    *(_QWORD *)(inited + 80) = 0xE700000000000000;
    v6 = v2;
    v8 = static os_log_type_t.debug.getter(v7);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "%@ %@", 5, 2, inited);
    swift_setDeallocating(inited);
    v9 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v9);

    *(_QWORD *)v1 = 0;
    *(_QWORD *)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
    *(_BYTE *)(v1 + 24) = 2;
    sub_10066E2D0();
    v10 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v10, "begin");
    objc_msgSend(v10, "setDisableActions:", 1);
    v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer);
    v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer);
    objc_msgSend(v11, "setPath:", 0);
    objc_msgSend(v11, "setHidden:", 1);
    objc_msgSend(v12, "removeFromSuperlayer");
    objc_msgSend(v10, "commit");
    *(_QWORD *)v1 = 1;
    *(_QWORD *)(v1 + 8) = 0;
    *(_QWORD *)(v1 + 16) = 0;
    *(_BYTE *)(v1 + 24) = 2;
    sub_10066E2D0();
  }
}

id sub_10066F16C()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer;
  v2 = objc_allocWithZone((Class)CAShapeLayer);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v5 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState];
  *(_QWORD *)v5 = 2;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  v5[24] = 2;
  v6 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals;
  *(double *)&v3[v6] = static Date.timeIntervalSinceReferenceDate.getter(v7);

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for CRLiOSPencilHoverToolPreviewer();
  return objc_msgSendSuper2(&v9, "init");
}

BOOL sub_10066F234(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_10066F264(uint64_t a1, uint64_t a2)
{
  return sub_10066FB4C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

id sub_10066F2A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilHoverToolPreviewer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSPencilHoverToolPreviewer()
{
  return objc_opt_self(_TtC8Freeform30CRLiOSPencilHoverToolPreviewer);
}

uint64_t getEnumTagSinglePayload for CRLiOSPencilHoverToolPreviewer.PreviewState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSPencilHoverToolPreviewer.PreviewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_10066F3C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10066F3D8(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverToolPreviewer.PreviewState()
{
  return &type metadata for CRLiOSPencilHoverToolPreviewer.PreviewState;
}

void sub_10066F404(unsigned __int8 *a1, void *a2, float a3)
{
  void *v3;
  void *v4;
  double v7;
  double v8;
  float v9;
  float v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t inited;
  unint64_t v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  float v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  double v33;
  uint64_t v35;
  id v36;
  CGColorRef CopyWithAlpha;
  uint64_t v38;
  unint64_t v39;
  _BYTE v40[112];
  _BYTE v41[32];

  v4 = v3;
  v7 = *((double *)a1 + 3);
  if (v7 + -0.8 > 0.0)
    v8 = (v7 + -0.8) / -0.2 + 1.0;
  else
    v8 = 1.0;
  v9 = v8;
  v10 = v9 * a3;
  v11 = *((double *)a1 + 6);
  CopyWithAlpha = CGColorCreateCopyWithAlpha(*((CGColorRef *)a1 + 4), v11);
  v12 = *((double *)a1 + 1);
  v13 = *((double *)a1 + 2);
  v35 = *a1;
  sub_10066F950(*a1);
  v36 = v14;
  objc_msgSend(v3, "setFillColor:", 0);
  objc_msgSend(v3, "setStrokeColor:", 0);
  *(float *)&v15 = v10;
  objc_msgSend(v3, "setOpacity:", v15);
  if (qword_1013DD7D8 != -1)
    swift_once(&qword_1013DD7D8, sub_100A03DBC);
  swift_beginAccess(&static OS_os_log.crlPencilHover, v41, 0, 0);
  v16 = (void *)static OS_os_log.crlPencilHover;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v17, v40);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v19 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = 0x776569766572702ALL;
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v38 = 0;
  v39 = 0xE000000000000000;
  v20 = v16;
  _StringGuts.grow(_:)(23);
  v21._countAndFlagsBits = 0x3A74657366664F7ALL;
  v21._object = (void *)0xE900000000000020;
  String.append(_:)(v21);
  v22._countAndFlagsBits = Double.description.getter(v7);
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x7974696361706F20;
  v23._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v23);
  objc_msgSend(v4, "opacity");
  Float.write<A>(to:)(&v38, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v24);
  v25 = v38;
  v26 = v39;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v19;
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(inited + 80) = v26;
  v28 = static os_log_type_t.debug.getter(v27);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v28, "%@ %@", 5, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v29);

  objc_msgSend(a2, "removeFromSuperlayer");
  v30 = (void *)*((_QWORD *)a1 + 9);
  if (!v30)
  {
    objc_msgSend(v4, "setLineWidth:", 0.5);
    objc_msgSend(v4, "setFillColor:", CopyWithAlpha);
    objc_msgSend(v4, "setStrokeColor:", CopyWithAlpha);
    __asm { BR              X9 }
  }
  v31 = v30;
  objc_msgSend(v36, "bounds");
  objc_msgSend(a2, "setFrame:");
  objc_msgSend(a2, "setPosition:", v12, v13);
  v32 = objc_msgSend(v31, "CGImage");
  objc_msgSend(a2, "setContents:", v32);

  *(float *)&v33 = v11;
  objc_msgSend(a2, "setOpacity:", v33);
  objc_msgSend(a2, "setContentsGravity:", kCAGravityResizeAspectFill);
  objc_msgSend(v4, "addSublayer:", a2);

  if (objc_msgSend(v4, "isHidden"))
    objc_msgSend(v4, "setHidden:", 0);

}

void sub_10066F950(char a1)
{
  __asm { BR              X10 }
}

id sub_10066F98C(double a1, double a2, double a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  id result;

  v3 = sub_10005FD98(a1, a2, a3);
  result = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithOvalInRect:", v3, v4, v5, v6);
  if (!result)
  {
    __break(1u);
    JUMPOUT(0x10066F9DCLL);
  }
  return result;
}

void sub_10066FA48(double a1, double a2)
{
  sub_1009DACFC(a1, a2);
}

id sub_10066FA68()
{
  sub_100757E04(&_mh_execute_header, (uint64_t)"previewPath(point:width:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverToolPreviewer.swift", 101, 2, 208, "Unsupported type should have been filtered out before preview.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"previewPath(point:width:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverToolPreviewer.swift", 101, 2u, 208, (uint64_t)"Unsupported type should have been filtered out before preview.", 62, 2u);
  return objc_msgSend(objc_allocWithZone((Class)CRLBezierPath), "init");
}

uint64_t sub_10066FB4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _BOOL4 v8;

  if (a4)
  {
    if (a4 != 1)
    {
      if (a3 | a2 | a1)
      {
        if (a1 != 1 || a3 | a2)
        {
          if (a8 == 2 && a5 == 2 && !(a7 | a6))
            return 1;
        }
        else if (a8 == 2 && a5 == 1 && !(a7 | a6))
        {
          return 1;
        }
      }
      else if (a8 == 2 && !(a7 | a6 | a5))
      {
        return 1;
      }
      return 0;
    }
    if (a8 != 1)
      return 0;
  }
  else if (a8)
  {
    return 0;
  }
  v8 = *(double *)&a1 == *(double *)&a5;
  if (*(double *)&a2 != *(double *)&a6)
    v8 = 0;
  return *(double *)&a3 == *(double *)&a7 && v8;
}

uint64_t sub_10066FC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10066FC48(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10066FC50(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 64);
  v4 = *(void **)(a1 + 80);
  v5 = *(id *)(a1 + 72);
  v6 = v4;
  v7 = v2;
  v8 = v3;
  return a1;
}

uint64_t sub_10066FC98()
{
  id *v0;

  return swift_deallocObject(v0, 112, 7);
}

void sub_10066FCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState;
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 24) = 1;
  sub_10066E2D0();
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverToolPreviewer.HoverPoint()
{
  return &type metadata for CRLiOSPencilHoverToolPreviewer.HoverPoint;
}

id sub_10066FD3C(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = a1;
  v4 = a2;
  v5 = sub_100D3ED9C(v3, v4);
  v6 = v5;
  if (*((_BYTE *)v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type) != 2)
  {
    v7 = v5;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(imageRep:asset:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2, 33, "Non image undownloaded asset should be only handled by CRLUndownloadedAssetDrawingHelper.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(imageRep:asset:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2u, 33, (uint64_t)"Non image undownloaded asset should be only handled by CRLUndownloadedAssetDrawingHelper.", 89, 2u);

  }
  return v6;
}

void sub_10066FE98(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  CGColor *v18;
  id v19;
  void *v20;
  const CGPath *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  NSString v26;
  Class isa;
  const __CFAttributedString *v28;
  const __CTLine *v29;
  CGFloat v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  void *v39;
  id v40;
  uint64_t v41;
  _BYTE v43[24];
  CGRect v44;
  CGRect BoundsWithOptions;

  v6 = v5;
  v12 = type metadata accessor for CGPathFillRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep);
  if (!Strong)
    return;
  v17 = (void *)Strong;
  CGContextSaveGState(a1);
  v18 = (CGColor *)objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_backgroundColor), "CGColor");
  CGContextSetFillColorWithColor(a1, v18);

  v44.origin.x = a2;
  v44.origin.y = a3;
  v44.size.width = a4;
  v44.size.height = a5;
  CGContextFillRect(a1, v44);
  v19 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithRect:", a2, a3, a4, a5);
  if (!v19)
  {
    __break(1u);
    goto LABEL_18;
  }
  v20 = v19;
  v21 = (const CGPath *)objc_msgSend(v19, "CGPath");

  if (!v21)
  {
LABEL_18:
    __break(1u);
    return;
  }
  CGContextAddPath(a1, v21);

  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for CGPathFillRule.winding(_:), v12);
  CGContextRef.clip(using:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (sub_1006708B0(a4, a5))
  {
    sub_100D40094(*(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type));
    v23 = v22;
    v24 = sub_100D40660();
    v25 = objc_allocWithZone((Class)NSAttributedString);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    type metadata accessor for Key(0);
    sub_1004BFA1C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v28 = (const __CFAttributedString *)objc_msgSend(v25, "initWithString:attributes:", v26, isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

    v29 = CTLineCreateWithAttributedString(v28);
    BoundsWithOptions = CTLineGetBoundsWithOptions(v29, 0);
    v30 = CGRectGetWidth(BoundsWithOptions)
        + *(double *)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding)
        + *(double *)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
    v31 = objc_msgSend(v17, "layout");
    v32 = objc_msgSend(v31, "geometry");
    objc_msgSend(v32, "size");
    v34 = v33;

    v35 = sub_10005FDDC();
    if (v30 <= v34)
      sub_1006705F0(a1, v35, v36, v37, v38);
    else
      sub_100670314(a1, v35, v36, v37, v38);

  }
  else
  {
    sub_100670314(a1, a2, a3, a4, a5);
  }
  CGContextRestoreGState(a1);
  v39 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset);
  if (v39)
  {
    sub_100412654(a1, v39);
  }
  else
  {
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v43, 0, 0);
    v40 = (id)static OS_os_log.assetManagement;
    v41 = static os_log_type_t.error.getter(v40);
    sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v41, "CRLImageUndowloadedAssetDrawingHelper: draw(in ctx, with originalImageRect) called without a valid Asset. This might mean your generated Image is not updating correctly", 168, 2, (uint64_t)_swiftEmptyArrayStorage);

    v17 = v40;
  }

}

void sub_100670314(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  void *v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *Strong;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  id v36;
  double v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  id v46;

  CGContextSaveGState(a1);
  v12 = sub_100D3F5E0(0x73697370696C6C65, 0xE800000000000000);
  if (v11)
  {
    v13 = v11;
    v14 = v12;
    v15 = sub_100061400(a2, a3, a4, a5);
    v17 = sub_10005FD98(v15, v16, v14);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v46 = v13;
    if (!sub_1006708B0(a4, a5))
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep);
      if (Strong)
      {
        v25 = Strong;
        v26 = objc_msgSend(Strong, "layout");

        if (v26)
        {
          v27 = objc_opt_self(CRLImageLayout);
          v28 = (void *)swift_dynamicCastObjCClass(v26, v27);
          if (v28 && (v29 = objc_msgSend(v28, "maskLayout")) != 0)
          {
            v30 = v29;
            v31 = objc_msgSend(v29, "geometry");
            objc_msgSend(v31, "frame");
            v33 = v32;
            v35 = v34;

            v36 = objc_msgSend(v30, "geometry");
            objc_msgSend(v36, "size");

            CGContextTranslateCTM(a1, v33, v35);
            v37 = sub_10005FDDC();
            v41 = sub_100061400(v37, v38, v39, v40);
            v17 = sub_10005FD98(v41, v42, v14);
            v19 = v43;
            v21 = v44;
            v23 = v45;
          }
          else
          {

          }
        }
      }
    }
    CGContextRef.draw(_:in:byTiling:)(v46, 0, v17, v19, v21, v23);
    CGContextRestoreGState(a1);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"drawImage(in:rect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2, 88, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawImage(in:rect:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2u, 88, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_1006705F0(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  NSString v14;
  Class isa;
  const __CFAttributedString *v16;
  const __CTLine *v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v22;
  double v23;
  double v24;
  double v25;
  void *Strong;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double tx;
  double v39;
  id v41;
  CGRect BoundsWithOptions;
  CGRect v43;

  tx = *(double *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
  v39 = a4 - (tx + tx);
  sub_100D40094(*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type));
  v11 = v10;
  v12 = sub_100D40660();
  v13 = objc_allocWithZone((Class)NSAttributedString);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = (const __CFAttributedString *)objc_msgSend(v13, "initWithString:attributes:", v14, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v17 = CTLineCreateWithAttributedString(v16);
  BoundsWithOptions = CTLineGetBoundsWithOptions(v17, 0);
  x = BoundsWithOptions.origin.x;
  y = BoundsWithOptions.origin.y;
  width = BoundsWithOptions.size.width;
  height = BoundsWithOptions.size.height;
  v22 = CGRectGetWidth(BoundsWithOptions);
  v43.origin.x = x;
  v43.origin.y = y;
  v43.size.width = width;
  v43.size.height = height;
  v23 = CGRectGetHeight(v43);

  if (v39 < v22)
    v23 = v23 + v23;
  sub_100061400(a2, a3, a4, a5);
  v25 = v24 + v23 * -0.5;
  CGContextSaveGState(a1);
  v41 = sub_100D3F978(a2, a3, a4, a5);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep);
  if (!Strong)
    goto LABEL_9;
  v27 = Strong;
  v28 = objc_msgSend(Strong, "info");

  if (!v28)
    goto LABEL_9;
  v29 = type metadata accessor for CRLImageItem(0);
  if (!swift_dynamicCastClass(v28, v29))
  {
    swift_unknownObjectRelease(v28);
    goto LABEL_9;
  }
  v30 = (void *)sub_1008D2EB8();
  v31 = v30;
  swift_unknownObjectRelease(v28);
  if (!v30)
  {
LABEL_9:
    v37 = tx;
    goto LABEL_10;
  }
  v32 = objc_msgSend(v31, "geometry");
  objc_msgSend(v32, "position");
  v34 = v33;
  v36 = v35;

  v37 = tx + v34;
  v25 = v25 + v36;
LABEL_10:
  CGContextTranslateCTM(a1, v37, v25);
  objc_msgSend(v41, "drawInContext:", a1);
  CGContextRestoreGState(a1);

}

BOOL sub_1006708B0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  unsigned __int8 v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v25;
  unsigned int v26;

  v5 = v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "info");

    if (v8)
    {
      v9 = type metadata accessor for CRLImageItem(0);
      if (swift_dynamicCastClass(v8, v9))
      {
        v10 = (void *)sub_1008D2EB8();
        v11 = v10;
        swift_unknownObjectRelease(v8);
        if (v10)
        {
          v12 = objc_msgSend(v11, "pathSource");
          v13 = objc_opt_self(CRLScalarPathSource);
          v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
          if (v14)
          {
            v15 = objc_msgSend(v14, "shouldShowKnob");

            if ((v15 & 1) != 0)
              return 0;
          }
          else
          {

            v25 = objc_msgSend(v11, "pathSource");
            v26 = objc_msgSend(v25, "isRectangular");

            if (!v26)
              return 0;
          }
        }
      }
      else
      {
        swift_unknownObjectRelease(v8);
      }
    }
  }
  v16 = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (!v16)
    return 1;
  v17 = v16;
  v18 = objc_msgSend(v16, "layout");
  v19 = objc_msgSend(v18, "geometry");

  objc_msgSend(v19, "size");
  v21 = v20;
  v23 = v22;

  return sub_10005FE30(v21, v23, a1, a2, 1.0);
}

id sub_100670AC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageUndownloadedAssetDrawingHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLImageUndownloadedAssetDrawingHelper()
{
  return objc_opt_self(_TtC8Freeform38CRLImageUndownloadedAssetDrawingHelper);
}

id sub_100670B48(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_prohibitsClustering] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_100670DD8(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLFreehandDrawingItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandFreehandDrawingProhibitClustering.swift", 115, 2, 27, "Unable to retrieve freehand drawing item.", 41, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve freehand drawing item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandFreehandDrawingProhibitClustering.swift", 115, 2u, 27, (uint64_t)"Unable to retrieve freehand drawing item.", 41, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    sub_10088D060(*(_BYTE *)(v5
                           + OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_prohibitsClustering));
    v14 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_100670FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_id;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_100671038()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandFreehandDrawingProhibitClustering(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1006710A8()
{
  return type metadata accessor for CRLCommandFreehandDrawingProhibitClustering(0);
}

uint64_t type metadata accessor for CRLCommandFreehandDrawingProhibitClustering(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EA1F8;
  if (!qword_1013EA1F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandFreehandDrawingProhibitClustering);
  return result;
}

uint64_t sub_1006710EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F01D20;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100671160(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 136) = a3;
  *(_QWORD *)(v4 + 144) = v3;
  *(_BYTE *)(v4 + 184) = a2;
  *(_QWORD *)(v4 + 128) = a1;
  return swift_task_switch(sub_100671180, 0, 0);
}

uint64_t sub_100671180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  CKFetchRecordZoneChangesOperation v7;
  objc_class *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  CKFetchRecordZoneChangesOperation *v21;
  _QWORD *v22;
  void *v24;
  Swift::OpaquePointer_optional v25;
  Swift::OpaquePointer_optional v26;

  v1 = *(unsigned __int8 *)(v0 + 184);
  v3 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  sub_1004B8930(0, &qword_1013EA330, CKFetchRecordZoneChangesOperation_ptr);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v5 + 32) = v3;
  v24 = (void *)v5;
  specialized Array._endMutation()(v5);
  v6 = v3;
  v25.value._rawValue = v24;
  v25.is_nil = 0;
  v7.super.super.super.super.isa = CKFetchRecordZoneChangesOperation.init(recordZoneIDs:configurationsByRecordZoneID:)(v25, v26).super.super.super.super.isa;
  *(CKFetchRecordZoneChangesOperation *)(v0 + 152) = v7;
  -[objc_class setQualityOfService:](v7.super.super.super.super.isa, "setQualityOfService:", v2);
  -[objc_class setQueuePriority:](v7.super.super.super.super.isa, "setQueuePriority:", 8);
  -[objc_class setShouldFetchAssetContents:](v7.super.super.super.super.isa, "setShouldFetchAssetContents:", v1);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  v8 = *(objc_class **)(v0 + 144);
  v9 = *(void **)(v0 + 128);
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 88, 0, 0);
  v10 = (void *)static OS_os_log.dataSync;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v11, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v13 = v10;
  v14 = objc_msgSend(v9, "zoneName");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v17;
  v19 = static os_log_type_t.default.getter(v18);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v19, "Fetching records for zoneID: %{public}@", 39, 2, inited);
  swift_setDeallocating(inited);
  v20 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v20);

  v21 = (CKFetchRecordZoneChangesOperation *)swift_task_alloc(32);
  *(_QWORD *)(v0 + 160) = v21;
  v21[2].super.super.super.super.isa = v7.super.super.super.super.isa;
  v21[3].super.super.super.super.isa = v8;
  v22 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 168) = v22;
  *v22 = v0;
  v22[1] = sub_10067140C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 112, 0, 0, 0xD000000000000032, 0x8000000100FC0320, sub_100673FF0, v21, &_s15FetchResultDataVN);
}

uint64_t sub_10067140C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1006714B0;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 160));
    v4 = sub_100671478;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100671478()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_1006714B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006714EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch(sub_100671508, 0, 0);
}

uint64_t sub_100671508()
{
  int8x16_t *v0;
  id v1;
  int8x16_t *v2;
  int8x16_t **v3;
  uint64_t v4;
  int8x16_t v6;

  v0[6].i64[1] = 0;
  v0[7].i64[0] = 0;
  v6 = v0[4];
  v0[6].i64[0] = v6.i64[0];
  v1 = (id)v6.i64[0];
  v2 = (int8x16_t *)swift_task_alloc(32);
  v0[7].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v6, v6, 8uLL);
  v3 = (int8x16_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[8].i64[0] = (uint64_t)v3;
  v4 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
  *v3 = v0;
  v3[1] = (int8x16_t *)sub_1006715E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(&v0[1], 0, 0, 0xD000000000000013, 0x8000000100FC0500, sub_1006742D8, v2, v4);
}

uint64_t sub_1006715E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1006716A0;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 120));
    v4 = sub_10067164C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10067164C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 16);

  v4 = swift_release(v2);
  return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v3, v4);
}

uint64_t sub_1006716A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  __n128 v6;
  id v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  __n128 v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  Class isa;
  id v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  __n128 v47;
  id v48;
  __n128 v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 24) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  type metadata accessor for CKError(0);
  v4 = v3;
  v5 = swift_dynamicCast(v0 + 32, v0 + 24, v2, v3, 6);
  v7 = *(id *)(v0 + 104);
  if (!v5)
  {
    v12 = *(_QWORD *)(v0 + 88);
    v14 = *(void **)(v0 + 96);
    swift_willThrow(v6);

    goto LABEL_6;
  }

  v8 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 144) = v8;
  v9 = sub_10067422C();
  v7 = v8;
  _BridgedStoredNSError.code.getter(v4, v9);
  v10 = *(_QWORD *)(v0 + 40);
  if (v10 > 0x24)
  {
LABEL_14:
    v35 = *(_QWORD *)(v0 + 136);

    swift_errorRelease(v35);
    v32 = *(void **)(v0 + 96);
    goto LABEL_15;
  }
  if (((1 << v10) & 0x117B040B20) != 0)
  {
    v12 = *(_QWORD *)(v0 + 88);
    v11 = *(void **)(v0 + 96);

    swift_willThrow(v13);
LABEL_6:

    v15 = swift_release(v12);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v15);
  }
  if (v10 != 14)
  {
    if (v10 == 21)
    {
      v17 = *(_QWORD *)(v0 + 72);
      v18 = objc_msgSend(*(id *)(v0 + 96), "recordID");
      *(_QWORD *)(v0 + 152) = v18;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v20 = swift_allocObject(v19, 40, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v20 + 32) = v18;
      v50 = v20;
      specialized Array._endMutation()(v20);
      v21 = objc_allocWithZone((Class)CKFetchRecordsOperation);
      sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
      v22 = v18;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v24 = objc_msgSend(v21, "initWithRecordIDs:", isa, swift_bridgeObjectRelease(v50).n128_f64[0]);
      *(_QWORD *)(v0 + 160) = v24;

      objc_msgSend(v24, "setQualityOfService:", 25);
      objc_msgSend(v24, "setQueuePriority:", 8);
      v25 = (_QWORD *)swift_task_alloc(48);
      *(_QWORD *)(v0 + 168) = v25;
      v25[2] = v24;
      v25[3] = v22;
      v25[4] = v17;
      v26 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 176) = v26;
      v27 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
      *v26 = v0;
      v26[1] = sub_100671B54;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 56, 0, 0, 0xD00000000000001ALL, 0x8000000100FC04E0, sub_10067451C, v25, v27);
    }
    goto LABEL_14;
  }
  v28 = related decl 'e' for CKErrorCode.serverRecord.getter(v7);
  if (!v28)
  {
LABEL_20:
    v43 = *(_QWORD *)(v0 + 136);
    v44 = *(_QWORD *)(v0 + 88);
    v45 = *(void **)(v0 + 96);

    v46 = v7;
    swift_willThrow(v47);

    swift_errorRelease(v43);
    v15 = swift_release(v44);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v15);
  }
  v29 = (void *)v28;
  v30 = objc_opt_self(CKShare);
  v31 = swift_dynamicCastObjCClass(v29, v30);
  if (!v31)
  {

    goto LABEL_20;
  }
  v32 = (void *)v31;
  (*(void (**)(void))(v0 + 80))();
  v33 = *(_QWORD *)(v0 + 136);
  v34 = *(void **)(v0 + 96);
  v48 = v29;

  swift_errorRelease(v33);
LABEL_15:
  v36 = *(_QWORD *)(v0 + 112);
  v37 = *(void **)(v0 + 144);
  if (v36 == 2)
  {
    v38 = *(_QWORD *)(v0 + 88);
    swift_willThrow(v49);

    v15 = swift_release(v38);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v15);
  }

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 112) = v36 + 1;
  *(_QWORD *)(v0 + 96) = v32;
  v39 = *(_QWORD *)(v0 + 72);
  v40 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 120) = v40;
  *(_QWORD *)(v40 + 16) = v39;
  *(_QWORD *)(v40 + 24) = v32;
  v41 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 128) = v41;
  v42 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
  *v41 = v0;
  v41[1] = sub_1006715E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000013, 0x8000000100FC0500, sub_1006742D8, v40, v42);
}

uint64_t sub_100671B54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100671DC0;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 168));
    v4 = sub_100671BC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100671BC0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 152);

  v2 = *(void **)(v0 + 56);
  v3 = objc_opt_self(CKShare);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  if (!v4)
  {
    v13 = *(_QWORD *)(v0 + 136);
    v14 = *(void **)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(void **)(v0 + 96);

    v17 = v14;
    swift_willThrow(v18);

    swift_errorRelease(v13);
    v19 = v15;
LABEL_7:
    v12 = swift_release(v19);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
  }
  v5 = (void *)v4;
  v6 = *(_QWORD *)(v0 + 184);
  (*(void (**)(void))(v0 + 80))();
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(void **)(v0 + 144);
  v10 = *(void **)(v0 + 96);
  if (v7)
  {
    v11 = *(_QWORD *)(v0 + 88);

    swift_errorRelease(v8);
    v12 = swift_release(v11);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
  }
  v20 = v2;

  swift_errorRelease(v8);
  v22 = *(_QWORD *)(v0 + 112);
  if (v22 == 2)
  {
    v23 = *(void **)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 88);
    swift_willThrow(v21);

    v19 = v24;
    goto LABEL_7;
  }

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 112) = v22 + 1;
  *(_QWORD *)(v0 + 96) = v5;
  v26 = *(_QWORD *)(v0 + 72);
  v27 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 120) = v27;
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v5;
  v28 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 128) = v28;
  v29 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
  *v28 = v0;
  v28[1] = sub_1006715E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000013, 0x8000000100FC0500, sub_1006742D8, v27, v29);
}

uint64_t sub_100671DC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(void **)(v0 + 96);

  swift_task_dealloc(v1);
  swift_errorRelease(v4);
  v7 = swift_release(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t sub_100671E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch(sub_100671E54, 0, 0);
}

uint64_t sub_100671E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  Class isa;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EEF400;
  v12 = v2;
  v11 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v11;
  specialized Array._endMutation()(v2);
  v3 = objc_allocWithZone((Class)CKFetchRecordsOperation);
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v4 = (id)v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v3, "initWithRecordIDs:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);
  *(_QWORD *)(v0 + 40) = v6;

  objc_msgSend(v6, "setQualityOfService:", 25);
  objc_msgSend(v6, "setQueuePriority:", 8);
  v7 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v11;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v8;
  v9 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  *v8 = v0;
  v8[1] = sub_100671FF0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001ALL, 0x8000000100FC04E0, sub_10067414C, v7, v9);
}

uint64_t sub_100671FF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100672090;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 48));
    v4 = sub_10067205C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10067205C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100672090()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1006720CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v5 = sub_1004B804C(&qword_1013EA358);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_101274E70, v10 + v7, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1006722C4(a3, (uint64_t)sub_100674344, v11);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_1006721B0(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((a2 & 1) != 0)
  {
    v15 = (uint64_t)a1;
    swift_errorRetain(a1);
    v7 = sub_1004B804C(&qword_1013EA358);
    CheckedContinuation.resume(throwing:)(&v15, v7);
  }
  else
  {
    v3 = objc_opt_self(CKShare);
    v4 = swift_dynamicCastObjCClass(a1, v3);
    if (v4)
    {
      v15 = v4;
      v5 = a1;
      v6 = sub_1004B804C(&qword_1013EA358);
      CheckedContinuation.resume(returning:)(&v15, v6);
    }
    else
    {
      type metadata accessor for CKError(0);
      v9 = v8;
      v14 = 1;
      v10 = a1;
      v11 = sub_1007AE6B0((uint64_t)_swiftEmptyArrayStorage);
      v12 = sub_10067422C();
      _BridgedStoredNSError.init(_:userInfo:)(&v15, &v14, v11, v9, v12);
      v14 = v15;
      v13 = sub_1004B804C(&qword_1013EA358);
      CheckedContinuation.resume(throwing:)(&v14, v13);
      sub_1004E1E08(a1, 0);
    }
  }
}

double sub_1006722C4(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Class isa;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;
  id v16;
  id v17;
  __n128 v18;
  double result;
  void *v20;
  Swift::OpaquePointer_optional v21;
  Swift::OpaquePointer_optional v22;

  v4 = v3;
  v8 = objc_msgSend(a1, "recordID");
  sub_1004B8930(0, &qword_1013EA360, CKModifyRecordsOperation_ptr);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v10 + 32) = a1;
  v20 = (void *)v10;
  specialized Array._endMutation()(v10);
  v11 = a1;
  v21.value._rawValue = v20;
  v21.is_nil = 0;
  isa = CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(v21, v22).super.super.super.super.isa;
  -[objc_class setQualityOfService:](isa, "setQualityOfService:", 25);
  -[objc_class setQueuePriority:](isa, "setQueuePriority:", 8);
  v13 = swift_allocObject(&unk_101274D90, 24, 7);
  *(_QWORD *)(v13 + 16) = _swiftEmptyDictionarySingleton;
  v14 = swift_retain(v13);
  CKModifyRecordsOperation.perRecordSaveBlock.setter(sub_100674520, v13, v14);
  v15 = (_QWORD *)swift_allocObject(&unk_101274E98, 56, 7);
  v15[2] = v13;
  v15[3] = v8;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = v11;
  v16 = v11;
  swift_retain(v13);
  v17 = v8;
  v18 = swift_retain(a3);
  CKModifyRecordsOperation.modifyRecordsResultBlock.setter(sub_1006743D0, v15, v18);
  objc_msgSend(v4, "addOperation:", isa);

  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_100672460(uint64_t a1, char a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t), uint64_t a6, void *a7)
{
  uint64_t v13;
  id v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  __n128 v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[2];
  _BYTE v44[72];
  _BYTE v45[24];

  swift_beginAccess(a3 + 16, v45, 32, 0);
  v13 = *(_QWORD *)(a3 + 16);
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = a4;
    v15 = sub_100843848((uint64_t)v14);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(v13 + 56) + 16 * v15;
      v18 = *(void **)v17;
      v19 = *(unsigned __int8 *)(v17 + 8);
      swift_endAccess(v45);
      sub_10059BC74(v18, v19);

      a5(v18, v19);
      sub_1004E1E08(v18, v19);
      return;
    }

  }
  swift_endAccess(v45);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    a5((void *)a1, 1);
    sub_1004E1DFC(a1, 1);
  }
  else
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v45, 0, 0);
    v20 = (void *)static OS_os_log.crlDefault;
    v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v21, v44);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v43[0] = 0x203A65707954;
    v43[1] = 0xE600000000000000;
    v23 = v20;
    v25._countAndFlagsBits = CKRecord.recordType.getter(v24);
    object = v25._object;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(object);
    v27._countAndFlagsBits = 0x203A444920;
    v27._object = (void *)0xE500000000000000;
    String.append(_:)(v27);
    v28 = objc_msgSend(a7, "recordID");
    v29 = objc_msgSend(v28, "recordName");

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    v33._countAndFlagsBits = v30;
    v33._object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v32);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v34 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v34;
    *(_QWORD *)(inited + 32) = 0x203A65707954;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v35 = static os_log_type_t.error.getter(v34);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v35, "Encountered internal CloudKit logic error when saving a record %{public}@", 73, 2, inited);
    swift_setDeallocating(inited);
    v36 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v36);

    type metadata accessor for CKError(0);
    v38 = v37;
    v42 = 1;
    v39 = sub_1007AE6B0((uint64_t)_swiftEmptyArrayStorage);
    v40 = sub_10067422C();
    _BridgedStoredNSError.init(_:userInfo:)(v43, &v42, v39, v38, v40);
    v41 = (void *)v43[0];
    a5((void *)v43[0], 1);

  }
}

double sub_100672754(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  double result;
  uint64_t v18;

  v8 = sub_1004B804C(&qword_1013EA348);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = swift_allocObject(&unk_101274D90, 24, 7);
  *(_QWORD *)(v11 + 16) = &_swiftEmptyDictionarySingleton;
  v12 = swift_retain(v11);
  CKFetchRecordsOperation.perRecordResultBlock.setter(sub_100674520, v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_101274E20, v14 + v10, v13 | 7);
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain(v11);
  v16 = a3;
  CKFetchRecordsOperation.fetchRecordsResultBlock.setter(sub_1006741D8, v15);
  objc_msgSend(a4, "addOperation:", a2);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_10067289C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  id v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[72];
  _QWORD v37[3];

  swift_beginAccess(a3 + 16, v37, 32, 0);
  v8 = *(_QWORD *)(a3 + 16);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_6;
  v9 = a4;
  v10 = sub_100843848((uint64_t)v9);
  if ((v11 & 1) == 0)
  {

LABEL_6:
    swift_endAccess(v37);
    if ((a2 & 1) == 0)
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v37, 0, 0);
      v15 = (void *)static OS_os_log.crlDefault;
      v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v16, v36);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v18 = v15;
      v19 = objc_msgSend(a4, "recordName");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      *(_QWORD *)(inited + 56) = &type metadata for String;
      v23 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v23;
      *(_QWORD *)(inited + 32) = v20;
      *(_QWORD *)(inited + 40) = v22;
      v24 = static os_log_type_t.error.getter(v23);
      sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v24, "Encountered internal CloudKit logic error when fetching a record ID: %{public}@", 79, 2, inited);
      swift_setDeallocating(inited);
      v25 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v25);

      type metadata accessor for CKError(0);
      v27 = v26;
      v34 = 1;
      v28 = sub_1007AE6B0((uint64_t)_swiftEmptyArrayStorage);
      v29 = sub_10067422C();
      _BridgedStoredNSError.init(_:userInfo:)(&v35, &v34, v28, v27, v29);
      v34 = v35;
      v30 = sub_1004B804C(&qword_1013EA348);
      v31 = &v34;
      return CheckedContinuation.resume(throwing:)(v31, v30);
    }
    v37[0] = a1;
    swift_errorRetain(a1);
LABEL_11:
    v30 = sub_1004B804C(&qword_1013EA348);
    v31 = v37;
    return CheckedContinuation.resume(throwing:)(v31, v30);
  }
  v12 = *(_QWORD *)(v8 + 56) + 16 * v10;
  v13 = *(void **)v12;
  v14 = *(_BYTE *)(v12 + 8);
  swift_endAccess(v37);
  sub_10059BC74(v13, v14);

  if ((v14 & 1) != 0)
  {
    v37[0] = v13;
    goto LABEL_11;
  }
  v37[0] = v13;
  v33 = sub_1004B804C(&qword_1013EA348);
  return CheckedContinuation.resume(returning:)(v37, v33);
}

double sub_100672B14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  double result;
  uint64_t v20;
  id v21;

  v21 = a3;
  v5 = sub_1004B804C(&qword_1013EA338);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_101274D90, 24, 7);
  *(_QWORD *)(v9 + 16) = _swiftEmptyDictionarySingleton;
  v10 = swift_allocObject(&unk_101274DB8, 24, 7);
  *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
  v11 = swift_retain(v9);
  CKFetchRecordZoneChangesOperation.recordWasChangedBlock.setter(sub_10067401C, v9, v11);
  v12 = swift_retain(v10);
  CKFetchRecordZoneChangesOperation.recordWithIDWasDeletedBlock.setter(sub_100674038, v10, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_101274DE0, v16 + 8, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v17 + v14, v8, v5);
  *(_QWORD *)(v17 + v15) = v9;
  *(_QWORD *)(v17 + v16) = v10;
  swift_retain(v9);
  v18 = swift_retain(v10);
  CKFetchRecordZoneChangesOperation.fetchRecordZoneChangesResultBlock.setter(sub_1006740D0, v17, v18);
  objc_msgSend(v21, "addOperation:", a2);
  swift_release(v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_100672CC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double **v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  double *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  double *v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v7 = (double **)(a4 + 16);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v19, 0, 0);
  v8 = (id)static OS_os_log.dataSync;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Fetching deletion", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess(v7, v18, 33, 0);
  v11 = *v7;
  v12 = a1;
  swift_bridgeObjectRetain(a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *v7 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_100D10FE0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *v7 = v11;
  }
  v15 = *((_QWORD *)v11 + 2);
  v14 = *((_QWORD *)v11 + 3);
  if (v15 >= v14 >> 1)
  {
    v11 = sub_100D10FE0((double *)(v14 > 1), v15 + 1, 1, v11);
    *v7 = v11;
  }
  *((_QWORD *)v11 + 2) = v15 + 1;
  v16 = &v11[3 * v15];
  *((_QWORD *)v16 + 4) = v12;
  *((_QWORD *)v16 + 5) = a2;
  *((_QWORD *)v16 + 6) = a3;
  return swift_endAccess(v18);
}

uint64_t sub_100672E38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  _BYTE v26[24];
  _QWORD v27[3];
  _BYTE v28[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v28, 0, 0);
  v9 = (id)static OS_os_log.dataSync;
  v11 = static os_log_type_t.default.getter(v10);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "fetchRecordZoneChangesResultBlock", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

  if ((a2 & 1) != 0)
  {
    v21 = (void *)static OS_os_log.dataSync;
    sub_100674140(a1, 1);
    v22 = v21;
    v23 = static os_log_type_t.error.getter(v22);
    sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v23, "fetchRecordZoneChangesResultBlock : failure", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

    v27[0] = a1;
    v24 = sub_1004B804C(&qword_1013EA338);
    return CheckedContinuation.resume(throwing:)(v27, v24);
  }
  else
  {
    v12 = (uint64_t *)(a4 + 16);
    v13 = (uint64_t *)(a5 + 16);
    v14 = (id)static OS_os_log.dataSync;
    v16 = static os_log_type_t.default.getter(v15);
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "fetchRecordZoneChangesResultBlock : success", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_beginAccess(v12, v27, 0, 0);
    v17 = *v12;
    swift_beginAccess(v13, v26, 0, 0);
    v18 = *v13;
    v25[0] = v17;
    v25[1] = v18;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    v19 = sub_1004B804C(&qword_1013EA338);
    return CheckedContinuation.resume(returning:)(v25, v19);
  }
}

uint64_t sub_10067301C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch(sub_10067303C, v5, 0);
}

uint64_t sub_10067303C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;

  v2 = v0[5];
  v1 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  v5 = objc_msgSend(objc_allocWithZone((Class)CKShare), "initWithRecordZoneID:", v0[2]);
  v0[8] = v5;
  v6 = static CKShare.SystemFieldKey.shareType.getter();
  v8 = v7;
  v19 = &type metadata for String;
  v20 = &protocol witness table for String;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKFreeformShareType);
  v18 = v9;
  v10 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v17, v6, v8, v10);
  v11 = (_QWORD *)swift_allocObject(&unk_101274E48, 56, 7);
  v0[9] = v11;
  v11[2] = v4;
  v11[3] = v3;
  v11[4] = v2;
  v11[5] = v1;
  v11[6] = v5;
  sub_10057939C(v2, v1);
  swift_bridgeObjectRetain(v3);
  v12 = v5;
  sub_100673324((int)v12, v4, v3, v2, v1, v12);
  v13 = objc_msgSend(*(id *)(v0[7] + 112), "privateCloudDatabase", v17, v18);
  v0[10] = v13;
  v14 = dword_1013EA354;
  swift_retain(v11);
  v15 = (_QWORD *)swift_task_alloc(v14);
  v0[11] = v15;
  *v15 = v0;
  v15[1] = sub_100673220;
  v15[10] = sub_1006742B8;
  v15[11] = v11;
  v15[8] = v12;
  v15[9] = v13;
  return swift_task_switch(sub_100671508, 0, 0);
}

uint64_t sub_100673220(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 56);
    v7 = sub_1006732E0;
  }
  else
  {
    v8 = *(_QWORD *)(v4 + 56);

    *(_QWORD *)(v4 + 104) = a1;
    v7 = sub_1006732A4;
    v6 = v8;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006732A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
}

uint64_t sub_1006732E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 64);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100673324(int a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, id a6)
{
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  void *v34;
  char v35[72];

  if (a3)
  {
    v11 = swift_bridgeObjectRetain(a3);
    v12 = static CKShare.SystemFieldKey.title.getter(v11);
    v14 = v13;
    v33 = &type metadata for String;
    v34 = &protocol witness table for String;
    v31 = a2;
    v32 = a3;
    v15 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v31, v12, v14, v15);
  }
  if (a5 >> 60 != 15)
  {
    sub_1004BE310(a4, a5);
    v17 = static CKShare.SystemFieldKey.thumbnailImageData.getter(v16);
    v19 = v18;
    v33 = &type metadata for Data;
    v34 = &protocol witness table for Data;
    v31 = a4;
    v32 = a5;
    sub_1004BE310(a4, a5);
    v20 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v31, v17, v19, v20);
    sub_1004BE2FC(a4, a5);
  }
  result = (uint64_t)objc_msgSend(a6, "size", v31, v32);
  if (result > 0x100000)
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, &v31, 0, 0);
    v22 = (void *)static OS_os_log.crlDefault;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v35);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = v22;
    v26 = objc_msgSend(a6, "size");
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v26;
    v27 = static os_log_type_t.error.getter(v26);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v27, "Guard CKShare size %d <= 1MB", 28, 2, inited);
    swift_setDeallocating(inited);
    v28 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v28);

    v29 = sub_1006743E4();
    swift_allocError(&type metadata for CRLZoneShareControllerError, v29, 0, 0);
    return swift_willThrow(v30);
  }
  return result;
}

uint64_t sub_100673590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1006735A8, v1, 0);
}

uint64_t sub_1006735A8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  _QWORD *v13;
  uint64_t v15;

  v2 = (void *)v0[2];
  v1 = v0[3];
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKRecordNameZoneWideShare);
  v5 = v4;
  v6 = v2;
  v7._countAndFlagsBits = v3;
  v7._object = v5;
  isa = CKRecordID.init(recordName:zoneID:)(v7, (CKRecordZoneID)v6).super.isa;
  v0[4] = isa;
  v0[5] = objc_msgSend(*(id *)(v1 + 112), "privateCloudDatabase");
  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v10 + 32) = isa;
  v15 = v10;
  specialized Array._endMutation()(v10);
  v0[6] = v15;
  v11 = async function pointer to CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)[1];
  v12 = isa;
  v13 = (_QWORD *)swift_task_alloc(v11);
  v0[7] = v13;
  *v13 = v0;
  v13[1] = sub_1006736D4;
  return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(_swiftEmptyArrayStorage, v15, 0, 1);
}

uint64_t sub_1006736D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  *(_QWORD *)(*(_QWORD *)v3 + 64) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = v6[3];
    v9 = sub_1006737AC;
  }
  else
  {
    v11 = (void *)v6[5];
    v10 = v6[6];
    v12 = v6[3];
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v10);

    v9 = sub_100673778;
    v8 = v12;
  }
  return swift_task_switch(v9, v8, 0);
}

uint64_t sub_100673778()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006737AC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006737EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_100673804, v1, 0);
}

uint64_t sub_100673804()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  char **v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  Swift::String v20;
  Class isa;
  _QWORD *v22;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 112);
  v2 = objc_msgSend(*(id *)(v0 + 16), "ownerName");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  if (v3)
    v7 = 0;
  else
    v7 = v5 == 0xE000000000000000;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0, 0xE000000000000000, 0) & 1) != 0)
    goto LABEL_13;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v3 == v8 && v5 == v9)
  {
    v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
    goto LABEL_13;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v8, v9, 0);
  v6 = swift_bridgeObjectRelease(v11).n128_u64[0];
  if ((v12 & 1) != 0)
  {
LABEL_13:
    v13 = &selRef_privateCloudDatabase;
    goto LABEL_14;
  }
  v13 = &selRef_sharedCloudDatabase;
LABEL_14:
  v14 = *(void **)(v0 + 16);
  v15 = objc_msgSend(v1, *v13, *(double *)&v6);
  *(_QWORD *)(v0 + 32) = v15;
  swift_bridgeObjectRelease(v5);
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKRecordNameZoneWideShare);
  v18 = v17;
  v19 = v14;
  v20._countAndFlagsBits = v16;
  v20._object = v18;
  isa = CKRecordID.init(recordName:zoneID:)(v20, (CKRecordZoneID)v19).super.isa;
  *(_QWORD *)(v0 + 40) = isa;
  v22 = (_QWORD *)swift_task_alloc(dword_1013EA344);
  *(_QWORD *)(v0 + 48) = v22;
  *v22 = v0;
  v22[1] = sub_1006739A8;
  v22[3] = isa;
  v22[4] = v15;
  return swift_task_switch(sub_100671E54, 0, 0);
}

uint64_t sub_1006739A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 48);
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = *(_QWORD *)(v3 + 24);
    v6 = sub_100673A84;
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 24);

    v6 = sub_100673A24;
    v5 = v7;
  }
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_100673A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);

  v2 = objc_opt_self(CKShare);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
  {

    v3 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_100673A84()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100673ABC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_100673AD4, v0, 0);
}

uint64_t sub_100673AD4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = *(void **)(v0[16] + 112);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100673B6C;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100673C7C;
  v4[3] = &unk_101274DF8;
  v4[4] = v3;
  objc_msgSend(v2, "fetchUserRecordIDWithCompletionHandler:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_100673B6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 136) = v2;
  if (v2)
    v3 = sub_100673C40;
  else
    v3 = sub_100673BCC;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 128), 0);
}

uint64_t sub_100673BCC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 120);
  v2 = objc_msgSend(v1, "recordName");

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v5);
}

uint64_t sub_100673C40()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100673C7C(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_1004B804C(&qword_1013E0210);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100673D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_100673D20, v1, 0);
}

uint64_t sub_100673D20()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v1 = objc_msgSend(*(id *)(v0 + 16), "currentUserParticipant");
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, "role"), v2, v3 == (id)1))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"leaveShare(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLZoneShareController.swift", 87, 2, 342, "Can not leave a share if you own it.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"leaveShare(_:)", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLZoneShareController.swift", 87, 2u, 342, (uint64_t)"Can not leave a share if you own it.", 36, 2u);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 32) = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + 112), "sharedCloudDatabase");
    v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
    v8 = objc_msgSend(v5, "recordID");
    *(_QWORD *)(v7 + 32) = v8;
    specialized Array._endMutation()(v8);
    *(_QWORD *)(v0 + 40) = v7;
    v9 = (_QWORD *)swift_task_alloc(async function pointer to CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)[1]);
    *(_QWORD *)(v0 + 48) = v9;
    *v9 = v0;
    v9[1] = sub_100673F00;
    return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(_swiftEmptyArrayStorage, v7, 0, 1);
  }
}

uint64_t sub_100673F00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 24);
    v5 = sub_100673F98;
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = sub_100673778;
    v4 = v6;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_100673F98()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLZoneShareController()
{
  return objc_opt_self(_TtC8Freeform22CRLZoneShareController);
}

double sub_100673FF0(uint64_t a1)
{
  uint64_t v1;

  return sub_100672B14(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100673FF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10067401C(void *a1, void *a2, char a3)
{
  uint64_t v3;

  return sub_1005D6918(a1, a2, a3 & 1, v3);
}

uint64_t sub_100674038(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100672CC0(a1, a2, a3, v3);
}

uint64_t sub_100674040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = sub_1004B804C(&qword_1013EA338);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1006740D0(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_1004B804C(&qword_1013EA338) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100672E38(a1, v4, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100674140(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRetain(result);
  return result;
}

double sub_10067414C(uint64_t a1)
{
  uint64_t v1;

  return sub_100672754(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100674158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EA348);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1006741D8(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;

  v4 = a2 & 1;
  sub_1004B804C(&qword_1013EA348);
  return sub_10067289C(a1, v4, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

unint64_t sub_10067422C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DE570;
  if (!qword_1013DE570)
  {
    type metadata accessor for CKError(255);
    result = swift_getWitnessTable(&unk_100EF1474, v1);
    atomic_store(result, (unint64_t *)&qword_1013DE570);
  }
  return result;
}

uint64_t sub_100674274()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_1004BBBC8(*(_QWORD *)(v0 + 32), v1);

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1006742B8(int a1)
{
  uint64_t v1;

  return sub_100673324(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(id *)(v1 + 48));
}

double sub_1006742D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1006720CC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1006742E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EA358);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100674344(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1004B804C(&qword_1013EA358);
  sub_1006721B0(a1, v3);
}

uint64_t sub_100674394()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1006743D0(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100672460(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_1006743E4()
{
  unint64_t result;

  result = qword_1013EA368;
  if (!qword_1013EA368)
  {
    result = swift_getWitnessTable(&unk_100F01E34, &type metadata for CRLZoneShareControllerError);
    atomic_store(result, (unint64_t *)&qword_1013EA368);
  }
  return result;
}

ValueMetadata *_s15FetchResultDataVMa()
{
  return &_s15FetchResultDataVN;
}

uint64_t storeEnumTagSinglePayload for CRLZoneShareControllerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100674478 + 4 * byte_100F01D40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100674498 + 4 * byte_100F01D45[v4]))();
}

_BYTE *sub_100674478(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100674498(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006744A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006744A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1006744B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1006744B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLZoneShareControllerError()
{
  return &type metadata for CRLZoneShareControllerError;
}

unint64_t sub_1006744D8()
{
  unint64_t result;

  result = qword_1013EA370;
  if (!qword_1013EA370)
  {
    result = swift_getWitnessTable(&unk_100F01E0C, &type metadata for CRLZoneShareControllerError);
    atomic_store(result, (unint64_t *)&qword_1013EA370);
  }
  return result;
}

id sub_100674528()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA380 = (uint64_t)result;
  return result;
}

id sub_100674570()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA388 = (uint64_t)result;
  return result;
}

id sub_1006745B8()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA390 = (uint64_t)result;
  return result;
}

id sub_100674600()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA398 = (uint64_t)result;
  return result;
}

void sub_100674648()
{
  qword_1013EA3A0 = 0x3FF0000000000000;
}

void sub_100674658()
{
  qword_1013EA3A8 = 0x4079000000000000;
}

void sub_100674668()
{
  qword_1013EA3B0 = 0x4043000000000000;
}

void sub_100674678()
{
  qword_1013EA3B8 = 0;
}

id sub_100674684()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA3C0 = (uint64_t)result;
  return result;
}

id sub_1006746CC()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA3C8 = (uint64_t)result;
  return result;
}

double sub_100674714(uint64_t a1)
{
  return sub_1006747A4(a1, &qword_1013DCC60, (double *)&qword_1013EA3F0, &qword_1013EA3D0, (uint64_t)sub_1006747E8);
}

double sub_100674738(uint64_t a1)
{
  return sub_1006747A4(a1, &qword_1013DCC68, (double *)&qword_1013EA3F8, &qword_1013EA3D8, (uint64_t)sub_1006747F8);
}

double sub_10067475C(uint64_t a1)
{
  return sub_1006747A4(a1, &qword_1013DCC70, (double *)&qword_1013EA400, &qword_1013EA3E0, (uint64_t)sub_100674808);
}

double sub_100674780(uint64_t a1)
{
  return sub_1006747A4(a1, &qword_1013DCC78, (double *)&qword_1013EA408, &qword_1013EA3E8, (uint64_t)sub_100674818);
}

double sub_1006747A4(uint64_t a1, _QWORD *a2, double *a3, _QWORD *a4, uint64_t a5)
{
  double result;

  if (*a2 != -1)
    swift_once(a2, a5);
  result = *a3;
  *a4 = *(_QWORD *)a3;
  return result;
}

void sub_1006747E8()
{
  qword_1013EA3F0 = 0x3FF0000000000000;
}

void sub_1006747F8()
{
  qword_1013EA3F8 = 0x4079000000000000;
}

void sub_100674808()
{
  qword_1013EA400 = 0x4043000000000000;
}

void sub_100674818()
{
  qword_1013EA408 = 0;
}

id sub_100674824()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA410 = (uint64_t)result;
  return result;
}

id sub_10067486C()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA418 = (uint64_t)result;
  return result;
}

void sub_1006748B4()
{
  qword_1013EA420 = 0x3FF0000000000000;
}

void sub_1006748C4()
{
  qword_1013EA428 = 0x407F400000000000;
}

void sub_1006748D8()
{
  qword_1013EA430 = 0x4047000000000000;
}

void sub_1006748E8()
{
  qword_1013EA438 = 0;
}

id sub_1006748F4()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA440 = (uint64_t)result;
  return result;
}

id sub_10067493C()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA448 = (uint64_t)result;
  return result;
}

id sub_100674984()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1013EA450 = (uint64_t)result;
  return result;
}

id sub_1006749CC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  qword_1013EA458 = (uint64_t)result;
  return result;
}

void sub_100674A04()
{
  qword_1013EA460 = 0x4018000000000000;
}

void sub_100674A14(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  objc_class *v24;
  id v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  double v33;
  double v34;
  id v35;
  id v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  double v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  char *v59;
  double v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t j;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t i;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  _QWORD *v85;
  id v86;
  char *v87;
  id v88;
  uint64_t v89;
  char *v90;
  id v91;
  id v92;
  char *v93;
  char *v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v5 = v4;
  v10 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v10);
  v104 = (uint64_t)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned __int8 *)(v5
                           + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_didCallPerformTransitionAnimation);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_didCallPerformTransitionAnimation) = 1;
  if (v12 == 1)
    goto LABEL_66;
  v101 = a3;
  v102 = a4;
  v13 = swift_allocObject(&unk_101275070, 24, 7);
  *(_QWORD *)(v13 + 16) = _swiftEmptyArrayStorage;
  v14 = (uint64_t *)(v13 + 16);
  objc_msgSend(a1, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  if (qword_1013DCCC8 != -1)
    swift_once(&qword_1013DCCC8, sub_1006749CC);
  v23 = (void *)qword_1013EA458;
  v24 = (objc_class *)type metadata accessor for EncapsulatedColorView();
  v25 = objc_allocWithZone(v24);
  v26 = sub_100678C00(v23, v16, v18, v20, v22);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
  v28 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v27 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v28 >= v27 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
  v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
  specialized Array._endMutation()(v29);
  v30 = v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect;
  v31 = *(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect + 32);
  v100 = v26;
  if ((v31 & 1) != 0)
  {
    v32 = 0;
  }
  else
  {
    v34 = *(double *)(v30 + 16);
    v33 = *(double *)(v30 + 24);
    if (qword_1013DCAD0 != -1)
      swift_once(&qword_1013DCAD0, sub_10058E1DC);
    v35 = objc_msgSend((id)qword_10147EA40, "UIColor");
    v36 = objc_allocWithZone(v24);
    v32 = sub_100678C00(v35, 0.0, 0.0, v34, v33);
    v37 = v32;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
    v39 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v38 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v39 >= v38 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
    v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
    specialized Array._endMutation()(v40);

  }
  v41 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
  v42 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
  if (v42)
  {
    v43 = v42;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
    v45 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v44 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v45 >= v44 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
    v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
    specialized Array._endMutation()(v46);

  }
  v47 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
  v49 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v48 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v49 >= v48 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
  v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
  specialized Array._endMutation()(v50);
  v97 = objc_msgSend(a1, "layer");
  if (v32)
    v98 = objc_msgSend(v32, "layer");
  else
    v98 = 0;
  v51 = *(void **)(v5 + v41);
  v103 = v13;
  if (v51)
    v96 = objc_msgSend(v51, "layer");
  else
    v96 = 0;
  v99 = v47;
  v95 = objc_msgSend(v47, "layer");
  if (v32)
  {
    v52 = qword_1013DCCD0;
    v53 = v32;
    if (v52 != -1)
      swift_once(&qword_1013DCCD0, sub_100674A04);
    v54 = *(double *)&qword_1013EA460;
    v55 = objc_msgSend(*(id *)&v53[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView], "layer");
    if (!v55)
      goto LABEL_64;
    v56 = v55;
    objc_msgSend(v55, "setCornerRadius:", v54);

  }
  v57 = *(void **)(v5 + v41);
  if (v57)
  {
    v58 = qword_1013DCCD0;
    v59 = v57;
    if (v58 != -1)
      swift_once(&qword_1013DCCD0, sub_100674A04);
    v60 = *(double *)&qword_1013EA460;
    v61 = objc_msgSend(*(id *)&v59[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView], "layer");
    if (!v61)
      goto LABEL_65;
    v62 = v61;
    objc_msgSend(v61, "setCornerRadius:", v60);

  }
  v63 = *v14;
  v64 = (unint64_t)v63 >> 62;
  if (*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing) != 1)
  {
LABEL_49:
    if (v64)
    {
      if (v63 < 0)
        v74 = v63;
      else
        v74 = v63 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v63, 2);
      v70 = _CocoaArrayWrapper.endIndex.getter(v74);
      if (v70)
        goto LABEL_51;
    }
    else
    {
      v70 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v63, 2);
      if (v70)
      {
LABEL_51:
        if (v70 >= 1)
        {
          for (i = 0; i != v70; ++i)
          {
            if ((v63 & 0xC000000000000001) != 0)
              v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v63);
            else
              v72 = *(id *)(v63 + 8 * i + 32);
            v73 = v72;
            objc_msgSend(a1, "addSubview:", v72);

          }
          goto LABEL_61;
        }
        __break(1u);
        goto LABEL_63;
      }
    }
LABEL_61:
    swift_bridgeObjectRelease_n(v63, 2);
    v75 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v104, 1, 1, v75);
    v76 = swift_allocObject(&unk_101275098, 24, 7);
    swift_unknownObjectWeakInit(v76 + 16);
    type metadata accessor for MainActor(0);
    v94 = v32;
    swift_retain(v76);
    v93 = v100;
    v92 = v99;
    v78 = v101;
    v77 = v102;
    sub_1004C0F54(v101, v102);
    v79 = v98;
    v100 = (char *)v98;
    v90 = v32;
    v80 = v103;
    swift_retain(v103);
    v91 = a1;
    v81 = v95;
    v82 = v97;
    v83 = v96;
    v99 = v96;
    v84 = static MainActor.shared.getter(v99);
    v85 = (_QWORD *)swift_allocObject(&unk_1012750C0, 128, 7);
    v85[2] = v84;
    v85[3] = &protocol witness table for MainActor;
    v85[4] = v76;
    v85[5] = v78;
    v86 = v92;
    v85[6] = v77;
    v85[7] = v86;
    v85[8] = v81;
    v85[9] = v82;
    v87 = v93;
    v85[10] = v93;
    v85[11] = v83;
    v85[12] = v79;
    v85[13] = v80;
    v88 = v91;
    v85[14] = v90;
    v85[15] = v88;
    swift_release(v76);
    v89 = sub_100521B98(v104, (uint64_t)&unk_1013EA648, (uint64_t)v85);

    swift_release(v89);
    swift_release(v80);
    return;
  }
  if (!v64)
  {
    v65 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v63, 2);
    if (v65)
      goto LABEL_38;
LABEL_48:
    swift_bridgeObjectRelease_n(v63, 2);
    goto LABEL_49;
  }
  if (v63 < 0)
    v69 = v63;
  else
    v69 = v63 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v63, 2);
  v65 = _CocoaArrayWrapper.endIndex.getter(v69);
  if (!v65)
    goto LABEL_48;
LABEL_38:
  if (v65 >= 1)
  {
    for (j = 0; j != v65; ++j)
    {
      if ((v63 & 0xC000000000000001) != 0)
        v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v63);
      else
        v67 = *(id *)(v63 + 8 * j + 32);
      v68 = v67;
      objc_msgSend(v67, "setHidden:", 1);

    }
    goto LABEL_48;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD0000000000000D3, 0x8000000100FC0920, "Freeform/CRLBoardViewControllerAnimatedTransition.swift", 55, 2, 279, 0);
  __break(1u);
}

uint64_t sub_10067523C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)(v8 + 1136) = v16;
  *(_OWORD *)(v8 + 1120) = v15;
  *(_OWORD *)(v8 + 1104) = v14;
  *(_OWORD *)(v8 + 1088) = v13;
  *(_QWORD *)(v8 + 1080) = a8;
  *(_QWORD *)(v8 + 1072) = a7;
  *(_QWORD *)(v8 + 1064) = a6;
  *(_QWORD *)(v8 + 1056) = a5;
  *(_QWORD *)(v8 + 1048) = a4;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 1144) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 1152) = v10;
  *(_QWORD *)(v8 + 1160) = v11;
  return swift_task_switch(sub_1006752DC, v10, v11);
}

uint64_t sub_1006752DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v8;

  v1 = *(_QWORD *)(v0 + 1048) + 16;
  swift_beginAccess(v1, v0 + 1008, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 1168) = Strong;
  if (Strong)
  {
    v3 = swift_allocObject(&unk_1012750E8, 17, 7);
    *(_QWORD *)(v0 + 1176) = v3;
    *(_BYTE *)(v3 + 16) = 0;
    v4 = sub_10060CD0C((uint64_t)_swiftEmptyArrayStorage, 0.0);
    *(_QWORD *)(v0 + 1032) = v5;
    *(double *)(v0 + 1040) = v4;
    v6 = (_QWORD *)swift_task_alloc(dword_1013EA4F4);
    *(_QWORD *)(v0 + 1184) = v6;
    *v6 = v0;
    v6[1] = sub_1006753A0;
    return sub_100677934();
  }
  else
  {
    v8 = swift_release(*(_QWORD *)(v0 + 1144));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
}

uint64_t sub_1006753A0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1184));
  return swift_task_switch(sub_1006753F0, *(_QWORD *)(v1 + 1152), *(_QWORD *)(v1 + 1160));
}

uint64_t sub_1006753F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  void *Strong;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  double *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  __n128 v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  double v122;
  __int128 *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v119 = (_QWORD *)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 1168);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(void **)(v0 + 1072);
  swift_release(*(_QWORD *)(v0 + 1144));
  sub_100675E1C(v3, (uint64_t)v3, v1, v2, v0 + 232);
  v120 = (_QWORD *)(v0 + 312);
  v123 = (__int128 *)(v0 + 392);
  if (*(_QWORD *)(v0 + 256))
  {
    sub_1004DB728((__int128 *)(v0 + 232), v0 + 192);
    v5 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 224);
    v6 = sub_1004BB5A4((_QWORD *)(v0 + 192), v5);
    *(_QWORD *)(v0 + 536) = v5;
    v7 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v0 + 544) = v7;
    v8 = sub_10050D1B0((_QWORD *)(v0 + 512));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, v6, v5);
    sub_10060CBC8((uint64_t)v8, (uint64_t *)(v0 + 1032), v5, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 512));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 192));
  }
  else
  {
    sub_1004CB800(v0 + 232, &qword_1013EA650);
  }
  v9 = *(_QWORD *)(v0 + 1168);
  v10 = *(void **)(v0 + 1136);
  v11 = *(void **)(v0 + 1096);
  v12 = *(void **)(v0 + 1088);
  v13 = *(void **)(v0 + 1080);
  v14 = *(_QWORD *)(v0 + 1072);
  objc_msgSend(v13, "sublayerTransform");
  objc_msgSend(v13, "anchorPoint");
  v117 = v16;
  v118 = v15;
  objc_msgSend(v13, "frame");
  v115 = v18;
  v116 = v17;
  objc_msgSend(v13, "setAnchorPoint:", 0.0, 0.0);
  sub_100676B68(v12, v13, 0, v9, v10, v119);
  v20 = *(_QWORD *)(v0 + 296);
  v19 = *(_QWORD *)(v0 + 304);
  v21 = sub_1004BB5A4(v119, v20);
  *(_QWORD *)(v0 + 336) = v20;
  v22 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v0 + 344) = v22;
  v23 = sub_10050D1B0(v120);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v21, v20);
  sub_10060CBC8((uint64_t)v23, (uint64_t *)(v0 + 1032), v20, v22);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v120);
  sub_100675E1C(v11, v14, v9, (uint64_t)v11, (uint64_t)v123);
  v24 = (uint64_t *)(v0 + 1032);
  if (*(_QWORD *)(v0 + 416))
  {
    sub_1004DB728(v123, v0 + 352);
    v25 = *(_QWORD *)(v0 + 376);
    v26 = *(_QWORD *)(v0 + 384);
    v27 = sub_1004BB5A4((_QWORD *)(v0 + 352), v25);
    *(_QWORD *)(v0 + 496) = v25;
    v28 = *(_QWORD *)(v26 + 24);
    *(_QWORD *)(v0 + 504) = v28;
    v29 = sub_10050D1B0((_QWORD *)(v0 + 472));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v29, v27, v25);
    sub_10060CBC8((uint64_t)v29, (uint64_t *)(v0 + 1032), v25, v28);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 472));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 352));
  }
  else
  {
    sub_1004CB800((uint64_t)v123, &qword_1013EA650);
  }
  v30 = *(_QWORD *)(v0 + 1168);
  v31 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
  v32 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
  if (v32)
  {
    v33 = *(_QWORD *)(v0 + 1096);
    v34 = *(_QWORD *)(v0 + 1072);
    v35 = v32;
    sub_100675E1C(v35, v34, v30, v33, v0 + 592);
    if (*(_QWORD *)(v0 + 616))
    {
      sub_1004DB728((__int128 *)(v0 + 592), v0 + 912);
      v36 = *(_QWORD *)(v0 + 936);
      v37 = *(_QWORD *)(v0 + 944);
      v38 = sub_1004BB5A4((_QWORD *)(v0 + 912), v36);
      *(_QWORD *)(v0 + 576) = v36;
      v39 = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v0 + 584) = v39;
      v40 = sub_10050D1B0((_QWORD *)(v0 + 552));
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v40, v38, v36);
      v41 = (uint64_t)v40;
      v24 = (uint64_t *)(v0 + 1032);
      sub_10060CBC8(v41, (uint64_t *)(v0 + 1032), v36, v39);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 552));
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 912));
    }
    else
    {

      sub_1004CB800(v0 + 592, &qword_1013EA650);
    }
    v42 = *(_QWORD *)(v30 + v31);
    v30 = *(_QWORD *)(v0 + 1168);
    if (v42)
    {
      v43 = *(void **)(v0 + 1104);
      if (v43)
      {
        v44 = *(void **)(v0 + 1136);
        v45 = *(void **)(v0 + 1088);
        v46 = v43;
        objc_msgSend(v46, "setAnchorPoint:", 0.0, 0.0);
        sub_100676B68(v45, v46, 1, v30, v44, (_QWORD *)(v0 + 832));
        v47 = *(_QWORD *)(v0 + 856);
        v48 = *(_QWORD *)(v0 + 864);
        v49 = sub_1004BB5A4((_QWORD *)(v0 + 832), v47);
        *(_QWORD *)(v0 + 896) = v47;
        v50 = *(_QWORD *)(v48 + 24);
        *(_QWORD *)(v0 + 904) = v50;
        v51 = sub_10050D1B0((_QWORD *)(v0 + 872));
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v51, v49, v47);
        sub_10060CBC8((uint64_t)v51, v24, v47, v50);

        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 872));
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 832));
        v30 = *(_QWORD *)(v0 + 1168);
      }
    }
  }
  v52 = *(void **)(v0 + 1112);
  if (v52)
  {
    v53 = *(void **)(v0 + 1136);
    v54 = *(void **)(v0 + 1088);
    v55 = v52;
    objc_msgSend(v55, "setAnchorPoint:", 0.0, 0.0);
    sub_100676B68(v54, v55, 0, v30, v53, (_QWORD *)(v0 + 752));
    v56 = *(_QWORD *)(v0 + 776);
    v57 = *(_QWORD *)(v0 + 784);
    v58 = sub_1004BB5A4((_QWORD *)(v0 + 752), v56);
    *(_QWORD *)(v0 + 816) = v56;
    v59 = *(_QWORD *)(v57 + 24);
    *(_QWORD *)(v0 + 824) = v59;
    v60 = sub_10050D1B0((_QWORD *)(v0 + 792));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v60, v58, v56);
    sub_10060CBC8((uint64_t)v60, v24, v56, v59);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 792));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 752));
    v30 = *(_QWORD *)(v0 + 1168);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v30 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemView);
  if (Strong)
  {
    v62 = Strong;
    sub_100675E1C(Strong, *(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1168), *(_QWORD *)(v0 + 1096), v0 + 672);
    if (*(_QWORD *)(v0 + 696))
    {
      sub_1004DB728((__int128 *)(v0 + 672), v0 + 632);
      v63 = *(_QWORD *)(v0 + 656);
      v64 = *(_QWORD *)(v0 + 664);
      v65 = sub_1004BB5A4((_QWORD *)(v0 + 632), v63);
      *(_QWORD *)(v0 + 736) = v63;
      v66 = *(_QWORD *)(v64 + 24);
      *(_QWORD *)(v0 + 744) = v66;
      v67 = sub_10050D1B0((_QWORD *)(v0 + 712));
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v67, v65, v63);
      sub_10060CBC8((uint64_t)v67, v24, v63, v66);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 712));
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 632));
    }
    else
    {

      sub_1004CB800(v0 + 672, &qword_1013EA650);
    }
  }
  *(_BYTE *)(*(_QWORD *)(v0 + 1176) + 16) = 1;
  v68 = *(_QWORD *)(v0 + 1032);
  v69 = *(_QWORD *)(v68 + 16);
  if (v69)
  {
    v70 = (_QWORD *)(v68 + 32);
    swift_bridgeObjectRetain(v68);
    do
    {
      v71 = v70[3];
      v72 = v70[4];
      sub_1004BB5A4(v70, v71);
      v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 40))(v71, v72);
      sub_10061FCD8(v73);
      v70 += 5;
      --v69;
    }
    while (v69);
    swift_bridgeObjectRelease(v68);
  }
  v74 = _swiftEmptyArrayStorage[2];
  v114 = v0 + 984;
  if (v74 != 0.0)
  {
    v75 = (_QWORD *)(v0 + 432);
    v76 = (_QWORD *)(v0 + 952);
    v77 = v0 + 16;
    v78 = v0 + 104;
    v79 = &_swiftEmptyArrayStorage[4];
    v121 = v0;
    v124 = (_QWORD *)(v0 + 952);
    do
    {
      sub_1004E90B0((uint64_t)v79, (uint64_t)v75);
      v80 = *(_QWORD *)(v0 + 456);
      v81 = *(_QWORD *)(v0 + 464);
      sub_1004BB5A4(v75, v80);
      (*(void (**)(uint64_t, uint64_t))(v81 + 80))(v80, v81);
      if (*(_QWORD *)(v0 + 96))
      {
        v82 = *(_OWORD *)(v77 + 48);
        *(_OWORD *)(v78 + 32) = *(_OWORD *)(v77 + 32);
        *(_OWORD *)(v78 + 48) = v82;
        *(_OWORD *)(v78 + 64) = *(_OWORD *)(v77 + 64);
        *(_QWORD *)(v78 + 80) = *(_QWORD *)(v77 + 80);
        v83 = *(_OWORD *)(v77 + 16);
        *(_OWORD *)v78 = *(_OWORD *)v77;
        *(_OWORD *)(v78 + 16) = v83;
        v84 = *(_QWORD *)(v0 + 456);
        v85 = *(_QWORD *)(v0 + 464);
        sub_1004BB5A4(v75, v84);
        v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 64))(v84, v85);
        if (v86)
        {
          v87 = (void *)v86;
          sub_1004CB7BC(v78, (uint64_t)v76, &qword_1013E0230);
          v88 = *(_QWORD *)(v0 + 976);
          if (v88)
          {
            v89 = sub_1004BB5A4(v76, *(_QWORD *)(v0 + 976));
            v90 = *(_QWORD *)(v88 - 8);
            v91 = swift_task_alloc((*(_QWORD *)(v90 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(uint64_t, _QWORD *, uint64_t))(v90 + 16))(v91, v89, v88);
            v92 = _bridgeAnythingToObjectiveC<A>(_:)(v91, v88);
            (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v91, v88);
            swift_task_dealloc(v91);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v124);
          }
          else
          {
            v92 = 0;
          }
          v93 = *(_QWORD *)(v121 + 184);
          swift_bridgeObjectRetain(v93);
          v94 = String._bridgeToObjectiveC()();
          objc_msgSend(v87, "setValue:forKeyPath:", v92, v94, swift_bridgeObjectRelease(v93).n128_f64[0]);

          v95 = v92;
          v0 = v121;
          swift_unknownObjectRelease(v95);

          v76 = v124;
        }
        sub_1004E9164((_QWORD *)v78);
      }
      else
      {
        sub_1004CB800(v77, (uint64_t *)&unk_1013F04B0);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v75);
      v79 += 5;
      --*(_QWORD *)&v74;
    }
    while (v74 != 0.0);
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v96 = *(_QWORD *)(v0 + 1176);
  v97 = *(void **)(v0 + 1168);
  v98 = *(void **)(v0 + 1128);
  v99 = *(_QWORD *)(v0 + 1120);
  v100 = *(void **)(v0 + 1096);
  v101 = *(void **)(v0 + 1080);
  v102 = *(_QWORD *)(v0 + 1064);
  v103 = *(_QWORD *)(v0 + 1056);
  v113 = *(_QWORD *)(v0 + 1032);
  v122 = *(double *)(v0 + 1040);
  v104 = (_QWORD *)swift_allocObject(&unk_101275110, 232, 7);
  v104[2] = v97;
  v104[3] = v101;
  v104[4] = v125;
  v104[5] = v126;
  v104[6] = v127;
  v104[7] = v128;
  v104[8] = v129;
  v104[9] = v130;
  v104[10] = v131;
  v104[11] = v132;
  v104[12] = v133;
  v104[13] = v134;
  v104[14] = v135;
  v104[15] = v136;
  v104[16] = v137;
  v104[17] = v138;
  v104[18] = v139;
  v104[19] = v140;
  v104[20] = v118;
  v104[21] = v117;
  v104[22] = v116;
  v104[23] = v115;
  v104[24] = v98;
  v104[25] = v100;
  v104[26] = v103;
  v104[27] = v102;
  v104[28] = v96;
  swift_retain(v99);
  v105 = v97;
  v106 = v101;
  v107 = v100;
  sub_1004C0F54(v103, v102);
  v108 = v98;
  swift_retain(v96);
  sub_10074EFF8(0, 1, 1, (uint64_t)sub_1006791F0, v99, (uint64_t)sub_10067924C, (uint64_t)v104, v113, v122);
  swift_bridgeObjectRelease(v113);
  swift_release(v99);
  swift_release(v104);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v119);
  v109 = swift_beginAccess(v96 + 16, v114, 0, 0);
  if ((*(_BYTE *)(v96 + 16) & 1) == 0 && v103)
    (*(void (**)(_QWORD, __n128))(v0 + 1056))(0, v109);
  v110 = *(_QWORD *)(v0 + 1176);

  v111 = swift_release(v110);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v111);
}

void sub_100675E1C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  int v11;
  int *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v21;
  uint64_t v22;
  int v23;
  int *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t Strong;
  void *v29;
  id v30;
  char v31;
  int v32;
  int *v33;
  uint64_t v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  int *v40;
  uint64_t v41;
  id v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  int *v57;
  char *v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  id v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  id v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v96[32];
  char v97;

  v10 = objc_msgSend(a1, "layer");
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a2) & 1) == 0)
  {
    if ((static NSObject.== infix(_:_:)(a1, a4) & 1) != 0)
    {
      v22 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
      v23 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
      v24 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
      *(_QWORD *)(a5 + 24) = v24;
      *(_QWORD *)(a5 + 32) = sub_1004B7878(&qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
      v13 = sub_10050D1B0((_QWORD *)a5);
      if (!v22)
      {
        if (v23)
        {
          v96[0] = 0x3E4CCCCD00000000;
          v97 = 6;
          v70 = qword_1013DCC80;
          v71 = v10;
          if (v70 != -1)
            swift_once(&qword_1013DCC80, sub_100674824);
          v72 = (void *)qword_1013EA410;
        }
        else
        {
          v96[0] = 1045220557;
          v97 = 6;
          v85 = qword_1013DCCB0;
          v71 = v10;
          if (v85 != -1)
            swift_once(&qword_1013DCCB0, sub_1006748F4);
          v72 = (void *)qword_1013EA440;
        }
        v16 = v72;
        UUID.init()(v16);
        v86 = (char *)v13 + v24[6];
        swift_unknownObjectWeakInit(v86);
        v87 = (char *)v13 + v24[7];
        v88 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
        v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56);
        v89(v87, 1, 1, v88);
        v89((char *)v13 + v24[8], 1, 1, v88);
        swift_unknownObjectWeakAssign(v86, v71);

        sub_1004E9198(v96, v13 + 3);
        v21 = xmmword_100F01EE0;
        goto LABEL_59;
      }
      if (!v23)
      {
        v96[0] = 1045220557;
        v97 = 6;
        v79 = qword_1013DCC30;
        v80 = v10;
        if (v79 != -1)
          swift_once(&qword_1013DCC30, sub_100674684);
        v16 = (id)qword_1013EA3C0;
        UUID.init()(v16);
        v81 = (char *)v13 + v24[6];
        swift_unknownObjectWeakInit(v81);
        v82 = (char *)v13 + v24[7];
        v83 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
        v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56);
        v84(v82, 1, 1, v83);
        v84((char *)v13 + v24[8], 1, 1, v83);
        swift_unknownObjectWeakAssign(v81, v80);

        sub_1004E9198(v96, v13 + 3);
        v21 = xmmword_100F01ED0;
        goto LABEL_59;
      }
      v96[0] = 0x3E4CCCCD00000000;
      v97 = 6;
      v25 = qword_1013DCBF0;
      v26 = v10;
      if (v25 != -1)
        swift_once(&qword_1013DCBF0, sub_100674528);
      v27 = (void *)qword_1013EA380;
      goto LABEL_31;
    }
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemView);
    if (Strong
      && (v29 = (void *)Strong,
          sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr),
          v30 = a1,
          v31 = static NSObject.== infix(_:_:)(v30, v29),
          v30,
          v30,
          v29,
          (v31 & 1) != 0))
    {
      if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView))
      {
        v32 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
        v33 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
        *(_QWORD *)(a5 + 24) = v33;
        *(_QWORD *)(a5 + 32) = sub_1004B7878(&qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
        v13 = sub_10050D1B0((_QWORD *)a5);
        if (v32 == 1)
        {
          v96[0] = 1065353216;
          v97 = 6;
          v34 = qword_1013DCBF8;
          v35 = v10;
          if (v34 != -1)
            swift_once(&qword_1013DCBF8, sub_100674570);
          v16 = (id)qword_1013EA388;
          UUID.init()(v16);
          v36 = (char *)v13 + v33[6];
          swift_unknownObjectWeakInit(v36);
          v37 = (char *)v13 + v33[7];
          v38 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
          v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
          v39(v37, 1, 1, v38);
          v39((char *)v13 + v33[8], 1, 1, v38);
          swift_unknownObjectWeakAssign(v36, v35);

          sub_1004E9198(v96, v13 + 3);
          v21 = xmmword_100F01EB0;
        }
        else
        {
          v96[0] = 0x3F80000000000000;
          v97 = 6;
          v90 = qword_1013DCC38;
          v91 = v10;
          if (v90 != -1)
            swift_once(&qword_1013DCC38, sub_1006746CC);
          v16 = (id)qword_1013EA3C8;
          UUID.init()(v16);
          v92 = (char *)v13 + v33[6];
          swift_unknownObjectWeakInit(v92);
          v93 = (char *)v13 + v33[7];
          v94 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
          v95 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56);
          v95(v93, 1, 1, v94);
          v95((char *)v13 + v33[8], 1, 1, v94);
          swift_unknownObjectWeakAssign(v92, v91);

          sub_1004E9198(v96, v13 + 3);
          v21 = xmmword_100F01EA0;
        }
        goto LABEL_59;
      }
    }
    else
    {
      v47 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
      v48 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
      if (!v48
        || (sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr),
            v49 = a1,
            v50 = v48,
            v51 = static NSObject.== infix(_:_:)(v49, v50),
            v49,
            v50,
            (v51 & 1) == 0))
      {
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x8000000100FC0AB0, "Freeform/CRLBoardViewControllerAnimatedTransition.swift", 55, 2, 551, 0);
        __break(1u);
        return;
      }
      if (*(_QWORD *)(a3 + v47)
        && *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing) == 1)
      {
        v24 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
        *(_QWORD *)(a5 + 24) = v24;
        *(_QWORD *)(a5 + 32) = sub_1004B7878(&qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
        v13 = sub_10050D1B0((_QWORD *)a5);
        v96[0] = 1065353216;
        v97 = 6;
        v52 = qword_1013DCC00;
        v26 = v10;
        if (v52 != -1)
          swift_once(&qword_1013DCC00, sub_1006745B8);
        v27 = (void *)qword_1013EA390;
LABEL_31:
        v16 = v27;
        UUID.init()(v16);
        v53 = (char *)v13 + v24[6];
        swift_unknownObjectWeakInit(v53);
        v54 = (char *)v13 + v24[7];
        v55 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
        v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
        v56(v54, 1, 1, v55);
        v56((char *)v13 + v24[8], 1, 1, v55);
        swift_unknownObjectWeakAssign(v53, v26);

        sub_1004E9198(v96, v13 + 3);
        v21 = xmmword_100F01EC0;
LABEL_59:
        *(_OWORD *)(v13 + 1) = v21;
        *v13 = v16;
        v13[36] = 0;
        *((_DWORD *)v13 + 74) = 131586;
        return;
      }
    }

    *(_QWORD *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return;
  }
  v11 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
  if (!*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView))
  {
    v40 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
    *(_QWORD *)(a5 + 24) = v40;
    *(_QWORD *)(a5 + 32) = sub_1004B7878(&qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
    v13 = sub_10050D1B0((_QWORD *)a5);
    if (v11)
    {
      v96[0] = 0x3F80000000000000;
      v97 = 6;
      v41 = qword_1013DCC88;
      v42 = v10;
      if (v41 != -1)
        swift_once(&qword_1013DCC88, sub_10067486C);
      v16 = (id)qword_1013EA418;
      UUID.init()(v16);
      v43 = (char *)v13 + v40[6];
      swift_unknownObjectWeakInit(v43);
      v44 = (char *)v13 + v40[7];
      v45 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
      v46(v44, 1, 1, v45);
      v46((char *)v13 + v40[8], 1, 1, v45);
      swift_unknownObjectWeakAssign(v43, v42);

      sub_1004E9198(v96, v13 + 3);
      v21 = xmmword_100F01F10;
    }
    else
    {
      v96[0] = 1065353216;
      v97 = 6;
      v73 = qword_1013DCCB8;
      v74 = v10;
      if (v73 != -1)
        swift_once(&qword_1013DCCB8, sub_10067493C);
      v16 = (id)qword_1013EA448;
      UUID.init()(v16);
      v75 = (char *)v13 + v40[6];
      swift_unknownObjectWeakInit(v75);
      v76 = (char *)v13 + v40[7];
      v77 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
      v78(v76, 1, 1, v77);
      v78((char *)v13 + v40[8], 1, 1, v77);
      swift_unknownObjectWeakAssign(v75, v74);

      sub_1004E9198(v96, v13 + 3);
      v21 = xmmword_100F01F00;
    }
    goto LABEL_59;
  }
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
  {
    v12 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
    *(_QWORD *)(a5 + 24) = v12;
    *(_QWORD *)(a5 + 32) = sub_1004B7878(&qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
    v13 = sub_10050D1B0((_QWORD *)a5);
    v96[0] = 0x3F80000000000000;
    v97 = 6;
    v14 = qword_1013DCC08;
    v15 = v10;
    if (v14 != -1)
      swift_once(&qword_1013DCC08, sub_100674600);
    v16 = (id)qword_1013EA398;
    UUID.init()(v16);
    v17 = (char *)v13 + v12[6];
    swift_unknownObjectWeakInit(v17);
    v18 = (char *)v13 + v12[7];
    v19 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
    v20(v18, 1, 1, v19);
    v20((char *)v13 + v12[8], 1, 1, v19);
    swift_unknownObjectWeakAssign(v17, v15);

    sub_1004E9198(v96, v13 + 3);
    v21 = xmmword_100F01EF0;
    goto LABEL_59;
  }
  v57 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  *(_QWORD *)(a5 + 24) = v57;
  *(_QWORD *)(a5 + 32) = sub_1004B7878((unint64_t *)&unk_1013EA660, type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&unk_100F33140);
  v58 = (char *)sub_10050D1B0((_QWORD *)a5);
  v96[0] = 1065353216;
  v97 = 6;
  v59 = qword_1013DCC50;
  v60 = v10;
  v61 = v60;
  if (v59 != -1)
    v60 = (id)swift_once(&qword_1013DCC50, sub_10067475C);
  v62 = qword_1013EA3E0;
  if (qword_1013DCC58 != -1)
    v60 = (id)swift_once(&qword_1013DCC58, sub_100674780);
  v63 = qword_1013EA3E8;
  if (qword_1013DCC40 != -1)
    v60 = (id)swift_once(&qword_1013DCC40, sub_100674714);
  v64 = qword_1013EA3D0;
  if (qword_1013DCC48 != -1)
    v60 = (id)swift_once(&qword_1013DCC48, sub_100674738);
  v65 = qword_1013EA3D8;
  UUID.init()(v60);
  v66 = &v58[v57[6]];
  swift_unknownObjectWeakInit(v66);
  v67 = &v58[v57[7]];
  v68 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
  v69(v67, 1, 1, v68);
  v69(&v58[v57[8]], 1, 1, v68);
  swift_unknownObjectWeakAssign(v66, v61);

  sub_1004E9198(v96, v58 + 40);
  *((_QWORD *)v58 + 4) = 0;
  *(_QWORD *)v58 = v62;
  *((_QWORD *)v58 + 1) = v63;
  *((_QWORD *)v58 + 2) = v64;
  *((_QWORD *)v58 + 3) = v65;
  *((_QWORD *)v58 + 38) = 0;
  *((_DWORD *)v58 + 78) = 131586;
}

_QWORD *sub_100676B68@<X0>(id a1@<X1>, void *a2@<X0>, char a3@<W2>, uint64_t a4@<X3>, void *a5@<X4>, _QWORD *a6@<X8>)
{
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double *v19;
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  double v36;
  double v37;
  double v38;
  double v39;
  CGFloat v40;
  double v41;
  double v42;
  double v43;
  int v44;
  CGFloat v45;
  CGFloat v46;
  double v47;
  double v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *result;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  int *v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  id v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE v118[264];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;

  objc_msgSend(a1, "bounds");
  v14 = v13;
  v16 = v15;
  v17 = v11;
  v18 = v12;
  v19 = (double *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect);
  if ((*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect + 32) & 1) != 0)
  {
    v20 = sub_1000603DC(v11, v12, 0.75);
    v22 = v21;
    objc_msgSend(a5, "bounds");
    v27 = sub_1000616BC(0.0, 0.0, v20, v22, v23, v24, v25, v26);
    v29 = v28;
    v31 = v30;
    v33 = v32;
  }
  else
  {
    v31 = v19[2];
    v33 = v19[3];
    v27 = *v19;
    v29 = v19[1];
    if ((a3 & 1) != 0)
    {
      objc_msgSend(a2, "frame");
      v27 = sub_1000616BC(0.0, 0.0, v34, v35, v27, v29, v31, v33);
      v29 = v36;
      v31 = v37;
      v33 = v38;
      v39 = sub_100062DDC(v37, v38, v17, v18);
      v14 = sub_1000616BC(0.0, 0.0, v39, v40, v14, v16, v17, v18);
      v16 = v41;
      v17 = v42;
      v18 = v43;
    }
  }
  v44 = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v45 = v14;
  else
    v45 = v27;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v46 = v16;
  else
    v46 = v29;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v47 = v17;
  else
    v47 = v31;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v48 = v18;
  else
    v48 = v33;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v49 = v27;
  else
    v49 = v14;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v50 = v29;
  else
    v50 = v16;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v51 = v31;
  else
    v51 = v17;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
    v52 = v33;
  else
    v52 = v18;
  sub_100679438(a2, 0, (uint64_t)&v119, v49, v50, v51, v52, v45, v46, v47, v48);
  v54 = v119;
  v53 = v120;
  v56 = v121;
  v55 = v122;
  v58 = v123;
  v57 = v124;
  v60 = v125;
  v59 = v126;
  v94 = v127;
  v95 = v128;
  v96 = v129;
  v97 = v130;
  v98 = v131;
  v99 = v132;
  v100 = v133;
  v101 = v134;
  v102 = v135;
  v103 = v136;
  v104 = v137;
  v105 = v138;
  v106 = v139;
  v107 = v140;
  v108 = v141;
  v109 = v142;
  v110 = v143;
  v111 = v144;
  v112 = v145;
  v113 = v146;
  v114 = v147;
  v115 = v148;
  v116 = v149;
  v117 = v150;
  if (!*(_QWORD *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView))
  {
    if (!v44)
    {
      v85 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
      a6[3] = v85;
      a6[4] = sub_1004B7878(&qword_1013EA658, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9CC0);
      v86 = sub_10050D1B0(a6);
      v119 = v54;
      v120 = v53;
      v121 = v56;
      v122 = v55;
      v123 = v58;
      v124 = v57;
      v125 = v60;
      v126 = v59;
      v127 = v94;
      v128 = v95;
      v129 = v96;
      v130 = v97;
      v131 = v98;
      v132 = v99;
      v133 = v100;
      v134 = v101;
      v135 = v102;
      v136 = v103;
      v137 = v104;
      v138 = v105;
      v139 = v106;
      v140 = v107;
      v141 = v108;
      v142 = v109;
      v143 = v110;
      v144 = v111;
      v145 = v112;
      v146 = v113;
      v147 = v114;
      v148 = v115;
      v149 = v116;
      v150 = v117;
      v151 = 52;
      sub_10057E090(&v119, (uint64_t)v118);
      v87 = qword_1013DCCC0;
      v88 = a2;
      if (v87 != -1)
        swift_once(&qword_1013DCCC0, sub_100674984);
      v89 = (id)qword_1013EA450;
      UUID.init()(v89);
      v90 = (char *)v86 + v85[6];
      swift_unknownObjectWeakInit(v90);
      v91 = (char *)v86 + v85[7];
      v92 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
      v93(v91, 1, 1, v92);
      v93((char *)v86 + v85[8], 1, 1, v92);
      swift_unknownObjectWeakAssign(v90, v88);

      sub_1004E9198(v118, v86 + 3);
      *(_OWORD *)(v86 + 1) = xmmword_100F01F20;
      *v86 = v89;
      v86[36] = 0;
      *((_DWORD *)v86 + 74) = 131586;
      return sub_1004EA730(&v119);
    }
    v61 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
    a6[3] = v61;
    a6[4] = sub_1004B7878((unint64_t *)&unk_1013EA660, type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&unk_100F33140);
    v62 = (char *)sub_10050D1B0(a6);
    v119 = v54;
    v120 = v53;
    v121 = v56;
    v122 = v55;
    v123 = v58;
    v124 = v57;
    v125 = v60;
    v126 = v59;
    v127 = v94;
    v128 = v95;
    v129 = v96;
    v130 = v97;
    v131 = v98;
    v132 = v99;
    v133 = v100;
    v134 = v101;
    v135 = v102;
    v136 = v103;
    v137 = v104;
    v138 = v105;
    v139 = v106;
    v140 = v107;
    v141 = v108;
    v142 = v109;
    v143 = v110;
    v144 = v111;
    v145 = v112;
    v146 = v113;
    v147 = v114;
    v148 = v115;
    v149 = v116;
    v150 = v117;
    v151 = 52;
    sub_10057E090(&v119, (uint64_t)v118);
    v73 = qword_1013DCCA0;
    v74 = a2;
    v75 = v74;
    if (v73 != -1)
      v74 = (id)swift_once(&qword_1013DCCA0, sub_1006748D8);
    v76 = qword_1013EA430;
    if (qword_1013DCCA8 != -1)
      v74 = (id)swift_once(&qword_1013DCCA8, sub_1006748E8);
    v77 = qword_1013EA438;
    if (qword_1013DCC90 != -1)
      v74 = (id)swift_once(&qword_1013DCC90, sub_1006748B4);
    v78 = qword_1013EA420;
    if (qword_1013DCC98 != -1)
      v74 = (id)swift_once(&qword_1013DCC98, sub_1006748C4);
    v79 = qword_1013EA428;
LABEL_59:
    UUID.init()(v74);
    v81 = &v62[v61[6]];
    swift_unknownObjectWeakInit(v81);
    v82 = &v62[v61[7]];
    v83 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56);
    v84(v82, 1, 1, v83);
    v84(&v62[v61[8]], 1, 1, v83);
    swift_unknownObjectWeakAssign(v81, v75);

    sub_1004E9198(v118, v62 + 40);
    *((_QWORD *)v62 + 4) = 0;
    *(_QWORD *)v62 = v76;
    *((_QWORD *)v62 + 1) = v77;
    *((_QWORD *)v62 + 2) = v78;
    *((_QWORD *)v62 + 3) = v79;
    *((_QWORD *)v62 + 38) = 0;
    *((_DWORD *)v62 + 78) = 131586;
    return sub_1004EA730(&v119);
  }
  v61 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  a6[3] = v61;
  a6[4] = sub_1004B7878((unint64_t *)&unk_1013EA660, type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&unk_100F33140);
  v62 = (char *)sub_10050D1B0(a6);
  if (!v44)
  {
    v119 = v54;
    v120 = v53;
    v121 = v56;
    v122 = v55;
    v123 = v58;
    v124 = v57;
    v125 = v60;
    v126 = v59;
    v127 = v94;
    v128 = v95;
    v129 = v96;
    v130 = v97;
    v131 = v98;
    v132 = v99;
    v133 = v100;
    v134 = v101;
    v135 = v102;
    v136 = v103;
    v137 = v104;
    v138 = v105;
    v139 = v106;
    v140 = v107;
    v141 = v108;
    v142 = v109;
    v143 = v110;
    v144 = v111;
    v145 = v112;
    v146 = v113;
    v147 = v114;
    v148 = v115;
    v149 = v116;
    v150 = v117;
    v151 = 52;
    sub_10057E090(&v119, (uint64_t)v118);
    v80 = qword_1013DCC70;
    v74 = a2;
    v75 = v74;
    if (v80 != -1)
      v74 = (id)swift_once(&qword_1013DCC70, sub_100674808);
    v76 = qword_1013EA400;
    if (qword_1013DCC78 != -1)
      v74 = (id)swift_once(&qword_1013DCC78, sub_100674818);
    v77 = qword_1013EA408;
    if (qword_1013DCC60 != -1)
      v74 = (id)swift_once(&qword_1013DCC60, sub_1006747E8);
    v78 = qword_1013EA3F0;
    if (qword_1013DCC68 != -1)
      v74 = (id)swift_once(&qword_1013DCC68, sub_1006747F8);
    v79 = qword_1013EA3F8;
    goto LABEL_59;
  }
  v119 = v54;
  v120 = v53;
  v121 = v56;
  v122 = v55;
  v123 = v58;
  v124 = v57;
  v125 = v60;
  v126 = v59;
  v127 = v94;
  v128 = v95;
  v129 = v96;
  v130 = v97;
  v131 = v98;
  v132 = v99;
  v133 = v100;
  v134 = v101;
  v135 = v102;
  v136 = v103;
  v137 = v104;
  v138 = v105;
  v139 = v106;
  v140 = v107;
  v141 = v108;
  v142 = v109;
  v143 = v110;
  v144 = v111;
  v145 = v112;
  v146 = v113;
  v147 = v114;
  v148 = v115;
  v149 = v116;
  v150 = v117;
  v151 = 52;
  if (qword_1013DCC20 != -1)
    swift_once(&qword_1013DCC20, sub_100674668);
  v63 = qword_1013EA3B0;
  if (qword_1013DCC28 != -1)
    swift_once(&qword_1013DCC28, sub_100674678);
  v64 = qword_1013EA3B8;
  if (qword_1013DCC10 != -1)
    swift_once(&qword_1013DCC10, sub_100674648);
  v65 = qword_1013EA3A0;
  if (qword_1013DCC18 != -1)
    swift_once(&qword_1013DCC18, sub_100674658);
  v66 = qword_1013EA3A8;
  v67 = a2;
  UUID.init()(v67);
  v68 = &v62[v61[6]];
  swift_unknownObjectWeakInit(v68);
  v69 = &v62[v61[7]];
  v70 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
  v71(v69, 1, 1, v70);
  v71(&v62[v61[8]], 1, 1, v70);
  swift_unknownObjectWeakAssign(v68, v67);

  result = sub_1004E9198(&v119, v62 + 40);
  *((_QWORD *)v62 + 4) = 0;
  *(_QWORD *)v62 = v63;
  *((_QWORD *)v62 + 1) = v64;
  *((_QWORD *)v62 + 2) = v65;
  *((_QWORD *)v62 + 3) = v66;
  *((_QWORD *)v62 + 38) = 0;
  *((_DWORD *)v62 + 78) = 131586;
  return result;
}

uint64_t sub_1006776F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  swift_beginAccess(a1 + 16, v9, 0, 0);
  v2 = *(_QWORD *)(a1 + 16);
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(v2, 2);
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n(v2, 2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v2, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v2, 2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setHidden:", 0);

    }
    return swift_bridgeObjectRelease_n(v2, 2);
  }
  __break(1u);
  return result;
}

id sub_1006777F0(uint64_t a1, id a2, _OWORD *a3, void *a4, void *a5, uint64_t (*a6)(_QWORD), double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12)
{
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  id result;
  unsigned __int8 *v28;
  _OWORD v29[8];

  v22 = a3[1];
  v29[0] = *a3;
  v29[1] = v22;
  v23 = a3[3];
  v29[2] = a3[2];
  v29[3] = v23;
  v24 = a3[5];
  v29[4] = a3[4];
  v29[5] = v24;
  v25 = a3[7];
  v29[6] = a3[6];
  v29[7] = v25;
  objc_msgSend(a2, "setTransform:", v29);
  objc_msgSend(a2, "setAnchorPoint:", a7, a8);
  objc_msgSend(a2, "frame");
  objc_msgSend(a2, "setFrame:", a9, a10);
  v26 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
  if (v26)
    objc_msgSend(v26, "removeFromSuperview");
  if (a4)
    objc_msgSend(a4, "removeFromSuperview");
  result = objc_msgSend(a5, "removeFromSuperview");
  if (a6)
  {
    v28 = (unsigned __int8 *)(a12 + 16);
    swift_beginAccess(v28, v29, 0, 0);
    return (id)a6(*v28);
  }
  return result;
}

uint64_t sub_100677934()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[20] = v0;
  v2 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v1[21] = v2;
  v1[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v1[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v1[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v1[25] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[26] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v7);
  v1[28] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v1[29] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v1[30] = v9;
  v1[31] = v10;
  return swift_task_switch(sub_100677A40, v9, v10);
}

uint64_t sub_100677A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect + 32) & 1) != 0
    || (*(_QWORD *)(v0 + 256) = *(_QWORD *)(v2 + 24),
        *(_QWORD *)(v0 + 264) = *(_QWORD *)(v2 + 16),
        v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView),
        (*(_QWORD *)(v0 + 272) = v3) == 0))
  {
    swift_release(*(_QWORD *)(v0 + 232));
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 192);
  sub_1004CB7BC(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemViewModel, v6, (uint64_t *)&unk_1013E3830);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  v8 = *(_QWORD *)(v0 + 192);
  if (v7 == 1)
  {
    swift_release(*(_QWORD *)(v0 + 232));
    sub_1004CB800(v8, (uint64_t *)&unk_1013E3830);
LABEL_6:
    v9 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 160);
  sub_1004B84E0(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 224), type metadata accessor for CRLBoardLibraryViewModel.Item);
  v15 = *(void **)(v14 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_boardPreviewImageCache);
  *(_QWORD *)(v0 + 280) = v15;
  if (!v15)
  {
    v29 = *(_QWORD *)(v0 + 224);
    v30 = *(_QWORD *)(v0 + 232);
    v31 = v3;
    sub_1004B84A4(v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_release(v30);

    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 200);
  sub_1004B8460(*(_QWORD *)(v0 + 224), v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v16, v17) != 2)
  {
    v32 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 232);
    v34 = *(_QWORD *)(v0 + 216);
    v35 = v3;
    v36 = v15;
    sub_1004B84A4(v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_release(v33);

    sub_1004B84A4(v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 184);
  v22 = *(_QWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v18 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48) + 8);
  v24 = v3;
  v15;
  swift_bridgeObjectRelease(v23);
  sub_1004B84E0(v18, v19, type metadata accessor for CRLBoardIdentifier);
  objc_msgSend((id)objc_opt_self(UIScreen), "crl_screenScale");
  v26 = v25;
  sub_1004B8460(v19, v20, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload(v20, v21, 1);
  if (*(_BYTE *)(v22 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isGridLayout))
    v27 = 2;
  else
    v27 = 0;
  v28 = (_QWORD *)swift_task_alloc(dword_1013E4324);
  *(_QWORD *)(v0 + 288) = v28;
  *v28 = v0;
  v28[1] = sub_100677D28;
  return sub_1005912C0(*(_QWORD *)(v0 + 176), v27, 0, 1, v26);
}

uint64_t sub_100677D28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  *(_QWORD *)(*(_QWORD *)v2 + 296) = v1;
  swift_task_dealloc(v5);
  sub_1004B84A4(v6, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (v1)
  {
    v7 = v4[30];
    v8 = v4[31];
    v9 = sub_100678044;
  }
  else
  {
    v4[38] = a1;
    v7 = v4[30];
    v8 = v4[31];
    v9 = sub_100677DB0;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100677DB0()
{
  uint64_t v0;
  void *v1;
  char *v2;
  double v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 232));
  if (v1)
  {
    v2 = *(char **)(v0 + 272);
    v4 = *(double *)(v0 + 256);
    v3 = *(double *)(v0 + 264);
    v5 = v1;
    v6 = objc_msgSend(v5, "UIImage");
    v7 = *(void **)&v2[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView];
    objc_msgSend(v7, "setImage:", v6);
    objc_msgSend(v2, "bounds");
    objc_msgSend(v7, "setFrame:");

    objc_msgSend(v5, "size");
    v9 = v8;
    v11 = v10;

    v12 = sub_100062DDC(v9, v11, v3, v4);
    v14 = v13;
  }
  else
  {
    v14 = *(double *)(v0 + 256);
    v12 = *(double *)(v0 + 264);
  }
  v15 = *(void **)(v0 + 272);
  v16 = *(void **)(v0 + 280);
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  v18 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EF5560;
  v20 = objc_msgSend(v15, "widthAnchor");
  v21 = objc_msgSend(v20, "constraintEqualToConstant:", v12);

  *(_QWORD *)(v19 + 32) = v21;
  v22 = objc_msgSend(v15, "heightAnchor");
  v23 = objc_msgSend(v22, "constraintEqualToConstant:", v14);

  *(_QWORD *)(v19 + 40) = v23;
  specialized Array._endMutation()(v24);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  objc_msgSend(v15, "layoutIfNeeded");
  v26 = *(_QWORD *)(v0 + 224);
  sub_1004B84A4(*(_QWORD *)(v0 + 184), type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v27 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 184);
  v28 = *(_QWORD *)(v0 + 192);
  v30 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100678044()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;

  swift_release(*(_QWORD *)(v0 + 232));
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(void **)(v0 + 280);
  v22 = *(void **)(v0 + 272);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 128, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v3;
  v7 = sub_100BCCD38();
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v10 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(v0 + 152) = v1;
  swift_errorRetain(v1);
  v11 = sub_1004B804C(&qword_1013E0210);
  v12 = String.init<A>(describing:)(v0 + 152, v11);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v10;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v14, "Transition animation could not resolve thumbnail for board %@ (error: %@)", 73, 2, inited);

  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  swift_errorRelease(v1);
  v16 = *(_QWORD *)(v0 + 224);
  sub_1004B84A4(*(_QWORD *)(v0 + 184), type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v17 = *(_QWORD *)(v0 + 216);
  v19 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100678264()
{
  return sub_10067865C(type metadata accessor for CRLBoardViewControllerAnimatedTransition);
}

uint64_t sub_1006782E0()
{
  return type metadata accessor for CRLBoardViewControllerAnimatedTransition(0);
}

uint64_t type metadata accessor for CRLBoardViewControllerAnimatedTransition(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EA4E0, (uint64_t)&nominal type descriptor for CRLBoardViewControllerAnimatedTransition);
}

void sub_1006782FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_100F01F60;
  v4[1] = &unk_100F01F60;
  v4[2] = &unk_100F01F60;
  v4[3] = &unk_100F01F78;
  sub_10050AB74(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_100F01F90;
    v4[6] = &unk_100F01FA8;
    v4[7] = &unk_100F01FA8;
    v4[8] = &unk_100F01FC0;
    v4[9] = &unk_100F01F60;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_1006783A0(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v3)
    goto LABEL_8;
  v4 = v3;
  v5 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v5)
  {
LABEL_7:

LABEL_8:
    objc_msgSend(a1, "completeTransition:", objc_msgSend(a1, "transitionWasCancelled") ^ 1);
    return;
  }
  v6 = v5;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing) & 1) != 0)
  {
    v7 = objc_msgSend(v5, "view");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v4, "view");
      if (!v9)
      {
        __break(1u);
        goto LABEL_7;
      }
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_13;
  }
  v10 = objc_msgSend(v4, "view");
  if (!v10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v10;
  v9 = objc_msgSend(v6, "view");
  if (v9)
  {
LABEL_11:
    v13 = v9;
    objc_msgSend(v9, "bounds");
    objc_msgSend(v8, "setFrame:");
    v11 = objc_msgSend(a1, "containerView");
    v12 = swift_allocObject(&unk_101275048, 24, 7);
    *(_QWORD *)(v12 + 16) = a1;
    swift_unknownObjectRetain(a1);
    sub_100674A14(v11, v8, (uint64_t)sub_100678FFC, v12);

    swift_release(v12);
    return;
  }
LABEL_14:
  __break(1u);
}

id sub_100678650()
{
  return sub_10067865C(type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition);
}

id sub_10067865C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_100678694()
{
  return type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(0);
}

uint64_t type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EA528, (uint64_t)&nominal type descriptor for CRLiOSBoardViewControllerAnimatedTransition);
}

uint64_t sub_1006786B0(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 280);
}

char *sub_1006786E4(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  v9 = objc_allocWithZone((Class)type metadata accessor for EncapsulatedImageView.NoIntrinsicContentSizeImageView());
  v10 = v4;
  v11 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView] = v11;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setContentMode:", 1);
  v12 = objc_msgSend(v11, "layer");

  if (qword_1013DCAD0 != -1)
    swift_once(&qword_1013DCAD0, sub_10058E1DC);
  v13 = objc_msgSend((id)qword_10147EA40, "CGColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  objc_msgSend(v12, "setMasksToBounds:", 1);
  v20.receiver = v10;
  v20.super_class = (Class)type metadata accessor for EncapsulatedImageView();
  v14 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setUserInteractionEnabled:", 0);
  v15 = objc_msgSend(v14, "layer");
  objc_msgSend(v15, "setMasksToBounds:", 0);

  v16 = objc_msgSend(v14, "layer");
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v18 = objc_msgSend(v17, "CGColor");

  objc_msgSend(v16, "setBackgroundColor:", v18);
  objc_msgSend(v14, "addSubview:", *(_QWORD *)&v14[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView]);

  return v14;
}

id sub_100678B98()
{
  return sub_10067865C((uint64_t (*)(_QWORD))type metadata accessor for EncapsulatedImageView.NoIntrinsicContentSizeImageView);
}

id sub_100678BA4()
{
  return sub_10067865C((uint64_t (*)(_QWORD))type metadata accessor for EncapsulatedImageView);
}

uint64_t type metadata accessor for EncapsulatedImageView()
{
  return objc_opt_self(_TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView);
}

uint64_t type metadata accessor for EncapsulatedImageView.NoIntrinsicContentSizeImageView()
{
  return objc_opt_self(_TtCC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView31NoIntrinsicContentSizeImageView);
}

char *sub_100678C00(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  id v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *result;
  char *v20;
  id v21;
  id v22;
  void *v23;
  char *v24;
  id v25;
  objc_super v26;

  *(_QWORD *)&v5[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_color] = a1;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v5;
  v13 = a1;
  v14 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, a4, a5);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView] = v14;

  v26.receiver = v12;
  v26.super_class = (Class)type metadata accessor for EncapsulatedColorView();
  v15 = (char *)objc_msgSendSuper2(&v26, "initWithFrame:", a2, a3, a4, a5);
  v16 = OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView;
  v17 = *(void **)&v15[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView];
  v18 = v15;
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  result = (char *)objc_msgSend(v17, "layer");
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_color], "CGColor");
    objc_msgSend(v20, "setBackgroundColor:", v21);

    objc_msgSend(v18, "setUserInteractionEnabled:", 0);
    objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v22 = objc_msgSend(v18, "layer");
    objc_msgSend(v22, "setMasksToBounds:", 0);

    v23 = *(void **)&v15[v16];
    v24 = v18;
    v25 = v23;
    objc_msgSend(v24, "addSubview:", v25);

    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100678F74()
{
  return sub_10067865C((uint64_t (*)(_QWORD))type metadata accessor for EncapsulatedColorView);
}

uint64_t type metadata accessor for EncapsulatedColorView()
{
  return objc_opt_self(_TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView);
}

uint64_t sub_100678FD8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100678FFC(char a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v1 + 16);
  if ((a1 & 1) != 0)
    v3 = objc_msgSend(*(id *)(v1 + 16), "transitionWasCancelled") ^ 1;
  else
    v3 = 0;
  return objc_msgSend(v2, "completeTransition:", v3);
}

uint64_t sub_100679044()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100679068()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10067908C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));

  swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100679110(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013EA644);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CF80C;
  return sub_10067523C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1006791E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1006791F0()
{
  uint64_t v0;

  return sub_1006776F4(v0);
}

uint64_t sub_1006791F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 208))
    swift_release(*(_QWORD *)(v0 + 216));
  swift_release(*(_QWORD *)(v0 + 224));
  return swift_deallocObject(v0, 232, 7);
}

id sub_10067924C()
{
  uint64_t v0;

  return sub_1006777F0(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), (_OWORD *)(v0 + 32), *(void **)(v0 + 192), *(void **)(v0 + 200), *(uint64_t (**)(_QWORD))(v0 + 208), *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176), *(double *)(v0 + 184), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
}

id sub_10067926C(char a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  int v11;
  char *v12;
  uint64_t v13;
  double *v14;
  char *v15;
  double v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  objc_super v27;
  _BYTE v28[40];

  v11 = a2;
  v12 = &v6[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemView];
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemView]);
  v13 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView] = 0;
  v14 = (double *)&v6[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_animationGroup];
  v15 = v6;
  v16 = sub_10060CD0C((uint64_t)_swiftEmptyArrayStorage, 0.0);
  *(_QWORD *)v14 = v17;
  v14[1] = v16;
  v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_didCallPerformTransitionAnimation] = 0;
  v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing] = a1;
  v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isGridLayout] = (v11 == 2) | a2 & 1;
  sub_10057B588(a3, (uint64_t)&v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect]);
  swift_unknownObjectWeakAssign(v12, a4);
  sub_1004CB7BC(a5, (uint64_t)&v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemViewModel], (uint64_t *)&unk_1013E3830);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_boardPreviewImageCache] = a6;
  sub_10057B588(a3, (uint64_t)v28);
  if ((v28[32] & 1) != 0)
  {
    v18 = a6;
    v19 = 0;
  }
  else
  {
    v20 = objc_allocWithZone((Class)type metadata accessor for EncapsulatedImageView());
    v21 = a6;
    v19 = objc_msgSend(v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }
  v22 = *(void **)&v6[v13];
  *(_QWORD *)&v6[v13] = v19;

  v15[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_usesSublayerTransform] = 0;
  v27.receiver = v15;
  v27.super_class = (Class)type metadata accessor for CRLBoardViewControllerAnimatedTransition(0);
  v23 = objc_msgSendSuper2(&v27, "init");
  sub_1004CB800(a5, (uint64_t *)&unk_1013E3830);
  return v23;
}

__n128 sub_100679438@<Q0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, double a6@<D2>, double a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>, double a10@<D6>, double a11@<D7>)
{
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  double v33;
  CGFloat m12;
  CGFloat m11;
  CGFloat m14;
  CGFloat m13;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  CGFloat m31;
  CGFloat m32;
  CGFloat m33;
  CGFloat m34;
  CGFloat m41;
  CGFloat m42;
  CGFloat m43;
  double v49;
  CGFloat m44;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  __n128 result;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  CGFloat txa[2];
  CGFloat tya[2];
  __int128 v81;
  __int128 v83;
  double v88;
  CATransform3D v89;
  CATransform3D v90;
  CGRect v91;
  CGRect v92;

  objc_msgSend(a1, "frame");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  objc_msgSend(a1, "anchorPoint");
  v23 = v22;
  v25 = v24;
  v91.origin.x = v15;
  v91.origin.y = v17;
  v91.size.width = v19;
  v91.size.height = v21;
  if (CGRectGetWidth(v91) <= 0.0
    || (v92.origin.x = v15, v92.origin.y = v17, v92.size.width = v19, v92.size.height = v21, CGRectGetHeight(v92) <= 0.0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2, 233, "The layer's rect must have a size greater than 0.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2u, 233, (uint64_t)"The layer's rect must have a size greater than 0.", 49, 2u);
  }
  v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v27 = swift_allocObject(v26, 112, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5A10;
  v28 = (void *)objc_opt_self(NSValue);
  v29 = objc_msgSend(v28, "valueWithCGPoint:", 0.0, 0.0);
  v30 = sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
  *(_QWORD *)(v27 + 56) = v30;
  v31 = sub_100588AA4();
  *(_QWORD *)(v27 + 64) = v31;
  *(_QWORD *)(v27 + 32) = v29;
  objc_msgSend(a1, "anchorPoint");
  v32 = objc_msgSend(v28, "valueWithCGPoint:");
  *(_QWORD *)(v27 + 96) = v30;
  *(_QWORD *)(v27 + 104) = v31;
  *(_QWORD *)(v27 + 72) = v32;
  if (v23 != 0.0 || v25 != 0.0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2, 234, "The view's anchor point is expected to be %@, but it's actually %@. Animations may appear incorrect.", 100, 2u, v27);
    sub_1004F5394(v27, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2u, 234, (uint64_t)"The view's anchor point is expected to be %@, but it's actually %@. Animations may appear incorrect.", 100, 2u);
  }
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v27).n128_u64[0];
  v88 = v21;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(a1, "sublayerTransform", v33);
    m11 = v90.m11;
    m12 = v90.m12;
    m13 = v90.m13;
    m14 = v90.m14;
    m21 = v90.m21;
    m22 = v90.m22;
    m23 = v90.m23;
    m24 = v90.m24;
    m31 = v90.m31;
    m32 = v90.m32;
    m33 = v90.m33;
    m34 = v90.m34;
    m41 = v90.m41;
    m42 = v90.m42;
    m43 = v90.m43;
    v49 = v19;
    m44 = v90.m44;
  }
  else
  {
    objc_msgSend(a1, "transform");
    CATransform3DTranslate(&v89, &v90, v19 * (v23 + -0.5), v21 * (v25 + -0.5), 0.0);
    m11 = v89.m11;
    m12 = v89.m12;
    m13 = v89.m13;
    m14 = v89.m14;
    m21 = v89.m21;
    m22 = v89.m22;
    m23 = v89.m23;
    m24 = v89.m24;
    m31 = v89.m31;
    m32 = v89.m32;
    m33 = v89.m33;
    m34 = v89.m34;
    m41 = v89.m41;
    m42 = v89.m42;
    m43 = v89.m43;
    m44 = v89.m44;
    v49 = v19;
  }
  v62 = m23;
  v63 = m24;
  v64 = m31;
  v65 = m32;
  v66 = m33;
  v67 = m34;
  v68 = m41;
  v69 = m42;
  v70 = m43;
  v71 = m44;
  v90.m11 = m11;
  v90.m12 = m12;
  v90.m13 = m13;
  v90.m14 = m14;
  v90.m21 = m21;
  v90.m22 = m22;
  v90.m23 = m23;
  v90.m24 = m24;
  v90.m31 = m31;
  v90.m32 = m32;
  v90.m33 = m33;
  v90.m34 = m34;
  v90.m41 = m41;
  v90.m42 = m42;
  v90.m43 = m43;
  v90.m44 = m44;
  v51 = m14;
  v52 = m21;
  CATransform3DTranslate(&v89, &v90, a4, a5, 0.0);
  v90 = v89;
  CATransform3DScale(&v89, &v90, a6 / v49, a7 / v88, 1.0);
  v83 = *(_OWORD *)&v89.m11;
  v81 = *(_OWORD *)&v89.m13;
  *(_OWORD *)tya = *(_OWORD *)&v89.m21;
  *(_OWORD *)txa = *(_OWORD *)&v89.m23;
  v75 = *(_OWORD *)&v89.m31;
  v74 = *(_OWORD *)&v89.m33;
  v73 = *(_OWORD *)&v89.m41;
  v53 = v89.m44;
  v72 = v89.m43;
  v90.m11 = m11;
  v90.m12 = m12;
  v90.m13 = m13;
  v90.m14 = v51;
  v90.m21 = v52;
  v90.m22 = m22;
  v90.m23 = v62;
  v90.m24 = v63;
  v90.m31 = v64;
  v90.m32 = v65;
  v90.m33 = v66;
  v90.m34 = v67;
  v90.m41 = v68;
  v90.m42 = v69;
  v90.m43 = v70;
  v90.m44 = v71;
  CATransform3DTranslate(&v89, &v90, a8, a9, 0.0);
  v90 = v89;
  CATransform3DScale(&v89, &v90, a10 / v49, a11 / v88, 1.0);
  result = *(__n128 *)&v89.m11;
  v55 = *(_OWORD *)&v89.m13;
  v56 = *(_OWORD *)&v89.m21;
  v57 = *(_OWORD *)&v89.m23;
  v58 = *(_OWORD *)&v89.m31;
  v59 = *(_OWORD *)&v89.m33;
  v60 = *(_OWORD *)&v89.m41;
  v61 = *(_OWORD *)&v89.m43;
  *(_OWORD *)a3 = v83;
  *(_OWORD *)(a3 + 16) = v81;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)tya;
  *(_OWORD *)(a3 + 48) = *(_OWORD *)txa;
  *(_OWORD *)(a3 + 64) = v75;
  *(_OWORD *)(a3 + 80) = v74;
  *(_OWORD *)(a3 + 96) = v73;
  *(CGFloat *)(a3 + 112) = v72;
  *(CGFloat *)(a3 + 120) = v53;
  *(__n128 *)(a3 + 128) = result;
  *(_OWORD *)(a3 + 144) = v55;
  *(_OWORD *)(a3 + 160) = v56;
  *(_OWORD *)(a3 + 176) = v57;
  *(_OWORD *)(a3 + 192) = v58;
  *(_OWORD *)(a3 + 208) = v59;
  *(_OWORD *)(a3 + 224) = v60;
  *(_OWORD *)(a3 + 240) = v61;
  return result;
}

id sub_1006799A4(char a1)
{
  _BYTE *v1;
  char *v2;
  objc_super v4;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = 1;
  *(_OWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName] = xmmword_100F02070;
  v2 = &v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___writingDirection];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___shadow] = 1;
  v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CRLWPListStyle();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_100679A78(uint64_t a1)
{
  return sub_100679AB8(a1, 0, &qword_10147EEC8);
}

id sub_100679A88(uint64_t a1)
{
  return sub_100679AB8(a1, 1, &qword_10147EED0);
}

id sub_100679A98(uint64_t a1)
{
  return sub_100679AB8(a1, 2, &qword_10147EED8);
}

id sub_100679AA8(uint64_t a1)
{
  return sub_100679AB8(a1, 3, &qword_10147EEE0);
}

id sub_100679AB8(uint64_t a1, char a2, _QWORD *a3)
{
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  result = sub_1006799A4(a2);
  *a3 = result;
  return result;
}

id sub_100679B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *isa;
  void *v4;
  uint64_t *v5;
  void (*v6)(void);
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  switch(a1)
  {
    case 9:
      sub_10067AB20();
      if (v1)
      {
        v2 = v1;
        swift_bridgeObjectRetain(v1);
        isa = String._bridgeToObjectiveC()();
        goto LABEL_22;
      }
      return 0;
    case 18:
      v5 = &OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___shadow;
      v6 = (void (*)(void))sub_10067ACA8;
      goto LABEL_8;
    case 28:
      return objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", sub_100679DE4());
    case 53:
      v5 = &OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor;
      v6 = (void (*)(void))sub_1004CB49C;
LABEL_8:
      v7 = (void *)sub_10067AC40(v5, v6);
      v4 = v7;
      if (v7)
        v8 = v7;
      return v4;
    case 54:
      v9 = sub_100679E14();
      v2 = v9;
      if ((unint64_t)v9 >> 62)
      {
        if (v9 >= 0)
          v9 &= 0xFFFFFFFFFFFFFF8uLL;
        v18 = _bridgeCocoaArray<A>(_:)(v9, (char *)&type metadata for Swift.AnyObject + 8);
        swift_bridgeObjectRelease(v2);
        v2 = v18;
      }
      else
      {
        v10 = v9 & 0xFFFFFFFFFFFFFF8;
        v11 = swift_bridgeObjectRetain(v9);
        v12 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
        if (swift_dynamicCastMetatype(v12, (char *)&type metadata for Swift.AnyObject + 8)
          || (v16 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
        {
LABEL_12:
          swift_bridgeObjectRelease(v2);
          goto LABEL_17;
        }
        v17 = (_QWORD *)(v10 + 32);
        while (*v17)
        {
          ++v17;
          if (!--v16)
            goto LABEL_12;
        }
        swift_bridgeObjectRelease(v2);
        v2 = v10 | 1;
      }
LABEL_17:
      isa = Array._bridgeToObjectiveC()().super.isa;
LABEL_22:
      v4 = isa;
      swift_bridgeObjectRelease(v2);
      return v4;
    case 56:
      v13 = (uint64_t)sub_100679E90();
      goto LABEL_21;
    case 57:
      v14 = sub_100679EDC();
      goto LABEL_19;
    case 58:
      v2 = sub_100679EF0();
      isa = sub_1008ECE98(v2);
      goto LABEL_22;
    case 59:
      v2 = (uint64_t)sub_100679F6C();
      goto LABEL_17;
    case 60:
      v14 = sub_10067A010();
LABEL_19:
      v2 = v14;
      isa = sub_10067AB58(v14);
      goto LABEL_22;
    case 61:
      v13 = sub_10067A0A4();
LABEL_21:
      v2 = v13;
      isa = sub_1008ECDA8(v13);
      goto LABEL_22;
    default:
      sub_100757E04(&_mh_execute_header, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47, "Requesting value for invalid property", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boxedValue(for:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2u, 47, (uint64_t)"Requesting value for invalid property", 37, 2u);
      v4 = 0;
      swift_unknownObjectRetain(0);
      return v4;
  }
}

uint64_t sub_100679DE4()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___writingDirection);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___writingDirection + 8) != 1)
    return *(_QWORD *)v1;
  result = -1;
  *(_QWORD *)v1 = -1;
  v1[8] = 0;
  return result;
}

uint64_t sub_100679E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries);
  }
  else
  {
    v3 = sub_100A6AF88(objc_msgSend(objc_allocWithZone((Class)CRLWPListLabelGeometry), "init"), 9);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_UNKNOWN **sub_100679E90()
{
  uint64_t v0;
  uint64_t v1;
  _UNKNOWN **v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents);
  if (v1)
  {
    v2 = *(_UNKNOWN ***)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents);
  }
  else
  {
    v2 = &off_101264BB0;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents) = &off_101264BB0;
    swift_bridgeObjectRelease(0);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_100679EDC()
{
  return sub_10067A024(&OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers, (uint64_t (*)(void))type metadata accessor for CRLWPListNumberType);
}

uint64_t sub_100679EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers);
  }
  else
  {
    v3 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for Bool);
    *(_QWORD *)(v3 + 16) = 9;
    *(_QWORD *)(v3 + 32) = 0;
    *(_BYTE *)(v3 + 40) = 0;
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_QWORD *sub_100679F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings);
  if (v2)
  {
    v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings);
  }
  else
  {
    v3 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for String);
    v3[2] = 9;
    v3[4] = 10649826;
    v3[5] = 0xA300000000000000;
    v3[6] = 10649826;
    v3[7] = 0xA300000000000000;
    v3[8] = 10649826;
    v3[9] = 0xA300000000000000;
    v3[10] = 10649826;
    v3[11] = 0xA300000000000000;
    v3[12] = 10649826;
    v3[13] = 0xA300000000000000;
    v3[14] = 10649826;
    v3[15] = 0xA300000000000000;
    v3[16] = 10649826;
    v3[17] = 0xA300000000000000;
    v3[18] = 10649826;
    v3[19] = 0xA300000000000000;
    v3[20] = 10649826;
    v3[21] = 0xA300000000000000;
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_10067A010()
{
  return sub_10067A024(&OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes, (uint64_t (*)(void))type metadata accessor for CRLWPListLabelType);
}

uint64_t sub_10067A024(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v6 = a2();
    v5 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v6);
    *(_QWORD *)(v5 + 16) = 9;
    *(_OWORD *)(v5 + 32) = 0u;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(_QWORD *)(v5 + 96) = 0;
    v7 = *(_QWORD *)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v7);
    v4 = 0;
  }
  swift_bridgeObjectRetain(v4);
  return v5;
}

uint64_t sub_10067A0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents);
  }
  else
  {
    v3 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for Float);
    *(_QWORD *)(v3 + 16) = 9;
    *(_OWORD *)(v3 + 32) = 0u;
    *(_OWORD *)(v3 + 48) = 0u;
    *(_DWORD *)(v3 + 64) = 0;
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

void sub_10067A150()
{
  uint64_t v0;

  sub_1004CB49C(*(id *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor));
  sub_10067AB0C(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents));
  sub_1004CB49C(*(id *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___shadow));
}

id sub_10067A200()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPListStyle();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPListStyle()
{
  return objc_opt_self(_TtC8Freeform14CRLWPListStyle);
}

uint64_t sub_10067A3B0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_10067A010();
  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    goto LABEL_8;
  v2 = *(_QWORD *)(result + 32);
  if (v2)
  {
LABEL_9:
    swift_bridgeObjectRelease(result);
    return v2;
  }
  if (v1 == 1)
  {
LABEL_8:
    v2 = 0;
    goto LABEL_9;
  }
  v3 = 5;
  while (1)
  {
    v4 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
      break;
    v2 = *(_QWORD *)(result + 8 * v3);
    if (v2)
      goto LABEL_9;
    ++v3;
    if (v4 == v1)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10067A430(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD *v6;
  _QWORD *v7;

  if (a3 <= 8)
  {
    v6 = result;
    result = (_QWORD *)a4();
    if (a3 < 0)
    {
      __break(1u);
    }
    else
    {
      v7 = result;
      if (result[2] > (unint64_t)a3)
      {

        return (_QWORD *)swift_bridgeObjectRelease(v7);
      }
    }
    __break(1u);
  }
  return result;
}

float *sub_10067A4AC(float a1, float a2)
{
  uint64_t v4;
  float *result;
  unint64_t v6;
  unint64_t v7;
  float *v8;

  sub_100600804(0, 9, 0);
  v4 = 0;
  result = (float *)_swiftEmptyArrayStorage;
  v6 = _swiftEmptyArrayStorage[2];
  do
  {
    v8 = result;
    v7 = *((_QWORD *)result + 3);
    if (v6 >= v7 >> 1)
    {
      sub_100600804(v7 > 1, v6 + 1, 1);
      result = v8;
    }
    *((_QWORD *)result + 2) = v6 + 1;
    result[v6++ + 8] = (float)((float)v4++ * a1) * a2;
  }
  while (v4 != 9);
  return result;
}

char *sub_10067A574(void *a1, float a2)
{
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  int32x4_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int32x2_t v21;

  v4 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  v5 = (char *)sub_1006799A4(0);
  type metadata accessor for CRLWPListLabelType(0);
  v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v6);
  *(_QWORD *)(v7 + 16) = 9;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_QWORD *)(v7 + 96) = 0;
  v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v7;
  swift_bridgeObjectRelease(v8);
  type metadata accessor for CRLWPListNumberType(0);
  v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v9);
  *(_QWORD *)(v10 + 16) = 9;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_QWORD *)(v10 + 96) = 0;
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = sub_10067A4AC(1.5, a2);
  v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = v12;
  v14 = swift_bridgeObjectRelease(v13);
  v14.n128_f32[0] = a2 * 0.0;
  v21 = (int32x2_t)v14.n128_u64[0];
  v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for Float);
  *(_QWORD *)(v15 + 16) = 9;
  v16 = vdupq_lane_s32(v21, 0);
  *(int32x4_t *)(v15 + 32) = v16;
  *(int32x4_t *)(v15 + 48) = v16;
  *(_DWORD *)(v15 + 64) = v21.i32[0];
  v17 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v15;
  swift_bridgeObjectRelease(v17);
  v18 = *(void **)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  v19 = a1;
  sub_1004CB49C(v18);
  return v5;
}

char *sub_10067A6D4(void *a1, float a2)
{
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  int32x4_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  int32x2_t v22;

  v4 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  v5 = (char *)sub_1006799A4(1);
  type metadata accessor for CRLWPListLabelType(0);
  v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v6);
  v8 = vdupq_n_s64(3uLL);
  *(_QWORD *)(v7 + 16) = 9;
  *(int64x2_t *)(v7 + 32) = v8;
  *(int64x2_t *)(v7 + 48) = v8;
  *(int64x2_t *)(v7 + 64) = v8;
  *(int64x2_t *)(v7 + 80) = v8;
  *(_QWORD *)(v7 + 96) = 3;
  v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v7;
  swift_bridgeObjectRelease(v9);
  type metadata accessor for CRLWPListNumberType(0);
  v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v10);
  *(_QWORD *)(v11 + 16) = 9;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_QWORD *)(v11 + 96) = 0;
  v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = sub_10067A4AC(1.5, a2);
  v14 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = v13;
  v15 = swift_bridgeObjectRelease(v14);
  v15.n128_f32[0] = a2 * 1.5;
  v22 = (int32x2_t)v15.n128_u64[0];
  v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for Float);
  *(_QWORD *)(v16 + 16) = 9;
  v17 = vdupq_lane_s32(v22, 0);
  *(int32x4_t *)(v16 + 32) = v17;
  *(int32x4_t *)(v16 + 48) = v17;
  *(_DWORD *)(v16 + 64) = v22.i32[0];
  v18 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = *(void **)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  v20 = a1;
  sub_1004CB49C(v19);
  return v5;
}

char *sub_10067A838(void *a1, double a2)
{
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  uint64_t v13;
  int32x4_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v3 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  v4 = (char *)sub_1006799A4(2);
  type metadata accessor for CRLWPListLabelType(0);
  v6 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v5);
  v7 = vdupq_n_s64(2uLL);
  *(_QWORD *)(v6 + 16) = 9;
  *(int64x2_t *)(v6 + 32) = v7;
  *(int64x2_t *)(v6 + 48) = v7;
  *(int64x2_t *)(v6 + 64) = v7;
  *(int64x2_t *)(v6 + 80) = v7;
  *(_QWORD *)(v6 + 96) = 2;
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v6;
  swift_bridgeObjectRelease(v8);
  v9 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for String);
  v9[2] = 9;
  v9[4] = 45;
  v9[5] = 0xE100000000000000;
  v9[6] = 45;
  v9[7] = 0xE100000000000000;
  v9[8] = 45;
  v9[9] = 0xE100000000000000;
  v9[10] = 45;
  v9[11] = 0xE100000000000000;
  v9[12] = 45;
  v9[13] = 0xE100000000000000;
  v9[14] = 45;
  v9[15] = 0xE100000000000000;
  v9[16] = 45;
  v9[17] = 0xE100000000000000;
  v9[18] = 45;
  v9[19] = 0xE100000000000000;
  v9[20] = 45;
  v9[21] = 0xE100000000000000;
  v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings] = v9;
  swift_bridgeObjectRelease(v10);
  v11 = sub_10067A4AC(1.5, *(float *)&a2);
  v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for Float);
  *(_QWORD *)(v13 + 16) = 9;
  v14 = vdupq_lane_s32(*(int32x2_t *)&a2, 0);
  *(int32x4_t *)(v13 + 32) = v14;
  *(int32x4_t *)(v13 + 48) = v14;
  *(_DWORD *)(v13 + 64) = LODWORD(a2);
  v15 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v13;
  swift_bridgeObjectRelease(v15);
  v16 = *(void **)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  v17 = a1;
  sub_1004CB49C(v16);
  return v4;
}

char *sub_10067A9A0(void *a1, double a2)
{
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  uint64_t v13;
  int32x4_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v3 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  v4 = (char *)sub_1006799A4(3);
  type metadata accessor for CRLWPListLabelType(0);
  v6 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, v5);
  v7 = vdupq_n_s64(2uLL);
  *(_QWORD *)(v6 + 16) = 9;
  *(int64x2_t *)(v6 + 32) = v7;
  *(int64x2_t *)(v6 + 48) = v7;
  *(int64x2_t *)(v6 + 64) = v7;
  *(int64x2_t *)(v6 + 80) = v7;
  *(_QWORD *)(v6 + 96) = 2;
  v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v6;
  swift_bridgeObjectRelease(v8);
  v9 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for String);
  v9[2] = 9;
  v9[4] = 10649826;
  v9[5] = 0xA300000000000000;
  v9[6] = 10649826;
  v9[7] = 0xA300000000000000;
  v9[8] = 10649826;
  v9[9] = 0xA300000000000000;
  v9[10] = 10649826;
  v9[11] = 0xA300000000000000;
  v9[12] = 10649826;
  v9[13] = 0xA300000000000000;
  v9[14] = 10649826;
  v9[15] = 0xA300000000000000;
  v9[16] = 10649826;
  v9[17] = 0xA300000000000000;
  v9[18] = 10649826;
  v9[19] = 0xA300000000000000;
  v9[20] = 10649826;
  v9[21] = 0xA300000000000000;
  v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings] = v9;
  swift_bridgeObjectRelease(v10);
  v11 = sub_10067A4AC(1.5, *(float *)&a2);
  v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = static Array._allocateBufferUninitialized(minimumCapacity:)(9, &type metadata for Float);
  *(_QWORD *)(v13 + 16) = 9;
  v14 = vdupq_lane_s32(*(int32x2_t *)&a2, 0);
  *(int32x4_t *)(v13 + 32) = v14;
  *(int32x4_t *)(v13 + 48) = v14;
  *(_DWORD *)(v13 + 64) = LODWORD(a2);
  v15 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v13;
  swift_bridgeObjectRelease(v15);
  v16 = *(void **)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  v17 = a1;
  sub_1004CB49C(v16);
  return v4;
}

uint64_t sub_10067AB0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_10067AB20()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName);
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName + 8) == 1)
  {
    *v1 = 0;
    v1[1] = 0;
    sub_10067AB0C(result, 1);
    return 0;
  }
  return result;
}

Class sub_10067AB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  double v6;
  uint64_t v7;
  Class isa;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v1);
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v4 = *v3++;
      v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", v4);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
      v6 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v6, v5);
      specialized ContiguousArray._endMutation()(v7);
      --v1;
    }
    while (v1);
  }
  sub_10067AC6C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return isa;
}

uint64_t sub_10067AC40(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = *(_QWORD *)(v2 + *a1);
  if (result == 1)
  {
    *(_QWORD *)(v2 + v3) = 0;
    a2();
    return 0;
  }
  return result;
}

unint64_t sub_10067AC6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F07F0;
  if (!qword_1013F07F0)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F07F0);
  }
  return result;
}

uint64_t sub_10067ACAC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
  a1[2] = sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
  result = sub_1004B7878(&qword_1013E9A00, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0215C);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for CRLBoardIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EA910, (uint64_t)&nominal type descriptor for CRLBoardIdentifier);
}

uint64_t sub_10067AD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  BOOL v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;

  v1 = 0xD000000000000012;
  v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v3 = (uint64_t *)(v0 + *(int *)(v2 + 20));
  v5 = *v3;
  v4 = (void *)v3[1];
  v6 = (void *)0x8000000100FB4970;
  if (*v3)
    v7 = 0;
  else
    v7 = v4 == (void *)0xE000000000000000;
  if (!v7)
  {
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, 0, 0xE000000000000000, 0);
    if ((v2 & 1) == 0)
    {
      swift_bridgeObjectRetain(v4);
      v1 = v5;
      v6 = v4;
    }
  }
  v12 = UUID.uuidString.getter(v2);
  v8._countAndFlagsBits = 15418;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v1;
  v9._object = v6;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v6);
  v10._countAndFlagsBits = 62;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v12;
}

uint64_t sub_10067AE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;

  v5 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLProto_BoardIdentifier(0);
  sub_100552F84(a1 + *(int *)(v15 + 20), (uint64_t)v7);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if ((_DWORD)v16 == 1)
  {
    *(_OWORD *)v11 = xmmword_100EF78C0;
    UnknownStorage.init()(v16);
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0((uint64_t)v7, (uint64_t)v11, type metadata accessor for CRLProto_Data);
  }
  v17 = *v11;
  v18 = v11[1];
  sub_1004BE310(*v11, v18);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
  sub_10067B2E0(v17, v18);
  result = sub_1004B84A4(a1, type metadata accessor for CRLProto_BoardIdentifier);
  if (!v2)
    return sub_1004B84E0((uint64_t)v14, a2, type metadata accessor for CRLBoardIdentifierStorage);
  return result;
}

uint64_t sub_10067AFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a4;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v14 == a2 && v15 == a3)
  {
    swift_bridgeObjectRelease(a3);
    v20 = v24;
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v14, v15, 0);
    v19 = swift_bridgeObjectRelease(v17);
    v20 = v24;
    if ((v18 & 1) == 0)
      goto LABEL_9;
  }
  v19 = swift_bridgeObjectRelease(a3);
  a2 = 0;
  a3 = 0xE000000000000000;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(a1, v7, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  v21 = &v13[*(int *)(v11 + 20)];
  *(_QWORD *)v21 = a2;
  *((_QWORD *)v21 + 1) = a3;
  return sub_1004B84E0((uint64_t)v13, v20, type metadata accessor for CRLBoardIdentifierStorage);
}

uint64_t sub_10067B154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  if ((a2 || a3 != 0xE000000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0, 0xE000000000000000, 0) & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
    if (v8 == a2 && v9 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v8, v9, 0);
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_12;
    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardUUID:globallyScopedOwnerName:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardIdentifier.swift", 90, 2, 31, "globallyScopedOwnerName must be globally scoped.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardUUID:globallyScopedOwnerName:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardIdentifier.swift", 90, 2u, 31, (uint64_t)"globallyScopedOwnerName must be globally scoped.", 48, 2u);
LABEL_12:
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a4, a1, v12);
  result = type metadata accessor for CRLBoardIdentifierStorage(0);
  v14 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v14 = a2;
  v14[1] = a3;
  return result;
}

void sub_10067B2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  __chkstk_darwin(v3);
  __asm { BR              X9 }
}

uint64_t sub_10067B374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  _QWORD *v24;

  if (BYTE6(v4) < 0x10uLL)
  {
    v9 = sub_10067D5A0();
    swift_allocError(&type metadata for CRLBoardIdentifierCodingError, v9, 0, 0);
    *v10 = 0;
    swift_willThrow(v11);
    return sub_1004BBBC8(v5, v4);
  }
  v12 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, unint64_t))Data.subdata(in:))(0, 16, v5, v4);
  UUID.init(crl_data:)(v12, v13);
  if (v1)
    return sub_1004BBBC8(v5, v4);
  if (v7)
  {
    if (v7 == 1)
    {
      LODWORD(v15) = HIDWORD(v5) - v5;
      if (!__OFSUB__(HIDWORD(v5), (_DWORD)v5))
      {
        v15 = (int)v15;
        goto LABEL_11;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v17 = *(_QWORD *)(v5 + 16);
    v16 = *(_QWORD *)(v5 + 24);
    v18 = __OFSUB__(v16, v17);
    v15 = v16 - v17;
    if (v18)
      goto LABEL_22;
  }
  else
  {
    v15 = BYTE6(v4);
  }
LABEL_11:
  if (v15 >= 17)
  {
    if (v7)
    {
      if (v7 == 1)
      {
        if (!__OFSUB__(HIDWORD(v5), (_DWORD)v5))
        {
          v19 = HIDWORD(v5) - (int)v5;
          goto LABEL_19;
        }
        goto LABEL_23;
      }
      v21 = *(_QWORD *)(v5 + 16);
      v20 = *(_QWORD *)(v5 + 24);
      v19 = v20 - v21;
      if (__OFSUB__(v20, v21))
      {
LABEL_24:
        __break(1u);
        JUMPOUT(0x10067B7D0);
      }
    }
    else
    {
      v19 = BYTE6(v4);
    }
LABEL_19:
    if (v19 >= 16)
    {
      ((void (*)(uint64_t))Data.subdata(in:))(16);
      v23 = (char *)&loc_10067B4F4 + dword_10067B80C[v22 >> 62];
      *(_QWORD *)(v8 - 200) = v22;
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x10067B7DCLL);
  }
  sub_1004BBBC8(v5, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v0, v3, v2);
  result = type metadata accessor for CRLBoardIdentifierStorage(0);
  v24 = (_QWORD *)(v0 + *(int *)(result + 20));
  *v24 = 0;
  v24[1] = 0xE000000000000000;
  return result;
}

void sub_10067B81C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  unint64_t v23;
  _BYTE *v24;
  __n128 v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  v41 = a2;
  v12 = sub_1004D292C();
  v13 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(58, 0xE100000000000000, 1, 0, &type metadata for String, v12);
  v15 = v13[2];
  if (v15)
  {
    swift_bridgeObjectRelease(a2);
    if (!v13[2])
    {
      __break(1u);
      goto LABEL_13;
    }
    v16 = v13[4];
    v17 = v13[5];
    v18 = v13[6];
    v19 = v13[7];
    v20 = swift_bridgeObjectRetain(v19);
    a1 = static String._fromSubstring(_:)(v16, v17, v18, v19, v20);
    a2 = v21;
    v14 = swift_bridgeObjectRelease(v19);
  }
  UUID.init(uuidString:)(a1, a2, v14);
  v22 = swift_bridgeObjectRelease(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v22) == 1)
  {
    swift_bridgeObjectRelease(v13);
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E1A50);
    v23 = sub_10067D5A0();
    swift_allocError(&type metadata for CRLBoardIdentifierCodingError, v23, 0, 0);
    *v24 = 1;
    swift_willThrow(v25);
    return;
  }
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26(v11, v7, v8);
  if (v15 <= 1)
  {
    v35 = swift_bridgeObjectRelease(v13);
    v32 = 0;
    v34 = 0xE000000000000000;
    goto LABEL_10;
  }
  if (v13[2] < 2uLL)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v27 = v13[8];
  v28 = v13[9];
  v29 = v13[10];
  v30 = v13[11];
  swift_bridgeObjectRetain(v30);
  v31 = swift_bridgeObjectRelease(v13);
  v32 = static String._fromSubstring(_:)(v27, v28, v29, v30, v31);
  v34 = v33;
  v35 = swift_bridgeObjectRelease(v30);
LABEL_10:
  v36 = v39;
  ((void (*)(uint64_t, char *, uint64_t, __n128))v26)(v39, v11, v8, v35);
  v37 = (uint64_t *)(v36 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  *v37 = v32;
  v37[1] = v34;
}

uint64_t sub_10067BA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  __n128 v16;
  uint64_t v18;
  unint64_t v19;

  v1 = type metadata accessor for String.Encoding(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = UUID.crl_data()();
  v18 = v5;
  v19 = v6;
  v7 = (_QWORD *)(v0 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = *v7;
  v9 = v7[1];
  if (String.count.getter(*v7, v9) >= 1)
  {
    static String.Encoding.utf8.getter(v10);
    v11 = String.data(using:allowLossyConversion:)(v4, 0, v8, v9);
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v13 >> 60 == 15)
    {
      v14 = sub_10067D5A0();
      swift_allocError(&type metadata for CRLBoardIdentifierCodingError, v14, 0, 0);
      *v15 = 2;
      swift_willThrow(v16);
      sub_1004BBBC8(v18, v19);
    }
    else
    {
      Data.append(_:)(v11, v13);
      sub_1004BE2FC(v11, v13);
      return v18;
    }
  }
  return v5;
}

uint64_t sub_10067BBE8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10067DAB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10067BC10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10067DAB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10067BC38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10067BCC4(a1, &qword_1013EA9A0, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t (*)(void))sub_10067DAB0, (uint64_t)&type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys, a2);
}

uint64_t sub_10067BC6C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10067BF48(a1, a2, a3, &qword_1013EA9B0, (uint64_t (*)(void))sub_10067DAB0, (uint64_t)&type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys);
}

uint64_t sub_10067BCA4(uint64_t a1, uint64_t a2)
{
  return sub_10067DAF4(a1, a2, type metadata accessor for CRLGloballyScopedBoardIdentifier) & 1;
}

uint64_t sub_10067BCC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a6;
  v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v11);
  v32 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(a2);
  v31 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a3;
  v17 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v14);
  __chkstk_darwin(v17);
  v28 = (uint64_t)&v27 - v18;
  v20 = a1[3];
  v19 = a1[4];
  sub_1004BB5A4(a1, v20);
  v21 = a4();
  v22 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)(a5, a5, v21, v20, v19);
  if (!v22)
  {
    v23 = sub_1004B7878(&qword_1013EA950, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F02364);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, v24, v13, v11, v23);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v13);
    v25 = v28;
    sub_1004B84E0(v32, v28, type metadata accessor for CRLBoardIdentifierStorage);
    sub_1004B84E0(v25, v29, v30);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

uint64_t sub_10067BE98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10067DC54();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10067BEC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10067DC54();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10067BEE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10067BCC4(a1, &qword_1013EA9E0, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(void))sub_10067DC54, (uint64_t)&type metadata for CRLBoardIdentifier.CodingKeys, a2);
}

uint64_t sub_10067BF1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10067BF48(a1, a2, a3, &qword_1013EA9D0, (uint64_t (*)(void))sub_10067DC54, (uint64_t)&type metadata for CRLBoardIdentifier.CodingKeys);
}

uint64_t sub_10067BF48(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v9 = v6;
  v11 = sub_1004B804C(a4);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  sub_1004BB5A4(a1, v15);
  v17 = a5();
  dispatch thunk of Encoder.container<A>(keyedBy:)(a6, a6, v17, v15, v16);
  v18 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v19 = sub_1004B7878(&qword_1013EA958, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F0233C);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v9, v20, v11, v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10067C060()
{
  return sub_1004B7878(&qword_1013EA700, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0219C);
}

Swift::Int sub_10067C08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v7, v1, v2);
  v3 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

double sub_10067C12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  v5 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = v5[1];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

Swift::Int sub_10067C1B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, a1);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v5 = *v4;
  v6 = v4[1];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

uint64_t sub_10067C254(uint64_t a1, uint64_t a2)
{
  return sub_10067DAF4(a1, a2, type metadata accessor for CRLBoardIdentifier) & 1;
}

Swift::Int sub_10067C274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v9, v3, v4);
  v5 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = v5[1];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v9, v6, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(*(_BYTE *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_10067C330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  v7 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  Hasher._combine(_:)(*(_BYTE *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_10067C3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, a1);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v10, v4, v5);
  v6 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v7 = *v6;
  v8 = v6[1];
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(v10, v7, v8);
  swift_bridgeObjectRelease(v8);
  Hasher._combine(_:)(*(_BYTE *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

_QWORD *sub_10067C49C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardIdentifierStorage(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EA880, (uint64_t)&nominal type descriptor for CRLBoardIdentifierStorage);
}

uint64_t sub_10067C55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_10067C5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10067C668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10067C6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10067C758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10067C764);
}

uint64_t sub_10067C764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_10067C7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10067C7FC);
}

uint64_t sub_10067C7FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for CRLBoardIdentifierAndValue(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EA760, (uint64_t)&nominal type descriptor for CRLBoardIdentifierAndValue);
}

uint64_t sub_10067C888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100653244(a1, a2, a3, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F02230);
}

double sub_10067C8A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20) + 8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

uint64_t sub_10067C8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10067C908);
}

uint64_t sub_10067C90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10067C918);
}

uint64_t type metadata accessor for CRLGloballyScopedBoardIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EA7F0, (uint64_t)&nominal type descriptor for CRLGloballyScopedBoardIdentifier);
}

uint64_t sub_10067C934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10067C940);
}

uint64_t sub_10067C940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10067C9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10067C9CC);
}

uint64_t sub_10067C9CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_10067CA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100653244(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&unk_100F022A0);
}

uint64_t *sub_10067CA5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t sub_10067CAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = v7[1];
  *v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_10067CB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *v6 = *v7;
  v8 = v7[1];
  v9 = v6[1];
  v6[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_10067CBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t sub_10067CC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (uint64_t *)(a2 + v5);
  v9 = *v7;
  v8 = v7[1];
  v10 = v6[1];
  *v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_10067CC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10067CCA0);
}

uint64_t sub_10067CCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10067CCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10067CCEC);
}

uint64_t sub_10067CCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_10067CD30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10067CD98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013EA9C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10067DC10();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardIdentifierStorage.CodingKeys, &type metadata for CRLBoardIdentifierStorage.CodingKeys, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v15 = *v14;
    v16 = v14[1];
    v19 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v19, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10067CEEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  char v33;

  v27 = a2;
  v30 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1004B804C(&qword_1013EA9B8);
  v5 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  sub_1004BB5A4(a1, v12);
  v13 = sub_10067DC10();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardIdentifierStorage.CodingKeys, &type metadata for CRLBoardIdentifierStorage.CodingKeys, v13, v12, v11);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v25 = a1;
  v26 = v5;
  v14 = (uint64_t)v10;
  v15 = v28;
  v33 = 0;
  v16 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v17 = v30;
  v18 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v33, v29, v30, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v31, v17);
  v32 = 1;
  v19 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v18);
  v22 = (uint64_t *)(v14 + *(int *)(v8 + 20));
  *v22 = v19;
  v22[1] = v21;
  sub_1004B8460(v14, v27, type metadata accessor for CRLBoardIdentifierStorage);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v25);
  return sub_1004B84A4(v14, type metadata accessor for CRLBoardIdentifierStorage);
}

uint64_t sub_10067D174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10067DC10();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10067D19C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10067DC10();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10067D1C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10067CEEC(a1, a2);
}

uint64_t sub_10067D1D8(_QWORD *a1)
{
  return sub_10067CD98(a1);
}

Swift::Int sub_10067D1EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v9, v3, v4);
  v5 = (uint64_t *)(v1 + *(int *)(a1 + 20));
  v6 = *v5;
  v7 = v5[1];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v9, v6, v7);
  swift_bridgeObjectRelease(v7);
  return Hasher._finalize()();
}

double sub_10067D290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  v7 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

Swift::Int sub_10067D318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, a1);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v10, v4, v5);
  v6 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v7 = *v6;
  v8 = v6[1];
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(v10, v7, v8);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

uint64_t sub_10067D3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  if ((static UUID.== infix(_:_:)(a1) & 1) == 0)
    return 0;
  v6 = *(int *)(a3 + 20);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v9[1];
  if (v7 == *v9 && v8 == v10)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, *v9, v10, 0);
}

uint64_t sub_10067D42C()
{
  return sub_1004B7878(&qword_1013EA948, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F022D4);
}

uint64_t sub_10067D458(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1004B7878(&qword_1013EA950, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F02364);
  a1[2] = sub_1004B7878(&qword_1013EA958, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F0233C);
  result = sub_1004B7878(&qword_1013EA960, type metadata accessor for CRLBoardIdentifierStorage, (uint64_t)&unk_100F022FC);
  a1[3] = result;
  return result;
}

uint64_t sub_10067D4D0()
{
  return sub_1004B7878(&qword_1013EA968, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F023A8);
}

uint64_t sub_10067D4FC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1004B7878(&qword_1013DF550, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02438);
  a1[2] = sub_1004B7878(&qword_1013DF560, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02410);
  result = sub_1004B7878(&qword_1013EA970, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F023D0);
  a1[3] = result;
  return result;
}

uint64_t sub_10067D574()
{
  return sub_1004B7878(&qword_1013EA978, type metadata accessor for CRLBoardIdentifierAndValue, (uint64_t)&unk_100F0247C);
}

unint64_t sub_10067D5A0()
{
  unint64_t result;

  result = qword_1013EA980;
  if (!qword_1013EA980)
  {
    result = swift_getWitnessTable(&unk_100F02890, &type metadata for CRLBoardIdentifierCodingError);
    atomic_store(result, (unint64_t *)&qword_1013EA980);
  }
  return result;
}

_QWORD *sub_10067D5E4(uint64_t a1, uint64_t a2, __n128 a3, uint64_t a4, _QWORD *(*a5)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = (_QWORD *)__DataStorage._bytes.getter(a3);
  v10 = (uint64_t)result;
  if (result)
  {
    result = (_QWORD *)__DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v10 += a1 - (_QWORD)result;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_15;
  }
  v13 = __DataStorage._length.getter();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = v10 + v14;
  if (v10)
    v16 = v15;
  else
    v16 = 0;
  result = sub_10067D73C(v10, v16, a5);
  if (v5)
    return (_QWORD *)v17;
  return result;
}

uint64_t sub_10067D690(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1004BE310(a1, a2);
  sub_10067D788(a1, a2);
  v5 = v4;
  sub_1004BBBC8(a1, a2);
  v6 = static String._fromUTF8Repairing(_:)(v5 + 32, *(_QWORD *)(v5 + 16));
  swift_release(v5);
  return v6;
}

uint64_t sub_10067D704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = static String._fromUTF8Repairing(_:)(a1, v4);
  *a3 = result;
  a3[1] = v6;
  return result;
}

_QWORD *sub_10067D73C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

void sub_10067D788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Data.Iterator(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

_QWORD *sub_10067D804()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;

  if (BYTE6(v0))
  {
    v6 = sub_1004B804C(&qword_1013EA998);
    v4 = (_QWORD *)swift_allocObject(v6, BYTE6(v0) + 32, 7);
    v7 = j__malloc_size_0(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v7 - 64;
    sub_1004BE310(v2, v0);
    v8 = ((uint64_t (*)(uint64_t, _QWORD *, _QWORD, uint64_t, unint64_t))Data._copyContents(initializing:))(v3, v4 + 4, BYTE6(v0), v2, v0);
    sub_1004BBBC8(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v8 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x10067D8D8);
    }
  }
  return v4;
}

uint64_t sub_10067D8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  if (!a1)
    a2 = 0;
  result = static String._fromUTF8Repairing(_:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10067D928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v21;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  v10 = static UUID.== infix(_:_:)(a1);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  if ((v10 & 1) != 0)
  {
    v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v12 = *(_QWORD *)&v9[v11];
    v13 = *(_QWORD *)&v9[v11 + 8];
    v14 = &v6[v11];
    v15 = *((_QWORD *)v14 + 1);
    if (v12 == *(_QWORD *)v14 && v13 == v15)
    {
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, *(_QWORD *)v14, v15, 0);
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      v18 = 0;
      if ((v17 & 1) == 0)
        return v18 & 1;
    }
    v19 = type metadata accessor for CRLBoardIdentifierAndValue(0);
    v18 = *(_BYTE *)(a1 + *(int *)(v19 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v19 + 20)) ^ 1;
  }
  else
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    v18 = 0;
  }
  return v18 & 1;
}

unint64_t sub_10067DAB0()
{
  unint64_t result;

  result = qword_1013EA9A8;
  if (!qword_1013EA9A8)
  {
    result = swift_getWitnessTable(&unk_100F02840, &type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EA9A8);
  }
  return result;
}

uint64_t sub_10067DAF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v19;
  uint64_t v21;

  v6 = a3(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - v10;
  v12 = static UUID.== infix(_:_:)(a1);
  sub_1004B8460(a1, (uint64_t)v11, a3);
  sub_1004B8460(a2, (uint64_t)v8, a3);
  if ((v12 & 1) != 0)
  {
    v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v14 = *(_QWORD *)&v11[v13];
    v15 = *(_QWORD *)&v11[v13 + 8];
    v16 = &v8[v13];
    v17 = *((_QWORD *)v16 + 1);
    if (v14 == *(_QWORD *)v16 && v15 == v17)
      v19 = 1;
    else
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, *(_QWORD *)v16, v17, 0);
  }
  else
  {
    v19 = 0;
  }
  sub_1004B84A4((uint64_t)v8, a3);
  sub_1004B84A4((uint64_t)v11, a3);
  return v19 & 1;
}

unint64_t sub_10067DC10()
{
  unint64_t result;

  result = qword_1013EA9C0;
  if (!qword_1013EA9C0)
  {
    result = swift_getWitnessTable(&unk_100F027F0, &type metadata for CRLBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EA9C0);
  }
  return result;
}

unint64_t sub_10067DC54()
{
  unint64_t result;

  result = qword_1013EA9D8;
  if (!qword_1013EA9D8)
  {
    result = swift_getWitnessTable(&unk_100F027A0, &type metadata for CRLBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EA9D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardIdentifier.CodingKeys()
{
  return &type metadata for CRLBoardIdentifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLBoardIdentifierStorage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10067DCF8 + 4 * byte_100F020D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10067DD2C + 4 * asc_100F020D0[v4]))();
}

uint64_t sub_10067DD2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10067DD34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10067DD3CLL);
  return result;
}

uint64_t sub_10067DD48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10067DD50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10067DD54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10067DD5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardIdentifierStorage.CodingKeys()
{
  return &type metadata for CRLBoardIdentifierStorage.CodingKeys;
}

uint64_t _s8Freeform18CRLBoardIdentifierV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10067DDB8 + 4 * byte_100F020DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10067DDD8 + 4 * byte_100F020DF[v4]))();
}

_BYTE *sub_10067DDB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10067DDD8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10067DDE0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10067DDE8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10067DDF0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10067DDF8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLGloballyScopedBoardIdentifier.CodingKeys()
{
  return &type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLBoardIdentifierCodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10067DE60 + 4 * byte_100F020E9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10067DE94 + 4 * byte_100F020E4[v4]))();
}

uint64_t sub_10067DE94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10067DE9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10067DEA4);
  return result;
}

uint64_t sub_10067DEB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10067DEB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10067DEBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10067DEC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardIdentifierCodingError()
{
  return &type metadata for CRLBoardIdentifierCodingError;
}

unint64_t sub_10067DEE4()
{
  unint64_t result;

  result = qword_1013EA9E8;
  if (!qword_1013EA9E8)
  {
    result = swift_getWitnessTable(&unk_100F02550, &type metadata for CRLBoardIdentifierCodingError);
    atomic_store(result, (unint64_t *)&qword_1013EA9E8);
  }
  return result;
}

unint64_t sub_10067DF2C()
{
  unint64_t result;

  result = qword_1013EA9F0;
  if (!qword_1013EA9F0)
  {
    result = swift_getWitnessTable(&unk_100F02608, &type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EA9F0);
  }
  return result;
}

unint64_t sub_10067DF74()
{
  unint64_t result;

  result = qword_1013EA9F8;
  if (!qword_1013EA9F8)
  {
    result = swift_getWitnessTable(&unk_100F026C0, &type metadata for CRLBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EA9F8);
  }
  return result;
}

unint64_t sub_10067DFBC()
{
  unint64_t result;

  result = qword_1013EAA00;
  if (!qword_1013EAA00)
  {
    result = swift_getWitnessTable(&unk_100F02778, &type metadata for CRLBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA00);
  }
  return result;
}

unint64_t sub_10067E004()
{
  unint64_t result;

  result = qword_1013EAA08;
  if (!qword_1013EAA08)
  {
    result = swift_getWitnessTable(&unk_100F026E8, &type metadata for CRLBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA08);
  }
  return result;
}

unint64_t sub_10067E04C()
{
  unint64_t result;

  result = qword_1013EAA10;
  if (!qword_1013EAA10)
  {
    result = swift_getWitnessTable(&unk_100F02710, &type metadata for CRLBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA10);
  }
  return result;
}

unint64_t sub_10067E094()
{
  unint64_t result;

  result = qword_1013EAA18;
  if (!qword_1013EAA18)
  {
    result = swift_getWitnessTable(&unk_100F02630, &type metadata for CRLBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA18);
  }
  return result;
}

unint64_t sub_10067E0DC()
{
  unint64_t result;

  result = qword_1013EAA20;
  if (!qword_1013EAA20)
  {
    result = swift_getWitnessTable(&unk_100F02658, &type metadata for CRLBoardIdentifierStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA20);
  }
  return result;
}

unint64_t sub_10067E124()
{
  unint64_t result;

  result = qword_1013EAA28;
  if (!qword_1013EAA28)
  {
    result = swift_getWitnessTable(&unk_100F02578, &type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA28);
  }
  return result;
}

unint64_t sub_10067E16C()
{
  unint64_t result;

  result = qword_1013EAA30;
  if (!qword_1013EAA30)
  {
    result = swift_getWitnessTable(&unk_100F025A0, &type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013EAA30);
  }
  return result;
}

id sub_10067E490()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Freeform28CRLSEExtensionContextManager____lazy_storage___presentedItemOperationQueue;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform28CRLSEExtensionContextManager____lazy_storage___presentedItemOperationQueue);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform28CRLSEExtensionContextManager____lazy_storage___presentedItemOperationQueue);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setName:", v5);

    objc_msgSend(v4, "setMaxConcurrentOperationCount:", 1);
    objc_msgSend(v4, "setQualityOfService:", 17);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_10067E658()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSEExtensionContextManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10067E6E4()
{
  return type metadata accessor for CRLSEExtensionContextManager(0);
}

uint64_t type metadata accessor for CRLSEExtensionContextManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EAAE0;
  if (!qword_1013EAAE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSEExtensionContextManager);
  return result;
}

void sub_10067E728(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = "\b";
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_10067E7A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013EAAF0)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013EAAF0);
  }
}

uint64_t sub_10067E7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_10067E948()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController()
{
  return objc_opt_self(_TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController);
}

void sub_10067EA0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  id v11;
  NSString v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v4 = sub_1004B804C(&qword_1013E1910);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v4, v8 + *(_QWORD *)(v6 + 72), v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9 + v8, a2, v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, v14);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "replaceCanvasElementInfo:withFilesAtURLs:allowedTypes:actionString:completion:", 0, isa, 0, v18, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);

}

uint64_t sub_10067EE60(const char *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  unsigned __int8 v12;
  NSString *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v20;
  _BOOL4 v22;
  objc_super v23;
  _QWORD v24[3];
  uint64_t v25;

  sub_1004F370C(a2, (uint64_t)v24);
  v4 = v25;
  if (v25)
  {
    v5 = sub_1004BB5A4(v24, v25);
    v6 = *(_QWORD *)(v4 - 8);
    v7 = __chkstk_darwin(v5);
    v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
  }
  else
  {
    v10 = 0;
  }
  v11 = (objc_class *)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController();
  v23.receiver = v2;
  v23.super_class = v11;
  v12 = objc_msgSendSuper2(&v23, "canPerformAction:withSender:", a1, v10);
  swift_unknownObjectRelease(v10);
  v13 = NSStringFromSelector(a1);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  if (v14 == 0x6572507478656E5FLL && v16 == 0xEC00000077656976)
    goto LABEL_6;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 0x6572507478656E5FLL, 0xEC00000077656976, 0) & 1) != 0)
  {
    v12 = 0;
    if (v14 != 0x6953656C67676F74 || v16 != 0xEE003A7261626564)
      goto LABEL_7;
    goto LABEL_12;
  }
  if (v14 != 0xD000000000000010 || v16 != 0x8000000100FC1120)
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 0xD000000000000010, 0x8000000100FC1120, 0);
    v22 = v14 == 0x6953656C67676F74 && v16 == 0xEE003A7261626564;
    if ((v20 & 1) == 0)
    {
      if (!v22)
        goto LABEL_7;
LABEL_12:
      swift_bridgeObjectRelease(0xEE003A7261626564);
      v18 = 1;
      return v18 & 1;
    }
    if (v22)
      goto LABEL_12;
  }
LABEL_6:
  v12 = 0;
LABEL_7:
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 0x6953656C67676F74, 0xEE003A7261626564, 0);
  swift_bridgeObjectRelease(v16);
  v18 = v17 | v12;
  return v18 & 1;
}

void sub_10067F24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void (*v33)(char *, char *, uint64_t);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  __n128 v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD aBlock[5];
  uint64_t v71;
  __objc2_prot *v72;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin(v5);
  v67 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - v15;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_shouldSaveMarkedUpItem) == 1)
  {
    v65 = v4;
    v66 = v2;
    v17 = OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem;
    v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem);
    if (v18
      && (v19 = type metadata accessor for CRLFileRepPlaceHolder(0), (v20 = swift_dynamicCastClass(v18, v19)) != 0))
    {
      v62 = v1;
      v21 = *(id *)(v20 + OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_fileRep);
      swift_unknownObjectRetain(v18);
      v64 = v21;
      v22 = objc_msgSend(v21, "interactiveCanvasController");
      if (v22)
      {
        v23 = v22;
        v63 = v18;
        v24 = objc_msgSend(v22, "editorController");
        if (v24)
        {
          v25 = v24;
          v61 = v23;
          v26 = objc_msgSend(v24, "mostSpecificCurrentEditorOfClass:", 0);
          v27 = v26;
          if (v26)
          {
            v72 = &OBJC_PROTOCOL___CRLMediaReplacing;
            v28 = swift_dynamicCastObjCProtocolConditional(v26, 1, &v72);
            if (v28)
            {
              v59 = v28;
              v60 = v27;

              v29 = *(void **)(v0 + v17);
              if (!v29)
              {
                __break(1u);
                return;
              }
              v30 = objc_msgSend(v29, "previewItemURL");
              v31 = v61;
              if (v30)
              {
                v32 = v30;
                static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

                v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
                v33(v9, v13, v10);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
                {
                  v33(v16, v9, v10);
                  sub_100503E34();
                  v58 = static OS_dispatch_queue.main.getter(v34);
                  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
                  v35 = *(unsigned __int8 *)(v11 + 80);
                  v36 = (v35 + 24) & ~v35;
                  v37 = swift_allocObject(&unk_101275508, v36 + v12, v35 | 7);
                  *(_QWORD *)(v37 + 16) = v59;
                  v33((char *)(v37 + v36), v13, v10);
                  aBlock[4] = sub_10067FF34;
                  v71 = v37;
                  aBlock[0] = _NSConcreteStackBlock;
                  aBlock[1] = *(_QWORD *)"";
                  aBlock[2] = sub_1005D2FC0;
                  aBlock[3] = &unk_101275520;
                  v38 = _Block_copy(aBlock);
                  v39 = v71;
                  v40 = v60;
                  swift_unknownObjectRetain(v60);
                  v41 = swift_release(v39);
                  v42 = v67;
                  static DispatchQoS.unspecified.getter(v41);
                  aBlock[0] = _swiftEmptyArrayStorage;
                  v43 = sub_1004CB65C();
                  v44 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
                  v45 = sub_100503E88();
                  v46 = v65;
                  v47 = v62;
                  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v45, v62, v43);
                  v48 = (void *)v58;
                  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v42, v46, v38);
                  _Block_release(v38);
                  swift_unknownObjectRelease(v63);

                  swift_unknownObjectRelease(v40);
                  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v47);
                  (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v69);
                  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
                  return;
                }
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
              }
              sub_1004CB800((uint64_t)v9, &qword_1013E04D0);
              if (qword_1013DD6C8 != -1)
                swift_once(&qword_1013DD6C8, sub_100A00D28);
              swift_beginAccess(&static OS_os_log.crlError, aBlock, 0, 0);
              v49 = (id)static OS_os_log.crlError;
              v57 = static os_log_type_t.default.getter(v56);
              sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v57, "Cannot get previewItemURL", 25, 2, (uint64_t)_swiftEmptyArrayStorage);
              swift_unknownObjectRelease(v63);

              swift_unknownObjectRelease(v60);
              goto LABEL_22;
            }
          }

          swift_unknownObjectRelease(v27);
          v23 = v61;
        }
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, aBlock, 0, 0);
        v49 = (id)static OS_os_log.crlError;
        v55 = static os_log_type_t.default.getter(v54);
        sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v55, "Cannot get Media Replacing Editor", 33, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_unknownObjectRelease(v63);

      }
      else
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, aBlock, 0, 0);
        v49 = (id)static OS_os_log.crlError;
        v53 = static os_log_type_t.default.getter(v52);
        sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v53, "Cannot get ICC in QLPreview", 27, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_unknownObjectRelease(v18);

      }
    }
    else
    {
      if (qword_1013DD6C8 != -1)
        swift_once(&qword_1013DD6C8, sub_100A00D28);
      swift_beginAccess(&static OS_os_log.crlError, aBlock, 0, 0);
      v49 = (id)static OS_os_log.crlError;
      v51 = static os_log_type_t.default.getter(v50);
      sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v51, "Cannot get fileRep in QLPreview", 31, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
LABEL_22:

  }
}

double sub_10067F930()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView), "removeFromSuperview");
  v2 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  v3 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8);
  v5 = swift_retain(v4);
  v3(v5);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_10067F98C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSURL *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  unsigned int v48;
  uint64_t v50;
  id v51;
  id v52;
  _BYTE v53[24];

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLFileRepPlaceHolder(0);
  v10 = swift_dynamicCastClass(a1, v9);
  if (!v10)
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v53, 0, 0);
    v24 = (id)static OS_os_log.crlError;
    v26 = static os_log_type_t.default.getter(v25);
    sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "Cannot get fileRep in QLPreview", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  v11 = *(void **)(v10 + OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_fileRep);
  swift_unknownObjectRetain(a1);
  v12 = v11;
  v13 = objc_msgSend(v12, "interactiveCanvasController");
  if (!v13)
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v53, 0, 0);
    v27 = (id)static OS_os_log.crlError;
    v29 = static os_log_type_t.default.getter(v28);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "Cannot get ICC in QLPreview", 27, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(a1);

    return 0;
  }
  v14 = v13;
  v15 = (char *)objc_msgSend(v13, "editingCoordinator");
  if (!v15)
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v53, 0, 0);
    v30 = (id)static OS_os_log.crlError;
    v32 = static os_log_type_t.default.getter(v31);
    sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v32, "Cannot get the main board in QLPreview", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(a1);

    return 0;
  }
  v16 = v15;
  v52 = v12;
  v17 = (char *)*(id *)&v15[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];

  v51 = v17;
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState];
  v19 = *(void **)(v18 + 16);
  if (!v19)
    goto LABEL_18;
  swift_retain(v18);
  v20 = v19;
  v21 = objc_msgSend(v20, "currentUserParticipant");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "permission");
    swift_release(v18);

    if (v23 == (id)2)
      goto LABEL_25;
LABEL_18:
    v34 = objc_msgSend(a1, "previewItemURL");
    if (v34)
    {
      v35 = v34;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);

      v36 = type metadata accessor for URL(0);
      v37 = *(_QWORD *)(v36 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v36);
      v38 = objc_allocWithZone((Class)NSItemProvider);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v36) == 1)
      {
        v40 = 0;
      }
      else
      {
        URL._bridgeToObjectiveC()(v39);
        v40 = v42;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v36);
      }
    }
    else
    {
      v41 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v8, 1, 1, v41);
      v38 = objc_allocWithZone((Class)NSItemProvider);
      v40 = 0;
    }
    v43 = objc_msgSend(v38, "initWithContentsOfURL:", v40);

    if (v43)
    {
      v44 = static UTType.pdf.getter();
      UTType.identifier.getter(v44);
      v46 = v45;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v47 = String._bridgeToObjectiveC()();
      v48 = objc_msgSend(v43, "hasRepresentationConformingToTypeIdentifier:fileOptions:", v47, 0, swift_bridgeObjectRelease(v46).n128_f64[0]);

      swift_unknownObjectRelease(a1);
      return v48;
    }
    goto LABEL_25;
  }
  v33 = objc_msgSend(v20, "publicPermission");
  swift_release(v18);

  if (v33 != (id)2)
    goto LABEL_18;
LABEL_25:
  swift_unknownObjectRelease(a1);

  return 0;
}

uint64_t sub_10067FEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10067FF34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_10067EA0C(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10067FF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10067FF74(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_10067FF80()
{
  unint64_t result;

  result = qword_1013EAD30;
  if (!qword_1013EAD30)
  {
    result = swift_getWitnessTable(&unk_100F029F0, &type metadata for CRLInsertPhotosToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013EAD30);
  }
  return result;
}

unint64_t sub_10067FFC8()
{
  unint64_t result;

  result = qword_1013EAD38;
  if (!qword_1013EAD38)
  {
    result = swift_getWitnessTable(&unk_100F02A18, &type metadata for CRLInsertPhotosToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013EAD38);
  }
  return result;
}

uint64_t sub_10068000C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10111E3AC, 1) + 8);
}

uint64_t sub_100680030(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10111E384, 1);
}

uint64_t sub_100680040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  unsigned int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unsigned int v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD v80[2];
  _QWORD v81[7];

  v79 = a1;
  v78 = type metadata accessor for InputConnectionBehavior(0);
  v74 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v77 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v73 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v76 = (char *)&v61 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v72 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v70 = v21;
  __chkstk_darwin(v21);
  v75 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v66 = (char *)&v61 - v25;
  v71 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v28(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter title for a board", 27, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100FC12A0);
  static Locale.current.getter(v29);
  v63 = v27;
  v30 = v11;
  v64 = v11;
  v28(v14, v27, v11);
  v62 = v28;
  v65 = v10;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for a board", 33, 2);
  v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v69(v10, 0, 1, v21);
  v31 = type metadata accessor for CRLBoardEntity(0);
  v32 = v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v72, 1, 1, v31);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v33);
  v28(v14, v27, v30);
  v34 = v75;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Prompt for selecting a board from the list", 42, 2);
  v35 = v76;
  IntentDialog.init(_:)(v34);
  v36 = type metadata accessor for IntentDialog(0);
  v37 = v35;
  v38 = v35;
  v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v68 = v39;
  v39(v37, 0, 1, v36);
  v40 = v73;
  v39(v73, 1, 1, v36);
  v67 = enum case for InputConnectionBehavior.default(_:);
  v74 = *(_QWORD *)(v74 + 104);
  v41 = v77;
  ((void (*)(char *))v74)(v77);
  v42 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v43 = v66;
  v44 = v65;
  v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v66, v65, v32, v38, v40, v41, v42);
  *v79 = v45;
  v73 = (char *)sub_1004B804C(&qword_1013E3430);
  v46 = String.LocalizationValue.init(stringLiteral:)(0x736F746F6850, 0xE600000000000000);
  static Locale.current.getter(v46);
  v47 = v63;
  v48 = v64;
  v49 = v62;
  v62(v14, v63, v64);
  v50 = v43;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Intent parameter title for photos", 33, 2);
  v51 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000026, 0x8000000100FC12F0);
  static Locale.current.getter(v51);
  v49(v14, v47, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for photos", 32, 2);
  v69(v44, 0, 1, v70);
  v81[0] = 0;
  v52 = String.LocalizationValue.init(stringLiteral:)(0x6870206863696857, 0xED00003F736F746FLL);
  static Locale.current.getter(v52);
  v49(v14, v47, v48);
  v53 = v75;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Prompt for selecting photos to insert", 37, 2);
  v54 = v76;
  IntentDialog.init(_:)(v53);
  v68(v54, 0, 1, v36);
  v55 = v77;
  ((void (*)(char *, _QWORD, uint64_t))v74)(v77, v67, v78);
  v56 = IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)(v50, v44, v81, &off_101264BF8, v54, v55);
  v57 = v79;
  v79[1] = v56;
  sub_1004B804C(&qword_1013E1128);
  v80[0] = 0xD00000000000001FLL;
  v80[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v80, &type metadata for String, &protocol witness table for String);
  v58 = type metadata accessor for AppDependencyManager(0);
  v59 = static AppDependencyManager.shared.getter(v58);
  v57[2] = AppDependency.__allocating_init(key:manager:)(v81, v59);
  v57[6] = (uint64_t)&type metadata for CRLInsertFilesToBoardIntentPerformer;
  v57[7] = (uint64_t)&off_101273518;
  result = swift_allocObject(&unk_1012755E0, 56, 7);
  v57[3] = result;
  *(_QWORD *)(result + 40) = &type metadata for CRLAppIntentsBoardItemsImporter;
  *(_QWORD *)(result + 48) = &off_10127EC60;
  return result;
}

uint64_t sub_100680854(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2[10] = a1;
  v2[11] = v1;
  v3 = type metadata accessor for CRLBoardEntity(0);
  v2[12] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v4);
  v2[14] = swift_task_alloc(v4);
  v5 = sub_1004B804C(&qword_1013E1110);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[17] = v7;
  v2[18] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v2[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IntentDialog(0);
  v2[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[23] = v12;
  v2[24] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  v2[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E8A18);
  v2[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IntentFile(0);
  v2[27] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[28] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[29] = swift_task_alloc(v17);
  v2[30] = swift_task_alloc(v17);
  return swift_task_switch(sub_100680A14, 0, 0);
}

_QWORD *sub_100680A14()
{
  uint64_t v0;
  _QWORD *result;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  Class isa;
  unsigned __int8 v23;
  __n128 v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  double *v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  double *v70;

  result = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v2 = *(_QWORD *)(v0 + 56);
  v70 = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v0 + 224);
  v66 = *(_QWORD *)(v2 + 16);
  if (v66)
  {
    v4 = 0;
    v61 = _swiftEmptyArrayStorage;
    v59 = *(_QWORD *)(v0 + 56);
    while (1)
    {
      if (v4 >= *(_QWORD *)(v2 + 16))
      {
        __break(1u);
        return result;
      }
      v6 = *(_QWORD *)(v0 + 208);
      v5 = *(_QWORD *)(v0 + 216);
      v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v8 = *(_QWORD *)(v3 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v6, v2 + v7 + v8 * v4, v5);
      v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v63(v6, 0, 1, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v5) == 1)
        goto LABEL_20;
      v69 = v7;
      v9 = *(_QWORD *)(v0 + 200);
      v10 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 32);
      v11 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v10)(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
      IntentFile.type.getter(v11);
      v12 = type metadata accessor for UTType(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
      {
        sub_1004CB800(*(_QWORD *)(v0 + 200), (uint64_t *)&unk_1013E3620);
      }
      else
      {
        v60 = (uint64_t (*)(char *, uint64_t, uint64_t))v10;
        v14 = sub_1004B804C(&qword_1013E7938);
        v15 = swift_allocObject(v14, ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), *(unsigned __int8 *)(v13 + 80) | 7);
        *(_OWORD *)(v15 + 16) = xmmword_100EF5A10;
        v16 = static UTType.image.getter();
        v17 = static UTType.movie.getter(v16);
        UTType.identifier.getter(v17);
        v19 = v18;
        v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v19);
        v21 = objc_msgSend((id)objc_opt_self(UTType), "typeWithIdentifier:", v20);

        v62 = *(_QWORD *)(v0 + 200);
        if (v21)
        {
          isa = Array._bridgeToObjectiveC()().super.isa;
          v23 = objc_msgSend(v21, "crl_conformsToAnyUTType:", isa);

          v24 = swift_bridgeObjectRelease(v15);
          (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v62, v12, v24);
          v2 = v59;
          if ((v23 & 1) != 0)
          {
            v60(*(char **)(v0 + 232), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
            if ((swift_isUniquelyReferenced_nonNull_native(v61) & 1) == 0)
            {
              sub_100600B14(0, *((_QWORD *)v61 + 2) + 1, 1);
              v61 = v70;
            }
            v26 = *((_QWORD *)v61 + 2);
            v25 = *((_QWORD *)v61 + 3);
            if (v26 >= v25 >> 1)
            {
              sub_100600B14(v25 > 1, v26 + 1, 1);
              v61 = v70;
            }
            v27 = *(_QWORD *)(v0 + 232);
            v28 = *(_QWORD *)(v0 + 216);
            *((_QWORD *)v61 + 2) = v26 + 1;
            result = (_QWORD *)v60((char *)v61 + v69 + v26 * v8, v27, v28);
            v70 = v61;
            goto LABEL_5;
          }
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"crl_conforms(toAnyUTType:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLUTIUtilities.swift", 86, 2, 14, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_conforms(toAnyUTType:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLUTIUtilities.swift", 86, 2u, 14, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          v29 = swift_bridgeObjectRelease(v15);
          (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v62, v12, v29);
          v2 = v59;
        }
      }
      result = (_QWORD *)(*(uint64_t (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
LABEL_5:
      if (v66 == ++v4)
      {
        v63(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 216));
        goto LABEL_20;
      }
    }
  }
  v61 = _swiftEmptyArrayStorage;
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v3 + 56))(*(_QWORD *)(v0 + 208), 1, 1, *(_QWORD *)(v0 + 216));
LABEL_20:
  v30 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRelease(v2);
  sub_1004CB800(v30, &qword_1013E8A18);
  *(_QWORD *)(v0 + 248) = v61;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 64));
  v31 = *(_QWORD *)(v0 + 64);
  v32 = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRelease(v31);
  sub_100588D60(v32, *((_QWORD *)v61 + 2), &_mh_execute_header, (uint64_t)"perform()", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Intents/Content Insertion/CRLInsertPhotosToBoardIntent.swift", 125, 2u, 74);
  if (*((_QWORD *)v61 + 2))
  {
    v33 = *(_QWORD **)(v0 + 112);
    sub_1004BB5A4((_QWORD *)(*(_QWORD *)(v0 + 88) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 88) + 48));
    v34 = IntentParameter.wrappedValue.getter(v33);
    AppDependency.wrappedValue.getter(v34);
    *(_QWORD *)(v0 + 40) = &type metadata for CRLBoardLibraryProvidingDependency;
    *(_QWORD *)(v0 + 48) = &off_10129B490;
    v35 = (_QWORD *)swift_task_alloc(dword_1013E8A0C);
    *(_QWORD *)(v0 + 256) = v35;
    *v35 = v0;
    v35[1] = sub_100681124;
    return (_QWORD *)sub_100635C9C((uint64_t)v61, *(_QWORD *)(v0 + 112), v0 + 16);
  }
  else
  {
    v36 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 168);
    v64 = *(_QWORD *)(v0 + 192);
    v67 = *(_QWORD *)(v0 + 176);
    v39 = *(_QWORD *)(v0 + 152);
    v38 = *(_QWORD *)(v0 + 160);
    v40 = *(_QWORD *)(v0 + 136);
    v41 = *(_QWORD *)(v0 + 144);
    v42 = *(_QWORD *)(v0 + 120);
    v43 = *(_QWORD *)(v0 + 128);
    swift_release(v61);
    v44 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100FB4140);
    static Locale.current.getter(v44);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v41, enum case for LocalizedStringResource.BundleDescription.main(_:), v43);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)(v38, 0x6E497070414C5243, 0xED000073746E6574, v39, v41, "Dialog text to request missing app intent parameter", 51, 2);
    v45 = IntentDialog.init(_:)(v37);
    v46 = IntentParameter.projectedValue.getter(v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v42, v64, v67);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v42, 0, 1, v67);
    v47 = type metadata accessor for AppIntentError(0);
    v48 = sub_1004B7878(&qword_1013E3458, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v47, v48, 0, 0);
    IntentParameter.needsValueError(_:)(v42);
    swift_release(v46);
    sub_1004CB800(v42, &qword_1013E1110);
    swift_willThrow(v49);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v64, v67);
    v50 = *(_QWORD *)(v0 + 232);
    v52 = *(_QWORD *)(v0 + 200);
    v51 = *(_QWORD *)(v0 + 208);
    v53 = *(_QWORD *)(v0 + 192);
    v55 = *(_QWORD *)(v0 + 160);
    v54 = *(_QWORD *)(v0 + 168);
    v57 = *(_QWORD *)(v0 + 144);
    v56 = *(_QWORD *)(v0 + 152);
    v58 = *(_QWORD *)(v0 + 120);
    v65 = *(_QWORD *)(v0 + 112);
    v68 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v65);
    swift_task_dealloc(v68);
    return (_QWORD *)(*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100681124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 256);
  *(_QWORD *)(*(_QWORD *)v2 + 264) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[31];
    sub_1005761B8(v4[14]);
    swift_release(v6);
    v7 = sub_100681330;
  }
  else
  {
    v8 = v4 + 2;
    v9 = v4[31];
    v10 = v4[14];
    swift_bridgeObjectRelease(a1);
    swift_release(v9);
    sub_1005761B8(v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    v7 = sub_1006811D4;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1006811D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD **)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = IntentParameter.wrappedValue.getter(v4);
  v7 = IntentParameter.projectedValue.getter(v6);
  *(_QWORD *)(v0 + 72) = v7;
  v8 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v9 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v4, v0 + 72, v5, &type metadata for CRLOpenBoardIntent, v8, v9);
  swift_release(v7);
  sub_1005761B8((uint64_t)v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100681330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100681408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147EEF0);
  sub_1004F2A1C(v10, (uint64_t)qword_10147EEF0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x746F685020646441, 0xEA0000000000736FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100681594()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013EAD68);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013EAD70);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1006818A0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 2, &type metadata for CRLInsertPhotosToBoardIntent, v6);
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100F02A60);
  v9 = sub_1004B804C(&qword_1013EAD78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100F02A88);
  v12 = sub_1004B804C(&qword_1013EAD80);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLInsertPhotosToBoardIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLInsertPhotosToBoardIntent, v6);
}

uint64_t sub_100681750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCCF8 != -1)
    swift_once(&qword_1013DCCF8, sub_100681408);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147EEF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1006817C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EAD64);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100680854(a1);
}

uint64_t sub_100681818(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1006818A0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLInsertPhotosToBoardIntent()
{
  return &type metadata for CRLInsertPhotosToBoardIntent;
}

uint64_t sub_100681850()
{
  return sub_1004CBA30(&qword_1013EAD48, &qword_1013EAD50, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10068187C()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

unint64_t sub_1006818A0()
{
  unint64_t result;

  result = qword_1013EAD58;
  if (!qword_1013EAD58)
  {
    result = swift_getWitnessTable(&unk_100F02960, &type metadata for CRLInsertPhotosToBoardIntent);
    atomic_store(result, &qword_1013EAD58);
  }
  return result;
}

uint64_t sub_1006818E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10068190C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100681A3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSApplication();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSApplication()
{
  return objc_opt_self(_TtC8Freeform17CRLiOSApplication);
}

double sub_100681AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  type metadata accessor for MainActor(0);
  swift_retain(a1);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 40) & ~v14;
  v16 = (char *)swift_allocObject(&unk_1012758C0, v15 + v6, v14 | 7);
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v16 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v7, v4);
  v17 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013EAFE8, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100681C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t result;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v2 = v1;
  v4 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v2, (uint64_t)v6, v7);
  result = swift_getEnumCaseMultiPayload(v6, v4);
  if ((_DWORD)result == 2)
  {
    v15 = *(_OWORD *)v6;
    v23 = *((_OWORD *)v6 + 1);
    v24 = v15;
    v16 = *((_OWORD *)v6 + 2);
    v21 = *((_OWORD *)v6 + 3);
    v22 = v16;
    v20 = *((_OWORD *)v6 + 4);
    v14 = *((_QWORD *)v6 + 10);
    v17 = *((_QWORD *)v6 + 11);
    v18 = *((_QWORD *)v6 + 12);
    v19 = *((_QWORD *)v6 + 13);

    swift_unknownObjectRelease(v19);
    swift_unknownObjectRelease(v18);
    result = swift_unknownObjectRelease(v17);
    v13 = v20;
    v12 = v21;
    v11 = v22;
    v10 = v23;
    v9 = v24;
  }
  else if ((_DWORD)result == 1)
  {
    v9 = *(_OWORD *)v6;
    v10 = *((_OWORD *)v6 + 1);
    v11 = *((_OWORD *)v6 + 2);
    v12 = *((_OWORD *)v6 + 3);
    v13 = *((_OWORD *)v6 + 4);
    v14 = *((_QWORD *)v6 + 10);
  }
  else
  {
    result = sub_1004B84A4((uint64_t)v6, _s15AppExRepBackendC12BackendStateOMa);
    v14 = 0;
    v9 = 0uLL;
    v10 = 0uLL;
    v11 = 0uLL;
    v12 = 0uLL;
    v13 = 0uLL;
  }
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  return result;
}

uint64_t sub_100681D44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = v1;
  v3 = _s15AppExRepBackendC12BackendStateOMa(0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[12] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v2[13] = v5;
  v2[14] = v6;
  return swift_task_switch(sub_100681DD0, v5, v6);
}

uint64_t sub_100681DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  __n128 v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_1004B8460(*(_QWORD *)(v0 + 72), v1, _s15AppExRepBackendC12BackendStateOMa);
  v4 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v3 + 136);
  v5 = swift_retain(v3);
  v4(v1, v5);
  swift_release(v3);
  v6 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate);
  *(_QWORD *)(v0 + 120) = Strong;
  if (Strong)
  {
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType(Strong);
    v11 = v8 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    sub_100682030();
    v12 = *(int **)(v9 + 16);
    v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc(v12[1]);
    *(_QWORD *)(v0 + 128) = v13;
    *v13 = v0;
    v13[1] = sub_100681F10;
    return v15(v11, v0 + 16, ObjectType, v9);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100681F10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[13];
    v5 = v2[14];
    v6 = sub_100681FCC;
  }
  else
  {
    swift_unknownObjectRelease(v2[15]);
    sub_10068EAE8(v2 + 2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
    v4 = v2[13];
    v5 = v2[14];
    v6 = sub_100681F90;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100681F90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100681FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 96));
  sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  swift_unknownObjectRelease(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100682030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(__n128);
  __n128 v6;
  char *v7;
  uint64_t v8;

  v1 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  v5 = *(void (**)(__n128))(*(_QWORD *)v4 + 128);
  v6 = swift_retain(v4);
  v5(v6);
  swift_release(v4);
  v7 = (char *)sub_100682100 + 4 * byte_100F02AD0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100682100()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1004B84A4(v2, _s15AppExRepBackendC12BackendStateOMa);
  *v0 = 1;
  v0[1] = 0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = v1;
  v0[6] = 0;
  return result;
}

uint64_t sub_1006822B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[19] = a1;
  v2[20] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[21] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[22] = v4;
  v2[23] = v5;
  return swift_task_switch(sub_10068231C, v4, v5);
}

uint64_t sub_10068231C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = v0[19];
  v2 = v0[20];
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 16, 0, 0);
  v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v3;
  v7 = UUID.uuidString.getter(v6);
  v9 = v8;
  v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
  v11 = String.subscript.getter(15, v10, v7, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v9);
  v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v22 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  v23 = sub_100952438();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = v24;
  v26 = static os_log_type_t.debug.getter(v25);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v26, "(AppEx:CoreRE) [%{public}@] loadScene(%@)", 41, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v27);

  v28 = swift_task_alloc(32);
  v0[24] = v28;
  *(_QWORD *)(v28 + 16) = v2;
  *(_QWORD *)(v28 + 24) = v1;
  v29 = (_QWORD *)swift_task_alloc(dword_1013EAF9C);
  v0[25] = v29;
  *v29 = v0;
  v29[1] = sub_100682540;
  return sub_1006857DC((uint64_t)v29, 0x6E65635364616F6CLL, 0xEB00000000292865, dword_1013EAF90);
}

uint64_t sub_100682540()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[22];
    v5 = v2[23];
    v6 = sub_1006825E0;
  }
  else
  {
    swift_task_dealloc(v2[24]);
    v4 = v2[22];
    v5 = v2[23];
    v6 = sub_1006825AC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006825AC()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006825E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100682620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3[55] = a3;
  v3[47] = a2;
  v4 = sub_1004B804C(&qword_1013EAFA0);
  v3[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013EAFA8);
  v3[57] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[58] = v6;
  v3[59] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013EAFB0);
  v3[60] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[61] = v8;
  v3[62] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v3[63] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s15AppExRepBackendC12BackendStateOMa(0);
  v3[64] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[65] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[66] = swift_task_alloc(v12);
  v3[67] = swift_task_alloc(v12);
  v3[68] = swift_task_alloc(v12);
  v3[69] = swift_task_alloc(v12);
  v3[70] = swift_task_alloc(v12);
  v3[71] = swift_task_alloc(v12);
  v3[72] = swift_task_alloc(v12);
  v3[73] = swift_task_alloc(v12);
  v3[74] = swift_task_alloc(v12);
  v3[75] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v3[76] = v13;
  v3[77] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v3[78] = v14;
  v3[79] = v15;
  return swift_task_switch(sub_1006827CC, v14, v15);
}

void sub_1006827CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__n128);
  __n128 v7;
  char *v8;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 376);
  sub_1006845AC();
  *(CFTimeInterval *)(v0 + 640) = CACurrentMediaTime();
  v4 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  *(_QWORD *)(v0 + 648) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  v5 = *(_QWORD *)(v3 + v4);
  v6 = *(void (**)(__n128))(*(_QWORD *)v5 + 128);
  v7 = swift_retain(v5);
  v6(v7);
  swift_release(v5);
  v8 = (char *)sub_10068286C + 4 * byte_100F02AD5[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10068286C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1004B84A4(v0[75], _s15AppExRepBackendC12BackendStateOMa);
  v1 = v0[55];
  v2 = swift_task_alloc(32);
  v0[104] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[105] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1013EAF4C);
  v0[106] = v4;
  *v4 = v0;
  v4[1] = sub_100684098;
  return sub_100684CAC((uint64_t)sub_10068E32C, v2, (uint64_t)&unk_1013EAFC0, v3);
}

uint64_t sub_1006829F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  _QWORD *v18;

  v4 = *(_QWORD *)(v1 + 584);
  v5 = *(_QWORD *)(v1 + 528);
  v6 = *(_QWORD *)(v1 + 512);
  v7 = *(_QWORD *)(v1 + 376);
  sub_100689EEC(**(_QWORD **)(v1 + 600), *(_QWORD *)(*(_QWORD *)(v1 + 600) + 8), *(_BYTE *)(*(_QWORD *)(v1 + 600) + 16));
  swift_storeEnumTagMultiPayload(v5, v6, 4);
  v8 = *(_QWORD *)(v2 + v3);
  sub_1004B8460(v5, v4, _s15AppExRepBackendC12BackendStateOMa);
  v9 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v8 + 136);
  v10 = swift_retain(v8);
  v9(v4, v10);
  swift_release(v8);
  v11 = v7 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v1 + 376);
    v15 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong);
    v17 = v14 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    sub_100682030();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v15 + 8))(v17, v0, ObjectType, v15);
    swift_unknownObjectRelease(v13);
    sub_10068EAE8(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  sub_1004B84A4(*(_QWORD *)(v1 + 528), _s15AppExRepBackendC12BackendStateOMa);
  v18 = (_QWORD *)swift_task_alloc(dword_1013EAF84);
  *(_QWORD *)(v1 + 864) = v18;
  *v18 = v1;
  v18[1] = sub_100684218;
  return sub_1006822B0(*(_QWORD *)(v1 + 440));
}

uint64_t sub_100682B2C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = v1[74];
  v5 = v1[73];
  v6 = v1[64];
  v7 = v1[47];
  sub_1004B8460(v1[55], v4, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_storeEnumTagMultiPayload(v4, v6, 0);
  v8 = *(_QWORD *)(v2 + v3);
  sub_1004B8460(v4, v5, _s15AppExRepBackendC12BackendStateOMa);
  v9 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v8 + 136);
  v10 = swift_retain(v8);
  v9(v5, v10);
  swift_release(v8);
  v11 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  v1[82] = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  v12 = v7 + v11;
  Strong = swift_unknownObjectWeakLoadStrong(v7 + v11);
  if (Strong)
  {
    v14 = Strong;
    v15 = v1[47];
    v16 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType(Strong);
    v18 = v15 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    sub_100682030();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v16 + 8))(v18, v0, ObjectType, v16);
    swift_unknownObjectRelease(v14);
    sub_10068EAE8(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  sub_1004B84A4(v1[74], _s15AppExRepBackendC12BackendStateOMa);
  v19 = type metadata accessor for CRLUSDRenderingExtensionConnector();
  swift_initStaticObject(v19, &unk_1013DDF90);
  v20 = (_QWORD *)swift_task_alloc(dword_1013F817C);
  v1[83] = v20;
  *v20 = v1;
  v20[1] = sub_100682C7C;
  return sub_1008B007C();
}

uint64_t sub_100682C7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  char *v11;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 664);
  v5 = *(_QWORD **)v2;
  v5[84] = a1;
  v5[85] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_10068427C, v5[78], v5[79]);
  v7 = (void *)v5[47];
  v8 = unk_1013EAFCC;
  v11 = (char *)&dword_1013EAFC8 + dword_1013EAFC8;
  swift_retain(a1);
  v9 = v7;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v5[86] = v10;
  *v10 = v5;
  v10[1] = sub_100682D50;
  return ((uint64_t (*)(uint64_t, _QWORD))v11)(a1, v5[47]);
}

uint64_t sub_100682D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *(_QWORD **)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 688);
  v6[87] = a1;
  v6[88] = a2;
  v6[89] = a3;
  v6[90] = a4;
  v6[91] = v4;
  swift_task_dealloc(v7);
  if (v4)
    v8 = sub_1006832F0;
  else
    v8 = sub_100682DCC;
  return swift_task_switch(v8, v6[78], v6[79]);
}

uint64_t sub_100682DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, __n128);
  id v52;
  __n128 v53;
  uint64_t Strong;
  uint64_t v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 648));
  v4 = *(void (**)(__n128))(*(_QWORD *)v3 + 128);
  v5 = swift_retain(v3);
  v4(v5);
  swift_release(v3);
  if (swift_getEnumCaseMultiPayload(v1, v2))
  {
    v6 = *(_QWORD *)(v0 + 720);
    v7 = *(void **)(v0 + 712);
    v8 = *(_QWORD *)(v0 + 704);
    v9 = *(_QWORD *)(v0 + 696);
    v10 = *(_QWORD *)(v0 + 616);
    v11 = *(_QWORD *)(v0 + 576);
    swift_release(*(_QWORD *)(v0 + 672));
    swift_release(v10);
    swift_release(v9);
    swift_release(v8);

    swift_release(v6);
    sub_1004B84A4(v11, _s15AppExRepBackendC12BackendStateOMa);
    v12 = *(_QWORD *)(v0 + 592);
    v13 = *(_QWORD *)(v0 + 584);
    v14 = *(_QWORD *)(v0 + 576);
    v15 = *(_QWORD *)(v0 + 568);
    v16 = *(_QWORD *)(v0 + 560);
    v17 = *(_QWORD *)(v0 + 552);
    v18 = *(_QWORD *)(v0 + 544);
    v19 = *(_QWORD *)(v0 + 536);
    v20 = *(_QWORD *)(v0 + 528);
    v68 = *(_QWORD *)(v0 + 504);
    v70 = *(_QWORD *)(v0 + 496);
    v72 = *(_QWORD *)(v0 + 472);
    v74 = *(_QWORD *)(v0 + 448);
    swift_task_dealloc(*(_QWORD *)(v0 + 600));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 504), type metadata accessor for CRLUSDRendering.SceneRequest);
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    v66 = *(void **)(v0 + 712);
    v67 = *(_QWORD *)(v0 + 720);
    v64 = *(_QWORD *)(v0 + 696);
    v65 = *(_QWORD *)(v0 + 704);
    v22 = *(double *)(v0 + 640);
    v71 = *(_QWORD *)(v0 + 648);
    v73 = *(_QWORD *)(v0 + 584);
    v23 = *(_QWORD *)(v0 + 568);
    v24 = *(_QWORD *)(v0 + 376);
    v75 = v24 + *(_QWORD *)(v0 + 656);
    v69 = *(_QWORD *)(v0 + 512);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 296, 0, 0);
    v25 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 736) = v26;
    inited = swift_initStackObject(v26, v0 + 72);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v28 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    *(_QWORD *)(v0 + 744) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    v29 = v24 + v28;
    v30 = v25;
    v63 = v29;
    v31 = UUID.uuidString.getter(v30);
    v33 = v32;
    v34 = String.index(_:offsetBy:)(15, 8, v31, v32);
    v35 = String.subscript.getter(15, v34, v31, v33);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v42 = swift_bridgeObjectRelease(v33);
    v43 = static String._fromSubstring(_:)(v35, v37, v39, v41, v42);
    v45 = v44;
    swift_bridgeObjectRelease(v41);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v46 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 752) = v46;
    *(_QWORD *)(inited + 64) = v46;
    *(_QWORD *)(inited + 32) = v43;
    *(_QWORD *)(inited + 40) = v45;
    v47.n128_f64[0] = (CACurrentMediaTime() - v22) * 1000.0;
    *(_QWORD *)(inited + 96) = &type metadata for Double;
    *(_QWORD *)(inited + 104) = &protocol witness table for Double;
    *(_QWORD *)(inited + 72) = v47.n128_u64[0];
    v48 = static os_log_type_t.debug.getter(v47);
    sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v48, "(AppEx:CoreRE) [%{public}@] loadScene() +%{public}.0fms: extension renderer connected", 85, 2, inited);
    swift_setDeallocating(inited);
    v49 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 760) = v49;
    swift_arrayDestroy(inited + 32, 2, v49);

    *(_QWORD *)v23 = v64;
    *(_QWORD *)(v23 + 8) = v65;
    *(_QWORD *)(v23 + 16) = v66;
    *(_QWORD *)(v23 + 24) = v67;
    *(_QWORD *)(v23 + 32) = 1;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_OWORD *)(v23 + 56) = 0u;
    *(_OWORD *)(v23 + 72) = xmmword_100F02BE0;
    swift_storeEnumTagMultiPayload(v23, v69, 1);
    v50 = *(_QWORD *)(v24 + v71);
    sub_1004B8460(v23, v73, _s15AppExRepBackendC12BackendStateOMa);
    v51 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v50 + 136);
    swift_retain(v64);
    swift_retain(v65);
    v52 = v66;
    swift_retain(v67);
    v53 = swift_retain(v50);
    v51(v73, v53);
    swift_release(v50);
    Strong = swift_unknownObjectWeakLoadStrong(v75);
    if (Strong)
    {
      v55 = Strong;
      v56 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 656) + 8);
      ObjectType = swift_getObjectType(Strong);
      sub_100682030();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8))(v63, v0 + 320, ObjectType, v56);
      swift_unknownObjectRelease(v55);
      sub_10068EAE8((_QWORD *)(v0 + 320), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
    }
    v58 = *(_QWORD *)(v0 + 672);
    v59 = *(_QWORD *)(v0 + 608);
    sub_1004B84A4(*(_QWORD *)(v0 + 568), _s15AppExRepBackendC12BackendStateOMa);
    sub_1006846A4(v58);
    *(_QWORD *)(v0 + 768) = static MainActor.shared.getter(v60);
    v61 = dispatch thunk of Actor.unownedExecutor.getter(v59, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 776) = v61;
    *(_QWORD *)(v0 + 784) = v62;
    return swift_task_switch(sub_100683404, v61, v62);
  }
}

uint64_t sub_1006832F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 672);
  swift_release(*(_QWORD *)(v0 + 616));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  v4 = *(_QWORD *)(v0 + 576);
  v5 = *(_QWORD *)(v0 + 568);
  v6 = *(_QWORD *)(v0 + 560);
  v7 = *(_QWORD *)(v0 + 552);
  v8 = *(_QWORD *)(v0 + 544);
  v9 = *(_QWORD *)(v0 + 536);
  v10 = *(_QWORD *)(v0 + 528);
  v12 = *(_QWORD *)(v0 + 504);
  v13 = *(_QWORD *)(v0 + 496);
  v14 = *(_QWORD *)(v0 + 472);
  v15 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100683404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[88];
  v2 = v0[63];
  v3 = swift_task_alloc(32);
  v0[99] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v4 = (_QWORD *)swift_task_alloc(unk_1013EAF54);
  v0[100] = v4;
  *v4 = v0;
  v4[1] = sub_1006834B0;
  return v6(0x6E65635364616F6CLL, 0xED0000293A5F2865, (uint64_t)sub_10068E3FC, v3);
}

uint64_t sub_1006834B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 800);
  v4 = *(_QWORD *)(*v1 + 792);
  *(_QWORD *)(*v1 + 808) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_10068395C;
  else
    v5 = sub_100683528;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 776), *(_QWORD *)(v2 + 784));
}

uint64_t sub_100683528()
{
  _QWORD *v0;

  swift_release(v0[96]);
  return swift_task_switch(sub_100683564, v0[78], v0[79]);
}

uint64_t sub_100683564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(__n128);
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  void *v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(__n128);
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 648));
  v3 = *(void (**)(__n128))(*(_QWORD *)v2 + 128);
  v4 = swift_retain(v2);
  v3(v4);
  swift_release(v2);
  LOBYTE(v2) = sub_100684820(v1);
  sub_1004B84A4(v1, _s15AppExRepBackendC12BackendStateOMa);
  if ((v2 & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 760);
    v6 = *(_QWORD *)(v0 + 752);
    v7 = *(_QWORD *)(v0 + 736);
    v51 = *(_QWORD *)(v0 + 704);
    v52 = *(void **)(v0 + 712);
    v50 = *(_QWORD *)(v0 + 696);
    v54 = *(_QWORD *)(v0 + 672);
    v56 = *(_QWORD *)(v0 + 720);
    v8 = *(double *)(v0 + 640);
    v58 = *(_QWORD *)(v0 + 504);
    swift_release(*(_QWORD *)(v0 + 616));
    v9 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    inited = swift_initStackObject(v7, v0 + 184);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v11 = v9;
    v12 = UUID.uuidString.getter(v11);
    v14 = v13;
    v15 = String.index(_:offsetBy:)(15, 8, v12, v13);
    v16 = String.subscript.getter(15, v15, v12, v14);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v23 = swift_bridgeObjectRelease(v14);
    v24 = static String._fromSubstring(_:)(v16, v18, v20, v22, v23);
    v26 = v25;
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v6;
    *(_QWORD *)(inited + 32) = v24;
    *(_QWORD *)(inited + 40) = v26;
    v27.n128_f64[0] = (CACurrentMediaTime() - v8) * 1000.0;
    *(_QWORD *)(inited + 96) = &type metadata for Double;
    *(_QWORD *)(inited + 104) = &protocol witness table for Double;
    *(_QWORD *)(inited + 72) = v27.n128_u64[0];
    v28 = static os_log_type_t.debug.getter(v27);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v28, "(AppEx:CoreRE) [%{public}@] loadScene() +%{public}.0fms: scene loaded", 69, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 2, v5);

    swift_release(v50);
    swift_release(v51);

    swift_release(v56);
    swift_release(v54);
    sub_1004B84A4(v58, type metadata accessor for CRLUSDRendering.SceneRequest);
    v29 = *(_QWORD *)(v0 + 592);
    v30 = *(_QWORD *)(v0 + 584);
    v31 = *(_QWORD *)(v0 + 576);
    v32 = *(_QWORD *)(v0 + 568);
    v33 = *(_QWORD *)(v0 + 560);
    v34 = *(_QWORD *)(v0 + 552);
    v35 = *(_QWORD *)(v0 + 544);
    v36 = *(_QWORD *)(v0 + 536);
    v37 = *(_QWORD *)(v0 + 528);
    v53 = *(_QWORD *)(v0 + 504);
    v55 = *(_QWORD *)(v0 + 496);
    v57 = *(_QWORD *)(v0 + 472);
    v59 = *(_QWORD *)(v0 + 448);
    swift_task_dealloc(*(_QWORD *)(v0 + 600));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 464);
    v39 = *(_QWORD *)(v0 + 472);
    v41 = *(_QWORD *)(v0 + 456);
    v42 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 648));
    v43 = *(uint64_t (**)(__n128))(*(_QWORD *)v42 + 152);
    v44 = swift_retain(v42);
    v45 = v43(v44);
    v46 = swift_release(v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v40 + 16))(v39, v45 + *(_QWORD *)(*(_QWORD *)v45 + 96), v41, v46);
    swift_release(v45);
    AsyncStream.makeAsyncIterator()(v41);
    v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    v48 = static MainActor.shared.getter(v47);
    *(_QWORD *)(v0 + 816) = v48;
    v49 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 824) = v49;
    *v49 = v0;
    v49[1] = sub_100683AEC;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 448), v48, &protocol witness table for MainActor, *(_QWORD *)(v0 + 480));
  }
}

uint64_t sub_10068395C()
{
  _QWORD *v0;

  swift_release(v0[96]);
  return swift_task_switch(sub_100683998, v0[78], v0[79]);
}

uint64_t sub_100683998()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 720);
  v2 = *(void **)(v0 + 712);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 696);
  v5 = *(_QWORD *)(v0 + 672);
  v6 = *(_QWORD *)(v0 + 504);
  swift_release(*(_QWORD *)(v0 + 616));
  swift_release(v4);
  swift_release(v3);

  swift_release(v1);
  swift_release(v5);
  sub_1004B84A4(v6, type metadata accessor for CRLUSDRendering.SceneRequest);
  v7 = *(_QWORD *)(v0 + 592);
  v8 = *(_QWORD *)(v0 + 584);
  v9 = *(_QWORD *)(v0 + 576);
  v10 = *(_QWORD *)(v0 + 568);
  v11 = *(_QWORD *)(v0 + 560);
  v12 = *(_QWORD *)(v0 + 552);
  v13 = *(_QWORD *)(v0 + 544);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_QWORD *)(v0 + 528);
  v17 = *(_QWORD *)(v0 + 504);
  v18 = *(_QWORD *)(v0 + 496);
  v19 = *(_QWORD *)(v0 + 472);
  v20 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100683AEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 816);
  swift_task_dealloc(*(_QWORD *)(*v0 + 824));
  swift_release(v2);
  return swift_task_switch(sub_100683B48, *(_QWORD *)(v1 + 624), *(_QWORD *)(v1 + 632));
}

uint64_t sub_100683B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  uint64_t inited;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 512);
  v2 = *(_QWORD *)(v0 + 448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 520) + 48))(v2, 1, v1) == 1)
    goto LABEL_21;
  v3 = *(_QWORD *)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 552);
  sub_1004B84E0(v2, v3, _s15AppExRepBackendC12BackendStateOMa);
  sub_1004B8460(v3, v4, _s15AppExRepBackendC12BackendStateOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v14 = *(_QWORD *)(v0 + 536);
    sub_1004B8460(*(_QWORD *)(v0 + 552), v14, _s15AppExRepBackendC12BackendStateOMa);
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v18 = *(void **)(v14 + 16);
    v17 = *(_QWORD *)(v14 + 24);
    v68 = *(_QWORD *)(v14 + 40);
    v71 = *(_QWORD *)(v14 + 32);
    v19 = *(_QWORD *)(v14 + 56);
    v65 = *(_QWORD *)(v14 + 48);
    v20 = *(_QWORD *)(v14 + 64);
    v12 = *(_QWORD *)(v14 + 72);
    v21 = *(_QWORD *)(v14 + 80);
    swift_unknownObjectRelease(*(_QWORD *)(v14 + 88));
    swift_unknownObjectRelease(*(_QWORD *)(v14 + 96));
    swift_unknownObjectRelease(*(_QWORD *)(v14 + 104));

    swift_release(v16);
    swift_release(v15);

    swift_release(v17);
    if (v12 >> 62 == 2)
    {
      v9 = v65;
      v8 = v68;
      v10 = v19;
      v11 = v20;
      v13 = v21;
      if (v21)
      {
        v7 = v71;
      }
      else
      {
        v7 = v71;
        if (v12 == 0x8000000000000000)
          goto LABEL_12;
      }
    }
    else
    {
      v8 = v68;
      v7 = v71;
      LOBYTE(v9) = v65;
      v10 = v19;
      v11 = v20;
      v13 = v21;
    }
LABEL_19:
    sub_100689EAC(v7, v8, v9, v10, v11, v12, v13);
    goto LABEL_20;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 544);
    sub_1004B8460(*(_QWORD *)(v0 + 552), v6, _s15AppExRepBackendC12BackendStateOMa);
    swift_release(*(_QWORD *)v6);
    swift_release(*(_QWORD *)(v6 + 8));

    swift_release(*(_QWORD *)(v6 + 24));
    v7 = *(_QWORD *)(v6 + 32);
    v8 = *(_QWORD *)(v6 + 40);
    v9 = *(_QWORD *)(v6 + 48);
    v10 = *(_QWORD *)(v6 + 56);
    v11 = *(_QWORD *)(v6 + 64);
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(_QWORD *)(v6 + 80);
    if (!(v12 >> 62))
    {
      sub_100689EAC(v7, v8, v9, v10, v11, *(_QWORD *)(v6 + 72), v13);
      goto LABEL_17;
    }
    if (v12 >> 62 != 2 || v13 || v12 != 0x8000000000000000)
      goto LABEL_19;
LABEL_12:
    if (v7 != 2 || v9 | v8 | v10 | v11)
      goto LABEL_19;
LABEL_17:
    v22 = *(_QWORD *)(v0 + 560);
    sub_1004B84A4(*(_QWORD *)(v0 + 552), _s15AppExRepBackendC12BackendStateOMa);
    v23 = sub_1004B84A4(v22, _s15AppExRepBackendC12BackendStateOMa);
    v24 = static MainActor.shared.getter(v23);
    *(_QWORD *)(v0 + 816) = v24;
    v25 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 824) = v25;
    *v25 = v0;
    v25[1] = sub_100683AEC;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 448), v24, &protocol witness table for MainActor, *(_QWORD *)(v0 + 480));
  }
LABEL_20:
  v27 = *(_QWORD *)(v0 + 560);
  sub_1004B84A4(*(_QWORD *)(v0 + 552), _s15AppExRepBackendC12BackendStateOMa);
  sub_1004B84A4(v27, _s15AppExRepBackendC12BackendStateOMa);
LABEL_21:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 488) + 8))(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 480));
  v28 = *(_QWORD *)(v0 + 760);
  v29 = *(_QWORD *)(v0 + 752);
  v30 = *(_QWORD *)(v0 + 736);
  v62 = *(_QWORD *)(v0 + 704);
  v63 = *(void **)(v0 + 712);
  v61 = *(_QWORD *)(v0 + 696);
  v66 = *(_QWORD *)(v0 + 672);
  v69 = *(_QWORD *)(v0 + 720);
  v31 = *(double *)(v0 + 640);
  v72 = *(_QWORD *)(v0 + 504);
  swift_release(*(_QWORD *)(v0 + 616));
  v32 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  inited = swift_initStackObject(v30, v0 + 184);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v34 = v32;
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  v38 = String.index(_:offsetBy:)(15, 8, v35, v36);
  v39 = String.subscript.getter(15, v38, v35, v37);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = swift_bridgeObjectRelease(v37);
  v47 = static String._fromSubstring(_:)(v39, v41, v43, v45, v46);
  v49 = v48;
  swift_bridgeObjectRelease(v45);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v29;
  *(_QWORD *)(inited + 32) = v47;
  *(_QWORD *)(inited + 40) = v49;
  v50.n128_f64[0] = (CACurrentMediaTime() - v31) * 1000.0;
  *(_QWORD *)(inited + 96) = &type metadata for Double;
  *(_QWORD *)(inited + 104) = &protocol witness table for Double;
  *(_QWORD *)(inited + 72) = v50.n128_u64[0];
  v51 = static os_log_type_t.debug.getter(v50);
  sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v51, "(AppEx:CoreRE) [%{public}@] loadScene() +%{public}.0fms: scene loaded", 69, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, v28);

  swift_release(v61);
  swift_release(v62);

  swift_release(v69);
  swift_release(v66);
  sub_1004B84A4(v72, type metadata accessor for CRLUSDRendering.SceneRequest);
  v52 = *(_QWORD *)(v0 + 592);
  v53 = *(_QWORD *)(v0 + 584);
  v54 = *(_QWORD *)(v0 + 576);
  v55 = *(_QWORD *)(v0 + 568);
  v56 = *(_QWORD *)(v0 + 560);
  v57 = *(_QWORD *)(v0 + 552);
  v58 = *(_QWORD *)(v0 + 544);
  v59 = *(_QWORD *)(v0 + 536);
  v60 = *(_QWORD *)(v0 + 528);
  v64 = *(_QWORD *)(v0 + 504);
  v67 = *(_QWORD *)(v0 + 496);
  v70 = *(_QWORD *)(v0 + 472);
  v73 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v64);
  swift_task_dealloc(v67);
  swift_task_dealloc(v70);
  swift_task_dealloc(v73);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100684098()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 848);
  *(_QWORD *)(*(_QWORD *)v1 + 856) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[79];
    v5 = v2[78];
    v6 = sub_10068448C;
  }
  else
  {
    v7 = v2[104];
    swift_task_dealloc(v2[105]);
    swift_task_dealloc(v7);
    v4 = v2[79];
    v5 = v2[78];
    v6 = sub_100684118;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100684118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 616));
  v1 = *(_QWORD *)(v0 + 592);
  v2 = *(_QWORD *)(v0 + 584);
  v3 = *(_QWORD *)(v0 + 576);
  v4 = *(_QWORD *)(v0 + 568);
  v5 = *(_QWORD *)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 552);
  v7 = *(_QWORD *)(v0 + 544);
  v8 = *(_QWORD *)(v0 + 536);
  v9 = *(_QWORD *)(v0 + 528);
  v11 = *(_QWORD *)(v0 + 504);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100684218()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 864);
  *(_QWORD *)(*v1 + 872) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100684384;
  else
    v4 = sub_10068F120;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 624), *(_QWORD *)(v2 + 632));
}

uint64_t sub_10068427C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 616));
  v1 = *(_QWORD *)(v0 + 592);
  v2 = *(_QWORD *)(v0 + 584);
  v3 = *(_QWORD *)(v0 + 576);
  v4 = *(_QWORD *)(v0 + 568);
  v5 = *(_QWORD *)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 552);
  v7 = *(_QWORD *)(v0 + 544);
  v8 = *(_QWORD *)(v0 + 536);
  v9 = *(_QWORD *)(v0 + 528);
  v11 = *(_QWORD *)(v0 + 504);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100684384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 616));
  v1 = *(_QWORD *)(v0 + 592);
  v2 = *(_QWORD *)(v0 + 584);
  v3 = *(_QWORD *)(v0 + 576);
  v4 = *(_QWORD *)(v0 + 568);
  v5 = *(_QWORD *)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 552);
  v7 = *(_QWORD *)(v0 + 544);
  v8 = *(_QWORD *)(v0 + 536);
  v9 = *(_QWORD *)(v0 + 528);
  v11 = *(_QWORD *)(v0 + 504);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068448C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 840);
  v2 = *(_QWORD *)(v0 + 832);
  swift_release(*(_QWORD *)(v0 + 616));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 584);
  v5 = *(_QWORD *)(v0 + 576);
  v6 = *(_QWORD *)(v0 + 568);
  v7 = *(_QWORD *)(v0 + 560);
  v8 = *(_QWORD *)(v0 + 552);
  v9 = *(_QWORD *)(v0 + 544);
  v10 = *(_QWORD *)(v0 + 536);
  v11 = *(_QWORD *)(v0 + 528);
  v13 = *(_QWORD *)(v0 + 504);
  v14 = *(_QWORD *)(v0 + 496);
  v15 = *(_QWORD *)(v0 + 472);
  v16 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 600));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1006845AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer);
  v3 = (_OWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 8);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 16);
  v7 = *(void **)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 24);
  *v3 = 0u;
  v3[1] = 0u;
  sub_10068E7F0(v4, v5, v6, v7);
  sub_100895BF4();
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber);
  v8 = swift_allocObject(&unk_1012757A8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  swift_retain(v14);
  v9 = sub_1004B804C(&qword_1013EB008);
  v10 = sub_10068E844();
  v11 = Publisher<>.sink(receiveValue:)(sub_10068E83C, v8, v9, v10);
  swift_release(v8);
  swift_release(v14);
  v12 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription) = v11;
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_1006846A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  double (*v12)(uint64_t);
  void *v13;
  double (*v14)();
  uint64_t v15;

  v2 = swift_allocObject(&unk_1012757A8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = swift_allocObject(&unk_1012757D0, 24, 7);
  swift_weakInit(v3 + 16, a1);
  v4 = swift_allocObject(&unk_1012757F8, 32, 7);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = *(void **)(a1 + 16);
  v14 = sub_10068E488;
  v15 = v4;
  v10 = _NSConcreteStackBlock;
  v11 = *(_QWORD *)"";
  v12 = sub_1005D2FC0;
  v13 = &unk_101275810;
  v6 = _Block_copy(&v10);
  v7 = v15;
  swift_retain(v4);
  objc_msgSend(v5, "setInterruptionHandler:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  v14 = sub_10068E488;
  v15 = v4;
  v10 = _NSConcreteStackBlock;
  v11 = *(_QWORD *)"";
  v12 = sub_1005D2FC0;
  v13 = &unk_101275838;
  v8 = _Block_copy(&v10);
  v9 = v15;
  swift_retain(v4);
  objc_msgSend(v5, "setInvalidationHandler:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  swift_release(v4);
}

uint64_t sub_100684820(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  BOOL v35;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  sub_1004B8460(a1, (uint64_t)&v40 - v9, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v2);
  if (EnumCaseMultiPayload == 2)
  {
    sub_1004B8460((uint64_t)v10, (uint64_t)v4, _s15AppExRepBackendC12BackendStateOMa);
    v25 = *v4;
    v24 = v4[1];
    v27 = (void *)v4[2];
    v26 = v4[3];
    v28 = v4[4];
    v42 = v4[5];
    v43 = v28;
    v29 = v4[7];
    v41 = v4[6];
    v30 = v4[8];
    v31 = v4[9];
    v32 = v4[10];
    swift_unknownObjectRelease(v4[11]);
    swift_unknownObjectRelease(v4[12]);
    swift_unknownObjectRelease(v4[13]);
    v33 = (void *)v4[14];
    swift_release(v26);

    swift_release(v24);
    swift_release(v25);

    if (v31 >> 62)
    {
      LOBYTE(v15) = v41;
      v14 = v42;
      v35 = v31 >> 62 == 2 && v32 == 0 && v31 == 0x8000000000000000;
      v13 = v43;
      if (v35 && v43 == 2 && (v41 | v42 | v29 | v30) == 0)
        goto LABEL_34;
    }
    else
    {
      v14 = v42;
      v13 = v43;
      LOBYTE(v15) = v41;
    }
    v16 = v29;
    v17 = v30;
    v18 = v31;
    v19 = v32;
LABEL_38:
    sub_100689EAC(v13, v14, v15, v16, v17, v18, v19);
    goto LABEL_39;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_39:
    v38 = 1;
    goto LABEL_40;
  }
  sub_1004B8460((uint64_t)v10, (uint64_t)v7, _s15AppExRepBackendC12BackendStateOMa);
  swift_release(*(_QWORD *)v7);
  swift_release(*((_QWORD *)v7 + 1));

  swift_release(*((_QWORD *)v7 + 3));
  v13 = *((_QWORD *)v7 + 4);
  v14 = *((_QWORD *)v7 + 5);
  v15 = *((_QWORD *)v7 + 6);
  v16 = *((_QWORD *)v7 + 7);
  v17 = *((_QWORD *)v7 + 8);
  v18 = *((_QWORD *)v7 + 9);
  v19 = *((_QWORD *)v7 + 10);
  if (!(v18 >> 62))
  {
    sub_100689EAC(v13, v14, v15, v16, v17, v18, v19);
    v38 = 0;
    goto LABEL_40;
  }
  if (v18 >> 62 != 2 || v19 != 0 || v18 != 0x8000000000000000 || v13 != 2 || (v15 | v14 | v16 | v17) != 0)
    goto LABEL_38;
LABEL_34:
  v38 = 0;
LABEL_40:
  sub_1004B84A4((uint64_t)v10, _s15AppExRepBackendC12BackendStateOMa);
  return v38;
}

uint64_t sub_100684A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[2] = a3;
  v6[3] = a6;
  v7 = type metadata accessor for MainActor(0);
  v6[4] = v7;
  v8 = static MainActor.shared.getter(v7);
  v6[5] = v8;
  v6[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[7] = v9;
  v6[8] = v10;
  return swift_task_switch(sub_100684AE8, v9, v10);
}

uint64_t sub_100684AE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t);

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 72) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v2 = (_QWORD *)swift_task_alloc(unk_1013EAF54);
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_100684B8C;
  return v4(0x6E65635364616F6CLL, 0xED0000293A5F2865, sub_10068F0EC, v1);
}

uint64_t sub_100684B8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 72);
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_100684C54;
  else
    v5 = sub_100684BFC;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100684BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068F0B0, v2, v3);
}

uint64_t sub_100684C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068F0BC, v2, v3);
}

uint64_t sub_100684CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[15] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v8);
  v5[17] = swift_task_alloc(v8);
  v5[18] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[19] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[20] = v10;
  v5[21] = v11;
  return swift_task_switch(sub_100684D80, v10, v11);
}

void sub_100684D80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(__n128);
  __n128 v5;
  char *v6;

  v1 = v0[18];
  v2 = v0[15];
  v3 = *(_QWORD *)(v0[13] + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  v4 = *(void (**)(__n128))(*(_QWORD *)v3 + 128);
  v5 = swift_retain(v3);
  v4(v5);
  swift_release(v3);
  v6 = (char *)sub_100684E0C + 4 * byte_100F02ADA[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100684E0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(v1 + 144);
  v6 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 112);
  v24 = *(_QWORD *)(v1 + 120);
  v25 = *(_QWORD *)(v1 + 104);
  v8 = *(void (**)(uint64_t))(v1 + 72);
  swift_release(*(_QWORD *)(v1 + 152));
  sub_1004B84E0(v4, v7, type metadata accessor for CRLUSDRendering.SceneRequest);
  v8(v7);
  sub_1004B8460(v7, v5, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_storeEnumTagMultiPayload(v5, v24, 0);
  v9 = *(_QWORD *)(v3 + v2);
  sub_1004B8460(v5, v6, _s15AppExRepBackendC12BackendStateOMa);
  v10 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v9 + 136);
  v11 = swift_retain(v9);
  v10(v6, v11);
  swift_release(v9);
  v12 = v25 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v1 + 104);
    v16 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType(Strong);
    v18 = v15 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    sub_100682030();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v16 + 8))(v18, v0, ObjectType, v16);
    swift_unknownObjectRelease(v14);
    sub_10068EAE8(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v19 = *(_QWORD *)(v1 + 112);
  sub_1004B84A4(*(_QWORD *)(v1 + 136), _s15AppExRepBackendC12BackendStateOMa);
  sub_1004B84A4(v19, type metadata accessor for CRLUSDRendering.SceneRequest);
  v20 = *(_QWORD *)(v1 + 136);
  v21 = *(_QWORD *)(v1 + 128);
  v22 = *(_QWORD *)(v1 + 112);
  swift_task_dealloc(*(_QWORD *)(v1 + 144));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1006850B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_1006851A8;
  }
  else
  {
    v8 = (void *)v2[24];
    v7 = v2[25];
    v9 = v2[23];
    swift_release(v2[22]);
    swift_release(v9);

    swift_release(v7);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_100685140;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100685140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1006851A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 176));
  swift_release(v3);

  swift_release(v1);
  swift_release(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100685240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v6 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[16] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[17] = swift_task_alloc(v8);
  v5[18] = swift_task_alloc(v8);
  v5[19] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[21] = v10;
  v5[22] = v11;
  return swift_task_switch(sub_100685314, v10, v11);
}

void sub_100685314()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(__n128);
  __n128 v5;
  char *v6;

  v1 = v0[19];
  v2 = v0[16];
  v3 = *(_QWORD *)(v0[14] + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  v4 = *(void (**)(__n128))(*(_QWORD *)v3 + 128);
  v5 = swift_retain(v3);
  v4(v5);
  swift_release(v3);
  v6 = (char *)sub_1006853A0 + 4 * byte_100F02ADF[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1006853A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(v1 + 152);
  v6 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v7 = *(_QWORD *)(v1 + 120);
  v25 = *(_QWORD *)(v1 + 128);
  v26 = *(_QWORD *)(v1 + 112);
  v8 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 80);
  swift_release(*(_QWORD *)(v1 + 160));
  sub_1004B84E0(v4, v7, type metadata accessor for CRLUSDRendering.SceneRequest);
  v8(&v27, v7);
  sub_1004B8460(v7, v5, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_storeEnumTagMultiPayload(v5, v25, 0);
  v9 = *(_QWORD *)(v3 + v2);
  sub_1004B8460(v5, v6, _s15AppExRepBackendC12BackendStateOMa);
  v10 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v9 + 136);
  v11 = swift_retain(v9);
  v10(v6, v11);
  swift_release(v9);
  v12 = v26 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v26 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v1 + 112);
    v16 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType(Strong);
    v18 = v15 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    sub_100682030();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v16 + 8))(v18, v0, ObjectType, v16);
    swift_unknownObjectRelease(v14);
    sub_10068EAE8(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v19 = *(_QWORD *)(v1 + 120);
  sub_1004B84A4(*(_QWORD *)(v1 + 144), _s15AppExRepBackendC12BackendStateOMa);
  sub_1004B84A4(v19, type metadata accessor for CRLUSDRendering.SceneRequest);
  v20 = v27;
  v21 = *(_QWORD *)(v1 + 144);
  v22 = *(_QWORD *)(v1 + 136);
  v23 = *(_QWORD *)(v1 + 120);
  swift_task_dealloc(*(_QWORD *)(v1 + 152));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v20);
}

uint64_t sub_10068564C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[21];
    v5 = v2[22];
    v6 = sub_100685744;
  }
  else
  {
    v8 = (void *)v2[25];
    v7 = v2[26];
    v9 = v2[24];
    swift_release(v2[23]);
    swift_release(v9);

    swift_release(v7);
    v4 = v2[21];
    v5 = v2[22];
    v6 = sub_1006856D8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1006856D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100685744()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 184));
  swift_release(v3);

  swift_release(v1);
  swift_release(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006857DC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v5[47] = a3;
  v5[48] = v4;
  v5[46] = a2;
  v8 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[49] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v9);
  v5[51] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v5[52] = v10;
  v5[53] = static MainActor.shared.getter(v10);
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc(a4[1]);
  v5[54] = v11;
  *v11 = v5;
  v11[1] = sub_1006858A4;
  return v13(a1);
}

uint64_t sub_1006858A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 432);
  *(_QWORD *)(*v1 + 440) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 416), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100685970;
  else
    v6 = sub_100685928;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100685928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  swift_release(*(_QWORD *)(v0 + 424));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100685970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v51;
  uint64_t v52;
  id v53;

  swift_release(*(_QWORD *)(v0 + 424));
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v52 = *(_QWORD *)(v0 + 368);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 224, 0, 0);
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v7 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v53 = v4;
  v51 = v7;
  v8 = UUID.uuidString.getter(v53);
  v10 = v9;
  v11 = String.index(_:offsetBy:)(15, 8, v8, v9);
  v12 = String.subscript.getter(15, v11, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v10);
  v20 = static String._fromSubstring(_:)(v12, v14, v16, v18, v19);
  v22 = v21;
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v23;
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 72) = v52;
  *(_QWORD *)(inited + 80) = v2;
  swift_getErrorValue(v1, v0 + 344, v0 + 248);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRetain(v2);
  v26 = Error.localizedDescription.getter(v24, v25);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v23;
  *(_QWORD *)(inited + 112) = v26;
  *(_QWORD *)(inited + 120) = v27;
  v28 = static os_log_type_t.error.getter(v26);
  sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v28, "(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v29);

  *(_QWORD *)(v0 + 360) = v1;
  swift_errorRetain(v1);
  v30 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 296, v0 + 360, v30, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_BYTE *)(v0 + 312);
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 336) = v34;
    swift_errorRetain(v34);
    if ((swift_dynamicCast(v0 + 320, v0 + 336, v30, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v31 = *(_QWORD *)(v0 + 320);
      v32 = *(_QWORD *)(v0 + 328);
      v33 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 440), v0 + 352, v0 + 272);
      v31 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
      v33 = 2;
    }
  }
  v35 = *(_QWORD *)(v0 + 400);
  v36 = *(_QWORD *)(v0 + 408);
  v38 = *(_QWORD *)(v0 + 384);
  v37 = *(_QWORD *)(v0 + 392);
  *(_QWORD *)v36 = v31;
  *(_QWORD *)(v36 + 8) = v32;
  *(_BYTE *)(v36 + 16) = v33;
  swift_storeEnumTagMultiPayload(v36, v37, 3);
  v39 = *(_QWORD *)(v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_1004B8460(v36, v35, _s15AppExRepBackendC12BackendStateOMa);
  v40 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v39 + 136);
  v41 = swift_retain(v39);
  v40(v35, v41);
  swift_release(v39);
  v42 = v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v42);
  if (Strong)
  {
    v44 = Strong;
    v45 = *(_QWORD *)(v42 + 8);
    ObjectType = swift_getObjectType(Strong);
    sub_100682030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v51, v0 + 16, ObjectType, v45);
    swift_unknownObjectRelease(v44);
    sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v47 = *(_QWORD *)(v0 + 400);
  v48 = *(_QWORD *)(v0 + 408);
  sub_1004B84A4(v48, _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow(v49);
  swift_task_dealloc(v48);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100685D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[2] = a3;
  v6[3] = a6;
  v7 = type metadata accessor for MainActor(0);
  v6[4] = v7;
  v8 = static MainActor.shared.getter(v7);
  v6[5] = v8;
  v6[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[7] = v9;
  v6[8] = v10;
  return swift_task_switch(sub_100685DBC, v9, v10);
}

uint64_t sub_100685DBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t);

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 72) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v2 = (_QWORD *)swift_task_alloc(unk_1013EAF54);
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_100685E60;
  return v4(0x6353657461647075, 0xEF293A5F28656E65, sub_10068E2B0, v1);
}

uint64_t sub_100685E60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 72);
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_100685F5C;
  else
    v5 = sub_100685ED0;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100685ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100685F28, v2, v3);
}

uint64_t sub_100685F28()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100685F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100685FB4, v2, v3);
}

uint64_t sub_100685FB4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100685FE8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = v6;
  return swift_task_switch(sub_10068605C, v5, v6);
}

uint64_t sub_10068605C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = sub_1004B804C(&qword_1013EAF60);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)(v0 + 64) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 40) = v2;
  *(_QWORD *)(v0 + 72) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  return swift_task_switch(sub_1006860FC, v6, v7);
}

uint64_t sub_1006860FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = dword_1013EAF34;
  v3 = *(id *)(v0 + 24);
  swift_bridgeObjectRetain(v1);
  v4 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = sub_10068617C;
  return sub_10068D3B8(0xD000000000000010, 0x8000000100FC1700, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64));
}

uint64_t sub_10068617C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *(void **)(*v1 + 24);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);

  if (v0)
    v6 = sub_100686238;
  else
    v6 = sub_1006861F8;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1006861F8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[8];
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100685F28, v0[6], v0[7]);
}

uint64_t sub_100686238()
{
  _QWORD *v0;

  swift_release(v0[9]);
  return swift_task_switch(sub_100686270, v0[6], v0[7]);
}

uint64_t sub_100686270()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1006862B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[34] = a6;
  v7[35] = a7;
  v7[33] = a3;
  v8 = type metadata accessor for MainActor(0);
  v7[36] = v8;
  v7[37] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[38] = v9;
  v7[39] = v10;
  return swift_task_switch(sub_100686324, v9, v10);
}

uint64_t sub_100686324()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v2 = v0[35];
  v1 = v0[36];
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 30, 0, 0);
  v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[40] = v4;
  inited = swift_initStackObject(v4, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v0[41] = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v6 = v3;
  v7 = UUID.uuidString.getter(v6);
  v9 = v8;
  v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
  v11 = String.subscript.getter(15, v10, v7, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v9);
  v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v22 = sub_1004CFC2C();
  v0[42] = v22;
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  v23 = swift_bridgeObjectRetain(v2);
  v24 = Array.description.getter(v23);
  v26 = v25;
  v27 = swift_bridgeObjectRelease(v2);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 80) = v26;
  v28 = static os_log_type_t.debug.getter(v27);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v28, "(AppEx:CoreRE) [%{public}@] BEGIN performActions(%{public}@)", 60, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  v0[43] = v29;
  swift_arrayDestroy(inited + 32, 2, v29);

  v0[44] = static MainActor.shared.getter(v30);
  v31 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[45] = v31;
  v0[46] = v32;
  return swift_task_switch(sub_100686550, v31, v32);
}

uint64_t sub_100686550()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[35];
  v2 = v0[33];
  v3 = swift_task_alloc(32);
  v0[47] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013EAF50 + dword_1013EAF50);
  v4 = (_QWORD *)swift_task_alloc(unk_1013EAF54);
  v0[48] = v4;
  *v4 = v0;
  v4[1] = sub_1006865F4;
  return v6(0xD000000000000012, 0x8000000100FC1760, (uint64_t)sub_10068E118, v3);
}

uint64_t sub_1006865F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 376);
  v3 = *(_QWORD *)(*v1 + 384);
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_100686664;
  else
    v5 = sub_1006866D0;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 360), *(_QWORD *)(v2 + 368));
}

uint64_t sub_100686664()
{
  _QWORD *v0;

  swift_release(v0[44]);
  return swift_task_switch(sub_10068669C, v0[38], v0[39]);
}

uint64_t sub_10068669C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 296));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1006866D0()
{
  _QWORD *v0;

  swift_release(v0[44]);
  return swift_task_switch(sub_100686708, v0[38], v0[39]);
}

uint64_t sub_100686708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 336);
  v29 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 280);
  swift_release(*(_QWORD *)(v0 + 296));
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  inited = swift_initStackObject(v2, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v4;
  v7 = UUID.uuidString.getter(v6);
  v9 = v8;
  v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
  v11 = String.subscript.getter(15, v10, v7, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v9);
  v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  v22 = swift_bridgeObjectRetain(v3);
  v23 = Array.description.getter(v22);
  v25 = v24;
  v26 = swift_bridgeObjectRelease(v3);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v1;
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = v25;
  v27 = static os_log_type_t.debug.getter(v26);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v27, "(AppEx:CoreRE) [%{public}@] END performActions(%{public}@) END", 62, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, v29);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006868A0(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(float *)(v3 + 328) = a3;
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 240) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 248) = v5;
  *(_QWORD *)(v3 + 256) = v6;
  return swift_task_switch(sub_100686910, v5, v6);
}

uint64_t sub_100686910()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_DWORD *)(v0 + 328);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 200, 0, 0);
  v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v0 + 264) = v3;
  inited = swift_initStackObject(v3, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 272) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  v9 = String.index(_:offsetBy:)(15, 8, v6, v7);
  v10 = String.subscript.getter(15, v9, v6, v8);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = swift_bridgeObjectRelease(v8);
  v18 = static String._fromSubstring(_:)(v10, v12, v14, v16, v17);
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v21 = sub_1004CFC2C();
  *(_QWORD *)(v0 + 280) = v21;
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  v23 = static os_log_type_t.debug.getter(v22);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v23, "(AppEx:CoreRE) [%{public}@] BEGIN takeSnapshot()", 48, 2, inited);
  swift_setDeallocating(inited);
  v24 = sub_1004B804C(&qword_1013E0190);
  *(_QWORD *)(v0 + 288) = v24;
  swift_arrayDestroy(inited + 32, 1, v24);

  v25 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 296) = v25;
  *(_DWORD *)(v25 + 16) = v1;
  v26 = (_QWORD *)swift_task_alloc(dword_1013EAF1C);
  *(_QWORD *)(v0 + 304) = v26;
  *v26 = v0;
  v26[1] = sub_100686B20;
  return sub_100685240((uint64_t)sub_1004B3860, 0, (uint64_t)&unk_1013EAF10, v25);
}

uint64_t sub_100686B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 304);
  *(_QWORD *)(*(_QWORD *)v2 + 312) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[31];
    v7 = v4[32];
    v8 = sub_100686D68;
  }
  else
  {
    v9 = v4[37];
    v4[40] = a1;
    swift_task_dealloc(v9);
    v6 = v4[31];
    v7 = v4[32];
    v8 = sub_100686B9C;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100686B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 288);
  v29 = *(_QWORD **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 240));
  if (v1 == 1)
    v4 = 0;
  else
    v4 = v1;
  v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v7 = v5;
  v8 = UUID.uuidString.getter(v7);
  v10 = v9;
  v11 = String.index(_:offsetBy:)(15, 8, v8, v9);
  v12 = String.subscript.getter(15, v11, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v10);
  v20 = static String._fromSubstring(_:)(v12, v14, v16, v18, v19);
  v22 = v21;
  v23 = swift_bridgeObjectRelease(v18);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  v24 = 0x6572206567616D69;
  if (!v4)
    v24 = 0xD000000000000011;
  v25 = 0x8000000100FC1660;
  if (v4)
    v25 = 0xEE0064656E727574;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v2;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 80) = v25;
  v26 = static os_log_type_t.debug.getter(v23);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v26, "(AppEx:CoreRE) [%{public}@] END takeSnapshot() (%@)", 51, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, v28);

  *v29 = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100686D68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100686DA8(uint64_t a1, float a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(float *)(v4 + 104) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 32) = v5;
  v6 = static MainActor.shared.getter(v5);
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 64) = v8;
  return swift_task_switch(sub_100686E28, v7, v8);
}

uint64_t sub_100686E28()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(unint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t);

  v1 = *(_DWORD *)(v0 + 104);
  v2 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 72) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_1013EAF20 + dword_1013EAF20);
  v3 = (_QWORD *)swift_task_alloc(unk_1013EAF24);
  *(_QWORD *)(v0 + 80) = v3;
  *v3 = v0;
  v3[1] = sub_100686EC4;
  return v5(0xD000000000000011, 0x8000000100FC16C0, sub_10068DFFC, v2);
}

uint64_t sub_100686EC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  *(_QWORD *)(*(_QWORD *)v2 + 88) = v1;
  swift_task_dealloc(v5);
  v6 = v4[9];
  if (v1)
  {
    swift_task_dealloc(v6);
    v7 = v4[7];
    v8 = v4[8];
    v9 = sub_100685F5C;
  }
  else
  {
    v4[12] = a1;
    swift_task_dealloc(v6);
    v7 = v4[7];
    v8 = v4[8];
    v9 = sub_100686F44;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100686F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100686F9C, v2, v3);
}

uint64_t sub_100686F9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = swift_release(*(_QWORD *)(v0 + 40));
  *v2 = v1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

double sub_100686FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  swift_retain(a2);
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_101275A28, 40, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = a2;
  v10 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013EB020, (uint64_t)v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1006870B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[12] = a4;
  v5 = _s15AppExRepBackendC12BackendStateOMa(0);
  v4[13] = v5;
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[15] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100687148, v7, v8);
}

uint64_t sub_100687148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(__n128);
  __n128 v8;
  int EnumCaseMultiPayload;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 120));
  v1 += 16;
  swift_beginAccess(v1, v0 + 72, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    if (*(_BYTE *)(*(_QWORD *)(Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer)
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame) != 1)
    {
LABEL_11:

      goto LABEL_12;
    }
    v5 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
    v7 = *(void (**)(__n128))(*(_QWORD *)v6 + 128);
    v8 = swift_retain(v6);
    v7(v8);
    swift_release(v6);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
    v10 = *(uint64_t **)(v0 + 112);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *v10;
      v12 = v10[1];
      v14 = (void *)v10[2];
      v13 = v10[3];
      v15 = v10[5];
      v16 = v10[6];
      v17 = v10[7];
      v18 = v10[8];
      v32 = v10[9];
      v33 = v10[4];
      v31 = v10[10];
      v34 = v10[11];
      v35 = v10[12];
      v19 = v10[13];
      v20 = (void *)v10[14];
      v36 = v19;
      swift_release(v11);
      swift_release(v12);

      swift_release(v13);
      sub_100689EAC(v33, v15, v16, v17, v18, v32, v31);
      swift_unknownObjectRelease(v34);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v36);

      v21 = &v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate];
      v22 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate]);
      if (v22)
      {
        v23 = v22;
        v24 = *((_QWORD *)v21 + 1);
        ObjectType = swift_getObjectType(v22);
        v26 = &v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid];
        sub_100682030();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 8))(v26, v0 + 16, ObjectType, v24);
        swift_unknownObjectRelease(v23);
        sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
      }
      v27 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription;
      v28 = *(_QWORD *)&v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription];
      if (v28)
      {
        swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription]);
        AnyCancellable.cancel()();
        swift_release(v28);
        v29 = *(_QWORD *)&v3[v27];
      }
      else
      {
        v29 = 0;
      }
      *(_QWORD *)&v3[v27] = 0;
      swift_release(v29);
      goto LABEL_11;
    }

    sub_1004B84A4((uint64_t)v10, _s15AppExRepBackendC12BackendStateOMa);
  }
LABEL_12:
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10068738C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  swift_retain(a1);
  swift_retain(a2);
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_101275870, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a1;
  v10[5] = a2;
  v11 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_1013EAFD8, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_100687474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[15] = a4;
  v5[16] = a5;
  v6 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[17] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[18] = swift_task_alloc(v7);
  v5[19] = swift_task_alloc(v7);
  v5[20] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v5[21] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100687520, v9, v10);
}

uint64_t sub_100687520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(__n128);
  __n128 v12;
  int EnumCaseMultiPayload;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, __n128);
  __n128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 168));
  v1 += 16;
  swift_beginAccess(v1, v0 + 72, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(_QWORD *)(v0 + 128) + 16;
    swift_beginAccess(v4, v0 + 96, 0, 0);
    v5 = swift_weakLoadStrong(v4);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v0 + 160);
      v8 = *(_QWORD *)(v0 + 136);
      v9 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
      v10 = *(_QWORD *)&v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState];
      v11 = *(void (**)(__n128))(*(_QWORD *)v10 + 128);
      v12 = swift_retain(v10);
      v11(v12);
      swift_release(v10);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
      if (EnumCaseMultiPayload == 1)
      {
        v31 = *(uint64_t **)(v0 + 160);
        v15 = *v31;
        v23 = v31[1];
        v22 = (void *)v31[2];
        v17 = v31[3];
        v24 = v31[4];
        v25 = v31[5];
        v26 = v31[6];
        v27 = v31[7];
        v28 = v31[8];
        v29 = v31[9];
        v30 = v31[10];
      }
      else
      {
        if (EnumCaseMultiPayload != 2)
        {
          v44 = *(_QWORD *)(v0 + 160);

          swift_release(v6);
          sub_1004B84A4(v44, _s15AppExRepBackendC12BackendStateOMa);
          goto LABEL_14;
        }
        v14 = *(uint64_t **)(v0 + 160);
        v15 = *v14;
        v16 = (void *)v14[2];
        v17 = v14[3];
        v54 = v14[5];
        v55 = v14[4];
        v52 = v14[7];
        v53 = v14[6];
        v50 = v14[9];
        v51 = v14[8];
        v48 = v14[1];
        v49 = v14[10];
        v18 = v14[12];
        v19 = v14[13];
        v20 = (void *)v14[14];
        swift_unknownObjectRelease(v14[11]);
        v21 = v18;
        v22 = v16;
        v23 = v48;
        swift_unknownObjectRelease(v21);
        swift_unknownObjectRelease(v19);

        v25 = v54;
        v24 = v55;
        v27 = v52;
        LOBYTE(v26) = v53;
        v29 = v50;
        v28 = v51;
        v30 = v49;
      }
      sub_100689EAC(v24, v25, v26, v27, v28, v29, v30);
      swift_release(v23);

      swift_release(v17);
      swift_release(v15);
      if (v15 == v6)
      {
        v33 = *(_QWORD *)(v0 + 144);
        v32 = *(_QWORD *)(v0 + 152);
        v34 = *(_QWORD *)(v0 + 136);
        *(_OWORD *)v32 = xmmword_100F02070;
        *(_BYTE *)(v32 + 16) = 4;
        swift_storeEnumTagMultiPayload(v32, v34, 3);
        v35 = *(_QWORD *)&v3[v9];
        sub_1004B8460(v32, v33, _s15AppExRepBackendC12BackendStateOMa);
        v36 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v35 + 136);
        v37 = swift_retain(v35);
        v36(v33, v37);
        swift_release(v35);
        v38 = &v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate];
        v39 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate]);
        if (v39)
        {
          v40 = v39;
          v41 = *((_QWORD *)v38 + 1);
          ObjectType = swift_getObjectType(v39);
          v43 = &v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid];
          sub_100682030();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 8))(v43, v0 + 16, ObjectType, v41);
          swift_unknownObjectRelease(v40);
          sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
        }
        sub_1004B84A4(*(_QWORD *)(v0 + 152), _s15AppExRepBackendC12BackendStateOMa);
      }

      swift_release(v6);
    }
    else
    {

    }
  }
LABEL_14:
  v45 = *(_QWORD *)(v0 + 152);
  v46 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100687814(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 264) = v3;
  *(_BYTE *)(v4 + 536) = a3;
  *(_QWORD *)(v4 + 200) = a2;
  *(_QWORD *)(v4 + 104) = a1;
  sub_10068EAAC(a2, v4 + 272);
  v5 = *(_QWORD *)(v4 + 280);
  *(_QWORD *)(v4 + 328) = *(_QWORD *)(v4 + 272);
  *(_QWORD *)(v4 + 392) = v5;
  v6 = *(_OWORD *)(v4 + 304);
  *(_OWORD *)(v4 + 400) = *(_OWORD *)(v4 + 288);
  *(_OWORD *)(v4 + 416) = v6;
  *(_QWORD *)(v4 + 432) = *(_QWORD *)(v4 + 320);
  v7 = _s15AppExRepBackendC12BackendStateOMa(0);
  *(_QWORD *)(v4 + 440) = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 448) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 456) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 464) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 472) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 480) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 488) = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 496) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 504) = v10;
  *(_QWORD *)(v4 + 512) = v11;
  return swift_task_switch(sub_10068791C, v10, v11);
}

uint64_t sub_10068791C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(__n128);
  __n128 v12;
  int EnumCaseMultiPayload;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(__n128);
  __n128 v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(__n128);
  __n128 v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  uint64_t Strong;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 264) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  if ((static UUID.== infix(_:_:)(*(_QWORD *)(v0 + 104)) & 1) == 0)
    goto LABEL_8;
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  v6 = *(void (**)(__n128))(*(_QWORD *)v5 + 128);
  v7 = swift_retain(v5);
  v6(v7);
  swift_release(v5);
  sub_100681C00(v0 + 112);
  sub_1004B84A4(v2, _s15AppExRepBackendC12BackendStateOMa);
  sub_10068EBD0(v0 + 112);
  sub_10068ECB8(v0 + 112, v0 + 16);
  if (!*(_QWORD *)(v0 + 16))
  {
    v25 = *(_QWORD *)(v0 + 472);
    v24 = *(_QWORD *)(v0 + 480);
    v26 = *(_QWORD *)(v0 + 440);
    v27 = *(_QWORD *)(v3 + v4);
    v28 = *(void (**)(__n128))(*(_QWORD *)v27 + 128);
    v29 = swift_retain(v27);
    v28(v29);
    swift_release(v27);
    sub_1004B8460(v24, v25, _s15AppExRepBackendC12BackendStateOMa);
    LODWORD(v26) = swift_getEnumCaseMultiPayload(v25, v26);
    sub_1004B84A4(v25, _s15AppExRepBackendC12BackendStateOMa);
    sub_1004B84A4(v24, _s15AppExRepBackendC12BackendStateOMa);
    if ((_DWORD)v26 != 3 || (sub_10068EAAC(*(_QWORD *)(v0 + 200), v0 + 208), *(_QWORD *)(v0 + 248) >> 62 != 1))
    {
LABEL_8:
      swift_release(*(_QWORD *)(v0 + 496));
      sub_100757E04(&_mh_execute_header, (uint64_t)"_rendererStateChanged(_:state:acknowledge:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 436, "Unexpected remote USD renderer state change.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_rendererStateChanged(_:state:acknowledge:)", 43, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2u, 436, (uint64_t)"Unexpected remote USD renderer state change.", 44, 2u);
      goto LABEL_17;
    }
  }
  v8 = *(_QWORD *)(v0 + 456);
  v9 = *(_QWORD *)(v0 + 440);
  v10 = *(_QWORD *)(v3 + v4);
  v11 = *(void (**)(__n128))(*(_QWORD *)v10 + 128);
  v12 = swift_retain(v10);
  v11(v12);
  swift_release(v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 2)
  {
    v30 = *(__int128 **)(v0 + 456);
    v31 = *(_QWORD *)(v0 + 464);
    v73 = *(_QWORD *)(v0 + 440);
    v70 = *(_QWORD *)(v0 + 432);
    v32 = *(_QWORD *)(v0 + 416);
    v68 = *(_QWORD *)(v0 + 424);
    v34 = *(_QWORD *)(v0 + 400);
    v33 = *(_QWORD *)(v0 + 408);
    v35 = *(_QWORD *)(v0 + 392);
    v36 = *(_QWORD *)(v0 + 328);
    v71 = *(_QWORD **)(v0 + 200);
    v61 = v30[1];
    v62 = *v30;
    v64 = *(__int128 *)((char *)v30 + 104);
    v66 = *(__int128 *)((char *)v30 + 88);
    sub_100689EAC(*((_QWORD *)v30 + 4), *((_QWORD *)v30 + 5), *((_QWORD *)v30 + 6), *((_QWORD *)v30 + 7), *((_QWORD *)v30 + 8), *((_QWORD *)v30 + 9), *((_QWORD *)v30 + 10));
    *(_OWORD *)v31 = v62;
    *(_OWORD *)(v31 + 16) = v61;
    *(_QWORD *)(v31 + 32) = v36;
    *(_QWORD *)(v31 + 40) = v35;
    *(_QWORD *)(v31 + 48) = v34;
    *(_QWORD *)(v31 + 56) = v33;
    *(_QWORD *)(v31 + 64) = v32;
    *(_QWORD *)(v31 + 72) = v68;
    *(_QWORD *)(v31 + 80) = v70;
    *(_OWORD *)(v31 + 88) = v66;
    *(_OWORD *)(v31 + 104) = v64;
    v21 = v31;
    v22 = v73;
    v23 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v37 = *(_QWORD *)(v0 + 456);
      v38 = *(_QWORD *)(v3 + v4);
      v39 = *(void (**)(__n128))(*(_QWORD *)v38 + 128);
      v40 = swift_retain(v38);
      v39(v40);
      swift_release(v38);
      sub_1004B84A4(v37, _s15AppExRepBackendC12BackendStateOMa);
      goto LABEL_12;
    }
    v14 = *(__int128 **)(v0 + 456);
    v15 = *(_QWORD *)(v0 + 464);
    v72 = *(_QWORD *)(v0 + 440);
    v69 = *(_QWORD *)(v0 + 432);
    v16 = *(_QWORD *)(v0 + 416);
    v67 = *(_QWORD *)(v0 + 424);
    v18 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 328);
    v71 = *(_QWORD **)(v0 + 200);
    v63 = v14[1];
    v65 = *v14;
    sub_100689EAC(*((_QWORD *)v14 + 4), *((_QWORD *)v14 + 5), *((_QWORD *)v14 + 6), *((_QWORD *)v14 + 7), *((_QWORD *)v14 + 8), *((_QWORD *)v14 + 9), *((_QWORD *)v14 + 10));
    *(_OWORD *)v15 = v65;
    *(_OWORD *)(v15 + 16) = v63;
    *(_QWORD *)(v15 + 32) = v20;
    *(_QWORD *)(v15 + 40) = v19;
    *(_QWORD *)(v15 + 48) = v18;
    *(_QWORD *)(v15 + 56) = v17;
    *(_QWORD *)(v15 + 64) = v16;
    *(_QWORD *)(v15 + 72) = v67;
    *(_QWORD *)(v15 + 80) = v69;
    v21 = v15;
    v22 = v72;
    v23 = 1;
  }
  swift_storeEnumTagMultiPayload(v21, v22, v23);
  sub_10068EAE8(v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689CF4);
LABEL_12:
  if (*(_BYTE *)(v0 + 536) == 1)
  {
    v41 = (_QWORD *)swift_task_alloc(dword_1013EB04C);
    *(_QWORD *)(v0 + 520) = v41;
    *v41 = v0;
    v41[1] = sub_100687E60;
    return sub_100681D44(*(_QWORD *)(v0 + 464));
  }
  v43 = *(_QWORD *)(v0 + 488);
  v44 = *(_QWORD *)(v0 + 464);
  v45 = *(_QWORD *)(v0 + 448);
  v46 = *(_QWORD *)(v0 + 264);
  swift_release(*(_QWORD *)(v0 + 496));
  sub_1004B8460(v44, v45, _s15AppExRepBackendC12BackendStateOMa);
  v47 = *(_QWORD *)(v3 + v4);
  sub_1004B8460(v45, v43, _s15AppExRepBackendC12BackendStateOMa);
  v48 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v47 + 136);
  v49 = swift_retain(v47);
  v48(v43, v49);
  swift_release(v47);
  v50 = v46 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v46 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate);
  if (Strong)
  {
    v52 = Strong;
    v53 = *(_QWORD *)(v50 + 8);
    ObjectType = swift_getObjectType(Strong);
    sub_100682030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8))(v1, v0 + 336, ObjectType, v53);
    swift_unknownObjectRelease(v52);
    sub_10068EAE8((_QWORD *)(v0 + 336), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v55 = *(_QWORD *)(v0 + 464);
  sub_1004B84A4(*(_QWORD *)(v0 + 448), _s15AppExRepBackendC12BackendStateOMa);
  sub_1004B84A4(v55, _s15AppExRepBackendC12BackendStateOMa);
LABEL_17:
  v56 = *(_QWORD *)(v0 + 480);
  v58 = *(_QWORD *)(v0 + 464);
  v57 = *(_QWORD *)(v0 + 472);
  v60 = *(_QWORD *)(v0 + 448);
  v59 = *(_QWORD *)(v0 + 456);
  swift_task_dealloc(*(_QWORD *)(v0 + 488));
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100687E60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 520);
  *(_QWORD *)(*v1 + 528) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100687F50;
  else
    v4 = sub_100687EC0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 504), *(_QWORD *)(v2 + 512));
}

uint64_t sub_100687EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 496));
  sub_1004B84A4(v1, _s15AppExRepBackendC12BackendStateOMa);
  v2 = *(_QWORD *)(v0 + 480);
  v4 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 456);
  swift_task_dealloc(*(_QWORD *)(v0 + 488));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100687F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 448);
  swift_release(*(_QWORD *)(v0 + 496));
  sub_1004B84A4(v4, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100687FE0(uint64_t a1, _QWORD *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _BYTE v54[64];
  char v55[112];
  char v56[32];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static UUID.== infix(_:_:)(&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid]) & 1) != 0)
  {
    v49 = a1;
    v50 = v2;
    v51 = v10;
    v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v53 = v5;
    v11 = a2;
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v56, 0, 0);
    v12 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v55);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v15 = v12;
    v16 = UUID.uuidString.getter(v15);
    v18 = v17;
    v19 = String.index(_:offsetBy:)(15, 8, v16, v17);
    v20 = String.subscript.getter(15, v19, v16, v18);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v27 = swift_bridgeObjectRelease(v18);
    v28 = static String._fromSubstring(_:)(v20, v22, v24, v26, v27);
    v30 = v29;
    swift_bridgeObjectRelease(v26);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v31 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v31;
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v30;
    sub_10068EAAC((uint64_t)v11, (uint64_t)v54);
    sub_10068EAE8(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689CF4);
    v32 = String.init<A>(describing:)(v54, &type metadata for CRLUSDRendering.RendererState);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v31;
    *(_QWORD *)(inited + 72) = v32;
    *(_QWORD *)(inited + 80) = v33;
    v35 = static os_log_type_t.debug.getter(v34);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v35, "(AppEx:CoreRE) [%{public}@] new remote state: %{public}@", 56, 2, inited);
    swift_setDeallocating(inited);
    v36 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v36);

    v37 = type metadata accessor for TaskPriority(0);
    v38 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v51, 1, 1, v37);
    v39 = v52;
    v40 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v52, v49, v53);
    type metadata accessor for MainActor(0);
    sub_10068EAE8(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689CF4);
    v41 = v50;
    v42 = static MainActor.shared.getter(v41);
    v43 = *(unsigned __int8 *)(v6 + 80);
    v44 = (v43 + 40) & ~v43;
    v45 = (v7 + v44 + 15) & 0xFFFFFFFFFFFFFFF0;
    v46 = (char *)swift_allocObject(&unk_101275AA0, v45 + 56, v43 | 0xF);
    *((_QWORD *)v46 + 2) = v42;
    *((_QWORD *)v46 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v46 + 4) = v41;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v46[v44], v39, v40);
    sub_10068EAAC((uint64_t)v11, (uint64_t)&v46[v45]);
    v47 = sub_100521B98(v38, (uint64_t)&unk_1013EB080, (uint64_t)v46);
    swift_release(v47);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"rendererStateChanged(_:state:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 463, "Unexpected remote USD renderer UUID.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rendererStateChanged(_:state:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2u, 463, (uint64_t)"Unexpected remote USD renderer UUID.", 36, 2u);
  }
}

uint64_t sub_100688414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;

  v9 = type metadata accessor for MainActor(0);
  v6[2] = v9;
  v6[3] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1013EB06C);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_100688494;
  return sub_100687814(a5, a6, 0);
}

uint64_t sub_100688494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10068851C;
  else
    v6 = sub_1004DF4E0;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10068851C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 24));
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100688558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[34] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[35] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[36] = v6;
  v3[37] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E01F0);
  v3[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006885E4, 0, 0);
}

uint64_t sub_1006885E4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _QWORD v47[9];

  if ((static UUID.== infix(_:_:)(*(_QWORD *)(v0 + 264) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid) & 1) != 0)
  {
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    v42 = *(_QWORD *)(v0 + 280);
    v43 = *(_QWORD *)(v0 + 272);
    v44 = *(_QWORD *)(v0 + 296);
    v1 = *(_QWORD **)(v0 + 256);
    v45 = *(void **)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 288);
    v40 = *(_QWORD *)(v0 + 304);
    v41 = *(_QWORD *)(v0 + 248);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 224, 0, 0);
    v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v3, v0 + 72);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    v5 = v2;
    v6 = UUID.uuidString.getter(v5);
    v8 = v7;
    v9 = String.index(_:offsetBy:)(15, 8, v6, v7);
    v10 = String.subscript.getter(15, v9, v6, v8);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = swift_bridgeObjectRelease(v8);
    v18 = static String._fromSubstring(_:)(v10, v12, v14, v16, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v21 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v21;
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    sub_10068EAAC((uint64_t)v1, v0 + 16);
    sub_10068EAE8(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689CF4);
    v22 = String.init<A>(describing:)(v0 + 16, &type metadata for CRLUSDRendering.RendererState);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v21;
    *(_QWORD *)(inited + 72) = v22;
    *(_QWORD *)(inited + 80) = v23;
    Hasher.init(_seed:)(v47, 0);
    sub_1009544B4((uint64_t)v47);
    v24 = Hasher._finalize()();
    *(_QWORD *)(inited + 136) = &type metadata for Int;
    *(_QWORD *)(inited + 144) = &protocol witness table for Int;
    *(_QWORD *)(inited + 112) = v24 % 10000;
    v26 = static os_log_type_t.debug.getter(v25);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v26, "(AppEx:CoreRE) [%{public}@] new remote state: %{public}@", 56, 2, inited);
    swift_setDeallocating(inited);
    v27 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v27);

    v28 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v40, 1, 1, v28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v44, v41, v43);
    type metadata accessor for MainActor(0);
    sub_10068EAE8(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689CF4);
    v29 = v45;
    v30 = static MainActor.shared.getter(v29);
    v31 = *(unsigned __int8 *)(v42 + 80);
    v32 = (v31 + 40) & ~v31;
    v33 = (v46 + v32 + 15) & 0xFFFFFFFFFFFFFFF0;
    v34 = (char *)swift_allocObject(&unk_101275A78, v33 + 56, v31 | 0xF);
    *((_QWORD *)v34 + 2) = v30;
    *((_QWORD *)v34 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v34 + 4) = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(&v34[v32], v44, v43);
    sub_10068EAAC((uint64_t)v1, (uint64_t)&v34[v33]);
    v35 = sub_100618920(v40, (uint64_t)&unk_1013EB060, (uint64_t)v34);
    *(_QWORD *)(v0 + 312) = v35;
    v36 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
    *(_QWORD *)(v0 + 320) = v36;
    v37 = sub_1004B804C(&qword_1013E0210);
    *v36 = v0;
    v36[1] = sub_100688A70;
    return Task.value.getter(v37, v35, (char *)&type metadata for () + 8, v37, &protocol self-conformance witness table for Error);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"rendererStateChangedWithAcknowledge(_:state:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 485, "Unexpected remote USD renderer UUID.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rendererStateChangedWithAcknowledge(_:state:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2u, 485, (uint64_t)"Unexpected remote USD renderer UUID.", 36, 2u);
    v39 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100688A70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 328) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_release(*(_QWORD *)(v2 + 312));
    v4 = sub_100688B20;
  }
  else
  {
    v4 = sub_100688ADC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100688ADC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 312));
  v1 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100688B20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100688B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;

  v9 = type metadata accessor for MainActor(0);
  v6[2] = v9;
  v6[3] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1013EB06C);
  v6[4] = v10;
  *v10 = v6;
  v10[1] = sub_100688BDC;
  return sub_100687814(a5, a6, 1);
}

uint64_t sub_100688BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10068F124;
  else
    v6 = sub_10068F0C0;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100688C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[27] = a5;
  v6[28] = v5;
  v6[25] = a3;
  v6[26] = a4;
  v6[24] = a2;
  v7 = _s15AppExRepBackendC12BackendStateOMa(0);
  v6[29] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[30] = swift_task_alloc(v8);
  v6[31] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v6[32] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[33] = v10;
  v6[34] = v11;
  return swift_task_switch(sub_100688D0C, v10, v11);
}

uint64_t sub_100688D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(__n128);
  __n128 v5;
  int EnumCaseMultiPayload;
  __int128 *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 224)
                 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  v4 = *(void (**)(__n128))(*(_QWORD *)v3 + 128);
  v5 = swift_retain(v3);
  v4(v5);
  swift_release(v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = *(__int128 **)(v0 + 248);
    v62 = v8[1];
    v63 = *v8;
    v60 = *((_QWORD *)v8 + 5);
    v61 = *((_QWORD *)v8 + 4);
    v58 = *((_QWORD *)v8 + 7);
    v59 = *((_QWORD *)v8 + 6);
    v56 = *((_QWORD *)v8 + 9);
    v57 = *((_QWORD *)v8 + 8);
    v55 = *((_QWORD *)v8 + 10);
    v10 = *((_QWORD *)v8 + 12);
    v9 = *((_QWORD *)v8 + 13);
    v11 = (void *)*((_QWORD *)v8 + 14);
    swift_unknownObjectRelease(*((_QWORD *)v8 + 11));
    swift_unknownObjectRelease(v10);
    swift_unknownObjectRelease(v9);

  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v47 = *(_QWORD *)(v0 + 248);
      swift_release(*(_QWORD *)(v0 + 256));
      sub_100757E04(&_mh_execute_header, (uint64_t)"_rendererSharedTextureChanged(_:textureData:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 520, "Unexpected state for receiving texture data.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_rendererSharedTextureChanged(_:textureData:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2u, 520, (uint64_t)"Unexpected state for receiving texture data.", 44, 2u);
      sub_1004B84A4(v47, _s15AppExRepBackendC12BackendStateOMa);
      v48 = *(_QWORD *)(v0 + 240);
      swift_task_dealloc(*(_QWORD *)(v0 + 248));
      swift_task_dealloc(v48);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v7 = *(__int128 **)(v0 + 248);
    v62 = v7[1];
    v63 = *v7;
    v60 = *((_QWORD *)v7 + 5);
    v61 = *((_QWORD *)v7 + 4);
    v58 = *((_QWORD *)v7 + 7);
    v59 = *((_QWORD *)v7 + 6);
    v56 = *((_QWORD *)v7 + 9);
    v57 = *((_QWORD *)v7 + 8);
    v55 = *((_QWORD *)v7 + 10);
  }
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v12 = *(_QWORD *)(v0 + 240);
  v53 = *(void **)(v0 + 216);
  v54 = *(_QWORD *)(v0 + 232);
  v52 = *(_QWORD *)(v0 + 208);
  v13 = *(void **)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 168, 0, 0);
  v14 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v15, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v17 = v14;
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  v21 = String.index(_:offsetBy:)(15, 8, v18, v19);
  v22 = String.subscript.getter(15, v21, v18, v20);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = swift_bridgeObjectRelease(v20);
  v30 = static String._fromSubstring(_:)(v22, v24, v26, v28, v29);
  v32 = v31;
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v30;
  *(_QWORD *)(inited + 40) = v32;
  v33 = objc_msgSend(v13, "width");
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v33;
  v34 = objc_msgSend(v13, "height");
  *(_QWORD *)(inited + 136) = &type metadata for Int;
  *(_QWORD *)(inited + 144) = &protocol witness table for Int;
  *(_QWORD *)(inited + 112) = v34;
  v36 = static os_log_type_t.debug.getter(v35);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v36, "(AppEx:CoreRE) [%{public}@] new texture data received (%{public}lu x %{public}lu)", 81, 2, inited);
  swift_setDeallocating(inited);
  v37 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v37);

  v38 = (uint64_t *)(*(_QWORD *)(v49 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer)
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  v39 = v38[1];
  v50 = *v38;
  v40 = v38[2];
  v41 = (void *)v38[3];
  *v38 = (uint64_t)v13;
  v38[1] = v51;
  v38[2] = v52;
  v38[3] = (uint64_t)v53;
  swift_unknownObjectRetain_n(v13, 2);
  swift_unknownObjectRetain_n(v51, 2);
  swift_unknownObjectRetain_n(v52, 2);
  v42 = v53;
  sub_10068E7F0(v50, v39, v40, v41);
  sub_100895BF4();
  swift_unknownObjectRelease(v13);
  swift_unknownObjectRelease(v51);
  swift_unknownObjectRelease(v52);

  *(_OWORD *)v12 = v63;
  *(_OWORD *)(v12 + 16) = v62;
  *(_QWORD *)(v12 + 32) = v61;
  *(_QWORD *)(v12 + 40) = v60;
  *(_QWORD *)(v12 + 48) = v59;
  *(_QWORD *)(v12 + 56) = v58;
  *(_QWORD *)(v12 + 64) = v57;
  *(_QWORD *)(v12 + 72) = v56;
  *(_QWORD *)(v12 + 80) = v55;
  *(_QWORD *)(v12 + 88) = v13;
  *(_QWORD *)(v12 + 96) = v51;
  *(_QWORD *)(v12 + 104) = v52;
  *(_QWORD *)(v12 + 112) = v42;
  swift_storeEnumTagMultiPayload(v12, v54, 2);
  v43 = dword_1013EB04C;
  swift_unknownObjectRetain(v13);
  swift_unknownObjectRetain(v51);
  swift_unknownObjectRetain(v52);
  v44 = v42;
  v45 = (_QWORD *)swift_task_alloc(v43);
  *(_QWORD *)(v0 + 280) = v45;
  *v45 = v0;
  v45[1] = sub_10068920C;
  return sub_100681D44(*(_QWORD *)(v0 + 240));
}

uint64_t sub_10068920C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1006892C4;
  else
    v4 = sub_10068926C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 264), *(_QWORD *)(v2 + 272));
}

uint64_t sub_10068926C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 256));
  sub_1004B84A4(v1, _s15AppExRepBackendC12BackendStateOMa);
  v2 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006892C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 256));
  sub_1004B84A4(v2, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = type metadata accessor for UUID(0);
  v6[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[9] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v6[10] = v9;
  v6[11] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E01F0);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006893AC, 0, 0);
}

uint64_t sub_1006893AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if ((static UUID.== infix(_:_:)(*(_QWORD *)(v0 + 16)) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 88);
    v1 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 72);
    v30 = *(_QWORD *)(v0 + 80);
    v31 = v1;
    v5 = *(void **)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v28 = v4;
    v29 = v2;
    v6 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    v26 = v8;
    v27 = *(void **)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 1, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
    type metadata accessor for MainActor(0);
    v11 = v5;
    swift_unknownObjectRetain(v8);
    v12 = v7;
    swift_unknownObjectRetain(v7);
    v13 = v6;
    swift_unknownObjectRetain(v6);
    v14 = v27;
    v15 = static MainActor.shared.getter(v14);
    v16 = *(unsigned __int8 *)(v3 + 80);
    v17 = (v16 + 40) & ~v16;
    v18 = (v30 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = (char *)swift_allocObject(&unk_101275A50, v18 + 32, v16 | 7);
    *((_QWORD *)v19 + 2) = v15;
    *((_QWORD *)v19 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v19 + 4) = v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v19[v17], v29, v28);
    v20 = &v19[v18];
    *(_QWORD *)v20 = v26;
    *((_QWORD *)v20 + 1) = v12;
    *((_QWORD *)v20 + 2) = v13;
    *((_QWORD *)v20 + 3) = v14;
    v21 = sub_100618920(v31, (uint64_t)&unk_1013EB038, (uint64_t)v19);
    *(_QWORD *)(v0 + 104) = v21;
    v22 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
    *(_QWORD *)(v0 + 112) = v22;
    v23 = sub_1004B804C(&qword_1013E0210);
    *v22 = v0;
    v22[1] = sub_100689640;
    return Task.value.getter(v23, v21, (char *)&type metadata for () + 8, v23, &protocol self-conformance witness table for Error);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"rendererSharedTextureChanged(_:textureData:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 529, "Unexpected remote USD renderer UUID.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rendererSharedTextureChanged(_:textureData:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2u, 529, (uint64_t)"Unexpected remote USD renderer UUID.", 36, 2u);
    v25 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100689640()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_release(*(_QWORD *)(v2 + 104));
    v4 = sub_1006896F0;
  }
  else
  {
    v4 = sub_1006896AC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1006896AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006896F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068972C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v13 = type metadata accessor for MainActor(0);
  v8[2] = v13;
  v8[3] = static MainActor.shared.getter(v13);
  v14 = (_QWORD *)swift_task_alloc(dword_1013EB044);
  v8[4] = v14;
  *v14 = v8;
  v14[1] = sub_1006897D0;
  return sub_100688C64(a5, a6, a7, a8, v16);
}

uint64_t sub_1006897D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10068988C;
  else
    v6 = sub_100689858;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100689858()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068988C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068996C()
{
  return _s15AppExRepBackendCMa(0);
}

uint64_t _s15AppExRepBackendCMa(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013EAE08, (uint64_t)&_s15AppExRepBackendCMn);
}

uint64_t sub_100689988(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100F02B10;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_100F02B28;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_100689A34(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v24);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
        v10 = v9[5];
        v11 = (uint64_t *)((char *)a1 + v10);
        v12 = (_QWORD *)((char *)a2 + v10);
        v13 = *v12;
        v14 = v12[1];
        sub_1004BE310(*v12, v14);
        *v11 = v13;
        v11[1] = v14;
        v15 = v9[6];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v18;
        *((_QWORD *)v16 + 8) = *((_QWORD *)v17 + 8);
        v19 = *((_OWORD *)v17 + 1);
        *(_OWORD *)v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v19;
        v20 = v9[7];
        v21 = (_OWORD *)((char *)a1 + v20);
        v22 = (_OWORD *)((char *)a2 + v20);
        v23 = v22[1];
        *v21 = *v22;
        v21[1] = v23;
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v26 = *a2;
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        v29 = (void *)a2[2];
        v28 = a2[3];
        a1[2] = (uint64_t)v29;
        a1[3] = v28;
        v30 = a2[5];
        v31 = a2[6];
        v32 = a2[7];
        v33 = a2[8];
        v54 = a2[9];
        v56 = a2[4];
        v34 = a2[10];
        swift_retain(v26);
        swift_retain(v27);
        v35 = v29;
        swift_retain(v28);
        sub_100689CF4(v56, v30, v31, v32, v33, v54, v34);
        a1[4] = v56;
        a1[5] = v30;
        a1[6] = v31;
        a1[7] = v32;
        a1[8] = v33;
        a1[9] = v54;
        a1[10] = v34;
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v36 = *a2;
        v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        v39 = (void *)a2[2];
        v38 = a2[3];
        a1[2] = (uint64_t)v39;
        a1[3] = v38;
        v40 = a2[5];
        v41 = a2[6];
        v42 = a2[7];
        v43 = a2[8];
        v53 = a2[9];
        v55 = a2[4];
        v57 = a2[10];
        swift_retain(v36);
        swift_retain(v37);
        v44 = v39;
        swift_retain(v38);
        sub_100689CF4(v55, v40, v41, v42, v43, v53, v57);
        a1[4] = v55;
        a1[5] = v40;
        a1[6] = v41;
        a1[7] = v42;
        a1[8] = v43;
        a1[9] = v53;
        v45 = a2[11];
        v46 = a2[12];
        a1[10] = v57;
        a1[11] = v45;
        v48 = a2[13];
        v47 = (void *)a2[14];
        a1[12] = v46;
        a1[13] = v48;
        a1[14] = (uint64_t)v47;
        swift_unknownObjectRetain(v45);
        swift_unknownObjectRetain(v46);
        swift_unknownObjectRetain(v48);
        v49 = v47;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v50 = *a2;
        v51 = a2[1];
        v52 = *((_BYTE *)a2 + 16);
        sub_100689D34(v50, v51, v52);
        *a1 = v50;
        a1[1] = v51;
        *((_BYTE *)a1 + 16) = v52;
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_100689CF4(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (a6 >> 62 == 1)
  {
    sub_100689D34(a1, a2, a3);
  }
  else if (!(a6 >> 62))
  {
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a7);
  }
}

void sub_100689D34(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      swift_bridgeObjectRetain(a2);
      break;
    case 4:
      sub_100689D6C(a1, a2);
      break;
    default:
      return;
  }
}

uint64_t sub_100689D6C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain(a2);
  return result;
}

void sub_100689D80(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v3 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (char *)a1 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 20);
      sub_1004BBBC8(*(_QWORD *)v4, *((_QWORD *)v4 + 1));
      break;
    case 1u:
      swift_release(*a1);
      swift_release(a1[1]);

      swift_release(a1[3]);
      sub_100689EAC(a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
      break;
    case 2u:
      swift_release(*a1);
      swift_release(a1[1]);

      swift_release(a1[3]);
      sub_100689EAC(a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10]);
      swift_unknownObjectRelease(a1[11]);
      swift_unknownObjectRelease(a1[12]);
      swift_unknownObjectRelease(a1[13]);

      break;
    case 3u:
      sub_100689EEC(*a1, a1[1], *((_BYTE *)a1 + 16));
      break;
    default:
      return;
  }
}

void sub_100689EAC(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (a6 >> 62 == 1)
  {
    sub_100689EEC(a1, a2, a3);
  }
  else if (!(a6 >> 62))
  {
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a7);
  }
}

void sub_100689EEC(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      swift_bridgeObjectRelease(a2);
      break;
    case 4:
      sub_100689F24(a1, a2);
      break;
    default:
      return;
  }
}

uint64_t sub_100689F24(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t *sub_100689F38(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
      v8 = v7[5];
      v9 = (uint64_t *)((char *)a1 + v8);
      v10 = (_QWORD *)((char *)a2 + v8);
      v11 = *v10;
      v12 = v10[1];
      sub_1004BE310(*v10, v12);
      *v9 = v11;
      v9[1] = v12;
      v13 = v7[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v16;
      *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
      v17 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v17;
      v18 = v7[7];
      v19 = (_OWORD *)((char *)a1 + v18);
      v20 = (_OWORD *)((char *)a2 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      v22 = a1;
      v23 = a3;
      v24 = 0;
      goto LABEL_7;
    case 1u:
      v25 = *a2;
      v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      v28 = (void *)a2[2];
      v27 = a2[3];
      a1[2] = (uint64_t)v28;
      a1[3] = v27;
      v29 = a2[5];
      v30 = a2[6];
      v31 = a2[7];
      v32 = a2[8];
      v54 = a2[9];
      v56 = a2[4];
      v33 = a2[10];
      swift_retain(v25);
      swift_retain(v26);
      v34 = v28;
      swift_retain(v27);
      sub_100689CF4(v56, v29, v30, v31, v32, v54, v33);
      a1[4] = v56;
      a1[5] = v29;
      a1[6] = v30;
      a1[7] = v31;
      a1[8] = v32;
      a1[9] = v54;
      a1[10] = v33;
      v22 = a1;
      v23 = a3;
      v24 = 1;
      goto LABEL_7;
    case 2u:
      v35 = *a2;
      v36 = a2[1];
      *a1 = *a2;
      a1[1] = v36;
      v38 = (void *)a2[2];
      v37 = a2[3];
      a1[2] = (uint64_t)v38;
      a1[3] = v37;
      v39 = a2[5];
      v40 = a2[6];
      v41 = a2[7];
      v42 = a2[8];
      v53 = a2[9];
      v55 = a2[4];
      v57 = a2[10];
      swift_retain(v35);
      swift_retain(v36);
      v43 = v38;
      swift_retain(v37);
      sub_100689CF4(v55, v39, v40, v41, v42, v53, v57);
      a1[4] = v55;
      a1[5] = v39;
      a1[6] = v40;
      a1[7] = v41;
      a1[8] = v42;
      a1[9] = v53;
      v44 = a2[11];
      v45 = a2[12];
      a1[10] = v57;
      a1[11] = v44;
      v47 = a2[13];
      v46 = (void *)a2[14];
      a1[12] = v45;
      a1[13] = v47;
      a1[14] = (uint64_t)v46;
      swift_unknownObjectRetain(v44);
      swift_unknownObjectRetain(v45);
      swift_unknownObjectRetain(v47);
      v48 = v46;
      v22 = a1;
      v23 = a3;
      v24 = 2;
      goto LABEL_7;
    case 3u:
      v49 = *a2;
      v50 = a2[1];
      v51 = *((_BYTE *)a2 + 16);
      sub_100689D34(v49, v50, v51);
      *a1 = v49;
      a1[1] = v50;
      *((_BYTE *)a1 + 16) = v51;
      v22 = a1;
      v23 = a3;
      v24 = 3;
LABEL_7:
      swift_storeEnumTagMultiPayload(v22, v23, v24);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_10068A1C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, _s15AppExRepBackendC12BackendStateOMa);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
        v8 = v7[5];
        v9 = (uint64_t *)((char *)a1 + v8);
        v10 = (uint64_t *)((char *)a2 + v8);
        v11 = *v10;
        v12 = v10[1];
        sub_1004BE310(*v10, v12);
        *v9 = v11;
        v9[1] = v12;
        v13 = v7[6];
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        *(_OWORD *)v14 = *(_OWORD *)v15;
        v16 = *((_OWORD *)v15 + 1);
        v17 = *((_OWORD *)v15 + 2);
        v18 = *((_OWORD *)v15 + 3);
        *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
        *((_OWORD *)v14 + 2) = v17;
        *((_OWORD *)v14 + 3) = v18;
        *((_OWORD *)v14 + 1) = v16;
        v19 = v7[7];
        v20 = (_OWORD *)((char *)a1 + v19);
        v21 = (_OWORD *)((char *)a2 + v19);
        v22 = v21[1];
        *v20 = *v21;
        v20[1] = v22;
        v23 = a1;
        v24 = a3;
        v25 = 0;
        goto LABEL_8;
      case 1u:
        v26 = *a2;
        *a1 = *a2;
        v27 = a2[1];
        a1[1] = v27;
        v28 = (void *)a2[2];
        a1[2] = (uint64_t)v28;
        v29 = a2[3];
        a1[3] = v29;
        v30 = a2[5];
        v31 = a2[6];
        v32 = a2[7];
        v33 = a2[8];
        v55 = a2[9];
        v57 = a2[4];
        v34 = a2[10];
        swift_retain(v26);
        swift_retain(v27);
        v35 = v28;
        swift_retain(v29);
        sub_100689CF4(v57, v30, v31, v32, v33, v55, v34);
        a1[4] = v57;
        a1[5] = v30;
        a1[6] = v31;
        a1[7] = v32;
        a1[8] = v33;
        a1[9] = v55;
        a1[10] = v34;
        v23 = a1;
        v24 = a3;
        v25 = 1;
        goto LABEL_8;
      case 2u:
        v36 = *a2;
        *a1 = *a2;
        v37 = a2[1];
        a1[1] = v37;
        v38 = (void *)a2[2];
        a1[2] = (uint64_t)v38;
        v39 = a2[3];
        a1[3] = v39;
        v40 = a2[5];
        v41 = a2[6];
        v42 = a2[7];
        v43 = a2[8];
        v56 = a2[9];
        v58 = a2[4];
        v54 = a2[10];
        swift_retain(v36);
        swift_retain(v37);
        v44 = v38;
        swift_retain(v39);
        sub_100689CF4(v58, v40, v41, v42, v43, v56, v54);
        a1[4] = v58;
        a1[5] = v40;
        a1[6] = v41;
        a1[7] = v42;
        a1[8] = v43;
        a1[9] = v56;
        a1[10] = v54;
        v45 = a2[11];
        a1[11] = v45;
        v46 = a2[12];
        a1[12] = v46;
        v47 = a2[13];
        a1[13] = v47;
        v48 = (void *)a2[14];
        a1[14] = (uint64_t)v48;
        swift_unknownObjectRetain(v45);
        swift_unknownObjectRetain(v46);
        swift_unknownObjectRetain(v47);
        v49 = v48;
        v23 = a1;
        v24 = a3;
        v25 = 2;
        goto LABEL_8;
      case 3u:
        v50 = *a2;
        v51 = a2[1];
        v52 = *((_BYTE *)a2 + 16);
        sub_100689D34(v50, v51, v52);
        *a1 = v50;
        a1[1] = v51;
        *((_BYTE *)a1 + 16) = v52;
        v23 = a1;
        v24 = a3;
        v25 = 3;
LABEL_8:
        swift_storeEnumTagMultiPayload(v23, v24, v25);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s15AppExRepBackendC12BackendStateOMa(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013EAE88, (uint64_t)&_s15AppExRepBackendC12BackendStateOMn);
}

char *sub_10068A4B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
    *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
    v8 = v7[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v11;
    *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
    v12 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v12;
    v13 = v7[7];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_10068A588(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, _s15AppExRepBackendC12BackendStateOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
      *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
      v8 = v7[6];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v11;
      *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      v13 = v7[7];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10068A674(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for CRLUSDRendering.SceneRequest(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "X";
    v4[2] = &unk_100F02B68;
    v4[3] = &unk_100F02B80;
    swift_initEnumMetadataMultiPayload(a1, 256, 4, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10068A6F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10068A738(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013EAF84);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1006822B0(a1);
}

uint64_t sub_10068A784(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_10068A7F0, v4, v5);
}

uint64_t sub_10068A7F0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;

  v1 = dword_1013EAF6C;
  v2 = *(id *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc(v1);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_10068A868;
  return sub_10068CCF4(0x6353657461647075, 0xED00002928656E65, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
}

uint64_t sub_10068A868()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  v4 = *(void **)(*v1 + 24);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_10068A90C;
  else
    v5 = sub_10068A8D8;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10068A8D8()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068A90C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068A940(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1013EAF5C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return sub_100685FE8(a1, a2);
}

uint64_t sub_10068A99C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_10068AA08, v4, v5);
}

uint64_t sub_10068AA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = dword_1013EAF34;
  v3 = *(id *)(v0 + 24);
  swift_bridgeObjectRetain(v1);
  v4 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_10068AA80;
  return sub_10068D3B8(0xD000000000000010, 0x8000000100FC1700, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
}

uint64_t sub_10068AA80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(void **)(*v1 + 24);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);

  if (v0)
    v6 = sub_10068F128;
  else
    v6 = sub_10068F0C4;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10068AAF8(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  *(float *)(v2 + 72) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  return swift_task_switch(sub_10068AB68, v4, v5);
}

uint64_t sub_10068AB68()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;

  v1 = dword_1013EAEFC;
  v2 = *(id *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(v1);
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_10068ABE4;
  return sub_10068DA04(0x70616E53656B6174, 0xEE002928746F6873, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 16), *(float *)(v0 + 72));
}

uint64_t sub_10068ABE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 48);
  v6 = *(void **)(*(_QWORD *)v2 + 16);
  *(_QWORD *)(*(_QWORD *)v2 + 56) = v1;
  swift_task_dealloc(v5);

  if (v1)
  {
    v7 = v4[4];
    v8 = v4[5];
    v9 = sub_10068AC98;
  }
  else
  {
    v4[8] = a1;
    v7 = v4[4];
    v8 = v4[5];
    v9 = sub_10068AC60;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10068AC60()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 64), v1);
}

uint64_t sub_10068AC98()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068ACD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1013EB054);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return sub_100688558(a1, a2);
}

uint64_t sub_10068AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(dword_1013EB02C);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1004CFD00;
  return sub_10068931C(a1, a2, a3, a4, a5);
}

uint64_t sub_10068ADA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  v5[3] = v4;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = v6;
  v5[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[10] = v7;
  v5[11] = v8;
  return swift_task_switch(sub_10068AE20, v7, v8);
}

uint64_t sub_10068AE20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 48);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 96) = v2;
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v3 + 16) = v1 + 24;
  *(_OWORD *)(v3 + 24) = v7;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 112) = v4;
  v5 = type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(0);
  *v4 = v1;
  v4[1] = sub_10068AEE4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 16, v2, &protocol witness table for MainActor, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), sub_10068E758, v3, v5);
}

uint64_t sub_10068AEE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068F0B8;
  }
  else
  {
    v7 = v2[13];
    swift_release(v2[12]);
    swift_task_dealloc(v7);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068F0A8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10068AF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  v5[3] = v4;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = v6;
  v5[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[10] = v7;
  v5[11] = v8;
  return swift_task_switch(sub_10068AFD0, v7, v8);
}

uint64_t sub_10068AFD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 48);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 96) = v2;
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v3 + 16) = v1 + 24;
  *(_OWORD *)(v3 + 24) = v7;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 112) = v4;
  v5 = sub_1004B804C(&qword_1013E4648);
  *v4 = v1;
  v4[1] = sub_10068B098;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 16, v2, &protocol witness table for MainActor, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), sub_10068E014, v3, v5);
}

uint64_t sub_10068B098()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068B140;
  }
  else
  {
    v7 = v2[13];
    swift_release(v2[12]);
    swift_task_dealloc(v7);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068B10C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10068B10C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 16), v1);
}

uint64_t sub_10068B140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068B188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v5[2] = v4;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = v6;
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[9] = v7;
  v5[10] = v8;
  return swift_task_switch(sub_10068B200, v7, v8);
}

uint64_t sub_10068B200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v1 + 40);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 88) = v2;
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 96) = v3;
  *(_QWORD *)(v3 + 16) = v1 + 16;
  *(_OWORD *)(v3 + 24) = v6;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 104) = v4;
  *v4 = v1;
  v4[1] = sub_10068B2C0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 120, v2, &protocol witness table for MainActor, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), sub_10068E798, v3, &type metadata for Int32);
}

uint64_t sub_10068B2C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[9];
    v5 = v2[10];
    v6 = sub_10068B36C;
  }
  else
  {
    v7 = v2[12];
    swift_release(v2[11]);
    swift_task_dealloc(v7);
    v4 = v2[9];
    v5 = v2[10];
    v6 = sub_10068B334;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10068B334()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(unsigned int *)(v0 + 120), v1);
}

uint64_t sub_10068B36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10068B3B4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  _QWORD v22[4];
  _QWORD aBlock[5];
  uint64_t v24;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F80F0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_101275938, v12 + v8, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10068E774;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_101275950;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  v16 = v10;
  v17 = objc_msgSend(v16, "remoteObjectProxyWithErrorHandler:", v14, swift_release(v15).n128_f64[0]);

  _Block_release(v14);
  _bridgeAnyObjectToAny(_:)(aBlock, v17);
  swift_unknownObjectRelease(v17);
  sub_1004CB6E8((uint64_t)aBlock, (uint64_t)v22);
  v18 = sub_100511A70();
  swift_dynamicCast(&v21, v22, (char *)&type metadata for Any + 8, v18, 7);
  v22[0] = v21;
  v19 = v21;
  a3(v22, a1);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
}

void sub_10068B5A4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t), uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double v23;
  id v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t);
  id v29;
  _QWORD v30[4];
  _QWORD aBlock[5];
  uint64_t v32;

  v27 = a4;
  v28 = a3;
  v13 = sub_1004B804C(a5);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  v17 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v16);
  v18 = *(unsigned __int8 *)(v14 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(a6, v19 + v15, v18 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v20 + v19, (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = a7;
  v32 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = a8;
  v21 = _Block_copy(aBlock);
  v22 = v32;
  swift_unknownObjectRetain(v17);
  *(_QWORD *)&v23 = swift_release(v22).n128_u64[0];
  v24 = objc_msgSend(v17, "remoteObjectProxyWithErrorHandler:", v21, v23, v27);
  swift_unknownObjectRelease(v17);
  _Block_release(v21);
  _bridgeAnyObjectToAny(_:)(aBlock, v24);
  swift_unknownObjectRelease(v24);
  sub_1004CB6E8((uint64_t)aBlock, (uint64_t)v30);
  v25 = sub_100511A70();
  swift_dynamicCast(&v29, v30, (char *)&type metadata for Any + 8, v25, 7);
  v30[0] = v29;
  v26 = v29;
  v28(v30, a1);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
}

uint64_t sub_10068B78C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  id v22;
  _QWORD v23[4];
  _QWORD aBlock[5];
  uint64_t v25;

  v6 = sub_1004B804C(&qword_1013EAFF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v9);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_101275988, v13 + v8, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, v10, v6);
  aBlock[4] = sub_10068E78C;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_1012759A0;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_unknownObjectRetain(v11);
  v17 = objc_msgSend(v11, "remoteObjectProxyWithErrorHandler:", v15, swift_release(v16).n128_f64[0]);
  swift_unknownObjectRelease(v11);
  _Block_release(v15);
  _bridgeAnyObjectToAny(_:)(aBlock, v17);
  swift_unknownObjectRelease(v17);
  sub_1004CB6E8((uint64_t)aBlock, (uint64_t)v23);
  v18 = sub_100511A70();
  swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v18, 7);
  v23[0] = v22;
  v19 = v22;
  a3(v23, a1);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
}

uint64_t sub_10068B998(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t), uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  double v24;
  id v25;
  unint64_t v26;
  id v27;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t);
  id v31;
  _QWORD v32[4];
  _QWORD aBlock[5];
  uint64_t v34;

  v29 = a4;
  v30 = a3;
  v13 = sub_1004B804C(a5);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  v17 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v16);
  v18 = *(unsigned __int8 *)(v14 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(a6, v19 + v15, v18 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v20 + v19, (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = a7;
  v34 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = a8;
  v21 = _Block_copy(aBlock);
  v22 = v34;
  v23 = v17;
  *(_QWORD *)&v24 = swift_release(v22).n128_u64[0];
  v25 = objc_msgSend(v23, "remoteObjectProxyWithErrorHandler:", v21, v24, v29);

  _Block_release(v21);
  _bridgeAnyObjectToAny(_:)(aBlock, v25);
  swift_unknownObjectRelease(v25);
  sub_1004CB6E8((uint64_t)aBlock, (uint64_t)v32);
  v26 = sub_100511A70();
  swift_dynamicCast(&v31, v32, (char *)&type metadata for Any + 8, v26, 7);
  v32[0] = v31;
  v27 = v31;
  v30(v32, a1);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
}

uint64_t sub_10068BB94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v6;

  v6 = a1;
  swift_errorRetain(a1);
  v4 = sub_1004B804C(a3);
  return CheckedContinuation.resume(throwing:)(&v6, v4);
}

uint64_t sub_10068BBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = v6;
  v7 = static MainActor.shared.getter(v6);
  v5[8] = v7;
  v5[2] = v4;
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[10] = v8;
  v5[11] = v9;
  return swift_task_switch(sub_10068BC68, v8, v9);
}

uint64_t sub_10068BC68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v1 + 40);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 96) = v2;
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v3 + 16) = v1 + 16;
  *(_OWORD *)(v3 + 24) = v6;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 112) = v4;
  *v4 = v1;
  v4[1] = sub_10068BD18;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), sub_10068EE58, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10068BD18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068BE18;
  }
  else
  {
    v7 = v2[13];
    swift_release(v2[12]);
    swift_task_dealloc(v7);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068BD8C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10068BD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068BDE4, v2, v3);
}

uint64_t sub_10068BDE4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068BE18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[13];
  v2 = v0[9];
  v3 = v0[7];
  swift_release(v0[12]);
  swift_release(v2);
  swift_task_dealloc(v1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068BE8C, v4, v5);
}

uint64_t sub_10068BE8C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10068BEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = v6;
  v7 = static MainActor.shared.getter(v6);
  v5[8] = v7;
  v5[2] = v4;
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[10] = v8;
  v5[11] = v9;
  return swift_task_switch(sub_10068BF50, v8, v9);
}

uint64_t sub_10068BF50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v1 + 40);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 96) = v2;
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v3 + 16) = v1 + 16;
  *(_OWORD *)(v3 + 24) = v6;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 112) = v4;
  *v4 = v1;
  v4[1] = sub_10068C000;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), sub_10068E130, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10068C000()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068C0CC;
  }
  else
  {
    v7 = v2[13];
    swift_release(v2[12]);
    swift_task_dealloc(v7);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10068C074;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10068C074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068F0AC, v2, v3);
}

uint64_t sub_10068C0CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[13];
  v2 = v0[9];
  v3 = v0[7];
  swift_release(v0[12]);
  swift_release(v2);
  swift_task_dealloc(v1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068F0B4, v4, v5);
}

uint64_t sub_10068C140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = v6;
  v7 = static MainActor.shared.getter(v6);
  v5[8] = v7;
  v5[2] = v4;
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[10] = v8;
  v5[11] = v9;
  return swift_task_switch(sub_10068C1D0, v8, v9);
}

uint64_t sub_10068C1D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v1 + 40);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 96) = v2;
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v3 + 16) = v1 + 16;
  *(_OWORD *)(v3 + 24) = v6;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 112) = v4;
  *v4 = v1;
  v4[1] = sub_10068C000;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), sub_10068E70C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10068C280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  char *v37;

  v2 = v1;
  v4 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v4);
  v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1004B804C(&qword_1013EB098);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = sub_1004B804C(&qword_1013EAFA8);
  v8 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013EB0A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - v15;
  v17 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 88);
  v32 = a1;
  sub_1004B8460(a1, v17, _s15AppExRepBackendC12BackendStateOMa);
  v18 = sub_1004B804C(&qword_1013EB0A8);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v18);
  *v7 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v33 + 104))(v7, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v35);
  v37 = v16;
  v20 = v4;
  v21 = v7;
  v22 = v10;
  v23 = v4;
  v24 = v34;
  AsyncStream.init(_:bufferingPolicy:_:)(v20, v21, sub_10068EEA4, v36, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), v10, v24);
  sub_10068EEAC((uint64_t)v16, (uint64_t)v13);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104), v13, v18);
    v26 = v31;
    v27 = v32;
    sub_1004B8460(v32, v31, _s15AppExRepBackendC12BackendStateOMa);
    v28 = sub_1004B804C(&qword_1013EB0B0);
    swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
    v29 = CurrentValueSubject.init(_:)(v26);
    sub_1004B84A4(v27, _s15AppExRepBackendC12BackendStateOMa);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v24);
    *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112)) = v29;
    sub_10068EEF4((uint64_t)v16);
    return v2;
  }
  return result;
}

uint64_t sub_10068C558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_10068EEF4(a2);
  v4 = sub_1004B804C(&qword_1013EB0A8);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

id sub_10068C5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *ObjectType;
  objc_super v26;

  v4 = v3;
  v23 = a1;
  v24 = ~(_DWORD)a3;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  v13 = &v4[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  v14 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  swift_storeEnumTagMultiPayload(v12, v7, 4);
  sub_1004B8460((uint64_t)v12, (uint64_t)v9, _s15AppExRepBackendC12BackendStateOMa);
  v15 = sub_1004B804C(&qword_1013EB090);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v4;
  v17 = sub_10068C280((uint64_t)v9);
  v18 = sub_1004B84A4((uint64_t)v12, _s15AppExRepBackendC12BackendStateOMa);
  *(_QWORD *)&v4[v14] = v17;
  *(_QWORD *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription] = 0;
  UUID.init()(v18);
  *((_QWORD *)v13 + 1) = a2;
  swift_unknownObjectWeakAssign(v13, v23);
  *(_QWORD *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_flags] = v24 & 1 | a3 & 0xFFFFFFFFFFFFFFFDLL;
  v19 = objc_msgSend(objc_allocWithZone((Class)_s10MetalLayerCMa()), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer] = v19;
  v20 = v19;
  objc_msgSend(v20, "setFrame:", 0.0, 0.0, 300.0, 300.0);

  v26.receiver = v16;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "init");
}

uint64_t sub_10068C7B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[4] = a1;
  v2[5] = a2;
  v3 = type metadata accessor for UUID(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[8] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[9] = swift_task_alloc(v6);
  v2[10] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v2[11] = v7;
  v2[12] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[13] = v8;
  v2[14] = v9;
  return swift_task_switch(sub_10068C864, v8, v9);
}

uint64_t sub_10068C864()
{
  objc_super *v0;
  id receiver;
  Class super_class;
  id v3;
  Class v4;
  id v5;
  char *v6;
  objc_class *v7;
  objc_class *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  double v12;
  id v13;
  uint64_t v14;
  void *v15;

  receiver = v0[5].receiver;
  super_class = v0[5].super_class;
  v3 = v0[3].receiver;
  v5 = v0[2].receiver;
  v4 = v0[2].super_class;
  v6 = (char *)v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v7 = (objc_class *)*((_QWORD *)v0[3].super_class + 2);
  v0[7].super_class = v7;
  ((void (*)(id, char *, id))v7)(receiver, v6, v3);
  v8 = (objc_class *)type metadata accessor for CRLUSDRendererExtensionShared.RendererDelegateReceiverProxy();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate];
  *((_QWORD *)v10 + 1) = 0;
  v11 = swift_unknownObjectWeakInit(v10);
  *(_QWORD *)(v11 + 8) = &off_1012756A0;
  swift_unknownObjectWeakAssign(v11, v4);
  v0[1].receiver = v9;
  v0[1].super_class = v8;
  *(_QWORD *)&v12 = swift_retain(v5).n128_u64[0];
  v13 = objc_msgSendSuper2(v0 + 1, "init", v12);
  v0[8].receiver = v13;
  v0[8].super_class = *(Class *)((char *)v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_flags);
  v0[9].receiver = (id)static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(super_class, &protocol witness table for MainActor);
  v0[9].super_class = (Class)v14;
  v0[10].receiver = v15;
  return swift_task_switch(sub_10068C974, v14, v15);
}

uint64_t sub_10068C974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v7;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[10];
  v4 = (_QWORD *)swift_task_alloc(48);
  v0[21] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v7 = (char *)&dword_1013EAFE0 + dword_1013EAFE0;
  v5 = (_QWORD *)swift_task_alloc(unk_1013EAFE4);
  v0[22] = v5;
  *v5 = v0;
  v5[1] = sub_10068CA20;
  return ((uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), _QWORD *))v7)(0xD00000000000002CLL, 0x8000000100FC18A0, sub_10068E53C, v4);
}

uint64_t sub_10068CA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  *(_QWORD *)(*(_QWORD *)v2 + 184) = v1;
  swift_task_dealloc(v5);
  v6 = v4[21];
  if (v1)
  {
    swift_task_dealloc(v6);
    v7 = v4[19];
    v8 = v4[20];
    v9 = sub_10068CC24;
  }
  else
  {
    v4[24] = a1;
    swift_task_dealloc(v6);
    v7 = v4[19];
    v8 = v4[20];
    v9 = sub_10068CAA0;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10068CAA0()
{
  _QWORD *v0;

  swift_release(v0[18]);
  return swift_task_switch(sub_10068CAD8, v0[13], v0[14]);
}

uint64_t sub_10068CAD8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  void *v17;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v16 = *(void **)(v0 + 40);
  v17 = *(void **)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = swift_release(*(_QWORD *)(v0 + 96));
  v2(v3, v4, v7, v9);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (v10 + 24) & ~v10;
  v12 = swift_allocObject(&unk_101275898, v11 + v5, v10 | 7);
  *(_QWORD *)(v12 + 16) = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v12 + v11, v3, v7);
  v13 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  swift_retain(v8);
  swift_retain(v1);
  v14 = AnyCancellable.init(_:)(sub_10068E5CC, v12);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v7);
  swift_release(v8);
  swift_release(v1);

  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 128), v14);
}

uint64_t sub_10068CC24()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[16];
  swift_release(v0[18]);

  return swift_task_switch(sub_10068CC64, v0[13], v0[14]);
}

uint64_t sub_10068CC64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __n128 v8;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(void **)(v0 + 40);
  v8 = swift_release(*(_QWORD *)(v0 + 96));
  swift_release_n(v6, 2, v8);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068CCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[49] = a4;
  v5[50] = a5;
  v5[47] = a2;
  v5[48] = a3;
  v5[46] = a1;
  v6 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[51] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[52] = swift_task_alloc(v7);
  v5[53] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v5[54] = v8;
  v9 = static MainActor.shared.getter(v8);
  v5[55] = v9;
  v5[56] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[57] = v10;
  v5[58] = v11;
  return swift_task_switch(sub_10068CDAC, v10, v11);
}

uint64_t sub_10068CDAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[50];
  v2 = swift_task_alloc(32);
  v0[59] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[60] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1013EAF4C);
  v0[61] = v4;
  *v4 = v0;
  v4[1] = sub_10068CE44;
  return sub_100684CAC((uint64_t)sub_10068E1D8, v2, (uint64_t)&unk_1013EAF78, v3);
}

uint64_t sub_10068CE44(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 488);
  *(_QWORD *)(*v2 + 496) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 456);
    v7 = *(_QWORD *)(v4 + 464);
    v8 = sub_10068CF70;
  }
  else
  {
    v10 = *(_QWORD *)(v4 + 472);
    v9 = *(_QWORD *)(v4 + 480);
    *(_BYTE *)(v4 + 313) = a1;
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    v6 = *(_QWORD *)(v4 + 456);
    v7 = *(_QWORD *)(v4 + 464);
    v8 = sub_10068CEC8;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10068CEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 448));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068CF20, v2, v3);
}

uint64_t sub_10068CF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  swift_release(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_BYTE *)(v0 + 313) & 1);
}

uint64_t sub_10068CF70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[59];
  v2 = v0[60];
  v3 = v0[54];
  swift_release(v0[56]);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068CFE4, v4, v5);
}

uint64_t sub_10068CFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v51;
  uint64_t v52;
  id v53;

  swift_release(*(_QWORD *)(v0 + 440));
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v52 = *(_QWORD *)(v0 + 368);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 224, 0, 0);
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v7 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v53 = v4;
  v51 = v7;
  v8 = UUID.uuidString.getter(v53);
  v10 = v9;
  v11 = String.index(_:offsetBy:)(15, 8, v8, v9);
  v12 = String.subscript.getter(15, v11, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v10);
  v20 = static String._fromSubstring(_:)(v12, v14, v16, v18, v19);
  v22 = v21;
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v23;
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 72) = v52;
  *(_QWORD *)(inited + 80) = v2;
  swift_getErrorValue(v1, v0 + 344, v0 + 248);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRetain(v2);
  v26 = Error.localizedDescription.getter(v24, v25);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v23;
  *(_QWORD *)(inited + 112) = v26;
  *(_QWORD *)(inited + 120) = v27;
  v28 = static os_log_type_t.error.getter(v26);
  sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v28, "(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v29);

  *(_QWORD *)(v0 + 360) = v1;
  swift_errorRetain(v1);
  v30 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 296, v0 + 360, v30, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_BYTE *)(v0 + 312);
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 496);
    *(_QWORD *)(v0 + 336) = v34;
    swift_errorRetain(v34);
    if ((swift_dynamicCast(v0 + 320, v0 + 336, v30, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v31 = *(_QWORD *)(v0 + 320);
      v32 = *(_QWORD *)(v0 + 328);
      v33 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 496), v0 + 352, v0 + 272);
      v31 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
      v33 = 2;
    }
  }
  v35 = *(_QWORD *)(v0 + 416);
  v36 = *(_QWORD *)(v0 + 424);
  v37 = *(_QWORD *)(v0 + 408);
  v38 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)v36 = v31;
  *(_QWORD *)(v36 + 8) = v32;
  *(_BYTE *)(v36 + 16) = v33;
  swift_storeEnumTagMultiPayload(v36, v37, 3);
  v39 = *(_QWORD *)(v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_1004B8460(v36, v35, _s15AppExRepBackendC12BackendStateOMa);
  v40 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v39 + 136);
  v41 = swift_retain(v39);
  v40(v35, v41);
  swift_release(v39);
  v42 = v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v42);
  if (Strong)
  {
    v44 = Strong;
    v45 = *(_QWORD *)(v42 + 8);
    ObjectType = swift_getObjectType(Strong);
    sub_100682030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v51, v0 + 16, ObjectType, v45);
    swift_unknownObjectRelease(v44);
    sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v47 = *(_QWORD *)(v0 + 416);
  v48 = *(_QWORD *)(v0 + 424);
  sub_1004B84A4(v48, _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow(v49);
  swift_task_dealloc(v48);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068D3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[49] = a4;
  v5[50] = a5;
  v5[47] = a2;
  v5[48] = a3;
  v5[46] = a1;
  v6 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[51] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[52] = swift_task_alloc(v7);
  v5[53] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v5[54] = v8;
  v9 = static MainActor.shared.getter(v8);
  v5[55] = v9;
  v5[56] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[57] = v10;
  v5[58] = v11;
  return swift_task_switch(sub_10068D470, v10, v11);
}

uint64_t sub_10068D470()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 472) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 392);
  v2 = (_QWORD *)swift_task_alloc(dword_1013EAF4C);
  *(_QWORD *)(v0 + 480) = v2;
  *v2 = v0;
  v2[1] = sub_10068D4F0;
  return sub_100684CAC((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, (uint64_t)&unk_1013EAF40, v1);
}

uint64_t sub_10068D4F0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 480);
  *(_QWORD *)(*v2 + 488) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 456);
    v7 = *(_QWORD *)(v4 + 464);
    v8 = sub_10068D5C4;
  }
  else
  {
    v9 = *(_QWORD *)(v4 + 472);
    *(_BYTE *)(v4 + 313) = a1;
    swift_task_dealloc(v9);
    v6 = *(_QWORD *)(v4 + 456);
    v7 = *(_QWORD *)(v4 + 464);
    v8 = sub_10068D56C;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10068D56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 448));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068F0C8, v2, v3);
}

uint64_t sub_10068D5C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[59];
  v2 = v0[54];
  swift_release(v0[56]);
  swift_task_dealloc(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10068D630, v3, v4);
}

uint64_t sub_10068D630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v51;
  uint64_t v52;
  id v53;

  swift_release(*(_QWORD *)(v0 + 440));
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v52 = *(_QWORD *)(v0 + 368);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 224, 0, 0);
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v7 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v53 = v4;
  v51 = v7;
  v8 = UUID.uuidString.getter(v53);
  v10 = v9;
  v11 = String.index(_:offsetBy:)(15, 8, v8, v9);
  v12 = String.subscript.getter(15, v11, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v10);
  v20 = static String._fromSubstring(_:)(v12, v14, v16, v18, v19);
  v22 = v21;
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v23;
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 72) = v52;
  *(_QWORD *)(inited + 80) = v2;
  swift_getErrorValue(v1, v0 + 344, v0 + 248);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRetain(v2);
  v26 = Error.localizedDescription.getter(v24, v25);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v23;
  *(_QWORD *)(inited + 112) = v26;
  *(_QWORD *)(inited + 120) = v27;
  v28 = static os_log_type_t.error.getter(v26);
  sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v28, "(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v29);

  *(_QWORD *)(v0 + 360) = v1;
  swift_errorRetain(v1);
  v30 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 296, v0 + 360, v30, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_BYTE *)(v0 + 312);
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 488);
    *(_QWORD *)(v0 + 336) = v34;
    swift_errorRetain(v34);
    if ((swift_dynamicCast(v0 + 320, v0 + 336, v30, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v31 = *(_QWORD *)(v0 + 320);
      v32 = *(_QWORD *)(v0 + 328);
      v33 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 488), v0 + 352, v0 + 272);
      v31 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
      v33 = 2;
    }
  }
  v35 = *(_QWORD *)(v0 + 416);
  v36 = *(_QWORD *)(v0 + 424);
  v37 = *(_QWORD *)(v0 + 408);
  v38 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)v36 = v31;
  *(_QWORD *)(v36 + 8) = v32;
  *(_BYTE *)(v36 + 16) = v33;
  swift_storeEnumTagMultiPayload(v36, v37, 3);
  v39 = *(_QWORD *)(v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_1004B8460(v36, v35, _s15AppExRepBackendC12BackendStateOMa);
  v40 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v39 + 136);
  v41 = swift_retain(v39);
  v40(v35, v41);
  swift_release(v39);
  v42 = v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v42);
  if (Strong)
  {
    v44 = Strong;
    v45 = *(_QWORD *)(v42 + 8);
    ObjectType = swift_getObjectType(Strong);
    sub_100682030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v51, v0 + 16, ObjectType, v45);
    swift_unknownObjectRelease(v44);
    sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v47 = *(_QWORD *)(v0 + 416);
  v48 = *(_QWORD *)(v0 + 424);
  sub_1004B84A4(v48, _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow(v49);
  swift_task_dealloc(v48);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068DA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5)
{
  _QWORD *v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5[48] = a2;
  v5[49] = a3;
  v5[47] = a1;
  v8 = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[50] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[51] = swift_task_alloc(v9);
  v5[52] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v5[53] = v10;
  v5[54] = static MainActor.shared.getter(v10);
  v11 = (_QWORD *)swift_task_alloc(dword_1013EAF04);
  v5[55] = v11;
  *v11 = v5;
  v11[1] = sub_10068DAC0;
  return sub_1006868A0((uint64_t)(v5 + 42), a4, a5);
}

uint64_t sub_10068DAC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 440);
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 424), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10068DB9C;
  else
    v6 = sub_10068DB44;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10068DB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 416);
  swift_release(*(_QWORD *)(v0 + 432));
  v3 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_10068DB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v51;
  uint64_t v52;
  id v53;

  swift_release(*(_QWORD *)(v0 + 432));
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 392);
  v52 = *(_QWORD *)(v0 + 376);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 224, 0, 0);
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v7 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  v53 = v4;
  v51 = v7;
  v8 = UUID.uuidString.getter(v53);
  v10 = v9;
  v11 = String.index(_:offsetBy:)(15, 8, v8, v9);
  v12 = String.subscript.getter(15, v11, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v10);
  v20 = static String._fromSubstring(_:)(v12, v14, v16, v18, v19);
  v22 = v21;
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v23;
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 72) = v52;
  *(_QWORD *)(inited + 80) = v2;
  swift_getErrorValue(v1, v0 + 352, v0 + 248);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRetain(v2);
  v26 = Error.localizedDescription.getter(v24, v25);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v23;
  *(_QWORD *)(inited + 112) = v26;
  *(_QWORD *)(inited + 120) = v27;
  v28 = static os_log_type_t.error.getter(v26);
  sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v28, "(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating(inited);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v29);

  *(_QWORD *)(v0 + 368) = v1;
  swift_errorRetain(v1);
  v30 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 296, v0 + 368, v30, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_BYTE *)(v0 + 312);
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 448);
    *(_QWORD *)(v0 + 344) = v34;
    swift_errorRetain(v34);
    if ((swift_dynamicCast(v0 + 320, v0 + 344, v30, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v31 = *(_QWORD *)(v0 + 320);
      v32 = *(_QWORD *)(v0 + 328);
      v33 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 448), v0 + 360, v0 + 272);
      v31 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
      v33 = 2;
    }
  }
  v35 = *(_QWORD *)(v0 + 408);
  v36 = *(_QWORD *)(v0 + 416);
  v38 = *(_QWORD *)(v0 + 392);
  v37 = *(_QWORD *)(v0 + 400);
  *(_QWORD *)v36 = v31;
  *(_QWORD *)(v36 + 8) = v32;
  *(_BYTE *)(v36 + 16) = v33;
  swift_storeEnumTagMultiPayload(v36, v37, 3);
  v39 = *(_QWORD *)(v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_1004B8460(v36, v35, _s15AppExRepBackendC12BackendStateOMa);
  v40 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v39 + 136);
  v41 = swift_retain(v39);
  v40(v35, v41);
  swift_release(v39);
  v42 = v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v42);
  if (Strong)
  {
    v44 = Strong;
    v45 = *(_QWORD *)(v42 + 8);
    ObjectType = swift_getObjectType(Strong);
    sub_100682030();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v51, v0 + 16, ObjectType, v45);
    swift_unknownObjectRelease(v44);
    sub_10068EAE8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100689EAC);
  }
  v47 = *(_QWORD *)(v0 + 408);
  v48 = *(_QWORD *)(v0 + 416);
  sub_1004B84A4(v48, _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow(v49);
  swift_task_dealloc(v48);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10068DF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  float v8;
  _QWORD *v9;

  v8 = *(float *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc(dword_1013EAF0C);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1004CFD00;
  return sub_100686DA8(a1, v8, a2, a3);
}

void sub_10068DFFC(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006D840C(a1, a2, *(float *)(v2 + 16));
}

void sub_10068E014(uint64_t a1)
{
  uint64_t v1;

  sub_10068B5A4(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &qword_1013EAF28, (uint64_t)&unk_101275708, (uint64_t)sub_10068E060, (uint64_t)&unk_101275720);
}

uint64_t sub_10068E054()
{
  return sub_100634AA4(&qword_1013EAF28);
}

uint64_t sub_10068E060(uint64_t a1)
{
  return sub_10068E188(a1, &qword_1013EAF28);
}

uint64_t sub_10068E06C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10068E07C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10068E084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v13 = *(_QWORD *)(v5 + 16);
  v12 = *(_QWORD *)(v5 + 24);
  v14 = (_QWORD *)swift_task_alloc(dword_1013EAF3C);
  *(_QWORD *)(v6 + 16) = v14;
  *v14 = v6;
  v14[1] = sub_1004CFD00;
  return sub_1006862B0(a1, a2, a3, a4, a5, v13, v12);
}

void sub_10068E118(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006D8220(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_10068E130(uint64_t a1)
{
  uint64_t v1;

  sub_10068B5A4(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &qword_1013EB680, (uint64_t)&unk_101275758, (uint64_t)sub_10068E17C, (uint64_t)&unk_101275770);
}

uint64_t sub_10068E170()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_10068E17C(uint64_t a1)
{
  return sub_10068E188(a1, &qword_1013EB680);
}

uint64_t sub_10068E188(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(a2) - 8) + 80);
  return sub_10068BB94(a1, v2 + ((v5 + 16) & ~v5), a2);
}

__n128 sub_10068E1D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 24);
  *(_OWORD *)v3 = *(_OWORD *)v2;
  result = *(__n128 *)(v2 + 16);
  v5 = *(_OWORD *)(v2 + 32);
  v6 = *(_OWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  *(__n128 *)(v3 + 16) = result;
  return result;
}

uint64_t sub_10068E228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;

  v12 = *(_QWORD *)(v5 + 16);
  v13 = (_QWORD *)swift_task_alloc(dword_1013EAF74);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1004CF80C;
  return sub_100685D40(a1, a2, a3, a4, a5, v12);
}

void sub_10068E2B0(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006D7DA4(a1, a2, *(_QWORD *)(v2 + 16), *(__int128 **)(v2 + 24));
}

uint64_t sub_10068E2C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1013EAF8C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1004CFD00;
  return sub_100682620(a1, v5, v4);
}

uint64_t sub_10068E32C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  sub_1004B84A4(a1, type metadata accessor for CRLUSDRendering.SceneRequest);
  return sub_1004B8460(v3, a1, type metadata accessor for CRLUSDRendering.SceneRequest);
}

uint64_t sub_10068E374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;

  v12 = *(_QWORD *)(v5 + 16);
  v13 = (_QWORD *)swift_task_alloc(dword_1013EAFBC);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1004CFD00;
  return sub_100684A6C(a1, a2, a3, a4, a5, v12);
}

void sub_10068E3FC(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006D7BC0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10068E414()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10068E438()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10068E45C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10068E488()
{
  uint64_t v0;

  return sub_10068738C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10068E490()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10068E4C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013EAFD4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100687474(a1, v4, v5, v7, v6);
}

void sub_10068E53C(void **a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1008B3A64(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10068E558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10068E5CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_100681AA0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10068E5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10068E678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013F80EC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1008B4014(a1, v5, v6, v7, v8);
}

uint64_t sub_10068E70C(uint64_t a1)
{
  uint64_t v1;

  return sub_10068B998(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &qword_1013EB680, (uint64_t)&unk_1012758E8, (uint64_t)sub_10068E17C, (uint64_t)&unk_101275900);
}

uint64_t sub_10068E74C()
{
  return sub_100634AA4(&qword_1013EB680);
}

void sub_10068E758(uint64_t a1)
{
  uint64_t v1;

  sub_10068B3B4(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24));
}

uint64_t sub_10068E768()
{
  return sub_100634AA4((uint64_t *)&unk_1013F80F0);
}

uint64_t sub_10068E774(uint64_t a1)
{
  return sub_10068E188(a1, (uint64_t *)&unk_1013F80F0);
}

uint64_t sub_10068E780()
{
  return sub_100634AA4(&qword_1013EAFF8);
}

uint64_t sub_10068E78C(uint64_t a1)
{
  return sub_10068E188(a1, &qword_1013EAFF8);
}

uint64_t sub_10068E798(uint64_t a1)
{
  uint64_t v1;

  return sub_10068B998(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &qword_1013F81F0, (uint64_t)&unk_1012759D8, (uint64_t)sub_10068E7E4, (uint64_t)&unk_1012759F0);
}

uint64_t sub_10068E7D8()
{
  return sub_100634AA4(&qword_1013F81F0);
}

uint64_t sub_10068E7E4(uint64_t a1)
{
  return sub_10068E188(a1, &qword_1013F81F0);
}

void sub_10068E7F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_unknownObjectRelease(a1);
    swift_unknownObjectRelease(a2);
    swift_unknownObjectRelease(a3);

  }
}

double sub_10068E83C(uint64_t a1)
{
  uint64_t v1;

  return sub_100686FDC(a1, v1);
}

unint64_t sub_10068E844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EB010;
  if (!qword_1013EB010)
  {
    v1 = sub_1004CB6A4(&qword_1013EB008);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, &qword_1013EB010);
  }
  return result;
}

uint64_t sub_10068E890()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10068E8BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013EB01C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1006870B8(a1, v4, v5, v6);
}

uint64_t sub_10068E928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6 + 16));

  return swift_deallocObject(v0, v6 + 32, v5);
}

uint64_t sub_10068E9DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = (_QWORD *)swift_task_alloc(dword_1013EB034);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1004CFD00;
  return sub_10068972C(a1, v6, v7, v8, v9, v11, v12, v13);
}

uint64_t sub_10068EAAC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLUSDRendering.SceneDescription(a2, a1);
  return a2;
}

_QWORD *sub_10068EAE8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t sub_10068EB24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (uint64_t)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_task_alloc(dword_1013EB05C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_100688B5C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10068EBD0(uint64_t a1)
{
  sub_10068EC20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
  return a1;
}

void sub_10068EC20(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  if (a1)
  {
    swift_release(a1);
    swift_release(a2);

    swift_release(a4);
    sub_100689EAC(a5, a6, a7, a8, a9, a10, a11);
  }
}

uint64_t sub_10068ECB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EB070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068ED04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 0xF;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_100689EAC(*(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), *(_QWORD *)(v0 + v6 + 16), *(_QWORD *)(v0 + v6 + 24), *(_QWORD *)(v0 + v6 + 32), *(_QWORD *)(v0 + v6 + 40), *(_QWORD *)(v0 + v6 + 48));
  return swift_deallocObject(v0, v6 + 56, v5);
}

uint64_t sub_10068EDAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (uint64_t)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_task_alloc(dword_1013EB07C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CF80C;
  return sub_100688414(a1, v6, v7, v8, v9, v10);
}

void sub_10068EE58(uint64_t a1)
{
  uint64_t v1;

  sub_10068B5A4(a1, **(_QWORD **)(v1 + 16), *(void (**)(_QWORD *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), &qword_1013EB680, (uint64_t)&unk_101275AC8, (uint64_t)sub_10068E17C, (uint64_t)&unk_101275AE0);
}

uint64_t sub_10068EE98()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_10068EEA4(uint64_t a1)
{
  uint64_t v1;

  return sub_10068C558(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10068EEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EB0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068EEF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013EB0A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double _s15AppExRepBackendC18RendererConnectionVwxx(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 24)).n128_u64[0];
  return result;
}

uint64_t *_s15AppExRepBackendC18RendererConnectionVwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  a1[2] = (uint64_t)v6;
  a1[3] = v5;
  swift_retain(v3);
  swift_retain(v4);
  v7 = v6;
  swift_retain(v5);
  return a1;
}

uint64_t *_s15AppExRepBackendC18RendererConnectionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  v10 = v8;

  v11 = a2[3];
  v12 = a1[3];
  a1[3] = v11;
  swift_retain(v11);
  swift_release(v12);
  return a1;
}

uint64_t _s15AppExRepBackendC18RendererConnectionVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);

  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

ValueMetadata *_s15AppExRepBackendC18RendererConnectionVMa()
{
  return &_s15AppExRepBackendC18RendererConnectionVN;
}

void sub_10068F0EC(void **a1, uint64_t a2)
{
  sub_10068E3FC(a1, a2);
}

NSString sub_10068F12C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EF10 = (uint64_t)result;
  return result;
}

void sub_10068F160(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[24];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v55 = (uint64_t)&v44 - v10;
  v11 = __chkstk_darwin(v9);
  v56 = (uint64_t)&v44 - v12;
  v13 = __chkstk_darwin(v11);
  v53 = (char *)&v44 - v14;
  v15 = __chkstk_darwin(v13);
  v52 = (char *)&v44 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v44 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v44 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v44 - v23;
  sub_10068FB24(a1, (uint64_t)&v44 - v23);
  if (swift_getEnumCaseMultiPayload(v24, v4) != 2)
  {
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_14;
  }
  v48 = a1;
  v54 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v24[*(int *)(v54 + 48) + 8]);
  sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
  v51 = (unint64_t *)(v1 + 16);
  swift_beginAccess(v1 + 16, v57, 33, 0);
  v25 = *(_QWORD *)(v1 + 16);
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
  {
    v30 = 0;
    goto LABEL_13;
  }
  v44 = v8;
  v45 = v5;
  v46 = v1;
  v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain(v25);
  v28 = 0;
  v50 = v27;
  v29 = v27;
  while (1)
  {
    sub_10068FB24(v25 + v29, (uint64_t)v22);
    sub_10068FB24((uint64_t)v22, (uint64_t)v19);
    if (swift_getEnumCaseMultiPayload(v19, v4) == 2)
      break;
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
    ++v28;
    v29 += v8;
    if (v26 == v28)
    {
      swift_bridgeObjectRelease(v25);
      v30 = *(_QWORD *)(*v51 + 16);
LABEL_12:
      v5 = v45;
      v2 = v46;
      v8 = v44;
      if (v30 < v26)
        goto LABEL_46;
LABEL_13:
      sub_100CFF064(v26, v30);
      swift_endAccess(v57);
      a1 = v48;
LABEL_14:
      sub_10068FB24(a1, v8);
      v31 = (unint64_t *)(v2 + 16);
      swift_beginAccess(v2 + 16, v57, 33, 0);
      v28 = *(_QWORD *)(v2 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
      *(_QWORD *)(v2 + 16) = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
LABEL_40:
        v28 = sub_100D0FAA0(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
        *v31 = v28;
      }
      v36 = *(_QWORD *)(v28 + 16);
      v35 = *(_QWORD *)(v28 + 24);
      if (v36 >= v35 >> 1)
      {
        v28 = sub_100D0FAA0(v35 > 1, v36 + 1, 1, v28);
        *v31 = v28;
      }
      *(_QWORD *)(v28 + 16) = v36 + 1;
      sub_1004B84E0(v8, v28+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_endAccess(v57);
      v37 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DCD00 != -1)
        swift_once(&qword_1013DCD00, sub_10068F12C);
      objc_msgSend(v37, "postNotificationName:object:", qword_10147EF10, v2);

      return;
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v19[*(int *)(v54 + 48) + 8]);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRelease(v25);
  v30 = v28 + 1;
  if (__OFADD__(v28, 1))
    goto LABEL_47;
  v31 = v51;
  v32 = *v51;
  v33 = *(_QWORD *)(*v51 + 16);
  if (v30 == v33)
  {
LABEL_11:
    v26 = v28;
    goto LABEL_12;
  }
  v38 = v8 + v29;
  v2 = v28 + 1;
  v5 = (uint64_t)v52;
  v39 = (uint64_t)v53;
  v49 = v53 + 8;
  v47 = v4;
  while (1)
  {
    if (v2 >= v33)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    sub_10068FB24(v32 + v38, v5);
    sub_10068FB24(v5, v39);
    if (swift_getEnumCaseMultiPayload(v39, v4) == 2)
    {
      swift_bridgeObjectRelease(*(_QWORD *)&v49[*(int *)(v54 + 48)]);
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_34;
    }
    sub_1004B84A4(v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4(v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (v2 != v28)
      break;
LABEL_33:
    if (__OFADD__(v28++, 1))
      goto LABEL_39;
LABEL_34:
    v30 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_38;
    v32 = *v31;
    v33 = *(_QWORD *)(*v31 + 16);
    ++v2;
    v38 += v8;
    if (v30 == v33)
      goto LABEL_11;
  }
  if ((v28 & 0x8000000000000000) == 0)
  {
    v40 = *v31;
    v41 = *(_QWORD *)(*v31 + 16);
    if (v28 >= v41)
      goto LABEL_42;
    sub_10068FB24(v40 + v50 + v28 * v8, v56);
    if (v2 >= v41)
      goto LABEL_43;
    sub_10068FB24(v40 + v38, v55);
    v42 = swift_isUniquelyReferenced_nonNull_native(v40);
    v31 = v51;
    *v51 = v40;
    if ((v42 & 1) == 0)
    {
      v40 = sub_100D15070(v40);
      *v31 = v40;
    }
    if (v28 >= *(_QWORD *)(v40 + 16))
      goto LABEL_44;
    sub_10068FBAC(v55, v40 + v50 + v28 * v8);
    if (v2 >= *(_QWORD *)(*v31 + 16))
      goto LABEL_45;
    sub_10068FBAC(v56, *v31 + v38);
    v5 = (uint64_t)v52;
    v39 = (uint64_t)v53;
    v4 = v47;
    goto LABEL_33;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
}

uint64_t sub_10068F74C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t *v7;
  id v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (unint64_t *)(v1 + 16);
  swift_beginAccess(v1 + 16, v15, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
  {
    v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v13, 1, v3);
  }
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCD00 != -1)
    swift_once(&qword_1013DCD00, sub_10068F12C);
  objc_msgSend(v8, "postNotificationName:object:", qword_10147EF10, v1);

  swift_beginAccess(v1 + 16, v14, 33, 0);
  v9 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v9 + 16))
  {
    __break(1u);
LABEL_11:
    result = sub_100D15070(v9);
    v9 = result;
    v11 = *(_QWORD *)(result + 16);
    if (v11)
      goto LABEL_7;
    goto LABEL_12;
  }
  result = swift_isUniquelyReferenced_nonNull_native(v9);
  if ((result & 1) == 0)
    goto LABEL_11;
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
LABEL_7:
    v12 = v11 - 1;
    sub_1004B84E0(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * (v11 - 1), (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
    *(_QWORD *)(v9 + 16) = v12;
    *v7 = v9;
    sub_1004B84E0((uint64_t)v6, a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_endAccess(v14);
    v13 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v13, 1, v3);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10068F910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  uint64_t result;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10068FB24(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v3) != 2)
  {
    v17 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v18 = (uint64_t)v6;
    goto LABEL_8;
  }
  sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease();
  sub_1004B84E0((uint64_t)v6, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  v10 = (unint64_t *)(v1 + 16);
  swift_beginAccess(v1 + 16, v20, 0, 0);
  v11 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain(v11);
  v12 = sub_100BCB124((uint64_t)v9, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    swift_beginAccess(v10, v19, 33, 0);
    v15 = *v10;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v10 = v15;
    if ((result & 1) != 0)
    {
      if ((v12 & 0x8000000000000000) == 0)
        goto LABEL_5;
    }
    else
    {
      result = sub_100D15070(v15);
      v15 = result;
      *v10 = result;
      if ((v12 & 0x8000000000000000) == 0)
      {
LABEL_5:
        if (v12 < *(_QWORD *)(v15 + 16))
        {
          sub_10068FB68(a1, v15+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12);
          swift_endAccess(v19);
          v17 = type metadata accessor for CRLBoardIdentifier;
          v18 = (uint64_t)v9;
LABEL_8:
          sub_1004B84A4(v18, v17);
          return 1;
        }
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  return 0;
}

uint64_t type metadata accessor for CRLNavigationStack()
{
  return objc_opt_self(_TtC8Freeform18CRLNavigationStack);
}

uint64_t sub_10068FB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068FB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068FBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068FBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = v4;
  v35 = a3;
  v36 = a2;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16);
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 136) = 0;
  v15 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_acknowledgeQueue;
  v16 = type metadata accessor for CRLUSDRendering.TaskQueue();
  v17 = swift_allocObject(v16, 136, 15);
  swift_defaultActor_initialize(v17, v18);
  *(_QWORD *)(v17 + 128) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v17 + 112) = xmmword_100F02C20;
  *(_QWORD *)(v5 + v15) = v17;
  v19 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_QWORD *)(v19 + 32) = 0;
  *(_OWORD *)(v19 + 40) = xmmword_100F02C30;
  if (qword_1013DD118 != -1)
    swift_once(&qword_1013DD118, sub_1007B5120);
  sub_1006950CC(a1, (uint64_t)v10);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  v21 = a1;
  if ((_DWORD)v20 == 1)
  {
    UUID.init()(v20);
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid, v14, v11);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v22(v14, v10, v11);
    v22((char *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid), v14, v11);
  }
  v23 = v36;
  *(_QWORD *)(v5 + 24) = v35;
  swift_unknownObjectWeakAssign(v5 + 16, v23);
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = 0xC000000000000000;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_QWORD *)(v5 + 128) = 0;
  if ((a4 & 2) != 0)
  {
    v24 = objc_msgSend(objc_allocWithZone((Class)_s10MetalLayerCMa()), "init");
    v25 = *(void **)(v5 + 32);
    *(_QWORD *)(v5 + 32) = v24;
    v26 = (char *)v24;

    objc_msgSend(v26, "setFrame:", 0.0, 0.0, 300.0, 300.0);
    v37 = *(_QWORD *)&v26[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber];
    v27 = v37;
    v28 = swift_allocObject(&unk_101275CD0, 24, 7);
    swift_weakInit(v28 + 16, v5);
    swift_retain(v27);
    v29 = sub_1004B804C(&qword_1013EB008);
    v30 = sub_10068E844();
    v31 = Publisher<>.sink(receiveValue:)(sub_100695138, v28, v29, v30);

    swift_unknownObjectRelease(v23);
    swift_release(v28);
    sub_1004CB800(v21, (uint64_t *)&unk_1013E1A50);
    swift_release(v37);
    v32 = *(_QWORD *)(v5 + 136);
    *(_QWORD *)(v5 + 136) = v31;
    swift_release(v32);
  }
  else
  {
    swift_unknownObjectRelease(v23);
    sub_1004CB800(a1, (uint64_t *)&unk_1013E1A50);
  }
  return v5;
}

double sub_10068FF28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *Strong;
  double result;
  _QWORD *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE v43[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v43, 0, 0);
  Strong = (_QWORD *)swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = (void *)Strong[4];
    if (!v9)
    {
LABEL_10:
      *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
      return result;
    }
    if ((*((_BYTE *)v9 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame) & 1) != 0
      && (v10 = Strong[9], v10 >> 62 == 1))
    {
      v11 = Strong[15];
      v12 = Strong[16];
      v13 = Strong[13];
      v14 = Strong[14];
      v40 = Strong[12];
      v41 = v13;
      v15 = Strong[11];
      v34 = Strong[10];
      v35 = v15;
      v17 = Strong[8];
      v42 = Strong[7];
      v16 = v42;
      v18 = Strong[6];
      v31 = v17;
      v32 = v18;
      v33 = v10;
      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
      v36 = type metadata accessor for MainActor(0);
      v39 = v12;
      v38 = v11;
      v37 = v14;
      sub_100690624(v18, v16, v17, v10);
      v20 = v9;
      LOBYTE(v12) = v31;
      v21 = v32;
      v22 = v33;
      sub_100690624(v32, v42, v31, v33);
      v24 = static MainActor.shared.getter(v23);
      v25 = (_QWORD *)swift_allocObject(&unk_101275CF8, 40, 7);
      v25[2] = v24;
      v25[3] = &protocol witness table for MainActor;
      v25[4] = v21;
      v26 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013EB358, (uint64_t)v25);
      sub_100690688(v21, v42, v12, v22);
      swift_release(v26);
      v27 = v8[17];
      if (!v27)
        goto LABEL_9;
    }
    else
    {
      v28 = v9;
      v27 = v8[17];
      if (!v27)
      {
LABEL_9:

        v29 = (_QWORD *)v8[17];
        v8[17] = 0;
        swift_release(v8);
        Strong = v29;
        goto LABEL_10;
      }
    }
    swift_retain(v27);
    AnyCancellable.cancel()();
    swift_release(v27);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1006901C4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1013FF754);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1004DF470;
  return sub_1009B846C();
}

uint64_t sub_100690228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 72);
  if (v5 >> 62 == 1)
  {
    v18 = *(_OWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 96);
    v20 = v6;
    v8 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 48);
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v11 = swift_retain_n(v9, 2);
    v12 = static MainActor.shared.getter(v11);
    v13 = (_QWORD *)swift_allocObject(&unk_101275D20, 40, 7);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v9;
    v14 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013EB368, (uint64_t)v13);
    sub_100690688(v9, v8, v7, v5);
    swift_release(v14);
  }
  sub_1004CBB0C(v1 + 16);

  sub_100690688(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  swift_release(*(_QWORD *)(v1 + 136));
  v15 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  v16 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_release(*(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_acknowledgeQueue));
  sub_100694EE0(*(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState), *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 8), *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 16), *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 24), *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 32), *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 40), *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 48));
  return v1;
}

uint64_t sub_100690434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006904A0, v6, v7);
}

uint64_t sub_1006904A0()
{
  uint64_t v0;
  double v1;

  swift_release(*(_QWORD *)(v0 + 24));
  if (qword_1013DD118 != -1)
    swift_once(&qword_1013DD118, sub_1007B5120);
  v1 = sub_1007B472C(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

uint64_t sub_100690508()
{
  uint64_t v0;

  sub_100690228();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10069052C()
{
  return _s10RepBackendCMa(0);
}

uint64_t _s10RepBackendCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1013EB1E8;
  if (!qword_1013EB1E8)
    return swift_getSingletonMetadata(a1, &_s10RepBackendCMn);
  return result;
}

uint64_t sub_100690570(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100F02C90;
  v4[1] = &unk_100F02CA8;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_100F02CC0;
  v4[4] = &unk_100F02CA8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = &unk_100F02CD8;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100690624(uint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (a4 >> 62 == 2)
  {
    sub_100689D34(a1, a2, a3);
  }
  else if ((a4 >> 62) <= 1)
  {
    swift_retain(a1);
  }
}

void _s10RepBackendC12BackendStateOwxx(uint64_t *a1)
{
  sub_100690688(*a1, a1[1], a1[2], a1[3]);
}

void sub_100690688(uint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (a4 >> 62 == 2)
  {
    sub_100689EEC(a1, a2, a3);
  }
  else if ((a4 >> 62) <= 1)
  {
    swift_release(a1);
  }
}

uint64_t *_s10RepBackendC12BackendStateOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  sub_100690624(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t *_s10RepBackendC12BackendStateOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v17 = a2[9];
  v18 = a2[10];
  sub_100690624(*a2, v4, v5, v6);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v17;
  a1[10] = v18;
  sub_100690688(v12, v13, v14, v15);
  return a1;
}

__n128 _s10RepBackendC12BackendStateOwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s10RepBackendC12BackendStateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v3;
  sub_100690688(v4, v6, v5, v7);
  return a1;
}

uint64_t _s10RepBackendC12BackendStateOwet(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 20);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double _s10RepBackendC12BackendStateOwst(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = (unint64_t)-a2 << 32;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100690984(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1006909A0(uint64_t result)
{
  *(_QWORD *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1006909B0(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(_QWORD *)(result + 16) = *(unsigned int *)(result + 16);
    *(_QWORD *)(result + 24) = a2 << 62;
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_QWORD *)(result + 80) = 0;
    *(_QWORD *)(result + 24) = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *_s10RepBackendC12BackendStateOMa()
{
  return &_s10RepBackendC12BackendStateON;
}

ValueMetadata *_s10RepBackendC5FlagsVMa()
{
  return &_s10RepBackendC5FlagsVN;
}

unint64_t sub_100690A10()
{
  unint64_t result;

  result = qword_1013EB2A8;
  if (!qword_1013EB2A8)
  {
    result = swift_getWitnessTable(&unk_100F02D34, &_s10RepBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1013EB2A8);
  }
  return result;
}

unint64_t sub_100690A58()
{
  unint64_t result;

  result = qword_1013EB2B0;
  if (!qword_1013EB2B0)
  {
    result = swift_getWitnessTable("=07", &_s10RepBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1013EB2B0);
  }
  return result;
}

unint64_t sub_100690AA0()
{
  unint64_t result;

  result = qword_1013EB2B8;
  if (!qword_1013EB2B8)
  {
    result = swift_getWitnessTable(&unk_100F02D5C, &_s10RepBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1013EB2B8);
  }
  return result;
}

unint64_t sub_100690AE8()
{
  unint64_t result;

  result = qword_1013EB2C0;
  if (!qword_1013EB2C0)
  {
    result = swift_getWitnessTable(&unk_100F02D94, &_s10RepBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_1013EB2C0);
  }
  return result;
}

void sub_100690B2C(uint64_t a1)
{
  _QWORD v2[12];
  _BYTE v3[24];

  sub_100694E14(a1, (uint64_t)v2);
  sub_100694E14(a1, (uint64_t)v3);
  __asm { BR              X11 }
}

void sub_100690B80()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 72) >> 62 == 1)
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_retain(v1);
  }
  else
  {
    v1 = 0;
  }
  swift_release(v1);
}

void sub_100690C78()
{
  __asm { BR              X10 }
}

void sub_100690CDC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _BYTE v42[56];
  uint64_t v43;

  *(_QWORD *)(v2 - 144) = 2;
  *(_QWORD *)(v2 - 136) = 0;
  *(_QWORD *)(v2 - 128) = 0;
  *(_QWORD *)(v2 - 120) = 0;
  *(_QWORD *)(v2 - 112) = 0;
  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = 0;
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v2 - 168, 0, 0);
  v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, &v43);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  v40 = v3;
  v41 = v1;
  v7 = UUID.uuidString.getter(v40);
  v9 = v8;
  v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
  v11 = String.subscript.getter(15, v10, v7, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v9);
  v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v22 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  sub_10068EAAC(v2 - 144, (uint64_t)v42);
  sub_100689CF4(2, 0, 0, 0, 0, v0, 0);
  v23 = String.init<A>(describing:)(v42, &type metadata for CRLUSDRendering.RendererState);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = v24;
  v26 = static os_log_type_t.debug.getter(v25);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v26, "(CoreRE) [%{public}@] new state: %{public}@", 43, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v27);

  Strong = swift_unknownObjectWeakLoadStrong(v41 + 16);
  if (Strong)
  {
    v29 = Strong;
    v30 = *(_QWORD *)(v41 + 24);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8))(v6, v2 - 144, ObjectType, v30);
    swift_unknownObjectRelease(v29);
  }
  sub_100689EAC(2, 0, 0, 0, 0, v0, 0);
  v32 = v41 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState;
  v33 = *(_QWORD *)(v41 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState);
  v34 = *(_QWORD *)(v41
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 8);
  v35 = *(_QWORD *)(v41
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 16);
  v36 = *(_QWORD *)(v41
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 24);
  v37 = *(_QWORD *)(v41
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 32);
  v38 = *(_QWORD *)(v41
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 40);
  v39 = *(_QWORD *)(v41
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 48);
  *(_OWORD *)v32 = 0u;
  *(_OWORD *)(v32 + 16) = 0u;
  *(_QWORD *)(v32 + 32) = 0;
  *(_OWORD *)(v32 + 40) = xmmword_100F02C30;
  sub_100694EE0(v33, v34, v35, v36, v37, v38, v39);
}

uint64_t sub_100690FE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_100691054, v3, v4);
}

uint64_t sub_100691054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_acknowledgeQueue);
  *(_QWORD *)(v0 + 56) = v2;
  swift_weakInit(v0 + 16, v1);
  return swift_task_switch(sub_1006910A4, v2, 0);
}

uint64_t sub_1006910A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  static Task<>.checkCancellation()(a1);
  v2 = *(_QWORD *)(v1 + 56);
  v3 = sub_100694E90();
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 64) = v4;
  *v4 = v1;
  v4[1] = sub_100691168;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v2, v3, 0xD000000000000013, 0x8000000100FC1C70, sub_100694ED8, *(_QWORD *)(v1 + 56), (char *)&type metadata for () + 8);
}

uint64_t sub_100691168()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10069126C;
  else
    v4 = sub_1006911CC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), 0);
}

uint64_t sub_1006911CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v1[9];
  result = static Task<>.checkCancellation()(a1);
  if (v2)
  {
    v4 = v1[7];
    v5 = *(_QWORD *)(v4 + 120);
    v6 = __OFSUB__(v5, 1);
    v7 = v5 - 1;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v4 + 120) = v7;
      sub_100957CC0();
      v1[12] = v2;
      return swift_task_switch(sub_100691394, v1[5], v1[6]);
    }
  }
  else
  {
    v8 = (_QWORD *)swift_task_alloc(dword_1013EB31C);
    v1[10] = v8;
    *v8 = v1;
    v8[1] = sub_100691284;
    return sub_100693FE8((uint64_t)v8, (uint64_t)(v1 + 2));
  }
  return result;
}

uint64_t sub_10069126C()
{
  _QWORD *v0;

  v0[12] = v0[9];
  return swift_task_switch(sub_100691394, v0[5], v0[6]);
}

uint64_t sub_100691284()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100691340;
  else
    v4 = sub_1006912E8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), 0);
}

uint64_t sub_1006912E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[7];
  v2 = *(_QWORD *)(v1 + 120);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 120) = v4;
    sub_100957CC0();
    swift_weakDestroy(v0 + 2);
    return swift_task_switch(sub_10053457C, v0[5], v0[6]);
  }
  return result;
}

uint64_t sub_100691340()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[7];
  v2 = *(_QWORD *)(v1 + 120);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 120) = v4;
    sub_100957CC0();
    v0[12] = v0[11];
    return swift_task_switch(sub_100691394, v0[5], v0[6]);
  }
  return result;
}

uint64_t sub_100691394()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_weakDestroy(v0 + 16);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006913DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[19] = a1;
  v2[20] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[21] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[22] = v4;
  v2[23] = v5;
  return swift_task_switch(sub_100691448, v4, v5);
}

uint64_t sub_100691448()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = v0[19];
  v2 = v0[20];
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 16, 0, 0);
  v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v3;
  v7 = UUID.uuidString.getter(v6);
  v9 = v8;
  v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
  v11 = String.subscript.getter(15, v10, v7, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v9);
  v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v22 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  v23 = sub_100952438();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = v24;
  v26 = static os_log_type_t.debug.getter(v25);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v26, "(CoreRE) [%{public}@] loadScene(%@)", 35, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v27);

  v28 = swift_task_alloc(32);
  v0[24] = v28;
  *(_QWORD *)(v28 + 16) = v2;
  *(_QWORD *)(v28 + 24) = v1;
  v29 = (_QWORD *)swift_task_alloc(dword_1013EB33C);
  v0[25] = v29;
  *v29 = v0;
  v29[1] = sub_100682540;
  return sub_100692584((uint64_t)v29, 0x6E65635364616F6CLL, 0xEB00000000292865, dword_1013EB330);
}

uint64_t sub_10069166C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[51] = a2;
  v3[52] = a3;
  v4 = sub_1004B804C(&qword_1013E04D0);
  v3[53] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v3[54] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[55] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[56] = swift_task_alloc(v7);
  v3[57] = swift_task_alloc(v7);
  v3[58] = swift_task_alloc(v7);
  v3[59] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v3[60] = v8;
  v3[61] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v3[62] = v9;
  v3[63] = v10;
  return swift_task_switch(sub_100691750, v9, v10);
}

uint64_t sub_100691750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Receipt;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[9];

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 440);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 408) + 40) & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 416);
    v5 = *(_QWORD *)(v0 + 424);
    v28[0] = 0;
    v6 = (uint64_t *)(v4 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 20));
    v7 = *v6;
    v8 = v6[1];
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v3(v5, v4, v1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v5, 0, 1, v1);
    URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)(v7, v8, 0, v5, v28);
    sub_1004CB800(v5, &qword_1013E04D0);
    v9 = *(_QWORD *)(v0 + 464);
    v10 = *(_QWORD *)(v0 + 472);
    v11 = *(_QWORD *)(v0 + 432);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 440) + 32);
    v12(v9, *(_QWORD *)(v0 + 456), v11);
    v12(v10, v9, v11);
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v3(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 432));
  }
  v13 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 440);
  v14 = *(_QWORD *)(v0 + 448);
  v16 = *(_QWORD *)(v0 + 432);
  v17 = *(_QWORD *)(v0 + 416);
  v3(v14, *(_QWORD *)(v0 + 472), v16);
  Receipt = type metadata accessor for CRLUSDRendering.LoadReceipt(0);
  v19 = swift_allocObject(Receipt, *(unsigned int *)(Receipt + 48), *(unsigned __int16 *)(Receipt + 52));
  *(_QWORD *)(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  *(_QWORD *)(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  *(_QWORD *)(v0 + 512) = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url, v14, v16);
  v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest);
  *(_QWORD *)(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  swift_release(v20);
  v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable);
  *(_QWORD *)(v19 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  swift_release(v21);
  v22 = v17 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 24);
  *(_DWORD *)(v0 + 744) = *(_DWORD *)v22;
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v0 + 392) = v23;
  *(_QWORD *)(v0 + 520) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v0 + 528) = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v0 + 536) = *(_QWORD *)(v22 + 48);
  *(_QWORD *)(v0 + 544) = *(_QWORD *)(v22 + 56);
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(v22 + 64);
  swift_retain(v19);
  *(_QWORD *)(v0 + 560) = static MainActor.shared.getter(v24);
  v25 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 568) = v25;
  *(_QWORD *)(v0 + 576) = v26;
  return swift_task_switch(sub_100691A58, v25, v26);
}

uint64_t sub_100691A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 552);
  v10 = *(_OWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  v9 = *(_OWORD *)(v0 + 384);
  v4 = *(unsigned int *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 512);
  v6 = *(_QWORD *)(v0 + 408);
  sub_100694E14(v6 + 48, v0 + 16);
  v13 = *(_QWORD *)(v6 + 56);
  v14 = *(_QWORD *)(v6 + 48);
  v12 = *(_QWORD *)(v6 + 64);
  v11 = *(_QWORD *)(v6 + 72);
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 56) = 0;
  *(_QWORD *)(v6 + 64) = v4;
  *(_QWORD *)(v6 + 72) = 0;
  *(_OWORD *)(v6 + 80) = v9;
  *(_QWORD *)(v6 + 96) = v3;
  *(_QWORD *)(v6 + 104) = v2;
  *(_OWORD *)(v6 + 112) = v10;
  *(_QWORD *)(v6 + 128) = v1;
  swift_retain_n(v5, 2);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690624);
  sub_100690688(v14, v13, v12, v11);
  sub_100690B2C(v0 + 16);
  swift_release(v5);
  sub_100694E3C((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100690688);
  v7 = (_QWORD *)swift_task_alloc(dword_1013EB30C);
  *(_QWORD *)(v0 + 584) = v7;
  *v7 = v0;
  v7[1] = sub_100691BB8;
  return sub_100690FE8();
}

uint64_t sub_100691BB8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 584));
  return swift_task_switch(sub_100691C08, *(_QWORD *)(v1 + 568), *(_QWORD *)(v1 + 576));
}

uint64_t sub_100691C08()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[64];
  swift_release(v0[70]);
  swift_release(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1013FBD74);
  v0[74] = v2;
  *v2 = v0;
  v2[1] = sub_100691C64;
  return sub_100956FAC();
}

uint64_t sub_100691C64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 592);
  v3[75] = a1;
  v3[76] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1006924EC;
  else
    v5 = sub_100691CD0;
  return swift_task_switch(v5, v3[62], v3[63]);
}

